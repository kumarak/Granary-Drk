int main ( int argc , char * argv [ ] ) ; 

/*--main--*/
struct symbol * find_symbol ( const char * name , enum symbol_type ns ) ; 
/*--find_symbol--*/
struct symbol * add_symbol ( const char * name , enum symbol_type type , struct string_list * defn , int is_extern ) ; 
/*--add_symbol--*/
void free_node ( struct string_list * node ) ; 
/*--free_node--*/
void free_list ( struct string_list * s , struct string_list * e ) ; 
/*--free_list--*/
struct string_list * copy_node ( struct string_list * node ) ; 
/*--copy_node--*/
void export_symbol ( const char * name ) ; 
/*--export_symbol--*/
void error_with_pos ( const char * fmt , ... ) ; 
/*--error_with_pos--*/
int main ( int argc , char * * argv ) ; 
void yyrestart ( FILE * input_file ) ; 
/*--yyrestart--*/
void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer ) ; 
/*--yy_switch_to_buffer--*/
YY_BUFFER_STATE yy_create_buffer ( FILE * file , int size ) ; 
/*--yy_create_buffer--*/
void yy_delete_buffer ( YY_BUFFER_STATE b ) ; 
/*--yy_delete_buffer--*/
void yy_flush_buffer ( YY_BUFFER_STATE b ) ; 
/*--yy_flush_buffer--*/
void yypush_buffer_state ( YY_BUFFER_STATE new_buffer ) ; 
/*--yypush_buffer_state--*/
void yypop_buffer_state ( void ) ; 
/*--yypop_buffer_state--*/
YY_BUFFER_STATE yy_scan_buffer ( char * base , yy_size_t size ) ; 
/*--yy_scan_buffer--*/
YY_BUFFER_STATE yy_scan_string ( const char * yystr ) ; 
/*--yy_scan_string--*/
YY_BUFFER_STATE yy_scan_bytes ( const char * yybytes , int _yybytes_len ) ; 
/*--yy_scan_bytes--*/
int yyget_lineno ( void ) ; 
/*--yyget_lineno--*/
FILE * yyget_in ( void ) ; 
/*--yyget_in--*/
FILE * yyget_out ( void ) ; 
/*--yyget_out--*/
int yyget_leng ( void ) ; 
/*--yyget_leng--*/
char * yyget_text ( void ) ; 
/*--yyget_text--*/
void yyset_lineno ( int line_number ) ; 
/*--yyset_lineno--*/
void yyset_in ( FILE * in_str ) ; 
/*--yyset_in--*/
void yyset_out ( FILE * out_str ) ; 
/*--yyset_out--*/
int yyget_debug ( void ) ; 
/*--yyget_debug--*/
void yyset_debug ( int bdebug ) ; 
/*--yyset_debug--*/
int yylex_destroy ( void ) ; 
/*--yylex_destroy--*/
void * yyalloc ( yy_size_t size ) ; 
/*--yyalloc--*/
void * yyrealloc ( void * ptr , yy_size_t size ) ; 
/*--yyrealloc--*/
void yyfree ( void * ptr ) ; 
/*--yyfree--*/
int yylex ( void ) ; 
/*--yylex--*/
int yyparse ( void ) ; 
/*--yyparse--*/
void handle_moddevtable ( struct module * mod , struct elf_info * info , Elf64_Sym * sym , const char * symname ) ; 
/*--handle_moddevtable--*/
void add_moddevtable ( struct buffer * buf , struct module * mod ) ; 
/*--add_moddevtable--*/
__attribute__ ( ( format ( printf , 1 , 2 ) ) ) void fatal ( const char * fmt , ... ) ; 
/*--fatal--*/
__attribute__ ( ( format ( printf , 1 , 2 ) ) ) void warn ( const char * fmt , ... ) ; 
/*--warn--*/
__attribute__ ( ( format ( printf , 1 , 2 ) ) ) void merror ( const char * fmt , ... ) ; 
/*--merror--*/
void * do_nofail ( void * ptr , const char * expr ) ; 
/*--do_nofail--*/
void * grab_file ( const char * filename , unsigned long * size ) ; 
/*--grab_file--*/
char * get_next_line ( unsigned long * pos , void * file , unsigned long size ) ; 
/*--get_next_line--*/
void release_file ( void * file , unsigned long size ) ; 
/*--release_file--*/
void __attribute__ ( ( format ( printf , 2 , 3 ) ) ) buf_printf ( struct buffer * buf , const char * fmt , ... ) ; 
/*--buf_printf--*/
void buf_write ( struct buffer * buf , const char * s , int len ) ; 
/*--buf_write--*/
void get_src_version ( const char * modname , char sum [ ] , unsigned sumlen ) ; 
/*--get_src_version--*/
void maybe_frob_rcs_version ( const char * modfilename , char * version , void * modinfo , unsigned long version_offset ) ; 
/*--maybe_frob_rcs_version--*/
void crypto_aes_encrypt_x86 ( struct crypto_aes_ctx * ctx , u8 * dst , const u8 * src ) ; 
/*--crypto_aes_encrypt_x86--*/
void crypto_aes_decrypt_x86 ( struct crypto_aes_ctx * ctx , u8 * dst , const u8 * src ) ; 
/*--crypto_aes_decrypt_x86--*/
unsigned int speedstep_get_frequency ( enum speedstep_processor processor ) ; 
/*--speedstep_get_frequency--*/
unsigned int speedstep_detect_processor ( void ) ; 
/*--speedstep_detect_processor--*/
unsigned int speedstep_get_freqs ( enum speedstep_processor processor , unsigned int * low_speed , unsigned int * high_speed , unsigned int * transition_latency , void ( * set_state ) ( unsigned int state ) ) ; 
/*--speedstep_get_freqs--*/
struct microcode_ops * __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) init_intel_microcode ( void ) ; 
/*--init_intel_microcode--*/
struct microcode_ops * __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) init_amd_microcode ( void ) ; 
/*--init_amd_microcode--*/
void vcpu_load ( struct kvm_vcpu * vcpu ) ; 
/*--vcpu_load--*/
void vcpu_put ( struct kvm_vcpu * vcpu ) ; 
/*--vcpu_put--*/
void kvm_flush_remote_tlbs ( struct kvm * kvm ) ; 
/*--kvm_flush_remote_tlbs--*/
void kvm_reload_remote_mmus ( struct kvm * kvm ) ; 
/*--kvm_reload_remote_mmus--*/
int kvm_vcpu_init ( struct kvm_vcpu * vcpu , struct kvm * kvm , unsigned id ) ; 
/*--kvm_vcpu_init--*/
void kvm_vcpu_uninit ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_vcpu_uninit--*/
void kvm_free_physmem ( struct kvm * kvm ) ; 
/*--kvm_free_physmem--*/
void kvm_get_kvm ( struct kvm * kvm ) ; 
/*--kvm_get_kvm--*/
void kvm_put_kvm ( struct kvm * kvm ) ; 
/*--kvm_put_kvm--*/
int __kvm_set_memory_region ( struct kvm * kvm , struct kvm_userspace_memory_region * mem , int user_alloc ) ; 
/*--__kvm_set_memory_region--*/
int kvm_set_memory_region ( struct kvm * kvm , struct kvm_userspace_memory_region * mem , int user_alloc ) ; 
/*--kvm_set_memory_region--*/
int kvm_vm_ioctl_set_memory_region ( struct kvm * kvm , struct kvm_userspace_memory_region * mem , int user_alloc ) ; 
/*--kvm_vm_ioctl_set_memory_region--*/
int kvm_get_dirty_log ( struct kvm * kvm , struct kvm_dirty_log * log , int * is_dirty ) ; 
/*--kvm_get_dirty_log--*/
void kvm_disable_largepages ( void ) ; 
/*--kvm_disable_largepages--*/
int is_error_page ( struct page * page ) ; 
/*--is_error_page--*/
int is_error_pfn ( pfn_t pfn ) ; 
/*--is_error_pfn--*/
int kvm_is_error_hva ( unsigned long addr ) ; 
/*--kvm_is_error_hva--*/
struct kvm_memory_slot * gfn_to_memslot_unaliased ( struct kvm * kvm , gfn_t gfn ) ; 
/*--gfn_to_memslot_unaliased--*/
struct kvm_memory_slot * gfn_to_memslot ( struct kvm * kvm , gfn_t gfn ) ; 
/*--gfn_to_memslot--*/
int kvm_is_visible_gfn ( struct kvm * kvm , gfn_t gfn ) ; 
/*--kvm_is_visible_gfn--*/
unsigned long kvm_host_page_size ( struct kvm * kvm , gfn_t gfn ) ; 
/*--kvm_host_page_size--*/
int memslot_id ( struct kvm * kvm , gfn_t gfn ) ; 
/*--memslot_id--*/
unsigned long gfn_to_hva ( struct kvm * kvm , gfn_t gfn ) ; 
/*--gfn_to_hva--*/
pfn_t gfn_to_pfn ( struct kvm * kvm , gfn_t gfn ) ; 
/*--gfn_to_pfn--*/
pfn_t gfn_to_pfn_memslot ( struct kvm * kvm , struct kvm_memory_slot * slot , gfn_t gfn ) ; 
/*--gfn_to_pfn_memslot--*/
struct page * gfn_to_page ( struct kvm * kvm , gfn_t gfn ) ; 
/*--gfn_to_page--*/
void kvm_release_page_clean ( struct page * page ) ; 
/*--kvm_release_page_clean--*/
void kvm_release_pfn_clean ( pfn_t pfn ) ; 
/*--kvm_release_pfn_clean--*/
void kvm_release_page_dirty ( struct page * page ) ; 
/*--kvm_release_page_dirty--*/
void kvm_release_pfn_dirty ( pfn_t pfn ) ; 
/*--kvm_release_pfn_dirty--*/
void kvm_set_page_dirty ( struct page * page ) ; 
/*--kvm_set_page_dirty--*/
void kvm_set_pfn_dirty ( pfn_t pfn ) ; 
/*--kvm_set_pfn_dirty--*/
void kvm_set_pfn_accessed ( pfn_t pfn ) ; 
/*--kvm_set_pfn_accessed--*/
void kvm_get_pfn ( pfn_t pfn ) ; 
/*--kvm_get_pfn--*/
int kvm_read_guest_page ( struct kvm * kvm , gfn_t gfn , void * data , int offset , int len ) ; 
/*--kvm_read_guest_page--*/
int kvm_read_guest ( struct kvm * kvm , gpa_t gpa , void * data , unsigned long len ) ; 
/*--kvm_read_guest--*/
int kvm_read_guest_atomic ( struct kvm * kvm , gpa_t gpa , void * data , unsigned long len ) ; 
/*--kvm_read_guest_atomic--*/
int kvm_write_guest_page ( struct kvm * kvm , gfn_t gfn , const void * data , int offset , int len ) ; 
/*--kvm_write_guest_page--*/
int kvm_write_guest ( struct kvm * kvm , gpa_t gpa , const void * data , unsigned long len ) ; 
/*--kvm_write_guest--*/
int kvm_clear_guest_page ( struct kvm * kvm , gfn_t gfn , int offset , int len ) ; 
/*--kvm_clear_guest_page--*/
int kvm_clear_guest ( struct kvm * kvm , gpa_t gpa , unsigned long len ) ; 
/*--kvm_clear_guest--*/
void mark_page_dirty ( struct kvm * kvm , gfn_t gfn ) ; 
/*--mark_page_dirty--*/
void kvm_vcpu_block ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_vcpu_block--*/
void kvm_resched ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_resched--*/
void kvm_vcpu_on_spin ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_vcpu_on_spin--*/
void kvm_handle_fault_on_reboot ( void ) ; 
/*--kvm_handle_fault_on_reboot--*/
int kvm_io_bus_write ( struct kvm * kvm , enum kvm_bus bus_idx , gpa_t addr , int len , const void * val ) ; 
/*--kvm_io_bus_write--*/
int kvm_io_bus_read ( struct kvm * kvm , enum kvm_bus bus_idx , gpa_t addr , int len , void * val ) ; 
/*--kvm_io_bus_read--*/
int kvm_io_bus_register_dev ( struct kvm * kvm , enum kvm_bus bus_idx , struct kvm_io_device * dev ) ; 
/*--kvm_io_bus_register_dev--*/
int kvm_io_bus_unregister_dev ( struct kvm * kvm , enum kvm_bus bus_idx , struct kvm_io_device * dev ) ; 
/*--kvm_io_bus_unregister_dev--*/
int kvm_init ( void * opaque , unsigned vcpu_size , unsigned vcpu_align , struct module * module ) ; 
/*--kvm_init--*/
void kvm_exit ( void ) ; 
/*--kvm_exit--*/
int kvm_ioapic_set_irq ( struct kvm_ioapic * ioapic , int irq , int level ) ; 
/*--kvm_ioapic_set_irq--*/
void kvm_ioapic_update_eoi ( struct kvm * kvm , int vector , int trigger_mode ) ; 
/*--kvm_ioapic_update_eoi--*/
void kvm_ioapic_reset ( struct kvm_ioapic * ioapic ) ; 
/*--kvm_ioapic_reset--*/
int kvm_ioapic_init ( struct kvm * kvm ) ; 
/*--kvm_ioapic_init--*/
void kvm_ioapic_destroy ( struct kvm * kvm ) ; 
/*--kvm_ioapic_destroy--*/
int kvm_get_ioapic ( struct kvm * kvm , struct kvm_ioapic_state * state ) ; 
/*--kvm_get_ioapic--*/
int kvm_set_ioapic ( struct kvm * kvm , struct kvm_ioapic_state * state ) ; 
/*--kvm_set_ioapic--*/
int kvm_coalesced_mmio_init ( struct kvm * kvm ) ; 
/*--kvm_coalesced_mmio_init--*/
void kvm_coalesced_mmio_free ( struct kvm * kvm ) ; 
/*--kvm_coalesced_mmio_free--*/
int kvm_vm_ioctl_register_coalesced_mmio ( struct kvm * kvm , struct kvm_coalesced_mmio_zone * zone ) ; 
/*--kvm_vm_ioctl_register_coalesced_mmio--*/
int kvm_vm_ioctl_unregister_coalesced_mmio ( struct kvm * kvm , struct kvm_coalesced_mmio_zone * zone ) ; 
/*--kvm_vm_ioctl_unregister_coalesced_mmio--*/
int kvm_irq_delivery_to_apic ( struct kvm * kvm , struct kvm_lapic * src , struct kvm_lapic_irq * irq ) ; 
/*--kvm_irq_delivery_to_apic--*/
int kvm_set_irq ( struct kvm * kvm , int irq_source_id , u32 irq , int level ) ; 
/*--kvm_set_irq--*/
void kvm_notify_acked_irq ( struct kvm * kvm , unsigned irqchip , unsigned pin ) ; 
/*--kvm_notify_acked_irq--*/
void kvm_register_irq_ack_notifier ( struct kvm * kvm , struct kvm_irq_ack_notifier * kian ) ; 
/*--kvm_register_irq_ack_notifier--*/
void kvm_unregister_irq_ack_notifier ( struct kvm * kvm , struct kvm_irq_ack_notifier * kian ) ; 
/*--kvm_unregister_irq_ack_notifier--*/
int kvm_request_irq_source_id ( struct kvm * kvm ) ; 
/*--kvm_request_irq_source_id--*/
void kvm_free_irq_source_id ( struct kvm * kvm , int irq_source_id ) ; 
/*--kvm_free_irq_source_id--*/
void kvm_register_irq_mask_notifier ( struct kvm * kvm , int irq , struct kvm_irq_mask_notifier * kimn ) ; 
/*--kvm_register_irq_mask_notifier--*/
void kvm_unregister_irq_mask_notifier ( struct kvm * kvm , int irq , struct kvm_irq_mask_notifier * kimn ) ; 
/*--kvm_unregister_irq_mask_notifier--*/
void kvm_fire_mask_notifiers ( struct kvm * kvm , int irq , bool mask ) ; 
/*--kvm_fire_mask_notifiers--*/
void kvm_free_irq_routing ( struct kvm * kvm ) ; 
/*--kvm_free_irq_routing--*/
int kvm_set_irq_routing ( struct kvm * kvm , const struct kvm_irq_routing_entry * ue , unsigned nr , unsigned flags ) ; 
/*--kvm_set_irq_routing--*/
int kvm_setup_default_irq_routing ( struct kvm * kvm ) ; 
/*--kvm_setup_default_irq_routing--*/
void kvm_eventfd_init ( struct kvm * kvm ) ; 
/*--kvm_eventfd_init--*/
int kvm_irqfd ( struct kvm * kvm , int fd , int gsi , int flags ) ; 
/*--kvm_irqfd--*/
void kvm_irqfd_release ( struct kvm * kvm ) ; 
/*--kvm_irqfd_release--*/
int kvm_ioeventfd ( struct kvm * kvm , struct kvm_ioeventfd * args ) ; 
/*--kvm_ioeventfd--*/
void kvm_free_all_assigned_devices ( struct kvm * kvm ) ; 
/*--kvm_free_all_assigned_devices--*/
long kvm_vm_ioctl_assigned_device ( struct kvm * kvm , unsigned ioctl , unsigned long arg ) ; 
/*--kvm_vm_ioctl_assigned_device--*/
int kvm_iommu_map_pages ( struct kvm * kvm , struct kvm_memory_slot * slot ) ; 
/*--kvm_iommu_map_pages--*/
int kvm_assign_device ( struct kvm * kvm , struct kvm_assigned_dev_kernel * assigned_dev ) ; 
/*--kvm_assign_device--*/
int kvm_deassign_device ( struct kvm * kvm , struct kvm_assigned_dev_kernel * assigned_dev ) ; 
/*--kvm_deassign_device--*/
int kvm_iommu_map_guest ( struct kvm * kvm ) ; 
/*--kvm_iommu_map_guest--*/
int kvm_iommu_unmap_guest ( struct kvm * kvm ) ; 
/*--kvm_iommu_unmap_guest--*/
void kvm_define_shared_msr ( unsigned slot , u32 msr ) ; 
/*--kvm_define_shared_msr--*/
void kvm_set_shared_msr ( unsigned slot , u64 value , u64 mask ) ; 
/*--kvm_set_shared_msr--*/
u64 kvm_get_apic_base ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_get_apic_base--*/
void kvm_set_apic_base ( struct kvm_vcpu * vcpu , u64 data ) ; 
/*--kvm_set_apic_base--*/
void kvm_queue_exception ( struct kvm_vcpu * vcpu , unsigned nr ) ; 
/*--kvm_queue_exception--*/
void kvm_requeue_exception ( struct kvm_vcpu * vcpu , unsigned nr ) ; 
/*--kvm_requeue_exception--*/
void kvm_inject_page_fault ( struct kvm_vcpu * vcpu , unsigned long addr , u32 error_code ) ; 
/*--kvm_inject_page_fault--*/
void kvm_inject_nmi ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_inject_nmi--*/
void kvm_queue_exception_e ( struct kvm_vcpu * vcpu , unsigned nr , u32 error_code ) ; 
/*--kvm_queue_exception_e--*/
void kvm_requeue_exception_e ( struct kvm_vcpu * vcpu , unsigned nr , u32 error_code ) ; 
/*--kvm_requeue_exception_e--*/
bool kvm_require_cpl ( struct kvm_vcpu * vcpu , int required_cpl ) ; 
/*--kvm_require_cpl--*/
int load_pdptrs ( struct kvm_vcpu * vcpu , unsigned long cr3 ) ; 
/*--load_pdptrs--*/
void kvm_set_cr0 ( struct kvm_vcpu * vcpu , unsigned long cr0 ) ; 
/*--kvm_set_cr0--*/
void kvm_lmsw ( struct kvm_vcpu * vcpu , unsigned long msw ) ; 
/*--kvm_lmsw--*/
void kvm_set_cr4 ( struct kvm_vcpu * vcpu , unsigned long cr4 ) ; 
/*--kvm_set_cr4--*/
void kvm_set_cr3 ( struct kvm_vcpu * vcpu , unsigned long cr3 ) ; 
/*--kvm_set_cr3--*/
void kvm_set_cr8 ( struct kvm_vcpu * vcpu , unsigned long cr8 ) ; 
/*--kvm_set_cr8--*/
unsigned long kvm_get_cr8 ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_get_cr8--*/
int kvm_set_dr ( struct kvm_vcpu * vcpu , int dr , unsigned long val ) ; 
/*--kvm_set_dr--*/
int kvm_get_dr ( struct kvm_vcpu * vcpu , int dr , unsigned long * val ) ; 
/*--kvm_get_dr--*/
void kvm_enable_efer_bits ( u64 mask ) ; 
/*--kvm_enable_efer_bits--*/
int kvm_set_msr ( struct kvm_vcpu * vcpu , u32 msr_index , u64 data ) ; 
/*--kvm_set_msr--*/
int kvm_set_msr_common ( struct kvm_vcpu * vcpu , u32 msr , u64 data ) ; 
/*--kvm_set_msr_common--*/
int kvm_get_msr ( struct kvm_vcpu * vcpu , u32 msr_index , u64 * pdata ) ; 
/*--kvm_get_msr--*/
int kvm_get_msr_common ( struct kvm_vcpu * vcpu , u32 msr , u64 * pdata ) ; 
/*--kvm_get_msr_common--*/
int kvm_dev_ioctl_check_extension ( long ext ) ; 
/*--kvm_dev_ioctl_check_extension--*/
long kvm_arch_dev_ioctl ( struct file * filp , unsigned int ioctl , unsigned long arg ) ; 
/*--kvm_arch_dev_ioctl--*/
void kvm_arch_vcpu_load ( struct kvm_vcpu * vcpu , int cpu ) ; 
/*--kvm_arch_vcpu_load--*/
void kvm_arch_vcpu_put ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_vcpu_put--*/
long kvm_arch_vcpu_ioctl ( struct file * filp , unsigned int ioctl , unsigned long arg ) ; 
/*--kvm_arch_vcpu_ioctl--*/
gfn_t unalias_gfn_instantiation ( struct kvm * kvm , gfn_t gfn ) ; 
/*--unalias_gfn_instantiation--*/
gfn_t unalias_gfn ( struct kvm * kvm , gfn_t gfn ) ; 
/*--unalias_gfn--*/
int kvm_vm_ioctl_get_dirty_log ( struct kvm * kvm , struct kvm_dirty_log * log ) ; 
/*--kvm_vm_ioctl_get_dirty_log--*/
long kvm_arch_vm_ioctl ( struct file * filp , unsigned int ioctl , unsigned long arg ) ; 
/*--kvm_arch_vm_ioctl--*/
void kvm_get_segment ( struct kvm_vcpu * vcpu , struct kvm_segment * var , int seg ) ; 
/*--kvm_get_segment--*/
gpa_t kvm_mmu_gva_to_gpa_read ( struct kvm_vcpu * vcpu , gva_t gva , u32 * error ) ; 
/*--kvm_mmu_gva_to_gpa_read--*/
gpa_t kvm_mmu_gva_to_gpa_fetch ( struct kvm_vcpu * vcpu , gva_t gva , u32 * error ) ; 
/*--kvm_mmu_gva_to_gpa_fetch--*/
gpa_t kvm_mmu_gva_to_gpa_write ( struct kvm_vcpu * vcpu , gva_t gva , u32 * error ) ; 
/*--kvm_mmu_gva_to_gpa_write--*/
gpa_t kvm_mmu_gva_to_gpa_system ( struct kvm_vcpu * vcpu , gva_t gva , u32 * error ) ; 
/*--kvm_mmu_gva_to_gpa_system--*/
int emulator_write_phys ( struct kvm_vcpu * vcpu , gpa_t gpa , const void * val , int bytes ) ; 
/*--emulator_write_phys--*/
int emulator_write_emulated ( unsigned long addr , const void * val , unsigned int bytes , struct kvm_vcpu * vcpu ) ; 
/*--emulator_write_emulated--*/
int emulate_invlpg ( struct kvm_vcpu * vcpu , gva_t address ) ; 
/*--emulate_invlpg--*/
int emulate_clts ( struct kvm_vcpu * vcpu ) ; 
/*--emulate_clts--*/
int emulator_get_dr ( struct x86_emulate_ctxt * ctxt , int dr , unsigned long * dest ) ; 
/*--emulator_get_dr--*/
int emulator_set_dr ( struct x86_emulate_ctxt * ctxt , int dr , unsigned long value ) ; 
/*--emulator_set_dr--*/
void kvm_report_emulation_failure ( struct kvm_vcpu * vcpu , const char * context ) ; 
/*--kvm_report_emulation_failure--*/
int emulate_instruction ( struct kvm_vcpu * vcpu , unsigned long cr2 , u16 error_code , int emulation_type ) ; 
/*--emulate_instruction--*/
int kvm_fast_pio_out ( struct kvm_vcpu * vcpu , int size , unsigned short port ) ; 
/*--kvm_fast_pio_out--*/
void kvm_before_handle_nmi ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_before_handle_nmi--*/
void kvm_after_handle_nmi ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_after_handle_nmi--*/
int kvm_arch_init ( void * opaque ) ; 
/*--kvm_arch_init--*/
void kvm_arch_exit ( void ) ; 
/*--kvm_arch_exit--*/
int kvm_emulate_halt ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_emulate_halt--*/
int kvm_hv_hypercall ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_hv_hypercall--*/
int kvm_emulate_hypercall ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_emulate_hypercall--*/
int kvm_fix_hypercall ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_fix_hypercall--*/
void realmode_lgdt ( struct kvm_vcpu * vcpu , u16 limit , unsigned long base ) ; 
/*--realmode_lgdt--*/
void realmode_lidt ( struct kvm_vcpu * vcpu , u16 limit , unsigned long base ) ; 
/*--realmode_lidt--*/
struct kvm_cpuid_entry2 * kvm_find_cpuid_entry ( struct kvm_vcpu * vcpu , u32 function , u32 index ) ; 
/*--kvm_find_cpuid_entry--*/
int cpuid_maxphyaddr ( struct kvm_vcpu * vcpu ) ; 
/*--cpuid_maxphyaddr--*/
void kvm_emulate_cpuid ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_emulate_cpuid--*/
int kvm_arch_vcpu_ioctl_run ( struct kvm_vcpu * vcpu , struct kvm_run * kvm_run ) ; 
/*--kvm_arch_vcpu_ioctl_run--*/
int kvm_arch_vcpu_ioctl_get_regs ( struct kvm_vcpu * vcpu , struct kvm_regs * regs ) ; 
/*--kvm_arch_vcpu_ioctl_get_regs--*/
int kvm_arch_vcpu_ioctl_set_regs ( struct kvm_vcpu * vcpu , struct kvm_regs * regs ) ; 
/*--kvm_arch_vcpu_ioctl_set_regs--*/
void kvm_get_cs_db_l_bits ( struct kvm_vcpu * vcpu , int * db , int * l ) ; 
/*--kvm_get_cs_db_l_bits--*/
int kvm_arch_vcpu_ioctl_get_sregs ( struct kvm_vcpu * vcpu , struct kvm_sregs * sregs ) ; 
/*--kvm_arch_vcpu_ioctl_get_sregs--*/
int kvm_arch_vcpu_ioctl_get_mpstate ( struct kvm_vcpu * vcpu , struct kvm_mp_state * mp_state ) ; 
/*--kvm_arch_vcpu_ioctl_get_mpstate--*/
int kvm_arch_vcpu_ioctl_set_mpstate ( struct kvm_vcpu * vcpu , struct kvm_mp_state * mp_state ) ; 
/*--kvm_arch_vcpu_ioctl_set_mpstate--*/
int kvm_task_switch ( struct kvm_vcpu * vcpu , u16 tss_selector , int reason , bool has_error_code , u32 error_code ) ; 
/*--kvm_task_switch--*/
int kvm_arch_vcpu_ioctl_set_sregs ( struct kvm_vcpu * vcpu , struct kvm_sregs * sregs ) ; 
/*--kvm_arch_vcpu_ioctl_set_sregs--*/
int kvm_arch_vcpu_ioctl_set_guest_debug ( struct kvm_vcpu * vcpu , struct kvm_guest_debug * dbg ) ; 
/*--kvm_arch_vcpu_ioctl_set_guest_debug--*/
int kvm_arch_vcpu_ioctl_translate ( struct kvm_vcpu * vcpu , struct kvm_translation * tr ) ; 
/*--kvm_arch_vcpu_ioctl_translate--*/
int kvm_arch_vcpu_ioctl_get_fpu ( struct kvm_vcpu * vcpu , struct kvm_fpu * fpu ) ; 
/*--kvm_arch_vcpu_ioctl_get_fpu--*/
int kvm_arch_vcpu_ioctl_set_fpu ( struct kvm_vcpu * vcpu , struct kvm_fpu * fpu ) ; 
/*--kvm_arch_vcpu_ioctl_set_fpu--*/
void fx_init ( struct kvm_vcpu * vcpu ) ; 
/*--fx_init--*/
void kvm_load_guest_fpu ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_load_guest_fpu--*/
void kvm_put_guest_fpu ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_put_guest_fpu--*/
void kvm_arch_vcpu_free ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_vcpu_free--*/
struct kvm_vcpu * kvm_arch_vcpu_create ( struct kvm * kvm , unsigned int id ) ; 
/*--kvm_arch_vcpu_create--*/
int kvm_arch_vcpu_setup ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_vcpu_setup--*/
void kvm_arch_vcpu_destroy ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_vcpu_destroy--*/
int kvm_arch_vcpu_reset ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_vcpu_reset--*/
int kvm_arch_hardware_enable ( void * garbage ) ; 
/*--kvm_arch_hardware_enable--*/
void kvm_arch_hardware_disable ( void * garbage ) ; 
/*--kvm_arch_hardware_disable--*/
int kvm_arch_hardware_setup ( void ) ; 
/*--kvm_arch_hardware_setup--*/
void kvm_arch_hardware_unsetup ( void ) ; 
/*--kvm_arch_hardware_unsetup--*/
void kvm_arch_check_processor_compat ( void * rtn ) ; 
/*--kvm_arch_check_processor_compat--*/
int kvm_arch_vcpu_init ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_vcpu_init--*/
void kvm_arch_vcpu_uninit ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_vcpu_uninit--*/
struct kvm * kvm_arch_create_vm ( void ) ; 
/*--kvm_arch_create_vm--*/
void kvm_arch_sync_events ( struct kvm * kvm ) ; 
/*--kvm_arch_sync_events--*/
void kvm_arch_destroy_vm ( struct kvm * kvm ) ; 
/*--kvm_arch_destroy_vm--*/
int kvm_arch_prepare_memory_region ( struct kvm * kvm , struct kvm_memory_slot * memslot , struct kvm_memory_slot old , struct kvm_userspace_memory_region * mem , int user_alloc ) ; 
/*--kvm_arch_prepare_memory_region--*/
void kvm_arch_commit_memory_region ( struct kvm * kvm , struct kvm_userspace_memory_region * mem , struct kvm_memory_slot old , int user_alloc ) ; 
/*--kvm_arch_commit_memory_region--*/
void kvm_arch_flush_shadow ( struct kvm * kvm ) ; 
/*--kvm_arch_flush_shadow--*/
int kvm_arch_vcpu_runnable ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_vcpu_runnable--*/
void kvm_vcpu_kick ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_vcpu_kick--*/
int kvm_arch_interrupt_allowed ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_arch_interrupt_allowed--*/
bool kvm_is_linear_rip ( struct kvm_vcpu * vcpu , unsigned long linear_rip ) ; 
/*--kvm_is_linear_rip--*/
unsigned long kvm_get_rflags ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_get_rflags--*/
void kvm_set_rflags ( struct kvm_vcpu * vcpu , unsigned long rflags ) ; 
/*--kvm_set_rflags--*/
void kvm_mmu_set_nonpresent_ptes ( u64 trap_pte , u64 notrap_pte ) ; 
/*--kvm_mmu_set_nonpresent_ptes--*/
void kvm_mmu_set_base_ptes ( u64 base_pte ) ; 
/*--kvm_mmu_set_base_ptes--*/
void kvm_mmu_set_mask_ptes ( u64 user_mask , u64 accessed_mask , u64 dirty_mask , u64 nx_mask , u64 x_mask ) ; 
/*--kvm_mmu_set_mask_ptes--*/
int kvm_unmap_hva ( struct kvm * kvm , unsigned long hva ) ; 
/*--kvm_unmap_hva--*/
void kvm_set_spte_hva ( struct kvm * kvm , unsigned long hva , pte_t pte ) ; 
/*--kvm_set_spte_hva--*/
int kvm_age_hva ( struct kvm * kvm , unsigned long hva ) ; 
/*--kvm_age_hva--*/
void kvm_mmu_change_mmu_pages ( struct kvm * kvm , unsigned int kvm_nr_mmu_pages ) ; 
/*--kvm_mmu_change_mmu_pages--*/
u8 kvm_get_guest_memory_type ( struct kvm_vcpu * vcpu , gfn_t gfn ) ; 
/*--kvm_get_guest_memory_type--*/
void kvm_mmu_sync_roots ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_mmu_sync_roots--*/
void kvm_mmu_flush_tlb ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_mmu_flush_tlb--*/
int kvm_mmu_reset_context ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_mmu_reset_context--*/
int kvm_mmu_load ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_mmu_load--*/
void kvm_mmu_unload ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_mmu_unload--*/
void kvm_mmu_pte_write ( struct kvm_vcpu * vcpu , gpa_t gpa , const u8 * new , int bytes , bool guest_initiated ) ; 
/*--kvm_mmu_pte_write--*/
int kvm_mmu_unprotect_page_virt ( struct kvm_vcpu * vcpu , gva_t gva ) ; 
/*--kvm_mmu_unprotect_page_virt--*/
void __kvm_mmu_free_some_pages ( struct kvm_vcpu * vcpu ) ; 
/*--__kvm_mmu_free_some_pages--*/
int kvm_mmu_page_fault ( struct kvm_vcpu * vcpu , gva_t cr2 , u32 error_code ) ; 
/*--kvm_mmu_page_fault--*/
void kvm_mmu_invlpg ( struct kvm_vcpu * vcpu , gva_t gva ) ; 
/*--kvm_mmu_invlpg--*/
void kvm_enable_tdp ( void ) ; 
/*--kvm_enable_tdp--*/
void kvm_disable_tdp ( void ) ; 
/*--kvm_disable_tdp--*/
int kvm_mmu_create ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_mmu_create--*/
int kvm_mmu_setup ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_mmu_setup--*/
void kvm_mmu_destroy ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_mmu_destroy--*/
void kvm_mmu_slot_remove_write_access ( struct kvm * kvm , int slot ) ; 
/*--kvm_mmu_slot_remove_write_access--*/
void kvm_mmu_zap_all ( struct kvm * kvm ) ; 
/*--kvm_mmu_zap_all--*/
void kvm_mmu_module_exit ( void ) ; 
/*--kvm_mmu_module_exit--*/
int kvm_mmu_module_init ( void ) ; 
/*--kvm_mmu_module_init--*/
unsigned int kvm_mmu_calculate_mmu_pages ( struct kvm * kvm ) ; 
/*--kvm_mmu_calculate_mmu_pages--*/
int kvm_pv_mmu_op ( struct kvm_vcpu * vcpu , unsigned long bytes , gpa_t addr , unsigned long * ret ) ; 
/*--kvm_pv_mmu_op--*/
int kvm_mmu_get_spte_hierarchy ( struct kvm_vcpu * vcpu , u64 addr , u64 sptes [ 4 ] ) ; 
/*--kvm_mmu_get_spte_hierarchy--*/
int x86_decode_insn ( struct x86_emulate_ctxt * ctxt , struct x86_emulate_ops * ops ) ; 
/*--x86_decode_insn--*/
int emulator_task_switch ( struct x86_emulate_ctxt * ctxt , struct x86_emulate_ops * ops , u16 tss_selector , int reason , bool has_error_code , u32 error_code ) ; 
/*--emulator_task_switch--*/
int x86_emulate_insn ( struct x86_emulate_ctxt * ctxt , struct x86_emulate_ops * ops ) ; 
/*--x86_emulate_insn--*/
void kvm_pic_clear_isr_ack ( struct kvm * kvm ) ; 
/*--kvm_pic_clear_isr_ack--*/
void kvm_pic_update_irq ( struct kvm_pic * s ) ; 
/*--kvm_pic_update_irq--*/
int kvm_pic_set_irq ( void * opaque , int irq , int level ) ; 
/*--kvm_pic_set_irq--*/
int kvm_pic_read_irq ( struct kvm * kvm ) ; 
/*--kvm_pic_read_irq--*/
void kvm_pic_reset ( struct kvm_kpic_state * s ) ; 
/*--kvm_pic_reset--*/
struct kvm_pic * kvm_create_pic ( struct kvm * kvm ) ; 
/*--kvm_create_pic--*/
void kvm_destroy_pic ( struct kvm * kvm ) ; 
/*--kvm_destroy_pic--*/
int kvm_cpu_has_pending_timer ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_cpu_has_pending_timer--*/
int kvm_cpu_has_interrupt ( struct kvm_vcpu * v ) ; 
/*--kvm_cpu_has_interrupt--*/
int kvm_cpu_get_interrupt ( struct kvm_vcpu * v ) ; 
/*--kvm_cpu_get_interrupt--*/
void kvm_inject_pending_timer_irqs ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_inject_pending_timer_irqs--*/
void __kvm_migrate_timers ( struct kvm_vcpu * vcpu ) ; 
/*--__kvm_migrate_timers--*/
void kvm_apic_set_version ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_apic_set_version--*/
int kvm_lapic_find_highest_irr ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_lapic_find_highest_irr--*/
int kvm_apic_set_irq ( struct kvm_vcpu * vcpu , struct kvm_lapic_irq * irq ) ; 
/*--kvm_apic_set_irq--*/
int kvm_apic_match_physical_addr ( struct kvm_lapic * apic , u16 dest ) ; 
/*--kvm_apic_match_physical_addr--*/
int kvm_apic_match_logical_addr ( struct kvm_lapic * apic , u8 mda ) ; 
/*--kvm_apic_match_logical_addr--*/
int kvm_apic_match_dest ( struct kvm_vcpu * vcpu , struct kvm_lapic * source , int short_hand , int dest , int dest_mode ) ; 
/*--kvm_apic_match_dest--*/
int kvm_apic_compare_prio ( struct kvm_vcpu * vcpu1 , struct kvm_vcpu * vcpu2 ) ; 
/*--kvm_apic_compare_prio--*/
void kvm_free_lapic ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_free_lapic--*/
void kvm_lapic_set_tpr ( struct kvm_vcpu * vcpu , unsigned long cr8 ) ; 
/*--kvm_lapic_set_tpr--*/
u64 kvm_lapic_get_cr8 ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_lapic_get_cr8--*/
void kvm_lapic_set_base ( struct kvm_vcpu * vcpu , u64 value ) ; 
/*--kvm_lapic_set_base--*/
void kvm_lapic_reset ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_lapic_reset--*/
bool kvm_apic_present ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_apic_present--*/
int kvm_lapic_enabled ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_lapic_enabled--*/
int apic_has_pending_timer ( struct kvm_vcpu * vcpu ) ; 
/*--apic_has_pending_timer--*/
void kvm_apic_nmi_wd_deliver ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_apic_nmi_wd_deliver--*/
int kvm_create_lapic ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_create_lapic--*/
int kvm_apic_has_interrupt ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_apic_has_interrupt--*/
int kvm_apic_accept_pic_intr ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_apic_accept_pic_intr--*/
void kvm_inject_apic_timer_irqs ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_inject_apic_timer_irqs--*/
int kvm_get_apic_interrupt ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_get_apic_interrupt--*/
void kvm_apic_post_state_restore ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_apic_post_state_restore--*/
void __kvm_migrate_apic_timer ( struct kvm_vcpu * vcpu ) ; 
/*--__kvm_migrate_apic_timer--*/
void kvm_lapic_sync_from_vapic ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_lapic_sync_from_vapic--*/
void kvm_lapic_sync_to_vapic ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_lapic_sync_to_vapic--*/
void kvm_lapic_set_vapic_addr ( struct kvm_vcpu * vcpu , gpa_t vapic_addr ) ; 
/*--kvm_lapic_set_vapic_addr--*/
int kvm_x2apic_msr_write ( struct kvm_vcpu * vcpu , u32 msr , u64 data ) ; 
/*--kvm_x2apic_msr_write--*/
int kvm_x2apic_msr_read ( struct kvm_vcpu * vcpu , u32 msr , u64 * data ) ; 
/*--kvm_x2apic_msr_read--*/
int kvm_hv_vapic_msr_write ( struct kvm_vcpu * vcpu , u32 reg , u64 data ) ; 
/*--kvm_hv_vapic_msr_write--*/
int kvm_hv_vapic_msr_read ( struct kvm_vcpu * vcpu , u32 reg , u64 * data ) ; 
/*--kvm_hv_vapic_msr_read--*/
int pit_has_pending_timer ( struct kvm_vcpu * vcpu ) ; 
/*--pit_has_pending_timer--*/
void __kvm_migrate_pit_timer ( struct kvm_vcpu * vcpu ) ; 
/*--__kvm_migrate_pit_timer--*/
void kvm_pit_load_count ( struct kvm * kvm , int channel , u32 val , int hpet_legacy_start ) ; 
/*--kvm_pit_load_count--*/
void kvm_pit_reset ( struct kvm_pit * pit ) ; 
/*--kvm_pit_reset--*/
struct kvm_pit * kvm_create_pit ( struct kvm * kvm , u32 flags ) ; 
/*--kvm_create_pit--*/
void kvm_free_pit ( struct kvm * kvm ) ; 
/*--kvm_free_pit--*/
void kvm_inject_pit_timer_irqs ( struct kvm_vcpu * vcpu ) ; 
/*--kvm_inject_pit_timer_irqs--*/
enum hrtimer_restart kvm_timer_fn ( struct hrtimer * data ) ; 
/*--kvm_timer_fn--*/
int v9fs_uflags2omode ( int uflags , int extended ) ; 
/*--v9fs_uflags2omode--*/
void v9fs_blank_wstat ( struct p9_wstat * wstat ) ; 
/*--v9fs_blank_wstat--*/
struct inode * v9fs_get_inode ( struct super_block * sb , int mode ) ; 
/*--v9fs_get_inode--*/
void v9fs_clear_inode ( struct inode * inode ) ; 
/*--v9fs_clear_inode--*/
void v9fs_stat2inode ( struct p9_wstat * stat , struct inode * inode , struct super_block * sb ) ; 
/*--v9fs_stat2inode--*/
ino_t v9fs_qid2ino ( struct p9_qid * qid ) ; 
/*--v9fs_qid2ino--*/
int v9fs_file_open ( struct inode * inode , struct file * file ) ; 
/*--v9fs_file_open--*/
ssize_t v9fs_file_readn ( struct file * filp , char * data , char * udata , u32 count , u64 offset ) ; 
/*--v9fs_file_readn--*/
int v9fs_dir_release ( struct inode * inode , struct file * filp ) ; 
/*--v9fs_dir_release--*/
void v9fs_dentry_release ( struct dentry * dentry ) ; 
/*--v9fs_dentry_release--*/
struct p9_fid * v9fs_session_init ( struct v9fs_session_info * v9ses , const char * dev_name , char * data ) ; 
/*--v9fs_session_init--*/
void v9fs_session_close ( struct v9fs_session_info * v9ses ) ; 
/*--v9fs_session_close--*/
void v9fs_session_cancel ( struct v9fs_session_info * v9ses ) ; 
/*--v9fs_session_cancel--*/
void v9fs_session_begin_cancel ( struct v9fs_session_info * v9ses ) ; 
/*--v9fs_session_begin_cancel--*/
int v9fs_fid_add ( struct dentry * dentry , struct p9_fid * fid ) ; 
/*--v9fs_fid_add--*/
struct p9_fid * v9fs_fid_lookup ( struct dentry * dentry ) ; 
/*--v9fs_fid_lookup--*/
struct p9_fid * v9fs_fid_clone ( struct dentry * dentry ) ; 
/*--v9fs_fid_clone--*/
int adfs_dir_update ( struct super_block * sb , struct object_info * obj , int wait ) ; 
/*--adfs_dir_update--*/
struct inode * adfs_iget ( struct super_block * sb , struct object_info * obj ) ; 
/*--adfs_iget--*/
int adfs_notify_change ( struct dentry * dentry , struct iattr * attr ) ; 
/*--adfs_notify_change--*/
int adfs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--adfs_write_inode--*/
unsigned int adfs_map_free ( struct super_block * sb ) ; 
/*--adfs_map_free--*/
int adfs_map_lookup ( struct super_block * sb , unsigned int frag_id , unsigned int offset ) ; 
/*--adfs_map_lookup--*/
void __adfs_error ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--__adfs_error--*/
int affs_hash_name ( struct super_block * sb , const u8 * name , unsigned int len ) ; 
/*--affs_hash_name--*/
struct dentry * affs_lookup ( struct inode * dir , struct dentry * dentry , struct nameidata * nd ) ; 
/*--affs_lookup--*/
int affs_unlink ( struct inode * dir , struct dentry * dentry ) ; 
/*--affs_unlink--*/
int affs_create ( struct inode * dir , struct dentry * dentry , int mode , struct nameidata * nd ) ; 
/*--affs_create--*/
int affs_mkdir ( struct inode * dir , struct dentry * dentry , int mode ) ; 
/*--affs_mkdir--*/
int affs_rmdir ( struct inode * dir , struct dentry * dentry ) ; 
/*--affs_rmdir--*/
int affs_symlink ( struct inode * dir , struct dentry * dentry , const char * symname ) ; 
/*--affs_symlink--*/
int affs_link ( struct dentry * old_dentry , struct inode * dir , struct dentry * dentry ) ; 
/*--affs_link--*/
int affs_rename ( struct inode * old_dir , struct dentry * old_dentry , struct inode * new_dir , struct dentry * new_dentry ) ; 
/*--affs_rename--*/
struct inode * affs_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--affs_iget--*/
int affs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--affs_write_inode--*/
int affs_notify_change ( struct dentry * dentry , struct iattr * attr ) ; 
/*--affs_notify_change--*/
void affs_delete_inode ( struct inode * inode ) ; 
/*--affs_delete_inode--*/
void affs_clear_inode ( struct inode * inode ) ; 
/*--affs_clear_inode--*/
struct inode * affs_new_inode ( struct inode * dir ) ; 
/*--affs_new_inode--*/
int affs_add_entry ( struct inode * dir , struct inode * inode , struct dentry * dentry , s32 type ) ; 
/*--affs_add_entry--*/
void affs_free_prealloc ( struct inode * inode ) ; 
/*--affs_free_prealloc--*/
void affs_truncate ( struct inode * inode ) ; 
/*--affs_truncate--*/
int affs_file_fsync ( struct file * filp , int datasync ) ; 
/*--affs_file_fsync--*/
int affs_insert_hash ( struct inode * dir , struct buffer_head * bh ) ; 
/*--affs_insert_hash--*/
int affs_remove_hash ( struct inode * dir , struct buffer_head * rem_bh ) ; 
/*--affs_remove_hash--*/
int affs_remove_header ( struct dentry * dentry ) ; 
/*--affs_remove_header--*/
u32 affs_checksum_block ( struct super_block * sb , struct buffer_head * bh ) ; 
/*--affs_checksum_block--*/
void affs_fix_checksum ( struct super_block * sb , struct buffer_head * bh ) ; 
/*--affs_fix_checksum--*/
void secs_to_datestamp ( time_t secs , struct affs_date * ds ) ; 
/*--secs_to_datestamp--*/
mode_t prot_to_mode ( u32 prot ) ; 
/*--prot_to_mode--*/
void mode_to_prot ( struct inode * inode ) ; 
/*--mode_to_prot--*/
void affs_error ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--affs_error--*/
void affs_warning ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--affs_warning--*/
int affs_check_name ( const unsigned char * name , int len ) ; 
/*--affs_check_name--*/
int affs_copy_name ( unsigned char * bstr , struct dentry * dentry ) ; 
/*--affs_copy_name--*/
u32 affs_count_free_blocks ( struct super_block * sb ) ; 
/*--affs_count_free_blocks--*/
void affs_free_block ( struct super_block * sb , u32 block ) ; 
/*--affs_free_block--*/
u32 affs_alloc_block ( struct inode * inode , u32 goal ) ; 
/*--affs_alloc_block--*/
int affs_init_bitmap ( struct super_block * sb , int * flags ) ; 
/*--affs_init_bitmap--*/
void affs_free_bitmap ( struct super_block * sb ) ; 
/*--affs_free_bitmap--*/
void afs_init_callback_state ( struct afs_server * server ) ; 
/*--afs_init_callback_state--*/
void afs_broken_callback_work ( struct work_struct * work ) ; 
/*--afs_broken_callback_work--*/
void afs_break_callbacks ( struct afs_server * server , size_t count , struct afs_callback callbacks [ ] ) ; 
/*--afs_break_callbacks--*/
void afs_discard_callback_on_delete ( struct afs_vnode * vnode ) ; 
/*--afs_discard_callback_on_delete--*/
void afs_give_up_callback ( struct afs_vnode * vnode ) ; 
/*--afs_give_up_callback--*/
void afs_dispatch_give_up_callbacks ( struct work_struct * work ) ; 
/*--afs_dispatch_give_up_callbacks--*/
void afs_flush_callback_breaks ( struct afs_server * server ) ; 
/*--afs_flush_callback_breaks--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) afs_callback_update_init ( void ) ; 
/*--afs_callback_update_init--*/
void afs_callback_update_kill ( void ) ; 
/*--afs_callback_update_kill--*/
struct afs_cell * afs_cell_create ( const char * name , char * vllist ) ; 
/*--afs_cell_create--*/
int afs_cell_init ( char * rootcell ) ; 
/*--afs_cell_init--*/
struct afs_cell * afs_cell_lookup ( const char * name , unsigned namesz ) ; 
/*--afs_cell_lookup--*/
void afs_put_cell ( struct afs_cell * cell ) ; 
/*--afs_put_cell--*/
void afs_cell_purge ( void ) ; 
/*--afs_cell_purge--*/
bool afs_cm_incoming_call ( struct afs_call * call ) ; 
/*--afs_cm_incoming_call--*/
int afs_open ( struct inode * inode , struct file * file ) ; 
/*--afs_open--*/
int afs_release ( struct inode * inode , struct file * file ) ; 
/*--afs_release--*/
int afs_page_filler ( void * data , struct page * page ) ; 
/*--afs_page_filler--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) afs_kill_lock_manager ( void ) ; 
/*--afs_kill_lock_manager--*/
void afs_lock_may_be_available ( struct afs_vnode * vnode ) ; 
/*--afs_lock_may_be_available--*/
void afs_lock_work ( struct work_struct * work ) ; 
/*--afs_lock_work--*/
int afs_lock ( struct file * file , int cmd , struct file_lock * fl ) ; 
/*--afs_lock--*/
int afs_flock ( struct file * file , int cmd , struct file_lock * fl ) ; 
/*--afs_flock--*/
int afs_fs_fetch_file_status ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , struct afs_volsync * volsync , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_fetch_file_status--*/
int afs_fs_fetch_data ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , off_t offset , size_t length , struct page * buffer , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_fetch_data--*/
int afs_fs_give_up_callbacks ( struct afs_server * server , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_give_up_callbacks--*/
int afs_fs_create ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , const char * name , umode_t mode , struct afs_fid * newfid , struct afs_file_status * newstatus , struct afs_callback * newcb , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_create--*/
int afs_fs_remove ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , const char * name , bool isdir , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_remove--*/
int afs_fs_link ( struct afs_server * server , struct key * key , struct afs_vnode * dvnode , struct afs_vnode * vnode , const char * name , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_link--*/
int afs_fs_symlink ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , const char * name , const char * contents , struct afs_fid * newfid , struct afs_file_status * newstatus , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_symlink--*/
int afs_fs_rename ( struct afs_server * server , struct key * key , struct afs_vnode * orig_dvnode , const char * orig_name , struct afs_vnode * new_dvnode , const char * new_name , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_rename--*/
int afs_fs_store_data ( struct afs_server * server , struct afs_writeback * wb , unsigned long first , unsigned long last , unsigned offset , unsigned to , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_store_data--*/
int afs_fs_setattr ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , struct iattr * attr , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_setattr--*/
int afs_fs_get_volume_status ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , struct afs_volume_status * vs , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_get_volume_status--*/
int afs_fs_set_lock ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , afs_lock_type_t type , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_set_lock--*/
int afs_fs_extend_lock ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_extend_lock--*/
int afs_fs_release_lock ( struct afs_server * server , struct key * key , struct afs_vnode * vnode , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_fs_release_lock--*/
struct inode * afs_iget ( struct super_block * sb , struct key * key , struct afs_fid * fid , struct afs_file_status * status , struct afs_callback * cb ) ; 
/*--afs_iget--*/
void afs_zap_data ( struct afs_vnode * vnode ) ; 
/*--afs_zap_data--*/
int afs_validate ( struct afs_vnode * vnode , struct key * key ) ; 
/*--afs_validate--*/
int afs_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--afs_getattr--*/
void afs_clear_inode ( struct inode * inode ) ; 
/*--afs_clear_inode--*/
int afs_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--afs_setattr--*/
int afs_abort_to_error ( u32 abort_code ) ; 
/*--afs_abort_to_error--*/
int afs_mntpt_check_symlink ( struct afs_vnode * vnode , struct key * key ) ; 
/*--afs_mntpt_check_symlink--*/
void afs_mntpt_kill_timer ( void ) ; 
/*--afs_mntpt_kill_timer--*/
int afs_proc_init ( void ) ; 
/*--afs_proc_init--*/
void afs_proc_cleanup ( void ) ; 
/*--afs_proc_cleanup--*/
int afs_proc_cell_setup ( struct afs_cell * cell ) ; 
/*--afs_proc_cell_setup--*/
void afs_proc_cell_remove ( struct afs_cell * cell ) ; 
/*--afs_proc_cell_remove--*/
int afs_open_socket ( void ) ; 
/*--afs_open_socket--*/
void afs_close_socket ( void ) ; 
/*--afs_close_socket--*/
struct afs_call * afs_alloc_flat_call ( const struct afs_call_type * type , size_t request_size , size_t reply_size ) ; 
/*--afs_alloc_flat_call--*/
void afs_flat_call_destructor ( struct afs_call * call ) ; 
/*--afs_flat_call_destructor--*/
int afs_make_call ( struct in_addr * addr , struct afs_call * call , gfp_t gfp , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_make_call--*/
void afs_transfer_reply ( struct afs_call * call , struct sk_buff * skb ) ; 
/*--afs_transfer_reply--*/
void afs_send_empty_reply ( struct afs_call * call ) ; 
/*--afs_send_empty_reply--*/
void afs_send_simple_reply ( struct afs_call * call , const void * buf , size_t len ) ; 
/*--afs_send_simple_reply--*/
int afs_extract_data ( struct afs_call * call , struct sk_buff * skb , bool last , void * buf , size_t count ) ; 
/*--afs_extract_data--*/
struct key * afs_request_key ( struct afs_cell * cell ) ; 
/*--afs_request_key--*/
void afs_zap_permits ( struct rcu_head * rcu ) ; 
/*--afs_zap_permits--*/
void afs_clear_permits ( struct afs_vnode * vnode ) ; 
/*--afs_clear_permits--*/
void afs_cache_permit ( struct afs_vnode * vnode , struct key * key , long acl_order ) ; 
/*--afs_cache_permit--*/
int afs_permission ( struct inode * inode , int mask ) ; 
/*--afs_permission--*/
struct afs_server * afs_lookup_server ( struct afs_cell * cell , const struct in_addr * addr ) ; 
/*--afs_lookup_server--*/
struct afs_server * afs_find_server ( const struct in_addr * _addr ) ; 
/*--afs_find_server--*/
void afs_put_server ( struct afs_server * server ) ; 
/*--afs_put_server--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) afs_purge_servers ( void ) ; 
/*--afs_purge_servers--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) afs_fs_init ( void ) ; 
/*--afs_fs_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) afs_fs_exit ( void ) ; 
/*--afs_fs_exit--*/
int afs_get_MAC_address ( u8 * mac , size_t maclen ) ; 
/*--afs_get_MAC_address--*/
int afs_get_ipv4_interfaces ( struct afs_interface * bufs , size_t maxbufs , bool wantloopback ) ; 
/*--afs_get_ipv4_interfaces--*/
int afs_vl_get_entry_by_name ( struct in_addr * addr , struct key * key , const char * volname , struct afs_cache_vlocation * entry , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_vl_get_entry_by_name--*/
int afs_vl_get_entry_by_id ( struct in_addr * addr , struct key * key , afs_volid_t volid , afs_voltype_t voltype , struct afs_cache_vlocation * entry , const struct afs_wait_mode * wait_mode ) ; 
/*--afs_vl_get_entry_by_id--*/
struct afs_vlocation * afs_vlocation_lookup ( struct afs_cell * cell , struct key * key , const char * name , size_t namesz ) ; 
/*--afs_vlocation_lookup--*/
void afs_put_vlocation ( struct afs_vlocation * vl ) ; 
/*--afs_put_vlocation--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) afs_vlocation_update_init ( void ) ; 
/*--afs_vlocation_update_init--*/
void afs_vlocation_purge ( void ) ; 
/*--afs_vlocation_purge--*/
void afs_vnode_finalise_status_update ( struct afs_vnode * vnode , struct afs_server * server ) ; 
/*--afs_vnode_finalise_status_update--*/
int afs_vnode_fetch_status ( struct afs_vnode * vnode , struct afs_vnode * auth_vnode , struct key * key ) ; 
/*--afs_vnode_fetch_status--*/
int afs_vnode_fetch_data ( struct afs_vnode * vnode , struct key * key , off_t offset , size_t length , struct page * page ) ; 
/*--afs_vnode_fetch_data--*/
int afs_vnode_create ( struct afs_vnode * vnode , struct key * key , const char * name , umode_t mode , struct afs_fid * newfid , struct afs_file_status * newstatus , struct afs_callback * newcb , struct afs_server * * _server ) ; 
/*--afs_vnode_create--*/
int afs_vnode_remove ( struct afs_vnode * vnode , struct key * key , const char * name , bool isdir ) ; 
/*--afs_vnode_remove--*/
int afs_vnode_link ( struct afs_vnode * dvnode , struct afs_vnode * vnode , struct key * key , const char * name ) ; 
/*--afs_vnode_link--*/
int afs_vnode_symlink ( struct afs_vnode * vnode , struct key * key , const char * name , const char * content , struct afs_fid * newfid , struct afs_file_status * newstatus , struct afs_server * * _server ) ; 
/*--afs_vnode_symlink--*/
int afs_vnode_rename ( struct afs_vnode * orig_dvnode , struct afs_vnode * new_dvnode , struct key * key , const char * orig_name , const char * new_name ) ; 
/*--afs_vnode_rename--*/
int afs_vnode_store_data ( struct afs_writeback * wb , unsigned long first , unsigned long last , unsigned offset , unsigned to ) ; 
/*--afs_vnode_store_data--*/
int afs_vnode_setattr ( struct afs_vnode * vnode , struct key * key , struct iattr * attr ) ; 
/*--afs_vnode_setattr--*/
int afs_vnode_get_volume_status ( struct afs_vnode * vnode , struct key * key , struct afs_volume_status * vs ) ; 
/*--afs_vnode_get_volume_status--*/
int afs_vnode_set_lock ( struct afs_vnode * vnode , struct key * key , afs_lock_type_t type ) ; 
/*--afs_vnode_set_lock--*/
int afs_vnode_extend_lock ( struct afs_vnode * vnode , struct key * key ) ; 
/*--afs_vnode_extend_lock--*/
int afs_vnode_release_lock ( struct afs_vnode * vnode , struct key * key ) ; 
/*--afs_vnode_release_lock--*/
struct afs_volume * afs_volume_lookup ( struct afs_mount_params * params ) ; 
/*--afs_volume_lookup--*/
void afs_put_volume ( struct afs_volume * volume ) ; 
/*--afs_put_volume--*/
struct afs_server * afs_volume_pick_fileserver ( struct afs_vnode * vnode ) ; 
/*--afs_volume_pick_fileserver--*/
int afs_volume_release_fileserver ( struct afs_vnode * vnode , struct afs_server * server , int result ) ; 
/*--afs_volume_release_fileserver--*/
int afs_set_page_dirty ( struct page * page ) ; 
/*--afs_set_page_dirty--*/
void afs_put_writeback ( struct afs_writeback * wb ) ; 
/*--afs_put_writeback--*/
int afs_write_begin ( struct file * file , struct address_space * mapping , loff_t pos , unsigned len , unsigned flags , struct page * * pagep , void * * fsdata ) ; 
/*--afs_write_begin--*/
int afs_write_end ( struct file * file , struct address_space * mapping , loff_t pos , unsigned len , unsigned copied , struct page * page , void * fsdata ) ; 
/*--afs_write_end--*/
int afs_writepage ( struct page * page , struct writeback_control * wbc ) ; 
/*--afs_writepage--*/
int afs_writepages ( struct address_space * mapping , struct writeback_control * wbc ) ; 
/*--afs_writepages--*/
void afs_pages_written_back ( struct afs_vnode * vnode , struct afs_call * call ) ; 
/*--afs_pages_written_back--*/
ssize_t afs_file_write ( struct kiocb * iocb , const struct iovec * iov , unsigned long nr_segs , loff_t pos ) ; 
/*--afs_file_write--*/
int afs_writeback_all ( struct afs_vnode * vnode ) ; 
/*--afs_writeback_all--*/
int afs_fsync ( struct file * file , int datasync ) ; 
/*--afs_fsync--*/
int afs_page_mkwrite ( struct vm_area_struct * vma , struct page * page ) ; 
/*--afs_page_mkwrite--*/
void autofs_update_usage ( struct autofs_dirhash * dh , struct autofs_dir_ent * ent ) ; 
/*--autofs_update_usage--*/
struct autofs_dir_ent * autofs_expire ( struct super_block * sb , struct autofs_sb_info * sbi , struct vfsmount * mnt ) ; 
/*--autofs_expire--*/
void autofs_initialize_hash ( struct autofs_dirhash * dh ) ; 
/*--autofs_initialize_hash--*/
struct autofs_dir_ent * autofs_hash_lookup ( const struct autofs_dirhash * dh , struct qstr * name ) ; 
/*--autofs_hash_lookup--*/
void autofs_hash_insert ( struct autofs_dirhash * dh , struct autofs_dir_ent * ent ) ; 
/*--autofs_hash_insert--*/
void autofs_hash_delete ( struct autofs_dir_ent * ent ) ; 
/*--autofs_hash_delete--*/
struct autofs_dir_ent * autofs_hash_enum ( const struct autofs_dirhash * dh , off_t * ptr , struct autofs_dir_ent * last ) ; 
/*--autofs_hash_enum--*/
void autofs_hash_dputall ( struct autofs_dirhash * dh ) ; 
/*--autofs_hash_dputall--*/
void autofs_hash_nuke ( struct autofs_sb_info * sbi ) ; 
/*--autofs_hash_nuke--*/
void autofs_kill_sb ( struct super_block * sb ) ; 
/*--autofs_kill_sb--*/
int autofs_fill_super ( struct super_block * s , void * data , int silent ) ; 
/*--autofs_fill_super--*/
struct inode * autofs_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--autofs_iget--*/
void autofs_catatonic_mode ( struct autofs_sb_info * sbi ) ; 
/*--autofs_catatonic_mode--*/
int autofs_wait ( struct autofs_sb_info * sbi , struct qstr * name ) ; 
/*--autofs_wait--*/
int autofs_wait_release ( struct autofs_sb_info * sbi , autofs_wqt_t wait_queue_token , int status ) ; 
/*--autofs_wait_release--*/
struct autofs_info * autofs4_init_ino ( struct autofs_info * ino , struct autofs_sb_info * sbi , mode_t mode ) ; 
/*--autofs4_init_ino--*/
void autofs4_free_ino ( struct autofs_info * ino ) ; 
/*--autofs4_free_ino--*/
void autofs4_kill_sb ( struct super_block * sb ) ; 
/*--autofs4_kill_sb--*/
int autofs4_fill_super ( struct super_block * s , void * data , int silent ) ; 
/*--autofs4_fill_super--*/
struct inode * autofs4_get_inode ( struct super_block * sb , struct autofs_info * inf ) ; 
/*--autofs4_get_inode--*/
void autofs4_dentry_release ( struct dentry * de ) ; 
/*--autofs4_dentry_release--*/
int is_autofs4_dentry ( struct dentry * dentry ) ; 
/*--is_autofs4_dentry--*/
void autofs4_catatonic_mode ( struct autofs_sb_info * sbi ) ; 
/*--autofs4_catatonic_mode--*/
int autofs4_wait ( struct autofs_sb_info * sbi , struct dentry * dentry , enum autofs_notify notify ) ; 
/*--autofs4_wait--*/
int autofs4_wait_release ( struct autofs_sb_info * sbi , autofs_wqt_t wait_queue_token , int status ) ; 
/*--autofs4_wait_release--*/
struct dentry * autofs4_expire_direct ( struct super_block * sb , struct vfsmount * mnt , struct autofs_sb_info * sbi , int how ) ; 
/*--autofs4_expire_direct--*/
struct dentry * autofs4_expire_indirect ( struct super_block * sb , struct vfsmount * mnt , struct autofs_sb_info * sbi , int how ) ; 
/*--autofs4_expire_indirect--*/
int autofs4_expire_wait ( struct dentry * dentry ) ; 
/*--autofs4_expire_wait--*/
int autofs4_expire_run ( struct super_block * sb , struct vfsmount * mnt , struct autofs_sb_info * sbi , struct autofs_packet_expire * pkt_p ) ; 
/*--autofs4_expire_run--*/
int autofs4_do_expire_multi ( struct super_block * sb , struct vfsmount * mnt , struct autofs_sb_info * sbi , int when ) ; 
/*--autofs4_do_expire_multi--*/
int autofs4_expire_multi ( struct super_block * sb , struct vfsmount * mnt , struct autofs_sb_info * sbi , int * arg ) ; 
/*--autofs4_expire_multi--*/
int autofs_dev_ioctl_init ( void ) ; 
/*--autofs_dev_ioctl_init--*/
void autofs_dev_ioctl_exit ( void ) ; 
/*--autofs_dev_ioctl_exit--*/
struct buffer_head * befs_read_datastream ( struct super_block * sb , befs_data_stream * ds , befs_off_t pos , uint * off ) ; 
/*--befs_read_datastream--*/
int befs_fblock2brun ( struct super_block * sb , befs_data_stream * data , befs_blocknr_t fblock , befs_block_run * run ) ; 
/*--befs_fblock2brun--*/
size_t befs_read_lsymlink ( struct super_block * sb , befs_data_stream * ds , void * buff , befs_off_t len ) ; 
/*--befs_read_lsymlink--*/
befs_blocknr_t befs_count_blocks ( struct super_block * sb , befs_data_stream * ds ) ; 
/*--befs_count_blocks--*/
int befs_btree_find ( struct super_block * sb , befs_data_stream * ds , const char * key , befs_off_t * value ) ; 
/*--befs_btree_find--*/
int befs_btree_read ( struct super_block * sb , befs_data_stream * ds , loff_t key_no , size_t bufsize , char * keybuf , size_t * keysize , befs_off_t * value ) ; 
/*--befs_btree_read--*/
int befs_load_sb ( struct super_block * sb , befs_super_block * disk_sb ) ; 
/*--befs_load_sb--*/
int befs_check_sb ( struct super_block * sb ) ; 
/*--befs_check_sb--*/
int befs_check_inode ( struct super_block * sb , befs_inode * raw_inode , befs_blocknr_t inode ) ; 
/*--befs_check_inode--*/
void befs_error ( const struct super_block * sb , const char * fmt , ... ) ; 
/*--befs_error--*/
void befs_warning ( const struct super_block * sb , const char * fmt , ... ) ; 
/*--befs_warning--*/
void befs_debug ( const struct super_block * sb , const char * fmt , ... ) ; 
/*--befs_debug--*/
void befs_dump_inode ( const struct super_block * sb , befs_inode * inode ) ; 
/*--befs_dump_inode--*/
void befs_dump_super_block ( const struct super_block * sb , befs_super_block * sup ) ; 
/*--befs_dump_super_block--*/
void befs_dump_index_entry ( const struct super_block * sb , befs_disk_btree_super * super ) ; 
/*--befs_dump_index_entry--*/
void befs_dump_index_node ( const struct super_block * sb , befs_btree_nodehead * node ) ; 
/*--befs_dump_index_node--*/
struct buffer_head * befs_bread_iaddr ( struct super_block * sb , befs_inode_addr iaddr ) ; 
/*--befs_bread_iaddr--*/
struct buffer_head * befs_bread ( struct super_block * sb , befs_blocknr_t block ) ; 
/*--befs_bread--*/
struct inode * bfs_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--bfs_iget--*/
void dump_imap ( const char * prefix , struct super_block * s ) ; 
/*--dump_imap--*/
int btrfs_parse_options ( struct btrfs_root * root , char * options ) ; 
/*--btrfs_parse_options--*/
int btrfs_sync_fs ( struct super_block * sb , int wait ) ; 
/*--btrfs_sync_fs--*/
struct btrfs_path * btrfs_alloc_path ( void ) ; 
/*--btrfs_alloc_path--*/
__attribute__ ( ( noinline ) ) void btrfs_set_path_blocking ( struct btrfs_path * p ) ; 
/*--btrfs_set_path_blocking--*/
__attribute__ ( ( noinline ) ) void btrfs_clear_path_blocking ( struct btrfs_path * p , struct extent_buffer * held ) ; 
/*--btrfs_clear_path_blocking--*/
void btrfs_free_path ( struct btrfs_path * p ) ; 
/*--btrfs_free_path--*/
__attribute__ ( ( noinline ) ) void btrfs_release_path ( struct btrfs_root * root , struct btrfs_path * p ) ; 
/*--btrfs_release_path--*/
struct extent_buffer * btrfs_root_node ( struct btrfs_root * root ) ; 
/*--btrfs_root_node--*/
struct extent_buffer * btrfs_lock_root_node ( struct btrfs_root * root ) ; 
/*--btrfs_lock_root_node--*/
int btrfs_copy_root ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * buf , struct extent_buffer * * cow_ret , u64 new_root_objectid ) ; 
/*--btrfs_copy_root--*/
int btrfs_block_can_be_shared ( struct btrfs_root * root , struct extent_buffer * buf ) ; 
/*--btrfs_block_can_be_shared--*/
__attribute__ ( ( noinline ) ) int btrfs_cow_block ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * buf , struct extent_buffer * parent , int parent_slot , struct extent_buffer * * cow_ret ) ; 
/*--btrfs_cow_block--*/
int btrfs_comp_cpu_keys ( struct btrfs_key * k1 , struct btrfs_key * k2 ) ; 
/*--btrfs_comp_cpu_keys--*/
int btrfs_realloc_node ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * parent , int start_slot , int cache_only , u64 * last_ret , struct btrfs_key * progress ) ; 
/*--btrfs_realloc_node--*/
int btrfs_bin_search ( struct extent_buffer * eb , struct btrfs_key * key , int level , int * slot ) ; 
/*--btrfs_bin_search--*/
__attribute__ ( ( noinline ) ) void btrfs_unlock_up_safe ( struct btrfs_path * path , int level ) ; 
/*--btrfs_unlock_up_safe--*/
int btrfs_search_slot ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_key * key , struct btrfs_path * p , int ins_len , int cow ) ; 
/*--btrfs_search_slot--*/
int btrfs_set_item_key_safe ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , struct btrfs_key * new_key ) ; 
/*--btrfs_set_item_key_safe--*/
__attribute__ ( ( noinline ) ) int btrfs_leaf_free_space ( struct btrfs_root * root , struct extent_buffer * leaf ) ; 
/*--btrfs_leaf_free_space--*/
int btrfs_split_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , struct btrfs_key * new_key , unsigned long split_offset ) ; 
/*--btrfs_split_item--*/
int btrfs_duplicate_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , struct btrfs_key * new_key ) ; 
/*--btrfs_duplicate_item--*/
int btrfs_truncate_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u32 new_size , int from_end ) ; 
/*--btrfs_truncate_item--*/
int btrfs_extend_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u32 data_size ) ; 
/*--btrfs_extend_item--*/
int btrfs_insert_some_items ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , struct btrfs_key * cpu_key , u32 * data_size , int nr ) ; 
/*--btrfs_insert_some_items--*/
int btrfs_insert_empty_items ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , struct btrfs_key * cpu_key , u32 * data_size , int nr ) ; 
/*--btrfs_insert_empty_items--*/
int btrfs_insert_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_key * cpu_key , void * data , u32 data_size ) ; 
/*--btrfs_insert_item--*/
int btrfs_del_items ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , int slot , int nr ) ; 
/*--btrfs_del_items--*/
int btrfs_prev_leaf ( struct btrfs_root * root , struct btrfs_path * path ) ; 
/*--btrfs_prev_leaf--*/
int btrfs_search_forward ( struct btrfs_root * root , struct btrfs_key * min_key , struct btrfs_key * max_key , struct btrfs_path * path , int cache_only , u64 min_trans ) ; 
/*--btrfs_search_forward--*/
int btrfs_find_next_key ( struct btrfs_root * root , struct btrfs_path * path , struct btrfs_key * key , int level , int cache_only , u64 min_trans ) ; 
/*--btrfs_find_next_key--*/
int btrfs_next_leaf ( struct btrfs_root * root , struct btrfs_path * path ) ; 
/*--btrfs_next_leaf--*/
int btrfs_previous_item ( struct btrfs_root * root , struct btrfs_path * path , u64 min_objectid , int type ) ; 
/*--btrfs_previous_item--*/
void btrfs_get_block_group ( struct btrfs_block_group_cache * cache ) ; 
/*--btrfs_get_block_group--*/
void btrfs_put_block_group ( struct btrfs_block_group_cache * cache ) ; 
/*--btrfs_put_block_group--*/
struct btrfs_block_group_cache * btrfs_lookup_block_group ( struct btrfs_fs_info * info , u64 bytenr ) ; 
/*--btrfs_lookup_block_group--*/
void btrfs_clear_space_info_full ( struct btrfs_fs_info * info ) ; 
/*--btrfs_clear_space_info_full--*/
u64 btrfs_find_block_group ( struct btrfs_root * root , u64 search_start , u64 search_hint , int owner ) ; 
/*--btrfs_find_block_group--*/
int btrfs_lookup_extent ( struct btrfs_root * root , u64 start , u64 len ) ; 
/*--btrfs_lookup_extent--*/
int btrfs_lookup_extent_info ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 bytenr , u64 num_bytes , u64 * refs , u64 * flags ) ; 
/*--btrfs_lookup_extent_info--*/
int btrfs_inc_extent_ref ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 bytenr , u64 num_bytes , u64 parent , u64 root_objectid , u64 owner , u64 offset ) ; 
/*--btrfs_inc_extent_ref--*/
int btrfs_run_delayed_refs ( struct btrfs_trans_handle * trans , struct btrfs_root * root , unsigned long count ) ; 
/*--btrfs_run_delayed_refs--*/
int btrfs_set_disk_extent_flags ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 bytenr , u64 num_bytes , u64 flags , int is_data ) ; 
/*--btrfs_set_disk_extent_flags--*/
int btrfs_cross_ref_exist ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 objectid , u64 offset , u64 bytenr ) ; 
/*--btrfs_cross_ref_exist--*/
int btrfs_inc_ref ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * buf , int full_backref ) ; 
/*--btrfs_inc_ref--*/
int btrfs_dec_ref ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * buf , int full_backref ) ; 
/*--btrfs_dec_ref--*/
int btrfs_write_dirty_block_groups ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_write_dirty_block_groups--*/
int btrfs_extent_readonly ( struct btrfs_root * root , u64 bytenr ) ; 
/*--btrfs_extent_readonly--*/
u64 btrfs_reduce_alloc_profile ( struct btrfs_root * root , u64 flags ) ; 
/*--btrfs_reduce_alloc_profile--*/
void btrfs_set_inode_space_info ( struct btrfs_root * root , struct inode * inode ) ; 
/*--btrfs_set_inode_space_info--*/
int btrfs_check_data_free_space ( struct inode * inode , u64 bytes ) ; 
/*--btrfs_check_data_free_space--*/
void btrfs_free_reserved_data_space ( struct inode * inode , u64 bytes ) ; 
/*--btrfs_free_reserved_data_space--*/
void block_rsv_release_bytes ( struct btrfs_block_rsv * block_rsv , struct btrfs_block_rsv * dest , u64 num_bytes ) ; 
/*--block_rsv_release_bytes--*/
void btrfs_init_block_rsv ( struct btrfs_block_rsv * rsv ) ; 
/*--btrfs_init_block_rsv--*/
struct btrfs_block_rsv * btrfs_alloc_block_rsv ( struct btrfs_root * root ) ; 
/*--btrfs_alloc_block_rsv--*/
void btrfs_free_block_rsv ( struct btrfs_root * root , struct btrfs_block_rsv * rsv ) ; 
/*--btrfs_free_block_rsv--*/
void btrfs_add_durable_block_rsv ( struct btrfs_fs_info * fs_info , struct btrfs_block_rsv * block_rsv ) ; 
/*--btrfs_add_durable_block_rsv--*/
int btrfs_block_rsv_add ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_block_rsv * block_rsv , u64 num_bytes , int * retries ) ; 
/*--btrfs_block_rsv_add--*/
int btrfs_block_rsv_check ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_block_rsv * block_rsv , u64 min_reserved , int min_factor ) ; 
/*--btrfs_block_rsv_check--*/
int btrfs_block_rsv_migrate ( struct btrfs_block_rsv * src_rsv , struct btrfs_block_rsv * dst_rsv , u64 num_bytes ) ; 
/*--btrfs_block_rsv_migrate--*/
void btrfs_block_rsv_release ( struct btrfs_root * root , struct btrfs_block_rsv * block_rsv , u64 num_bytes ) ; 
/*--btrfs_block_rsv_release--*/
int btrfs_trans_reserve_metadata ( struct btrfs_trans_handle * trans , struct btrfs_root * root , int num_items , int * retries ) ; 
/*--btrfs_trans_reserve_metadata--*/
void btrfs_trans_release_metadata ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_trans_release_metadata--*/
int btrfs_orphan_reserve_metadata ( struct btrfs_trans_handle * trans , struct inode * inode ) ; 
/*--btrfs_orphan_reserve_metadata--*/
void btrfs_orphan_release_metadata ( struct inode * inode ) ; 
/*--btrfs_orphan_release_metadata--*/
int btrfs_snap_reserve_metadata ( struct btrfs_trans_handle * trans , struct btrfs_pending_snapshot * pending ) ; 
/*--btrfs_snap_reserve_metadata--*/
int btrfs_delalloc_reserve_metadata ( struct inode * inode , u64 num_bytes ) ; 
/*--btrfs_delalloc_reserve_metadata--*/
void btrfs_delalloc_release_metadata ( struct inode * inode , u64 num_bytes ) ; 
/*--btrfs_delalloc_release_metadata--*/
int btrfs_delalloc_reserve_space ( struct inode * inode , u64 num_bytes ) ; 
/*--btrfs_delalloc_reserve_space--*/
void btrfs_delalloc_release_space ( struct inode * inode , u64 num_bytes ) ; 
/*--btrfs_delalloc_release_space--*/
int btrfs_pin_extent ( struct btrfs_root * root , u64 bytenr , u64 num_bytes , int reserved ) ; 
/*--btrfs_pin_extent--*/
int btrfs_prepare_extent_commit ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_prepare_extent_commit--*/
int btrfs_finish_extent_commit ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_finish_extent_commit--*/
void btrfs_free_tree_block ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * buf , u64 parent , int last_ref ) ; 
/*--btrfs_free_tree_block--*/
int btrfs_free_extent ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 bytenr , u64 num_bytes , u64 parent , u64 root_objectid , u64 owner , u64 offset ) ; 
/*--btrfs_free_extent--*/
int btrfs_reserve_extent ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 num_bytes , u64 min_alloc_size , u64 empty_size , u64 hint_byte , u64 search_end , struct btrfs_key * ins , u64 data ) ; 
/*--btrfs_reserve_extent--*/
int btrfs_free_reserved_extent ( struct btrfs_root * root , u64 start , u64 len ) ; 
/*--btrfs_free_reserved_extent--*/
int btrfs_alloc_reserved_file_extent ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 root_objectid , u64 owner , u64 offset , struct btrfs_key * ins ) ; 
/*--btrfs_alloc_reserved_file_extent--*/
int btrfs_alloc_logged_file_extent ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 root_objectid , u64 owner , u64 offset , struct btrfs_key * ins ) ; 
/*--btrfs_alloc_logged_file_extent--*/
struct extent_buffer * btrfs_init_new_buffer ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 bytenr , u32 blocksize , int level ) ; 
/*--btrfs_init_new_buffer--*/
struct extent_buffer * btrfs_alloc_free_block ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u32 blocksize , u64 parent , u64 root_objectid , struct btrfs_disk_key * key , int level , u64 hint , u64 empty_size ) ; 
/*--btrfs_alloc_free_block--*/
int btrfs_drop_snapshot ( struct btrfs_root * root , struct btrfs_block_rsv * block_rsv , int update_ref ) ; 
/*--btrfs_drop_snapshot--*/
int btrfs_drop_subtree ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * node , struct extent_buffer * parent ) ; 
/*--btrfs_drop_subtree--*/
int btrfs_set_block_group_ro ( struct btrfs_root * root , struct btrfs_block_group_cache * cache ) ; 
/*--btrfs_set_block_group_ro--*/
int btrfs_set_block_group_rw ( struct btrfs_root * root , struct btrfs_block_group_cache * cache ) ; 
/*--btrfs_set_block_group_rw--*/
int btrfs_can_relocate ( struct btrfs_root * root , u64 bytenr ) ; 
/*--btrfs_can_relocate--*/
int btrfs_free_block_groups ( struct btrfs_fs_info * info ) ; 
/*--btrfs_free_block_groups--*/
int btrfs_read_block_groups ( struct btrfs_root * root ) ; 
/*--btrfs_read_block_groups--*/
int btrfs_make_block_group ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 bytes_used , u64 type , u64 chunk_objectid , u64 chunk_offset , u64 size ) ; 
/*--btrfs_make_block_group--*/
int btrfs_remove_block_group ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 group_start ) ; 
/*--btrfs_remove_block_group--*/
void btrfs_print_leaf ( struct btrfs_root * root , struct extent_buffer * l ) ; 
/*--btrfs_print_leaf--*/
void btrfs_print_tree ( struct btrfs_root * root , struct extent_buffer * c ) ; 
/*--btrfs_print_tree--*/
int btrfs_search_root ( struct btrfs_root * root , u64 search_start , u64 * found_objectid ) ; 
/*--btrfs_search_root--*/
int btrfs_find_last_root ( struct btrfs_root * root , u64 objectid , struct btrfs_root_item * item , struct btrfs_key * key ) ; 
/*--btrfs_find_last_root--*/
int btrfs_set_root_node ( struct btrfs_root_item * item , struct extent_buffer * node ) ; 
/*--btrfs_set_root_node--*/
int btrfs_update_root ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_key * key , struct btrfs_root_item * item ) ; 
/*--btrfs_update_root--*/
int btrfs_insert_root ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_key * key , struct btrfs_root_item * item ) ; 
/*--btrfs_insert_root--*/
int btrfs_find_dead_roots ( struct btrfs_root * root , u64 objectid ) ; 
/*--btrfs_find_dead_roots--*/
int btrfs_find_orphan_roots ( struct btrfs_root * tree_root ) ; 
/*--btrfs_find_orphan_roots--*/
int btrfs_del_root ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_key * key ) ; 
/*--btrfs_del_root--*/
int btrfs_del_root_ref ( struct btrfs_trans_handle * trans , struct btrfs_root * tree_root , u64 root_id , u64 ref_id , u64 dirid , u64 * sequence , const char * name , int name_len ) ; 
/*--btrfs_del_root_ref--*/
int btrfs_find_root_ref ( struct btrfs_root * tree_root , struct btrfs_path * path , u64 root_id , u64 ref_id ) ; 
/*--btrfs_find_root_ref--*/
int btrfs_add_root_ref ( struct btrfs_trans_handle * trans , struct btrfs_root * tree_root , u64 root_id , u64 ref_id , u64 dirid , u64 sequence , const char * name , int name_len ) ; 
/*--btrfs_add_root_ref--*/
void btrfs_check_and_init_root_item ( struct btrfs_root_item * root_item ) ; 
/*--btrfs_check_and_init_root_item--*/
int btrfs_insert_xattr_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u64 objectid , const char * name , u16 name_len , const void * data , u16 data_len ) ; 
/*--btrfs_insert_xattr_item--*/
int btrfs_insert_dir_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , const char * name , int name_len , u64 dir , struct btrfs_key * location , u8 type , u64 index ) ; 
/*--btrfs_insert_dir_item--*/
struct btrfs_dir_item * btrfs_lookup_dir_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u64 dir , const char * name , int name_len , int mod ) ; 
/*--btrfs_lookup_dir_item--*/
struct btrfs_dir_item * btrfs_lookup_dir_index_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u64 dir , u64 objectid , const char * name , int name_len , int mod ) ; 
/*--btrfs_lookup_dir_index_item--*/
struct btrfs_dir_item * btrfs_search_dir_index_item ( struct btrfs_root * root , struct btrfs_path * path , u64 dirid , const char * name , int name_len ) ; 
/*--btrfs_search_dir_index_item--*/
struct btrfs_dir_item * btrfs_lookup_xattr ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u64 dir , const char * name , u16 name_len , int mod ) ; 
/*--btrfs_lookup_xattr--*/
struct btrfs_dir_item * btrfs_match_dir_item_name ( struct btrfs_root * root , struct btrfs_path * path , const char * name , int name_len ) ; 
/*--btrfs_match_dir_item_name--*/
int btrfs_delete_one_dir_name ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , struct btrfs_dir_item * di ) ; 
/*--btrfs_delete_one_dir_name--*/
int btrfs_insert_file_extent ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 objectid , u64 pos , u64 disk_offset , u64 disk_num_bytes , u64 num_bytes , u64 offset , u64 ram_bytes , u8 compression , u8 encryption , u16 other_encoding ) ; 
/*--btrfs_insert_file_extent--*/
struct btrfs_csum_item * btrfs_lookup_csum ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u64 bytenr , int cow ) ; 
/*--btrfs_lookup_csum--*/
int btrfs_lookup_file_extent ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u64 objectid , u64 offset , int mod ) ; 
/*--btrfs_lookup_file_extent--*/
int btrfs_lookup_bio_sums ( struct btrfs_root * root , struct inode * inode , struct bio * bio , u32 * dst ) ; 
/*--btrfs_lookup_bio_sums--*/
int btrfs_lookup_bio_sums_dio ( struct btrfs_root * root , struct inode * inode , struct bio * bio , u64 offset , u32 * dst ) ; 
/*--btrfs_lookup_bio_sums_dio--*/
int btrfs_lookup_csums_range ( struct btrfs_root * root , u64 start , u64 end , struct list_head * list ) ; 
/*--btrfs_lookup_csums_range--*/
int btrfs_csum_one_bio ( struct btrfs_root * root , struct inode * inode , struct bio * bio , u64 file_start , int contig ) ; 
/*--btrfs_csum_one_bio--*/
int btrfs_del_csums ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 bytenr , u64 len ) ; 
/*--btrfs_del_csums--*/
int btrfs_csum_file_blocks ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_ordered_sum * sums ) ; 
/*--btrfs_csum_file_blocks--*/
struct btrfs_inode_ref * btrfs_lookup_inode_ref ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , const char * name , int name_len , u64 inode_objectid , u64 ref_objectid , int mod ) ; 
/*--btrfs_lookup_inode_ref--*/
int btrfs_del_inode_ref ( struct btrfs_trans_handle * trans , struct btrfs_root * root , const char * name , int name_len , u64 inode_objectid , u64 ref_objectid , u64 * index ) ; 
/*--btrfs_del_inode_ref--*/
int btrfs_insert_inode_ref ( struct btrfs_trans_handle * trans , struct btrfs_root * root , const char * name , int name_len , u64 inode_objectid , u64 ref_objectid , u64 index ) ; 
/*--btrfs_insert_inode_ref--*/
int btrfs_insert_empty_inode ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , u64 objectid ) ; 
/*--btrfs_insert_empty_inode--*/
int btrfs_lookup_inode ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_path * path , struct btrfs_key * location , int mod ) ; 
/*--btrfs_lookup_inode--*/
int btrfs_find_highest_inode ( struct btrfs_root * root , u64 * objectid ) ; 
/*--btrfs_find_highest_inode--*/
int btrfs_find_free_objectid ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 dirid , u64 * objectid ) ; 
/*--btrfs_find_free_objectid--*/
u32 btrfs_csum_data ( struct btrfs_root * root , char * data , u32 seed , size_t len ) ; 
/*--btrfs_csum_data--*/
void btrfs_csum_final ( u32 crc , char * result ) ; 
/*--btrfs_csum_final--*/
int btrfs_bio_wq_end_io ( struct btrfs_fs_info * info , struct bio * bio , int metadata ) ; 
/*--btrfs_bio_wq_end_io--*/
unsigned long btrfs_async_submit_limit ( struct btrfs_fs_info * info ) ; 
/*--btrfs_async_submit_limit--*/
int btrfs_congested_async ( struct btrfs_fs_info * info , int iodone ) ; 
/*--btrfs_congested_async--*/
int btrfs_wq_submit_bio ( struct btrfs_fs_info * fs_info , struct inode * inode , int rw , struct bio * bio , int mirror_num , unsigned long bio_flags , u64 bio_offset , extent_submit_bio_hook_t * submit_bio_start , extent_submit_bio_hook_t * submit_bio_done ) ; 
/*--btrfs_wq_submit_bio--*/
int readahead_tree_block ( struct btrfs_root * root , u64 bytenr , u32 blocksize , u64 parent_transid ) ; 
/*--readahead_tree_block--*/
struct extent_buffer * btrfs_find_tree_block ( struct btrfs_root * root , u64 bytenr , u32 blocksize ) ; 
/*--btrfs_find_tree_block--*/
struct extent_buffer * btrfs_find_create_tree_block ( struct btrfs_root * root , u64 bytenr , u32 blocksize ) ; 
/*--btrfs_find_create_tree_block--*/
int btrfs_write_tree_block ( struct extent_buffer * buf ) ; 
/*--btrfs_write_tree_block--*/
int btrfs_wait_tree_block_writeback ( struct extent_buffer * buf ) ; 
/*--btrfs_wait_tree_block_writeback--*/
struct extent_buffer * read_tree_block ( struct btrfs_root * root , u64 bytenr , u32 blocksize , u64 parent_transid ) ; 
/*--read_tree_block--*/
int clean_tree_block ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * buf ) ; 
/*--clean_tree_block--*/
int btrfs_init_log_root_tree ( struct btrfs_trans_handle * trans , struct btrfs_fs_info * fs_info ) ; 
/*--btrfs_init_log_root_tree--*/
int btrfs_add_log_tree ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_add_log_tree--*/
struct btrfs_root * btrfs_read_fs_root_no_radix ( struct btrfs_root * tree_root , struct btrfs_key * location ) ; 
/*--btrfs_read_fs_root_no_radix--*/
struct btrfs_root * btrfs_lookup_fs_root ( struct btrfs_fs_info * fs_info , u64 root_objectid ) ; 
/*--btrfs_lookup_fs_root--*/
struct btrfs_root * btrfs_read_fs_root_no_name ( struct btrfs_fs_info * fs_info , struct btrfs_key * location ) ; 
/*--btrfs_read_fs_root_no_name--*/
struct btrfs_root * btrfs_read_fs_root ( struct btrfs_fs_info * fs_info , struct btrfs_key * location , const char * name , int namelen ) ; 
/*--btrfs_read_fs_root--*/
struct btrfs_root * open_ctree ( struct super_block * sb , struct btrfs_fs_devices * fs_devices , char * options ) ; 
/*--open_ctree--*/
struct buffer_head * btrfs_read_dev_super ( struct block_device * bdev ) ; 
/*--btrfs_read_dev_super--*/
int write_all_supers ( struct btrfs_root * root , int max_mirrors ) ; 
/*--write_all_supers--*/
int write_ctree_super ( struct btrfs_trans_handle * trans , struct btrfs_root * root , int max_mirrors ) ; 
/*--write_ctree_super--*/
int btrfs_free_fs_root ( struct btrfs_fs_info * fs_info , struct btrfs_root * root ) ; 
/*--btrfs_free_fs_root--*/
int btrfs_cleanup_fs_roots ( struct btrfs_fs_info * fs_info ) ; 
/*--btrfs_cleanup_fs_roots--*/
int btrfs_commit_super ( struct btrfs_root * root ) ; 
/*--btrfs_commit_super--*/
int close_ctree ( struct btrfs_root * root ) ; 
/*--close_ctree--*/
int btrfs_buffer_uptodate ( struct extent_buffer * buf , u64 parent_transid ) ; 
/*--btrfs_buffer_uptodate--*/
int btrfs_set_buffer_uptodate ( struct extent_buffer * buf ) ; 
/*--btrfs_set_buffer_uptodate--*/
void btrfs_mark_buffer_dirty ( struct extent_buffer * buf ) ; 
/*--btrfs_mark_buffer_dirty--*/
void btrfs_btree_balance_dirty ( struct btrfs_root * root , unsigned long nr ) ; 
/*--btrfs_btree_balance_dirty--*/
int btrfs_read_buffer ( struct extent_buffer * buf , u64 parent_transid ) ; 
/*--btrfs_read_buffer--*/
int btree_lock_page_hook ( struct page * page ) ; 
/*--btree_lock_page_hook--*/
int btrfs_record_root_in_trans ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_record_root_in_trans--*/
struct btrfs_trans_handle * btrfs_start_transaction ( struct btrfs_root * root , int num_items ) ; 
/*--btrfs_start_transaction--*/
struct btrfs_trans_handle * btrfs_join_transaction ( struct btrfs_root * root , int num_blocks ) ; 
/*--btrfs_join_transaction--*/
struct btrfs_trans_handle * btrfs_start_ioctl_transaction ( struct btrfs_root * r , int num_blocks ) ; 
/*--btrfs_start_ioctl_transaction--*/
void btrfs_throttle ( struct btrfs_root * root ) ; 
/*--btrfs_throttle--*/
int btrfs_should_end_transaction ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_should_end_transaction--*/
int btrfs_end_transaction ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_end_transaction--*/
int btrfs_end_transaction_throttle ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_end_transaction_throttle--*/
int btrfs_write_marked_extents ( struct btrfs_root * root , struct extent_io_tree * dirty_pages , int mark ) ; 
/*--btrfs_write_marked_extents--*/
int btrfs_wait_marked_extents ( struct btrfs_root * root , struct extent_io_tree * dirty_pages , int mark ) ; 
/*--btrfs_wait_marked_extents--*/
int btrfs_write_and_wait_marked_extents ( struct btrfs_root * root , struct extent_io_tree * dirty_pages , int mark ) ; 
/*--btrfs_write_and_wait_marked_extents--*/
int btrfs_write_and_wait_transaction ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_write_and_wait_transaction--*/
int btrfs_add_dead_root ( struct btrfs_root * root ) ; 
/*--btrfs_add_dead_root--*/
int btrfs_defrag_root ( struct btrfs_root * root , int cacheonly ) ; 
/*--btrfs_defrag_root--*/
int btrfs_transaction_in_commit ( struct btrfs_fs_info * info ) ; 
/*--btrfs_transaction_in_commit--*/
int btrfs_transaction_blocked ( struct btrfs_fs_info * info ) ; 
/*--btrfs_transaction_blocked--*/
int btrfs_commit_transaction ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_commit_transaction--*/
int btrfs_clean_old_snapshots ( struct btrfs_root * root ) ; 
/*--btrfs_clean_old_snapshots--*/
int btrfs_merge_bio_hook ( struct page * page , unsigned long offset , size_t size , struct bio * bio , unsigned long bio_flags ) ; 
/*--btrfs_merge_bio_hook--*/
int btrfs_set_extent_delalloc ( struct inode * inode , u64 start , u64 end , struct extent_state * * cached_state ) ; 
/*--btrfs_set_extent_delalloc--*/
void btrfs_add_delayed_iput ( struct inode * inode ) ; 
/*--btrfs_add_delayed_iput--*/
void btrfs_run_delayed_iputs ( struct btrfs_root * root ) ; 
/*--btrfs_run_delayed_iputs--*/
void btrfs_orphan_pre_snapshot ( struct btrfs_trans_handle * trans , struct btrfs_pending_snapshot * pending , u64 * bytes_to_reserve ) ; 
/*--btrfs_orphan_pre_snapshot--*/
void btrfs_orphan_post_snapshot ( struct btrfs_trans_handle * trans , struct btrfs_pending_snapshot * pending ) ; 
/*--btrfs_orphan_post_snapshot--*/
void btrfs_orphan_commit_root ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_orphan_commit_root--*/
int btrfs_orphan_add ( struct btrfs_trans_handle * trans , struct inode * inode ) ; 
/*--btrfs_orphan_add--*/
int btrfs_orphan_del ( struct btrfs_trans_handle * trans , struct inode * inode ) ; 
/*--btrfs_orphan_del--*/
void btrfs_orphan_cleanup ( struct btrfs_root * root ) ; 
/*--btrfs_orphan_cleanup--*/
__attribute__ ( ( noinline ) ) int btrfs_update_inode ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct inode * inode ) ; 
/*--btrfs_update_inode--*/
int btrfs_unlink_inode ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct inode * dir , struct inode * inode , const char * name , int name_len ) ; 
/*--btrfs_unlink_inode--*/
int btrfs_unlink_subvol ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct inode * dir , u64 objectid , const char * name , int name_len ) ; 
/*--btrfs_unlink_subvol--*/
int btrfs_truncate_inode_items ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct inode * inode , u64 new_size , u32 min_type ) ; 
/*--btrfs_truncate_inode_items--*/
int btrfs_cont_expand ( struct inode * inode , loff_t size ) ; 
/*--btrfs_cont_expand--*/
void btrfs_delete_inode ( struct inode * inode ) ; 
/*--btrfs_delete_inode--*/
int btrfs_invalidate_inodes ( struct btrfs_root * root ) ; 
/*--btrfs_invalidate_inodes--*/
struct inode * btrfs_iget ( struct super_block * s , struct btrfs_key * location , struct btrfs_root * root , int * new ) ; 
/*--btrfs_iget--*/
struct inode * btrfs_lookup_dentry ( struct inode * dir , struct dentry * dentry ) ; 
/*--btrfs_lookup_dentry--*/
int btrfs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--btrfs_write_inode--*/
void btrfs_dirty_inode ( struct inode * inode ) ; 
/*--btrfs_dirty_inode--*/
int btrfs_set_inode_index ( struct inode * dir , u64 * index ) ; 
/*--btrfs_set_inode_index--*/
int btrfs_add_link ( struct btrfs_trans_handle * trans , struct inode * parent_inode , struct inode * inode , const char * name , int name_len , int add_backref , u64 index ) ; 
/*--btrfs_add_link--*/
struct extent_map * btrfs_get_extent ( struct inode * inode , struct page * page , size_t pg_offset , u64 start , u64 len , int create ) ; 
/*--btrfs_get_extent--*/
int btrfs_readpage ( struct file * file , struct page * page ) ; 
/*--btrfs_readpage--*/
int btrfs_writepages ( struct address_space * mapping , struct writeback_control * wbc ) ; 
/*--btrfs_writepages--*/
int btrfs_page_mkwrite ( struct vm_area_struct * vma , struct vm_fault * vmf ) ; 
/*--btrfs_page_mkwrite--*/
int btrfs_create_subvol_root ( struct btrfs_trans_handle * trans , struct btrfs_root * new_root , u64 new_dirid , u64 alloc_hint ) ; 
/*--btrfs_create_subvol_root--*/
unsigned long btrfs_force_ra ( struct address_space * mapping , struct file_ra_state * ra , struct file * file , unsigned long offset , unsigned long last_index ) ; 
/*--btrfs_force_ra--*/
struct inode * btrfs_alloc_inode ( struct super_block * sb ) ; 
/*--btrfs_alloc_inode--*/
void btrfs_destroy_inode ( struct inode * inode ) ; 
/*--btrfs_destroy_inode--*/
void btrfs_drop_inode ( struct inode * inode ) ; 
/*--btrfs_drop_inode--*/
void btrfs_destroy_cachep ( void ) ; 
/*--btrfs_destroy_cachep--*/
int btrfs_init_cachep ( void ) ; 
/*--btrfs_init_cachep--*/
int btrfs_start_delalloc_inodes ( struct btrfs_root * root , int delay_iput ) ; 
/*--btrfs_start_delalloc_inodes--*/
int btrfs_start_one_delalloc_inode ( struct btrfs_root * root , int delay_iput ) ; 
/*--btrfs_start_one_delalloc_inode--*/
int btrfs_prealloc_file_range ( struct inode * inode , int mode , u64 start , u64 num_bytes , u64 min_size , loff_t actual_len , u64 * alloc_hint ) ; 
/*--btrfs_prealloc_file_range--*/
int btrfs_drop_extent_cache ( struct inode * inode , u64 start , u64 end , int skip_pinned ) ; 
/*--btrfs_drop_extent_cache--*/
int btrfs_drop_extents ( struct btrfs_trans_handle * trans , struct inode * inode , u64 start , u64 end , u64 * hint_byte , int drop_cache ) ; 
/*--btrfs_drop_extents--*/
int btrfs_mark_extent_written ( struct btrfs_trans_handle * trans , struct inode * inode , u64 start , u64 end ) ; 
/*--btrfs_mark_extent_written--*/
int btrfs_release_file ( struct inode * inode , struct file * filp ) ; 
/*--btrfs_release_file--*/
int btrfs_sync_file ( struct file * file , int datasync ) ; 
/*--btrfs_sync_file--*/
int btrfs_defrag_leaves ( struct btrfs_trans_handle * trans , struct btrfs_root * root , int cache_only ) ; 
/*--btrfs_defrag_leaves--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) extent_map_init ( void ) ; 
/*--extent_map_init--*/
void extent_map_exit ( void ) ; 
/*--extent_map_exit--*/
void extent_map_tree_init ( struct extent_map_tree * tree , gfp_t mask ) ; 
/*--extent_map_tree_init--*/
struct extent_map * alloc_extent_map ( gfp_t mask ) ; 
/*--alloc_extent_map--*/
void free_extent_map ( struct extent_map * em ) ; 
/*--free_extent_map--*/
int unpin_extent_cache ( struct extent_map_tree * tree , u64 start , u64 len ) ; 
/*--unpin_extent_cache--*/
int add_extent_mapping ( struct extent_map_tree * tree , struct extent_map * em ) ; 
/*--add_extent_mapping--*/
struct extent_map * lookup_extent_mapping ( struct extent_map_tree * tree , u64 start , u64 len ) ; 
/*--lookup_extent_mapping--*/
struct extent_map * search_extent_mapping ( struct extent_map_tree * tree , u64 start , u64 len ) ; 
/*--search_extent_mapping--*/
int remove_extent_mapping ( struct extent_map_tree * tree , struct extent_map * em ) ; 
/*--remove_extent_mapping--*/
int btrfs_sysfs_add_super ( struct btrfs_fs_info * fs ) ; 
/*--btrfs_sysfs_add_super--*/
int btrfs_sysfs_add_root ( struct btrfs_root * root ) ; 
/*--btrfs_sysfs_add_root--*/
void btrfs_sysfs_del_root ( struct btrfs_root * root ) ; 
/*--btrfs_sysfs_del_root--*/
void btrfs_sysfs_del_super ( struct btrfs_fs_info * fs ) ; 
/*--btrfs_sysfs_del_super--*/
int btrfs_init_sysfs ( void ) ; 
/*--btrfs_init_sysfs--*/
void btrfs_exit_sysfs ( void ) ; 
/*--btrfs_exit_sysfs--*/
u64 btrfs_device_type ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_type--*/
void btrfs_set_device_type ( struct extent_buffer * eb , struct btrfs_dev_item * s , u64 val ) ; 
/*--btrfs_set_device_type--*/
u64 btrfs_device_total_bytes ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_total_bytes--*/
void btrfs_set_device_total_bytes ( struct extent_buffer * eb , struct btrfs_dev_item * s , u64 val ) ; 
/*--btrfs_set_device_total_bytes--*/
u64 btrfs_device_bytes_used ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_bytes_used--*/
void btrfs_set_device_bytes_used ( struct extent_buffer * eb , struct btrfs_dev_item * s , u64 val ) ; 
/*--btrfs_set_device_bytes_used--*/
u32 btrfs_device_io_align ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_io_align--*/
void btrfs_set_device_io_align ( struct extent_buffer * eb , struct btrfs_dev_item * s , u32 val ) ; 
/*--btrfs_set_device_io_align--*/
u32 btrfs_device_io_width ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_io_width--*/
void btrfs_set_device_io_width ( struct extent_buffer * eb , struct btrfs_dev_item * s , u32 val ) ; 
/*--btrfs_set_device_io_width--*/
u64 btrfs_device_start_offset ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_start_offset--*/
void btrfs_set_device_start_offset ( struct extent_buffer * eb , struct btrfs_dev_item * s , u64 val ) ; 
/*--btrfs_set_device_start_offset--*/
u32 btrfs_device_sector_size ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_sector_size--*/
void btrfs_set_device_sector_size ( struct extent_buffer * eb , struct btrfs_dev_item * s , u32 val ) ; 
/*--btrfs_set_device_sector_size--*/
u64 btrfs_device_id ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_id--*/
void btrfs_set_device_id ( struct extent_buffer * eb , struct btrfs_dev_item * s , u64 val ) ; 
/*--btrfs_set_device_id--*/
u32 btrfs_device_group ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_group--*/
void btrfs_set_device_group ( struct extent_buffer * eb , struct btrfs_dev_item * s , u32 val ) ; 
/*--btrfs_set_device_group--*/
u8 btrfs_device_seek_speed ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_seek_speed--*/
void btrfs_set_device_seek_speed ( struct extent_buffer * eb , struct btrfs_dev_item * s , u8 val ) ; 
/*--btrfs_set_device_seek_speed--*/
u8 btrfs_device_bandwidth ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_bandwidth--*/
void btrfs_set_device_bandwidth ( struct extent_buffer * eb , struct btrfs_dev_item * s , u8 val ) ; 
/*--btrfs_set_device_bandwidth--*/
u64 btrfs_device_generation ( struct extent_buffer * eb , struct btrfs_dev_item * s ) ; 
/*--btrfs_device_generation--*/
void btrfs_set_device_generation ( struct extent_buffer * eb , struct btrfs_dev_item * s , u64 val ) ; 
/*--btrfs_set_device_generation--*/
u64 btrfs_chunk_length ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_length--*/
void btrfs_set_chunk_length ( struct extent_buffer * eb , struct btrfs_chunk * s , u64 val ) ; 
/*--btrfs_set_chunk_length--*/
u64 btrfs_chunk_owner ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_owner--*/
void btrfs_set_chunk_owner ( struct extent_buffer * eb , struct btrfs_chunk * s , u64 val ) ; 
/*--btrfs_set_chunk_owner--*/
u64 btrfs_chunk_stripe_len ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_stripe_len--*/
void btrfs_set_chunk_stripe_len ( struct extent_buffer * eb , struct btrfs_chunk * s , u64 val ) ; 
/*--btrfs_set_chunk_stripe_len--*/
u32 btrfs_chunk_io_align ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_io_align--*/
void btrfs_set_chunk_io_align ( struct extent_buffer * eb , struct btrfs_chunk * s , u32 val ) ; 
/*--btrfs_set_chunk_io_align--*/
u32 btrfs_chunk_io_width ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_io_width--*/
void btrfs_set_chunk_io_width ( struct extent_buffer * eb , struct btrfs_chunk * s , u32 val ) ; 
/*--btrfs_set_chunk_io_width--*/
u32 btrfs_chunk_sector_size ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_sector_size--*/
void btrfs_set_chunk_sector_size ( struct extent_buffer * eb , struct btrfs_chunk * s , u32 val ) ; 
/*--btrfs_set_chunk_sector_size--*/
u64 btrfs_chunk_type ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_type--*/
void btrfs_set_chunk_type ( struct extent_buffer * eb , struct btrfs_chunk * s , u64 val ) ; 
/*--btrfs_set_chunk_type--*/
u16 btrfs_chunk_num_stripes ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_num_stripes--*/
void btrfs_set_chunk_num_stripes ( struct extent_buffer * eb , struct btrfs_chunk * s , u16 val ) ; 
/*--btrfs_set_chunk_num_stripes--*/
u16 btrfs_chunk_sub_stripes ( struct extent_buffer * eb , struct btrfs_chunk * s ) ; 
/*--btrfs_chunk_sub_stripes--*/
void btrfs_set_chunk_sub_stripes ( struct extent_buffer * eb , struct btrfs_chunk * s , u16 val ) ; 
/*--btrfs_set_chunk_sub_stripes--*/
u64 btrfs_stripe_devid ( struct extent_buffer * eb , struct btrfs_stripe * s ) ; 
/*--btrfs_stripe_devid--*/
void btrfs_set_stripe_devid ( struct extent_buffer * eb , struct btrfs_stripe * s , u64 val ) ; 
/*--btrfs_set_stripe_devid--*/
u64 btrfs_stripe_offset ( struct extent_buffer * eb , struct btrfs_stripe * s ) ; 
/*--btrfs_stripe_offset--*/
void btrfs_set_stripe_offset ( struct extent_buffer * eb , struct btrfs_stripe * s , u64 val ) ; 
/*--btrfs_set_stripe_offset--*/
u64 btrfs_disk_block_group_used ( struct extent_buffer * eb , struct btrfs_block_group_item * s ) ; 
/*--btrfs_disk_block_group_used--*/
void btrfs_set_disk_block_group_used ( struct extent_buffer * eb , struct btrfs_block_group_item * s , u64 val ) ; 
/*--btrfs_set_disk_block_group_used--*/
u64 btrfs_disk_block_group_chunk_objectid ( struct extent_buffer * eb , struct btrfs_block_group_item * s ) ; 
/*--btrfs_disk_block_group_chunk_objectid--*/
void btrfs_set_disk_block_group_chunk_objectid ( struct extent_buffer * eb , struct btrfs_block_group_item * s , u64 val ) ; 
/*--btrfs_set_disk_block_group_chunk_objectid--*/
u64 btrfs_disk_block_group_flags ( struct extent_buffer * eb , struct btrfs_block_group_item * s ) ; 
/*--btrfs_disk_block_group_flags--*/
void btrfs_set_disk_block_group_flags ( struct extent_buffer * eb , struct btrfs_block_group_item * s , u64 val ) ; 
/*--btrfs_set_disk_block_group_flags--*/
u16 btrfs_inode_ref_name_len ( struct extent_buffer * eb , struct btrfs_inode_ref * s ) ; 
/*--btrfs_inode_ref_name_len--*/
void btrfs_set_inode_ref_name_len ( struct extent_buffer * eb , struct btrfs_inode_ref * s , u16 val ) ; 
/*--btrfs_set_inode_ref_name_len--*/
u64 btrfs_inode_ref_index ( struct extent_buffer * eb , struct btrfs_inode_ref * s ) ; 
/*--btrfs_inode_ref_index--*/
void btrfs_set_inode_ref_index ( struct extent_buffer * eb , struct btrfs_inode_ref * s , u64 val ) ; 
/*--btrfs_set_inode_ref_index--*/
u64 btrfs_inode_generation ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_generation--*/
void btrfs_set_inode_generation ( struct extent_buffer * eb , struct btrfs_inode_item * s , u64 val ) ; 
/*--btrfs_set_inode_generation--*/
u64 btrfs_inode_sequence ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_sequence--*/
void btrfs_set_inode_sequence ( struct extent_buffer * eb , struct btrfs_inode_item * s , u64 val ) ; 
/*--btrfs_set_inode_sequence--*/
u64 btrfs_inode_transid ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_transid--*/
void btrfs_set_inode_transid ( struct extent_buffer * eb , struct btrfs_inode_item * s , u64 val ) ; 
/*--btrfs_set_inode_transid--*/
u64 btrfs_inode_size ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_size--*/
void btrfs_set_inode_size ( struct extent_buffer * eb , struct btrfs_inode_item * s , u64 val ) ; 
/*--btrfs_set_inode_size--*/
u64 btrfs_inode_nbytes ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_nbytes--*/
void btrfs_set_inode_nbytes ( struct extent_buffer * eb , struct btrfs_inode_item * s , u64 val ) ; 
/*--btrfs_set_inode_nbytes--*/
u64 btrfs_inode_block_group ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_block_group--*/
void btrfs_set_inode_block_group ( struct extent_buffer * eb , struct btrfs_inode_item * s , u64 val ) ; 
/*--btrfs_set_inode_block_group--*/
u32 btrfs_inode_nlink ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_nlink--*/
void btrfs_set_inode_nlink ( struct extent_buffer * eb , struct btrfs_inode_item * s , u32 val ) ; 
/*--btrfs_set_inode_nlink--*/
u32 btrfs_inode_uid ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_uid--*/
void btrfs_set_inode_uid ( struct extent_buffer * eb , struct btrfs_inode_item * s , u32 val ) ; 
/*--btrfs_set_inode_uid--*/
u32 btrfs_inode_gid ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_gid--*/
void btrfs_set_inode_gid ( struct extent_buffer * eb , struct btrfs_inode_item * s , u32 val ) ; 
/*--btrfs_set_inode_gid--*/
u32 btrfs_inode_mode ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_mode--*/
void btrfs_set_inode_mode ( struct extent_buffer * eb , struct btrfs_inode_item * s , u32 val ) ; 
/*--btrfs_set_inode_mode--*/
u64 btrfs_inode_rdev ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_rdev--*/
void btrfs_set_inode_rdev ( struct extent_buffer * eb , struct btrfs_inode_item * s , u64 val ) ; 
/*--btrfs_set_inode_rdev--*/
u64 btrfs_inode_flags ( struct extent_buffer * eb , struct btrfs_inode_item * s ) ; 
/*--btrfs_inode_flags--*/
void btrfs_set_inode_flags ( struct extent_buffer * eb , struct btrfs_inode_item * s , u64 val ) ; 
/*--btrfs_set_inode_flags--*/
u64 btrfs_timespec_sec ( struct extent_buffer * eb , struct btrfs_timespec * s ) ; 
/*--btrfs_timespec_sec--*/
void btrfs_set_timespec_sec ( struct extent_buffer * eb , struct btrfs_timespec * s , u64 val ) ; 
/*--btrfs_set_timespec_sec--*/
u32 btrfs_timespec_nsec ( struct extent_buffer * eb , struct btrfs_timespec * s ) ; 
/*--btrfs_timespec_nsec--*/
void btrfs_set_timespec_nsec ( struct extent_buffer * eb , struct btrfs_timespec * s , u32 val ) ; 
/*--btrfs_set_timespec_nsec--*/
u64 btrfs_dev_extent_chunk_tree ( struct extent_buffer * eb , struct btrfs_dev_extent * s ) ; 
/*--btrfs_dev_extent_chunk_tree--*/
void btrfs_set_dev_extent_chunk_tree ( struct extent_buffer * eb , struct btrfs_dev_extent * s , u64 val ) ; 
/*--btrfs_set_dev_extent_chunk_tree--*/
u64 btrfs_dev_extent_chunk_objectid ( struct extent_buffer * eb , struct btrfs_dev_extent * s ) ; 
/*--btrfs_dev_extent_chunk_objectid--*/
void btrfs_set_dev_extent_chunk_objectid ( struct extent_buffer * eb , struct btrfs_dev_extent * s , u64 val ) ; 
/*--btrfs_set_dev_extent_chunk_objectid--*/
u64 btrfs_dev_extent_chunk_offset ( struct extent_buffer * eb , struct btrfs_dev_extent * s ) ; 
/*--btrfs_dev_extent_chunk_offset--*/
void btrfs_set_dev_extent_chunk_offset ( struct extent_buffer * eb , struct btrfs_dev_extent * s , u64 val ) ; 
/*--btrfs_set_dev_extent_chunk_offset--*/
u64 btrfs_dev_extent_length ( struct extent_buffer * eb , struct btrfs_dev_extent * s ) ; 
/*--btrfs_dev_extent_length--*/
void btrfs_set_dev_extent_length ( struct extent_buffer * eb , struct btrfs_dev_extent * s , u64 val ) ; 
/*--btrfs_set_dev_extent_length--*/
u64 btrfs_extent_refs ( struct extent_buffer * eb , struct btrfs_extent_item * s ) ; 
/*--btrfs_extent_refs--*/
void btrfs_set_extent_refs ( struct extent_buffer * eb , struct btrfs_extent_item * s , u64 val ) ; 
/*--btrfs_set_extent_refs--*/
u64 btrfs_extent_generation ( struct extent_buffer * eb , struct btrfs_extent_item * s ) ; 
/*--btrfs_extent_generation--*/
void btrfs_set_extent_generation ( struct extent_buffer * eb , struct btrfs_extent_item * s , u64 val ) ; 
/*--btrfs_set_extent_generation--*/
u64 btrfs_extent_flags ( struct extent_buffer * eb , struct btrfs_extent_item * s ) ; 
/*--btrfs_extent_flags--*/
void btrfs_set_extent_flags ( struct extent_buffer * eb , struct btrfs_extent_item * s , u64 val ) ; 
/*--btrfs_set_extent_flags--*/
u32 btrfs_extent_refs_v0 ( struct extent_buffer * eb , struct btrfs_extent_item_v0 * s ) ; 
/*--btrfs_extent_refs_v0--*/
void btrfs_set_extent_refs_v0 ( struct extent_buffer * eb , struct btrfs_extent_item_v0 * s , u32 val ) ; 
/*--btrfs_set_extent_refs_v0--*/
u8 btrfs_tree_block_level ( struct extent_buffer * eb , struct btrfs_tree_block_info * s ) ; 
/*--btrfs_tree_block_level--*/
void btrfs_set_tree_block_level ( struct extent_buffer * eb , struct btrfs_tree_block_info * s , u8 val ) ; 
/*--btrfs_set_tree_block_level--*/
u64 btrfs_extent_data_ref_root ( struct extent_buffer * eb , struct btrfs_extent_data_ref * s ) ; 
/*--btrfs_extent_data_ref_root--*/
void btrfs_set_extent_data_ref_root ( struct extent_buffer * eb , struct btrfs_extent_data_ref * s , u64 val ) ; 
/*--btrfs_set_extent_data_ref_root--*/
u64 btrfs_extent_data_ref_objectid ( struct extent_buffer * eb , struct btrfs_extent_data_ref * s ) ; 
/*--btrfs_extent_data_ref_objectid--*/
void btrfs_set_extent_data_ref_objectid ( struct extent_buffer * eb , struct btrfs_extent_data_ref * s , u64 val ) ; 
/*--btrfs_set_extent_data_ref_objectid--*/
u64 btrfs_extent_data_ref_offset ( struct extent_buffer * eb , struct btrfs_extent_data_ref * s ) ; 
/*--btrfs_extent_data_ref_offset--*/
void btrfs_set_extent_data_ref_offset ( struct extent_buffer * eb , struct btrfs_extent_data_ref * s , u64 val ) ; 
/*--btrfs_set_extent_data_ref_offset--*/
u32 btrfs_extent_data_ref_count ( struct extent_buffer * eb , struct btrfs_extent_data_ref * s ) ; 
/*--btrfs_extent_data_ref_count--*/
void btrfs_set_extent_data_ref_count ( struct extent_buffer * eb , struct btrfs_extent_data_ref * s , u32 val ) ; 
/*--btrfs_set_extent_data_ref_count--*/
u32 btrfs_shared_data_ref_count ( struct extent_buffer * eb , struct btrfs_shared_data_ref * s ) ; 
/*--btrfs_shared_data_ref_count--*/
void btrfs_set_shared_data_ref_count ( struct extent_buffer * eb , struct btrfs_shared_data_ref * s , u32 val ) ; 
/*--btrfs_set_shared_data_ref_count--*/
u8 btrfs_extent_inline_ref_type ( struct extent_buffer * eb , struct btrfs_extent_inline_ref * s ) ; 
/*--btrfs_extent_inline_ref_type--*/
void btrfs_set_extent_inline_ref_type ( struct extent_buffer * eb , struct btrfs_extent_inline_ref * s , u8 val ) ; 
/*--btrfs_set_extent_inline_ref_type--*/
u64 btrfs_extent_inline_ref_offset ( struct extent_buffer * eb , struct btrfs_extent_inline_ref * s ) ; 
/*--btrfs_extent_inline_ref_offset--*/
void btrfs_set_extent_inline_ref_offset ( struct extent_buffer * eb , struct btrfs_extent_inline_ref * s , u64 val ) ; 
/*--btrfs_set_extent_inline_ref_offset--*/
u64 btrfs_ref_root_v0 ( struct extent_buffer * eb , struct btrfs_extent_ref_v0 * s ) ; 
/*--btrfs_ref_root_v0--*/
void btrfs_set_ref_root_v0 ( struct extent_buffer * eb , struct btrfs_extent_ref_v0 * s , u64 val ) ; 
/*--btrfs_set_ref_root_v0--*/
u64 btrfs_ref_generation_v0 ( struct extent_buffer * eb , struct btrfs_extent_ref_v0 * s ) ; 
/*--btrfs_ref_generation_v0--*/
void btrfs_set_ref_generation_v0 ( struct extent_buffer * eb , struct btrfs_extent_ref_v0 * s , u64 val ) ; 
/*--btrfs_set_ref_generation_v0--*/
u64 btrfs_ref_objectid_v0 ( struct extent_buffer * eb , struct btrfs_extent_ref_v0 * s ) ; 
/*--btrfs_ref_objectid_v0--*/
void btrfs_set_ref_objectid_v0 ( struct extent_buffer * eb , struct btrfs_extent_ref_v0 * s , u64 val ) ; 
/*--btrfs_set_ref_objectid_v0--*/
u32 btrfs_ref_count_v0 ( struct extent_buffer * eb , struct btrfs_extent_ref_v0 * s ) ; 
/*--btrfs_ref_count_v0--*/
void btrfs_set_ref_count_v0 ( struct extent_buffer * eb , struct btrfs_extent_ref_v0 * s , u32 val ) ; 
/*--btrfs_set_ref_count_v0--*/
u64 btrfs_key_blockptr ( struct extent_buffer * eb , struct btrfs_key_ptr * s ) ; 
/*--btrfs_key_blockptr--*/
void btrfs_set_key_blockptr ( struct extent_buffer * eb , struct btrfs_key_ptr * s , u64 val ) ; 
/*--btrfs_set_key_blockptr--*/
u64 btrfs_key_generation ( struct extent_buffer * eb , struct btrfs_key_ptr * s ) ; 
/*--btrfs_key_generation--*/
void btrfs_set_key_generation ( struct extent_buffer * eb , struct btrfs_key_ptr * s , u64 val ) ; 
/*--btrfs_set_key_generation--*/
u32 btrfs_item_offset ( struct extent_buffer * eb , struct btrfs_item * s ) ; 
/*--btrfs_item_offset--*/
void btrfs_set_item_offset ( struct extent_buffer * eb , struct btrfs_item * s , u32 val ) ; 
/*--btrfs_set_item_offset--*/
u32 btrfs_item_size ( struct extent_buffer * eb , struct btrfs_item * s ) ; 
/*--btrfs_item_size--*/
void btrfs_set_item_size ( struct extent_buffer * eb , struct btrfs_item * s , u32 val ) ; 
/*--btrfs_set_item_size--*/
u64 btrfs_dir_log_end ( struct extent_buffer * eb , struct btrfs_dir_log_item * s ) ; 
/*--btrfs_dir_log_end--*/
void btrfs_set_dir_log_end ( struct extent_buffer * eb , struct btrfs_dir_log_item * s , u64 val ) ; 
/*--btrfs_set_dir_log_end--*/
u64 btrfs_root_ref_dirid ( struct extent_buffer * eb , struct btrfs_root_ref * s ) ; 
/*--btrfs_root_ref_dirid--*/
void btrfs_set_root_ref_dirid ( struct extent_buffer * eb , struct btrfs_root_ref * s , u64 val ) ; 
/*--btrfs_set_root_ref_dirid--*/
u64 btrfs_root_ref_sequence ( struct extent_buffer * eb , struct btrfs_root_ref * s ) ; 
/*--btrfs_root_ref_sequence--*/
void btrfs_set_root_ref_sequence ( struct extent_buffer * eb , struct btrfs_root_ref * s , u64 val ) ; 
/*--btrfs_set_root_ref_sequence--*/
u16 btrfs_root_ref_name_len ( struct extent_buffer * eb , struct btrfs_root_ref * s ) ; 
/*--btrfs_root_ref_name_len--*/
void btrfs_set_root_ref_name_len ( struct extent_buffer * eb , struct btrfs_root_ref * s , u16 val ) ; 
/*--btrfs_set_root_ref_name_len--*/
u16 btrfs_dir_data_len ( struct extent_buffer * eb , struct btrfs_dir_item * s ) ; 
/*--btrfs_dir_data_len--*/
void btrfs_set_dir_data_len ( struct extent_buffer * eb , struct btrfs_dir_item * s , u16 val ) ; 
/*--btrfs_set_dir_data_len--*/
u8 btrfs_dir_type ( struct extent_buffer * eb , struct btrfs_dir_item * s ) ; 
/*--btrfs_dir_type--*/
void btrfs_set_dir_type ( struct extent_buffer * eb , struct btrfs_dir_item * s , u8 val ) ; 
/*--btrfs_set_dir_type--*/
u16 btrfs_dir_name_len ( struct extent_buffer * eb , struct btrfs_dir_item * s ) ; 
/*--btrfs_dir_name_len--*/
void btrfs_set_dir_name_len ( struct extent_buffer * eb , struct btrfs_dir_item * s , u16 val ) ; 
/*--btrfs_set_dir_name_len--*/
u64 btrfs_dir_transid ( struct extent_buffer * eb , struct btrfs_dir_item * s ) ; 
/*--btrfs_dir_transid--*/
void btrfs_set_dir_transid ( struct extent_buffer * eb , struct btrfs_dir_item * s , u64 val ) ; 
/*--btrfs_set_dir_transid--*/
u64 btrfs_disk_root_generation ( struct extent_buffer * eb , struct btrfs_root_item * s ) ; 
/*--btrfs_disk_root_generation--*/
void btrfs_set_disk_root_generation ( struct extent_buffer * eb , struct btrfs_root_item * s , u64 val ) ; 
/*--btrfs_set_disk_root_generation--*/
u32 btrfs_disk_root_refs ( struct extent_buffer * eb , struct btrfs_root_item * s ) ; 
/*--btrfs_disk_root_refs--*/
void btrfs_set_disk_root_refs ( struct extent_buffer * eb , struct btrfs_root_item * s , u32 val ) ; 
/*--btrfs_set_disk_root_refs--*/
u64 btrfs_disk_root_bytenr ( struct extent_buffer * eb , struct btrfs_root_item * s ) ; 
/*--btrfs_disk_root_bytenr--*/
void btrfs_set_disk_root_bytenr ( struct extent_buffer * eb , struct btrfs_root_item * s , u64 val ) ; 
/*--btrfs_set_disk_root_bytenr--*/
u8 btrfs_disk_root_level ( struct extent_buffer * eb , struct btrfs_root_item * s ) ; 
/*--btrfs_disk_root_level--*/
void btrfs_set_disk_root_level ( struct extent_buffer * eb , struct btrfs_root_item * s , u8 val ) ; 
/*--btrfs_set_disk_root_level--*/
u8 btrfs_file_extent_type ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_type--*/
void btrfs_set_file_extent_type ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u8 val ) ; 
/*--btrfs_set_file_extent_type--*/
u64 btrfs_file_extent_disk_bytenr ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_disk_bytenr--*/
void btrfs_set_file_extent_disk_bytenr ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u64 val ) ; 
/*--btrfs_set_file_extent_disk_bytenr--*/
u64 btrfs_file_extent_generation ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_generation--*/
void btrfs_set_file_extent_generation ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u64 val ) ; 
/*--btrfs_set_file_extent_generation--*/
u64 btrfs_file_extent_disk_num_bytes ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_disk_num_bytes--*/
void btrfs_set_file_extent_disk_num_bytes ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u64 val ) ; 
/*--btrfs_set_file_extent_disk_num_bytes--*/
u64 btrfs_file_extent_offset ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_offset--*/
void btrfs_set_file_extent_offset ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u64 val ) ; 
/*--btrfs_set_file_extent_offset--*/
u64 btrfs_file_extent_num_bytes ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_num_bytes--*/
void btrfs_set_file_extent_num_bytes ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u64 val ) ; 
/*--btrfs_set_file_extent_num_bytes--*/
u64 btrfs_file_extent_ram_bytes ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_ram_bytes--*/
void btrfs_set_file_extent_ram_bytes ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u64 val ) ; 
/*--btrfs_set_file_extent_ram_bytes--*/
u8 btrfs_file_extent_compression ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_compression--*/
void btrfs_set_file_extent_compression ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u8 val ) ; 
/*--btrfs_set_file_extent_compression--*/
u8 btrfs_file_extent_encryption ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_encryption--*/
void btrfs_set_file_extent_encryption ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u8 val ) ; 
/*--btrfs_set_file_extent_encryption--*/
u16 btrfs_file_extent_other_encoding ( struct extent_buffer * eb , struct btrfs_file_extent_item * s ) ; 
/*--btrfs_file_extent_other_encoding--*/
void btrfs_set_file_extent_other_encoding ( struct extent_buffer * eb , struct btrfs_file_extent_item * s , u16 val ) ; 
/*--btrfs_set_file_extent_other_encoding--*/
void btrfs_node_key ( struct extent_buffer * eb , struct btrfs_disk_key * disk_key , int nr ) ; 
/*--btrfs_node_key--*/
ssize_t __btrfs_getxattr ( struct inode * inode , const char * name , void * buffer , size_t size ) ; 
/*--__btrfs_getxattr--*/
int __btrfs_setxattr ( struct btrfs_trans_handle * trans , struct inode * inode , const char * name , const void * value , size_t size , int flags ) ; 
/*--__btrfs_setxattr--*/
ssize_t btrfs_listxattr ( struct dentry * dentry , char * buffer , size_t size ) ; 
/*--btrfs_listxattr--*/
ssize_t btrfs_getxattr ( struct dentry * dentry , const char * name , void * buffer , size_t size ) ; 
/*--btrfs_getxattr--*/
int btrfs_setxattr ( struct dentry * dentry , const char * name , const void * value , size_t size , int flags ) ; 
/*--btrfs_setxattr--*/
int btrfs_removexattr ( struct dentry * dentry , const char * name ) ; 
/*--btrfs_removexattr--*/
int btrfs_xattr_security_init ( struct btrfs_trans_handle * trans , struct inode * inode , struct inode * dir ) ; 
/*--btrfs_xattr_security_init--*/
int btrfs_add_ordered_extent ( struct inode * inode , u64 file_offset , u64 start , u64 len , u64 disk_len , int type ) ; 
/*--btrfs_add_ordered_extent--*/
int btrfs_add_ordered_extent_dio ( struct inode * inode , u64 file_offset , u64 start , u64 len , u64 disk_len , int type ) ; 
/*--btrfs_add_ordered_extent_dio--*/
int btrfs_add_ordered_sum ( struct inode * inode , struct btrfs_ordered_extent * entry , struct btrfs_ordered_sum * sum ) ; 
/*--btrfs_add_ordered_sum--*/
int btrfs_dec_test_ordered_pending ( struct inode * inode , struct btrfs_ordered_extent * * cached , u64 file_offset , u64 io_size ) ; 
/*--btrfs_dec_test_ordered_pending--*/
int btrfs_put_ordered_extent ( struct btrfs_ordered_extent * entry ) ; 
/*--btrfs_put_ordered_extent--*/
int btrfs_remove_ordered_extent ( struct inode * inode , struct btrfs_ordered_extent * entry ) ; 
/*--btrfs_remove_ordered_extent--*/
int btrfs_wait_ordered_extents ( struct btrfs_root * root , int nocow_only , int delay_iput ) ; 
/*--btrfs_wait_ordered_extents--*/
int btrfs_run_ordered_operations ( struct btrfs_root * root , int wait ) ; 
/*--btrfs_run_ordered_operations--*/
void btrfs_start_ordered_extent ( struct inode * inode , struct btrfs_ordered_extent * entry , int wait ) ; 
/*--btrfs_start_ordered_extent--*/
int btrfs_wait_ordered_range ( struct inode * inode , u64 start , u64 len ) ; 
/*--btrfs_wait_ordered_range--*/
struct btrfs_ordered_extent * btrfs_lookup_ordered_extent ( struct inode * inode , u64 file_offset ) ; 
/*--btrfs_lookup_ordered_extent--*/
struct btrfs_ordered_extent * btrfs_lookup_ordered_range ( struct inode * inode , u64 file_offset , u64 len ) ; 
/*--btrfs_lookup_ordered_range--*/
struct btrfs_ordered_extent * btrfs_lookup_first_ordered_extent ( struct inode * inode , u64 file_offset ) ; 
/*--btrfs_lookup_first_ordered_extent--*/
int btrfs_ordered_update_i_size ( struct inode * inode , u64 offset , struct btrfs_ordered_extent * ordered ) ; 
/*--btrfs_ordered_update_i_size--*/
int btrfs_find_ordered_sum ( struct inode * inode , u64 offset , u64 disk_bytenr , u32 * sum ) ; 
/*--btrfs_find_ordered_sum--*/
int btrfs_add_ordered_operation ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct inode * inode ) ; 
/*--btrfs_add_ordered_operation--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) extent_io_init ( void ) ; 
/*--extent_io_init--*/
void extent_io_exit ( void ) ; 
/*--extent_io_exit--*/
void extent_io_tree_init ( struct extent_io_tree * tree , struct address_space * mapping , gfp_t mask ) ; 
/*--extent_io_tree_init--*/
void free_extent_state ( struct extent_state * state ) ; 
/*--free_extent_state--*/
int clear_extent_bit ( struct extent_io_tree * tree , u64 start , u64 end , int bits , int wake , int delete , struct extent_state * * cached_state , gfp_t mask ) ; 
/*--clear_extent_bit--*/
int wait_extent_bit ( struct extent_io_tree * tree , u64 start , u64 end , int bits ) ; 
/*--wait_extent_bit--*/
int set_extent_bit ( struct extent_io_tree * tree , u64 start , u64 end , int bits , int exclusive_bits , u64 * failed_start , struct extent_state * * cached_state , gfp_t mask ) ; 
/*--set_extent_bit--*/
int set_extent_dirty ( struct extent_io_tree * tree , u64 start , u64 end , gfp_t mask ) ; 
/*--set_extent_dirty--*/
int set_extent_bits ( struct extent_io_tree * tree , u64 start , u64 end , int bits , gfp_t mask ) ; 
/*--set_extent_bits--*/
int clear_extent_bits ( struct extent_io_tree * tree , u64 start , u64 end , int bits , gfp_t mask ) ; 
/*--clear_extent_bits--*/
int set_extent_delalloc ( struct extent_io_tree * tree , u64 start , u64 end , struct extent_state * * cached_state , gfp_t mask ) ; 
/*--set_extent_delalloc--*/
int clear_extent_dirty ( struct extent_io_tree * tree , u64 start , u64 end , gfp_t mask ) ; 
/*--clear_extent_dirty--*/
int set_extent_new ( struct extent_io_tree * tree , u64 start , u64 end , gfp_t mask ) ; 
/*--set_extent_new--*/
int set_extent_uptodate ( struct extent_io_tree * tree , u64 start , u64 end , gfp_t mask ) ; 
/*--set_extent_uptodate--*/
int wait_on_extent_writeback ( struct extent_io_tree * tree , u64 start , u64 end ) ; 
/*--wait_on_extent_writeback--*/
int lock_extent_bits ( struct extent_io_tree * tree , u64 start , u64 end , int bits , struct extent_state * * cached_state , gfp_t mask ) ; 
/*--lock_extent_bits--*/
int lock_extent ( struct extent_io_tree * tree , u64 start , u64 end , gfp_t mask ) ; 
/*--lock_extent--*/
int try_lock_extent ( struct extent_io_tree * tree , u64 start , u64 end , gfp_t mask ) ; 
/*--try_lock_extent--*/
int unlock_extent_cached ( struct extent_io_tree * tree , u64 start , u64 end , struct extent_state * * cached , gfp_t mask ) ; 
/*--unlock_extent_cached--*/
int unlock_extent ( struct extent_io_tree * tree , u64 start , u64 end , gfp_t mask ) ; 
/*--unlock_extent--*/
int set_range_dirty ( struct extent_io_tree * tree , u64 start , u64 end ) ; 
/*--set_range_dirty--*/
int find_first_extent_bit ( struct extent_io_tree * tree , u64 start , u64 * start_ret , u64 * end_ret , int bits ) ; 
/*--find_first_extent_bit--*/
struct extent_state * find_first_extent_bit_state ( struct extent_io_tree * tree , u64 start , int bits ) ; 
/*--find_first_extent_bit_state--*/
int extent_clear_unlock_delalloc ( struct inode * inode , struct extent_io_tree * tree , u64 start , u64 end , struct page * locked_page , unsigned long op ) ; 
/*--extent_clear_unlock_delalloc--*/
u64 count_range_bits ( struct extent_io_tree * tree , u64 * start , u64 search_end , u64 max_bytes , unsigned long bits ) ; 
/*--count_range_bits--*/
int set_state_private ( struct extent_io_tree * tree , u64 start , u64 private ) ; 
/*--set_state_private--*/
int get_state_private ( struct extent_io_tree * tree , u64 start , u64 * private ) ; 
/*--get_state_private--*/
int test_range_bit ( struct extent_io_tree * tree , u64 start , u64 end , int bits , int filled , struct extent_state * cached ) ; 
/*--test_range_bit--*/
void set_page_extent_mapped ( struct page * page ) ; 
/*--set_page_extent_mapped--*/
int extent_read_full_page ( struct extent_io_tree * tree , struct page * page , get_extent_t * get_extent ) ; 
/*--extent_read_full_page--*/
int extent_write_full_page ( struct extent_io_tree * tree , struct page * page , get_extent_t * get_extent , struct writeback_control * wbc ) ; 
/*--extent_write_full_page--*/
int extent_write_locked_range ( struct extent_io_tree * tree , struct inode * inode , u64 start , u64 end , get_extent_t * get_extent , int mode ) ; 
/*--extent_write_locked_range--*/
int extent_writepages ( struct extent_io_tree * tree , struct address_space * mapping , get_extent_t * get_extent , struct writeback_control * wbc ) ; 
/*--extent_writepages--*/
int extent_readpages ( struct extent_io_tree * tree , struct address_space * mapping , struct list_head * pages , unsigned nr_pages , get_extent_t get_extent ) ; 
/*--extent_readpages--*/
int extent_invalidatepage ( struct extent_io_tree * tree , struct page * page , unsigned long offset ) ; 
/*--extent_invalidatepage--*/
int extent_commit_write ( struct extent_io_tree * tree , struct inode * inode , struct page * page , unsigned from , unsigned to ) ; 
/*--extent_commit_write--*/
int extent_prepare_write ( struct extent_io_tree * tree , struct inode * inode , struct page * page , unsigned from , unsigned to , get_extent_t * get_extent ) ; 
/*--extent_prepare_write--*/
int try_release_extent_state ( struct extent_map_tree * map , struct extent_io_tree * tree , struct page * page , gfp_t mask ) ; 
/*--try_release_extent_state--*/
int try_release_extent_mapping ( struct extent_map_tree * map , struct extent_io_tree * tree , struct page * page , gfp_t mask ) ; 
/*--try_release_extent_mapping--*/
sector_t extent_bmap ( struct address_space * mapping , sector_t iblock , get_extent_t * get_extent ) ; 
/*--extent_bmap--*/
int extent_fiemap ( struct inode * inode , struct fiemap_extent_info * fieinfo , __u64 start , __u64 len , get_extent_t * get_extent ) ; 
/*--extent_fiemap--*/
struct extent_buffer * alloc_extent_buffer ( struct extent_io_tree * tree , u64 start , unsigned long len , struct page * page0 , gfp_t mask ) ; 
/*--alloc_extent_buffer--*/
struct extent_buffer * find_extent_buffer ( struct extent_io_tree * tree , u64 start , unsigned long len , gfp_t mask ) ; 
/*--find_extent_buffer--*/
void free_extent_buffer ( struct extent_buffer * eb ) ; 
/*--free_extent_buffer--*/
int clear_extent_buffer_dirty ( struct extent_io_tree * tree , struct extent_buffer * eb ) ; 
/*--clear_extent_buffer_dirty--*/
int wait_on_extent_buffer_writeback ( struct extent_io_tree * tree , struct extent_buffer * eb ) ; 
/*--wait_on_extent_buffer_writeback--*/
int set_extent_buffer_dirty ( struct extent_io_tree * tree , struct extent_buffer * eb ) ; 
/*--set_extent_buffer_dirty--*/
int clear_extent_buffer_uptodate ( struct extent_io_tree * tree , struct extent_buffer * eb , struct extent_state * * cached_state ) ; 
/*--clear_extent_buffer_uptodate--*/
int set_extent_buffer_uptodate ( struct extent_io_tree * tree , struct extent_buffer * eb ) ; 
/*--set_extent_buffer_uptodate--*/
int extent_range_uptodate ( struct extent_io_tree * tree , u64 start , u64 end ) ; 
/*--extent_range_uptodate--*/
int extent_buffer_uptodate ( struct extent_io_tree * tree , struct extent_buffer * eb , struct extent_state * cached_state ) ; 
/*--extent_buffer_uptodate--*/
int read_extent_buffer_pages ( struct extent_io_tree * tree , struct extent_buffer * eb , u64 start , int wait , get_extent_t * get_extent , int mirror_num ) ; 
/*--read_extent_buffer_pages--*/
void read_extent_buffer ( struct extent_buffer * eb , void * dstv , unsigned long start , unsigned long len ) ; 
/*--read_extent_buffer--*/
int map_private_extent_buffer ( struct extent_buffer * eb , unsigned long start , unsigned long min_len , char * * token , char * * map , unsigned long * map_start , unsigned long * map_len , int km ) ; 
/*--map_private_extent_buffer--*/
int map_extent_buffer ( struct extent_buffer * eb , unsigned long start , unsigned long min_len , char * * token , char * * map , unsigned long * map_start , unsigned long * map_len , int km ) ; 
/*--map_extent_buffer--*/
void unmap_extent_buffer ( struct extent_buffer * eb , char * token , int km ) ; 
/*--unmap_extent_buffer--*/
int memcmp_extent_buffer ( struct extent_buffer * eb , const void * ptrv , unsigned long start , unsigned long len ) ; 
/*--memcmp_extent_buffer--*/
void write_extent_buffer ( struct extent_buffer * eb , const void * srcv , unsigned long start , unsigned long len ) ; 
/*--write_extent_buffer--*/
void memset_extent_buffer ( struct extent_buffer * eb , char c , unsigned long start , unsigned long len ) ; 
/*--memset_extent_buffer--*/
void copy_extent_buffer ( struct extent_buffer * dst , struct extent_buffer * src , unsigned long dst_offset , unsigned long src_offset , unsigned long len ) ; 
/*--copy_extent_buffer--*/
void memcpy_extent_buffer ( struct extent_buffer * dst , unsigned long dst_offset , unsigned long src_offset , unsigned long len ) ; 
/*--memcpy_extent_buffer--*/
void memmove_extent_buffer ( struct extent_buffer * dst , unsigned long dst_offset , unsigned long src_offset , unsigned long len ) ; 
/*--memmove_extent_buffer--*/
int try_release_extent_buffer ( struct extent_io_tree * tree , struct page * page ) ; 
/*--try_release_extent_buffer--*/
void btrfs_lock_volumes ( void ) ; 
/*--btrfs_lock_volumes--*/
void btrfs_unlock_volumes ( void ) ; 
/*--btrfs_unlock_volumes--*/
int btrfs_cleanup_fs_uuids ( void ) ; 
/*--btrfs_cleanup_fs_uuids--*/
int btrfs_close_extra_devices ( struct btrfs_fs_devices * fs_devices ) ; 
/*--btrfs_close_extra_devices--*/
int btrfs_close_devices ( struct btrfs_fs_devices * fs_devices ) ; 
/*--btrfs_close_devices--*/
int btrfs_open_devices ( struct btrfs_fs_devices * fs_devices , fmode_t flags , void * holder ) ; 
/*--btrfs_open_devices--*/
int btrfs_scan_one_device ( const char * path , fmode_t flags , void * holder , struct btrfs_fs_devices * * fs_devices_ret ) ; 
/*--btrfs_scan_one_device--*/
int find_free_dev_extent ( struct btrfs_trans_handle * trans , struct btrfs_device * device , u64 num_bytes , u64 * start , u64 * max_avail ) ; 
/*--find_free_dev_extent--*/
int btrfs_alloc_dev_extent ( struct btrfs_trans_handle * trans , struct btrfs_device * device , u64 chunk_tree , u64 chunk_objectid , u64 chunk_offset , u64 start , u64 num_bytes ) ; 
/*--btrfs_alloc_dev_extent--*/
int btrfs_add_device ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_device * device ) ; 
/*--btrfs_add_device--*/
int btrfs_rm_device ( struct btrfs_root * root , char * device_path ) ; 
/*--btrfs_rm_device--*/
int btrfs_init_new_device ( struct btrfs_root * root , char * device_path ) ; 
/*--btrfs_init_new_device--*/
int btrfs_grow_device ( struct btrfs_trans_handle * trans , struct btrfs_device * device , u64 new_size ) ; 
/*--btrfs_grow_device--*/
int btrfs_balance ( struct btrfs_root * dev_root ) ; 
/*--btrfs_balance--*/
int btrfs_shrink_device ( struct btrfs_device * device , u64 new_size ) ; 
/*--btrfs_shrink_device--*/
int btrfs_alloc_chunk ( struct btrfs_trans_handle * trans , struct btrfs_root * extent_root , u64 type ) ; 
/*--btrfs_alloc_chunk--*/
int btrfs_chunk_readonly ( struct btrfs_root * root , u64 chunk_offset ) ; 
/*--btrfs_chunk_readonly--*/
void btrfs_mapping_init ( struct btrfs_mapping_tree * tree ) ; 
/*--btrfs_mapping_init--*/
void btrfs_mapping_tree_free ( struct btrfs_mapping_tree * tree ) ; 
/*--btrfs_mapping_tree_free--*/
int btrfs_num_copies ( struct btrfs_mapping_tree * map_tree , u64 logical , u64 len ) ; 
/*--btrfs_num_copies--*/
int btrfs_map_block ( struct btrfs_mapping_tree * map_tree , int rw , u64 logical , u64 * length , struct btrfs_multi_bio * * multi_ret , int mirror_num ) ; 
/*--btrfs_map_block--*/
int btrfs_rmap_block ( struct btrfs_mapping_tree * map_tree , u64 chunk_start , u64 physical , u64 devid , u64 * * logical , int * naddrs , int * stripe_len ) ; 
/*--btrfs_rmap_block--*/
int btrfs_unplug_page ( struct btrfs_mapping_tree * map_tree , u64 logical , struct page * page ) ; 
/*--btrfs_unplug_page--*/
int btrfs_map_bio ( struct btrfs_root * root , int rw , struct bio * bio , int mirror_num , int async_submit ) ; 
/*--btrfs_map_bio--*/
struct btrfs_device * btrfs_find_device ( struct btrfs_root * root , u64 devid , u8 * uuid , u8 * fsid ) ; 
/*--btrfs_find_device--*/
int btrfs_read_super_device ( struct btrfs_root * root , struct extent_buffer * buf ) ; 
/*--btrfs_read_super_device--*/
int btrfs_read_sys_array ( struct btrfs_root * root ) ; 
/*--btrfs_read_sys_array--*/
int btrfs_read_chunk_tree ( struct btrfs_root * root ) ; 
/*--btrfs_read_chunk_tree--*/
int btrfs_stop_workers ( struct btrfs_workers * workers ) ; 
/*--btrfs_stop_workers--*/
void btrfs_init_workers ( struct btrfs_workers * workers , char * name , int max , struct btrfs_workers * async_helper ) ; 
/*--btrfs_init_workers--*/
int btrfs_start_workers ( struct btrfs_workers * workers , int num_workers ) ; 
/*--btrfs_start_workers--*/
int btrfs_requeue_work ( struct btrfs_work * work ) ; 
/*--btrfs_requeue_work--*/
void btrfs_set_work_high_prio ( struct btrfs_work * work ) ; 
/*--btrfs_set_work_high_prio--*/
int btrfs_queue_worker ( struct btrfs_workers * workers , struct btrfs_work * work ) ; 
/*--btrfs_queue_worker--*/
void btrfs_update_iflags ( struct inode * inode ) ; 
/*--btrfs_update_iflags--*/
void btrfs_inherit_iflags ( struct inode * inode , struct inode * dir ) ; 
/*--btrfs_inherit_iflags--*/
long btrfs_ioctl_space_info ( struct btrfs_root * root , void * arg ) ; 
/*--btrfs_ioctl_space_info--*/
long btrfs_ioctl_trans_end ( struct file * file ) ; 
/*--btrfs_ioctl_trans_end--*/
long btrfs_ioctl ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--btrfs_ioctl--*/
void btrfs_set_lock_blocking ( struct extent_buffer * eb ) ; 
/*--btrfs_set_lock_blocking--*/
void btrfs_clear_lock_blocking ( struct extent_buffer * eb ) ; 
/*--btrfs_clear_lock_blocking--*/
int btrfs_try_spin_lock ( struct extent_buffer * eb ) ; 
/*--btrfs_try_spin_lock--*/
int btrfs_tree_lock ( struct extent_buffer * eb ) ; 
/*--btrfs_tree_lock--*/
int btrfs_try_tree_lock ( struct extent_buffer * eb ) ; 
/*--btrfs_try_tree_lock--*/
int btrfs_tree_unlock ( struct extent_buffer * eb ) ; 
/*--btrfs_tree_unlock--*/
void btrfs_assert_tree_locked ( struct extent_buffer * eb ) ; 
/*--btrfs_assert_tree_locked--*/
int btrfs_insert_orphan_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 offset ) ; 
/*--btrfs_insert_orphan_item--*/
int btrfs_del_orphan_item ( struct btrfs_trans_handle * trans , struct btrfs_root * root , u64 offset ) ; 
/*--btrfs_del_orphan_item--*/
int btrfs_find_orphan_item ( struct btrfs_root * root , u64 offset ) ; 
/*--btrfs_find_orphan_item--*/
int btrfs_pin_log_trans ( struct btrfs_root * root ) ; 
/*--btrfs_pin_log_trans--*/
int btrfs_end_log_trans ( struct btrfs_root * root ) ; 
/*--btrfs_end_log_trans--*/
int btrfs_sync_log ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_sync_log--*/
int btrfs_free_log ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_free_log--*/
int btrfs_free_log_root_tree ( struct btrfs_trans_handle * trans , struct btrfs_fs_info * fs_info ) ; 
/*--btrfs_free_log_root_tree--*/
int btrfs_del_dir_entries_in_log ( struct btrfs_trans_handle * trans , struct btrfs_root * root , const char * name , int name_len , struct inode * dir , u64 index ) ; 
/*--btrfs_del_dir_entries_in_log--*/
int btrfs_del_inode_ref_in_log ( struct btrfs_trans_handle * trans , struct btrfs_root * root , const char * name , int name_len , struct inode * inode , u64 dirid ) ; 
/*--btrfs_del_inode_ref_in_log--*/
int btrfs_log_inode_parent ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct inode * inode , struct dentry * parent , int exists_only ) ; 
/*--btrfs_log_inode_parent--*/
int btrfs_log_dentry_safe ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct dentry * dentry ) ; 
/*--btrfs_log_dentry_safe--*/
int btrfs_recover_log_trees ( struct btrfs_root * log_root_tree ) ; 
/*--btrfs_recover_log_trees--*/
void btrfs_record_unlink_dir ( struct btrfs_trans_handle * trans , struct inode * dir , struct inode * inode , int for_rename ) ; 
/*--btrfs_record_unlink_dir--*/
int btrfs_log_new_name ( struct btrfs_trans_handle * trans , struct inode * inode , struct inode * old_dir , struct dentry * parent ) ; 
/*--btrfs_log_new_name--*/
int btrfs_check_acl ( struct inode * inode , int mask ) ; 
/*--btrfs_check_acl--*/
int btrfs_init_acl ( struct btrfs_trans_handle * trans , struct inode * inode , struct inode * dir ) ; 
/*--btrfs_init_acl--*/
int btrfs_acl_chmod ( struct inode * inode ) ; 
/*--btrfs_acl_chmod--*/
int btrfs_add_free_space ( struct btrfs_block_group_cache * block_group , u64 offset , u64 bytes ) ; 
/*--btrfs_add_free_space--*/
int btrfs_remove_free_space ( struct btrfs_block_group_cache * block_group , u64 offset , u64 bytes ) ; 
/*--btrfs_remove_free_space--*/
void btrfs_dump_free_space ( struct btrfs_block_group_cache * block_group , u64 bytes ) ; 
/*--btrfs_dump_free_space--*/
u64 btrfs_block_group_free_space ( struct btrfs_block_group_cache * block_group ) ; 
/*--btrfs_block_group_free_space--*/
void btrfs_remove_free_space_cache ( struct btrfs_block_group_cache * block_group ) ; 
/*--btrfs_remove_free_space_cache--*/
u64 btrfs_find_space_for_alloc ( struct btrfs_block_group_cache * block_group , u64 offset , u64 bytes , u64 empty_size ) ; 
/*--btrfs_find_space_for_alloc--*/
int btrfs_return_cluster_to_free_space ( struct btrfs_block_group_cache * block_group , struct btrfs_free_cluster * cluster ) ; 
/*--btrfs_return_cluster_to_free_space--*/
u64 btrfs_alloc_from_cluster ( struct btrfs_block_group_cache * block_group , struct btrfs_free_cluster * cluster , u64 bytes , u64 min_start ) ; 
/*--btrfs_alloc_from_cluster--*/
int btrfs_find_space_cluster ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct btrfs_block_group_cache * block_group , struct btrfs_free_cluster * cluster , u64 offset , u64 bytes , u64 empty_size ) ; 
/*--btrfs_find_space_cluster--*/
void btrfs_init_free_cluster ( struct btrfs_free_cluster * cluster ) ; 
/*--btrfs_init_free_cluster--*/
int btrfs_zlib_compress_pages ( struct address_space * mapping , u64 start , unsigned long len , struct page * * pages , unsigned long nr_dest_pages , unsigned long * out_pages , unsigned long * total_in , unsigned long * total_out , unsigned long max_out ) ; 
/*--btrfs_zlib_compress_pages--*/
int btrfs_zlib_decompress_biovec ( struct page * * pages_in , u64 disk_start , struct bio_vec * bvec , int vcnt , size_t srclen ) ; 
/*--btrfs_zlib_decompress_biovec--*/
int btrfs_zlib_decompress ( unsigned char * data_in , struct page * dest_page , unsigned long start_byte , size_t srclen , size_t destlen ) ; 
/*--btrfs_zlib_decompress--*/
void btrfs_zlib_exit ( void ) ; 
/*--btrfs_zlib_exit--*/
int btrfs_submit_compressed_write ( struct inode * inode , u64 start , unsigned long len , u64 disk_start , unsigned long compressed_len , struct page * * compressed_pages , unsigned long nr_pages ) ; 
/*--btrfs_submit_compressed_write--*/
int btrfs_submit_compressed_read ( struct inode * inode , struct bio * bio , int mirror_num , unsigned long bio_flags ) ; 
/*--btrfs_submit_compressed_read--*/
int btrfs_delayed_ref_lock ( struct btrfs_trans_handle * trans , struct btrfs_delayed_ref_head * head ) ; 
/*--btrfs_delayed_ref_lock--*/
int btrfs_find_ref_cluster ( struct btrfs_trans_handle * trans , struct list_head * cluster , u64 start ) ; 
/*--btrfs_find_ref_cluster--*/
int btrfs_delayed_ref_pending ( struct btrfs_trans_handle * trans , u64 bytenr ) ; 
/*--btrfs_delayed_ref_pending--*/
int btrfs_add_delayed_tree_ref ( struct btrfs_trans_handle * trans , u64 bytenr , u64 num_bytes , u64 parent , u64 ref_root , int level , int action , struct btrfs_delayed_extent_op * extent_op ) ; 
/*--btrfs_add_delayed_tree_ref--*/
int btrfs_add_delayed_data_ref ( struct btrfs_trans_handle * trans , u64 bytenr , u64 num_bytes , u64 parent , u64 ref_root , u64 owner , u64 offset , int action , struct btrfs_delayed_extent_op * extent_op ) ; 
/*--btrfs_add_delayed_data_ref--*/
int btrfs_add_delayed_extent_op ( struct btrfs_trans_handle * trans , u64 bytenr , u64 num_bytes , struct btrfs_delayed_extent_op * extent_op ) ; 
/*--btrfs_add_delayed_extent_op--*/
struct btrfs_delayed_ref_head * btrfs_find_delayed_ref_head ( struct btrfs_trans_handle * trans , u64 bytenr ) ; 
/*--btrfs_find_delayed_ref_head--*/
int btrfs_init_reloc_root ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_init_reloc_root--*/
int btrfs_update_reloc_root ( struct btrfs_trans_handle * trans , struct btrfs_root * root ) ; 
/*--btrfs_update_reloc_root--*/
int btrfs_relocate_block_group ( struct btrfs_root * extent_root , u64 group_start ) ; 
/*--btrfs_relocate_block_group--*/
int btrfs_recover_relocation ( struct btrfs_root * root ) ; 
/*--btrfs_recover_relocation--*/
int btrfs_reloc_clone_csums ( struct inode * inode , u64 file_pos , u64 len ) ; 
/*--btrfs_reloc_clone_csums--*/
void btrfs_reloc_cow_block ( struct btrfs_trans_handle * trans , struct btrfs_root * root , struct extent_buffer * buf , struct extent_buffer * cow ) ; 
/*--btrfs_reloc_cow_block--*/
void btrfs_reloc_pre_snapshot ( struct btrfs_trans_handle * trans , struct btrfs_pending_snapshot * pending , u64 * bytes_to_reserve ) ; 
/*--btrfs_reloc_pre_snapshot--*/
void btrfs_reloc_post_snapshot ( struct btrfs_trans_handle * trans , struct btrfs_pending_snapshot * pending ) ; 
/*--btrfs_reloc_post_snapshot--*/
int cachefiles_daemon_bind ( struct cachefiles_cache * cache , char * args ) ; 
/*--cachefiles_daemon_bind--*/
void cachefiles_daemon_unbind ( struct cachefiles_cache * cache ) ; 
/*--cachefiles_daemon_unbind--*/
int cachefiles_has_space ( struct cachefiles_cache * cache , unsigned fnr , unsigned bnr ) ; 
/*--cachefiles_has_space--*/
char * cachefiles_cook_key ( const u8 * raw , int keylen , uint8_t type ) ; 
/*--cachefiles_cook_key--*/
int cachefiles_delete_object ( struct cachefiles_cache * cache , struct cachefiles_object * object ) ; 
/*--cachefiles_delete_object--*/
int cachefiles_walk_to_object ( struct cachefiles_object * parent , struct cachefiles_object * object , const char * key , struct cachefiles_xattr * auxdata ) ; 
/*--cachefiles_walk_to_object--*/
struct dentry * cachefiles_get_directory ( struct cachefiles_cache * cache , struct dentry * dir , const char * dirname ) ; 
/*--cachefiles_get_directory--*/
int cachefiles_cull ( struct cachefiles_cache * cache , struct dentry * dir , char * filename ) ; 
/*--cachefiles_cull--*/
int cachefiles_check_in_use ( struct cachefiles_cache * cache , struct dentry * dir , char * filename ) ; 
/*--cachefiles_check_in_use--*/
int cachefiles_read_or_alloc_page ( struct fscache_retrieval * op , struct page * page , gfp_t gfp ) ; 
/*--cachefiles_read_or_alloc_page--*/
int cachefiles_read_or_alloc_pages ( struct fscache_retrieval * op , struct list_head * pages , unsigned * nr_pages , gfp_t gfp ) ; 
/*--cachefiles_read_or_alloc_pages--*/
int cachefiles_allocate_page ( struct fscache_retrieval * op , struct page * page , gfp_t gfp ) ; 
/*--cachefiles_allocate_page--*/
int cachefiles_allocate_pages ( struct fscache_retrieval * op , struct list_head * pages , unsigned * nr_pages , gfp_t gfp ) ; 
/*--cachefiles_allocate_pages--*/
int cachefiles_write_page ( struct fscache_storage * op , struct page * page ) ; 
/*--cachefiles_write_page--*/
void cachefiles_uncache_page ( struct fscache_object * _object , struct page * page ) ; 
/*--cachefiles_uncache_page--*/
int cachefiles_get_security_ID ( struct cachefiles_cache * cache ) ; 
/*--cachefiles_get_security_ID--*/
int cachefiles_determine_cache_security ( struct cachefiles_cache * cache , struct dentry * root , const struct cred * * _saved_cred ) ; 
/*--cachefiles_determine_cache_security--*/
int cachefiles_check_object_type ( struct cachefiles_object * object ) ; 
/*--cachefiles_check_object_type--*/
int cachefiles_set_object_xattr ( struct cachefiles_object * object , struct cachefiles_xattr * auxdata ) ; 
/*--cachefiles_set_object_xattr--*/
int cachefiles_update_object_xattr ( struct cachefiles_object * object , struct cachefiles_xattr * auxdata ) ; 
/*--cachefiles_update_object_xattr--*/
int cachefiles_check_object_xattr ( struct cachefiles_object * object , struct cachefiles_xattr * auxdata ) ; 
/*--cachefiles_check_object_xattr--*/
int cachefiles_remove_object_xattr ( struct cachefiles_cache * cache , struct dentry * dentry ) ; 
/*--cachefiles_remove_object_xattr--*/
void cifs_drop_inode ( struct inode * inode ) ; 
/*--cifs_drop_inode--*/
int small_smb_init_no_tc ( const int smb_command , const int wct , struct cifsSesInfo * ses , void * * request_buf ) ; 
/*--small_smb_init_no_tc--*/
int CIFSSMBNegotiate ( unsigned int xid , struct cifsSesInfo * ses ) ; 
/*--CIFSSMBNegotiate--*/
int CIFSSMBTDis ( const int xid , struct cifsTconInfo * tcon ) ; 
/*--CIFSSMBTDis--*/
int CIFSSMBLogoff ( const int xid , struct cifsSesInfo * ses ) ; 
/*--CIFSSMBLogoff--*/
int CIFSPOSIXDelFile ( const int xid , struct cifsTconInfo * tcon , const char * fileName , __u16 type , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSPOSIXDelFile--*/
int CIFSSMBDelFile ( const int xid , struct cifsTconInfo * tcon , const char * fileName , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBDelFile--*/
int CIFSSMBRmDir ( const int xid , struct cifsTconInfo * tcon , const char * dirName , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBRmDir--*/
int CIFSSMBMkDir ( const int xid , struct cifsTconInfo * tcon , const char * name , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBMkDir--*/
int CIFSPOSIXCreate ( const int xid , struct cifsTconInfo * tcon , __u32 posix_flags , __u64 mode , __u16 * netfid , FILE_UNIX_BASIC_INFO * pRetData , __u32 * pOplock , const char * name , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSPOSIXCreate--*/
int SMBLegacyOpen ( const int xid , struct cifsTconInfo * tcon , const char * fileName , const int openDisposition , const int access_flags , const int create_options , __u16 * netfid , int * pOplock , FILE_ALL_INFO * pfile_info , const struct nls_table * nls_codepage , int remap ) ; 
/*--SMBLegacyOpen--*/
int CIFSSMBOpen ( const int xid , struct cifsTconInfo * tcon , const char * fileName , const int openDisposition , const int access_flags , const int create_options , __u16 * netfid , int * pOplock , FILE_ALL_INFO * pfile_info , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBOpen--*/
int CIFSSMBRead ( const int xid , struct cifsTconInfo * tcon , const int netfid , const unsigned int count , const __u64 lseek , unsigned int * nbytes , char * * buf , int * pbuf_type ) ; 
/*--CIFSSMBRead--*/
int CIFSSMBWrite ( const int xid , struct cifsTconInfo * tcon , const int netfid , const unsigned int count , const __u64 offset , unsigned int * nbytes , const char * buf , const char * ubuf , const int long_op ) ; 
/*--CIFSSMBWrite--*/
int CIFSSMBWrite2 ( const int xid , struct cifsTconInfo * tcon , const int netfid , const unsigned int count , const __u64 offset , unsigned int * nbytes , struct kvec * iov , int n_vec , const int long_op ) ; 
/*--CIFSSMBWrite2--*/
int CIFSSMBLock ( const int xid , struct cifsTconInfo * tcon , const __u16 smb_file_id , const __u64 len , const __u64 offset , const __u32 numUnlock , const __u32 numLock , const __u8 lockType , const bool waitFlag , const __u8 oplock_level ) ; 
/*--CIFSSMBLock--*/
int CIFSSMBPosixLock ( const int xid , struct cifsTconInfo * tcon , const __u16 smb_file_id , const int get_flag , const __u64 len , struct file_lock * pLockData , const __u16 lock_type , const bool waitFlag ) ; 
/*--CIFSSMBPosixLock--*/
int CIFSSMBClose ( const int xid , struct cifsTconInfo * tcon , int smb_file_id ) ; 
/*--CIFSSMBClose--*/
int CIFSSMBFlush ( const int xid , struct cifsTconInfo * tcon , int smb_file_id ) ; 
/*--CIFSSMBFlush--*/
int CIFSSMBRename ( const int xid , struct cifsTconInfo * tcon , const char * fromName , const char * toName , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBRename--*/
int CIFSSMBRenameOpenFile ( const int xid , struct cifsTconInfo * pTcon , int netfid , const char * target_name , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBRenameOpenFile--*/
int CIFSSMBCopy ( const int xid , struct cifsTconInfo * tcon , const char * fromName , const __u16 target_tid , const char * toName , const int flags , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBCopy--*/
int CIFSUnixCreateSymLink ( const int xid , struct cifsTconInfo * tcon , const char * fromName , const char * toName , const struct nls_table * nls_codepage ) ; 
/*--CIFSUnixCreateSymLink--*/
int CIFSUnixCreateHardLink ( const int xid , struct cifsTconInfo * tcon , const char * fromName , const char * toName , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSUnixCreateHardLink--*/
int CIFSCreateHardLink ( const int xid , struct cifsTconInfo * tcon , const char * fromName , const char * toName , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSCreateHardLink--*/
int CIFSSMBUnixQuerySymLink ( const int xid , struct cifsTconInfo * tcon , const unsigned char * searchName , char * * symlinkinfo , const struct nls_table * nls_codepage ) ; 
/*--CIFSSMBUnixQuerySymLink--*/
int CIFSSMBQueryReparseLinkInfo ( const int xid , struct cifsTconInfo * tcon , const unsigned char * searchName , char * symlinkinfo , const int buflen , __u16 fid , const struct nls_table * nls_codepage ) ; 
/*--CIFSSMBQueryReparseLinkInfo--*/
int CIFSSMBGetPosixACL ( const int xid , struct cifsTconInfo * tcon , const unsigned char * searchName , char * acl_inf , const int buflen , const int acl_type , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBGetPosixACL--*/
int CIFSSMBSetPosixACL ( const int xid , struct cifsTconInfo * tcon , const unsigned char * fileName , const char * local_acl , const int buflen , const int acl_type , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBSetPosixACL--*/
int CIFSGetExtAttr ( const int xid , struct cifsTconInfo * tcon , const int netfid , __u64 * pExtAttrBits , __u64 * pMask ) ; 
/*--CIFSGetExtAttr--*/
int CIFSSMBGetCIFSACL ( const int xid , struct cifsTconInfo * tcon , __u16 fid , struct cifs_ntsd * * acl_inf , __u32 * pbuflen ) ; 
/*--CIFSSMBGetCIFSACL--*/
int CIFSSMBSetCIFSACL ( const int xid , struct cifsTconInfo * tcon , __u16 fid , struct cifs_ntsd * pntsd , __u32 acllen ) ; 
/*--CIFSSMBSetCIFSACL--*/
int SMBQueryInformation ( const int xid , struct cifsTconInfo * tcon , const unsigned char * searchName , FILE_ALL_INFO * pFinfo , const struct nls_table * nls_codepage , int remap ) ; 
/*--SMBQueryInformation--*/
int CIFSSMBQFileInfo ( const int xid , struct cifsTconInfo * tcon , u16 netfid , FILE_ALL_INFO * pFindData ) ; 
/*--CIFSSMBQFileInfo--*/
int CIFSSMBQPathInfo ( const int xid , struct cifsTconInfo * tcon , const unsigned char * searchName , FILE_ALL_INFO * pFindData , int legacy , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBQPathInfo--*/
int CIFSSMBUnixQFileInfo ( const int xid , struct cifsTconInfo * tcon , u16 netfid , FILE_UNIX_BASIC_INFO * pFindData ) ; 
/*--CIFSSMBUnixQFileInfo--*/
int CIFSSMBUnixQPathInfo ( const int xid , struct cifsTconInfo * tcon , const unsigned char * searchName , FILE_UNIX_BASIC_INFO * pFindData , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBUnixQPathInfo--*/
int CIFSFindFirst ( const int xid , struct cifsTconInfo * tcon , const char * searchName , const struct nls_table * nls_codepage , __u16 * pnetfid , struct cifs_search_info * psrch_inf , int remap , const char dirsep ) ; 
/*--CIFSFindFirst--*/
int CIFSFindNext ( const int xid , struct cifsTconInfo * tcon , __u16 searchHandle , struct cifs_search_info * psrch_inf ) ; 
/*--CIFSFindNext--*/
int CIFSFindClose ( const int xid , struct cifsTconInfo * tcon , const __u16 searchHandle ) ; 
/*--CIFSFindClose--*/
int CIFSGetSrvInodeNumber ( const int xid , struct cifsTconInfo * tcon , const unsigned char * searchName , __u64 * inode_number , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSGetSrvInodeNumber--*/
int CIFSGetDFSRefer ( const int xid , struct cifsSesInfo * ses , const unsigned char * searchName , struct dfs_info3_param * * target_nodes , unsigned int * num_of_nodes , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSGetDFSRefer--*/
int SMBOldQFSInfo ( const int xid , struct cifsTconInfo * tcon , struct kstatfs * FSData ) ; 
/*--SMBOldQFSInfo--*/
int CIFSSMBQFSInfo ( const int xid , struct cifsTconInfo * tcon , struct kstatfs * FSData ) ; 
/*--CIFSSMBQFSInfo--*/
int CIFSSMBQFSAttributeInfo ( const int xid , struct cifsTconInfo * tcon ) ; 
/*--CIFSSMBQFSAttributeInfo--*/
int CIFSSMBQFSDeviceInfo ( const int xid , struct cifsTconInfo * tcon ) ; 
/*--CIFSSMBQFSDeviceInfo--*/
int CIFSSMBQFSUnixInfo ( const int xid , struct cifsTconInfo * tcon ) ; 
/*--CIFSSMBQFSUnixInfo--*/
int CIFSSMBSetFSUnixInfo ( const int xid , struct cifsTconInfo * tcon , __u64 cap ) ; 
/*--CIFSSMBSetFSUnixInfo--*/
int CIFSSMBQFSPosixInfo ( const int xid , struct cifsTconInfo * tcon , struct kstatfs * FSData ) ; 
/*--CIFSSMBQFSPosixInfo--*/
int CIFSSMBSetEOF ( const int xid , struct cifsTconInfo * tcon , const char * fileName , __u64 size , bool SetAllocation , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBSetEOF--*/
int CIFSSMBSetFileSize ( const int xid , struct cifsTconInfo * tcon , __u64 size , __u16 fid , __u32 pid_of_opener , bool SetAllocation ) ; 
/*--CIFSSMBSetFileSize--*/
int CIFSSMBSetFileInfo ( const int xid , struct cifsTconInfo * tcon , const FILE_BASIC_INFO * data , __u16 fid , __u32 pid_of_opener ) ; 
/*--CIFSSMBSetFileInfo--*/
int CIFSSMBSetFileDisposition ( const int xid , struct cifsTconInfo * tcon , bool delete_file , __u16 fid , __u32 pid_of_opener ) ; 
/*--CIFSSMBSetFileDisposition--*/
int CIFSSMBSetPathInfo ( const int xid , struct cifsTconInfo * tcon , const char * fileName , const FILE_BASIC_INFO * data , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBSetPathInfo--*/
int CIFSSMBUnixSetFileInfo ( const int xid , struct cifsTconInfo * tcon , const struct cifs_unix_set_info_args * args , u16 fid , u32 pid_of_opener ) ; 
/*--CIFSSMBUnixSetFileInfo--*/
int CIFSSMBUnixSetPathInfo ( const int xid , struct cifsTconInfo * tcon , char * fileName , const struct cifs_unix_set_info_args * args , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBUnixSetPathInfo--*/
int CIFSSMBNotify ( const int xid , struct cifsTconInfo * tcon , const int notify_subdirs , const __u16 netfid , __u32 filter , struct file * pfile , int multishot , const struct nls_table * nls_codepage ) ; 
/*--CIFSSMBNotify--*/
ssize_t CIFSSMBQAllEAs ( const int xid , struct cifsTconInfo * tcon , const unsigned char * searchName , const unsigned char * ea_name , char * EAData , size_t buf_size , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBQAllEAs--*/
int CIFSSMBSetEA ( const int xid , struct cifsTconInfo * tcon , const char * fileName , const char * ea_name , const void * ea_value , const __u16 ea_value_len , const struct nls_table * nls_codepage , int remap ) ; 
/*--CIFSSMBSetEA--*/
void cifs_dump_mem ( char * label , void * data , int length ) ; 
/*--cifs_dump_mem--*/
void cifs_proc_init ( void ) ; 
/*--cifs_proc_init--*/
void cifs_proc_clean ( void ) ; 
/*--cifs_proc_clean--*/
int get_dfs_path ( int xid , struct cifsSesInfo * pSesInfo , const char * old_path , const struct nls_table * nls_codepage , unsigned int * pnum_referrals , struct dfs_info3_param * * preferrals , int remap ) ; 
/*--get_dfs_path--*/
void reset_cifs_unix_caps ( int xid , struct cifsTconInfo * tcon , struct super_block * sb , struct smb_vol * vol_info ) ; 
/*--reset_cifs_unix_caps--*/
int cifs_mount ( struct super_block * sb , struct cifs_sb_info * cifs_sb , char * mount_data_global , const char * devname ) ; 
/*--cifs_mount--*/
int CIFSTCon ( unsigned int xid , struct cifsSesInfo * ses , const char * tree , struct cifsTconInfo * tcon , const struct nls_table * nls_codepage ) ; 
/*--CIFSTCon--*/
int cifs_umount ( struct super_block * sb , struct cifs_sb_info * cifs_sb ) ; 
/*--cifs_umount--*/
int cifs_negotiate_protocol ( unsigned int xid , struct cifsSesInfo * ses ) ; 
/*--cifs_negotiate_protocol--*/
int cifs_setup_session ( unsigned int xid , struct cifsSesInfo * ses , struct nls_table * nls_info ) ; 
/*--cifs_setup_session--*/
char * build_path_from_dentry ( struct dentry * direntry ) ; 
/*--build_path_from_dentry--*/
struct cifsFileInfo * cifs_new_fileinfo ( struct inode * newinode , __u16 fileHandle , struct file * file , struct vfsmount * mnt , unsigned int oflags , __u32 oplock ) ; 
/*--cifs_new_fileinfo--*/
int cifs_posix_open ( char * full_path , struct inode * * pinode , struct super_block * sb , int mode , int oflags , __u32 * poplock , __u16 * pnetfid , int xid ) ; 
/*--cifs_posix_open--*/
int cifs_create ( struct inode * inode , struct dentry * direntry , int mode , struct nameidata * nd ) ; 
/*--cifs_create--*/
int cifs_mknod ( struct inode * inode , struct dentry * direntry , int mode , dev_t device_number ) ; 
/*--cifs_mknod--*/
struct dentry * cifs_lookup ( struct inode * parent_dir_inode , struct dentry * direntry , struct nameidata * nd ) ; 
/*--cifs_lookup--*/
int cifs_open ( struct inode * inode , struct file * file ) ; 
/*--cifs_open--*/
int cifs_close ( struct inode * inode , struct file * file ) ; 
/*--cifs_close--*/
int cifs_closedir ( struct inode * inode , struct file * file ) ; 
/*--cifs_closedir--*/
int cifs_lock ( struct file * file , int cmd , struct file_lock * pfLock ) ; 
/*--cifs_lock--*/
ssize_t cifs_user_write ( struct file * file , const char * write_data , size_t write_size , loff_t * poffset ) ; 
/*--cifs_user_write--*/
struct cifsFileInfo * find_readable_file ( struct cifsInodeInfo * cifs_inode ) ; 
/*--find_readable_file--*/
struct cifsFileInfo * find_writable_file ( struct cifsInodeInfo * cifs_inode ) ; 
/*--find_writable_file--*/
int cifs_fsync ( struct file * file , int datasync ) ; 
/*--cifs_fsync--*/
int cifs_flush ( struct file * file , fl_owner_t id ) ; 
/*--cifs_flush--*/
ssize_t cifs_user_read ( struct file * file , char * read_data , size_t read_size , loff_t * poffset ) ; 
/*--cifs_user_read--*/
int cifs_file_mmap ( struct file * file , struct vm_area_struct * vma ) ; 
/*--cifs_file_mmap--*/
bool is_size_safe_to_change ( struct cifsInodeInfo * cifsInode , __u64 end_of_file ) ; 
/*--is_size_safe_to_change--*/
void cifs_fattr_to_inode ( struct inode * inode , struct cifs_fattr * fattr ) ; 
/*--cifs_fattr_to_inode--*/
void cifs_fill_uniqueid ( struct super_block * sb , struct cifs_fattr * fattr ) ; 
/*--cifs_fill_uniqueid--*/
void cifs_unix_basic_to_fattr ( struct cifs_fattr * fattr , FILE_UNIX_BASIC_INFO * info , struct cifs_sb_info * cifs_sb ) ; 
/*--cifs_unix_basic_to_fattr--*/
int cifs_get_file_info_unix ( struct file * filp ) ; 
/*--cifs_get_file_info_unix--*/
int cifs_get_inode_info_unix ( struct inode * * pinode , const unsigned char * full_path , struct super_block * sb , int xid ) ; 
/*--cifs_get_inode_info_unix--*/
int cifs_get_file_info ( struct file * filp ) ; 
/*--cifs_get_file_info--*/
int cifs_get_inode_info ( struct inode * * pinode , const unsigned char * full_path , FILE_ALL_INFO * pfindData , struct super_block * sb , int xid , const __u16 * pfid ) ; 
/*--cifs_get_inode_info--*/
char * cifs_build_path_to_root ( struct cifs_sb_info * cifs_sb ) ; 
/*--cifs_build_path_to_root--*/
struct inode * cifs_iget ( struct super_block * sb , struct cifs_fattr * fattr ) ; 
/*--cifs_iget--*/
struct inode * cifs_root_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--cifs_root_iget--*/
int cifs_unlink ( struct inode * dir , struct dentry * dentry ) ; 
/*--cifs_unlink--*/
int cifs_mkdir ( struct inode * inode , struct dentry * direntry , int mode ) ; 
/*--cifs_mkdir--*/
int cifs_rmdir ( struct inode * inode , struct dentry * direntry ) ; 
/*--cifs_rmdir--*/
int cifs_rename ( struct inode * source_dir , struct dentry * source_dentry , struct inode * target_dir , struct dentry * target_dentry ) ; 
/*--cifs_rename--*/
int cifs_revalidate_file ( struct file * filp ) ; 
/*--cifs_revalidate_file--*/
int cifs_revalidate_dentry ( struct dentry * dentry ) ; 
/*--cifs_revalidate_dentry--*/
int cifs_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--cifs_getattr--*/
int cifs_setattr ( struct dentry * direntry , struct iattr * attrs ) ; 
/*--cifs_setattr--*/
int cifs_hardlink ( struct dentry * old_file , struct inode * inode , struct dentry * direntry ) ; 
/*--cifs_hardlink--*/
void * cifs_follow_link ( struct dentry * direntry , struct nameidata * nd ) ; 
/*--cifs_follow_link--*/
int cifs_symlink ( struct inode * inode , struct dentry * direntry , const char * symname ) ; 
/*--cifs_symlink--*/
void cifs_put_link ( struct dentry * direntry , struct nameidata * nd , void * cookie ) ; 
/*--cifs_put_link--*/
unsigned int _GetXid ( void ) ; 
/*--_GetXid--*/
void _FreeXid ( unsigned int xid ) ; 
/*--_FreeXid--*/
struct cifsSesInfo * sesInfoAlloc ( void ) ; 
/*--sesInfoAlloc--*/
void sesInfoFree ( struct cifsSesInfo * buf_to_free ) ; 
/*--sesInfoFree--*/
struct cifsTconInfo * tconInfoAlloc ( void ) ; 
/*--tconInfoAlloc--*/
void tconInfoFree ( struct cifsTconInfo * buf_to_free ) ; 
/*--tconInfoFree--*/
struct smb_hdr * cifs_buf_get ( void ) ; 
/*--cifs_buf_get--*/
void cifs_buf_release ( void * buf_to_free ) ; 
/*--cifs_buf_release--*/
struct smb_hdr * cifs_small_buf_get ( void ) ; 
/*--cifs_small_buf_get--*/
void cifs_small_buf_release ( void * buf_to_free ) ; 
/*--cifs_small_buf_release--*/
__u16 GetNextMid ( struct TCP_Server_Info * server ) ; 
/*--GetNextMid--*/
void header_assemble ( struct smb_hdr * buffer , char smb_command , const struct cifsTconInfo * treeCon , int word_count ) ; 
/*--header_assemble--*/
int checkSMB ( struct smb_hdr * smb , __u16 mid , unsigned int length ) ; 
/*--checkSMB--*/
bool is_valid_oplock_break ( struct smb_hdr * buf , struct TCP_Server_Info * srv ) ; 
/*--is_valid_oplock_break--*/
void dump_smb ( struct smb_hdr * smb_buf , int smb_buf_length ) ; 
/*--dump_smb--*/
int cifsConvertToUCS ( __le16 * target , const char * source , int maxlen , const struct nls_table * cp , int mapChars ) ; 
/*--cifsConvertToUCS--*/
void cifs_autodisable_serverino ( struct cifs_sb_info * cifs_sb ) ; 
/*--cifs_autodisable_serverino--*/
int cifs_convert_address ( char * src , void * dst ) ; 
/*--cifs_convert_address--*/
int map_smb_to_linux_error ( struct smb_hdr * smb , int logErr ) ; 
/*--map_smb_to_linux_error--*/
unsigned int smbCalcSize ( struct smb_hdr * ptr ) ; 
/*--smbCalcSize--*/
unsigned int smbCalcSize_LE ( struct smb_hdr * ptr ) ; 
/*--smbCalcSize_LE--*/
struct timespec cifs_NTtimeToUnix ( __le64 ntutc ) ; 
/*--cifs_NTtimeToUnix--*/
u64 cifs_UnixTimeToNT ( struct timespec t ) ; 
/*--cifs_UnixTimeToNT--*/
struct timespec cnvrtDosUnixTm ( __le16 le_date , __le16 le_time , int offset ) ; 
/*--cnvrtDosUnixTm--*/
void E_P16 ( unsigned char * p14 , unsigned char * p16 ) ; 
/*--E_P16--*/
void E_P24 ( unsigned char * p21 , const unsigned char * c8 , unsigned char * p24 ) ; 
/*--E_P24--*/
void SMBencrypt ( unsigned char * passwd , const unsigned char * c8 , unsigned char * p24 ) ; 
/*--SMBencrypt--*/
void E_md4hash ( const unsigned char * passwd , unsigned char * p16 ) ; 
/*--E_md4hash--*/
void SMBNTencrypt ( unsigned char * passwd , unsigned char * c8 , unsigned char * p24 ) ; 
/*--SMBNTencrypt--*/
int smb_send ( struct TCP_Server_Info * server , struct smb_hdr * smb_buffer , unsigned int smb_buf_length ) ; 
/*--smb_send--*/
int SendReceiveNoRsp ( const unsigned int xid , struct cifsSesInfo * ses , struct smb_hdr * in_buf , int flags ) ; 
/*--SendReceiveNoRsp--*/
int SendReceive2 ( const unsigned int xid , struct cifsSesInfo * ses , struct kvec * iov , int n_vec , int * pRespBufType , const int flags ) ; 
/*--SendReceive2--*/
int SendReceive ( const unsigned int xid , struct cifsSesInfo * ses , struct smb_hdr * in_buf , struct smb_hdr * out_buf , int * pbytes_returned , const int long_op ) ; 
/*--SendReceive--*/
int SendReceiveBlockingLock ( const unsigned int xid , struct cifsTconInfo * tcon , struct smb_hdr * in_buf , struct smb_hdr * out_buf , int * pbytes_returned ) ; 
/*--SendReceiveBlockingLock--*/
int decode_negTokenInit ( unsigned char * security_blob , int length , struct TCP_Server_Info * server ) ; 
/*--decode_negTokenInit--*/
void mdfour ( unsigned char * out , unsigned char * in , int n ) ; 
/*--mdfour--*/
void cifs_MD5_init ( struct MD5Context * ctx ) ; 
/*--cifs_MD5_init--*/
void cifs_MD5_update ( struct MD5Context * ctx , unsigned char const * buf , unsigned len ) ; 
/*--cifs_MD5_update--*/
void cifs_MD5_final ( unsigned char digest [ 16 ] , struct MD5Context * ctx ) ; 
/*--cifs_MD5_final--*/
void hmac_md5_init_limK_to_64 ( const unsigned char * key , int key_len , struct HMACMD5Context * ctx ) ; 
/*--hmac_md5_init_limK_to_64--*/
void hmac_md5_update ( const unsigned char * text , int text_len , struct HMACMD5Context * ctx ) ; 
/*--hmac_md5_update--*/
void hmac_md5_final ( unsigned char * digest , struct HMACMD5Context * ctx ) ; 
/*--hmac_md5_final--*/
int cifs_ucs2_bytes ( const __le16 * from , int maxbytes , const struct nls_table * codepage ) ; 
/*--cifs_ucs2_bytes--*/
int cifs_from_ucs2 ( char * to , const __le16 * from , int tolen , int fromlen , const struct nls_table * codepage , bool mapchar ) ; 
/*--cifs_from_ucs2--*/
int cifs_strtoUCS ( __le16 * to , const char * from , int len , const struct nls_table * codepage ) ; 
/*--cifs_strtoUCS--*/
char * cifs_strndup_from_ucs ( const char * src , const int maxlen , const bool is_unicode , const struct nls_table * codepage ) ; 
/*--cifs_strndup_from_ucs--*/
int cifs_removexattr ( struct dentry * direntry , const char * ea_name ) ; 
/*--cifs_removexattr--*/
int cifs_setxattr ( struct dentry * direntry , const char * ea_name , const void * ea_value , size_t value_size , int flags ) ; 
/*--cifs_setxattr--*/
ssize_t cifs_getxattr ( struct dentry * direntry , const char * ea_name , void * ea_value , size_t buf_size ) ; 
/*--cifs_getxattr--*/
ssize_t cifs_listxattr ( struct dentry * direntry , char * data , size_t buf_size ) ; 
/*--cifs_listxattr--*/
int cifs_sign_smb ( struct smb_hdr * cifs_pdu , struct TCP_Server_Info * server , __u32 * pexpected_response_sequence_number ) ; 
/*--cifs_sign_smb--*/
int cifs_sign_smb2 ( struct kvec * iov , int n_vec , struct TCP_Server_Info * server , __u32 * pexpected_response_sequence_number ) ; 
/*--cifs_sign_smb2--*/
int cifs_verify_signature ( struct smb_hdr * cifs_pdu , const struct mac_key * mac_key , __u32 expected_sequence_number ) ; 
/*--cifs_verify_signature--*/
int cifs_calculate_mac_key ( struct mac_key * key , const char * rn , const char * password ) ; 
/*--cifs_calculate_mac_key--*/
int CalcNTLMv2_partial_mac_key ( struct cifsSesInfo * ses , const struct nls_table * nls_info ) ; 
/*--CalcNTLMv2_partial_mac_key--*/
void calc_lanman_hash ( const char * password , const char * cryptkey , bool encrypt , char * lnm_session_key ) ; 
/*--calc_lanman_hash--*/
void setup_ntlmv2_rsp ( struct cifsSesInfo * ses , char * resp_buf , const struct nls_table * nls_cp ) ; 
/*--setup_ntlmv2_rsp--*/
void CalcNTLMv2_response ( const struct cifsSesInfo * ses , char * v2_session_response ) ; 
/*--CalcNTLMv2_response--*/
int cifs_readdir ( struct file * file , void * direntry , filldir_t filldir ) ; 
/*--cifs_readdir--*/
long cifs_ioctl ( struct file * filep , unsigned int command , unsigned long arg ) ; 
/*--cifs_ioctl--*/
int CIFS_SessSetup ( unsigned int xid , struct cifsSesInfo * ses , const struct nls_table * nls_cp ) ; 
/*--CIFS_SessSetup--*/
int match_sid ( struct cifs_sid * ctsid ) ; 
/*--match_sid--*/
int compare_sids ( const struct cifs_sid * ctsid , const struct cifs_sid * cwsid ) ; 
/*--compare_sids--*/
void cifs_acl_to_fattr ( struct cifs_sb_info * cifs_sb , struct cifs_fattr * fattr , struct inode * inode , const char * path , const __u16 * pfid ) ; 
/*--cifs_acl_to_fattr--*/
int mode_to_acl ( struct inode * inode , const char * path , __u64 nmode ) ; 
/*--mode_to_acl--*/
struct key * cifs_get_spnego_key ( struct cifsSesInfo * sesInfo ) ; 
/*--cifs_get_spnego_key--*/
int dns_resolve_server_name_to_ip ( const char * unc , char * * ip_addr ) ; 
/*--dns_resolve_server_name_to_ip--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) cifs_init_dns_resolver ( void ) ; 
/*--cifs_init_dns_resolver--*/
void cifs_exit_dns_resolver ( void ) ; 
/*--cifs_exit_dns_resolver--*/
void cifs_dfs_release_automount_timer ( void ) ; 
/*--cifs_dfs_release_automount_timer--*/
char * cifs_compose_mount_options ( const char * sb_mountdata , const char * fullpath , const struct dfs_info3_param * ref , char * * devname ) ; 
/*--cifs_compose_mount_options--*/
void coda_cache_enter ( struct inode * inode , int mask ) ; 
/*--coda_cache_enter--*/
void coda_cache_clear_inode ( struct inode * inode ) ; 
/*--coda_cache_clear_inode--*/
void coda_cache_clear_all ( struct super_block * sb ) ; 
/*--coda_cache_clear_all--*/
int coda_cache_check ( struct inode * inode , int mask ) ; 
/*--coda_cache_check--*/
void coda_flag_inode_children ( struct inode * inode , int flag ) ; 
/*--coda_flag_inode_children--*/
struct inode * coda_iget ( struct super_block * sb , struct CodaFid * fid , struct coda_vattr * attr ) ; 
/*--coda_iget--*/
int coda_cnode_make ( struct inode * * inode , struct CodaFid * fid , struct super_block * sb ) ; 
/*--coda_cnode_make--*/
void coda_replace_fid ( struct inode * inode , struct CodaFid * oldfid , struct CodaFid * newfid ) ; 
/*--coda_replace_fid--*/
struct inode * coda_fid_to_inode ( struct CodaFid * fid , struct super_block * sb ) ; 
/*--coda_fid_to_inode--*/
int coda_cnode_makectl ( struct inode * * inode , struct super_block * sb ) ; 
/*--coda_cnode_makectl--*/
int coda_init_inodecache ( void ) ; 
/*--coda_init_inodecache--*/
void coda_destroy_inodecache ( void ) ; 
/*--coda_destroy_inodecache--*/
int coda_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--coda_getattr--*/
int coda_setattr ( struct dentry * de , struct iattr * iattr ) ; 
/*--coda_setattr--*/
int coda_permission ( struct inode * inode , int mask ) ; 
/*--coda_permission--*/
int coda_revalidate_inode ( struct dentry * dentry ) ; 
/*--coda_revalidate_inode--*/
int coda_open ( struct inode * coda_inode , struct file * coda_file ) ; 
/*--coda_open--*/
int coda_release ( struct inode * coda_inode , struct file * coda_file ) ; 
/*--coda_release--*/
int coda_fsync ( struct file * coda_file , int datasync ) ; 
/*--coda_fsync--*/
int venus_rootfid ( struct super_block * sb , struct CodaFid * fidp ) ; 
/*--venus_rootfid--*/
int venus_getattr ( struct super_block * sb , struct CodaFid * fid , struct coda_vattr * attr ) ; 
/*--venus_getattr--*/
int venus_setattr ( struct super_block * sb , struct CodaFid * fid , struct coda_vattr * vattr ) ; 
/*--venus_setattr--*/
int venus_lookup ( struct super_block * sb , struct CodaFid * fid , const char * name , int length , int * type , struct CodaFid * resfid ) ; 
/*--venus_lookup--*/
int venus_close ( struct super_block * sb , struct CodaFid * fid , int flags , vuid_t uid ) ; 
/*--venus_close--*/
int venus_open ( struct super_block * sb , struct CodaFid * fid , int flags , struct file * * fh ) ; 
/*--venus_open--*/
int venus_mkdir ( struct super_block * sb , struct CodaFid * dirfid , const char * name , int length , struct CodaFid * newfid , struct coda_vattr * attrs ) ; 
/*--venus_mkdir--*/
int venus_rename ( struct super_block * sb , struct CodaFid * old_fid , struct CodaFid * new_fid , size_t old_length , size_t new_length , const char * old_name , const char * new_name ) ; 
/*--venus_rename--*/
int venus_create ( struct super_block * sb , struct CodaFid * dirfid , const char * name , int length , int excl , int mode , struct CodaFid * newfid , struct coda_vattr * attrs ) ; 
/*--venus_create--*/
int venus_rmdir ( struct super_block * sb , struct CodaFid * dirfid , const char * name , int length ) ; 
/*--venus_rmdir--*/
int venus_remove ( struct super_block * sb , struct CodaFid * dirfid , const char * name , int length ) ; 
/*--venus_remove--*/
int venus_readlink ( struct super_block * sb , struct CodaFid * fid , char * buffer , int * length ) ; 
/*--venus_readlink--*/
int venus_link ( struct super_block * sb , struct CodaFid * fid , struct CodaFid * dirfid , const char * name , int len ) ; 
/*--venus_link--*/
int venus_symlink ( struct super_block * sb , struct CodaFid * fid , const char * name , int len , const char * symname , int symlen ) ; 
/*--venus_symlink--*/
int venus_fsync ( struct super_block * sb , struct CodaFid * fid ) ; 
/*--venus_fsync--*/
int venus_access ( struct super_block * sb , struct CodaFid * fid , int mask ) ; 
/*--venus_access--*/
int venus_pioctl ( struct super_block * sb , struct CodaFid * fid , unsigned int cmd , struct PioctlData * data ) ; 
/*--venus_pioctl--*/
int venus_statfs ( struct dentry * dentry , struct kstatfs * sfs ) ; 
/*--venus_statfs--*/
int coda_downcall ( int opcode , union outputArgs * out , struct super_block * sb ) ; 
/*--coda_downcall--*/
char * coda_f2s ( struct CodaFid * f ) ; 
/*--coda_f2s--*/
int coda_iscontrol ( const char * name , size_t length ) ; 
/*--coda_iscontrol--*/
int coda_isroot ( struct inode * i ) ; 
/*--coda_isroot--*/
unsigned short coda_flags_to_cflags ( unsigned short flags ) ; 
/*--coda_flags_to_cflags--*/
void coda_vattr_to_iattr ( struct inode * inode , struct coda_vattr * attr ) ; 
/*--coda_vattr_to_iattr--*/
void coda_iattr_to_vattr ( struct iattr * iattr , struct coda_vattr * vattr ) ; 
/*--coda_iattr_to_vattr--*/
void coda_sysctl_init ( void ) ; 
/*--coda_sysctl_init--*/
void coda_sysctl_clean ( void ) ; 
/*--coda_sysctl_clean--*/
int configfs_setattr ( struct dentry * dentry , struct iattr * iattr ) ; 
/*--configfs_setattr--*/
struct inode * configfs_new_inode ( mode_t mode , struct configfs_dirent * sd ) ; 
/*--configfs_new_inode--*/
int configfs_create ( struct dentry * dentry , int mode , int ( * init ) ( struct inode * ) ) ; 
/*--configfs_create--*/
const unsigned char * configfs_get_name ( struct configfs_dirent * sd ) ; 
/*--configfs_get_name--*/
void configfs_drop_dentry ( struct configfs_dirent * sd , struct dentry * parent ) ; 
/*--configfs_drop_dentry--*/
void configfs_hash_and_remove ( struct dentry * dir , const char * name ) ; 
/*--configfs_hash_and_remove--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) configfs_inode_init ( void ) ; 
/*--configfs_inode_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) configfs_inode_exit ( void ) ; 
/*--configfs_inode_exit--*/
int configfs_add_file ( struct dentry * dir , const struct configfs_attribute * attr , int type ) ; 
/*--configfs_add_file--*/
int configfs_create_file ( struct config_item * item , const struct configfs_attribute * attr ) ; 
/*--configfs_create_file--*/
int configfs_make_dirent ( struct configfs_dirent * parent_sd , struct dentry * dentry , void * element , umode_t mode , int type ) ; 
/*--configfs_make_dirent--*/
int configfs_dirent_is_ready ( struct configfs_dirent * sd ) ; 
/*--configfs_dirent_is_ready--*/
int configfs_create_link ( struct configfs_symlink * sl , struct dentry * parent , struct dentry * dentry ) ; 
/*--configfs_create_link--*/
int configfs_depend_item ( struct configfs_subsystem * subsys , struct config_item * target ) ; 
/*--configfs_depend_item--*/
void configfs_undepend_item ( struct configfs_subsystem * subsys , struct config_item * target ) ; 
/*--configfs_undepend_item--*/
int configfs_register_subsystem ( struct configfs_subsystem * subsys ) ; 
/*--configfs_register_subsystem--*/
void configfs_unregister_subsystem ( struct configfs_subsystem * subsys ) ; 
/*--configfs_unregister_subsystem--*/
int configfs_symlink ( struct inode * dir , struct dentry * dentry , const char * symname ) ; 
/*--configfs_symlink--*/
int configfs_unlink ( struct inode * dir , struct dentry * dentry ) ; 
/*--configfs_unlink--*/
int configfs_is_root ( struct config_item * item ) ; 
/*--configfs_is_root--*/
int configfs_pin_fs ( void ) ; 
/*--configfs_pin_fs--*/
void configfs_release_fs ( void ) ; 
/*--configfs_release_fs--*/
void config_item_init ( struct config_item * item ) ; 
/*--config_item_init--*/
int config_item_set_name ( struct config_item * item , const char * fmt , ... ) ; 
/*--config_item_set_name--*/
void config_item_init_type_name ( struct config_item * item , const char * name , struct config_item_type * type ) ; 
/*--config_item_init_type_name--*/
void config_group_init_type_name ( struct config_group * group , const char * name , struct config_item_type * type ) ; 
/*--config_group_init_type_name--*/
struct config_item * config_item_get ( struct config_item * item ) ; 
/*--config_item_get--*/
void config_item_put ( struct config_item * item ) ; 
/*--config_item_put--*/
void config_group_init ( struct config_group * group ) ; 
/*--config_group_init--*/
struct config_item * config_group_find_item ( struct config_group * group , const char * name ) ; 
/*--config_group_find_item--*/
int cramfs_uncompress_block ( void * dst , int dstlen , void * src , int srclen ) ; 
/*--cramfs_uncompress_block--*/
int cramfs_uncompress_init ( void ) ; 
/*--cramfs_uncompress_init--*/
void cramfs_uncompress_exit ( void ) ; 
/*--cramfs_uncompress_exit--*/
void dlm_del_ast ( struct dlm_lkb * lkb ) ; 
/*--dlm_del_ast--*/
void dlm_add_ast ( struct dlm_lkb * lkb , int type , int mode ) ; 
/*--dlm_add_ast--*/
void dlm_astd_wake ( void ) ; 
/*--dlm_astd_wake--*/
int dlm_astd_start ( void ) ; 
/*--dlm_astd_start--*/
void dlm_astd_stop ( void ) ; 
/*--dlm_astd_stop--*/
void dlm_astd_suspend ( void ) ; 
/*--dlm_astd_suspend--*/
void dlm_astd_resume ( void ) ; 
/*--dlm_astd_resume--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dlm_config_init ( void ) ; 
/*--dlm_config_init--*/
void dlm_config_exit ( void ) ; 
/*--dlm_config_exit--*/
int dlm_nodeid_list ( char * lsname , int * * ids_out , int * ids_count_out , int * * new_out , int * new_count_out ) ; 
/*--dlm_nodeid_list--*/
int dlm_node_weight ( char * lsname , int nodeid ) ; 
/*--dlm_node_weight--*/
int dlm_nodeid_to_addr ( int nodeid , struct __kernel_sockaddr_storage * addr ) ; 
/*--dlm_nodeid_to_addr--*/
int dlm_addr_to_nodeid ( struct __kernel_sockaddr_storage * addr , int * nodeid ) ; 
/*--dlm_addr_to_nodeid--*/
int dlm_our_nodeid ( void ) ; 
/*--dlm_our_nodeid--*/
int dlm_our_addr ( struct __kernel_sockaddr_storage * addr , int num ) ; 
/*--dlm_our_addr--*/
void dlm_clear_free_entries ( struct dlm_ls * ls ) ; 
/*--dlm_clear_free_entries--*/
int dlm_hash2nodeid ( struct dlm_ls * ls , uint32_t hash ) ; 
/*--dlm_hash2nodeid--*/
int dlm_dir_nodeid ( struct dlm_rsb * r ) ; 
/*--dlm_dir_nodeid--*/
void dlm_dir_remove_entry ( struct dlm_ls * ls , int nodeid , char * name , int namelen ) ; 
/*--dlm_dir_remove_entry--*/
void dlm_dir_clear ( struct dlm_ls * ls ) ; 
/*--dlm_dir_clear--*/
int dlm_recover_directory ( struct dlm_ls * ls ) ; 
/*--dlm_recover_directory--*/
int dlm_dir_lookup ( struct dlm_ls * ls , int nodeid , char * name , int namelen , int * r_nodeid ) ; 
/*--dlm_dir_lookup--*/
void dlm_copy_master_names ( struct dlm_ls * ls , char * inbuf , int inlen , char * outbuf , int outlen , int nodeid ) ; 
/*--dlm_copy_master_names--*/
int dlm_modes_compat ( int mode1 , int mode2 ) ; 
/*--dlm_modes_compat--*/
void dlm_print_lkb ( struct dlm_lkb * lkb ) ; 
/*--dlm_print_lkb--*/
void dlm_dump_rsb ( struct dlm_rsb * r ) ; 
/*--dlm_dump_rsb--*/
void dlm_unlock_recovery ( struct dlm_ls * ls ) ; 
/*--dlm_unlock_recovery--*/
int dlm_lock_recovery_try ( struct dlm_ls * ls ) ; 
/*--dlm_lock_recovery_try--*/
void dlm_hold_rsb ( struct dlm_rsb * r ) ; 
/*--dlm_hold_rsb--*/
void dlm_put_rsb ( struct dlm_rsb * r ) ; 
/*--dlm_put_rsb--*/
int dlm_put_lkb ( struct dlm_lkb * lkb ) ; 
/*--dlm_put_lkb--*/
void dlm_scan_rsbs ( struct dlm_ls * ls ) ; 
/*--dlm_scan_rsbs--*/
void dlm_scan_timeout ( struct dlm_ls * ls ) ; 
/*--dlm_scan_timeout--*/
void dlm_adjust_timeouts ( struct dlm_ls * ls ) ; 
/*--dlm_adjust_timeouts--*/
int dlm_lock ( dlm_lockspace_t * lockspace , int mode , struct dlm_lksb * lksb , uint32_t flags , void * name , unsigned int namelen , uint32_t parent_lkid , void ( * ast ) ( void * astarg ) , void * astarg , void ( * bast ) ( void * astarg , int mode ) ) ; 
/*--dlm_lock--*/
int dlm_unlock ( dlm_lockspace_t * lockspace , uint32_t lkid , uint32_t flags , struct dlm_lksb * lksb , void * astarg ) ; 
/*--dlm_unlock--*/
void dlm_receive_message_saved ( struct dlm_ls * ls , struct dlm_message * ms ) ; 
/*--dlm_receive_message_saved--*/
void dlm_receive_buffer ( union dlm_packet * p , int nodeid ) ; 
/*--dlm_receive_buffer--*/
void dlm_recover_waiters_pre ( struct dlm_ls * ls ) ; 
/*--dlm_recover_waiters_pre--*/
int dlm_recover_waiters_post ( struct dlm_ls * ls ) ; 
/*--dlm_recover_waiters_post--*/
void dlm_purge_mstcpy_locks ( struct dlm_rsb * r ) ; 
/*--dlm_purge_mstcpy_locks--*/
int dlm_purge_locks ( struct dlm_ls * ls ) ; 
/*--dlm_purge_locks--*/
void dlm_grant_after_purge ( struct dlm_ls * ls ) ; 
/*--dlm_grant_after_purge--*/
int dlm_recover_master_copy ( struct dlm_ls * ls , struct dlm_rcom * rc ) ; 
/*--dlm_recover_master_copy--*/
int dlm_recover_process_copy ( struct dlm_ls * ls , struct dlm_rcom * rc ) ; 
/*--dlm_recover_process_copy--*/
int dlm_user_request ( struct dlm_ls * ls , struct dlm_user_args * ua , int mode , uint32_t flags , void * name , unsigned int namelen , unsigned long timeout_cs ) ; 
/*--dlm_user_request--*/
int dlm_user_convert ( struct dlm_ls * ls , struct dlm_user_args * ua_tmp , int mode , uint32_t flags , uint32_t lkid , char * lvb_in , unsigned long timeout_cs ) ; 
/*--dlm_user_convert--*/
int dlm_user_unlock ( struct dlm_ls * ls , struct dlm_user_args * ua_tmp , uint32_t flags , uint32_t lkid , char * lvb_in ) ; 
/*--dlm_user_unlock--*/
int dlm_user_cancel ( struct dlm_ls * ls , struct dlm_user_args * ua_tmp , uint32_t flags , uint32_t lkid ) ; 
/*--dlm_user_cancel--*/
int dlm_user_deadlock ( struct dlm_ls * ls , uint32_t flags , uint32_t lkid ) ; 
/*--dlm_user_deadlock--*/
void dlm_clear_proc_locks ( struct dlm_ls * ls , struct dlm_user_proc * proc ) ; 
/*--dlm_clear_proc_locks--*/
int dlm_user_purge ( struct dlm_ls * ls , struct dlm_user_proc * proc , int nodeid , int pid ) ; 
/*--dlm_user_purge--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dlm_lockspace_init ( void ) ; 
/*--dlm_lockspace_init--*/
void dlm_lockspace_exit ( void ) ; 
/*--dlm_lockspace_exit--*/
struct dlm_ls * dlm_find_lockspace_global ( uint32_t id ) ; 
/*--dlm_find_lockspace_global--*/
struct dlm_ls * dlm_find_lockspace_local ( dlm_lockspace_t * lockspace ) ; 
/*--dlm_find_lockspace_local--*/
struct dlm_ls * dlm_find_lockspace_device ( int minor ) ; 
/*--dlm_find_lockspace_device--*/
void dlm_put_lockspace ( struct dlm_ls * ls ) ; 
/*--dlm_put_lockspace--*/
int dlm_new_lockspace ( const char * name , int namelen , void * * lockspace , uint32_t flags , int lvblen ) ; 
/*--dlm_new_lockspace--*/
int dlm_release_lockspace ( void * lockspace , int force ) ; 
/*--dlm_release_lockspace--*/
void dlm_stop_lockspaces ( void ) ; 
/*--dlm_stop_lockspaces--*/
int dlm_is_member ( struct dlm_ls * ls , int nodeid ) ; 
/*--dlm_is_member--*/
int dlm_is_removed ( struct dlm_ls * ls , int nodeid ) ; 
/*--dlm_is_removed--*/
void dlm_clear_members ( struct dlm_ls * ls ) ; 
/*--dlm_clear_members--*/
void dlm_clear_members_gone ( struct dlm_ls * ls ) ; 
/*--dlm_clear_members_gone--*/
int dlm_recover_members ( struct dlm_ls * ls , struct dlm_recover * rv , int * neg_out ) ; 
/*--dlm_recover_members--*/
int dlm_ls_stop ( struct dlm_ls * ls ) ; 
/*--dlm_ls_stop--*/
int dlm_ls_start ( struct dlm_ls * ls ) ; 
/*--dlm_ls_start--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dlm_memory_init ( void ) ; 
/*--dlm_memory_init--*/
void dlm_memory_exit ( void ) ; 
/*--dlm_memory_exit--*/
char * dlm_allocate_lvb ( struct dlm_ls * ls ) ; 
/*--dlm_allocate_lvb--*/
void dlm_free_lvb ( char * p ) ; 
/*--dlm_free_lvb--*/
struct dlm_rsb * dlm_allocate_rsb ( struct dlm_ls * ls , int namelen ) ; 
/*--dlm_allocate_rsb--*/
void dlm_free_rsb ( struct dlm_rsb * r ) ; 
/*--dlm_free_rsb--*/
struct dlm_lkb * dlm_allocate_lkb ( struct dlm_ls * ls ) ; 
/*--dlm_allocate_lkb--*/
void dlm_free_lkb ( struct dlm_lkb * lkb ) ; 
/*--dlm_free_lkb--*/
int dlm_process_incoming_buffer ( int nodeid , const void * base , unsigned offset , unsigned len , unsigned limit ) ; 
/*--dlm_process_incoming_buffer--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dlm_netlink_init ( void ) ; 
/*--dlm_netlink_init--*/
void dlm_netlink_exit ( void ) ; 
/*--dlm_netlink_exit--*/
void dlm_timeout_warn ( struct dlm_lkb * lkb ) ; 
/*--dlm_timeout_warn--*/
int dlm_lowcomms_connect_node ( int nodeid ) ; 
/*--dlm_lowcomms_connect_node--*/
void * dlm_lowcomms_get_buffer ( int nodeid , int len , gfp_t allocation , char * * ppc ) ; 
/*--dlm_lowcomms_get_buffer--*/
void dlm_lowcomms_commit_buffer ( void * mh ) ; 
/*--dlm_lowcomms_commit_buffer--*/
int dlm_lowcomms_close ( int nodeid ) ; 
/*--dlm_lowcomms_close--*/
void dlm_lowcomms_stop ( void ) ; 
/*--dlm_lowcomms_stop--*/
int dlm_lowcomms_start ( void ) ; 
/*--dlm_lowcomms_start--*/
int dlm_posix_lock ( dlm_lockspace_t * lockspace , u64 number , struct file * file , int cmd , struct file_lock * fl ) ; 
/*--dlm_posix_lock--*/
int dlm_posix_unlock ( dlm_lockspace_t * lockspace , u64 number , struct file * file , struct file_lock * fl ) ; 
/*--dlm_posix_unlock--*/
int dlm_posix_get ( dlm_lockspace_t * lockspace , u64 number , struct file * file , struct file_lock * fl ) ; 
/*--dlm_posix_get--*/
int dlm_plock_init ( void ) ; 
/*--dlm_plock_init--*/
void dlm_plock_exit ( void ) ; 
/*--dlm_plock_exit--*/
int dlm_rcom_status ( struct dlm_ls * ls , int nodeid ) ; 
/*--dlm_rcom_status--*/
int dlm_rcom_names ( struct dlm_ls * ls , int nodeid , char * last_name , int last_len ) ; 
/*--dlm_rcom_names--*/
int dlm_send_rcom_lookup ( struct dlm_rsb * r , int dir_nodeid ) ; 
/*--dlm_send_rcom_lookup--*/
int dlm_send_rcom_lock ( struct dlm_rsb * r , struct dlm_lkb * lkb ) ; 
/*--dlm_send_rcom_lock--*/
int dlm_send_ls_not_ready ( int nodeid , struct dlm_rcom * rc_in ) ; 
/*--dlm_send_ls_not_ready--*/
void dlm_receive_rcom ( struct dlm_ls * ls , struct dlm_rcom * rc , int nodeid ) ; 
/*--dlm_receive_rcom--*/
int dlm_wait_function ( struct dlm_ls * ls , int ( * testfn ) ( struct dlm_ls * ls ) ) ; 
/*--dlm_wait_function--*/
uint32_t dlm_recover_status ( struct dlm_ls * ls ) ; 
/*--dlm_recover_status--*/
void dlm_set_recover_status ( struct dlm_ls * ls , uint32_t status ) ; 
/*--dlm_set_recover_status--*/
int dlm_recover_members_wait ( struct dlm_ls * ls ) ; 
/*--dlm_recover_members_wait--*/
int dlm_recover_directory_wait ( struct dlm_ls * ls ) ; 
/*--dlm_recover_directory_wait--*/
int dlm_recover_locks_wait ( struct dlm_ls * ls ) ; 
/*--dlm_recover_locks_wait--*/
int dlm_recover_done_wait ( struct dlm_ls * ls ) ; 
/*--dlm_recover_done_wait--*/
int dlm_recover_masters ( struct dlm_ls * ls ) ; 
/*--dlm_recover_masters--*/
int dlm_recover_master_reply ( struct dlm_ls * ls , struct dlm_rcom * rc ) ; 
/*--dlm_recover_master_reply--*/
int dlm_recover_locks ( struct dlm_ls * ls ) ; 
/*--dlm_recover_locks--*/
void dlm_recovered_lock ( struct dlm_rsb * r ) ; 
/*--dlm_recovered_lock--*/
void dlm_recover_rsbs ( struct dlm_ls * ls ) ; 
/*--dlm_recover_rsbs--*/
int dlm_create_root_list ( struct dlm_ls * ls ) ; 
/*--dlm_create_root_list--*/
void dlm_release_root_list ( struct dlm_ls * ls ) ; 
/*--dlm_release_root_list--*/
void dlm_clear_toss_list ( struct dlm_ls * ls ) ; 
/*--dlm_clear_toss_list--*/
void dlm_recoverd_kick ( struct dlm_ls * ls ) ; 
/*--dlm_recoverd_kick--*/
int dlm_recoverd_start ( struct dlm_ls * ls ) ; 
/*--dlm_recoverd_start--*/
void dlm_recoverd_stop ( struct dlm_ls * ls ) ; 
/*--dlm_recoverd_stop--*/
void dlm_recoverd_suspend ( struct dlm_ls * ls ) ; 
/*--dlm_recoverd_suspend--*/
void dlm_recoverd_resume ( struct dlm_ls * ls ) ; 
/*--dlm_recoverd_resume--*/
void dlm_add_requestqueue ( struct dlm_ls * ls , int nodeid , struct dlm_message * ms ) ; 
/*--dlm_add_requestqueue--*/
int dlm_process_requestqueue ( struct dlm_ls * ls ) ; 
/*--dlm_process_requestqueue--*/
void dlm_wait_requestqueue ( struct dlm_ls * ls ) ; 
/*--dlm_wait_requestqueue--*/
void dlm_purge_requestqueue ( struct dlm_ls * ls ) ; 
/*--dlm_purge_requestqueue--*/
void dlm_user_add_ast ( struct dlm_lkb * lkb , int type , int mode ) ; 
/*--dlm_user_add_ast--*/
int dlm_device_deregister ( struct dlm_ls * ls ) ; 
/*--dlm_device_deregister--*/
int dlm_user_daemon_available ( void ) ; 
/*--dlm_user_daemon_available--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dlm_user_init ( void ) ; 
/*--dlm_user_init--*/
void dlm_user_exit ( void ) ; 
/*--dlm_user_exit--*/
void dlm_message_out ( struct dlm_message * ms ) ; 
/*--dlm_message_out--*/
void dlm_message_in ( struct dlm_message * ms ) ; 
/*--dlm_message_in--*/
void dlm_rcom_out ( struct dlm_rcom * rc ) ; 
/*--dlm_rcom_out--*/
void dlm_rcom_in ( struct dlm_rcom * rc ) ; 
/*--dlm_rcom_in--*/
struct inode * efs_iget ( struct super_block * super , unsigned long ino ) ; 
/*--efs_iget--*/
efs_block_t efs_map_block ( struct inode * inode , efs_block_t block ) ; 
/*--efs_map_block--*/
struct dentry * efs_lookup ( struct inode * dir , struct dentry * dentry , struct nameidata * nd ) ; 
/*--efs_lookup--*/
struct dentry * efs_fh_to_dentry ( struct super_block * sb , struct fid * fid , int fh_len , int fh_type ) ; 
/*--efs_fh_to_dentry--*/
struct dentry * efs_fh_to_parent ( struct super_block * sb , struct fid * fid , int fh_len , int fh_type ) ; 
/*--efs_fh_to_parent--*/
struct dentry * efs_get_parent ( struct dentry * child ) ; 
/*--efs_get_parent--*/
int efs_get_block ( struct inode * inode , sector_t iblock , struct buffer_head * bh_result , int create ) ; 
/*--efs_get_block--*/
int efs_bmap ( struct inode * inode , efs_block_t block ) ; 
/*--efs_bmap--*/
void exofs_make_credential ( u8 cred_a [ OSD_CAP_LEN ] , const struct osd_obj_id * obj ) ; 
/*--exofs_make_credential--*/
int exofs_read_kern ( struct osd_dev * od , u8 * cred , struct osd_obj_id * obj , u64 offset , void * p , unsigned length ) ; 
/*--exofs_read_kern--*/
int exofs_get_io_state ( struct exofs_layout * layout , struct exofs_io_state * * pios ) ; 
/*--exofs_get_io_state--*/
void exofs_put_io_state ( struct exofs_io_state * ios ) ; 
/*--exofs_put_io_state--*/
unsigned exofs_layout_od_id ( struct exofs_layout * layout , osd_id obj_no , unsigned layout_index ) ; 
/*--exofs_layout_od_id--*/
int exofs_check_io ( struct exofs_io_state * ios , u64 * resid ) ; 
/*--exofs_check_io--*/
int exofs_sbi_create ( struct exofs_io_state * ios ) ; 
/*--exofs_sbi_create--*/
int exofs_sbi_remove ( struct exofs_io_state * ios ) ; 
/*--exofs_sbi_remove--*/
int exofs_sbi_write ( struct exofs_io_state * ios ) ; 
/*--exofs_sbi_write--*/
int exofs_sbi_read ( struct exofs_io_state * ios ) ; 
/*--exofs_sbi_read--*/
int extract_attr_from_ios ( struct exofs_io_state * ios , struct osd_attr * attr ) ; 
/*--extract_attr_from_ios--*/
int exofs_oi_truncate ( struct exofs_i_info * oi , u64 size ) ; 
/*--exofs_oi_truncate--*/
int exofs_write_begin ( struct file * file , struct address_space * mapping , loff_t pos , unsigned len , unsigned flags , struct page * * pagep , void * * fsdata ) ; 
/*--exofs_write_begin--*/
void exofs_truncate ( struct inode * inode ) ; 
/*--exofs_truncate--*/
int exofs_setattr ( struct dentry * dentry , struct iattr * iattr ) ; 
/*--exofs_setattr--*/
struct inode * exofs_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--exofs_iget--*/
int __exofs_wait_obj_created ( struct exofs_i_info * oi ) ; 
/*--__exofs_wait_obj_created--*/
struct inode * exofs_new_inode ( struct inode * dir , int mode ) ; 
/*--exofs_new_inode--*/
int exofs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--exofs_write_inode--*/
void exofs_delete_inode ( struct inode * inode ) ; 
/*--exofs_delete_inode--*/
struct exofs_dir_entry * exofs_find_entry ( struct inode * dir , struct dentry * dentry , struct page * * res_page ) ; 
/*--exofs_find_entry--*/
struct exofs_dir_entry * exofs_dotdot ( struct inode * dir , struct page * * p ) ; 
/*--exofs_dotdot--*/
ino_t exofs_parent_ino ( struct dentry * child ) ; 
/*--exofs_parent_ino--*/
ino_t exofs_inode_by_name ( struct inode * dir , struct dentry * dentry ) ; 
/*--exofs_inode_by_name--*/
int exofs_set_link ( struct inode * dir , struct exofs_dir_entry * de , struct page * page , struct inode * inode ) ; 
/*--exofs_set_link--*/
int exofs_add_link ( struct dentry * dentry , struct inode * inode ) ; 
/*--exofs_add_link--*/
int exofs_delete_entry ( struct exofs_dir_entry * dir , struct page * page ) ; 
/*--exofs_delete_entry--*/
int exofs_make_empty ( struct inode * inode , struct inode * parent ) ; 
/*--exofs_make_empty--*/
int exofs_empty_dir ( struct inode * inode ) ; 
/*--exofs_empty_dir--*/
int exofs_sync_fs ( struct super_block * sb , int wait ) ; 
/*--exofs_sync_fs--*/
void exofs_free_sbi ( struct exofs_sb_info * sbi ) ; 
/*--exofs_free_sbi--*/
struct dentry * exofs_get_parent ( struct dentry * child ) ; 
/*--exofs_get_parent--*/
int exportfs_encode_fh ( struct dentry * dentry , struct fid * fid , int * max_len , int connectable ) ; 
/*--exportfs_encode_fh--*/
struct dentry * exportfs_decode_fh ( struct vfsmount * mnt , struct fid * fid , int fh_len , int fileid_type , int ( * acceptable ) ( void * , struct dentry * ) , void * context ) ; 
/*--exportfs_decode_fh--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) fat_cache_init ( void ) ; 
/*--fat_cache_init--*/
void fat_cache_destroy ( void ) ; 
/*--fat_cache_destroy--*/
void fat_cache_inval_inode ( struct inode * inode ) ; 
/*--fat_cache_inval_inode--*/
int fat_get_cluster ( struct inode * inode , int cluster , int * fclus , int * dclus ) ; 
/*--fat_get_cluster--*/
int fat_bmap ( struct inode * inode , sector_t sector , sector_t * phys , unsigned long * mapped_blocks , int create ) ; 
/*--fat_bmap--*/
int fat_search_long ( struct inode * inode , const unsigned char * name , int name_len , struct fat_slot_info * sinfo ) ; 
/*--fat_search_long--*/
int fat_get_dotdot_entry ( struct inode * dir , struct buffer_head * * bh , struct msdos_dir_entry * * de , loff_t * i_pos ) ; 
/*--fat_get_dotdot_entry--*/
int fat_dir_empty ( struct inode * dir ) ; 
/*--fat_dir_empty--*/
int fat_subdirs ( struct inode * dir ) ; 
/*--fat_subdirs--*/
int fat_scan ( struct inode * dir , const unsigned char * name , struct fat_slot_info * sinfo ) ; 
/*--fat_scan--*/
int fat_remove_entries ( struct inode * dir , struct fat_slot_info * sinfo ) ; 
/*--fat_remove_entries--*/
int fat_alloc_new_dir ( struct inode * dir , struct timespec * ts ) ; 
/*--fat_alloc_new_dir--*/
int fat_add_entries ( struct inode * dir , void * slots , int nr_slots , struct fat_slot_info * sinfo ) ; 
/*--fat_add_entries--*/
void fat_ent_access_init ( struct super_block * sb ) ; 
/*--fat_ent_access_init--*/
int fat_ent_read ( struct inode * inode , struct fat_entry * fatent , int entry ) ; 
/*--fat_ent_read--*/
int fat_ent_write ( struct inode * inode , struct fat_entry * fatent , int new , int wait ) ; 
/*--fat_ent_write--*/
int fat_alloc_clusters ( struct inode * inode , int * cluster , int nr_cluster ) ; 
/*--fat_alloc_clusters--*/
int fat_free_clusters ( struct inode * inode , int cluster ) ; 
/*--fat_free_clusters--*/
int fat_count_free_clusters ( struct super_block * sb ) ; 
/*--fat_count_free_clusters--*/
long fat_generic_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--fat_generic_ioctl--*/
int fat_file_fsync ( struct file * filp , int datasync ) ; 
/*--fat_file_fsync--*/
void fat_truncate_blocks ( struct inode * inode , loff_t offset ) ; 
/*--fat_truncate_blocks--*/
int fat_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--fat_getattr--*/
int fat_setsize ( struct inode * inode , loff_t offset ) ; 
/*--fat_setsize--*/
int fat_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--fat_setattr--*/
void fat_attach ( struct inode * inode , loff_t i_pos ) ; 
/*--fat_attach--*/
void fat_detach ( struct inode * inode ) ; 
/*--fat_detach--*/
struct inode * fat_iget ( struct super_block * sb , loff_t i_pos ) ; 
/*--fat_iget--*/
struct inode * fat_build_inode ( struct super_block * sb , struct msdos_dir_entry * de , loff_t i_pos ) ; 
/*--fat_build_inode--*/
int fat_sync_inode ( struct inode * inode ) ; 
/*--fat_sync_inode--*/
int fat_fill_super ( struct super_block * sb , void * data , int silent , const struct inode_operations * fs_dir_inode_ops , int isvfat ) ; 
/*--fat_fill_super--*/
int fat_flush_inodes ( struct super_block * sb , struct inode * i1 , struct inode * i2 ) ; 
/*--fat_flush_inodes--*/
void __fat_fs_error ( struct super_block * s , int report , const char * fmt , ... ) ; 
/*--__fat_fs_error--*/
int fat_clusters_flush ( struct super_block * sb ) ; 
/*--fat_clusters_flush--*/
int fat_chain_add ( struct inode * inode , int new_dclus , int nr_cluster ) ; 
/*--fat_chain_add--*/
void fat_time_fat2unix ( struct msdos_sb_info * sbi , struct timespec * ts , __le16 __time , __le16 __date , u8 time_cs ) ; 
/*--fat_time_fat2unix--*/
void fat_time_unix2fat ( struct msdos_sb_info * sbi , struct timespec * ts , __le16 * time , __le16 * date , u8 * time_cs ) ; 
/*--fat_time_unix2fat--*/
int fat_sync_bhs ( struct buffer_head * * bhs , int nr_bhs ) ; 
/*--fat_sync_bhs--*/
daddr_t vxfs_bmap1 ( struct inode * ip , long iblock ) ; 
/*--vxfs_bmap1--*/
int vxfs_read_fshead ( struct super_block * sbp ) ; 
/*--vxfs_read_fshead--*/
struct vxfs_dinode * vxfs_blkiget ( struct super_block * sbp , u_long extent , ino_t ino ) ; 
/*--vxfs_blkiget--*/
struct vxfs_dinode * vxfs_stiget ( struct super_block * sbp , ino_t ino ) ; 
/*--vxfs_stiget--*/
struct inode * vxfs_get_fake_inode ( struct super_block * sbp , struct vxfs_dinode * vip ) ; 
/*--vxfs_get_fake_inode--*/
void vxfs_put_fake_inode ( struct inode * ip ) ; 
/*--vxfs_put_fake_inode--*/
struct inode * vxfs_iget ( struct super_block * sbp , ino_t ino ) ; 
/*--vxfs_iget--*/
void vxfs_clear_inode ( struct inode * ip ) ; 
/*--vxfs_clear_inode--*/
int vxfs_read_olt ( struct super_block * sbp , u_long bsize ) ; 
/*--vxfs_read_olt--*/
struct page * vxfs_get_page ( struct address_space * mapping , u_long n ) ; 
/*--vxfs_get_page--*/
struct buffer_head * vxfs_bread ( struct inode * ip , int block ) ; 
/*--vxfs_bread--*/
struct fscache_cache_tag * __fscache_lookup_cache_tag ( const char * name ) ; 
/*--__fscache_lookup_cache_tag--*/
void __fscache_release_cache_tag ( struct fscache_cache_tag * tag ) ; 
/*--__fscache_release_cache_tag--*/
struct fscache_cache * fscache_select_cache_for_object ( struct fscache_cookie * cookie ) ; 
/*--fscache_select_cache_for_object--*/
void fscache_init_cache ( struct fscache_cache * cache , const struct fscache_cache_ops * ops , const char * idfmt , ... ) ; 
/*--fscache_init_cache--*/
int fscache_add_cache ( struct fscache_cache * cache , struct fscache_object * ifsdef , const char * tagname ) ; 
/*--fscache_add_cache--*/
void fscache_io_error ( struct fscache_cache * cache ) ; 
/*--fscache_io_error--*/
void fscache_withdraw_cache ( struct fscache_cache * cache ) ; 
/*--fscache_withdraw_cache--*/
void fscache_cookie_init_once ( void * _cookie ) ; 
/*--fscache_cookie_init_once--*/
struct fscache_cookie * __fscache_acquire_cookie ( struct fscache_cookie * parent , const struct fscache_cookie_def * def , void * netfs_data ) ; 
/*--__fscache_acquire_cookie--*/
void __fscache_update_cookie ( struct fscache_cookie * cookie ) ; 
/*--__fscache_update_cookie--*/
void __fscache_relinquish_cookie ( struct fscache_cookie * cookie , int retire ) ; 
/*--__fscache_relinquish_cookie--*/
void __fscache_cookie_put ( struct fscache_cookie * cookie ) ; 
/*--__fscache_cookie_put--*/
; int fscache_wait_bit ( void * flags ) ; 
/*--fscache_wait_bit--*/
int fscache_wait_bit_interruptible ( void * flags ) ; 
/*--fscache_wait_bit_interruptible--*/
int __fscache_register_netfs ( struct fscache_netfs * netfs ) ; 
/*--__fscache_register_netfs--*/
void __fscache_unregister_netfs ( struct fscache_netfs * netfs ) ; 
/*--__fscache_unregister_netfs--*/
void fscache_object_lookup_negative ( struct fscache_object * object ) ; 
/*--fscache_object_lookup_negative--*/
void fscache_obtained_object ( struct fscache_object * object ) ; 
/*--fscache_obtained_object--*/
void fscache_withdrawing_object ( struct fscache_cache * cache , struct fscache_object * object ) ; 
/*--fscache_withdrawing_object--*/
void fscache_enqueue_object ( struct fscache_object * object ) ; 
/*--fscache_enqueue_object--*/
void fscache_dequeue_object ( struct fscache_object * object ) ; 
/*--fscache_dequeue_object--*/
enum fscache_checkaux fscache_check_aux ( struct fscache_object * object , const void * data , uint16_t datalen ) ; 
/*--fscache_check_aux--*/
void fscache_enqueue_operation ( struct fscache_operation * op ) ; 
/*--fscache_enqueue_operation--*/
int fscache_submit_exclusive_op ( struct fscache_object * object , struct fscache_operation * op ) ; 
/*--fscache_submit_exclusive_op--*/
int fscache_submit_op ( struct fscache_object * object , struct fscache_operation * op ) ; 
/*--fscache_submit_op--*/
void fscache_abort_object ( struct fscache_object * object ) ; 
/*--fscache_abort_object--*/
void fscache_start_operations ( struct fscache_object * object ) ; 
/*--fscache_start_operations--*/
int fscache_cancel_op ( struct fscache_operation * op ) ; 
/*--fscache_cancel_op--*/
void fscache_put_operation ( struct fscache_operation * op ) ; 
/*--fscache_put_operation--*/
void fscache_operation_gc ( struct work_struct * work ) ; 
/*--fscache_operation_gc--*/
bool __fscache_check_page_write ( struct fscache_cookie * cookie , struct page * page ) ; 
/*--__fscache_check_page_write--*/
void __fscache_wait_on_page_write ( struct fscache_cookie * cookie , struct page * page ) ; 
/*--__fscache_wait_on_page_write--*/
bool __fscache_maybe_release_page ( struct fscache_cookie * cookie , struct page * page , gfp_t gfp ) ; 
/*--__fscache_maybe_release_page--*/
int __fscache_attr_changed ( struct fscache_cookie * cookie ) ; 
/*--__fscache_attr_changed--*/
int __fscache_read_or_alloc_page ( struct fscache_cookie * cookie , struct page * page , fscache_rw_complete_t end_io_func , void * context , gfp_t gfp ) ; 
/*--__fscache_read_or_alloc_page--*/
int __fscache_read_or_alloc_pages ( struct fscache_cookie * cookie , struct address_space * mapping , struct list_head * pages , unsigned * nr_pages , fscache_rw_complete_t end_io_func , void * context , gfp_t gfp ) ; 
/*--__fscache_read_or_alloc_pages--*/
int __fscache_alloc_page ( struct fscache_cookie * cookie , struct page * page , gfp_t gfp ) ; 
/*--__fscache_alloc_page--*/
int __fscache_write_page ( struct fscache_cookie * cookie , struct page * page , gfp_t gfp ) ; 
/*--__fscache_write_page--*/
void __fscache_uncache_page ( struct fscache_cookie * cookie , struct page * page ) ; 
/*--__fscache_uncache_page--*/
void fscache_mark_pages_cached ( struct fscache_retrieval * op , struct pagevec * pagevec ) ; 
/*--fscache_mark_pages_cached--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) fscache_proc_init ( void ) ; 
/*--fscache_proc_init--*/
void fscache_proc_cleanup ( void ) ; 
/*--fscache_proc_cleanup--*/
int gfs2_check_acl ( struct inode * inode , int mask ) ; 
/*--gfs2_check_acl--*/
int gfs2_acl_create ( struct gfs2_inode * dip , struct inode * inode ) ; 
/*--gfs2_acl_create--*/
int gfs2_acl_chmod ( struct gfs2_inode * ip , struct iattr * attr ) ; 
/*--gfs2_acl_chmod--*/
int gfs2_unstuff_dinode ( struct gfs2_inode * ip , struct page * page ) ; 
/*--gfs2_unstuff_dinode--*/
int gfs2_block_map ( struct inode * inode , sector_t lblock , struct buffer_head * bh_map , int create ) ; 
/*--gfs2_block_map--*/
int gfs2_extent_map ( struct inode * inode , u64 lblock , int * new , u64 * dblock , unsigned * extlen ) ; 
/*--gfs2_extent_map--*/
int gfs2_truncatei ( struct gfs2_inode * ip , u64 size ) ; 
/*--gfs2_truncatei--*/
int gfs2_truncatei_resume ( struct gfs2_inode * ip ) ; 
/*--gfs2_truncatei_resume--*/
int gfs2_file_dealloc ( struct gfs2_inode * ip ) ; 
/*--gfs2_file_dealloc--*/
int gfs2_write_alloc_required ( struct gfs2_inode * ip , u64 offset , unsigned int len , int * alloc_required ) ; 
/*--gfs2_write_alloc_required--*/
int gfs2_dir_get_new_buffer ( struct gfs2_inode * ip , u64 block , struct buffer_head * * bhp ) ; 
/*--gfs2_dir_get_new_buffer--*/
int gfs2_dir_read ( struct inode * inode , u64 * offset , void * opaque , filldir_t filldir ) ; 
/*--gfs2_dir_read--*/
struct inode * gfs2_dir_search ( struct inode * dir , const struct qstr * name ) ; 
/*--gfs2_dir_search--*/
int gfs2_dir_check ( struct inode * dir , const struct qstr * name , const struct gfs2_inode * ip ) ; 
/*--gfs2_dir_check--*/
int gfs2_dir_add ( struct inode * inode , const struct qstr * name , const struct gfs2_inode * nip , unsigned type ) ; 
/*--gfs2_dir_add--*/
int gfs2_dir_del ( struct gfs2_inode * dip , const struct qstr * name ) ; 
/*--gfs2_dir_del--*/
int gfs2_dir_mvino ( struct gfs2_inode * dip , const struct qstr * filename , const struct gfs2_inode * nip , unsigned int new_type ) ; 
/*--gfs2_dir_mvino--*/
int gfs2_dir_exhash_dealloc ( struct gfs2_inode * dip ) ; 
/*--gfs2_dir_exhash_dealloc--*/
int gfs2_diradd_alloc_required ( struct inode * inode , const struct qstr * name ) ; 
/*--gfs2_diradd_alloc_required--*/
ssize_t gfs2_listxattr ( struct dentry * dentry , char * buffer , size_t size ) ; 
/*--gfs2_listxattr--*/
int gfs2_xattr_acl_get ( struct gfs2_inode * ip , const char * name , char * * ppdata ) ; 
/*--gfs2_xattr_acl_get--*/
int __gfs2_xattr_set ( struct inode * inode , const char * name , const void * value , size_t size , int flags , int type ) ; 
/*--__gfs2_xattr_set--*/
int gfs2_xattr_acl_chmod ( struct gfs2_inode * ip , struct iattr * attr , char * data ) ; 
/*--gfs2_xattr_acl_chmod--*/
int gfs2_ea_dealloc ( struct gfs2_inode * ip ) ; 
/*--gfs2_ea_dealloc--*/
void gfs2_glock_hold ( struct gfs2_glock * gl ) ; 
/*--gfs2_glock_hold--*/
void gfs2_glock_put_nolock ( struct gfs2_glock * gl ) ; 
/*--gfs2_glock_put_nolock--*/
int gfs2_glock_put ( struct gfs2_glock * gl ) ; 
/*--gfs2_glock_put--*/
int gfs2_glock_get ( struct gfs2_sbd * sdp , u64 number , const struct gfs2_glock_operations * glops , int create , struct gfs2_glock * * glp ) ; 
/*--gfs2_glock_get--*/
void gfs2_holder_init ( struct gfs2_glock * gl , unsigned int state , unsigned flags , struct gfs2_holder * gh ) ; 
/*--gfs2_holder_init--*/
void gfs2_holder_reinit ( unsigned int state , unsigned flags , struct gfs2_holder * gh ) ; 
/*--gfs2_holder_reinit--*/
void gfs2_holder_uninit ( struct gfs2_holder * gh ) ; 
/*--gfs2_holder_uninit--*/
int gfs2_glock_wait ( struct gfs2_holder * gh ) ; 
/*--gfs2_glock_wait--*/
void gfs2_print_dbg ( struct seq_file * seq , const char * fmt , ... ) ; 
/*--gfs2_print_dbg--*/
int gfs2_glock_nq ( struct gfs2_holder * gh ) ; 
/*--gfs2_glock_nq--*/
int gfs2_glock_poll ( struct gfs2_holder * gh ) ; 
/*--gfs2_glock_poll--*/
void gfs2_glock_dq ( struct gfs2_holder * gh ) ; 
/*--gfs2_glock_dq--*/
void gfs2_glock_dq_wait ( struct gfs2_holder * gh ) ; 
/*--gfs2_glock_dq_wait--*/
void gfs2_glock_dq_uninit ( struct gfs2_holder * gh ) ; 
/*--gfs2_glock_dq_uninit--*/
int gfs2_glock_nq_num ( struct gfs2_sbd * sdp , u64 number , const struct gfs2_glock_operations * glops , unsigned int state , int flags , struct gfs2_holder * gh ) ; 
/*--gfs2_glock_nq_num--*/
int gfs2_glock_nq_m ( unsigned int num_gh , struct gfs2_holder * ghs ) ; 
/*--gfs2_glock_nq_m--*/
void gfs2_glock_dq_m ( unsigned int num_gh , struct gfs2_holder * ghs ) ; 
/*--gfs2_glock_dq_m--*/
void gfs2_glock_dq_uninit_m ( unsigned int num_gh , struct gfs2_holder * ghs ) ; 
/*--gfs2_glock_dq_uninit_m--*/
void gfs2_glock_cb ( struct gfs2_glock * gl , unsigned int state ) ; 
/*--gfs2_glock_cb--*/
void gfs2_glock_complete ( struct gfs2_glock * gl , int ret ) ; 
/*--gfs2_glock_complete--*/
void gfs2_glock_thaw ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_glock_thaw--*/
void gfs2_gl_hash_clear ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_gl_hash_clear--*/
void gfs2_glock_finish_truncate ( struct gfs2_inode * ip ) ; 
/*--gfs2_glock_finish_truncate--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) gfs2_glock_init ( void ) ; 
/*--gfs2_glock_init--*/
void gfs2_glock_exit ( void ) ; 
/*--gfs2_glock_exit--*/
int gfs2_create_debugfs_file ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_create_debugfs_file--*/
void gfs2_delete_debugfs_file ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_delete_debugfs_file--*/
int gfs2_register_debugfs ( void ) ; 
/*--gfs2_register_debugfs--*/
void gfs2_unregister_debugfs ( void ) ; 
/*--gfs2_unregister_debugfs--*/
struct inode * gfs2_ilookup ( struct super_block * sb , u64 no_addr ) ; 
/*--gfs2_ilookup--*/
void gfs2_set_iop ( struct inode * inode ) ; 
/*--gfs2_set_iop--*/
struct inode * gfs2_inode_lookup ( struct super_block * sb , unsigned int type , u64 no_addr , u64 no_formal_ino ) ; 
/*--gfs2_inode_lookup--*/
void gfs2_process_unlinked_inode ( struct super_block * sb , u64 no_addr ) ; 
/*--gfs2_process_unlinked_inode--*/
int gfs2_inode_refresh ( struct gfs2_inode * ip ) ; 
/*--gfs2_inode_refresh--*/
int gfs2_dinode_dealloc ( struct gfs2_inode * ip ) ; 
/*--gfs2_dinode_dealloc--*/
int gfs2_change_nlink ( struct gfs2_inode * ip , int diff ) ; 
/*--gfs2_change_nlink--*/
struct inode * gfs2_lookup_simple ( struct inode * dip , const char * name ) ; 
/*--gfs2_lookup_simple--*/
struct inode * gfs2_lookupi ( struct inode * dir , const struct qstr * name , int is_root ) ; 
/*--gfs2_lookupi--*/
struct inode * gfs2_createi ( struct gfs2_holder * ghs , const struct qstr * name , unsigned int mode , dev_t dev ) ; 
/*--gfs2_createi--*/
int gfs2_setattr_simple ( struct gfs2_inode * ip , struct iattr * attr ) ; 
/*--gfs2_setattr_simple--*/
void gfs2_dinode_out ( const struct gfs2_inode * ip , void * buf ) ; 
/*--gfs2_dinode_out--*/
void gfs2_dinode_print ( const struct gfs2_inode * ip ) ; 
/*--gfs2_dinode_print--*/
unsigned int gfs2_struct2blk ( struct gfs2_sbd * sdp , unsigned int nstruct , unsigned int ssize ) ; 
/*--gfs2_struct2blk--*/
void gfs2_remove_from_ail ( struct gfs2_bufdata * bd ) ; 
/*--gfs2_remove_from_ail--*/
int gfs2_log_reserve ( struct gfs2_sbd * sdp , unsigned int blks ) ; 
/*--gfs2_log_reserve--*/
void gfs2_log_incr_head ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_log_incr_head--*/
struct buffer_head * gfs2_log_get_buf ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_log_get_buf--*/
struct buffer_head * gfs2_log_fake_buf ( struct gfs2_sbd * sdp , struct buffer_head * real ) ; 
/*--gfs2_log_fake_buf--*/
void gfs2_log_flush ( struct gfs2_sbd * sdp , struct gfs2_glock * gl ) ; 
/*--gfs2_log_flush--*/
void gfs2_log_commit ( struct gfs2_sbd * sdp , struct gfs2_trans * tr ) ; 
/*--gfs2_log_commit--*/
void gfs2_log_shutdown ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_log_shutdown--*/
void gfs2_meta_syncfs ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_meta_syncfs--*/
int gfs2_logd ( void * data ) ; 
/*--gfs2_logd--*/
void gfs2_meta_sync ( struct gfs2_glock * gl ) ; 
/*--gfs2_meta_sync--*/
struct buffer_head * gfs2_getbuf ( struct gfs2_glock * gl , u64 blkno , int create ) ; 
/*--gfs2_getbuf--*/
struct buffer_head * gfs2_meta_new ( struct gfs2_glock * gl , u64 blkno ) ; 
/*--gfs2_meta_new--*/
int gfs2_meta_read ( struct gfs2_glock * gl , u64 blkno , int flags , struct buffer_head * * bhp ) ; 
/*--gfs2_meta_read--*/
int gfs2_meta_wait ( struct gfs2_sbd * sdp , struct buffer_head * bh ) ; 
/*--gfs2_meta_wait--*/
void gfs2_attach_bufdata ( struct gfs2_glock * gl , struct buffer_head * bh , int meta ) ; 
/*--gfs2_attach_bufdata--*/
void gfs2_remove_from_journal ( struct buffer_head * bh , struct gfs2_trans * tr , int meta ) ; 
/*--gfs2_remove_from_journal--*/
void gfs2_meta_wipe ( struct gfs2_inode * ip , u64 bstart , u32 blen ) ; 
/*--gfs2_meta_wipe--*/
int gfs2_meta_indirect_buffer ( struct gfs2_inode * ip , int height , u64 num , int new , struct buffer_head * * bhp ) ; 
/*--gfs2_meta_indirect_buffer--*/
struct buffer_head * gfs2_meta_ra ( struct gfs2_glock * gl , u64 dblock , u32 extlen ) ; 
/*--gfs2_meta_ra--*/
int gfs2_internal_read ( struct gfs2_inode * ip , struct file_ra_state * ra_state , char * buf , loff_t * pos , unsigned size ) ; 
/*--gfs2_internal_read--*/
int gfs2_releasepage ( struct page * page , gfp_t gfp_mask ) ; 
/*--gfs2_releasepage--*/
void gfs2_set_aops ( struct inode * inode ) ; 
/*--gfs2_set_aops--*/
void gfs2_set_inode_flags ( struct inode * inode ) ; 
/*--gfs2_set_inode_flags--*/
void gfs2_lm_unmount ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_lm_unmount--*/
void gfs2_online_uevent ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_online_uevent--*/
int gfs2_permission ( struct inode * inode , int mask ) ; 
/*--gfs2_permission--*/
int gfs2_shrink_qd_memory ( struct shrinker * shrink , int nr , gfp_t gfp_mask ) ; 
/*--gfs2_shrink_qd_memory--*/
int gfs2_quota_hold ( struct gfs2_inode * ip , u32 uid , u32 gid ) ; 
/*--gfs2_quota_hold--*/
void gfs2_quota_unhold ( struct gfs2_inode * ip ) ; 
/*--gfs2_quota_unhold--*/
int gfs2_quota_lock ( struct gfs2_inode * ip , u32 uid , u32 gid ) ; 
/*--gfs2_quota_lock--*/
void gfs2_quota_unlock ( struct gfs2_inode * ip ) ; 
/*--gfs2_quota_unlock--*/
int gfs2_quota_check ( struct gfs2_inode * ip , u32 uid , u32 gid ) ; 
/*--gfs2_quota_check--*/
void gfs2_quota_change ( struct gfs2_inode * ip , s64 change , u32 uid , u32 gid ) ; 
/*--gfs2_quota_change--*/
int gfs2_quota_sync ( struct super_block * sb , int type , int wait ) ; 
/*--gfs2_quota_sync--*/
int gfs2_quota_refresh ( struct gfs2_sbd * sdp , int user , u32 id ) ; 
/*--gfs2_quota_refresh--*/
int gfs2_quota_init ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_quota_init--*/
void gfs2_quota_cleanup ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_quota_cleanup--*/
void gfs2_wake_up_statfs ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_wake_up_statfs--*/
int gfs2_quotad ( void * data ) ; 
/*--gfs2_quotad--*/
int gfs2_replay_read_block ( struct gfs2_jdesc * jd , unsigned int blk , struct buffer_head * * bh ) ; 
/*--gfs2_replay_read_block--*/
int gfs2_revoke_add ( struct gfs2_sbd * sdp , u64 blkno , unsigned int where ) ; 
/*--gfs2_revoke_add--*/
int gfs2_revoke_check ( struct gfs2_sbd * sdp , u64 blkno , unsigned int where ) ; 
/*--gfs2_revoke_check--*/
void gfs2_revoke_clean ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_revoke_clean--*/
int gfs2_find_jhead ( struct gfs2_jdesc * jd , struct gfs2_log_header_host * head ) ; 
/*--gfs2_find_jhead--*/
int gfs2_recover_journal ( struct gfs2_jdesc * jd ) ; 
/*--gfs2_recover_journal--*/
void gfs2_rgrp_verify ( struct gfs2_rgrpd * rgd ) ; 
/*--gfs2_rgrp_verify--*/
struct gfs2_rgrpd * gfs2_blk2rgrpd ( struct gfs2_sbd * sdp , u64 blk ) ; 
/*--gfs2_blk2rgrpd--*/
struct gfs2_rgrpd * gfs2_rgrpd_get_first ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_rgrpd_get_first--*/
struct gfs2_rgrpd * gfs2_rgrpd_get_next ( struct gfs2_rgrpd * rgd ) ; 
/*--gfs2_rgrpd_get_next--*/
void gfs2_clear_rgrpd ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_clear_rgrpd--*/
u64 gfs2_ri_total ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_ri_total--*/
int gfs2_rindex_hold ( struct gfs2_sbd * sdp , struct gfs2_holder * ri_gh ) ; 
/*--gfs2_rindex_hold--*/
int gfs2_rgrp_bh_get ( struct gfs2_rgrpd * rgd ) ; 
/*--gfs2_rgrp_bh_get--*/
void gfs2_rgrp_bh_hold ( struct gfs2_rgrpd * rgd ) ; 
/*--gfs2_rgrp_bh_hold--*/
void gfs2_rgrp_bh_put ( struct gfs2_rgrpd * rgd ) ; 
/*--gfs2_rgrp_bh_put--*/
void gfs2_rgrp_repolish_clones ( struct gfs2_rgrpd * rgd ) ; 
/*--gfs2_rgrp_repolish_clones--*/
struct gfs2_alloc * gfs2_alloc_get ( struct gfs2_inode * ip ) ; 
/*--gfs2_alloc_get--*/
int gfs2_inplace_reserve_i ( struct gfs2_inode * ip , char * file , unsigned int line ) ; 
/*--gfs2_inplace_reserve_i--*/
void gfs2_inplace_release ( struct gfs2_inode * ip ) ; 
/*--gfs2_inplace_release--*/
int gfs2_rgrp_dump ( struct seq_file * seq , const struct gfs2_glock * gl ) ; 
/*--gfs2_rgrp_dump--*/
int gfs2_alloc_block ( struct gfs2_inode * ip , u64 * bn , unsigned int * n ) ; 
/*--gfs2_alloc_block--*/
int gfs2_alloc_di ( struct gfs2_inode * dip , u64 * bn , u64 * generation ) ; 
/*--gfs2_alloc_di--*/
void gfs2_free_data ( struct gfs2_inode * ip , u64 bstart , u32 blen ) ; 
/*--gfs2_free_data--*/
void gfs2_free_meta ( struct gfs2_inode * ip , u64 bstart , u32 blen ) ; 
/*--gfs2_free_meta--*/
void gfs2_unlink_di ( struct inode * inode ) ; 
/*--gfs2_unlink_di--*/
void gfs2_free_di ( struct gfs2_rgrpd * rgd , struct gfs2_inode * ip ) ; 
/*--gfs2_free_di--*/
int gfs2_check_blk_type ( struct gfs2_sbd * sdp , u64 no_addr , unsigned int type ) ; 
/*--gfs2_check_blk_type--*/
void gfs2_rlist_add ( struct gfs2_sbd * sdp , struct gfs2_rgrp_list * rlist , u64 block ) ; 
/*--gfs2_rlist_add--*/
void gfs2_rlist_alloc ( struct gfs2_rgrp_list * rlist , unsigned int state ) ; 
/*--gfs2_rlist_alloc--*/
void gfs2_rlist_free ( struct gfs2_rgrp_list * rlist ) ; 
/*--gfs2_rlist_free--*/
int gfs2_mount_args ( struct gfs2_args * args , char * options ) ; 
/*--gfs2_mount_args--*/
void gfs2_jindex_free ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_jindex_free--*/
struct gfs2_jdesc * gfs2_jdesc_find ( struct gfs2_sbd * sdp , unsigned int jid ) ; 
/*--gfs2_jdesc_find--*/
int gfs2_jdesc_check ( struct gfs2_jdesc * jd ) ; 
/*--gfs2_jdesc_check--*/
int gfs2_make_fs_rw ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_make_fs_rw--*/
void gfs2_statfs_change_in ( struct gfs2_statfs_change_host * sc , const void * buf ) ; 
/*--gfs2_statfs_change_in--*/
int gfs2_statfs_init ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_statfs_init--*/
void gfs2_statfs_change ( struct gfs2_sbd * sdp , s64 total , s64 free , s64 dinodes ) ; 
/*--gfs2_statfs_change--*/
void update_statfs ( struct gfs2_sbd * sdp , struct buffer_head * m_bh , struct buffer_head * l_bh ) ; 
/*--update_statfs--*/
int gfs2_statfs_sync ( struct super_block * sb , int type ) ; 
/*--gfs2_statfs_sync--*/
int gfs2_freeze_fs ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_freeze_fs--*/
void gfs2_unfreeze_fs ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_unfreeze_fs--*/
int gfs2_sys_fs_add ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_sys_fs_add--*/
void gfs2_sys_fs_del ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_sys_fs_del--*/
int gfs2_sys_init ( void ) ; 
/*--gfs2_sys_init--*/
void gfs2_sys_uninit ( void ) ; 
/*--gfs2_sys_uninit--*/
int gfs2_trans_begin ( struct gfs2_sbd * sdp , unsigned int blocks , unsigned int revokes ) ; 
/*--gfs2_trans_begin--*/
void gfs2_trans_end ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_trans_end--*/
void gfs2_trans_add_bh ( struct gfs2_glock * gl , struct buffer_head * bh , int meta ) ; 
/*--gfs2_trans_add_bh--*/
void gfs2_trans_add_revoke ( struct gfs2_sbd * sdp , struct gfs2_bufdata * bd ) ; 
/*--gfs2_trans_add_revoke--*/
void gfs2_trans_add_unrevoke ( struct gfs2_sbd * sdp , u64 blkno , unsigned int len ) ; 
/*--gfs2_trans_add_unrevoke--*/
void gfs2_trans_add_rg ( struct gfs2_rgrpd * rgd ) ; 
/*--gfs2_trans_add_rg--*/
void gfs2_assert_i ( struct gfs2_sbd * sdp ) ; 
/*--gfs2_assert_i--*/
int gfs2_lm_withdraw ( struct gfs2_sbd * sdp , char * fmt , ... ) ; 
/*--gfs2_lm_withdraw--*/
int gfs2_assert_withdraw_i ( struct gfs2_sbd * sdp , char * assertion , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_assert_withdraw_i--*/
int gfs2_assert_warn_i ( struct gfs2_sbd * sdp , char * assertion , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_assert_warn_i--*/
int gfs2_consist_i ( struct gfs2_sbd * sdp , int cluster_wide , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_consist_i--*/
int gfs2_consist_inode_i ( struct gfs2_inode * ip , int cluster_wide , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_consist_inode_i--*/
int gfs2_consist_rgrpd_i ( struct gfs2_rgrpd * rgd , int cluster_wide , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_consist_rgrpd_i--*/
int gfs2_meta_check_ii ( struct gfs2_sbd * sdp , struct buffer_head * bh , const char * type , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_meta_check_ii--*/
int gfs2_metatype_check_ii ( struct gfs2_sbd * sdp , struct buffer_head * bh , u16 type , u16 t , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_metatype_check_ii--*/
int gfs2_io_error_i ( struct gfs2_sbd * sdp , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_io_error_i--*/
int gfs2_io_error_bh_i ( struct gfs2_sbd * sdp , struct buffer_head * bh , const char * function , char * file , unsigned int line ) ; 
/*--gfs2_io_error_bh_i--*/
void gfs2_icbit_munge ( struct gfs2_sbd * sdp , unsigned char * * bitmap , unsigned int bit , int new_value ) ; 
/*--gfs2_icbit_munge--*/
u32 hfs_vbm_search_free ( struct super_block * sb , u32 goal , u32 * num_bits ) ; 
/*--hfs_vbm_search_free--*/
int hfs_clear_vbm_bits ( struct super_block * sb , u16 start , u16 count ) ; 
/*--hfs_clear_vbm_bits--*/
int hfs_find_init ( struct hfs_btree * tree , struct hfs_find_data * fd ) ; 
/*--hfs_find_init--*/
void hfs_find_exit ( struct hfs_find_data * fd ) ; 
/*--hfs_find_exit--*/
int __hfs_brec_find ( struct hfs_bnode * bnode , struct hfs_find_data * fd ) ; 
/*--__hfs_brec_find--*/
int hfs_brec_find ( struct hfs_find_data * fd ) ; 
/*--hfs_brec_find--*/
int hfs_brec_read ( struct hfs_find_data * fd , void * rec , int rec_len ) ; 
/*--hfs_brec_read--*/
int hfs_brec_goto ( struct hfs_find_data * fd , int cnt ) ; 
/*--hfs_brec_goto--*/
void hfs_bnode_read ( struct hfs_bnode * node , void * buf , int off , int len ) ; 
/*--hfs_bnode_read--*/
u16 hfs_bnode_read_u16 ( struct hfs_bnode * node , int off ) ; 
/*--hfs_bnode_read_u16--*/
u8 hfs_bnode_read_u8 ( struct hfs_bnode * node , int off ) ; 
/*--hfs_bnode_read_u8--*/
void hfs_bnode_read_key ( struct hfs_bnode * node , void * key , int off ) ; 
/*--hfs_bnode_read_key--*/
void hfs_bnode_write ( struct hfs_bnode * node , void * buf , int off , int len ) ; 
/*--hfs_bnode_write--*/
void hfs_bnode_write_u16 ( struct hfs_bnode * node , int off , u16 data ) ; 
/*--hfs_bnode_write_u16--*/
void hfs_bnode_write_u8 ( struct hfs_bnode * node , int off , u8 data ) ; 
/*--hfs_bnode_write_u8--*/
void hfs_bnode_clear ( struct hfs_bnode * node , int off , int len ) ; 
/*--hfs_bnode_clear--*/
void hfs_bnode_copy ( struct hfs_bnode * dst_node , int dst , struct hfs_bnode * src_node , int src , int len ) ; 
/*--hfs_bnode_copy--*/
void hfs_bnode_move ( struct hfs_bnode * node , int dst , int src , int len ) ; 
/*--hfs_bnode_move--*/
void hfs_bnode_dump ( struct hfs_bnode * node ) ; 
/*--hfs_bnode_dump--*/
void hfs_bnode_unlink ( struct hfs_bnode * node ) ; 
/*--hfs_bnode_unlink--*/
struct hfs_bnode * hfs_bnode_findhash ( struct hfs_btree * tree , u32 cnid ) ; 
/*--hfs_bnode_findhash--*/
void hfs_bnode_unhash ( struct hfs_bnode * node ) ; 
/*--hfs_bnode_unhash--*/
struct hfs_bnode * hfs_bnode_find ( struct hfs_btree * tree , u32 num ) ; 
/*--hfs_bnode_find--*/
void hfs_bnode_free ( struct hfs_bnode * node ) ; 
/*--hfs_bnode_free--*/
struct hfs_bnode * hfs_bnode_create ( struct hfs_btree * tree , u32 num ) ; 
/*--hfs_bnode_create--*/
void hfs_bnode_get ( struct hfs_bnode * node ) ; 
/*--hfs_bnode_get--*/
void hfs_bnode_put ( struct hfs_bnode * node ) ; 
/*--hfs_bnode_put--*/
u16 hfs_brec_lenoff ( struct hfs_bnode * node , u16 rec , u16 * off ) ; 
/*--hfs_brec_lenoff--*/
u16 hfs_brec_keylen ( struct hfs_bnode * node , u16 rec ) ; 
/*--hfs_brec_keylen--*/
int hfs_brec_insert ( struct hfs_find_data * fd , void * entry , int entry_len ) ; 
/*--hfs_brec_insert--*/
int hfs_brec_remove ( struct hfs_find_data * fd ) ; 
/*--hfs_brec_remove--*/
struct hfs_btree * hfs_btree_open ( struct super_block * sb , u32 id , btree_keycmp keycmp ) ; 
/*--hfs_btree_open--*/
void hfs_btree_close ( struct hfs_btree * tree ) ; 
/*--hfs_btree_close--*/
void hfs_btree_write ( struct hfs_btree * tree ) ; 
/*--hfs_btree_write--*/
struct hfs_bnode * hfs_bmap_alloc ( struct hfs_btree * tree ) ; 
/*--hfs_bmap_alloc--*/
void hfs_bmap_free ( struct hfs_bnode * node ) ; 
/*--hfs_bmap_free--*/
void hfs_cat_build_key ( struct super_block * sb , btree_key * key , u32 parent , struct qstr * name ) ; 
/*--hfs_cat_build_key--*/
int hfs_cat_create ( u32 cnid , struct inode * dir , struct qstr * str , struct inode * inode ) ; 
/*--hfs_cat_create--*/
int hfs_cat_keycmp ( const btree_key * key1 , const btree_key * key2 ) ; 
/*--hfs_cat_keycmp--*/
int hfs_cat_find_brec ( struct super_block * sb , u32 cnid , struct hfs_find_data * fd ) ; 
/*--hfs_cat_find_brec--*/
int hfs_cat_delete ( u32 cnid , struct inode * dir , struct qstr * str ) ; 
/*--hfs_cat_delete--*/
int hfs_cat_move ( u32 cnid , struct inode * src_dir , struct qstr * src_name , struct inode * dst_dir , struct qstr * dst_name ) ; 
/*--hfs_cat_move--*/
int hfs_ext_keycmp ( const btree_key * key1 , const btree_key * key2 ) ; 
/*--hfs_ext_keycmp--*/
void hfs_ext_write_extent ( struct inode * inode ) ; 
/*--hfs_ext_write_extent--*/
int hfs_free_fork ( struct super_block * sb , struct hfs_cat_file * file , int type ) ; 
/*--hfs_free_fork--*/
int hfs_get_block ( struct inode * inode , sector_t block , struct buffer_head * bh_result , int create ) ; 
/*--hfs_get_block--*/
int hfs_extend_file ( struct inode * inode ) ; 
/*--hfs_extend_file--*/
void hfs_file_truncate ( struct inode * inode ) ; 
/*--hfs_file_truncate--*/
struct inode * hfs_new_inode ( struct inode * dir , struct qstr * name , int mode ) ; 
/*--hfs_new_inode--*/
void hfs_delete_inode ( struct inode * inode ) ; 
/*--hfs_delete_inode--*/
void hfs_inode_read_fork ( struct inode * inode , struct hfs_extent * ext , __be32 __log_size , __be32 phys_size , u32 clump_size ) ; 
/*--hfs_inode_read_fork--*/
struct inode * hfs_iget ( struct super_block * sb , struct hfs_cat_key * key , hfs_cat_rec * rec ) ; 
/*--hfs_iget--*/
void hfs_inode_write_fork ( struct inode * inode , struct hfs_extent * ext , __be32 * log_size , __be32 * phys_size ) ; 
/*--hfs_inode_write_fork--*/
int hfs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--hfs_write_inode--*/
void hfs_clear_inode ( struct inode * inode ) ; 
/*--hfs_clear_inode--*/
int hfs_inode_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--hfs_inode_setattr--*/
int hfs_setxattr ( struct dentry * dentry , const char * name , const void * value , size_t size , int flags ) ; 
/*--hfs_setxattr--*/
ssize_t hfs_getxattr ( struct dentry * dentry , const char * name , void * value , size_t size ) ; 
/*--hfs_getxattr--*/
ssize_t hfs_listxattr ( struct dentry * dentry , char * buffer , size_t size ) ; 
/*--hfs_listxattr--*/
int hfs_mdb_get ( struct super_block * sb ) ; 
/*--hfs_mdb_get--*/
void hfs_mdb_commit ( struct super_block * sb ) ; 
/*--hfs_mdb_commit--*/
void hfs_mdb_close ( struct super_block * sb ) ; 
/*--hfs_mdb_close--*/
void hfs_mdb_put ( struct super_block * sb ) ; 
/*--hfs_mdb_put--*/
int hfs_part_find ( struct super_block * sb , sector_t * part_start , sector_t * part_size ) ; 
/*--hfs_part_find--*/
int hfs_hash_dentry ( struct dentry * dentry , struct qstr * this ) ; 
/*--hfs_hash_dentry--*/
int hfs_strcmp ( const unsigned char * s1 , unsigned int len1 , const unsigned char * s2 , unsigned int len2 ) ; 
/*--hfs_strcmp--*/
int hfs_compare_dentry ( struct dentry * dentry , struct qstr * s1 , struct qstr * s2 ) ; 
/*--hfs_compare_dentry--*/
int hfs_mac2asc ( struct super_block * sb , char * out , const struct hfs_name * in ) ; 
/*--hfs_mac2asc--*/
void hfs_asc2mac ( struct super_block * sb , struct hfs_name * out , struct qstr * in ) ; 
/*--hfs_asc2mac--*/
struct inode * hfsplus_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--hfsplus_iget--*/
void hfsplus_fill_defaults ( struct hfsplus_sb_info * opts ) ; 
/*--hfsplus_fill_defaults--*/
int hfsplus_parse_options ( char * input , struct hfsplus_sb_info * sbi ) ; 
/*--hfsplus_parse_options--*/
int hfsplus_show_options ( struct seq_file * seq , struct vfsmount * mnt ) ; 
/*--hfsplus_show_options--*/
struct inode * hfsplus_new_inode ( struct super_block * sb , int mode ) ; 
/*--hfsplus_new_inode--*/
void hfsplus_delete_inode ( struct inode * inode ) ; 
/*--hfsplus_delete_inode--*/
void hfsplus_inode_read_fork ( struct inode * inode , struct hfsplus_fork_raw * fork ) ; 
/*--hfsplus_inode_read_fork--*/
void hfsplus_inode_write_fork ( struct inode * inode , struct hfsplus_fork_raw * fork ) ; 
/*--hfsplus_inode_write_fork--*/
int hfsplus_cat_read_inode ( struct inode * inode , struct hfs_find_data * fd ) ; 
/*--hfsplus_cat_read_inode--*/
int hfsplus_cat_write_inode ( struct inode * inode ) ; 
/*--hfsplus_cat_write_inode--*/
long hfsplus_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--hfsplus_ioctl--*/
int hfsplus_setxattr ( struct dentry * dentry , const char * name , const void * value , size_t size , int flags ) ; 
/*--hfsplus_setxattr--*/
ssize_t hfsplus_getxattr ( struct dentry * dentry , const char * name , void * value , size_t size ) ; 
/*--hfsplus_getxattr--*/
ssize_t hfsplus_listxattr ( struct dentry * dentry , char * buffer , size_t size ) ; 
/*--hfsplus_listxattr--*/
int hfsplus_ext_cmp_key ( const hfsplus_btree_key * k1 , const hfsplus_btree_key * k2 ) ; 
/*--hfsplus_ext_cmp_key--*/
void hfsplus_ext_write_extent ( struct inode * inode ) ; 
/*--hfsplus_ext_write_extent--*/
int hfsplus_get_block ( struct inode * inode , sector_t iblock , struct buffer_head * bh_result , int create ) ; 
/*--hfsplus_get_block--*/
int hfsplus_free_fork ( struct super_block * sb , u32 cnid , struct hfsplus_fork_raw * fork , int type ) ; 
/*--hfsplus_free_fork--*/
int hfsplus_file_extend ( struct inode * inode ) ; 
/*--hfsplus_file_extend--*/
void hfsplus_file_truncate ( struct inode * inode ) ; 
/*--hfsplus_file_truncate--*/
int hfsplus_cat_case_cmp_key ( const hfsplus_btree_key * k1 , const hfsplus_btree_key * k2 ) ; 
/*--hfsplus_cat_case_cmp_key--*/
int hfsplus_cat_bin_cmp_key ( const hfsplus_btree_key * k1 , const hfsplus_btree_key * k2 ) ; 
/*--hfsplus_cat_bin_cmp_key--*/
void hfsplus_cat_build_key ( struct super_block * sb , hfsplus_btree_key * key , u32 parent , struct qstr * str ) ; 
/*--hfsplus_cat_build_key--*/
int hfsplus_find_cat ( struct super_block * sb , u32 cnid , struct hfs_find_data * fd ) ; 
/*--hfsplus_find_cat--*/
int hfsplus_create_cat ( u32 cnid , struct inode * dir , struct qstr * str , struct inode * inode ) ; 
/*--hfsplus_create_cat--*/
int hfsplus_delete_cat ( u32 cnid , struct inode * dir , struct qstr * str ) ; 
/*--hfsplus_delete_cat--*/
int hfsplus_rename_cat ( u32 cnid , struct inode * src_dir , struct qstr * src_name , struct inode * dst_dir , struct qstr * dst_name ) ; 
/*--hfsplus_rename_cat--*/
struct hfs_btree * hfsplus_btree_open ( struct super_block * sb , u32 id ) ; 
/*--hfsplus_btree_open--*/
void hfsplus_btree_close ( struct hfs_btree * tree ) ; 
/*--hfsplus_btree_close--*/
void hfsplus_btree_write ( struct hfs_btree * tree ) ; 
/*--hfsplus_btree_write--*/
struct hfs_bnode * hfsplus_bmap_alloc ( struct hfs_btree * tree ) ; 
/*--hfsplus_bmap_alloc--*/
void hfsplus_bmap_free ( struct hfs_bnode * node ) ; 
/*--hfsplus_bmap_free--*/
void hfsplus_bnode_read ( struct hfs_bnode * node , void * buf , int off , int len ) ; 
/*--hfsplus_bnode_read--*/
u16 hfsplus_bnode_read_u16 ( struct hfs_bnode * node , int off ) ; 
/*--hfsplus_bnode_read_u16--*/
u8 hfsplus_bnode_read_u8 ( struct hfs_bnode * node , int off ) ; 
/*--hfsplus_bnode_read_u8--*/
void hfsplus_bnode_read_key ( struct hfs_bnode * node , void * key , int off ) ; 
/*--hfsplus_bnode_read_key--*/
void hfsplus_bnode_write ( struct hfs_bnode * node , void * buf , int off , int len ) ; 
/*--hfsplus_bnode_write--*/
void hfsplus_bnode_write_u16 ( struct hfs_bnode * node , int off , u16 data ) ; 
/*--hfsplus_bnode_write_u16--*/
void hfsplus_bnode_clear ( struct hfs_bnode * node , int off , int len ) ; 
/*--hfsplus_bnode_clear--*/
void hfsplus_bnode_copy ( struct hfs_bnode * dst_node , int dst , struct hfs_bnode * src_node , int src , int len ) ; 
/*--hfsplus_bnode_copy--*/
void hfsplus_bnode_move ( struct hfs_bnode * node , int dst , int src , int len ) ; 
/*--hfsplus_bnode_move--*/
void hfsplus_bnode_dump ( struct hfs_bnode * node ) ; 
/*--hfsplus_bnode_dump--*/
void hfsplus_bnode_unlink ( struct hfs_bnode * node ) ; 
/*--hfsplus_bnode_unlink--*/
struct hfs_bnode * hfsplus_bnode_findhash ( struct hfs_btree * tree , u32 cnid ) ; 
/*--hfsplus_bnode_findhash--*/
void hfsplus_bnode_unhash ( struct hfs_bnode * node ) ; 
/*--hfsplus_bnode_unhash--*/
struct hfs_bnode * hfsplus_bnode_find ( struct hfs_btree * tree , u32 num ) ; 
/*--hfsplus_bnode_find--*/
void hfsplus_bnode_free ( struct hfs_bnode * node ) ; 
/*--hfsplus_bnode_free--*/
struct hfs_bnode * hfsplus_bnode_create ( struct hfs_btree * tree , u32 num ) ; 
/*--hfsplus_bnode_create--*/
void hfsplus_bnode_get ( struct hfs_bnode * node ) ; 
/*--hfsplus_bnode_get--*/
void hfsplus_bnode_put ( struct hfs_bnode * node ) ; 
/*--hfsplus_bnode_put--*/
u16 hfsplus_brec_lenoff ( struct hfs_bnode * node , u16 rec , u16 * off ) ; 
/*--hfsplus_brec_lenoff--*/
u16 hfsplus_brec_keylen ( struct hfs_bnode * node , u16 rec ) ; 
/*--hfsplus_brec_keylen--*/
int hfsplus_brec_insert ( struct hfs_find_data * fd , void * entry , int entry_len ) ; 
/*--hfsplus_brec_insert--*/
int hfsplus_brec_remove ( struct hfs_find_data * fd ) ; 
/*--hfsplus_brec_remove--*/
int hfsplus_find_init ( struct hfs_btree * tree , struct hfs_find_data * fd ) ; 
/*--hfsplus_find_init--*/
void hfsplus_find_exit ( struct hfs_find_data * fd ) ; 
/*--hfsplus_find_exit--*/
int __hplusfs_brec_find ( struct hfs_bnode * bnode , struct hfs_find_data * fd ) ; 
/*--__hplusfs_brec_find--*/
int hfsplus_brec_find ( struct hfs_find_data * fd ) ; 
/*--hfsplus_brec_find--*/
int hfsplus_brec_read ( struct hfs_find_data * fd , void * rec , int rec_len ) ; 
/*--hfsplus_brec_read--*/
int hfsplus_brec_goto ( struct hfs_find_data * fd , int cnt ) ; 
/*--hfsplus_brec_goto--*/
int hfsplus_strcasecmp ( const struct hfsplus_unistr * s1 , const struct hfsplus_unistr * s2 ) ; 
/*--hfsplus_strcasecmp--*/
int hfsplus_strcmp ( const struct hfsplus_unistr * s1 , const struct hfsplus_unistr * s2 ) ; 
/*--hfsplus_strcmp--*/
int hfsplus_uni2asc ( struct super_block * sb , const struct hfsplus_unistr * ustr , char * astr , int * len_p ) ; 
/*--hfsplus_uni2asc--*/
int hfsplus_asc2uni ( struct super_block * sb , struct hfsplus_unistr * ustr , const char * astr , int len ) ; 
/*--hfsplus_asc2uni--*/
int hfsplus_hash_dentry ( struct dentry * dentry , struct qstr * str ) ; 
/*--hfsplus_hash_dentry--*/
int hfsplus_compare_dentry ( struct dentry * dentry , struct qstr * s1 , struct qstr * s2 ) ; 
/*--hfsplus_compare_dentry--*/
int hfsplus_read_wrapper ( struct super_block * sb ) ; 
/*--hfsplus_read_wrapper--*/
int hfsplus_block_allocate ( struct super_block * sb , u32 size , u32 offset , u32 * max ) ; 
/*--hfsplus_block_allocate--*/
int hfsplus_block_free ( struct super_block * sb , u32 offset , u32 count ) ; 
/*--hfsplus_block_free--*/
int hfsplus_part_find ( struct super_block * sb , sector_t * part_start , sector_t * part_size ) ; 
/*--hfsplus_part_find--*/
int hpfs_chk_sectors ( struct super_block * s , secno start , int len , char * msg ) ; 
/*--hpfs_chk_sectors--*/
secno hpfs_alloc_sector ( struct super_block * s , secno near , unsigned n , int forward , int lock ) ; 
/*--hpfs_alloc_sector--*/
int hpfs_alloc_if_possible ( struct super_block * s , secno sec ) ; 
/*--hpfs_alloc_if_possible--*/
void hpfs_free_sectors ( struct super_block * s , secno sec , unsigned n ) ; 
/*--hpfs_free_sectors--*/
int hpfs_check_free_dnodes ( struct super_block * s , int n ) ; 
/*--hpfs_check_free_dnodes--*/
void hpfs_free_dnode ( struct super_block * s , dnode_secno dno ) ; 
/*--hpfs_free_dnode--*/
struct dnode * hpfs_alloc_dnode ( struct super_block * s , secno near , dnode_secno * dno , struct quad_buffer_head * qbh , int lock ) ; 
/*--hpfs_alloc_dnode--*/
struct fnode * hpfs_alloc_fnode ( struct super_block * s , secno near , fnode_secno * fno , struct buffer_head * * bh ) ; 
/*--hpfs_alloc_fnode--*/
struct anode * hpfs_alloc_anode ( struct super_block * s , secno near , anode_secno * ano , struct buffer_head * * bh ) ; 
/*--hpfs_alloc_anode--*/
secno hpfs_bplus_lookup ( struct super_block * s , struct inode * inode , struct bplus_header * btree , unsigned sec , struct buffer_head * bh ) ; 
/*--hpfs_bplus_lookup--*/
secno hpfs_add_sector_to_btree ( struct super_block * s , secno node , int fnod , unsigned fsecno ) ; 
/*--hpfs_add_sector_to_btree--*/
void hpfs_remove_btree ( struct super_block * s , struct bplus_header * btree ) ; 
/*--hpfs_remove_btree--*/
int hpfs_ea_read ( struct super_block * s , secno a , int ano , unsigned pos , unsigned len , char * buf ) ; 
/*--hpfs_ea_read--*/
int hpfs_ea_write ( struct super_block * s , secno a , int ano , unsigned pos , unsigned len , const char * buf ) ; 
/*--hpfs_ea_write--*/
void hpfs_ea_remove ( struct super_block * s , secno a , int ano , unsigned len ) ; 
/*--hpfs_ea_remove--*/
void hpfs_truncate_btree ( struct super_block * s , secno f , int fno , unsigned secs ) ; 
/*--hpfs_truncate_btree--*/
void hpfs_remove_fnode ( struct super_block * s , fnode_secno fno ) ; 
/*--hpfs_remove_fnode--*/
void hpfs_lock_creation ( struct super_block * s ) ; 
/*--hpfs_lock_creation--*/
void hpfs_unlock_creation ( struct super_block * s ) ; 
/*--hpfs_unlock_creation--*/
void * hpfs_map_sector ( struct super_block * s , unsigned secno , struct buffer_head * * bhp , int ahead ) ; 
/*--hpfs_map_sector--*/
void * hpfs_get_sector ( struct super_block * s , unsigned secno , struct buffer_head * * bhp ) ; 
/*--hpfs_get_sector--*/
void * hpfs_map_4sectors ( struct super_block * s , unsigned secno , struct quad_buffer_head * qbh , int ahead ) ; 
/*--hpfs_map_4sectors--*/
void * hpfs_get_4sectors ( struct super_block * s , unsigned secno , struct quad_buffer_head * qbh ) ; 
/*--hpfs_get_4sectors--*/
void hpfs_brelse4 ( struct quad_buffer_head * qbh ) ; 
/*--hpfs_brelse4--*/
void hpfs_mark_4buffers_dirty ( struct quad_buffer_head * qbh ) ; 
/*--hpfs_mark_4buffers_dirty--*/
void hpfs_set_dentry_operations ( struct dentry * dentry ) ; 
/*--hpfs_set_dentry_operations--*/
struct dentry * hpfs_lookup ( struct inode * dir , struct dentry * dentry , struct nameidata * nd ) ; 
/*--hpfs_lookup--*/
void hpfs_add_pos ( struct inode * inode , loff_t * pos ) ; 
/*--hpfs_add_pos--*/
void hpfs_del_pos ( struct inode * inode , loff_t * pos ) ; 
/*--hpfs_del_pos--*/
struct hpfs_dirent * hpfs_add_de ( struct super_block * s , struct dnode * d , const unsigned char * name , unsigned namelen , secno down_ptr ) ; 
/*--hpfs_add_de--*/
int hpfs_add_dirent ( struct inode * i , const unsigned char * name , unsigned namelen , struct hpfs_dirent * new_de , int cdepth ) ; 
/*--hpfs_add_dirent--*/
int hpfs_remove_dirent ( struct inode * i , dnode_secno dno , struct hpfs_dirent * de , struct quad_buffer_head * qbh , int depth ) ; 
/*--hpfs_remove_dirent--*/
void hpfs_count_dnodes ( struct super_block * s , dnode_secno dno , int * n_dnodes , int * n_subdirs , int * n_items ) ; 
/*--hpfs_count_dnodes--*/
dnode_secno hpfs_de_as_down_as_possible ( struct super_block * s , dnode_secno dno ) ; 
/*--hpfs_de_as_down_as_possible--*/
struct hpfs_dirent * map_pos_dirent ( struct inode * inode , loff_t * posp , struct quad_buffer_head * qbh ) ; 
/*--map_pos_dirent--*/
struct hpfs_dirent * map_dirent ( struct inode * inode , dnode_secno dno , const unsigned char * name , unsigned len , dnode_secno * dd , struct quad_buffer_head * qbh ) ; 
/*--map_dirent--*/
void hpfs_remove_dtree ( struct super_block * s , dnode_secno dno ) ; 
/*--hpfs_remove_dtree--*/
struct hpfs_dirent * map_fnode_dirent ( struct super_block * s , fnode_secno fno , struct fnode * f , struct quad_buffer_head * qbh ) ; 
/*--map_fnode_dirent--*/
void hpfs_ea_ext_remove ( struct super_block * s , secno a , int ano , unsigned len ) ; 
/*--hpfs_ea_ext_remove--*/
int hpfs_read_ea ( struct super_block * s , struct fnode * fnode , char * key , char * buf , int size ) ; 
/*--hpfs_read_ea--*/
char * hpfs_get_ea ( struct super_block * s , struct fnode * fnode , char * key , int * size ) ; 
/*--hpfs_get_ea--*/
void hpfs_set_ea ( struct inode * inode , struct fnode * fnode , const char * key , const char * data , int size ) ; 
/*--hpfs_set_ea--*/
int hpfs_file_fsync ( struct file * file , int datasync ) ; 
/*--hpfs_file_fsync--*/
void hpfs_init_inode ( struct inode * i ) ; 
/*--hpfs_init_inode--*/
void hpfs_read_inode ( struct inode * i ) ; 
/*--hpfs_read_inode--*/
void hpfs_write_inode ( struct inode * i ) ; 
/*--hpfs_write_inode--*/
void hpfs_write_inode_nolock ( struct inode * i ) ; 
/*--hpfs_write_inode_nolock--*/
int hpfs_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--hpfs_setattr--*/
void hpfs_write_if_changed ( struct inode * inode ) ; 
/*--hpfs_write_if_changed--*/
void hpfs_delete_inode ( struct inode * inode ) ; 
/*--hpfs_delete_inode--*/
unsigned * hpfs_map_dnode_bitmap ( struct super_block * s , struct quad_buffer_head * qbh ) ; 
/*--hpfs_map_dnode_bitmap--*/
unsigned int * hpfs_map_bitmap ( struct super_block * s , unsigned bmp_block , struct quad_buffer_head * qbh , char * id ) ; 
/*--hpfs_map_bitmap--*/
unsigned char * hpfs_load_code_page ( struct super_block * s , secno cps ) ; 
/*--hpfs_load_code_page--*/
secno * hpfs_load_bitmap_directory ( struct super_block * s , secno bmp ) ; 
/*--hpfs_load_bitmap_directory--*/
struct fnode * hpfs_map_fnode ( struct super_block * s , ino_t ino , struct buffer_head * * bhp ) ; 
/*--hpfs_map_fnode--*/
struct anode * hpfs_map_anode ( struct super_block * s , anode_secno ano , struct buffer_head * * bhp ) ; 
/*--hpfs_map_anode--*/
struct dnode * hpfs_map_dnode ( struct super_block * s , unsigned secno , struct quad_buffer_head * qbh ) ; 
/*--hpfs_map_dnode--*/
dnode_secno hpfs_fnode_dno ( struct super_block * s , ino_t ino ) ; 
/*--hpfs_fnode_dno--*/
void hpfs_decide_conv ( struct inode * inode , const unsigned char * name , unsigned len ) ; 
/*--hpfs_decide_conv--*/
unsigned char hpfs_upcase ( unsigned char * dir , unsigned char a ) ; 
/*--hpfs_upcase--*/
int hpfs_chk_name ( const unsigned char * name , unsigned * len ) ; 
/*--hpfs_chk_name--*/
unsigned char * hpfs_translate_name ( struct super_block * s , unsigned char * from , unsigned len , int lc , int lng ) ; 
/*--hpfs_translate_name--*/
int hpfs_compare_names ( struct super_block * s , const unsigned char * n1 , unsigned l1 , const unsigned char * n2 , unsigned l2 , int last ) ; 
/*--hpfs_compare_names--*/
int hpfs_is_name_long ( const unsigned char * name , unsigned len ) ; 
/*--hpfs_is_name_long--*/
void hpfs_adjust_length ( const unsigned char * name , unsigned * len ) ; 
/*--hpfs_adjust_length--*/
void hpfs_error ( struct super_block * s , const char * fmt , ... ) ; 
/*--hpfs_error--*/
int hpfs_stop_cycles ( struct super_block * s , int key , int * c1 , int * c2 , char * msg ) ; 
/*--hpfs_stop_cycles--*/
unsigned hpfs_count_one_bitmap ( struct super_block * s , secno secno ) ; 
/*--hpfs_count_one_bitmap--*/
struct dentry * isofs_lookup ( struct inode * dir , struct dentry * dentry , struct nameidata * nd ) ; 
/*--isofs_lookup--*/
int isofs_get_blocks ( struct inode * inode , sector_t iblock_s , struct buffer_head * * bh , unsigned long nblocks ) ; 
/*--isofs_get_blocks--*/
struct buffer_head * isofs_bread ( struct inode * inode , sector_t block ) ; 
/*--isofs_bread--*/
struct inode * isofs_iget ( struct super_block * sb , unsigned long block , unsigned long offset ) ; 
/*--isofs_iget--*/
int isofs_name_translate ( struct iso_directory_record * de , char * new , struct inode * inode ) ; 
/*--isofs_name_translate--*/
int get_acorn_filename ( struct iso_directory_record * de , char * retname , struct inode * inode ) ; 
/*--get_acorn_filename--*/
int iso_date ( char * p , int flag ) ; 
/*--iso_date--*/
int get_rock_ridge_filename ( struct iso_directory_record * de , char * retname , struct inode * inode ) ; 
/*--get_rock_ridge_filename--*/
int parse_rock_ridge_inode ( struct iso_directory_record * de , struct inode * inode ) ; 
/*--parse_rock_ridge_inode--*/
int get_joliet_filename ( struct iso_directory_record * de , unsigned char * outname , struct inode * inode ) ; 
/*--get_joliet_filename--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) zisofs_init ( void ) ; 
/*--zisofs_init--*/
void zisofs_cleanup ( void ) ; 
/*--zisofs_cleanup--*/
uint16_t jffs2_compress ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , unsigned char * data_in , unsigned char * * cpage_out , uint32_t * datalen , uint32_t * cdatalen ) ; 
/*--jffs2_compress--*/
int jffs2_decompress ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , uint16_t comprtype , unsigned char * cdata_in , unsigned char * data_out , uint32_t cdatalen , uint32_t datalen ) ; 
/*--jffs2_decompress--*/
int jffs2_register_compressor ( struct jffs2_compressor * comp ) ; 
/*--jffs2_register_compressor--*/
int jffs2_unregister_compressor ( struct jffs2_compressor * comp ) ; 
/*--jffs2_unregister_compressor--*/
void jffs2_free_comprbuf ( unsigned char * comprbuf , unsigned char * orig ) ; 
/*--jffs2_free_comprbuf--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) jffs2_compressors_init ( void ) ; 
/*--jffs2_compressors_init--*/
int jffs2_compressors_exit ( void ) ; 
/*--jffs2_compressors_exit--*/
int jffs2_fsync ( struct file * filp , int datasync ) ; 
/*--jffs2_fsync--*/
int jffs2_do_readpage_unlock ( struct inode * inode , struct page * pg ) ; 
/*--jffs2_do_readpage_unlock--*/
long jffs2_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--jffs2_ioctl--*/
void jffs2_add_fd_to_list ( struct jffs2_sb_info * c , struct jffs2_full_dirent * new , struct jffs2_full_dirent * * list ) ; 
/*--jffs2_add_fd_to_list--*/
uint32_t jffs2_truncate_fragtree ( struct jffs2_sb_info * c , struct rb_root * list , uint32_t size ) ; 
/*--jffs2_truncate_fragtree--*/
int jffs2_add_full_dnode_to_inode ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , struct jffs2_full_dnode * fn ) ; 
/*--jffs2_add_full_dnode_to_inode--*/
void jffs2_set_inocache_state ( struct jffs2_sb_info * c , struct jffs2_inode_cache * ic , int state ) ; 
/*--jffs2_set_inocache_state--*/
struct jffs2_inode_cache * jffs2_get_ino_cache ( struct jffs2_sb_info * c , uint32_t ino ) ; 
/*--jffs2_get_ino_cache--*/
void jffs2_add_ino_cache ( struct jffs2_sb_info * c , struct jffs2_inode_cache * new ) ; 
/*--jffs2_add_ino_cache--*/
void jffs2_del_ino_cache ( struct jffs2_sb_info * c , struct jffs2_inode_cache * old ) ; 
/*--jffs2_del_ino_cache--*/
void jffs2_free_ino_caches ( struct jffs2_sb_info * c ) ; 
/*--jffs2_free_ino_caches--*/
void jffs2_free_raw_node_refs ( struct jffs2_sb_info * c ) ; 
/*--jffs2_free_raw_node_refs--*/
struct jffs2_node_frag * jffs2_lookup_node_frag ( struct rb_root * fragtree , uint32_t offset ) ; 
/*--jffs2_lookup_node_frag--*/
void jffs2_kill_fragtree ( struct rb_root * root , struct jffs2_sb_info * c ) ; 
/*--jffs2_kill_fragtree--*/
struct jffs2_raw_node_ref * jffs2_link_node_ref ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb , uint32_t ofs , uint32_t len , struct jffs2_inode_cache * ic ) ; 
/*--jffs2_link_node_ref--*/
int jffs2_scan_dirty_space ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb , uint32_t size ) ; 
/*--jffs2_scan_dirty_space--*/
uint32_t __jffs2_ref_totlen ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb , struct jffs2_raw_node_ref * ref ) ; 
/*--__jffs2_ref_totlen--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) jffs2_create_slab_caches ( void ) ; 
/*--jffs2_create_slab_caches--*/
void jffs2_destroy_slab_caches ( void ) ; 
/*--jffs2_destroy_slab_caches--*/
struct jffs2_full_dirent * jffs2_alloc_full_dirent ( int namesize ) ; 
/*--jffs2_alloc_full_dirent--*/
void jffs2_free_full_dirent ( struct jffs2_full_dirent * x ) ; 
/*--jffs2_free_full_dirent--*/
struct jffs2_full_dnode * jffs2_alloc_full_dnode ( void ) ; 
/*--jffs2_alloc_full_dnode--*/
void jffs2_free_full_dnode ( struct jffs2_full_dnode * x ) ; 
/*--jffs2_free_full_dnode--*/
struct jffs2_raw_dirent * jffs2_alloc_raw_dirent ( void ) ; 
/*--jffs2_alloc_raw_dirent--*/
void jffs2_free_raw_dirent ( struct jffs2_raw_dirent * x ) ; 
/*--jffs2_free_raw_dirent--*/
struct jffs2_raw_inode * jffs2_alloc_raw_inode ( void ) ; 
/*--jffs2_alloc_raw_inode--*/
void jffs2_free_raw_inode ( struct jffs2_raw_inode * x ) ; 
/*--jffs2_free_raw_inode--*/
struct jffs2_tmp_dnode_info * jffs2_alloc_tmp_dnode_info ( void ) ; 
/*--jffs2_alloc_tmp_dnode_info--*/
void jffs2_free_tmp_dnode_info ( struct jffs2_tmp_dnode_info * x ) ; 
/*--jffs2_free_tmp_dnode_info--*/
int jffs2_prealloc_raw_node_refs ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb , int nr ) ; 
/*--jffs2_prealloc_raw_node_refs--*/
void jffs2_free_refblock ( struct jffs2_raw_node_ref * x ) ; 
/*--jffs2_free_refblock--*/
struct jffs2_node_frag * jffs2_alloc_node_frag ( void ) ; 
/*--jffs2_alloc_node_frag--*/
void jffs2_free_node_frag ( struct jffs2_node_frag * x ) ; 
/*--jffs2_free_node_frag--*/
struct jffs2_inode_cache * jffs2_alloc_inode_cache ( void ) ; 
/*--jffs2_alloc_inode_cache--*/
void jffs2_free_inode_cache ( struct jffs2_inode_cache * x ) ; 
/*--jffs2_free_inode_cache--*/
int jffs2_read_dnode ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , struct jffs2_full_dnode * fd , unsigned char * buf , int ofs , int len ) ; 
/*--jffs2_read_dnode--*/
int jffs2_read_inode_range ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , unsigned char * buf , uint32_t offset , uint32_t len ) ; 
/*--jffs2_read_inode_range--*/
int jffs2_reserve_space ( struct jffs2_sb_info * c , uint32_t minsize , uint32_t * len , int prio , uint32_t sumsize ) ; 
/*--jffs2_reserve_space--*/
int jffs2_reserve_space_gc ( struct jffs2_sb_info * c , uint32_t minsize , uint32_t * len , uint32_t sumsize ) ; 
/*--jffs2_reserve_space_gc--*/
struct jffs2_raw_node_ref * jffs2_add_physical_node_ref ( struct jffs2_sb_info * c , uint32_t ofs , uint32_t len , struct jffs2_inode_cache * ic ) ; 
/*--jffs2_add_physical_node_ref--*/
void jffs2_complete_reservation ( struct jffs2_sb_info * c ) ; 
/*--jffs2_complete_reservation--*/
void jffs2_mark_node_obsolete ( struct jffs2_sb_info * c , struct jffs2_raw_node_ref * ref ) ; 
/*--jffs2_mark_node_obsolete--*/
int jffs2_thread_should_wake ( struct jffs2_sb_info * c ) ; 
/*--jffs2_thread_should_wake--*/
int jffs2_do_read_inode ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , uint32_t ino , struct jffs2_raw_inode * latest_node ) ; 
/*--jffs2_do_read_inode--*/
int jffs2_do_crccheck_inode ( struct jffs2_sb_info * c , struct jffs2_inode_cache * ic ) ; 
/*--jffs2_do_crccheck_inode--*/
void jffs2_do_clear_inode ( struct jffs2_sb_info * c , struct jffs2_inode_info * f ) ; 
/*--jffs2_do_clear_inode--*/
int jffs2_do_new_inode ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , uint32_t mode , struct jffs2_raw_inode * ri ) ; 
/*--jffs2_do_new_inode--*/
struct jffs2_full_dnode * jffs2_write_dnode ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , struct jffs2_raw_inode * ri , const unsigned char * data , uint32_t datalen , int alloc_mode ) ; 
/*--jffs2_write_dnode--*/
struct jffs2_full_dirent * jffs2_write_dirent ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , struct jffs2_raw_dirent * rd , const unsigned char * name , uint32_t namelen , int alloc_mode ) ; 
/*--jffs2_write_dirent--*/
int jffs2_write_inode_range ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , struct jffs2_raw_inode * ri , unsigned char * buf , uint32_t offset , uint32_t writelen , uint32_t * retlen ) ; 
/*--jffs2_write_inode_range--*/
int jffs2_do_create ( struct jffs2_sb_info * c , struct jffs2_inode_info * dir_f , struct jffs2_inode_info * f , struct jffs2_raw_inode * ri , const char * name , int namelen ) ; 
/*--jffs2_do_create--*/
int jffs2_do_unlink ( struct jffs2_sb_info * c , struct jffs2_inode_info * dir_f , const char * name , int namelen , struct jffs2_inode_info * dead_f , uint32_t time ) ; 
/*--jffs2_do_unlink--*/
int jffs2_do_link ( struct jffs2_sb_info * c , struct jffs2_inode_info * dir_f , uint32_t ino , uint8_t type , const char * name , int namelen , uint32_t time ) ; 
/*--jffs2_do_link--*/
int jffs2_scan_medium ( struct jffs2_sb_info * c ) ; 
/*--jffs2_scan_medium--*/
int jffs2_scan_classify_jeb ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb ) ; 
/*--jffs2_scan_classify_jeb--*/
struct jffs2_inode_cache * jffs2_scan_make_ino_cache ( struct jffs2_sb_info * c , uint32_t ino ) ; 
/*--jffs2_scan_make_ino_cache--*/
void jffs2_rotate_lists ( struct jffs2_sb_info * c ) ; 
/*--jffs2_rotate_lists--*/
int jffs2_garbage_collect_pass ( struct jffs2_sb_info * c ) ; 
/*--jffs2_garbage_collect_pass--*/
int jffs2_do_mount_fs ( struct jffs2_sb_info * c ) ; 
/*--jffs2_do_mount_fs--*/
int jffs2_erase_pending_blocks ( struct jffs2_sb_info * c , int count ) ; 
/*--jffs2_erase_pending_blocks--*/
void jffs2_free_jeb_node_refs ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb ) ; 
/*--jffs2_free_jeb_node_refs--*/
void jffs2_garbage_collect_trigger ( struct jffs2_sb_info * c ) ; 
/*--jffs2_garbage_collect_trigger--*/
int jffs2_start_garbage_collect_thread ( struct jffs2_sb_info * c ) ; 
/*--jffs2_start_garbage_collect_thread--*/
void jffs2_stop_garbage_collect_thread ( struct jffs2_sb_info * c ) ; 
/*--jffs2_stop_garbage_collect_thread--*/
int jffs2_do_setattr ( struct inode * inode , struct iattr * iattr ) ; 
/*--jffs2_do_setattr--*/
int jffs2_setattr ( struct dentry * dentry , struct iattr * iattr ) ; 
/*--jffs2_setattr--*/
int jffs2_statfs ( struct dentry * dentry , struct kstatfs * buf ) ; 
/*--jffs2_statfs--*/
void jffs2_clear_inode ( struct inode * inode ) ; 
/*--jffs2_clear_inode--*/
struct inode * jffs2_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--jffs2_iget--*/
void jffs2_dirty_inode ( struct inode * inode ) ; 
/*--jffs2_dirty_inode--*/
int jffs2_remount_fs ( struct super_block * sb , int * flags , char * data ) ; 
/*--jffs2_remount_fs--*/
struct inode * jffs2_new_inode ( struct inode * dir_i , int mode , struct jffs2_raw_inode * ri ) ; 
/*--jffs2_new_inode--*/
int jffs2_do_fill_super ( struct super_block * sb , void * data , int silent ) ; 
/*--jffs2_do_fill_super--*/
void jffs2_gc_release_inode ( struct jffs2_sb_info * c , struct jffs2_inode_info * f ) ; 
/*--jffs2_gc_release_inode--*/
struct jffs2_inode_info * jffs2_gc_fetch_inode ( struct jffs2_sb_info * c , int inum , int unlinked ) ; 
/*--jffs2_gc_fetch_inode--*/
unsigned char * jffs2_gc_fetch_page ( struct jffs2_sb_info * c , struct jffs2_inode_info * f , unsigned long offset , unsigned long * priv ) ; 
/*--jffs2_gc_fetch_page--*/
void jffs2_gc_release_page ( struct jffs2_sb_info * c , unsigned char * ptr , unsigned long * priv ) ; 
/*--jffs2_gc_release_page--*/
void jffs2_flash_cleanup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_flash_cleanup--*/
int jffs2_flash_direct_writev ( struct jffs2_sb_info * c , const struct kvec * vecs , unsigned long count , loff_t to , size_t * retlen ) ; 
/*--jffs2_flash_direct_writev--*/
int jffs2_flash_direct_write ( struct jffs2_sb_info * c , loff_t ofs , size_t len , size_t * retlen , const u_char * buf ) ; 
/*--jffs2_flash_direct_write--*/
void __jffs2_dbg_acct_sanity_check_nolock ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb ) ; 
/*--__jffs2_dbg_acct_sanity_check_nolock--*/
void __jffs2_dbg_acct_sanity_check ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb ) ; 
/*--__jffs2_dbg_acct_sanity_check--*/
int jffs2_flush_wbuf_gc ( struct jffs2_sb_info * c , uint32_t ino ) ; 
/*--jffs2_flush_wbuf_gc--*/
int jffs2_flush_wbuf_pad ( struct jffs2_sb_info * c ) ; 
/*--jffs2_flush_wbuf_pad--*/
int jffs2_flash_writev ( struct jffs2_sb_info * c , const struct kvec * invecs , unsigned long count , loff_t to , size_t * retlen , uint32_t ino ) ; 
/*--jffs2_flash_writev--*/
int jffs2_flash_write ( struct jffs2_sb_info * c , loff_t ofs , size_t len , size_t * retlen , const u_char * buf ) ; 
/*--jffs2_flash_write--*/
int jffs2_flash_read ( struct jffs2_sb_info * c , loff_t ofs , size_t len , size_t * retlen , u_char * buf ) ; 
/*--jffs2_flash_read--*/
int jffs2_check_oob_empty ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb , int mode ) ; 
/*--jffs2_check_oob_empty--*/
int jffs2_check_nand_cleanmarker ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb ) ; 
/*--jffs2_check_nand_cleanmarker--*/
int jffs2_write_nand_cleanmarker ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb ) ; 
/*--jffs2_write_nand_cleanmarker--*/
int jffs2_write_nand_badblock ( struct jffs2_sb_info * c , struct jffs2_eraseblock * jeb , uint32_t bad_offset ) ; 
/*--jffs2_write_nand_badblock--*/
int jffs2_nand_flash_setup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_nand_flash_setup--*/
void jffs2_nand_flash_cleanup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_nand_flash_cleanup--*/
int jffs2_dataflash_setup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_dataflash_setup--*/
void jffs2_dataflash_cleanup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_dataflash_cleanup--*/
int jffs2_nor_wbuf_flash_setup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_nor_wbuf_flash_setup--*/
void jffs2_nor_wbuf_flash_cleanup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_nor_wbuf_flash_cleanup--*/
int jffs2_ubivol_setup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_ubivol_setup--*/
void jffs2_ubivol_cleanup ( struct jffs2_sb_info * c ) ; 
/*--jffs2_ubivol_cleanup--*/
int jffs2_rtime_init ( void ) ; 
/*--jffs2_rtime_init--*/
void jffs2_rtime_exit ( void ) ; 
/*--jffs2_rtime_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) jffs2_zlib_init ( void ) ; 
/*--jffs2_zlib_init--*/
void jffs2_zlib_exit ( void ) ; 
/*--jffs2_zlib_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) jffs2_lzo_init ( void ) ; 
/*--jffs2_lzo_init--*/
void jffs2_lzo_exit ( void ) ; 
/*--jffs2_lzo_exit--*/
void jfs_error ( struct super_block * sb , const char * function , ... ) ; 
/*--jfs_error--*/
int jfs_fsync ( struct file * file , int datasync ) ; 
/*--jfs_fsync--*/
int jfs_setattr ( struct dentry * dentry , struct iattr * iattr ) ; 
/*--jfs_setattr--*/
struct inode * jfs_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--jfs_iget--*/
int jfs_commit_inode ( struct inode * inode , int wait ) ; 
/*--jfs_commit_inode--*/
int jfs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--jfs_write_inode--*/
void jfs_delete_inode ( struct inode * inode ) ; 
/*--jfs_delete_inode--*/
void jfs_dirty_inode ( struct inode * inode ) ; 
/*--jfs_dirty_inode--*/
int jfs_get_block ( struct inode * ip , sector_t lblock , struct buffer_head * bh_result , int create ) ; 
/*--jfs_get_block--*/
void jfs_truncate_nolock ( struct inode * ip , loff_t length ) ; 
/*--jfs_truncate_nolock--*/
void jfs_truncate ( struct inode * ip ) ; 
/*--jfs_truncate--*/
void jfs_free_zero_link ( struct inode * ip ) ; 
/*--jfs_free_zero_link--*/
struct dentry * jfs_fh_to_dentry ( struct super_block * sb , struct fid * fid , int fh_len , int fh_type ) ; 
/*--jfs_fh_to_dentry--*/
struct dentry * jfs_fh_to_parent ( struct super_block * sb , struct fid * fid , int fh_len , int fh_type ) ; 
/*--jfs_fh_to_parent--*/
struct dentry * jfs_get_parent ( struct dentry * dentry ) ; 
/*--jfs_get_parent--*/
int jfs_mount ( struct super_block * sb ) ; 
/*--jfs_mount--*/
int jfs_mount_rw ( struct super_block * sb , int remount ) ; 
/*--jfs_mount_rw--*/
int updateSuper ( struct super_block * sb , uint state ) ; 
/*--updateSuper--*/
int readSuper ( struct super_block * sb , struct buffer_head * * bpp ) ; 
/*--readSuper--*/
int jfs_umount ( struct super_block * sb ) ; 
/*--jfs_umount--*/
int jfs_umount_rw ( struct super_block * sb ) ; 
/*--jfs_umount_rw--*/
int xtLookup ( struct inode * ip , s64 lstart , s64 llen , int * pflag , s64 * paddr , s32 * plen , int no_check ) ; 
/*--xtLookup--*/
int xtInsert ( tid_t tid , struct inode * ip , int xflag , s64 xoff , s32 xlen , s64 * xaddrp , int flag ) ; 
/*--xtInsert--*/
int xtExtend ( tid_t tid , struct inode * ip , s64 xoff , s32 xlen , int flag ) ; 
/*--xtExtend--*/
int xtUpdate ( tid_t tid , struct inode * ip , xad_t * nxad ) ; 
/*--xtUpdate--*/
int xtAppend ( tid_t tid , struct inode * ip , int xflag , s64 xoff , s32 maxblocks , s32 * xlenp , s64 * xaddrp , int flag ) ; 
/*--xtAppend--*/
void xtInitRoot ( tid_t tid , struct inode * ip ) ; 
/*--xtInitRoot--*/
s64 xtTruncate ( tid_t tid , struct inode * ip , s64 newsize , int flag ) ; 
/*--xtTruncate--*/
s64 xtTruncate_pmap ( tid_t tid , struct inode * ip , s64 committed_size ) ; 
/*--xtTruncate_pmap--*/
int diMount ( struct inode * ipimap ) ; 
/*--diMount--*/
int diUnmount ( struct inode * ipimap , int mounterror ) ; 
/*--diUnmount--*/
int diSync ( struct inode * ipimap ) ; 
/*--diSync--*/
int diRead ( struct inode * ip ) ; 
/*--diRead--*/
struct inode * diReadSpecial ( struct super_block * sb , ino_t inum , int secondary ) ; 
/*--diReadSpecial--*/
void diWriteSpecial ( struct inode * ip , int secondary ) ; 
/*--diWriteSpecial--*/
void diFreeSpecial ( struct inode * ip ) ; 
/*--diFreeSpecial--*/
int diWrite ( tid_t tid , struct inode * ip ) ; 
/*--diWrite--*/
int diFree ( struct inode * ip ) ; 
/*--diFree--*/
int diAlloc ( struct inode * pip , bool dir , struct inode * ip ) ; 
/*--diAlloc--*/
int diUpdatePMap ( struct inode * ipimap , unsigned long inum , bool is_free , struct tblock * tblk ) ; 
/*--diUpdatePMap--*/
int diExtendFS ( struct inode * ipimap , struct inode * ipbmap ) ; 
/*--diExtendFS--*/
void jfs_proc_init ( void ) ; 
/*--jfs_proc_init--*/
void jfs_proc_clean ( void ) ; 
/*--jfs_proc_clean--*/
int dbMount ( struct inode * ipbmap ) ; 
/*--dbMount--*/
int dbUnmount ( struct inode * ipbmap , int mounterror ) ; 
/*--dbUnmount--*/
int dbSync ( struct inode * ipbmap ) ; 
/*--dbSync--*/
int dbFree ( struct inode * ip , s64 blkno , s64 nblocks ) ; 
/*--dbFree--*/
int dbUpdatePMap ( struct inode * ipbmap , int free , s64 blkno , s64 nblocks , struct tblock * tblk ) ; 
/*--dbUpdatePMap--*/
int dbNextAG ( struct inode * ipbmap ) ; 
/*--dbNextAG--*/
int dbAlloc ( struct inode * ip , s64 hint , s64 nblocks , s64 * results ) ; 
/*--dbAlloc--*/
int dbReAlloc ( struct inode * ip , s64 blkno , s64 nblocks , s64 addnblocks , s64 * results ) ; 
/*--dbReAlloc--*/
int dbAllocBottomUp ( struct inode * ip , s64 blkno , s64 nblocks ) ; 
/*--dbAllocBottomUp--*/
int dbExtendFS ( struct inode * ipbmap , s64 blkno , s64 nblocks ) ; 
/*--dbExtendFS--*/
void dbFinalizeBmap ( struct inode * ipbmap ) ; 
/*--dbFinalizeBmap--*/
s64 dbMapFileSizeToMapSize ( struct inode * ipbmap ) ; 
/*--dbMapFileSizeToMapSize--*/
int jfs_strfromUCS_le ( char * to , const __le16 * from , int len , struct nls_table * codepage ) ; 
/*--jfs_strfromUCS_le--*/
int get_UCSname ( struct component_name * uniName , struct dentry * dentry ) ; 
/*--get_UCSname--*/
int dtSearch ( struct inode * ip , struct component_name * key , ino_t * data , struct btstack * btstack , int flag ) ; 
/*--dtSearch--*/
int dtInsert ( tid_t tid , struct inode * ip , struct component_name * name , ino_t * fsn , struct btstack * btstack ) ; 
/*--dtInsert--*/
int dtDelete ( tid_t tid , struct inode * ip , struct component_name * key , ino_t * ino , int flag ) ; 
/*--dtDelete--*/
void dtInitRoot ( tid_t tid , struct inode * ip , u32 idotdot ) ; 
/*--dtInitRoot--*/
int jfs_readdir ( struct file * filp , void * dirent , filldir_t filldir ) ; 
/*--jfs_readdir--*/
int dtModify ( tid_t tid , struct inode * ip , struct component_name * key , ino_t * orig_ino , ino_t new_ino , int flag ) ; 
/*--dtModify--*/
void jfs_set_inode_flags ( struct inode * inode ) ; 
/*--jfs_set_inode_flags--*/
void jfs_get_inode_flags ( struct jfs_inode_info * jfs_ip ) ; 
/*--jfs_get_inode_flags--*/
struct inode * ialloc ( struct inode * parent , umode_t mode ) ; 
/*--ialloc--*/
int extAlloc ( struct inode * ip , s64 xlen , s64 pno , xad_t * xp , bool abnr ) ; 
/*--extAlloc--*/
int extHint ( struct inode * ip , s64 offset , xad_t * xp ) ; 
/*--extHint--*/
int extRecord ( struct inode * ip , xad_t * xp ) ; 
/*--extRecord--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) metapage_init ( void ) ; 
/*--metapage_init--*/
void metapage_exit ( void ) ; 
/*--metapage_exit--*/
struct metapage * __get_metapage ( struct inode * inode , unsigned long lblock , unsigned int size , int absolute , unsigned long new ) ; 
/*--__get_metapage--*/
void grab_metapage ( struct metapage * mp ) ; 
/*--grab_metapage--*/
void force_metapage ( struct metapage * mp ) ; 
/*--force_metapage--*/
void hold_metapage ( struct metapage * mp ) ; 
/*--hold_metapage--*/
void put_metapage ( struct metapage * mp ) ; 
/*--put_metapage--*/
void release_metapage ( struct metapage * mp ) ; 
/*--release_metapage--*/
void __invalidate_metapages ( struct inode * ip , s64 addr , int len ) ; 
/*--__invalidate_metapages--*/
int lmLog ( struct jfs_log * log , struct tblock * tblk , struct lrd * lrd , struct tlock * tlck ) ; 
/*--lmLog--*/
int lmGroupCommit ( struct jfs_log * log , struct tblock * tblk ) ; 
/*--lmGroupCommit--*/
void jfs_syncpt ( struct jfs_log * log , int hard_sync ) ; 
/*--jfs_syncpt--*/
int lmLogOpen ( struct super_block * sb ) ; 
/*--lmLogOpen--*/
int lmLogInit ( struct jfs_log * log ) ; 
/*--lmLogInit--*/
int lmLogClose ( struct super_block * sb ) ; 
/*--lmLogClose--*/
void jfs_flush_journal ( struct jfs_log * log , int wait ) ; 
/*--jfs_flush_journal--*/
int lmLogShutdown ( struct jfs_log * log ) ; 
/*--lmLogShutdown--*/
int jfsIOWait ( void * arg ) ; 
/*--jfsIOWait--*/
int lmLogFormat ( struct jfs_log * log , s64 logAddress , int logSize ) ; 
/*--lmLogFormat--*/
int txInit ( void ) ; 
/*--txInit--*/
void txExit ( void ) ; 
/*--txExit--*/
tid_t txBegin ( struct super_block * sb , int flag ) ; 
/*--txBegin--*/
void txBeginAnon ( struct super_block * sb ) ; 
/*--txBeginAnon--*/
void txEnd ( tid_t tid ) ; 
/*--txEnd--*/
struct tlock * txLock ( tid_t tid , struct inode * ip , struct metapage * mp , int type ) ; 
/*--txLock--*/
struct tlock * txMaplock ( tid_t tid , struct inode * ip , int type ) ; 
/*--txMaplock--*/
struct linelock * txLinelock ( struct linelock * tlock ) ; 
/*--txLinelock--*/
int txCommit ( tid_t tid , int nip , struct inode * * iplist , int flag ) ; 
/*--txCommit--*/
void txEA ( tid_t tid , struct inode * ip , dxd_t * oldea , dxd_t * newea ) ; 
/*--txEA--*/
void txFreeMap ( struct inode * ip , struct maplock * maplock , struct tblock * tblk , int maptype ) ; 
/*--txFreeMap--*/
void txFreelock ( struct inode * ip ) ; 
/*--txFreelock--*/
void txAbort ( tid_t tid , int dirty ) ; 
/*--txAbort--*/
int jfs_lazycommit ( void * arg ) ; 
/*--jfs_lazycommit--*/
void txLazyUnlock ( struct tblock * tblk ) ; 
/*--txLazyUnlock--*/
void txQuiesce ( struct super_block * sb ) ; 
/*--txQuiesce--*/
void txResume ( struct super_block * sb ) ; 
/*--txResume--*/
int jfs_sync ( void * arg ) ; 
/*--jfs_sync--*/
int jfs_extendfs ( struct super_block * sb , s64 newLVSize , int newLogSize ) ; 
/*--jfs_extendfs--*/
int __jfs_setxattr ( tid_t tid , struct inode * inode , const char * name , const void * value , size_t value_len , int flags ) ; 
/*--__jfs_setxattr--*/
int jfs_setxattr ( struct dentry * dentry , const char * name , const void * value , size_t value_len , int flags ) ; 
/*--jfs_setxattr--*/
ssize_t __jfs_getxattr ( struct inode * inode , const char * name , void * data , size_t buf_size ) ; 
/*--__jfs_getxattr--*/
ssize_t jfs_getxattr ( struct dentry * dentry , const char * name , void * data , size_t buf_size ) ; 
/*--jfs_getxattr--*/
ssize_t jfs_listxattr ( struct dentry * dentry , char * data , size_t buf_size ) ; 
/*--jfs_listxattr--*/
int jfs_removexattr ( struct dentry * dentry , const char * name ) ; 
/*--jfs_removexattr--*/
int jfs_init_security ( tid_t tid , struct inode * inode , struct inode * dir ) ; 
/*--jfs_init_security--*/
long jfs_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--jfs_ioctl--*/
long jfs_compat_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--jfs_compat_ioctl--*/
int jfs_check_acl ( struct inode * inode , int mask ) ; 
/*--jfs_check_acl--*/
int jfs_init_acl ( tid_t tid , struct inode * inode , struct inode * dir ) ; 
/*--jfs_init_acl--*/
int jfs_acl_chmod ( struct inode * inode ) ; 
/*--jfs_acl_chmod--*/
struct nlm_host * nlmclnt_init ( const struct nlmclnt_initdata * nlm_init ) ; 
/*--nlmclnt_init--*/
void nlmclnt_done ( struct nlm_host * host ) ; 
/*--nlmclnt_done--*/
struct nlm_wait * nlmclnt_prepare_block ( struct nlm_host * host , struct file_lock * fl ) ; 
/*--nlmclnt_prepare_block--*/
void nlmclnt_finish_block ( struct nlm_wait * block ) ; 
/*--nlmclnt_finish_block--*/
int nlmclnt_block ( struct nlm_wait * block , struct nlm_rqst * req , long timeout ) ; 
/*--nlmclnt_block--*/
__be32 nlmclnt_grant ( const struct sockaddr * addr , const struct nlm_lock * lock ) ; 
/*--nlmclnt_grant--*/
void nlmclnt_recovery ( struct nlm_host * host ) ; 
/*--nlmclnt_recovery--*/
void nlmclnt_next_cookie ( struct nlm_cookie * c ) ; 
/*--nlmclnt_next_cookie--*/
int nlmclnt_proc ( struct nlm_host * host , int cmd , struct file_lock * fl ) ; 
/*--nlmclnt_proc--*/
struct nlm_rqst * nlm_alloc_call ( struct nlm_host * host ) ; 
/*--nlm_alloc_call--*/
void nlm_release_call ( struct nlm_rqst * call ) ; 
/*--nlm_release_call--*/
int nlm_async_call ( struct nlm_rqst * req , u32 proc , const struct rpc_call_ops * tk_ops ) ; 
/*--nlm_async_call--*/
int nlm_async_reply ( struct nlm_rqst * req , u32 proc , const struct rpc_call_ops * tk_ops ) ; 
/*--nlm_async_reply--*/
int nlmclnt_reclaim ( struct nlm_host * host , struct file_lock * fl ) ; 
/*--nlmclnt_reclaim--*/
struct nlm_host * nlmclnt_lookup_host ( const struct sockaddr * sap , const size_t salen , const unsigned short protocol , const u32 version , const char * hostname , int noresvport ) ; 
/*--nlmclnt_lookup_host--*/
struct nlm_host * nlmsvc_lookup_host ( const struct svc_rqst * rqstp , const char * hostname , const size_t hostname_len ) ; 
/*--nlmsvc_lookup_host--*/
struct rpc_clnt * nlm_bind_host ( struct nlm_host * host ) ; 
/*--nlm_bind_host--*/
void nlm_rebind_host ( struct nlm_host * host ) ; 
/*--nlm_rebind_host--*/
struct nlm_host * nlm_get_host ( struct nlm_host * host ) ; 
/*--nlm_get_host--*/
void nlm_release_host ( struct nlm_host * host ) ; 
/*--nlm_release_host--*/
void nlm_host_rebooted ( const struct nlm_reboot * info ) ; 
/*--nlm_host_rebooted--*/
void nlm_shutdown_hosts ( void ) ; 
/*--nlm_shutdown_hosts--*/
int lockd_up ( void ) ; 
/*--lockd_up--*/
void lockd_down ( void ) ; 
/*--lockd_down--*/
void nlmsvc_traverse_blocks ( struct nlm_host * host , struct nlm_file * file , nlm_host_match_fn_t match ) ; 
/*--nlmsvc_traverse_blocks--*/
__be32 nlmsvc_lock ( struct svc_rqst * rqstp , struct nlm_file * file , struct nlm_host * host , struct nlm_lock * lock , int wait , struct nlm_cookie * cookie , int reclaim ) ; 
/*--nlmsvc_lock--*/
__be32 nlmsvc_testlock ( struct svc_rqst * rqstp , struct nlm_file * file , struct nlm_host * host , struct nlm_lock * lock , struct nlm_lock * conflock , struct nlm_cookie * cookie ) ; 
/*--nlmsvc_testlock--*/
__be32 nlmsvc_unlock ( struct nlm_file * file , struct nlm_lock * lock ) ; 
/*--nlmsvc_unlock--*/
__be32 nlmsvc_cancel_blocked ( struct nlm_file * file , struct nlm_lock * lock ) ; 
/*--nlmsvc_cancel_blocked--*/
void nlmsvc_grant_reply ( struct nlm_cookie * cookie , __be32 status ) ; 
/*--nlmsvc_grant_reply--*/
unsigned long nlmsvc_retry_blocked ( void ) ; 
/*--nlmsvc_retry_blocked--*/
__be32 nlmsvc_share_file ( struct nlm_host * host , struct nlm_file * file , struct nlm_args * argp ) ; 
/*--nlmsvc_share_file--*/
__be32 nlmsvc_unshare_file ( struct nlm_host * host , struct nlm_file * file , struct nlm_args * argp ) ; 
/*--nlmsvc_unshare_file--*/
void nlmsvc_traverse_shares ( struct nlm_host * host , struct nlm_file * file , nlm_host_match_fn_t match ) ; 
/*--nlmsvc_traverse_shares--*/
__be32 nlm_lookup_file ( struct svc_rqst * rqstp , struct nlm_file * * result , struct nfs_fh * f ) ; 
/*--nlm_lookup_file--*/
void nlm_release_file ( struct nlm_file * file ) ; 
/*--nlm_release_file--*/
void nlmsvc_mark_resources ( void ) ; 
/*--nlmsvc_mark_resources--*/
void nlmsvc_free_host_resources ( struct nlm_host * host ) ; 
/*--nlmsvc_free_host_resources--*/
void nlmsvc_invalidate_all ( void ) ; 
/*--nlmsvc_invalidate_all--*/
int nlmsvc_unlock_all_by_sb ( struct super_block * sb ) ; 
/*--nlmsvc_unlock_all_by_sb--*/
int nlmsvc_unlock_all_by_ip ( struct sockaddr * server_addr ) ; 
/*--nlmsvc_unlock_all_by_ip--*/
int nsm_monitor ( const struct nlm_host * host ) ; 
/*--nsm_monitor--*/
void nsm_unmonitor ( const struct nlm_host * host ) ; 
/*--nsm_unmonitor--*/
struct nsm_handle * nsm_get_handle ( const struct sockaddr * sap , const size_t salen , const char * hostname , const size_t hostname_len ) ; 
/*--nsm_get_handle--*/
struct nsm_handle * nsm_reboot_lookup ( const struct nlm_reboot * info ) ; 
/*--nsm_reboot_lookup--*/
void nsm_release ( struct nsm_handle * nsm ) ; 
/*--nsm_release--*/
int nlmsvc_decode_testargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlmsvc_decode_testargs--*/
int nlmsvc_encode_testres ( struct svc_rqst * rqstp , __be32 * p , struct nlm_res * resp ) ; 
/*--nlmsvc_encode_testres--*/
int nlmsvc_decode_lockargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlmsvc_decode_lockargs--*/
int nlmsvc_decode_cancargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlmsvc_decode_cancargs--*/
int nlmsvc_decode_unlockargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlmsvc_decode_unlockargs--*/
int nlmsvc_decode_shareargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlmsvc_decode_shareargs--*/
int nlmsvc_encode_shareres ( struct svc_rqst * rqstp , __be32 * p , struct nlm_res * resp ) ; 
/*--nlmsvc_encode_shareres--*/
int nlmsvc_encode_res ( struct svc_rqst * rqstp , __be32 * p , struct nlm_res * resp ) ; 
/*--nlmsvc_encode_res--*/
int nlmsvc_decode_notify ( struct svc_rqst * rqstp , __be32 * p , struct nlm_args * argp ) ; 
/*--nlmsvc_decode_notify--*/
int nlmsvc_decode_reboot ( struct svc_rqst * rqstp , __be32 * p , struct nlm_reboot * argp ) ; 
/*--nlmsvc_decode_reboot--*/
int nlmsvc_decode_res ( struct svc_rqst * rqstp , __be32 * p , struct nlm_res * resp ) ; 
/*--nlmsvc_decode_res--*/
int nlmsvc_decode_void ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nlmsvc_decode_void--*/
int nlmsvc_encode_void ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nlmsvc_encode_void--*/
const char * nlmdbg_cookie2a ( const struct nlm_cookie * cookie ) ; 
/*--nlmdbg_cookie2a--*/
void locks_start_grace ( struct lock_manager * lm ) ; 
/*--locks_start_grace--*/
void locks_end_grace ( struct lock_manager * lm ) ; 
/*--locks_end_grace--*/
int locks_in_grace ( void ) ; 
/*--locks_in_grace--*/
int nlm4svc_decode_testargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlm4svc_decode_testargs--*/
int nlm4svc_encode_testres ( struct svc_rqst * rqstp , __be32 * p , struct nlm_res * resp ) ; 
/*--nlm4svc_encode_testres--*/
int nlm4svc_decode_lockargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlm4svc_decode_lockargs--*/
int nlm4svc_decode_cancargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlm4svc_decode_cancargs--*/
int nlm4svc_decode_unlockargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlm4svc_decode_unlockargs--*/
int nlm4svc_decode_shareargs ( struct svc_rqst * rqstp , __be32 * p , nlm_args * argp ) ; 
/*--nlm4svc_decode_shareargs--*/
int nlm4svc_encode_shareres ( struct svc_rqst * rqstp , __be32 * p , struct nlm_res * resp ) ; 
/*--nlm4svc_encode_shareres--*/
int nlm4svc_encode_res ( struct svc_rqst * rqstp , __be32 * p , struct nlm_res * resp ) ; 
/*--nlm4svc_encode_res--*/
int nlm4svc_decode_notify ( struct svc_rqst * rqstp , __be32 * p , struct nlm_args * argp ) ; 
/*--nlm4svc_decode_notify--*/
int nlm4svc_decode_reboot ( struct svc_rqst * rqstp , __be32 * p , struct nlm_reboot * argp ) ; 
/*--nlm4svc_decode_reboot--*/
int nlm4svc_decode_res ( struct svc_rqst * rqstp , __be32 * p , struct nlm_res * resp ) ; 
/*--nlm4svc_decode_res--*/
int nlm4svc_decode_void ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nlm4svc_decode_void--*/
int nlm4svc_encode_void ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nlm4svc_encode_void--*/
void minix_free_block ( struct inode * inode , unsigned long block ) ; 
/*--minix_free_block--*/
int minix_new_block ( struct inode * inode ) ; 
/*--minix_new_block--*/
unsigned long minix_count_free_blocks ( struct minix_sb_info * sbi ) ; 
/*--minix_count_free_blocks--*/
struct minix_inode * minix_V1_raw_inode ( struct super_block * sb , ino_t ino , struct buffer_head * * bh ) ; 
/*--minix_V1_raw_inode--*/
struct minix2_inode * minix_V2_raw_inode ( struct super_block * sb , ino_t ino , struct buffer_head * * bh ) ; 
/*--minix_V2_raw_inode--*/
void minix_free_inode ( struct inode * inode ) ; 
/*--minix_free_inode--*/
struct inode * minix_new_inode ( const struct inode * dir , int mode , int * error ) ; 
/*--minix_new_inode--*/
unsigned long minix_count_free_inodes ( struct minix_sb_info * sbi ) ; 
/*--minix_count_free_inodes--*/
int V1_minix_get_block ( struct inode * inode , long block , struct buffer_head * bh_result , int create ) ; 
/*--V1_minix_get_block--*/
void V1_minix_truncate ( struct inode * inode ) ; 
/*--V1_minix_truncate--*/
unsigned V1_minix_blocks ( loff_t size , struct super_block * sb ) ; 
/*--V1_minix_blocks--*/
int V2_minix_get_block ( struct inode * inode , long block , struct buffer_head * bh_result , int create ) ; 
/*--V2_minix_get_block--*/
void V2_minix_truncate ( struct inode * inode ) ; 
/*--V2_minix_truncate--*/
unsigned V2_minix_blocks ( loff_t size , struct super_block * sb ) ; 
/*--V2_minix_blocks--*/
int __minix_write_begin ( struct file * file , struct address_space * mapping , loff_t pos , unsigned len , unsigned flags , struct page * * pagep , void * * fsdata ) ; 
/*--__minix_write_begin--*/
void minix_set_inode ( struct inode * inode , dev_t rdev ) ; 
/*--minix_set_inode--*/
struct inode * minix_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--minix_iget--*/
int minix_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--minix_getattr--*/
void minix_truncate ( struct inode * inode ) ; 
/*--minix_truncate--*/
minix_dirent * minix_find_entry ( struct dentry * dentry , struct page * * res_page ) ; 
/*--minix_find_entry--*/
int minix_add_link ( struct dentry * dentry , struct inode * inode ) ; 
/*--minix_add_link--*/
int minix_delete_entry ( struct minix_dir_entry * de , struct page * page ) ; 
/*--minix_delete_entry--*/
int minix_make_empty ( struct inode * inode , struct inode * dir ) ; 
/*--minix_make_empty--*/
int minix_empty_dir ( struct inode * inode ) ; 
/*--minix_empty_dir--*/
void minix_set_link ( struct minix_dir_entry * de , struct page * page , struct inode * inode ) ; 
/*--minix_set_link--*/
struct minix_dir_entry * minix_dotdot ( struct inode * dir , struct page * * p ) ; 
/*--minix_dotdot--*/
ino_t minix_inode_by_name ( struct dentry * dentry ) ; 
/*--minix_inode_by_name--*/
int ncp_conn_logged_in ( struct super_block * sb ) ; 
/*--ncp_conn_logged_in--*/
int ncp_create_new ( struct inode * dir , struct dentry * dentry , int mode , dev_t rdev , __le32 attributes ) ; 
/*--ncp_create_new--*/
int ncp_date_dos2unix ( __le16 t , __le16 d ) ; 
/*--ncp_date_dos2unix--*/
void ncp_date_unix2dos ( int unix_date , __le16 * time , __le16 * date ) ; 
/*--ncp_date_unix2dos--*/
int ncp_make_open ( struct inode * inode , int right ) ; 
/*--ncp_make_open--*/
void ncp_update_inode ( struct inode * inode , struct ncp_entry_info * nwinfo ) ; 
/*--ncp_update_inode--*/
void ncp_update_inode2 ( struct inode * inode , struct ncp_entry_info * nwinfo ) ; 
/*--ncp_update_inode2--*/
struct inode * ncp_iget ( struct super_block * sb , struct ncp_entry_info * info ) ; 
/*--ncp_iget--*/
int ncp_notify_change ( struct dentry * dentry , struct iattr * attr ) ; 
/*--ncp_notify_change--*/
long ncp_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--ncp_ioctl--*/
long ncp_compat_ioctl ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--ncp_compat_ioctl--*/
int ncp_mmap ( struct file * file , struct vm_area_struct * vma ) ; 
/*--ncp_mmap--*/
int ncp_negotiate_buffersize ( struct ncp_server * server , int size , int * target ) ; 
/*--ncp_negotiate_buffersize--*/
int ncp_negotiate_size_and_options ( struct ncp_server * server , int size , int options , int * ret_size , int * ret_options ) ; 
/*--ncp_negotiate_size_and_options--*/
int ncp_get_volume_info_with_number ( struct ncp_server * server , int n , struct ncp_volume_info * target ) ; 
/*--ncp_get_volume_info_with_number--*/
int ncp_get_directory_info ( struct ncp_server * server , __u8 n , struct ncp_volume_info * target ) ; 
/*--ncp_get_directory_info--*/
int ncp_close_file ( struct ncp_server * server , const char * file_id ) ; 
/*--ncp_close_file--*/
int ncp_make_closed ( struct inode * inode ) ; 
/*--ncp_make_closed--*/
int ncp_dirhandle_alloc ( struct ncp_server * server , __u8 volnum , __le32 dirent , __u8 * dirhandle ) ; 
/*--ncp_dirhandle_alloc--*/
int ncp_dirhandle_free ( struct ncp_server * server , __u8 dirhandle ) ; 
/*--ncp_dirhandle_free--*/
void ncp_extract_file_info ( void * structure , struct nw_info_struct * target ) ; 
/*--ncp_extract_file_info--*/
int ncp_obtain_nfs_info ( struct ncp_server * server , struct nw_info_struct * target ) ; 
/*--ncp_obtain_nfs_info--*/
int ncp_obtain_info ( struct ncp_server * server , struct inode * dir , char * path , struct nw_info_struct * target ) ; 
/*--ncp_obtain_info--*/
int ncp_mount_subdir ( struct ncp_server * server , __u8 volNumber , __u8 srcNS , __le32 dirEntNum , __u32 * volume , __le32 * newDirEnt , __le32 * newDosEnt ) ; 
/*--ncp_mount_subdir--*/
int ncp_get_volume_root ( struct ncp_server * server , const char * volname , __u32 * volume , __le32 * dirent , __le32 * dosdirent ) ; 
/*--ncp_get_volume_root--*/
int ncp_lookup_volume ( struct ncp_server * server , const char * volname , struct nw_info_struct * target ) ; 
/*--ncp_lookup_volume--*/
int ncp_modify_file_or_subdir_dos_info_path ( struct ncp_server * server , struct inode * dir , const char * path , __le32 info_mask , const struct nw_modify_dos_info * info ) ; 
/*--ncp_modify_file_or_subdir_dos_info_path--*/
int ncp_modify_file_or_subdir_dos_info ( struct ncp_server * server , struct inode * dir , __le32 info_mask , const struct nw_modify_dos_info * info ) ; 
/*--ncp_modify_file_or_subdir_dos_info--*/
int ncp_modify_nfs_info ( struct ncp_server * server , __u8 volnum , __le32 dirent , __u32 mode , __u32 rdev ) ; 
/*--ncp_modify_nfs_info--*/
int ncp_del_file_or_subdir2 ( struct ncp_server * server , struct dentry * dentry ) ; 
/*--ncp_del_file_or_subdir2--*/
int ncp_del_file_or_subdir ( struct ncp_server * server , struct inode * dir , char * name ) ; 
/*--ncp_del_file_or_subdir--*/
int ncp_open_create_file_or_subdir ( struct ncp_server * server , struct inode * dir , char * name , int open_create_mode , __le32 create_attributes , __le16 desired_acc_rights , struct ncp_entry_info * target ) ; 
/*--ncp_open_create_file_or_subdir--*/
int ncp_initialize_search ( struct ncp_server * server , struct inode * dir , struct nw_search_sequence * target ) ; 
/*--ncp_initialize_search--*/
int ncp_search_for_fileset ( struct ncp_server * server , struct nw_search_sequence * seq , int * more , int * cnt , char * buffer , size_t bufsize , char * * rbuf , size_t * rsize ) ; 
/*--ncp_search_for_fileset--*/
int ncp_ren_or_mov_file_or_subdir ( struct ncp_server * server , struct inode * old_dir , char * old_name , struct inode * new_dir , char * new_name ) ; 
/*--ncp_ren_or_mov_file_or_subdir--*/
int ncp_read_kernel ( struct ncp_server * server , const char * file_id , __u32 offset , __u16 to_read , char * target , int * bytes_read ) ; 
/*--ncp_read_kernel--*/
int ncp_read_bounce ( struct ncp_server * server , const char * file_id , __u32 offset , __u16 to_read , char * target , int * bytes_read , void * bounce , __u32 bufsize ) ; 
/*--ncp_read_bounce--*/
int ncp_write_kernel ( struct ncp_server * server , const char * file_id , __u32 offset , __u16 to_write , const char * source , int * bytes_written ) ; 
/*--ncp_write_kernel--*/
int ncp_LogPhysicalRecord ( struct ncp_server * server , const char * file_id , __u8 locktype , __u32 offset , __u32 length , __u16 timeout ) ; 
/*--ncp_LogPhysicalRecord--*/
int ncp_ClearPhysicalRecord ( struct ncp_server * server , const char * file_id , __u32 offset , __u32 length ) ; 
/*--ncp_ClearPhysicalRecord--*/
int ncp__io2vol ( struct ncp_server * server , unsigned char * vname , unsigned int * vlen , const unsigned char * iname , unsigned int ilen , int cc ) ; 
/*--ncp__io2vol--*/
int ncp__vol2io ( struct ncp_server * server , unsigned char * iname , unsigned int * ilen , const unsigned char * vname , unsigned int vlen , int cc ) ; 
/*--ncp__vol2io--*/
void ncp_tcp_data_ready ( struct sock * sk , int len ) ; 
/*--ncp_tcp_data_ready--*/
void ncp_tcp_error_report ( struct sock * sk ) ; 
/*--ncp_tcp_error_report--*/
void ncp_tcp_write_space ( struct sock * sk ) ; 
/*--ncp_tcp_write_space--*/
void ncpdgram_timeout_call ( unsigned long v ) ; 
/*--ncpdgram_timeout_call--*/
void ncpdgram_rcv_proc ( struct work_struct * work ) ; 
/*--ncpdgram_rcv_proc--*/
void ncpdgram_timeout_proc ( struct work_struct * work ) ; 
/*--ncpdgram_timeout_proc--*/
void ncp_tcp_rcv_proc ( struct work_struct * work ) ; 
/*--ncp_tcp_rcv_proc--*/
void ncp_tcp_tx_proc ( struct work_struct * work ) ; 
/*--ncp_tcp_tx_proc--*/
int ncp_request2 ( struct ncp_server * server , int function , void * rpl , int size ) ; 
/*--ncp_request2--*/
int ncp_connect ( struct ncp_server * server ) ; 
/*--ncp_connect--*/
int ncp_disconnect ( struct ncp_server * server ) ; 
/*--ncp_disconnect--*/
void ncp_lock_server ( struct ncp_server * server ) ; 
/*--ncp_lock_server--*/
void ncp_unlock_server ( struct ncp_server * server ) ; 
/*--ncp_unlock_server--*/
void __sign_packet ( struct ncp_server * server , const char * packet , size_t size , __u32 totalsize , void * sign_buff ) ; 
/*--__sign_packet--*/
int sign_verify_reply ( struct ncp_server * server , const char * packet , size_t size , __u32 totalsize , const void * sign_buff ) ; 
/*--sign_verify_reply--*/
int ncp_getopt ( const char * caller , char * * options , const struct ncp_option * opts , char * * optopt , char * * optarg , unsigned long * value ) ; 
/*--ncp_getopt--*/
int ncp_symlink ( struct inode * dir , struct dentry * dentry , const char * symname ) ; 
/*--ncp_symlink--*/
void nfs_put_client ( struct nfs_client * clp ) ; 
/*--nfs_put_client--*/
struct nfs_client * nfs_find_client ( const struct sockaddr * addr , u32 nfsversion ) ; 
/*--nfs_find_client--*/
struct nfs_client * nfs_find_client_next ( struct nfs_client * clp ) ; 
/*--nfs_find_client_next--*/
void nfs_mark_client_ready ( struct nfs_client * clp , int state ) ; 
/*--nfs_mark_client_ready--*/
int nfs4_check_client_ready ( struct nfs_client * clp ) ; 
/*--nfs4_check_client_ready--*/
void nfs_free_server ( struct nfs_server * server ) ; 
/*--nfs_free_server--*/
struct nfs_server * nfs_create_server ( const struct nfs_parsed_mount_data * data , struct nfs_fh * mntfh ) ; 
/*--nfs_create_server--*/
struct nfs_server * nfs4_create_server ( const struct nfs_parsed_mount_data * data , struct nfs_fh * mntfh ) ; 
/*--nfs4_create_server--*/
struct nfs_server * nfs4_create_referral_server ( struct nfs_clone_mount * data , struct nfs_fh * mntfh ) ; 
/*--nfs4_create_referral_server--*/
struct nfs_server * nfs_clone_server ( struct nfs_server * source , struct nfs_fh * fh , struct nfs_fattr * fattr ) ; 
/*--nfs_clone_server--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nfs_fs_proc_init ( void ) ; 
/*--nfs_fs_proc_init--*/
void nfs_fs_proc_exit ( void ) ; 
/*--nfs_fs_proc_exit--*/
void nfs_force_lookup_revalidate ( struct inode * dir ) ; 
/*--nfs_force_lookup_revalidate--*/
int nfs_instantiate ( struct dentry * dentry , struct nfs_fh * fhandle , struct nfs_fattr * fattr ) ; 
/*--nfs_instantiate--*/
int nfs_access_cache_shrinker ( struct shrinker * shrink , int nr_to_scan , gfp_t gfp_mask ) ; 
/*--nfs_access_cache_shrinker--*/
void nfs_access_zap_cache ( struct inode * inode ) ; 
/*--nfs_access_zap_cache--*/
int nfs_may_open ( struct inode * inode , struct rpc_cred * cred , int openflags ) ; 
/*--nfs_may_open--*/
int nfs_permission ( struct inode * inode , int mask ) ; 
/*--nfs_permission--*/
struct dentry * nfs_get_root ( struct super_block * sb , struct nfs_fh * mntfh ) ; 
/*--nfs_get_root--*/
int nfs4_get_rootfh ( struct nfs_server * server , struct nfs_fh * mntfh ) ; 
/*--nfs4_get_rootfh--*/
struct dentry * nfs4_get_root ( struct super_block * sb , struct nfs_fh * mntfh ) ; 
/*--nfs4_get_root--*/
int nfs_wait_bit_killable ( void * word ) ; 
/*--nfs_wait_bit_killable--*/
u64 nfs_compat_user_ino64 ( u64 fileid ) ; 
/*--nfs_compat_user_ino64--*/
void nfs_clear_inode ( struct inode * inode ) ; 
/*--nfs_clear_inode--*/
int nfs_sync_mapping ( struct address_space * mapping ) ; 
/*--nfs_sync_mapping--*/
void nfs_zap_caches ( struct inode * inode ) ; 
/*--nfs_zap_caches--*/
void nfs_zap_mapping ( struct inode * inode , struct address_space * mapping ) ; 
/*--nfs_zap_mapping--*/
void nfs_zap_acl_cache ( struct inode * inode ) ; 
/*--nfs_zap_acl_cache--*/
void nfs_invalidate_atime ( struct inode * inode ) ; 
/*--nfs_invalidate_atime--*/
struct inode * nfs_fhget ( struct super_block * sb , struct nfs_fh * fh , struct nfs_fattr * fattr ) ; 
/*--nfs_fhget--*/
int nfs_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--nfs_setattr--*/
void nfs_setattr_update_inode ( struct inode * inode , struct iattr * attr ) ; 
/*--nfs_setattr_update_inode--*/
int nfs_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--nfs_getattr--*/
void nfs_close_context ( struct nfs_open_context * ctx , int is_sync ) ; 
/*--nfs_close_context--*/
struct nfs_open_context * get_nfs_open_context ( struct nfs_open_context * ctx ) ; 
/*--get_nfs_open_context--*/
void put_nfs_open_context ( struct nfs_open_context * ctx ) ; 
/*--put_nfs_open_context--*/
struct nfs_open_context * nfs_find_open_context ( struct inode * inode , struct rpc_cred * cred , fmode_t mode ) ; 
/*--nfs_find_open_context--*/
int nfs_open ( struct inode * inode , struct file * filp ) ; 
/*--nfs_open--*/
int nfs_release ( struct inode * inode , struct file * filp ) ; 
/*--nfs_release--*/
int __nfs_revalidate_inode ( struct nfs_server * server , struct inode * inode ) ; 
/*--__nfs_revalidate_inode--*/
int nfs_attribute_timeout ( struct inode * inode ) ; 
/*--nfs_attribute_timeout--*/
int nfs_revalidate_inode ( struct nfs_server * server , struct inode * inode ) ; 
/*--nfs_revalidate_inode--*/
int nfs_revalidate_mapping ( struct inode * inode , struct address_space * mapping ) ; 
/*--nfs_revalidate_mapping--*/
unsigned long nfs_inc_attr_generation_counter ( void ) ; 
/*--nfs_inc_attr_generation_counter--*/
void nfs_fattr_init ( struct nfs_fattr * fattr ) ; 
/*--nfs_fattr_init--*/
struct nfs_fattr * nfs_alloc_fattr ( void ) ; 
/*--nfs_alloc_fattr--*/
struct nfs_fh * nfs_alloc_fhandle ( void ) ; 
/*--nfs_alloc_fhandle--*/
int nfs_refresh_inode ( struct inode * inode , struct nfs_fattr * fattr ) ; 
/*--nfs_refresh_inode--*/
int nfs_post_op_update_inode ( struct inode * inode , struct nfs_fattr * fattr ) ; 
/*--nfs_post_op_update_inode--*/
int nfs_post_op_update_inode_force_wcc ( struct inode * inode , struct nfs_fattr * fattr ) ; 
/*--nfs_post_op_update_inode_force_wcc--*/
void nfs4_clear_inode ( struct inode * inode ) ; 
/*--nfs4_clear_inode--*/
struct inode * nfs_alloc_inode ( struct super_block * sb ) ; 
/*--nfs_alloc_inode--*/
void nfs_destroy_inode ( struct inode * inode ) ; 
/*--nfs_destroy_inode--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) register_nfs_fs ( void ) ; 
/*--register_nfs_fs--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) unregister_nfs_fs ( void ) ; 
/*--unregister_nfs_fs--*/
void nfs_sb_active ( struct super_block * sb ) ; 
/*--nfs_sb_active--*/
void nfs_sb_deactive ( struct super_block * sb ) ; 
/*--nfs_sb_deactive--*/
__be32 * nfs_decode_dirent ( __be32 * p , struct nfs_entry * entry , int plus ) ; 
/*--nfs_decode_dirent--*/
int nfs_stat_to_errno ( int stat ) ; 
/*--nfs_stat_to_errno--*/
ssize_t nfs_direct_IO ( int rw , struct kiocb * iocb , const struct iovec * iov , loff_t pos , unsigned long nr_segs ) ; 
/*--nfs_direct_IO--*/
ssize_t nfs_file_direct_read ( struct kiocb * iocb , const struct iovec * iov , unsigned long nr_segs , loff_t pos ) ; 
/*--nfs_file_direct_read--*/
ssize_t nfs_file_direct_write ( struct kiocb * iocb , const struct iovec * iov , unsigned long nr_segs , loff_t pos ) ; 
/*--nfs_file_direct_write--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nfs_init_directcache ( void ) ; 
/*--nfs_init_directcache--*/
void nfs_destroy_directcache ( void ) ; 
/*--nfs_destroy_directcache--*/
struct nfs_page * nfs_create_request ( struct nfs_open_context * ctx , struct inode * inode , struct page * page , unsigned int offset , unsigned int count ) ; 
/*--nfs_create_request--*/
void nfs_unlock_request ( struct nfs_page * req ) ; 
/*--nfs_unlock_request--*/
int nfs_set_page_tag_locked ( struct nfs_page * req ) ; 
/*--nfs_set_page_tag_locked--*/
void nfs_clear_page_tag_locked ( struct nfs_page * req ) ; 
/*--nfs_clear_page_tag_locked--*/
void nfs_clear_request ( struct nfs_page * req ) ; 
/*--nfs_clear_request--*/
void nfs_release_request ( struct nfs_page * req ) ; 
/*--nfs_release_request--*/
int nfs_wait_on_request ( struct nfs_page * req ) ; 
/*--nfs_wait_on_request--*/
void nfs_pageio_init ( struct nfs_pageio_descriptor * desc , struct inode * inode , int ( * doio ) ( struct inode * , struct list_head * , unsigned int , size_t , int ) , size_t bsize , int io_flags ) ; 
/*--nfs_pageio_init--*/
int nfs_pageio_add_request ( struct nfs_pageio_descriptor * desc , struct nfs_page * req ) ; 
/*--nfs_pageio_add_request--*/
void nfs_pageio_complete ( struct nfs_pageio_descriptor * desc ) ; 
/*--nfs_pageio_complete--*/
void nfs_pageio_cond_complete ( struct nfs_pageio_descriptor * desc , unsigned long index ) ; 
/*--nfs_pageio_cond_complete--*/
int nfs_scan_list ( struct nfs_inode * nfsi , struct list_head * dst , unsigned long idx_start , unsigned int npages , int tag ) ; 
/*--nfs_scan_list--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nfs_init_nfspagecache ( void ) ; 
/*--nfs_init_nfspagecache--*/
void nfs_destroy_nfspagecache ( void ) ; 
/*--nfs_destroy_nfspagecache--*/
struct nfs_read_data * nfs_readdata_alloc ( unsigned int pagecount ) ; 
/*--nfs_readdata_alloc--*/
void nfs_readdata_free ( struct nfs_read_data * p ) ; 
/*--nfs_readdata_free--*/
int nfs_readpage_async ( struct nfs_open_context * ctx , struct inode * inode , struct page * page ) ; 
/*--nfs_readpage_async--*/
int nfs_readpage_result ( struct rpc_task * task , struct nfs_read_data * data ) ; 
/*--nfs_readpage_result--*/
int nfs_readpage ( struct file * file , struct page * page ) ; 
/*--nfs_readpage--*/
int nfs_readpages ( struct file * filp , struct address_space * mapping , struct list_head * pages , unsigned nr_pages ) ; 
/*--nfs_readpages--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nfs_init_readpagecache ( void ) ; 
/*--nfs_init_readpagecache--*/
void nfs_destroy_readpagecache ( void ) ; 
/*--nfs_destroy_readpagecache--*/
void nfs_block_sillyrename ( struct dentry * dentry ) ; 
/*--nfs_block_sillyrename--*/
void nfs_unblock_sillyrename ( struct dentry * dentry ) ; 
/*--nfs_unblock_sillyrename--*/
int nfs_async_unlink ( struct inode * dir , struct dentry * dentry ) ; 
/*--nfs_async_unlink--*/
void nfs_complete_unlink ( struct dentry * dentry , struct inode * inode ) ; 
/*--nfs_complete_unlink--*/
struct nfs_write_data * nfs_commitdata_alloc ( void ) ; 
/*--nfs_commitdata_alloc--*/
void nfs_commit_free ( struct nfs_write_data * p ) ; 
/*--nfs_commit_free--*/
struct nfs_write_data * nfs_writedata_alloc ( unsigned int pagecount ) ; 
/*--nfs_writedata_alloc--*/
void nfs_writedata_free ( struct nfs_write_data * p ) ; 
/*--nfs_writedata_free--*/
int nfs_writepage ( struct page * page , struct writeback_control * wbc ) ; 
/*--nfs_writepage--*/
int nfs_writepages ( struct address_space * mapping , struct writeback_control * wbc ) ; 
/*--nfs_writepages--*/
int nfs_flush_incompatible ( struct file * file , struct page * page ) ; 
/*--nfs_flush_incompatible--*/
int nfs_updatepage ( struct file * file , struct page * page , unsigned int offset , unsigned int count ) ; 
/*--nfs_updatepage--*/
int nfs_writeback_done ( struct rpc_task * task , struct nfs_write_data * data ) ; 
/*--nfs_writeback_done--*/
int nfs_commit_inode ( struct inode * inode , int how ) ; 
/*--nfs_commit_inode--*/
int nfs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--nfs_write_inode--*/
int nfs_wb_all ( struct inode * inode ) ; 
/*--nfs_wb_all--*/
int nfs_wb_page_cancel ( struct inode * inode , struct page * page ) ; 
/*--nfs_wb_page_cancel--*/
int nfs_wb_page ( struct inode * inode , struct page * page ) ; 
/*--nfs_wb_page--*/
int nfs_migrate_page ( struct address_space * mapping , struct page * newpage , struct page * page ) ; 
/*--nfs_migrate_page--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nfs_init_writepagecache ( void ) ; 
/*--nfs_init_writepagecache--*/
void nfs_destroy_writepagecache ( void ) ; 
/*--nfs_destroy_writepagecache--*/
char * nfs_path ( const char * base , const struct dentry * droot , const struct dentry * dentry , char * buffer , ssize_t buflen ) ; 
/*--nfs_path--*/
void nfs_release_automount_timer ( void ) ; 
/*--nfs_release_automount_timer--*/
int nfs_mount ( struct nfs_mount_request * info ) ; 
/*--nfs_mount--*/
void nfs_umount ( const struct nfs_mount_request * info ) ; 
/*--nfs_umount--*/
ssize_t nfs_dns_resolve_name ( char * name , size_t namelen , struct sockaddr * sa , size_t salen ) ; 
/*--nfs_dns_resolve_name--*/
int nfs_dns_resolver_init ( void ) ; 
/*--nfs_dns_resolver_init--*/
void nfs_dns_resolver_destroy ( void ) ; 
/*--nfs_dns_resolver_destroy--*/
int nfs_cache_upcall ( struct cache_detail * cd , char * entry_name ) ; 
/*--nfs_cache_upcall--*/
void nfs_cache_defer_req_put ( struct nfs_cache_defer_req * dreq ) ; 
/*--nfs_cache_defer_req_put--*/
struct nfs_cache_defer_req * nfs_cache_defer_req_alloc ( void ) ; 
/*--nfs_cache_defer_req_alloc--*/
int nfs_cache_wait_for_upcall ( struct nfs_cache_defer_req * dreq ) ; 
/*--nfs_cache_wait_for_upcall--*/
int nfs_cache_register ( struct cache_detail * cd ) ; 
/*--nfs_cache_register--*/
void nfs_cache_unregister ( struct cache_detail * cd ) ; 
/*--nfs_cache_unregister--*/
__be32 * nfs3_decode_dirent ( __be32 * p , struct nfs_entry * entry , int plus ) ; 
/*--nfs3_decode_dirent--*/
ssize_t nfs3_listxattr ( struct dentry * dentry , char * buffer , size_t size ) ; 
/*--nfs3_listxattr--*/
ssize_t nfs3_getxattr ( struct dentry * dentry , const char * name , void * buffer , size_t size ) ; 
/*--nfs3_getxattr--*/
int nfs3_setxattr ( struct dentry * dentry , const char * name , const void * value , size_t size , int flags ) ; 
/*--nfs3_setxattr--*/
int nfs3_removexattr ( struct dentry * dentry , const char * name ) ; 
/*--nfs3_removexattr--*/
void nfs3_forget_cached_acls ( struct inode * inode ) ; 
/*--nfs3_forget_cached_acls--*/
struct posix_acl * nfs3_proc_getacl ( struct inode * inode , int type ) ; 
/*--nfs3_proc_getacl--*/
int nfs3_proc_setacl ( struct inode * inode , int type , struct posix_acl * acl ) ; 
/*--nfs3_proc_setacl--*/
int nfs3_proc_set_default_acl ( struct inode * dir , struct inode * inode , mode_t mode ) ; 
/*--nfs3_proc_set_default_acl--*/
int _nfs4_call_sync ( struct nfs_server * server , struct rpc_message * msg , struct nfs4_sequence_args * args , struct nfs4_sequence_res * res , int cache_reply ) ; 
/*--_nfs4_call_sync--*/
int nfs4_open_delegation_recall ( struct nfs_open_context * ctx , struct nfs4_state * state , const nfs4_stateid * stateid ) ; 
/*--nfs4_open_delegation_recall--*/
int nfs4_do_close ( struct path * path , struct nfs4_state * state , gfp_t gfp_mask , int wait ) ; 
/*--nfs4_do_close--*/
struct dentry * nfs4_atomic_open ( struct inode * dir , struct dentry * dentry , struct nameidata * nd ) ; 
/*--nfs4_atomic_open--*/
int nfs4_open_revalidate ( struct inode * dir , struct dentry * dentry , int openflags , struct nameidata * nd ) ; 
/*--nfs4_open_revalidate--*/
int nfs4_server_capabilities ( struct nfs_server * server , struct nfs_fh * fhandle ) ; 
/*--nfs4_server_capabilities--*/
int nfs4_proc_async_renew ( struct nfs_client * clp , struct rpc_cred * cred ) ; 
/*--nfs4_proc_async_renew--*/
int nfs4_proc_renew ( struct nfs_client * clp , struct rpc_cred * cred ) ; 
/*--nfs4_proc_renew--*/
int nfs4_proc_setclientid ( struct nfs_client * clp , u32 program , unsigned short port , struct rpc_cred * cred , struct nfs4_setclientid_res * res ) ; 
/*--nfs4_proc_setclientid--*/
int nfs4_proc_setclientid_confirm ( struct nfs_client * clp , struct nfs4_setclientid_res * arg , struct rpc_cred * cred ) ; 
/*--nfs4_proc_setclientid_confirm--*/
int nfs4_proc_delegreturn ( struct inode * inode , struct rpc_cred * cred , const nfs4_stateid * stateid , int issync ) ; 
/*--nfs4_proc_delegreturn--*/
int nfs4_lock_delegation_recall ( struct nfs4_state * state , struct file_lock * fl ) ; 
/*--nfs4_lock_delegation_recall--*/
int nfs4_setxattr ( struct dentry * dentry , const char * key , const void * buf , size_t buflen , int flags ) ; 
/*--nfs4_setxattr--*/
ssize_t nfs4_getxattr ( struct dentry * dentry , const char * key , void * buf , size_t buflen ) ; 
/*--nfs4_getxattr--*/
ssize_t nfs4_listxattr ( struct dentry * dentry , char * buf , size_t buflen ) ; 
/*--nfs4_listxattr--*/
int nfs4_proc_fs_locations ( struct inode * dir , const struct qstr * name , struct nfs4_fs_locations * fs_locations , struct page * page ) ; 
/*--nfs4_proc_fs_locations--*/
__be32 * nfs4_decode_dirent ( __be32 * p , struct nfs_entry * entry , int plus ) ; 
/*--nfs4_decode_dirent--*/
int nfs4_init_clientid ( struct nfs_client * clp , struct rpc_cred * cred ) ; 
/*--nfs4_init_clientid--*/
struct rpc_cred * nfs4_get_machine_cred_locked ( struct nfs_client * clp ) ; 
/*--nfs4_get_machine_cred_locked--*/
struct rpc_cred * nfs4_get_renew_cred_locked ( struct nfs_client * clp ) ; 
/*--nfs4_get_renew_cred_locked--*/
struct rpc_cred * nfs4_get_setclientid_cred ( struct nfs_client * clp ) ; 
/*--nfs4_get_setclientid_cred--*/
struct nfs4_state_owner * nfs4_get_state_owner ( struct nfs_server * server , struct rpc_cred * cred ) ; 
/*--nfs4_get_state_owner--*/
void nfs4_put_state_owner ( struct nfs4_state_owner * sp ) ; 
/*--nfs4_put_state_owner--*/
void nfs4_state_set_mode_locked ( struct nfs4_state * state , fmode_t fmode ) ; 
/*--nfs4_state_set_mode_locked--*/
struct nfs4_state * nfs4_get_open_state ( struct inode * inode , struct nfs4_state_owner * owner ) ; 
/*--nfs4_get_open_state--*/
void nfs4_put_open_state ( struct nfs4_state * state ) ; 
/*--nfs4_put_open_state--*/
void nfs4_close_state ( struct path * path , struct nfs4_state * state , fmode_t fmode ) ; 
/*--nfs4_close_state--*/
void nfs4_close_sync ( struct path * path , struct nfs4_state * state , fmode_t fmode ) ; 
/*--nfs4_close_sync--*/
void nfs4_put_lock_state ( struct nfs4_lock_state * lsp ) ; 
/*--nfs4_put_lock_state--*/
int nfs4_set_lock_state ( struct nfs4_state * state , struct file_lock * fl ) ; 
/*--nfs4_set_lock_state--*/
void nfs4_copy_stateid ( nfs4_stateid * dst , struct nfs4_state * state , fl_owner_t fl_owner ) ; 
/*--nfs4_copy_stateid--*/
struct nfs_seqid * nfs_alloc_seqid ( struct nfs_seqid_counter * counter , gfp_t gfp_mask ) ; 
/*--nfs_alloc_seqid--*/
void nfs_release_seqid ( struct nfs_seqid * seqid ) ; 
/*--nfs_release_seqid--*/
void nfs_free_seqid ( struct nfs_seqid * seqid ) ; 
/*--nfs_free_seqid--*/
void nfs_increment_open_seqid ( int status , struct nfs_seqid * seqid ) ; 
/*--nfs_increment_open_seqid--*/
void nfs_increment_lock_seqid ( int status , struct nfs_seqid * seqid ) ; 
/*--nfs_increment_lock_seqid--*/
int nfs_wait_on_sequence ( struct nfs_seqid * seqid , struct rpc_task * task ) ; 
/*--nfs_wait_on_sequence--*/
void nfs4_schedule_state_manager ( struct nfs_client * clp ) ; 
/*--nfs4_schedule_state_manager--*/
void nfs4_schedule_state_recovery ( struct nfs_client * clp ) ; 
/*--nfs4_schedule_state_recovery--*/
int nfs4_state_mark_reclaim_reboot ( struct nfs_client * clp , struct nfs4_state * state ) ; 
/*--nfs4_state_mark_reclaim_reboot--*/
int nfs4_state_mark_reclaim_nograce ( struct nfs_client * clp , struct nfs4_state * state ) ; 
/*--nfs4_state_mark_reclaim_nograce--*/
void nfs4_renew_state ( struct work_struct * work ) ; 
/*--nfs4_renew_state--*/
void nfs4_schedule_state_renewal ( struct nfs_client * clp ) ; 
/*--nfs4_schedule_state_renewal--*/
void nfs4_kill_renewd ( struct nfs_client * clp ) ; 
/*--nfs4_kill_renewd--*/
void nfs_mark_delegation_referenced ( struct nfs_delegation * delegation ) ; 
/*--nfs_mark_delegation_referenced--*/
int nfs_have_delegation ( struct inode * inode , fmode_t flags ) ; 
/*--nfs_have_delegation--*/
void nfs_inode_reclaim_delegation ( struct inode * inode , struct rpc_cred * cred , struct nfs_openres * res ) ; 
/*--nfs_inode_reclaim_delegation--*/
int nfs_inode_set_delegation ( struct inode * inode , struct rpc_cred * cred , struct nfs_openres * res ) ; 
/*--nfs_inode_set_delegation--*/
int nfs_client_return_marked_delegations ( struct nfs_client * clp ) ; 
/*--nfs_client_return_marked_delegations--*/
void nfs_inode_return_delegation_noreclaim ( struct inode * inode ) ; 
/*--nfs_inode_return_delegation_noreclaim--*/
int nfs_inode_return_delegation ( struct inode * inode ) ; 
/*--nfs_inode_return_delegation--*/
void nfs_super_return_all_delegations ( struct super_block * sb ) ; 
/*--nfs_super_return_all_delegations--*/
void nfs_expire_all_delegation_types ( struct nfs_client * clp , fmode_t flags ) ; 
/*--nfs_expire_all_delegation_types--*/
void nfs_expire_all_delegations ( struct nfs_client * clp ) ; 
/*--nfs_expire_all_delegations--*/
void nfs_handle_cb_pathdown ( struct nfs_client * clp ) ; 
/*--nfs_handle_cb_pathdown--*/
void nfs_expire_unreferenced_delegations ( struct nfs_client * clp ) ; 
/*--nfs_expire_unreferenced_delegations--*/
int nfs_async_inode_return_delegation ( struct inode * inode , const nfs4_stateid * stateid , int ( * validate_stateid ) ( struct nfs_delegation * delegation , const nfs4_stateid * stateid ) ) ; 
/*--nfs_async_inode_return_delegation--*/
struct inode * nfs_delegation_find_inode ( struct nfs_client * clp , const struct nfs_fh * fhandle ) ; 
/*--nfs_delegation_find_inode--*/
void nfs_delegation_mark_reclaim ( struct nfs_client * clp ) ; 
/*--nfs_delegation_mark_reclaim--*/
void nfs_delegation_reap_unclaimed ( struct nfs_client * clp ) ; 
/*--nfs_delegation_reap_unclaimed--*/
int nfs4_copy_delegation_stateid ( nfs4_stateid * dst , struct inode * inode ) ; 
/*--nfs4_copy_delegation_stateid--*/
int nfs_idmap_new ( struct nfs_client * clp ) ; 
/*--nfs_idmap_new--*/
void nfs_idmap_delete ( struct nfs_client * clp ) ; 
/*--nfs_idmap_delete--*/
int nfs_map_name_to_uid ( struct nfs_client * clp , const char * name , size_t namelen , __u32 * uid ) ; 
/*--nfs_map_name_to_uid--*/
int nfs_map_group_to_gid ( struct nfs_client * clp , const char * name , size_t namelen , __u32 * uid ) ; 
/*--nfs_map_group_to_gid--*/
int nfs_map_uid_to_name ( struct nfs_client * clp , __u32 uid , char * buf ) ; 
/*--nfs_map_uid_to_name--*/
int nfs_map_gid_to_group ( struct nfs_client * clp , __u32 uid , char * buf ) ; 
/*--nfs_map_gid_to_group--*/
struct svc_rqst * nfs4_callback_up ( struct svc_serv * serv ) ; 
/*--nfs4_callback_up--*/
int nfs_callback_up ( u32 minorversion , struct rpc_xprt * xprt ) ; 
/*--nfs_callback_up--*/
void nfs_callback_down ( int minorversion ) ; 
/*--nfs_callback_down--*/
__be32 nfs4_callback_getattr ( struct cb_getattrargs * args , struct cb_getattrres * res ) ; 
/*--nfs4_callback_getattr--*/
__be32 nfs4_callback_recall ( struct cb_recallargs * args , void * dummy ) ; 
/*--nfs4_callback_recall--*/
int nfs4_validate_delegation_stateid ( struct nfs_delegation * delegation , const nfs4_stateid * stateid ) ; 
/*--nfs4_validate_delegation_stateid--*/
struct vfsmount * nfs_do_refmount ( const struct vfsmount * mnt_parent , struct dentry * dentry ) ; 
/*--nfs_do_refmount--*/
int nfs_register_sysctl ( void ) ; 
/*--nfs_register_sysctl--*/
void nfs_unregister_sysctl ( void ) ; 
/*--nfs_unregister_sysctl--*/
unsigned int nfsacl_encode ( struct xdr_buf * buf , unsigned int base , struct inode * inode , struct posix_acl * acl , int encode_entries , int typeflag ) ; 
/*--nfsacl_encode--*/
unsigned int nfsacl_decode ( struct xdr_buf * buf , unsigned int base , unsigned int * aclcnt , struct posix_acl * * pacl ) ; 
/*--nfsacl_decode--*/
int nfsd_vers ( int vers , enum vers_op change ) ; 
/*--nfsd_vers--*/
int nfsd_minorversion ( u32 minorversion , enum vers_op change ) ; 
/*--nfsd_minorversion--*/
int nfsd_nrthreads ( void ) ; 
/*--nfsd_nrthreads--*/
void nfsd_reset_versions ( void ) ; 
/*--nfsd_reset_versions--*/
int nfsd_create_serv ( void ) ; 
/*--nfsd_create_serv--*/
int nfsd_nrpools ( void ) ; 
/*--nfsd_nrpools--*/
int nfsd_get_nrthreads ( int n , int * nthreads ) ; 
/*--nfsd_get_nrthreads--*/
int nfsd_set_nrthreads ( int n , int * nthreads ) ; 
/*--nfsd_set_nrthreads--*/
int nfsd_svc ( unsigned short port , int nrservs ) ; 
/*--nfsd_svc--*/
int nfsd_dispatch ( struct svc_rqst * rqstp , __be32 * statp ) ; 
/*--nfsd_dispatch--*/
int nfsd_pool_stats_open ( struct inode * inode , struct file * file ) ; 
/*--nfsd_pool_stats_open--*/
int nfsd_pool_stats_release ( struct inode * inode , struct file * file ) ; 
/*--nfsd_pool_stats_release--*/
__be32 nfserrno ( int errno ) ; 
/*--nfserrno--*/
__be32 fh_verify ( struct svc_rqst * rqstp , struct svc_fh * fhp , int type , int access ) ; 
/*--fh_verify--*/
__be32 fh_compose ( struct svc_fh * fhp , struct svc_export * exp , struct dentry * dentry , struct svc_fh * ref_fh ) ; 
/*--fh_compose--*/
__be32 fh_update ( struct svc_fh * fhp ) ; 
/*--fh_update--*/
void fh_put ( struct svc_fh * fhp ) ; 
/*--fh_put--*/
char * SVCFH_fmt ( struct svc_fh * fhp ) ; 
/*--SVCFH_fmt--*/
enum fsid_source fsid_source ( struct svc_fh * fhp ) ; 
/*--fsid_source--*/
int nfsd_cross_mnt ( struct svc_rqst * rqstp , struct dentry * * dpp , struct svc_export * * expp ) ; 
/*--nfsd_cross_mnt--*/
int nfsd_mountpoint ( struct dentry * dentry , struct svc_export * exp ) ; 
/*--nfsd_mountpoint--*/
__be32 nfsd_lookup_dentry ( struct svc_rqst * rqstp , struct svc_fh * fhp , const char * name , unsigned int len , struct svc_export * * exp_ret , struct dentry * * dentry_ret ) ; 
/*--nfsd_lookup_dentry--*/
__be32 nfsd_lookup ( struct svc_rqst * rqstp , struct svc_fh * fhp , const char * name , unsigned int len , struct svc_fh * resfh ) ; 
/*--nfsd_lookup--*/
__be32 nfsd_setattr ( struct svc_rqst * rqstp , struct svc_fh * fhp , struct iattr * iap , int check_guard , time_t guardtime ) ; 
/*--nfsd_setattr--*/
__be32 nfsd4_set_nfs4_acl ( struct svc_rqst * rqstp , struct svc_fh * fhp , struct nfs4_acl * acl ) ; 
/*--nfsd4_set_nfs4_acl--*/
int nfsd4_get_nfs4_acl ( struct svc_rqst * rqstp , struct dentry * dentry , struct nfs4_acl * * acl ) ; 
/*--nfsd4_get_nfs4_acl--*/
__be32 nfsd_access ( struct svc_rqst * rqstp , struct svc_fh * fhp , u32 * access , u32 * supported ) ; 
/*--nfsd_access--*/
__be32 nfsd_open ( struct svc_rqst * rqstp , struct svc_fh * fhp , int type , int access , struct file * * filp ) ; 
/*--nfsd_open--*/
void nfsd_close ( struct file * filp ) ; 
/*--nfsd_close--*/
__be32 nfsd_read ( struct svc_rqst * rqstp , struct svc_fh * fhp , struct file * file , loff_t offset , struct kvec * vec , int vlen , unsigned long * count ) ; 
/*--nfsd_read--*/
__be32 nfsd_write ( struct svc_rqst * rqstp , struct svc_fh * fhp , struct file * file , loff_t offset , struct kvec * vec , int vlen , unsigned long * cnt , int * stablep ) ; 
/*--nfsd_write--*/
__be32 nfsd_commit ( struct svc_rqst * rqstp , struct svc_fh * fhp , loff_t offset , unsigned long count ) ; 
/*--nfsd_commit--*/
__be32 nfsd_create ( struct svc_rqst * rqstp , struct svc_fh * fhp , char * fname , int flen , struct iattr * iap , int type , dev_t rdev , struct svc_fh * resfhp ) ; 
/*--nfsd_create--*/
__be32 nfsd_create_v3 ( struct svc_rqst * rqstp , struct svc_fh * fhp , char * fname , int flen , struct iattr * iap , struct svc_fh * resfhp , int createmode , u32 * verifier , int * truncp , int * created ) ; 
/*--nfsd_create_v3--*/
__be32 nfsd_readlink ( struct svc_rqst * rqstp , struct svc_fh * fhp , char * buf , int * lenp ) ; 
/*--nfsd_readlink--*/
__be32 nfsd_symlink ( struct svc_rqst * rqstp , struct svc_fh * fhp , char * fname , int flen , char * path , int plen , struct svc_fh * resfhp , struct iattr * iap ) ; 
/*--nfsd_symlink--*/
__be32 nfsd_link ( struct svc_rqst * rqstp , struct svc_fh * ffhp , char * name , int len , struct svc_fh * tfhp ) ; 
/*--nfsd_link--*/
__be32 nfsd_rename ( struct svc_rqst * rqstp , struct svc_fh * ffhp , char * fname , int flen , struct svc_fh * tfhp , char * tname , int tlen ) ; 
/*--nfsd_rename--*/
__be32 nfsd_unlink ( struct svc_rqst * rqstp , struct svc_fh * fhp , int type , char * fname , int flen ) ; 
/*--nfsd_unlink--*/
__be32 nfsd_readdir ( struct svc_rqst * rqstp , struct svc_fh * fhp , loff_t * offsetp , struct readdir_cd * cdp , filldir_t func ) ; 
/*--nfsd_readdir--*/
__be32 nfsd_statfs ( struct svc_rqst * rqstp , struct svc_fh * fhp , struct kstatfs * stat , int access ) ; 
/*--nfsd_statfs--*/
__be32 nfsd_permission ( struct svc_rqst * rqstp , struct svc_export * exp , struct dentry * dentry , int acc ) ; 
/*--nfsd_permission--*/
void nfsd_racache_shutdown ( void ) ; 
/*--nfsd_racache_shutdown--*/
int nfsd_racache_init ( int cache_size ) ; 
/*--nfsd_racache_init--*/
struct posix_acl * nfsd_get_posix_acl ( struct svc_fh * fhp , int type ) ; 
/*--nfsd_get_posix_acl--*/
int nfsd_set_posix_acl ( struct svc_fh * fhp , int type , struct posix_acl * acl ) ; 
/*--nfsd_set_posix_acl--*/
void exp_readlock ( void ) ; 
/*--exp_readlock--*/
void exp_readunlock ( void ) ; 
/*--exp_readunlock--*/
int exp_export ( struct nfsctl_export * nxp ) ; 
/*--exp_export--*/
int exp_unexport ( struct nfsctl_export * nxp ) ; 
/*--exp_unexport--*/
int exp_rootfh ( svc_client * clp , char * name , struct knfsd_fh * f , int maxsize ) ; 
/*--exp_rootfh--*/
__be32 check_nfsd_access ( struct svc_export * exp , struct svc_rqst * rqstp ) ; 
/*--check_nfsd_access--*/
struct svc_export * rqst_exp_get_by_name ( struct svc_rqst * rqstp , struct path * path ) ; 
/*--rqst_exp_get_by_name--*/
struct svc_export * rqst_exp_find ( struct svc_rqst * rqstp , int fsid_type , u32 * fsidv ) ; 
/*--rqst_exp_find--*/
struct svc_export * rqst_exp_parent ( struct svc_rqst * rqstp , struct path * path ) ; 
/*--rqst_exp_parent--*/
__be32 exp_pseudoroot ( struct svc_rqst * rqstp , struct svc_fh * fhp ) ; 
/*--exp_pseudoroot--*/
int exp_addclient ( struct nfsctl_client * ncp ) ; 
/*--exp_addclient--*/
int exp_delclient ( struct nfsctl_client * ncp ) ; 
/*--exp_delclient--*/
int nfsd_export_init ( void ) ; 
/*--nfsd_export_init--*/
void nfsd_export_flush ( void ) ; 
/*--nfsd_export_flush--*/
void nfsd_export_shutdown ( void ) ; 
/*--nfsd_export_shutdown--*/
int nfsexp_flags ( struct svc_rqst * rqstp , struct svc_export * exp ) ; 
/*--nfsexp_flags--*/
int nfsd_setuser ( struct svc_rqst * rqstp , struct svc_export * exp ) ; 
/*--nfsd_setuser--*/
void nfsd_lockd_init ( void ) ; 
/*--nfsd_lockd_init--*/
void nfsd_lockd_shutdown ( void ) ; 
/*--nfsd_lockd_shutdown--*/
int nfsd_reply_cache_init ( void ) ; 
/*--nfsd_reply_cache_init--*/
void nfsd_reply_cache_shutdown ( void ) ; 
/*--nfsd_reply_cache_shutdown--*/
int nfsd_cache_lookup ( struct svc_rqst * rqstp , int type ) ; 
/*--nfsd_cache_lookup--*/
void nfsd_cache_update ( struct svc_rqst * rqstp , int cachetype , __be32 * statp ) ; 
/*--nfsd_cache_update--*/
__be32 * nfs2svc_decode_fh ( __be32 * p , struct svc_fh * fhp ) ; 
/*--nfs2svc_decode_fh--*/
__be32 * nfs2svc_encode_fattr ( struct svc_rqst * rqstp , __be32 * p , struct svc_fh * fhp ) ; 
/*--nfs2svc_encode_fattr--*/
int nfssvc_decode_void ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nfssvc_decode_void--*/
int nfssvc_decode_fhandle ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_fhandle * args ) ; 
/*--nfssvc_decode_fhandle--*/
int nfssvc_decode_sattrargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_sattrargs * args ) ; 
/*--nfssvc_decode_sattrargs--*/
int nfssvc_decode_diropargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_diropargs * args ) ; 
/*--nfssvc_decode_diropargs--*/
int nfssvc_decode_readargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_readargs * args ) ; 
/*--nfssvc_decode_readargs--*/
int nfssvc_decode_writeargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_writeargs * args ) ; 
/*--nfssvc_decode_writeargs--*/
int nfssvc_decode_createargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_createargs * args ) ; 
/*--nfssvc_decode_createargs--*/
int nfssvc_decode_renameargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_renameargs * args ) ; 
/*--nfssvc_decode_renameargs--*/
int nfssvc_decode_readlinkargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_readlinkargs * args ) ; 
/*--nfssvc_decode_readlinkargs--*/
int nfssvc_decode_linkargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_linkargs * args ) ; 
/*--nfssvc_decode_linkargs--*/
int nfssvc_decode_symlinkargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_symlinkargs * args ) ; 
/*--nfssvc_decode_symlinkargs--*/
int nfssvc_decode_readdirargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_readdirargs * args ) ; 
/*--nfssvc_decode_readdirargs--*/
int nfssvc_encode_void ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nfssvc_encode_void--*/
int nfssvc_encode_attrstat ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_attrstat * resp ) ; 
/*--nfssvc_encode_attrstat--*/
int nfssvc_encode_diropres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_diropres * resp ) ; 
/*--nfssvc_encode_diropres--*/
int nfssvc_encode_readlinkres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_readlinkres * resp ) ; 
/*--nfssvc_encode_readlinkres--*/
int nfssvc_encode_readres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_readres * resp ) ; 
/*--nfssvc_encode_readres--*/
int nfssvc_encode_readdirres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_readdirres * resp ) ; 
/*--nfssvc_encode_readdirres--*/
int nfssvc_encode_statfsres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_statfsres * resp ) ; 
/*--nfssvc_encode_statfsres--*/
int nfssvc_encode_entry ( void * ccdv , const char * name , int namlen , loff_t offset , u64 ino , unsigned int d_type ) ; 
/*--nfssvc_encode_entry--*/
int nfssvc_release_fhandle ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_fhandle * resp ) ; 
/*--nfssvc_release_fhandle--*/
void nfsd_stat_init ( void ) ; 
/*--nfsd_stat_init--*/
void nfsd_stat_shutdown ( void ) ; 
/*--nfsd_stat_shutdown--*/
int nfsaclsvc_encode_voidres ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nfsaclsvc_encode_voidres--*/
__be32 * nfs3svc_decode_fh ( __be32 * p , struct svc_fh * fhp ) ; 
/*--nfs3svc_decode_fh--*/
__be32 * nfs3svc_encode_post_op_attr ( struct svc_rqst * rqstp , __be32 * p , struct svc_fh * fhp ) ; 
/*--nfs3svc_encode_post_op_attr--*/
void fill_post_wcc ( struct svc_fh * fhp ) ; 
/*--fill_post_wcc--*/
int nfs3svc_decode_fhandle ( struct svc_rqst * rqstp , __be32 * p , struct nfsd_fhandle * args ) ; 
/*--nfs3svc_decode_fhandle--*/
int nfs3svc_decode_sattrargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_sattrargs * args ) ; 
/*--nfs3svc_decode_sattrargs--*/
int nfs3svc_decode_diropargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_diropargs * args ) ; 
/*--nfs3svc_decode_diropargs--*/
int nfs3svc_decode_accessargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_accessargs * args ) ; 
/*--nfs3svc_decode_accessargs--*/
int nfs3svc_decode_readargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_readargs * args ) ; 
/*--nfs3svc_decode_readargs--*/
int nfs3svc_decode_writeargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_writeargs * args ) ; 
/*--nfs3svc_decode_writeargs--*/
int nfs3svc_decode_createargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_createargs * args ) ; 
/*--nfs3svc_decode_createargs--*/
int nfs3svc_decode_mkdirargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_createargs * args ) ; 
/*--nfs3svc_decode_mkdirargs--*/
int nfs3svc_decode_symlinkargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_symlinkargs * args ) ; 
/*--nfs3svc_decode_symlinkargs--*/
int nfs3svc_decode_mknodargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_mknodargs * args ) ; 
/*--nfs3svc_decode_mknodargs--*/
int nfs3svc_decode_renameargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_renameargs * args ) ; 
/*--nfs3svc_decode_renameargs--*/
int nfs3svc_decode_readlinkargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_readlinkargs * args ) ; 
/*--nfs3svc_decode_readlinkargs--*/
int nfs3svc_decode_linkargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_linkargs * args ) ; 
/*--nfs3svc_decode_linkargs--*/
int nfs3svc_decode_readdirargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_readdirargs * args ) ; 
/*--nfs3svc_decode_readdirargs--*/
int nfs3svc_decode_readdirplusargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_readdirargs * args ) ; 
/*--nfs3svc_decode_readdirplusargs--*/
int nfs3svc_decode_commitargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_commitargs * args ) ; 
/*--nfs3svc_decode_commitargs--*/
int nfs3svc_encode_voidres ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nfs3svc_encode_voidres--*/
int nfs3svc_encode_attrstat ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_attrstat * resp ) ; 
/*--nfs3svc_encode_attrstat--*/
int nfs3svc_encode_wccstat ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_attrstat * resp ) ; 
/*--nfs3svc_encode_wccstat--*/
int nfs3svc_encode_diropres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_diropres * resp ) ; 
/*--nfs3svc_encode_diropres--*/
int nfs3svc_encode_accessres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_accessres * resp ) ; 
/*--nfs3svc_encode_accessres--*/
int nfs3svc_encode_readlinkres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_readlinkres * resp ) ; 
/*--nfs3svc_encode_readlinkres--*/
int nfs3svc_encode_readres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_readres * resp ) ; 
/*--nfs3svc_encode_readres--*/
int nfs3svc_encode_writeres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_writeres * resp ) ; 
/*--nfs3svc_encode_writeres--*/
int nfs3svc_encode_createres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_diropres * resp ) ; 
/*--nfs3svc_encode_createres--*/
int nfs3svc_encode_renameres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_renameres * resp ) ; 
/*--nfs3svc_encode_renameres--*/
int nfs3svc_encode_linkres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_linkres * resp ) ; 
/*--nfs3svc_encode_linkres--*/
int nfs3svc_encode_readdirres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_readdirres * resp ) ; 
/*--nfs3svc_encode_readdirres--*/
__be32 * encode_entryplus_baggage ( struct nfsd3_readdirres * cd , __be32 * p , const char * name , int namlen ) ; 
/*--encode_entryplus_baggage--*/
int nfs3svc_encode_entry ( void * cd , const char * name , int namlen , loff_t offset , u64 ino , unsigned int d_type ) ; 
/*--nfs3svc_encode_entry--*/
int nfs3svc_encode_entry_plus ( void * cd , const char * name , int namlen , loff_t offset , u64 ino , unsigned int d_type ) ; 
/*--nfs3svc_encode_entry_plus--*/
int nfs3svc_encode_fsstatres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_fsstatres * resp ) ; 
/*--nfs3svc_encode_fsstatres--*/
int nfs3svc_encode_fsinfores ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_fsinfores * resp ) ; 
/*--nfs3svc_encode_fsinfores--*/
int nfs3svc_encode_pathconfres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_pathconfres * resp ) ; 
/*--nfs3svc_encode_pathconfres--*/
int nfs3svc_encode_commitres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_commitres * resp ) ; 
/*--nfs3svc_encode_commitres--*/
int nfs3svc_release_fhandle ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_attrstat * resp ) ; 
/*--nfs3svc_release_fhandle--*/
int nfs3svc_release_fhandle2 ( struct svc_rqst * rqstp , __be32 * p , struct nfsd3_fhandle_pair * resp ) ; 
/*--nfs3svc_release_fhandle2--*/
__be32 nfsd4_encode_fattr ( struct svc_fh * fhp , struct svc_export * exp , struct dentry * dentry , __be32 * buffer , int * countp , u32 * bmval , struct svc_rqst * rqstp , int ignore_crossmnt ) ; 
/*--nfsd4_encode_fattr--*/
__be32 nfsd4_encode_sequence ( struct nfsd4_compoundres * resp , int nfserr , struct nfsd4_sequence * seq ) ; 
/*--nfsd4_encode_sequence--*/
void nfsd4_encode_operation ( struct nfsd4_compoundres * resp , struct nfsd4_op * op ) ; 
/*--nfsd4_encode_operation--*/
void nfsd4_encode_replay ( struct nfsd4_compoundres * resp , struct nfsd4_op * op ) ; 
/*--nfsd4_encode_replay--*/
int nfs4svc_encode_voidres ( struct svc_rqst * rqstp , __be32 * p , void * dummy ) ; 
/*--nfs4svc_encode_voidres--*/
void nfsd4_release_compoundargs ( struct nfsd4_compoundargs * args ) ; 
/*--nfsd4_release_compoundargs--*/
int nfs4svc_decode_compoundargs ( struct svc_rqst * rqstp , __be32 * p , struct nfsd4_compoundargs * args ) ; 
/*--nfs4svc_decode_compoundargs--*/
int nfs4svc_encode_compoundres ( struct svc_rqst * rqstp , __be32 * p , struct nfsd4_compoundres * resp ) ; 
/*--nfs4svc_encode_compoundres--*/
void nfs4_lock_state ( void ) ; 
/*--nfs4_lock_state--*/
void nfs4_unlock_state ( void ) ; 
/*--nfs4_unlock_state--*/
void nfs4_put_delegation ( struct nfs4_delegation * dp ) ; 
/*--nfs4_put_delegation--*/
void free_session ( struct kref * kref ) ; 
/*--free_session--*/
void release_session_client ( struct nfsd4_session * session ) ; 
/*--release_session_client--*/
void nfsd4_store_cache_entry ( struct nfsd4_compoundres * resp ) ; 
/*--nfsd4_store_cache_entry--*/
__be32 nfsd4_replay_cache_entry ( struct nfsd4_compoundres * resp , struct nfsd4_sequence * seq ) ; 
/*--nfsd4_replay_cache_entry--*/
__be32 nfsd4_exchange_id ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_exchange_id * exid ) ; 
/*--nfsd4_exchange_id--*/
__be32 nfsd4_create_session ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_create_session * cr_ses ) ; 
/*--nfsd4_create_session--*/
__be32 nfsd4_destroy_session ( struct svc_rqst * r , struct nfsd4_compound_state * cstate , struct nfsd4_destroy_session * sessionid ) ; 
/*--nfsd4_destroy_session--*/
__be32 nfsd4_sequence ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_sequence * seq ) ; 
/*--nfsd4_sequence--*/
__be32 nfsd4_reclaim_complete ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_reclaim_complete * rc ) ; 
/*--nfsd4_reclaim_complete--*/
__be32 nfsd4_setclientid ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_setclientid * setclid ) ; 
/*--nfsd4_setclientid--*/
__be32 nfsd4_setclientid_confirm ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_setclientid_confirm * setclientid_confirm ) ; 
/*--nfsd4_setclientid_confirm--*/
void nfsd4_free_slabs ( void ) ; 
/*--nfsd4_free_slabs--*/
void nfs4_free_stateowner ( struct kref * kref ) ; 
/*--nfs4_free_stateowner--*/
__be32 nfsd4_process_open1 ( struct nfsd4_compound_state * cstate , struct nfsd4_open * open ) ; 
/*--nfsd4_process_open1--*/
__be32 nfsd4_process_open2 ( struct svc_rqst * rqstp , struct svc_fh * current_fh , struct nfsd4_open * open ) ; 
/*--nfsd4_process_open2--*/
__be32 nfsd4_renew ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , clientid_t * clid ) ; 
/*--nfsd4_renew--*/
__be32 nfs4_preprocess_stateid_op ( struct nfsd4_compound_state * cstate , stateid_t * stateid , int flags , struct file * * filpp ) ; 
/*--nfs4_preprocess_stateid_op--*/
__be32 nfsd4_open_confirm ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_open_confirm * oc ) ; 
/*--nfsd4_open_confirm--*/
__be32 nfsd4_open_downgrade ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_open_downgrade * od ) ; 
/*--nfsd4_open_downgrade--*/
__be32 nfsd4_close ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_close * close ) ; 
/*--nfsd4_close--*/
__be32 nfsd4_delegreturn ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_delegreturn * dr ) ; 
/*--nfsd4_delegreturn--*/
__be32 nfsd4_lock ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_lock * lock ) ; 
/*--nfsd4_lock--*/
__be32 nfsd4_lockt ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_lockt * lockt ) ; 
/*--nfsd4_lockt--*/
__be32 nfsd4_locku ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_locku * locku ) ; 
/*--nfsd4_locku--*/
__be32 nfsd4_release_lockowner ( struct svc_rqst * rqstp , struct nfsd4_compound_state * cstate , struct nfsd4_release_lockowner * rlockowner ) ; 
/*--nfsd4_release_lockowner--*/
int nfs4_has_reclaimed_state ( const char * name , bool use_exchange_id ) ; 
/*--nfs4_has_reclaimed_state--*/
int nfs4_client_to_reclaim ( const char * name ) ; 
/*--nfs4_client_to_reclaim--*/
__be32 nfs4_check_open_reclaim ( clientid_t * clid ) ; 
/*--nfs4_check_open_reclaim--*/
int nfs4_state_init ( void ) ; 
/*--nfs4_state_init--*/
int nfs4_state_start ( void ) ; 
/*--nfs4_state_start--*/
void nfs4_state_shutdown ( void ) ; 
/*--nfs4_state_shutdown--*/
int nfs4_reset_recoverydir ( char * recdir ) ; 
/*--nfs4_reset_recoverydir--*/
char * nfs4_recoverydir ( void ) ; 
/*--nfs4_recoverydir--*/
int nfsd_idmap_init ( void ) ; 
/*--nfsd_idmap_init--*/
void nfsd_idmap_shutdown ( void ) ; 
/*--nfsd_idmap_shutdown--*/
int nfsd_map_name_to_uid ( struct svc_rqst * rqstp , const char * name , size_t namelen , __u32 * id ) ; 
/*--nfsd_map_name_to_uid--*/
int nfsd_map_name_to_gid ( struct svc_rqst * rqstp , const char * name , size_t namelen , __u32 * id ) ; 
/*--nfsd_map_name_to_gid--*/
int nfsd_map_uid_to_name ( struct svc_rqst * rqstp , __u32 id , char * name ) ; 
/*--nfsd_map_uid_to_name--*/
int nfsd_map_gid_to_name ( struct svc_rqst * rqstp , __u32 id , char * name ) ; 
/*--nfsd_map_gid_to_name--*/
struct nfs4_acl * nfs4_acl_posix_to_nfsv4 ( struct posix_acl * pacl , struct posix_acl * dpacl , unsigned int flags ) ; 
/*--nfs4_acl_posix_to_nfsv4--*/
int nfs4_acl_nfsv4_to_posix ( struct nfs4_acl * acl , struct posix_acl * * pacl , struct posix_acl * * dpacl , unsigned int flags ) ; 
/*--nfs4_acl_nfsv4_to_posix--*/
struct nfs4_acl * nfs4_acl_new ( int n ) ; 
/*--nfs4_acl_new--*/
int nfs4_acl_get_whotype ( char * p , u32 len ) ; 
/*--nfs4_acl_get_whotype--*/
int nfs4_acl_write_who ( int who , char * p ) ; 
/*--nfs4_acl_write_who--*/
int setup_callback_client ( struct nfs4_client * clp , struct nfs4_cb_conn * cb ) ; 
/*--setup_callback_client--*/
int set_callback_cred ( void ) ; 
/*--set_callback_cred--*/
void do_probe_callback ( struct nfs4_client * clp ) ; 
/*--do_probe_callback--*/
void nfsd4_probe_callback ( struct nfs4_client * clp , struct nfs4_cb_conn * cb ) ; 
/*--nfsd4_probe_callback--*/
int nfsd4_create_callback_queue ( void ) ; 
/*--nfsd4_create_callback_queue--*/
void nfsd4_destroy_callback_queue ( void ) ; 
/*--nfsd4_destroy_callback_queue--*/
void nfsd4_set_callback_client ( struct nfs4_client * clp , struct rpc_clnt * new ) ; 
/*--nfsd4_set_callback_client--*/
void nfsd4_do_callback_rpc ( struct work_struct * w ) ; 
/*--nfsd4_do_callback_rpc--*/
void nfsd4_cb_recall ( struct nfs4_delegation * dp ) ; 
/*--nfsd4_cb_recall--*/
__be32 nfs4_make_rec_clidname ( char * dname , struct xdr_netobj * clname ) ; 
/*--nfs4_make_rec_clidname--*/
int nfsd4_create_clid_dir ( struct nfs4_client * clp ) ; 
/*--nfsd4_create_clid_dir--*/
void nfsd4_remove_clid_dir ( struct nfs4_client * clp ) ; 
/*--nfsd4_remove_clid_dir--*/
void nfsd4_recdir_purge_old ( void ) ; 
/*--nfsd4_recdir_purge_old--*/
int nfsd4_recdir_load ( void ) ; 
/*--nfsd4_recdir_load--*/
void nfsd4_init_recdir ( char * rec_dirname ) ; 
/*--nfsd4_init_recdir--*/
void nfsd4_shutdown_recdir ( void ) ; 
/*--nfsd4_shutdown_recdir--*/
int nilfs_get_block ( struct inode * inode , sector_t blkoff , struct buffer_head * bh_result , int create ) ; 
/*--nilfs_get_block--*/
struct inode * nilfs_new_inode ( struct inode * dir , int mode ) ; 
/*--nilfs_new_inode--*/
void nilfs_free_inode ( struct inode * inode ) ; 
/*--nilfs_free_inode--*/
void nilfs_set_inode_flags ( struct inode * inode ) ; 
/*--nilfs_set_inode_flags--*/
int nilfs_read_inode_common ( struct inode * inode , struct nilfs_inode * raw_inode ) ; 
/*--nilfs_read_inode_common--*/
struct inode * nilfs_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--nilfs_iget--*/
void nilfs_write_inode_common ( struct inode * inode , struct nilfs_inode * raw_inode , int has_bmap ) ; 
/*--nilfs_write_inode_common--*/
void nilfs_update_inode ( struct inode * inode , struct buffer_head * ibh ) ; 
/*--nilfs_update_inode--*/
void nilfs_truncate ( struct inode * inode ) ; 
/*--nilfs_truncate--*/
void nilfs_delete_inode ( struct inode * inode ) ; 
/*--nilfs_delete_inode--*/
int nilfs_setattr ( struct dentry * dentry , struct iattr * iattr ) ; 
/*--nilfs_setattr--*/
int nilfs_load_inode_block ( struct nilfs_sb_info * sbi , struct inode * inode , struct buffer_head * * pbh ) ; 
/*--nilfs_load_inode_block--*/
int nilfs_inode_dirty ( struct inode * inode ) ; 
/*--nilfs_inode_dirty--*/
int nilfs_set_file_dirty ( struct nilfs_sb_info * sbi , struct inode * inode , unsigned nr_dirty ) ; 
/*--nilfs_set_file_dirty--*/
int nilfs_mark_inode_dirty ( struct inode * inode ) ; 
/*--nilfs_mark_inode_dirty--*/
void nilfs_dirty_inode ( struct inode * inode ) ; 
/*--nilfs_dirty_inode--*/
int nilfs_sync_file ( struct file * file , int datasync ) ; 
/*--nilfs_sync_file--*/
struct nilfs_dir_entry * nilfs_find_entry ( struct inode * dir , const struct qstr * qstr , struct page * * res_page ) ; 
/*--nilfs_find_entry--*/
struct nilfs_dir_entry * nilfs_dotdot ( struct inode * dir , struct page * * p ) ; 
/*--nilfs_dotdot--*/
ino_t nilfs_inode_by_name ( struct inode * dir , const struct qstr * qstr ) ; 
/*--nilfs_inode_by_name--*/
void nilfs_set_link ( struct inode * dir , struct nilfs_dir_entry * de , struct page * page , struct inode * inode ) ; 
/*--nilfs_set_link--*/
int nilfs_add_link ( struct dentry * dentry , struct inode * inode ) ; 
/*--nilfs_add_link--*/
int nilfs_delete_entry ( struct nilfs_dir_entry * dir , struct page * page ) ; 
/*--nilfs_delete_entry--*/
int nilfs_make_empty ( struct inode * inode , struct inode * parent ) ; 
/*--nilfs_make_empty--*/
int nilfs_empty_dir ( struct inode * inode ) ; 
/*--nilfs_empty_dir--*/
void nilfs_error ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--nilfs_error--*/
void nilfs_warning ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--nilfs_warning--*/
struct inode * nilfs_alloc_inode_common ( struct the_nilfs * nilfs ) ; 
/*--nilfs_alloc_inode_common--*/
struct inode * nilfs_alloc_inode ( struct super_block * sb ) ; 
/*--nilfs_alloc_inode--*/
void nilfs_destroy_inode ( struct inode * inode ) ; 
/*--nilfs_destroy_inode--*/
int nilfs_commit_super ( struct nilfs_sb_info * sbi , int dupsb ) ; 
/*--nilfs_commit_super--*/
int nilfs_attach_checkpoint ( struct nilfs_sb_info * sbi , __u64 cno ) ; 
/*--nilfs_attach_checkpoint--*/
void nilfs_detach_checkpoint ( struct nilfs_sb_info * sbi ) ; 
/*--nilfs_detach_checkpoint--*/
struct nilfs_super_block * nilfs_read_super_block ( struct super_block * sb , u64 pos , int blocksize , struct buffer_head * * pbh ) ; 
/*--nilfs_read_super_block--*/
int nilfs_store_magic_and_option ( struct super_block * sb , struct nilfs_super_block * sbp , char * data ) ; 
/*--nilfs_store_magic_and_option--*/
struct dentry * nilfs_get_parent ( struct dentry * child ) ; 
/*--nilfs_get_parent--*/
void nilfs_mark_buffer_dirty ( struct buffer_head * bh ) ; 
/*--nilfs_mark_buffer_dirty--*/
struct buffer_head * nilfs_grab_buffer ( struct inode * inode , struct address_space * mapping , unsigned long blkoff , unsigned long b_state ) ; 
/*--nilfs_grab_buffer--*/
void nilfs_forget_buffer ( struct buffer_head * bh ) ; 
/*--nilfs_forget_buffer--*/
void nilfs_copy_buffer ( struct buffer_head * dbh , struct buffer_head * sbh ) ; 
/*--nilfs_copy_buffer--*/
int nilfs_page_buffers_clean ( struct page * page ) ; 
/*--nilfs_page_buffers_clean--*/
void nilfs_page_bug ( struct page * page ) ; 
/*--nilfs_page_bug--*/
struct page * nilfs_alloc_private_page ( struct block_device * bdev , int size , unsigned long state ) ; 
/*--nilfs_alloc_private_page--*/
void nilfs_free_private_page ( struct page * page ) ; 
/*--nilfs_free_private_page--*/
int nilfs_copy_dirty_pages ( struct address_space * dmap , struct address_space * smap ) ; 
/*--nilfs_copy_dirty_pages--*/
void nilfs_copy_back_pages ( struct address_space * dmap , struct address_space * smap ) ; 
/*--nilfs_copy_back_pages--*/
void nilfs_clear_dirty_pages ( struct address_space * mapping ) ; 
/*--nilfs_clear_dirty_pages--*/
unsigned nilfs_page_count_clean_buffers ( struct page * page , unsigned from , unsigned to ) ; 
/*--nilfs_page_count_clean_buffers--*/
int __nilfs_clear_page_dirty ( struct page * page ) ; 
/*--__nilfs_clear_page_dirty--*/
int nilfs_mdt_get_block ( struct inode * inode , unsigned long blkoff , int create , void ( * init_block ) ( struct inode * , struct buffer_head * , void * ) , struct buffer_head * * out_bh ) ; 
/*--nilfs_mdt_get_block--*/
int nilfs_mdt_delete_block ( struct inode * inode , unsigned long block ) ; 
/*--nilfs_mdt_delete_block--*/
int nilfs_mdt_forget_block ( struct inode * inode , unsigned long block ) ; 
/*--nilfs_mdt_forget_block--*/
int nilfs_mdt_mark_block_dirty ( struct inode * inode , unsigned long block ) ; 
/*--nilfs_mdt_mark_block_dirty--*/
int nilfs_mdt_fetch_dirty ( struct inode * inode ) ; 
/*--nilfs_mdt_fetch_dirty--*/
struct inode * nilfs_mdt_new_common ( struct the_nilfs * nilfs , struct super_block * sb , ino_t ino , gfp_t gfp_mask , size_t objsz ) ; 
/*--nilfs_mdt_new_common--*/
struct inode * nilfs_mdt_new ( struct the_nilfs * nilfs , struct super_block * sb , ino_t ino , size_t objsz ) ; 
/*--nilfs_mdt_new--*/
void nilfs_mdt_set_entry_size ( struct inode * inode , unsigned entry_size , unsigned header_size ) ; 
/*--nilfs_mdt_set_entry_size--*/
void nilfs_mdt_set_shadow ( struct inode * orig , struct inode * shadow ) ; 
/*--nilfs_mdt_set_shadow--*/
void nilfs_mdt_destroy ( struct inode * inode ) ; 
/*--nilfs_mdt_destroy--*/
void nilfs_btnode_cache_init_once ( struct address_space * btnc ) ; 
/*--nilfs_btnode_cache_init_once--*/
void nilfs_btnode_cache_init ( struct address_space * btnc , struct backing_dev_info * bdi ) ; 
/*--nilfs_btnode_cache_init--*/
void nilfs_btnode_cache_clear ( struct address_space * btnc ) ; 
/*--nilfs_btnode_cache_clear--*/
struct buffer_head * nilfs_btnode_create_block ( struct address_space * btnc , __u64 blocknr ) ; 
/*--nilfs_btnode_create_block--*/
int nilfs_btnode_submit_block ( struct address_space * btnc , __u64 blocknr , sector_t pblocknr , struct buffer_head * * pbh ) ; 
/*--nilfs_btnode_submit_block--*/
void nilfs_btnode_delete ( struct buffer_head * bh ) ; 
/*--nilfs_btnode_delete--*/
int nilfs_btnode_prepare_change_key ( struct address_space * btnc , struct nilfs_btnode_chkey_ctxt * ctxt ) ; 
/*--nilfs_btnode_prepare_change_key--*/
void nilfs_btnode_commit_change_key ( struct address_space * btnc , struct nilfs_btnode_chkey_ctxt * ctxt ) ; 
/*--nilfs_btnode_commit_change_key--*/
void nilfs_btnode_abort_change_key ( struct address_space * btnc , struct nilfs_btnode_chkey_ctxt * ctxt ) ; 
/*--nilfs_btnode_abort_change_key--*/
struct inode * nilfs_bmap_get_dat ( const struct nilfs_bmap * bmap ) ; 
/*--nilfs_bmap_get_dat--*/
int nilfs_bmap_lookup_at_level ( struct nilfs_bmap * bmap , __u64 key , int level , __u64 * ptrp ) ; 
/*--nilfs_bmap_lookup_at_level--*/
int nilfs_bmap_lookup_contig ( struct nilfs_bmap * bmap , __u64 key , __u64 * ptrp , unsigned maxblocks ) ; 
/*--nilfs_bmap_lookup_contig--*/
int nilfs_bmap_insert ( struct nilfs_bmap * bmap , unsigned long key , unsigned long rec ) ; 
/*--nilfs_bmap_insert--*/
int nilfs_bmap_last_key ( struct nilfs_bmap * bmap , unsigned long * key ) ; 
/*--nilfs_bmap_last_key--*/
int nilfs_bmap_delete ( struct nilfs_bmap * bmap , unsigned long key ) ; 
/*--nilfs_bmap_delete--*/
int nilfs_bmap_truncate ( struct nilfs_bmap * bmap , unsigned long key ) ; 
/*--nilfs_bmap_truncate--*/
void nilfs_bmap_clear ( struct nilfs_bmap * bmap ) ; 
/*--nilfs_bmap_clear--*/
int nilfs_bmap_propagate ( struct nilfs_bmap * bmap , struct buffer_head * bh ) ; 
/*--nilfs_bmap_propagate--*/
void nilfs_bmap_lookup_dirty_buffers ( struct nilfs_bmap * bmap , struct list_head * listp ) ; 
/*--nilfs_bmap_lookup_dirty_buffers--*/
int nilfs_bmap_assign ( struct nilfs_bmap * bmap , struct buffer_head * * bh , unsigned long blocknr , union nilfs_binfo * binfo ) ; 
/*--nilfs_bmap_assign--*/
int nilfs_bmap_mark ( struct nilfs_bmap * bmap , __u64 key , int level ) ; 
/*--nilfs_bmap_mark--*/
int nilfs_bmap_test_and_clear_dirty ( struct nilfs_bmap * bmap ) ; 
/*--nilfs_bmap_test_and_clear_dirty--*/
void nilfs_bmap_add_blocks ( const struct nilfs_bmap * bmap , int n ) ; 
/*--nilfs_bmap_add_blocks--*/
void nilfs_bmap_sub_blocks ( const struct nilfs_bmap * bmap , int n ) ; 
/*--nilfs_bmap_sub_blocks--*/
__u64 nilfs_bmap_data_get_key ( const struct nilfs_bmap * bmap , const struct buffer_head * bh ) ; 
/*--nilfs_bmap_data_get_key--*/
__u64 nilfs_bmap_find_target_seq ( const struct nilfs_bmap * bmap , __u64 key ) ; 
/*--nilfs_bmap_find_target_seq--*/
__u64 nilfs_bmap_find_target_in_group ( const struct nilfs_bmap * bmap ) ; 
/*--nilfs_bmap_find_target_in_group--*/
int nilfs_bmap_read ( struct nilfs_bmap * bmap , struct nilfs_inode * raw_inode ) ; 
/*--nilfs_bmap_read--*/
void nilfs_bmap_write ( struct nilfs_bmap * bmap , struct nilfs_inode * raw_inode ) ; 
/*--nilfs_bmap_write--*/
void nilfs_bmap_init_gc ( struct nilfs_bmap * bmap ) ; 
/*--nilfs_bmap_init_gc--*/
void nilfs_bmap_init_gcdat ( struct nilfs_bmap * gcbmap , struct nilfs_bmap * bmap ) ; 
/*--nilfs_bmap_init_gcdat--*/
void nilfs_bmap_commit_gcdat ( struct nilfs_bmap * gcbmap , struct nilfs_bmap * bmap ) ; 
/*--nilfs_bmap_commit_gcdat--*/
int nilfs_btree_convert_and_insert ( struct nilfs_bmap * bmap , __u64 key , __u64 ptr , const __u64 * keys , const __u64 * ptrs , int n ) ; 
/*--nilfs_btree_convert_and_insert--*/
int nilfs_btree_init ( struct nilfs_bmap * bmap ) ; 
/*--nilfs_btree_init--*/
void nilfs_btree_init_gc ( struct nilfs_bmap * bmap ) ; 
/*--nilfs_btree_init_gc--*/
int nilfs_direct_delete_and_convert ( struct nilfs_bmap * bmap , __u64 key , __u64 * keys , __u64 * ptrs , int n ) ; 
/*--nilfs_direct_delete_and_convert--*/
int nilfs_direct_init ( struct nilfs_bmap * bmap ) ; 
/*--nilfs_direct_init--*/
int nilfs_dat_prepare_alloc ( struct inode * dat , struct nilfs_palloc_req * req ) ; 
/*--nilfs_dat_prepare_alloc--*/
void nilfs_dat_commit_alloc ( struct inode * dat , struct nilfs_palloc_req * req ) ; 
/*--nilfs_dat_commit_alloc--*/
void nilfs_dat_abort_alloc ( struct inode * dat , struct nilfs_palloc_req * req ) ; 
/*--nilfs_dat_abort_alloc--*/
void nilfs_dat_commit_free ( struct inode * dat , struct nilfs_palloc_req * req ) ; 
/*--nilfs_dat_commit_free--*/
int nilfs_dat_prepare_start ( struct inode * dat , struct nilfs_palloc_req * req ) ; 
/*--nilfs_dat_prepare_start--*/
void nilfs_dat_commit_start ( struct inode * dat , struct nilfs_palloc_req * req , sector_t blocknr ) ; 
/*--nilfs_dat_commit_start--*/
int nilfs_dat_prepare_end ( struct inode * dat , struct nilfs_palloc_req * req ) ; 
/*--nilfs_dat_prepare_end--*/
void nilfs_dat_commit_end ( struct inode * dat , struct nilfs_palloc_req * req , int dead ) ; 
/*--nilfs_dat_commit_end--*/
void nilfs_dat_abort_end ( struct inode * dat , struct nilfs_palloc_req * req ) ; 
/*--nilfs_dat_abort_end--*/
int nilfs_dat_prepare_update ( struct inode * dat , struct nilfs_palloc_req * oldreq , struct nilfs_palloc_req * newreq ) ; 
/*--nilfs_dat_prepare_update--*/
void nilfs_dat_commit_update ( struct inode * dat , struct nilfs_palloc_req * oldreq , struct nilfs_palloc_req * newreq , int dead ) ; 
/*--nilfs_dat_commit_update--*/
void nilfs_dat_abort_update ( struct inode * dat , struct nilfs_palloc_req * oldreq , struct nilfs_palloc_req * newreq ) ; 
/*--nilfs_dat_abort_update--*/
int nilfs_dat_mark_dirty ( struct inode * dat , __u64 vblocknr ) ; 
/*--nilfs_dat_mark_dirty--*/
int nilfs_dat_freev ( struct inode * dat , __u64 * vblocknrs , size_t nitems ) ; 
/*--nilfs_dat_freev--*/
int nilfs_dat_move ( struct inode * dat , __u64 vblocknr , sector_t blocknr ) ; 
/*--nilfs_dat_move--*/
int nilfs_dat_translate ( struct inode * dat , __u64 vblocknr , sector_t * blocknrp ) ; 
/*--nilfs_dat_translate--*/
ssize_t nilfs_dat_get_vinfo ( struct inode * dat , void * buf , unsigned visz , size_t nvi ) ; 
/*--nilfs_dat_get_vinfo--*/
int nilfs_dat_read ( struct inode * dat , struct nilfs_inode * raw_inode ) ; 
/*--nilfs_dat_read--*/
struct inode * nilfs_dat_new ( struct the_nilfs * nilfs , size_t entry_size ) ; 
/*--nilfs_dat_new--*/
int nilfs_read_super_root_block ( struct super_block * sb , sector_t sr_block , struct buffer_head * * pbh , int check ) ; 
/*--nilfs_read_super_root_block--*/
void nilfs_dispose_segment_list ( struct list_head * head ) ; 
/*--nilfs_dispose_segment_list--*/
int nilfs_recover_logical_segments ( struct the_nilfs * nilfs , struct nilfs_sb_info * sbi , struct nilfs_recovery_info * ri ) ; 
/*--nilfs_recover_logical_segments--*/
int nilfs_search_super_root ( struct the_nilfs * nilfs , struct nilfs_sb_info * sbi , struct nilfs_recovery_info * ri ) ; 
/*--nilfs_search_super_root--*/
void nilfs_set_last_segment ( struct the_nilfs * nilfs , sector_t start_blocknr , u64 seq , __u64 cno ) ; 
/*--nilfs_set_last_segment--*/
struct the_nilfs * find_or_create_nilfs ( struct block_device * bdev ) ; 
/*--find_or_create_nilfs--*/
void put_nilfs ( struct the_nilfs * nilfs ) ; 
/*--put_nilfs--*/
int load_nilfs ( struct the_nilfs * nilfs , struct nilfs_sb_info * sbi ) ; 
/*--load_nilfs--*/
void nilfs_fall_back_super_block ( struct the_nilfs * nilfs ) ; 
/*--nilfs_fall_back_super_block--*/
void nilfs_swap_super_block ( struct the_nilfs * nilfs ) ; 
/*--nilfs_swap_super_block--*/
int init_nilfs ( struct the_nilfs * nilfs , struct nilfs_sb_info * sbi , char * data ) ; 
/*--init_nilfs--*/
int nilfs_discard_segments ( struct the_nilfs * nilfs , __u64 * segnump , size_t nsegs ) ; 
/*--nilfs_discard_segments--*/
int nilfs_count_free_blocks ( struct the_nilfs * nilfs , sector_t * nblocks ) ; 
/*--nilfs_count_free_blocks--*/
int nilfs_near_disk_full ( struct the_nilfs * nilfs ) ; 
/*--nilfs_near_disk_full--*/
struct nilfs_sb_info * nilfs_find_sbinfo ( struct the_nilfs * nilfs , int rw_mount , __u64 cno ) ; 
/*--nilfs_find_sbinfo--*/
int nilfs_checkpoint_is_mounted ( struct the_nilfs * nilfs , __u64 cno , int snapshot_mount ) ; 
/*--nilfs_checkpoint_is_mounted--*/
struct nilfs_segment_buffer * nilfs_segbuf_new ( struct super_block * sb ) ; 
/*--nilfs_segbuf_new--*/
void nilfs_segbuf_free ( struct nilfs_segment_buffer * segbuf ) ; 
/*--nilfs_segbuf_free--*/
void nilfs_segbuf_map ( struct nilfs_segment_buffer * segbuf , __u64 segnum , unsigned long offset , struct the_nilfs * nilfs ) ; 
/*--nilfs_segbuf_map--*/
void nilfs_segbuf_map_cont ( struct nilfs_segment_buffer * segbuf , struct nilfs_segment_buffer * prev ) ; 
/*--nilfs_segbuf_map_cont--*/
void nilfs_segbuf_set_next_segnum ( struct nilfs_segment_buffer * segbuf , __u64 nextnum , struct the_nilfs * nilfs ) ; 
/*--nilfs_segbuf_set_next_segnum--*/
int nilfs_segbuf_extend_segsum ( struct nilfs_segment_buffer * segbuf ) ; 
/*--nilfs_segbuf_extend_segsum--*/
int nilfs_segbuf_extend_payload ( struct nilfs_segment_buffer * segbuf , struct buffer_head * * bhp ) ; 
/*--nilfs_segbuf_extend_payload--*/
int nilfs_segbuf_reset ( struct nilfs_segment_buffer * segbuf , unsigned flags , time_t ctime , __u64 cno ) ; 
/*--nilfs_segbuf_reset--*/
void nilfs_segbuf_fill_in_segsum ( struct nilfs_segment_buffer * segbuf ) ; 
/*--nilfs_segbuf_fill_in_segsum--*/
void nilfs_clear_logs ( struct list_head * logs ) ; 
/*--nilfs_clear_logs--*/
void nilfs_truncate_logs ( struct list_head * logs , struct nilfs_segment_buffer * last ) ; 
/*--nilfs_truncate_logs--*/
int nilfs_write_logs ( struct list_head * logs , struct the_nilfs * nilfs ) ; 
/*--nilfs_write_logs--*/
int nilfs_wait_on_logs ( struct list_head * logs ) ; 
/*--nilfs_wait_on_logs--*/
void nilfs_add_checksums_on_logs ( struct list_head * logs , u32 seed ) ; 
/*--nilfs_add_checksums_on_logs--*/
int nilfs_transaction_begin ( struct super_block * sb , struct nilfs_transaction_info * ti , int vacancy_check ) ; 
/*--nilfs_transaction_begin--*/
int nilfs_transaction_commit ( struct super_block * sb ) ; 
/*--nilfs_transaction_commit--*/
void nilfs_transaction_abort ( struct super_block * sb ) ; 
/*--nilfs_transaction_abort--*/
void nilfs_relax_pressure_in_lock ( struct super_block * sb ) ; 
/*--nilfs_relax_pressure_in_lock--*/
void nilfs_flush_segment ( struct super_block * sb , ino_t ino ) ; 
/*--nilfs_flush_segment--*/
int nilfs_construct_segment ( struct super_block * sb ) ; 
/*--nilfs_construct_segment--*/
int nilfs_construct_dsync_segment ( struct super_block * sb , struct inode * inode , loff_t start , loff_t end ) ; 
/*--nilfs_construct_dsync_segment--*/
int nilfs_clean_segments ( struct super_block * sb , struct nilfs_argv * argv , void * * kbufs ) ; 
/*--nilfs_clean_segments--*/
int nilfs_attach_segment_constructor ( struct nilfs_sb_info * sbi ) ; 
/*--nilfs_attach_segment_constructor--*/
void nilfs_detach_segment_constructor ( struct nilfs_sb_info * sbi ) ; 
/*--nilfs_detach_segment_constructor--*/
int nilfs_cpfile_get_checkpoint ( struct inode * cpfile , __u64 cno , int create , struct nilfs_checkpoint * * cpp , struct buffer_head * * bhp ) ; 
/*--nilfs_cpfile_get_checkpoint--*/
void nilfs_cpfile_put_checkpoint ( struct inode * cpfile , __u64 cno , struct buffer_head * bh ) ; 
/*--nilfs_cpfile_put_checkpoint--*/
int nilfs_cpfile_delete_checkpoints ( struct inode * cpfile , __u64 start , __u64 end ) ; 
/*--nilfs_cpfile_delete_checkpoints--*/
ssize_t nilfs_cpfile_get_cpinfo ( struct inode * cpfile , __u64 * cnop , int mode , void * buf , unsigned cisz , size_t nci ) ; 
/*--nilfs_cpfile_get_cpinfo--*/
int nilfs_cpfile_delete_checkpoint ( struct inode * cpfile , __u64 cno ) ; 
/*--nilfs_cpfile_delete_checkpoint--*/
int nilfs_cpfile_is_snapshot ( struct inode * cpfile , __u64 cno ) ; 
/*--nilfs_cpfile_is_snapshot--*/
int nilfs_cpfile_change_cpmode ( struct inode * cpfile , __u64 cno , int mode ) ; 
/*--nilfs_cpfile_change_cpmode--*/
int nilfs_cpfile_get_stat ( struct inode * cpfile , struct nilfs_cpstat * cpstat ) ; 
/*--nilfs_cpfile_get_stat--*/
int nilfs_cpfile_read ( struct inode * cpfile , struct nilfs_inode * raw_inode ) ; 
/*--nilfs_cpfile_read--*/
struct inode * nilfs_cpfile_new ( struct the_nilfs * nilfs , size_t cpsize ) ; 
/*--nilfs_cpfile_new--*/
unsigned long nilfs_sufile_get_ncleansegs ( struct inode * sufile ) ; 
/*--nilfs_sufile_get_ncleansegs--*/
int nilfs_sufile_updatev ( struct inode * sufile , __u64 * segnumv , size_t nsegs , int create , size_t * ndone , void ( * dofunc ) ( struct inode * , __u64 , struct buffer_head * , struct buffer_head * ) ) ; 
/*--nilfs_sufile_updatev--*/
int nilfs_sufile_update ( struct inode * sufile , __u64 segnum , int create , void ( * dofunc ) ( struct inode * , __u64 , struct buffer_head * , struct buffer_head * ) ) ; 
/*--nilfs_sufile_update--*/
int nilfs_sufile_alloc ( struct inode * sufile , __u64 * segnump ) ; 
/*--nilfs_sufile_alloc--*/
void nilfs_sufile_do_cancel_free ( struct inode * sufile , __u64 segnum , struct buffer_head * header_bh , struct buffer_head * su_bh ) ; 
/*--nilfs_sufile_do_cancel_free--*/
void nilfs_sufile_do_scrap ( struct inode * sufile , __u64 segnum , struct buffer_head * header_bh , struct buffer_head * su_bh ) ; 
/*--nilfs_sufile_do_scrap--*/
void nilfs_sufile_do_free ( struct inode * sufile , __u64 segnum , struct buffer_head * header_bh , struct buffer_head * su_bh ) ; 
/*--nilfs_sufile_do_free--*/
int nilfs_sufile_mark_dirty ( struct inode * sufile , __u64 segnum ) ; 
/*--nilfs_sufile_mark_dirty--*/
int nilfs_sufile_set_segment_usage ( struct inode * sufile , __u64 segnum , unsigned long nblocks , time_t modtime ) ; 
/*--nilfs_sufile_set_segment_usage--*/
int nilfs_sufile_get_stat ( struct inode * sufile , struct nilfs_sustat * sustat ) ; 
/*--nilfs_sufile_get_stat--*/
void nilfs_sufile_do_set_error ( struct inode * sufile , __u64 segnum , struct buffer_head * header_bh , struct buffer_head * su_bh ) ; 
/*--nilfs_sufile_do_set_error--*/
ssize_t nilfs_sufile_get_suinfo ( struct inode * sufile , __u64 segnum , void * buf , unsigned sisz , size_t nsi ) ; 
/*--nilfs_sufile_get_suinfo--*/
int nilfs_sufile_read ( struct inode * sufile , struct nilfs_inode * raw_inode ) ; 
/*--nilfs_sufile_read--*/
struct inode * nilfs_sufile_new ( struct the_nilfs * nilfs , size_t susize ) ; 
/*--nilfs_sufile_new--*/
int nilfs_ifile_create_inode ( struct inode * ifile , ino_t * out_ino , struct buffer_head * * out_bh ) ; 
/*--nilfs_ifile_create_inode--*/
int nilfs_ifile_delete_inode ( struct inode * ifile , ino_t ino ) ; 
/*--nilfs_ifile_delete_inode--*/
int nilfs_ifile_get_inode_block ( struct inode * ifile , ino_t ino , struct buffer_head * * out_bh ) ; 
/*--nilfs_ifile_get_inode_block--*/
struct inode * nilfs_ifile_new ( struct nilfs_sb_info * sbi , size_t inode_size ) ; 
/*--nilfs_ifile_new--*/
int nilfs_palloc_init_blockgroup ( struct inode * inode , unsigned entry_size ) ; 
/*--nilfs_palloc_init_blockgroup--*/
int nilfs_palloc_get_entry_block ( struct inode * inode , __u64 nr , int create , struct buffer_head * * bhp ) ; 
/*--nilfs_palloc_get_entry_block--*/
void * nilfs_palloc_block_get_entry ( const struct inode * inode , __u64 nr , const struct buffer_head * bh , void * kaddr ) ; 
/*--nilfs_palloc_block_get_entry--*/
int nilfs_palloc_prepare_alloc_entry ( struct inode * inode , struct nilfs_palloc_req * req ) ; 
/*--nilfs_palloc_prepare_alloc_entry--*/
void nilfs_palloc_commit_alloc_entry ( struct inode * inode , struct nilfs_palloc_req * req ) ; 
/*--nilfs_palloc_commit_alloc_entry--*/
void nilfs_palloc_commit_free_entry ( struct inode * inode , struct nilfs_palloc_req * req ) ; 
/*--nilfs_palloc_commit_free_entry--*/
void nilfs_palloc_abort_alloc_entry ( struct inode * inode , struct nilfs_palloc_req * req ) ; 
/*--nilfs_palloc_abort_alloc_entry--*/
int nilfs_palloc_prepare_free_entry ( struct inode * inode , struct nilfs_palloc_req * req ) ; 
/*--nilfs_palloc_prepare_free_entry--*/
void nilfs_palloc_abort_free_entry ( struct inode * inode , struct nilfs_palloc_req * req ) ; 
/*--nilfs_palloc_abort_free_entry--*/
int nilfs_palloc_freev ( struct inode * inode , __u64 * entry_nrs , size_t nitems ) ; 
/*--nilfs_palloc_freev--*/
void nilfs_palloc_setup_cache ( struct inode * inode , struct nilfs_palloc_cache * cache ) ; 
/*--nilfs_palloc_setup_cache--*/
void nilfs_palloc_clear_cache ( struct inode * inode ) ; 
/*--nilfs_palloc_clear_cache--*/
void nilfs_palloc_destroy_cache ( struct inode * inode ) ; 
/*--nilfs_palloc_destroy_cache--*/
int nilfs_gccache_submit_read_data ( struct inode * inode , sector_t blkoff , sector_t pbn , __u64 vbn , struct buffer_head * * out_bh ) ; 
/*--nilfs_gccache_submit_read_data--*/
int nilfs_gccache_submit_read_node ( struct inode * inode , sector_t pbn , __u64 vbn , struct buffer_head * * out_bh ) ; 
/*--nilfs_gccache_submit_read_node--*/
int nilfs_gccache_wait_and_mark_dirty ( struct buffer_head * bh ) ; 
/*--nilfs_gccache_wait_and_mark_dirty--*/
int nilfs_init_gccache ( struct the_nilfs * nilfs ) ; 
/*--nilfs_init_gccache--*/
void nilfs_destroy_gccache ( struct the_nilfs * nilfs ) ; 
/*--nilfs_destroy_gccache--*/
struct inode * nilfs_gc_iget ( struct the_nilfs * nilfs , ino_t ino , __u64 cno ) ; 
/*--nilfs_gc_iget--*/
void nilfs_clear_gcinode ( struct inode * inode ) ; 
/*--nilfs_clear_gcinode--*/
void nilfs_remove_all_gcinode ( struct the_nilfs * nilfs ) ; 
/*--nilfs_remove_all_gcinode--*/
int nilfs_ioctl_prepare_clean_segments ( struct the_nilfs * nilfs , struct nilfs_argv * argv , void * * kbufs ) ; 
/*--nilfs_ioctl_prepare_clean_segments--*/
long nilfs_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--nilfs_ioctl--*/
int nilfs_init_gcdat_inode ( struct the_nilfs * nilfs ) ; 
/*--nilfs_init_gcdat_inode--*/
void nilfs_commit_gcdat_inode ( struct the_nilfs * nilfs ) ; 
/*--nilfs_commit_gcdat_inode--*/
void nilfs_clear_gcdat_inode ( struct the_nilfs * nilfs ) ; 
/*--nilfs_clear_gcdat_inode--*/
int ntfs_map_runlist_nolock ( ntfs_inode * ni , VCN vcn , ntfs_attr_search_ctx * ctx ) ; 
/*--ntfs_map_runlist_nolock--*/
int ntfs_map_runlist ( ntfs_inode * ni , VCN vcn ) ; 
/*--ntfs_map_runlist--*/
LCN ntfs_attr_vcn_to_lcn_nolock ( ntfs_inode * ni , const VCN vcn , const bool write_locked ) ; 
/*--ntfs_attr_vcn_to_lcn_nolock--*/
runlist_element * ntfs_attr_find_vcn_nolock ( ntfs_inode * ni , const VCN vcn , ntfs_attr_search_ctx * ctx ) ; 
/*--ntfs_attr_find_vcn_nolock--*/
int load_attribute_list ( ntfs_volume * vol , runlist * runlist , u8 * al_start , const s64 size , const s64 initialized_size ) ; 
/*--load_attribute_list--*/
int ntfs_attr_lookup ( const ATTR_TYPE type , const ntfschar * name , const u32 name_len , const IGNORE_CASE_BOOL ic , const VCN lowest_vcn , const u8 * val , const u32 val_len , ntfs_attr_search_ctx * ctx ) ; 
/*--ntfs_attr_lookup--*/
void ntfs_attr_reinit_search_ctx ( ntfs_attr_search_ctx * ctx ) ; 
/*--ntfs_attr_reinit_search_ctx--*/
ntfs_attr_search_ctx * ntfs_attr_get_search_ctx ( ntfs_inode * ni , MFT_RECORD * mrec ) ; 
/*--ntfs_attr_get_search_ctx--*/
void ntfs_attr_put_search_ctx ( ntfs_attr_search_ctx * ctx ) ; 
/*--ntfs_attr_put_search_ctx--*/
int ntfs_collate ( ntfs_volume * vol , COLLATION_RULE cr , const void * data1 , const int data1_len , const void * data2 , const int data2_len ) ; 
/*--ntfs_collate--*/
int allocate_compression_buffers ( void ) ; 
/*--allocate_compression_buffers--*/
void free_compression_buffers ( void ) ; 
/*--free_compression_buffers--*/
int ntfs_read_compressed_block ( struct page * page ) ; 
/*--ntfs_read_compressed_block--*/
void __ntfs_warning ( const char * function , const struct super_block * sb , const char * fmt , ... ) ; 
/*--__ntfs_warning--*/
void __ntfs_error ( const char * function , const struct super_block * sb , const char * fmt , ... ) ; 
/*--__ntfs_error--*/
MFT_REF ntfs_lookup_inode_by_name ( ntfs_inode * dir_ni , const ntfschar * uname , const int uname_len , ntfs_name * * res ) ; 
/*--ntfs_lookup_inode_by_name--*/
ntfs_index_context * ntfs_index_ctx_get ( ntfs_inode * idx_ni ) ; 
/*--ntfs_index_ctx_get--*/
void ntfs_index_ctx_put ( ntfs_index_context * ictx ) ; 
/*--ntfs_index_ctx_put--*/
int ntfs_index_lookup ( const void * key , const int key_len , ntfs_index_context * ictx ) ; 
/*--ntfs_index_lookup--*/
int ntfs_test_inode ( struct inode * vi , ntfs_attr * na ) ; 
/*--ntfs_test_inode--*/
struct inode * ntfs_iget ( struct super_block * sb , unsigned long mft_no ) ; 
/*--ntfs_iget--*/
struct inode * ntfs_attr_iget ( struct inode * base_vi , ATTR_TYPE type , ntfschar * name , u32 name_len ) ; 
/*--ntfs_attr_iget--*/
struct inode * ntfs_index_iget ( struct inode * base_vi , ntfschar * name , u32 name_len ) ; 
/*--ntfs_index_iget--*/
struct inode * ntfs_alloc_big_inode ( struct super_block * sb ) ; 
/*--ntfs_alloc_big_inode--*/
void ntfs_destroy_big_inode ( struct inode * inode ) ; 
/*--ntfs_destroy_big_inode--*/
void __ntfs_init_inode ( struct super_block * sb , ntfs_inode * ni ) ; 
/*--__ntfs_init_inode--*/
int ntfs_read_inode_mount ( struct inode * vi ) ; 
/*--ntfs_read_inode_mount--*/
void ntfs_clear_extent_inode ( ntfs_inode * ni ) ; 
/*--ntfs_clear_extent_inode--*/
void ntfs_clear_big_inode ( struct inode * vi ) ; 
/*--ntfs_clear_big_inode--*/
int ntfs_show_options ( struct seq_file * sf , struct vfsmount * mnt ) ; 
/*--ntfs_show_options--*/
MFT_RECORD * map_mft_record ( ntfs_inode * ni ) ; 
/*--map_mft_record--*/
void unmap_mft_record ( ntfs_inode * ni ) ; 
/*--unmap_mft_record--*/
MFT_RECORD * map_extent_mft_record ( ntfs_inode * base_ni , MFT_REF mref , ntfs_inode * * ntfs_ino ) ; 
/*--map_extent_mft_record--*/
int post_read_mst_fixup ( NTFS_RECORD * b , const u32 size ) ; 
/*--post_read_mst_fixup--*/
int pre_write_mst_fixup ( NTFS_RECORD * b , const u32 size ) ; 
/*--pre_write_mst_fixup--*/
void post_write_mst_fixup ( NTFS_RECORD * b ) ; 
/*--post_write_mst_fixup--*/
runlist_element * ntfs_runlists_merge ( runlist_element * drl , runlist_element * srl ) ; 
/*--ntfs_runlists_merge--*/
runlist_element * ntfs_mapping_pairs_decompress ( const ntfs_volume * vol , const ATTR_RECORD * attr , runlist_element * old_rl ) ; 
/*--ntfs_mapping_pairs_decompress--*/
LCN ntfs_rl_vcn_to_lcn ( const runlist_element * rl , const VCN vcn ) ; 
/*--ntfs_rl_vcn_to_lcn--*/
bool ntfs_are_names_equal ( const ntfschar * s1 , size_t s1_len , const ntfschar * s2 , size_t s2_len , const IGNORE_CASE_BOOL ic , const ntfschar * upcase , const u32 upcase_size ) ; 
/*--ntfs_are_names_equal--*/
int ntfs_collate_names ( const ntfschar * name1 , const u32 name1_len , const ntfschar * name2 , const u32 name2_len , const int err_val , const IGNORE_CASE_BOOL ic , const ntfschar * upcase , const u32 upcase_len ) ; 
/*--ntfs_collate_names--*/
int ntfs_ucsncmp ( const ntfschar * s1 , const ntfschar * s2 , size_t n ) ; 
/*--ntfs_ucsncmp--*/
int ntfs_ucsncasecmp ( const ntfschar * s1 , const ntfschar * s2 , size_t n , const ntfschar * upcase , const u32 upcase_size ) ; 
/*--ntfs_ucsncasecmp--*/
void ntfs_upcase_name ( ntfschar * name , u32 name_len , const ntfschar * upcase , const u32 upcase_len ) ; 
/*--ntfs_upcase_name--*/
void ntfs_file_upcase_value ( FILE_NAME_ATTR * file_name_attr , const ntfschar * upcase , const u32 upcase_len ) ; 
/*--ntfs_file_upcase_value--*/
int ntfs_file_compare_values ( FILE_NAME_ATTR * file_name_attr1 , FILE_NAME_ATTR * file_name_attr2 , const int err_val , const IGNORE_CASE_BOOL ic , const ntfschar * upcase , const u32 upcase_len ) ; 
/*--ntfs_file_compare_values--*/
int ntfs_nlstoucs ( const ntfs_volume * vol , const char * ins , const int ins_len , ntfschar * * outs ) ; 
/*--ntfs_nlstoucs--*/
int ntfs_ucstonls ( const ntfs_volume * vol , const ntfschar * ins , const int ins_len , unsigned char * * outs , int outs_len ) ; 
/*--ntfs_ucstonls--*/
ntfschar * generate_default_upcase ( void ) ; 
/*--generate_default_upcase--*/
void ocfs2_init_dinode_extent_tree ( struct ocfs2_extent_tree * et , struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_init_dinode_extent_tree--*/
void ocfs2_init_xattr_tree_extent_tree ( struct ocfs2_extent_tree * et , struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_init_xattr_tree_extent_tree--*/
void ocfs2_init_xattr_value_extent_tree ( struct ocfs2_extent_tree * et , struct ocfs2_caching_info * ci , struct ocfs2_xattr_value_buf * vb ) ; 
/*--ocfs2_init_xattr_value_extent_tree--*/
void ocfs2_init_dx_root_extent_tree ( struct ocfs2_extent_tree * et , struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_init_dx_root_extent_tree--*/
void ocfs2_init_refcount_extent_tree ( struct ocfs2_extent_tree * et , struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_init_refcount_extent_tree--*/
void ocfs2_reinit_path ( struct ocfs2_path * path , int keep_root ) ; 
/*--ocfs2_reinit_path--*/
void ocfs2_free_path ( struct ocfs2_path * path ) ; 
/*--ocfs2_free_path--*/
struct ocfs2_path * ocfs2_new_path_from_path ( struct ocfs2_path * path ) ; 
/*--ocfs2_new_path_from_path--*/
struct ocfs2_path * ocfs2_new_path_from_et ( struct ocfs2_extent_tree * et ) ; 
/*--ocfs2_new_path_from_et--*/
int ocfs2_path_bh_journal_access ( handle_t * handle , struct ocfs2_caching_info * ci , struct ocfs2_path * path , int idx ) ; 
/*--ocfs2_path_bh_journal_access--*/
int ocfs2_journal_access_path ( struct ocfs2_caching_info * ci , handle_t * handle , struct ocfs2_path * path ) ; 
/*--ocfs2_journal_access_path--*/
int ocfs2_search_extent_list ( struct ocfs2_extent_list * el , u32 v_cluster ) ; 
/*--ocfs2_search_extent_list--*/
int ocfs2_read_extent_block ( struct ocfs2_caching_info * ci , u64 eb_blkno , struct buffer_head * * bh ) ; 
/*--ocfs2_read_extent_block--*/
int ocfs2_num_free_extents ( struct ocfs2_super * osb , struct ocfs2_extent_tree * et ) ; 
/*--ocfs2_num_free_extents--*/
int ocfs2_find_subtree_root ( struct ocfs2_extent_tree * et , struct ocfs2_path * left , struct ocfs2_path * right ) ; 
/*--ocfs2_find_subtree_root--*/
int ocfs2_find_path ( struct ocfs2_caching_info * ci , struct ocfs2_path * path , u32 cpos ) ; 
/*--ocfs2_find_path--*/
int ocfs2_find_leaf ( struct ocfs2_caching_info * ci , struct ocfs2_extent_list * root_el , u32 cpos , struct buffer_head * * leaf_bh ) ; 
/*--ocfs2_find_leaf--*/
int ocfs2_find_cpos_for_left_leaf ( struct super_block * sb , struct ocfs2_path * path , u32 * cpos ) ; 
/*--ocfs2_find_cpos_for_left_leaf--*/
int ocfs2_find_cpos_for_right_leaf ( struct super_block * sb , struct ocfs2_path * path , u32 * cpos ) ; 
/*--ocfs2_find_cpos_for_right_leaf--*/
int ocfs2_insert_extent ( handle_t * handle , struct ocfs2_extent_tree * et , u32 cpos , u64 start_blk , u32 new_clusters , u8 flags , struct ocfs2_alloc_context * meta_ac ) ; 
/*--ocfs2_insert_extent--*/
int ocfs2_add_clusters_in_btree ( handle_t * handle , struct ocfs2_extent_tree * et , u32 * logical_offset , u32 clusters_to_add , int mark_unwritten , struct ocfs2_alloc_context * data_ac , struct ocfs2_alloc_context * meta_ac , enum ocfs2_alloc_restarted * reason_ret ) ; 
/*--ocfs2_add_clusters_in_btree--*/
int ocfs2_split_extent ( handle_t * handle , struct ocfs2_extent_tree * et , struct ocfs2_path * path , int split_index , struct ocfs2_extent_rec * split_rec , struct ocfs2_alloc_context * meta_ac , struct ocfs2_cached_dealloc_ctxt * dealloc ) ; 
/*--ocfs2_split_extent--*/
int ocfs2_change_extent_flag ( handle_t * handle , struct ocfs2_extent_tree * et , u32 cpos , u32 len , u32 phys , struct ocfs2_alloc_context * meta_ac , struct ocfs2_cached_dealloc_ctxt * dealloc , int new_flags , int clear_flags ) ; 
/*--ocfs2_change_extent_flag--*/
int ocfs2_mark_extent_written ( struct inode * inode , struct ocfs2_extent_tree * et , handle_t * handle , u32 cpos , u32 len , u32 phys , struct ocfs2_alloc_context * meta_ac , struct ocfs2_cached_dealloc_ctxt * dealloc ) ; 
/*--ocfs2_mark_extent_written--*/
int ocfs2_remove_extent ( handle_t * handle , struct ocfs2_extent_tree * et , u32 cpos , u32 len , struct ocfs2_alloc_context * meta_ac , struct ocfs2_cached_dealloc_ctxt * dealloc ) ; 
/*--ocfs2_remove_extent--*/
int ocfs2_remove_btree_range ( struct inode * inode , struct ocfs2_extent_tree * et , u32 cpos , u32 phys_cpos , u32 len , int flags , struct ocfs2_cached_dealloc_ctxt * dealloc , u64 refcount_loc ) ; 
/*--ocfs2_remove_btree_range--*/
int ocfs2_truncate_log_needs_flush ( struct ocfs2_super * osb ) ; 
/*--ocfs2_truncate_log_needs_flush--*/
int ocfs2_truncate_log_append ( struct ocfs2_super * osb , handle_t * handle , u64 start_blk , unsigned int num_clusters ) ; 
/*--ocfs2_truncate_log_append--*/
int __ocfs2_flush_truncate_log ( struct ocfs2_super * osb ) ; 
/*--__ocfs2_flush_truncate_log--*/
int ocfs2_flush_truncate_log ( struct ocfs2_super * osb ) ; 
/*--ocfs2_flush_truncate_log--*/
void ocfs2_schedule_truncate_log_flush ( struct ocfs2_super * osb , int cancel ) ; 
/*--ocfs2_schedule_truncate_log_flush--*/
int ocfs2_begin_truncate_log_recovery ( struct ocfs2_super * osb , int slot_num , struct ocfs2_dinode * * tl_copy ) ; 
/*--ocfs2_begin_truncate_log_recovery--*/
int ocfs2_complete_truncate_log_recovery ( struct ocfs2_super * osb , struct ocfs2_dinode * tl_copy ) ; 
/*--ocfs2_complete_truncate_log_recovery--*/
void ocfs2_truncate_log_shutdown ( struct ocfs2_super * osb ) ; 
/*--ocfs2_truncate_log_shutdown--*/
int ocfs2_truncate_log_init ( struct ocfs2_super * osb ) ; 
/*--ocfs2_truncate_log_init--*/
int ocfs2_cache_cluster_dealloc ( struct ocfs2_cached_dealloc_ctxt * ctxt , u64 blkno , unsigned int bit ) ; 
/*--ocfs2_cache_cluster_dealloc--*/
int ocfs2_run_deallocs ( struct ocfs2_super * osb , struct ocfs2_cached_dealloc_ctxt * ctxt ) ; 
/*--ocfs2_run_deallocs--*/
int ocfs2_cache_block_dealloc ( struct ocfs2_cached_dealloc_ctxt * ctxt , int type , int slot , u64 suballoc , u64 blkno , unsigned int bit ) ; 
/*--ocfs2_cache_block_dealloc--*/
void ocfs2_map_and_dirty_page ( struct inode * inode , handle_t * handle , unsigned int from , unsigned int to , struct page * page , int zero , u64 * phys ) ; 
/*--ocfs2_map_and_dirty_page--*/
int ocfs2_grab_pages ( struct inode * inode , loff_t start , loff_t end , struct page * * pages , int * num ) ; 
/*--ocfs2_grab_pages--*/
int ocfs2_zero_range_for_truncate ( struct inode * inode , handle_t * handle , u64 range_start , u64 range_end ) ; 
/*--ocfs2_zero_range_for_truncate--*/
void ocfs2_dinode_new_extent_list ( struct inode * inode , struct ocfs2_dinode * di ) ; 
/*--ocfs2_dinode_new_extent_list--*/
void ocfs2_set_inode_data_inline ( struct inode * inode , struct ocfs2_dinode * di ) ; 
/*--ocfs2_set_inode_data_inline--*/
int ocfs2_convert_inline_data_to_extents ( struct inode * inode , struct buffer_head * di_bh ) ; 
/*--ocfs2_convert_inline_data_to_extents--*/
int ocfs2_commit_truncate ( struct ocfs2_super * osb , struct inode * inode , struct buffer_head * di_bh ) ; 
/*--ocfs2_commit_truncate--*/
int ocfs2_prepare_truncate ( struct ocfs2_super * osb , struct inode * inode , struct buffer_head * fe_bh , struct ocfs2_truncate_context * * tc ) ; 
/*--ocfs2_prepare_truncate--*/
int ocfs2_truncate_inline ( struct inode * inode , struct buffer_head * di_bh , unsigned int start , unsigned int end , int trunc ) ; 
/*--ocfs2_truncate_inline--*/
int ocfs2_get_block ( struct inode * inode , sector_t iblock , struct buffer_head * bh_result , int create ) ; 
/*--ocfs2_get_block--*/
int ocfs2_read_inline_data ( struct inode * inode , struct page * page , struct buffer_head * di_bh ) ; 
/*--ocfs2_read_inline_data--*/
int ocfs2_prepare_write_nolock ( struct inode * inode , struct page * page , unsigned from , unsigned to ) ; 
/*--ocfs2_prepare_write_nolock--*/
int walk_page_buffers ( handle_t * handle , struct buffer_head * head , unsigned from , unsigned to , int * partial , int ( * fn ) ( handle_t * handle , struct buffer_head * bh ) ) ; 
/*--walk_page_buffers--*/
int ocfs2_map_page_blocks ( struct page * page , u64 * p_blkno , struct inode * inode , unsigned int from , unsigned int to , int new ) ; 
/*--ocfs2_map_page_blocks--*/
void ocfs2_unlock_and_free_pages ( struct page * * pages , int num_pages ) ; 
/*--ocfs2_unlock_and_free_pages--*/
int ocfs2_size_fits_inline_data ( struct buffer_head * di_bh , u64 new_size ) ; 
/*--ocfs2_size_fits_inline_data--*/
int ocfs2_write_begin_nolock ( struct address_space * mapping , loff_t pos , unsigned len , unsigned flags , struct page * * pagep , void * * fsdata , struct buffer_head * di_bh , struct page * mmap_page ) ; 
/*--ocfs2_write_begin_nolock--*/
int ocfs2_write_end_nolock ( struct address_space * mapping , loff_t pos , unsigned len , unsigned copied , struct page * page , void * fsdata ) ; 
/*--ocfs2_write_end_nolock--*/
u32 ocfs2_hamming_encode ( u32 parity , void * data , unsigned int d , unsigned int nr ) ; 
/*--ocfs2_hamming_encode--*/
u32 ocfs2_hamming_encode_block ( void * data , unsigned int blocksize ) ; 
/*--ocfs2_hamming_encode_block--*/
void ocfs2_hamming_fix ( void * data , unsigned int d , unsigned int nr , unsigned int fix ) ; 
/*--ocfs2_hamming_fix--*/
void ocfs2_hamming_fix_block ( void * data , unsigned int blocksize , unsigned int fix ) ; 
/*--ocfs2_hamming_fix_block--*/
int ocfs2_blockcheck_stats_debugfs_install ( struct ocfs2_blockcheck_stats * stats , struct dentry * parent ) ; 
/*--ocfs2_blockcheck_stats_debugfs_install--*/
void ocfs2_blockcheck_stats_debugfs_remove ( struct ocfs2_blockcheck_stats * stats ) ; 
/*--ocfs2_blockcheck_stats_debugfs_remove--*/
void ocfs2_block_check_compute ( void * data , size_t blocksize , struct ocfs2_block_check * bc ) ; 
/*--ocfs2_block_check_compute--*/
int ocfs2_block_check_validate ( void * data , size_t blocksize , struct ocfs2_block_check * bc , struct ocfs2_blockcheck_stats * stats ) ; 
/*--ocfs2_block_check_validate--*/
void ocfs2_block_check_compute_bhs ( struct buffer_head * * bhs , int nr , struct ocfs2_block_check * bc ) ; 
/*--ocfs2_block_check_compute_bhs--*/
int ocfs2_block_check_validate_bhs ( struct buffer_head * * bhs , int nr , struct ocfs2_block_check * bc , struct ocfs2_blockcheck_stats * stats ) ; 
/*--ocfs2_block_check_validate_bhs--*/
void ocfs2_compute_meta_ecc ( struct super_block * sb , void * data , struct ocfs2_block_check * bc ) ; 
/*--ocfs2_compute_meta_ecc--*/
int ocfs2_validate_meta_ecc ( struct super_block * sb , void * data , struct ocfs2_block_check * bc ) ; 
/*--ocfs2_validate_meta_ecc--*/
void ocfs2_compute_meta_ecc_bhs ( struct super_block * sb , struct buffer_head * * bhs , int nr , struct ocfs2_block_check * bc ) ; 
/*--ocfs2_compute_meta_ecc_bhs--*/
int ocfs2_validate_meta_ecc_bhs ( struct super_block * sb , struct buffer_head * * bhs , int nr , struct ocfs2_block_check * bc ) ; 
/*--ocfs2_validate_meta_ecc_bhs--*/
int ocfs2_write_block ( struct ocfs2_super * osb , struct buffer_head * bh , struct ocfs2_caching_info * ci ) ; 
/*--ocfs2_write_block--*/
int ocfs2_read_blocks_sync ( struct ocfs2_super * osb , u64 block , unsigned int nr , struct buffer_head * bhs [ ] ) ; 
/*--ocfs2_read_blocks_sync--*/
int ocfs2_read_blocks ( struct ocfs2_caching_info * ci , u64 block , int nr , struct buffer_head * bhs [ ] , int flags , int ( * validate ) ( struct super_block * sb , struct buffer_head * bh ) ) ; 
/*--ocfs2_read_blocks--*/
int ocfs2_write_super_or_backup ( struct ocfs2_super * osb , struct buffer_head * bh ) ; 
/*--ocfs2_write_super_or_backup--*/
struct dentry * ocfs2_find_local_alias ( struct inode * inode , u64 parent_blkno , int skip_unhashed ) ; 
/*--ocfs2_find_local_alias--*/
int ocfs2_dentry_attach_lock ( struct dentry * dentry , struct inode * inode , u64 parent_blkno ) ; 
/*--ocfs2_dentry_attach_lock--*/
void ocfs2_drop_dl_inodes ( struct work_struct * work ) ; 
/*--ocfs2_drop_dl_inodes--*/
void ocfs2_drop_all_dl_inodes ( struct ocfs2_super * osb ) ; 
/*--ocfs2_drop_all_dl_inodes--*/
void ocfs2_dentry_lock_put ( struct ocfs2_super * osb , struct ocfs2_dentry_lock * dl ) ; 
/*--ocfs2_dentry_lock_put--*/
void ocfs2_dentry_move ( struct dentry * dentry , struct dentry * target , struct inode * old_dir , struct inode * new_dir ) ; 
/*--ocfs2_dentry_move--*/
struct ocfs2_dir_block_trailer * ocfs2_dir_trailer_from_size ( int blocksize , void * data ) ; 
/*--ocfs2_dir_trailer_from_size--*/
void ocfs2_free_dir_lookup_result ( struct ocfs2_dir_lookup_result * res ) ; 
/*--ocfs2_free_dir_lookup_result--*/
int ocfs2_find_entry ( const char * name , int namelen , struct inode * dir , struct ocfs2_dir_lookup_result * lookup ) ; 
/*--ocfs2_find_entry--*/
int ocfs2_update_entry ( struct inode * dir , handle_t * handle , struct ocfs2_dir_lookup_result * res , struct inode * new_entry_inode ) ; 
/*--ocfs2_update_entry--*/
int ocfs2_delete_entry ( handle_t * handle , struct inode * dir , struct ocfs2_dir_lookup_result * res ) ; 
/*--ocfs2_delete_entry--*/
int __ocfs2_add_entry ( handle_t * handle , struct inode * dir , const char * name , int namelen , struct inode * inode , u64 blkno , struct buffer_head * parent_fe_bh , struct ocfs2_dir_lookup_result * lookup ) ; 
/*--__ocfs2_add_entry--*/
int ocfs2_dir_foreach ( struct inode * inode , loff_t * f_pos , void * priv , filldir_t filldir ) ; 
/*--ocfs2_dir_foreach--*/
int ocfs2_readdir ( struct file * filp , void * dirent , filldir_t filldir ) ; 
/*--ocfs2_readdir--*/
int ocfs2_find_files_on_disk ( const char * name , int namelen , u64 * blkno , struct inode * inode , struct ocfs2_dir_lookup_result * lookup ) ; 
/*--ocfs2_find_files_on_disk--*/
int ocfs2_lookup_ino_from_name ( struct inode * dir , const char * name , int namelen , u64 * blkno ) ; 
/*--ocfs2_lookup_ino_from_name--*/
int ocfs2_check_dir_for_entry ( struct inode * dir , const char * name , int namelen ) ; 
/*--ocfs2_check_dir_for_entry--*/
int ocfs2_empty_dir ( struct inode * inode ) ; 
/*--ocfs2_empty_dir--*/
int ocfs2_fill_new_dir ( struct ocfs2_super * osb , handle_t * handle , struct inode * parent , struct inode * inode , struct buffer_head * fe_bh , struct ocfs2_alloc_context * data_ac , struct ocfs2_alloc_context * meta_ac ) ; 
/*--ocfs2_fill_new_dir--*/
int ocfs2_prepare_dir_for_insert ( struct ocfs2_super * osb , struct inode * dir , struct buffer_head * parent_fe_bh , const char * name , int namelen , struct ocfs2_dir_lookup_result * lookup ) ; 
/*--ocfs2_prepare_dir_for_insert--*/
int ocfs2_dx_dir_truncate ( struct inode * dir , struct buffer_head * di_bh ) ; 
/*--ocfs2_dx_dir_truncate--*/
void ocfs2_lock_res_init_once ( struct ocfs2_lock_res * res ) ; 
/*--ocfs2_lock_res_init_once--*/
void ocfs2_inode_lock_res_init ( struct ocfs2_lock_res * res , enum ocfs2_lock_type type , unsigned int generation , struct inode * inode ) ; 
/*--ocfs2_inode_lock_res_init--*/
void ocfs2_dentry_lock_res_init ( struct ocfs2_dentry_lock * dl , u64 parent , struct inode * inode ) ; 
/*--ocfs2_dentry_lock_res_init--*/
void ocfs2_file_lock_res_init ( struct ocfs2_lock_res * lockres , struct ocfs2_file_private * fp ) ; 
/*--ocfs2_file_lock_res_init--*/
void ocfs2_qinfo_lock_res_init ( struct ocfs2_lock_res * lockres , struct ocfs2_mem_dqinfo * info ) ; 
/*--ocfs2_qinfo_lock_res_init--*/
void ocfs2_refcount_lock_res_init ( struct ocfs2_lock_res * lockres , struct ocfs2_super * osb , u64 ref_blkno , unsigned int generation ) ; 
/*--ocfs2_refcount_lock_res_init--*/
void ocfs2_lock_res_free ( struct ocfs2_lock_res * res ) ; 
/*--ocfs2_lock_res_free--*/
void ocfs2_set_locking_protocol ( void ) ; 
/*--ocfs2_set_locking_protocol--*/
int ocfs2_create_new_inode_locks ( struct inode * inode ) ; 
/*--ocfs2_create_new_inode_locks--*/
int ocfs2_rw_lock ( struct inode * inode , int write ) ; 
/*--ocfs2_rw_lock--*/
void ocfs2_rw_unlock ( struct inode * inode , int write ) ; 
/*--ocfs2_rw_unlock--*/
int ocfs2_open_lock ( struct inode * inode ) ; 
/*--ocfs2_open_lock--*/
int ocfs2_try_open_lock ( struct inode * inode , int write ) ; 
/*--ocfs2_try_open_lock--*/
void ocfs2_open_unlock ( struct inode * inode ) ; 
/*--ocfs2_open_unlock--*/
int ocfs2_file_lock ( struct file * file , int ex , int trylock ) ; 
/*--ocfs2_file_lock--*/
void ocfs2_file_unlock ( struct file * file ) ; 
/*--ocfs2_file_unlock--*/
int ocfs2_inode_lock_full_nested ( struct inode * inode , struct buffer_head * * ret_bh , int ex , int arg_flags , int subclass ) ; 
/*--ocfs2_inode_lock_full_nested--*/
int ocfs2_inode_lock_with_page ( struct inode * inode , struct buffer_head * * ret_bh , int ex , struct page * page ) ; 
/*--ocfs2_inode_lock_with_page--*/
int ocfs2_inode_lock_atime ( struct inode * inode , struct vfsmount * vfsmnt , int * level ) ; 
/*--ocfs2_inode_lock_atime--*/
void ocfs2_inode_unlock ( struct inode * inode , int ex ) ; 
/*--ocfs2_inode_unlock--*/
int ocfs2_orphan_scan_lock ( struct ocfs2_super * osb , u32 * seqno ) ; 
/*--ocfs2_orphan_scan_lock--*/
void ocfs2_orphan_scan_unlock ( struct ocfs2_super * osb , u32 seqno ) ; 
/*--ocfs2_orphan_scan_unlock--*/
int ocfs2_super_lock ( struct ocfs2_super * osb , int ex ) ; 
/*--ocfs2_super_lock--*/
void ocfs2_super_unlock ( struct ocfs2_super * osb , int ex ) ; 
/*--ocfs2_super_unlock--*/
int ocfs2_rename_lock ( struct ocfs2_super * osb ) ; 
/*--ocfs2_rename_lock--*/
void ocfs2_rename_unlock ( struct ocfs2_super * osb ) ; 
/*--ocfs2_rename_unlock--*/
int ocfs2_nfs_sync_lock ( struct ocfs2_super * osb , int ex ) ; 
/*--ocfs2_nfs_sync_lock--*/
void ocfs2_nfs_sync_unlock ( struct ocfs2_super * osb , int ex ) ; 
/*--ocfs2_nfs_sync_unlock--*/
int ocfs2_dentry_lock ( struct dentry * dentry , int ex ) ; 
/*--ocfs2_dentry_lock--*/
void ocfs2_dentry_unlock ( struct dentry * dentry , int ex ) ; 
/*--ocfs2_dentry_unlock--*/
void ocfs2_put_dlm_debug ( struct ocfs2_dlm_debug * dlm_debug ) ; 
/*--ocfs2_put_dlm_debug--*/
struct ocfs2_dlm_debug * ocfs2_new_dlm_debug ( void ) ; 
/*--ocfs2_new_dlm_debug--*/
int ocfs2_dlm_init ( struct ocfs2_super * osb ) ; 
/*--ocfs2_dlm_init--*/
void ocfs2_dlm_shutdown ( struct ocfs2_super * osb , int hangup_pending ) ; 
/*--ocfs2_dlm_shutdown--*/
void ocfs2_mark_lockres_freeing ( struct ocfs2_lock_res * lockres ) ; 
/*--ocfs2_mark_lockres_freeing--*/
void ocfs2_simple_drop_lockres ( struct ocfs2_super * osb , struct ocfs2_lock_res * lockres ) ; 
/*--ocfs2_simple_drop_lockres--*/
int ocfs2_drop_inode_locks ( struct inode * inode ) ; 
/*--ocfs2_drop_inode_locks--*/
void ocfs2_qinfo_unlock ( struct ocfs2_mem_dqinfo * oinfo , int ex ) ; 
/*--ocfs2_qinfo_unlock--*/
int ocfs2_qinfo_lock ( struct ocfs2_mem_dqinfo * oinfo , int ex ) ; 
/*--ocfs2_qinfo_lock--*/
int ocfs2_refcount_lock ( struct ocfs2_refcount_tree * ref_tree , int ex ) ; 
/*--ocfs2_refcount_lock--*/
void ocfs2_refcount_unlock ( struct ocfs2_refcount_tree * ref_tree , int ex ) ; 
/*--ocfs2_refcount_unlock--*/
void ocfs2_wake_downconvert_thread ( struct ocfs2_super * osb ) ; 
/*--ocfs2_wake_downconvert_thread--*/
void ocfs2_extent_map_init ( struct inode * inode ) ; 
/*--ocfs2_extent_map_init--*/
void ocfs2_extent_map_trunc ( struct inode * inode , unsigned int cpos ) ; 
/*--ocfs2_extent_map_trunc--*/
void ocfs2_extent_map_insert_rec ( struct inode * inode , struct ocfs2_extent_rec * rec ) ; 
/*--ocfs2_extent_map_insert_rec--*/
int ocfs2_figure_hole_clusters ( struct ocfs2_caching_info * ci , struct ocfs2_extent_list * el , struct buffer_head * eb_bh , u32 v_cluster , u32 * num_clusters ) ; 
/*--ocfs2_figure_hole_clusters--*/
int ocfs2_xattr_get_clusters ( struct inode * inode , u32 v_cluster , u32 * p_cluster , u32 * num_clusters , struct ocfs2_extent_list * el , unsigned int * extent_flags ) ; 
/*--ocfs2_xattr_get_clusters--*/
int ocfs2_get_clusters ( struct inode * inode , u32 v_cluster , u32 * p_cluster , u32 * num_clusters , unsigned int * extent_flags ) ; 
/*--ocfs2_get_clusters--*/
int ocfs2_extent_map_get_blocks ( struct inode * inode , u64 v_blkno , u64 * p_blkno , u64 * ret_count , unsigned int * extent_flags ) ; 
/*--ocfs2_extent_map_get_blocks--*/
int ocfs2_fiemap ( struct inode * inode , struct fiemap_extent_info * fieinfo , u64 map_start , u64 map_len ) ; 
/*--ocfs2_fiemap--*/
int ocfs2_read_virt_blocks ( struct inode * inode , u64 v_block , int nr , struct buffer_head * bhs [ ] , int flags , int ( * validate ) ( struct super_block * sb , struct buffer_head * bh ) ) ; 
/*--ocfs2_read_virt_blocks--*/
int ocfs2_should_update_atime ( struct inode * inode , struct vfsmount * vfsmnt ) ; 
/*--ocfs2_should_update_atime--*/
int ocfs2_update_inode_atime ( struct inode * inode , struct buffer_head * bh ) ; 
/*--ocfs2_update_inode_atime--*/
int ocfs2_simple_size_update ( struct inode * inode , struct buffer_head * di_bh , u64 new_i_size ) ; 
/*--ocfs2_simple_size_update--*/
int ocfs2_add_inode_data ( struct ocfs2_super * osb , struct inode * inode , u32 * logical_offset , u32 clusters_to_add , int mark_unwritten , struct buffer_head * fe_bh , handle_t * handle , struct ocfs2_alloc_context * data_ac , struct ocfs2_alloc_context * meta_ac , enum ocfs2_alloc_restarted * reason_ret ) ; 
/*--ocfs2_add_inode_data--*/
int ocfs2_zero_extend ( struct inode * inode , struct buffer_head * di_bh , loff_t zero_to_size ) ; 
/*--ocfs2_zero_extend--*/
int ocfs2_extend_no_holes ( struct inode * inode , struct buffer_head * di_bh , u64 new_i_size , u64 zero_to ) ; 
/*--ocfs2_extend_no_holes--*/
int ocfs2_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--ocfs2_setattr--*/
int ocfs2_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--ocfs2_getattr--*/
int ocfs2_permission ( struct inode * inode , int mask ) ; 
/*--ocfs2_permission--*/
int ocfs2_change_file_space ( struct file * file , unsigned int cmd , struct ocfs2_space_resv * sr ) ; 
/*--ocfs2_change_file_space--*/
int ocfs2_check_range_for_refcount ( struct inode * inode , loff_t pos , size_t count ) ; 
/*--ocfs2_check_range_for_refcount--*/
void ocfs2_init_node_maps ( struct ocfs2_super * osb ) ; 
/*--ocfs2_init_node_maps--*/
void ocfs2_do_node_down ( int node_num , void * data ) ; 
/*--ocfs2_do_node_down--*/
void ocfs2_node_map_set_bit ( struct ocfs2_super * osb , struct ocfs2_node_map * map , int bit ) ; 
/*--ocfs2_node_map_set_bit--*/
void ocfs2_node_map_clear_bit ( struct ocfs2_super * osb , struct ocfs2_node_map * map , int bit ) ; 
/*--ocfs2_node_map_clear_bit--*/
int ocfs2_node_map_test_bit ( struct ocfs2_super * osb , struct ocfs2_node_map * map , int bit ) ; 
/*--ocfs2_node_map_test_bit--*/
void ocfs2_set_inode_flags ( struct inode * inode ) ; 
/*--ocfs2_set_inode_flags--*/
void ocfs2_get_inode_flags ( struct ocfs2_inode_info * oi ) ; 
/*--ocfs2_get_inode_flags--*/
struct inode * ocfs2_ilookup ( struct super_block * sb , u64 blkno ) ; 
/*--ocfs2_ilookup--*/
struct inode * ocfs2_iget ( struct ocfs2_super * osb , u64 blkno , unsigned flags , int sysfile_type ) ; 
/*--ocfs2_iget--*/
void ocfs2_populate_inode ( struct inode * inode , struct ocfs2_dinode * fe , int create_ino ) ; 
/*--ocfs2_populate_inode--*/
void ocfs2_sync_blockdev ( struct super_block * sb ) ; 
/*--ocfs2_sync_blockdev--*/
void ocfs2_delete_inode ( struct inode * inode ) ; 
/*--ocfs2_delete_inode--*/
void ocfs2_clear_inode ( struct inode * inode ) ; 
/*--ocfs2_clear_inode--*/
void ocfs2_drop_inode ( struct inode * inode ) ; 
/*--ocfs2_drop_inode--*/
int ocfs2_inode_revalidate ( struct dentry * dentry ) ; 
/*--ocfs2_inode_revalidate--*/
int ocfs2_mark_inode_dirty ( handle_t * handle , struct inode * inode , struct buffer_head * bh ) ; 
/*--ocfs2_mark_inode_dirty--*/
void ocfs2_refresh_inode ( struct inode * inode , struct ocfs2_dinode * fe ) ; 
/*--ocfs2_refresh_inode--*/
int ocfs2_validate_inode_block ( struct super_block * sb , struct buffer_head * bh ) ; 
/*--ocfs2_validate_inode_block--*/
int ocfs2_read_inode_block_full ( struct inode * inode , struct buffer_head * * bh , int flags ) ; 
/*--ocfs2_read_inode_block_full--*/
int ocfs2_read_inode_block ( struct inode * inode , struct buffer_head * * bh ) ; 
/*--ocfs2_read_inode_block--*/
long ocfs2_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--ocfs2_ioctl--*/
long ocfs2_compat_ioctl ( struct file * file , unsigned cmd , unsigned long arg ) ; 
/*--ocfs2_compat_ioctl--*/
void ocfs2_replay_map_set_state ( struct ocfs2_super * osb , int state ) ; 
/*--ocfs2_replay_map_set_state--*/
int ocfs2_compute_replay_slots ( struct ocfs2_super * osb ) ; 
/*--ocfs2_compute_replay_slots--*/
void ocfs2_queue_replay_slots ( struct ocfs2_super * osb ) ; 
/*--ocfs2_queue_replay_slots--*/
void ocfs2_free_replay_slots ( struct ocfs2_super * osb ) ; 
/*--ocfs2_free_replay_slots--*/
int ocfs2_recovery_init ( struct ocfs2_super * osb ) ; 
/*--ocfs2_recovery_init--*/
void ocfs2_recovery_exit ( struct ocfs2_super * osb ) ; 
/*--ocfs2_recovery_exit--*/
handle_t * ocfs2_start_trans ( struct ocfs2_super * osb , int max_buffs ) ; 
/*--ocfs2_start_trans--*/
int ocfs2_commit_trans ( struct ocfs2_super * osb , handle_t * handle ) ; 
/*--ocfs2_commit_trans--*/
int ocfs2_extend_trans ( handle_t * handle , int nblocks ) ; 
/*--ocfs2_extend_trans--*/
int ocfs2_journal_access_di ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_di--*/
int ocfs2_journal_access_eb ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_eb--*/
int ocfs2_journal_access_rb ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_rb--*/
int ocfs2_journal_access_gd ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_gd--*/
int ocfs2_journal_access_db ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_db--*/
int ocfs2_journal_access_xb ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_xb--*/
int ocfs2_journal_access_dq ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_dq--*/
int ocfs2_journal_access_dr ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_dr--*/
int ocfs2_journal_access_dl ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access_dl--*/
int ocfs2_journal_access ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * bh , int type ) ; 
/*--ocfs2_journal_access--*/
void ocfs2_journal_dirty ( handle_t * handle , struct buffer_head * bh ) ; 
/*--ocfs2_journal_dirty--*/
void ocfs2_set_journal_params ( struct ocfs2_super * osb ) ; 
/*--ocfs2_set_journal_params--*/
int ocfs2_journal_init ( struct ocfs2_journal * journal , int * dirty ) ; 
/*--ocfs2_journal_init--*/
void ocfs2_journal_shutdown ( struct ocfs2_super * osb ) ; 
/*--ocfs2_journal_shutdown--*/
int ocfs2_journal_load ( struct ocfs2_journal * journal , int local , int replayed ) ; 
/*--ocfs2_journal_load--*/
int ocfs2_journal_wipe ( struct ocfs2_journal * journal , int full ) ; 
/*--ocfs2_journal_wipe--*/
void ocfs2_wait_for_recovery ( struct ocfs2_super * osb ) ; 
/*--ocfs2_wait_for_recovery--*/
void ocfs2_complete_recovery ( struct work_struct * work ) ; 
/*--ocfs2_complete_recovery--*/
void ocfs2_complete_mount_recovery ( struct ocfs2_super * osb ) ; 
/*--ocfs2_complete_mount_recovery--*/
void ocfs2_complete_quota_recovery ( struct ocfs2_super * osb ) ; 
/*--ocfs2_complete_quota_recovery--*/
void ocfs2_recovery_thread ( struct ocfs2_super * osb , int node_num ) ; 
/*--ocfs2_recovery_thread--*/
int ocfs2_mark_dead_nodes ( struct ocfs2_super * osb ) ; 
/*--ocfs2_mark_dead_nodes--*/
void ocfs2_queue_orphan_scan ( struct ocfs2_super * osb ) ; 
/*--ocfs2_queue_orphan_scan--*/
void ocfs2_orphan_scan_work ( struct work_struct * work ) ; 
/*--ocfs2_orphan_scan_work--*/
void ocfs2_orphan_scan_stop ( struct ocfs2_super * osb ) ; 
/*--ocfs2_orphan_scan_stop--*/
void ocfs2_orphan_scan_init ( struct ocfs2_super * osb ) ; 
/*--ocfs2_orphan_scan_init--*/
void ocfs2_orphan_scan_start ( struct ocfs2_super * osb ) ; 
/*--ocfs2_orphan_scan_start--*/
int ocfs2_check_journals_nolocks ( struct ocfs2_super * osb ) ; 
/*--ocfs2_check_journals_nolocks--*/
unsigned int ocfs2_la_default_mb ( struct ocfs2_super * osb ) ; 
/*--ocfs2_la_default_mb--*/
void ocfs2_la_set_sizes ( struct ocfs2_super * osb , int requested_mb ) ; 
/*--ocfs2_la_set_sizes--*/
void ocfs2_local_alloc_seen_free_bits ( struct ocfs2_super * osb , unsigned int num_clusters ) ; 
/*--ocfs2_local_alloc_seen_free_bits--*/
void ocfs2_la_enable_worker ( struct work_struct * work ) ; 
/*--ocfs2_la_enable_worker--*/
int ocfs2_alloc_should_use_local ( struct ocfs2_super * osb , u64 bits ) ; 
/*--ocfs2_alloc_should_use_local--*/
int ocfs2_load_local_alloc ( struct ocfs2_super * osb ) ; 
/*--ocfs2_load_local_alloc--*/
void ocfs2_shutdown_local_alloc ( struct ocfs2_super * osb ) ; 
/*--ocfs2_shutdown_local_alloc--*/
int ocfs2_begin_local_alloc_recovery ( struct ocfs2_super * osb , int slot_num , struct ocfs2_dinode * * alloc_copy ) ; 
/*--ocfs2_begin_local_alloc_recovery--*/
int ocfs2_complete_local_alloc_recovery ( struct ocfs2_super * osb , struct ocfs2_dinode * alloc ) ; 
/*--ocfs2_complete_local_alloc_recovery--*/
int ocfs2_reserve_local_alloc_bits ( struct ocfs2_super * osb , u32 bits_wanted , struct ocfs2_alloc_context * ac ) ; 
/*--ocfs2_reserve_local_alloc_bits--*/
int ocfs2_claim_local_alloc_bits ( struct ocfs2_super * osb , handle_t * handle , struct ocfs2_alloc_context * ac , u32 bits_wanted , u32 * bit_off , u32 * num_bits ) ; 
/*--ocfs2_claim_local_alloc_bits--*/
int ocfs2_flock ( struct file * file , int cmd , struct file_lock * fl ) ; 
/*--ocfs2_flock--*/
int ocfs2_lock ( struct file * file , int cmd , struct file_lock * fl ) ; 
/*--ocfs2_lock--*/
int ocfs2_mmap ( struct file * file , struct vm_area_struct * vma ) ; 
/*--ocfs2_mmap--*/
int ocfs2_orphan_del ( struct ocfs2_super * osb , handle_t * handle , struct inode * orphan_dir_inode , struct inode * inode , struct buffer_head * orphan_dir_bh ) ; 
/*--ocfs2_orphan_del--*/
int ocfs2_create_inode_in_orphan ( struct inode * dir , int mode , struct inode * * new_inode ) ; 
/*--ocfs2_create_inode_in_orphan--*/
int ocfs2_mv_orphaned_inode_to_new ( struct inode * dir , struct inode * inode , struct dentry * dentry ) ; 
/*--ocfs2_mv_orphaned_inode_to_new--*/
int ocfs2_lock_refcount_tree ( struct ocfs2_super * osb , u64 ref_blkno , int rw , struct ocfs2_refcount_tree * * ret_tree , struct buffer_head * * ref_bh ) ; 
/*--ocfs2_lock_refcount_tree--*/
void ocfs2_unlock_refcount_tree ( struct ocfs2_super * osb , struct ocfs2_refcount_tree * tree , int rw ) ; 
/*--ocfs2_unlock_refcount_tree--*/
void ocfs2_purge_refcount_trees ( struct ocfs2_super * osb ) ; 
/*--ocfs2_purge_refcount_trees--*/
int ocfs2_remove_refcount_tree ( struct inode * inode , struct buffer_head * di_bh ) ; 
/*--ocfs2_remove_refcount_tree--*/
int ocfs2_try_remove_refcount_tree ( struct inode * inode , struct buffer_head * di_bh ) ; 
/*--ocfs2_try_remove_refcount_tree--*/
int ocfs2_increase_refcount ( handle_t * handle , struct ocfs2_caching_info * ci , struct buffer_head * ref_root_bh , u64 cpos , u32 len , struct ocfs2_alloc_context * meta_ac , struct ocfs2_cached_dealloc_ctxt * dealloc ) ; 
/*--ocfs2_increase_refcount--*/
int ocfs2_decrease_refcount ( struct inode * inode , handle_t * handle , u32 cpos , u32 len , struct ocfs2_alloc_context * meta_ac , struct ocfs2_cached_dealloc_ctxt * dealloc , int delete ) ; 
/*--ocfs2_decrease_refcount--*/
int ocfs2_prepare_refcount_change_for_del ( struct inode * inode , u64 refcount_loc , u64 phys_blkno , u32 clusters , int * credits , int * ref_blocks ) ; 
/*--ocfs2_prepare_refcount_change_for_del--*/
int ocfs2_refcount_cow ( struct inode * inode , struct buffer_head * di_bh , u32 cpos , u32 write_len , u32 max_cpos ) ; 
/*--ocfs2_refcount_cow--*/
int ocfs2_refcounted_xattr_delete_need ( struct inode * inode , struct ocfs2_caching_info * ref_ci , struct buffer_head * ref_root_bh , struct ocfs2_xattr_value_root * xv , int * meta_add , int * credits ) ; 
/*--ocfs2_refcounted_xattr_delete_need--*/
int ocfs2_refcount_cow_xattr ( struct inode * inode , struct ocfs2_dinode * di , struct ocfs2_xattr_value_buf * vb , struct ocfs2_refcount_tree * ref_tree , struct buffer_head * ref_root_bh , u32 cpos , u32 write_len , struct ocfs2_post_refcount * post ) ; 
/*--ocfs2_refcount_cow_xattr--*/
int ocfs2_add_refcount_flag ( struct inode * inode , struct ocfs2_extent_tree * data_et , struct ocfs2_caching_info * ref_ci , struct buffer_head * ref_root_bh , u32 cpos , u32 p_cluster , u32 num_clusters , struct ocfs2_cached_dealloc_ctxt * dealloc , struct ocfs2_post_refcount * post ) ; 
/*--ocfs2_add_refcount_flag--*/
int ocfs2_reflink_ioctl ( struct inode * inode , const char * oldname , const char * newname , bool preserve ) ; 
/*--ocfs2_reflink_ioctl--*/
int ocfs2_dir_resv_allowed ( struct ocfs2_super * osb ) ; 
/*--ocfs2_dir_resv_allowed--*/
void ocfs2_resv_init_once ( struct ocfs2_alloc_reservation * resv ) ; 
/*--ocfs2_resv_init_once--*/
void ocfs2_resv_set_type ( struct ocfs2_alloc_reservation * resv , unsigned int flags ) ; 
/*--ocfs2_resv_set_type--*/
int ocfs2_resmap_init ( struct ocfs2_super * osb , struct ocfs2_reservation_map * resmap ) ; 
/*--ocfs2_resmap_init--*/
void ocfs2_resv_discard ( struct ocfs2_reservation_map * resmap , struct ocfs2_alloc_reservation * resv ) ; 
/*--ocfs2_resv_discard--*/
void ocfs2_resmap_restart ( struct ocfs2_reservation_map * resmap , unsigned int clen , char * disk_bitmap ) ; 
/*--ocfs2_resmap_restart--*/
void ocfs2_resmap_uninit ( struct ocfs2_reservation_map * resmap ) ; 
/*--ocfs2_resmap_uninit--*/
int ocfs2_resmap_resv_bits ( struct ocfs2_reservation_map * resmap , struct ocfs2_alloc_reservation * resv , int * cstart , int * clen ) ; 
/*--ocfs2_resmap_resv_bits--*/
void ocfs2_resmap_claimed_bits ( struct ocfs2_reservation_map * resmap , struct ocfs2_alloc_reservation * resv , u32 cstart , u32 clen ) ; 
/*--ocfs2_resmap_claimed_bits--*/
int ocfs2_group_extend ( struct inode * inode , int new_clusters ) ; 
/*--ocfs2_group_extend--*/
int ocfs2_group_add ( struct inode * inode , struct ocfs2_new_group_input * input ) ; 
/*--ocfs2_group_add--*/
int ocfs2_refresh_slot_info ( struct ocfs2_super * osb ) ; 
/*--ocfs2_refresh_slot_info--*/
int ocfs2_node_num_to_slot ( struct ocfs2_super * osb , unsigned int node_num ) ; 
/*--ocfs2_node_num_to_slot--*/
int ocfs2_slot_to_node_num_locked ( struct ocfs2_super * osb , int slot_num , unsigned int * node_num ) ; 
/*--ocfs2_slot_to_node_num_locked--*/
int ocfs2_clear_slot ( struct ocfs2_super * osb , int slot_num ) ; 
/*--ocfs2_clear_slot--*/
int ocfs2_init_slot_info ( struct ocfs2_super * osb ) ; 
/*--ocfs2_init_slot_info--*/
void ocfs2_free_slot_info ( struct ocfs2_super * osb ) ; 
/*--ocfs2_free_slot_info--*/
int ocfs2_find_slot ( struct ocfs2_super * osb ) ; 
/*--ocfs2_find_slot--*/
void ocfs2_put_slot ( struct ocfs2_super * osb ) ; 
/*--ocfs2_put_slot--*/
void ocfs2_free_ac_resource ( struct ocfs2_alloc_context * ac ) ; 
/*--ocfs2_free_ac_resource--*/
void ocfs2_free_alloc_context ( struct ocfs2_alloc_context * ac ) ; 
/*--ocfs2_free_alloc_context--*/
int ocfs2_check_group_descriptor ( struct super_block * sb , struct ocfs2_dinode * di , struct buffer_head * bh ) ; 
/*--ocfs2_check_group_descriptor--*/
int ocfs2_read_group_descriptor ( struct inode * inode , struct ocfs2_dinode * di , u64 gd_blkno , struct buffer_head * * bh ) ; 
/*--ocfs2_read_group_descriptor--*/
void ocfs2_init_steal_slots ( struct ocfs2_super * osb ) ; 
/*--ocfs2_init_steal_slots--*/
int ocfs2_reserve_new_metadata_blocks ( struct ocfs2_super * osb , int blocks , struct ocfs2_alloc_context * * ac ) ; 
/*--ocfs2_reserve_new_metadata_blocks--*/
int ocfs2_reserve_new_metadata ( struct ocfs2_super * osb , struct ocfs2_extent_list * root_el , struct ocfs2_alloc_context * * ac ) ; 
/*--ocfs2_reserve_new_metadata--*/
int ocfs2_reserve_new_inode ( struct ocfs2_super * osb , struct ocfs2_alloc_context * * ac ) ; 
/*--ocfs2_reserve_new_inode--*/
int ocfs2_reserve_cluster_bitmap_bits ( struct ocfs2_super * osb , struct ocfs2_alloc_context * ac ) ; 
/*--ocfs2_reserve_cluster_bitmap_bits--*/
int ocfs2_reserve_clusters ( struct ocfs2_super * osb , u32 bits_wanted , struct ocfs2_alloc_context * * ac ) ; 
/*--ocfs2_reserve_clusters--*/
int ocfs2_claim_metadata ( handle_t * handle , struct ocfs2_alloc_context * ac , u32 bits_wanted , u64 * suballoc_loc , u16 * suballoc_bit_start , unsigned int * num_bits , u64 * blkno_start ) ; 
/*--ocfs2_claim_metadata--*/
int ocfs2_claim_new_inode ( handle_t * handle , struct inode * dir , struct buffer_head * parent_fe_bh , struct ocfs2_alloc_context * ac , u64 * suballoc_loc , u16 * suballoc_bit , u64 * fe_blkno ) ; 
/*--ocfs2_claim_new_inode--*/
u64 ocfs2_which_cluster_group ( struct inode * inode , u32 cluster ) ; 
/*--ocfs2_which_cluster_group--*/
int __ocfs2_claim_clusters ( handle_t * handle , struct ocfs2_alloc_context * ac , u32 min_clusters , u32 max_clusters , u32 * cluster_start , u32 * num_clusters ) ; 
/*--__ocfs2_claim_clusters--*/
int ocfs2_claim_clusters ( handle_t * handle , struct ocfs2_alloc_context * ac , u32 min_clusters , u32 * cluster_start , u32 * num_clusters ) ; 
/*--ocfs2_claim_clusters--*/
int ocfs2_free_suballoc_bits ( handle_t * handle , struct inode * alloc_inode , struct buffer_head * alloc_bh , unsigned int start_bit , u64 bg_blkno , unsigned int count ) ; 
/*--ocfs2_free_suballoc_bits--*/
int ocfs2_free_dinode ( handle_t * handle , struct inode * inode_alloc_inode , struct buffer_head * inode_alloc_bh , struct ocfs2_dinode * di ) ; 
/*--ocfs2_free_dinode--*/
int ocfs2_free_clusters ( handle_t * handle , struct inode * bitmap_inode , struct buffer_head * bitmap_bh , u64 start_blk , unsigned int num_clusters ) ; 
/*--ocfs2_free_clusters--*/
int ocfs2_release_clusters ( handle_t * handle , struct inode * bitmap_inode , struct buffer_head * bitmap_bh , u64 start_blk , unsigned int num_clusters ) ; 
/*--ocfs2_release_clusters--*/
int ocfs2_lock_allocators ( struct inode * inode , struct ocfs2_extent_tree * et , u32 clusters_to_add , u32 extents_to_split , struct ocfs2_alloc_context * * data_ac , struct ocfs2_alloc_context * * meta_ac ) ; 
/*--ocfs2_lock_allocators--*/
int ocfs2_test_inode_bit ( struct ocfs2_super * osb , u64 blkno , int * res ) ; 
/*--ocfs2_test_inode_bit--*/
void __ocfs2_error ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--__ocfs2_error--*/
void __ocfs2_abort ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--__ocfs2_abort--*/
void ocfs2_block_signals ( sigset_t * oldset ) ; 
/*--ocfs2_block_signals--*/
void ocfs2_unblock_signals ( sigset_t * oldset ) ; 
/*--ocfs2_unblock_signals--*/
struct inode * ocfs2_get_system_file_inode ( struct ocfs2_super * osb , int type , u32 slot ) ; 
/*--ocfs2_get_system_file_inode--*/
u64 ocfs2_metadata_cache_owner ( struct ocfs2_caching_info * ci ) ; 
/*--ocfs2_metadata_cache_owner--*/
struct super_block * ocfs2_metadata_cache_get_super ( struct ocfs2_caching_info * ci ) ; 
/*--ocfs2_metadata_cache_get_super--*/
void ocfs2_metadata_cache_io_lock ( struct ocfs2_caching_info * ci ) ; 
/*--ocfs2_metadata_cache_io_lock--*/
void ocfs2_metadata_cache_io_unlock ( struct ocfs2_caching_info * ci ) ; 
/*--ocfs2_metadata_cache_io_unlock--*/
void ocfs2_metadata_cache_init ( struct ocfs2_caching_info * ci , const struct ocfs2_caching_operations * ops ) ; 
/*--ocfs2_metadata_cache_init--*/
void ocfs2_metadata_cache_exit ( struct ocfs2_caching_info * ci ) ; 
/*--ocfs2_metadata_cache_exit--*/
void ocfs2_metadata_cache_purge ( struct ocfs2_caching_info * ci ) ; 
/*--ocfs2_metadata_cache_purge--*/
int ocfs2_buffer_uptodate ( struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_buffer_uptodate--*/
int ocfs2_buffer_read_ahead ( struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_buffer_read_ahead--*/
void ocfs2_set_buffer_uptodate ( struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_set_buffer_uptodate--*/
void ocfs2_set_new_buffer_uptodate ( struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_set_new_buffer_uptodate--*/
void ocfs2_remove_from_cache ( struct ocfs2_caching_info * ci , struct buffer_head * bh ) ; 
/*--ocfs2_remove_from_cache--*/
void ocfs2_remove_xattr_clusters_from_cache ( struct ocfs2_caching_info * ci , sector_t block , u32 c_len ) ; 
/*--ocfs2_remove_xattr_clusters_from_cache--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) init_ocfs2_uptodate_cache ( void ) ; 
/*--init_ocfs2_uptodate_cache--*/
void exit_ocfs2_uptodate_cache ( void ) ; 
/*--exit_ocfs2_uptodate_cache--*/
void ocfs2_print_version ( void ) ; 
/*--ocfs2_print_version--*/
void ocfs2_free_quota_recovery ( struct ocfs2_quota_recovery * rec ) ; 
/*--ocfs2_free_quota_recovery--*/
struct ocfs2_quota_recovery * ocfs2_begin_quota_recovery ( struct ocfs2_super * osb , int slot_num ) ; 
/*--ocfs2_begin_quota_recovery--*/
int ocfs2_finish_quota_recovery ( struct ocfs2_super * osb , struct ocfs2_quota_recovery * rec , int slot_num ) ; 
/*--ocfs2_finish_quota_recovery--*/
int ocfs2_local_write_dquot ( struct dquot * dquot ) ; 
/*--ocfs2_local_write_dquot--*/
int ocfs2_create_local_dquot ( struct dquot * dquot ) ; 
/*--ocfs2_create_local_dquot--*/
int ocfs2_local_release_dquot ( handle_t * handle , struct dquot * dquot ) ; 
/*--ocfs2_local_release_dquot--*/
int ocfs2_validate_quota_block ( struct super_block * sb , struct buffer_head * bh ) ; 
/*--ocfs2_validate_quota_block--*/
int ocfs2_read_quota_phys_block ( struct inode * inode , u64 p_block , struct buffer_head * * bhp ) ; 
/*--ocfs2_read_quota_phys_block--*/
ssize_t ocfs2_quota_read ( struct super_block * sb , int type , char * data , size_t len , loff_t off ) ; 
/*--ocfs2_quota_read--*/
ssize_t ocfs2_quota_write ( struct super_block * sb , int type , const char * data , size_t len , loff_t off ) ; 
/*--ocfs2_quota_write--*/
int ocfs2_lock_global_qf ( struct ocfs2_mem_dqinfo * oinfo , int ex ) ; 
/*--ocfs2_lock_global_qf--*/
void ocfs2_unlock_global_qf ( struct ocfs2_mem_dqinfo * oinfo , int ex ) ; 
/*--ocfs2_unlock_global_qf--*/
int ocfs2_global_read_info ( struct super_block * sb , int type ) ; 
/*--ocfs2_global_read_info--*/
int ocfs2_global_write_info ( struct super_block * sb , int type ) ; 
/*--ocfs2_global_write_info--*/
int __ocfs2_sync_dquot ( struct dquot * dquot , int freeing ) ; 
/*--__ocfs2_sync_dquot--*/
int ocfs2_quota_setup ( void ) ; 
/*--ocfs2_quota_setup--*/
void ocfs2_quota_shutdown ( void ) ; 
/*--ocfs2_quota_shutdown--*/
int ocfs2_calc_security_init ( struct inode * dir , struct ocfs2_security_xattr_info * si , int * want_clusters , int * xattr_credits , struct ocfs2_alloc_context * * xattr_ac ) ; 
/*--ocfs2_calc_security_init--*/
int ocfs2_calc_xattr_init ( struct inode * dir , struct buffer_head * dir_bh , int mode , struct ocfs2_security_xattr_info * si , int * want_clusters , int * xattr_credits , int * want_meta ) ; 
/*--ocfs2_calc_xattr_init--*/
int ocfs2_has_inline_xattr_value_outside ( struct inode * inode , struct ocfs2_dinode * di ) ; 
/*--ocfs2_has_inline_xattr_value_outside--*/
ssize_t ocfs2_listxattr ( struct dentry * dentry , char * buffer , size_t size ) ; 
/*--ocfs2_listxattr--*/
int ocfs2_xattr_get_nolock ( struct inode * inode , struct buffer_head * di_bh , int name_index , const char * name , void * buffer , size_t buffer_size ) ; 
/*--ocfs2_xattr_get_nolock--*/
int ocfs2_xattr_remove ( struct inode * inode , struct buffer_head * di_bh ) ; 
/*--ocfs2_xattr_remove--*/
int ocfs2_xattr_set_handle ( handle_t * handle , struct inode * inode , struct buffer_head * di_bh , int name_index , const char * name , const void * value , size_t value_len , int flags , struct ocfs2_alloc_context * meta_ac , struct ocfs2_alloc_context * data_ac ) ; 
/*--ocfs2_xattr_set_handle--*/
int ocfs2_xattr_set ( struct inode * inode , int name_index , const char * name , const void * value , size_t value_len , int flags ) ; 
/*--ocfs2_xattr_set--*/
int ocfs2_xattr_attach_refcount_tree ( struct inode * inode , struct buffer_head * fe_bh , struct ocfs2_caching_info * ref_ci , struct buffer_head * ref_root_bh , struct ocfs2_cached_dealloc_ctxt * dealloc ) ; 
/*--ocfs2_xattr_attach_refcount_tree--*/
int ocfs2_reflink_xattrs ( struct inode * old_inode , struct buffer_head * old_bh , struct inode * new_inode , struct buffer_head * new_bh , bool preserve_security ) ; 
/*--ocfs2_reflink_xattrs--*/
int ocfs2_init_security_and_acl ( struct inode * dir , struct inode * inode ) ; 
/*--ocfs2_init_security_and_acl--*/
int ocfs2_init_security_get ( struct inode * inode , struct inode * dir , struct ocfs2_security_xattr_info * si ) ; 
/*--ocfs2_init_security_get--*/
int ocfs2_init_security_set ( handle_t * handle , struct inode * inode , struct buffer_head * di_bh , struct ocfs2_security_xattr_info * si , struct ocfs2_alloc_context * xattr_ac , struct ocfs2_alloc_context * data_ac ) ; 
/*--ocfs2_init_security_set--*/
int ocfs2_check_acl ( struct inode * inode , int mask ) ; 
/*--ocfs2_check_acl--*/
int ocfs2_acl_chmod ( struct inode * inode ) ; 
/*--ocfs2_acl_chmod--*/
int ocfs2_init_acl ( handle_t * handle , struct inode * inode , struct inode * dir , struct buffer_head * di_bh , struct buffer_head * dir_bh , struct ocfs2_alloc_context * meta_ac , struct ocfs2_alloc_context * data_ac ) ; 
/*--ocfs2_init_acl--*/
int ocfs2_stack_glue_register ( struct ocfs2_stack_plugin * plugin ) ; 
/*--ocfs2_stack_glue_register--*/
void ocfs2_stack_glue_unregister ( struct ocfs2_stack_plugin * plugin ) ; 
/*--ocfs2_stack_glue_unregister--*/
void ocfs2_stack_glue_set_max_proto_version ( struct ocfs2_protocol_version * max_proto ) ; 
/*--ocfs2_stack_glue_set_max_proto_version--*/
int ocfs2_dlm_lock ( struct ocfs2_cluster_connection * conn , int mode , struct ocfs2_dlm_lksb * lksb , u32 flags , void * name , unsigned int namelen ) ; 
/*--ocfs2_dlm_lock--*/
int ocfs2_dlm_unlock ( struct ocfs2_cluster_connection * conn , struct ocfs2_dlm_lksb * lksb , u32 flags ) ; 
/*--ocfs2_dlm_unlock--*/
int ocfs2_dlm_lock_status ( struct ocfs2_dlm_lksb * lksb ) ; 
/*--ocfs2_dlm_lock_status--*/
int ocfs2_dlm_lvb_valid ( struct ocfs2_dlm_lksb * lksb ) ; 
/*--ocfs2_dlm_lvb_valid--*/
void * ocfs2_dlm_lvb ( struct ocfs2_dlm_lksb * lksb ) ; 
/*--ocfs2_dlm_lvb--*/
void ocfs2_dlm_dump_lksb ( struct ocfs2_dlm_lksb * lksb ) ; 
/*--ocfs2_dlm_dump_lksb--*/
int ocfs2_stack_supports_plocks ( void ) ; 
/*--ocfs2_stack_supports_plocks--*/
int ocfs2_plock ( struct ocfs2_cluster_connection * conn , u64 ino , struct file * file , int cmd , struct file_lock * fl ) ; 
/*--ocfs2_plock--*/
int ocfs2_cluster_connect ( const char * stack_name , const char * group , int grouplen , struct ocfs2_locking_protocol * lproto , void ( * recovery_handler ) ( int node_num , void * recovery_data ) , void * recovery_data , struct ocfs2_cluster_connection * * conn ) ; 
/*--ocfs2_cluster_connect--*/
int ocfs2_cluster_connect_agnostic ( const char * group , int grouplen , struct ocfs2_locking_protocol * lproto , void ( * recovery_handler ) ( int node_num , void * recovery_data ) , void * recovery_data , struct ocfs2_cluster_connection * * conn ) ; 
/*--ocfs2_cluster_connect_agnostic--*/
int ocfs2_cluster_disconnect ( struct ocfs2_cluster_connection * conn , int hangup_pending ) ; 
/*--ocfs2_cluster_disconnect--*/
void ocfs2_cluster_hangup ( const char * group , int grouplen ) ; 
/*--ocfs2_cluster_hangup--*/
int ocfs2_cluster_this_node ( unsigned int * node ) ; 
/*--ocfs2_cluster_this_node--*/
void o2hb_exit ( void ) ; 
/*--o2hb_exit--*/
int o2hb_init ( void ) ; 
/*--o2hb_init--*/
void o2hb_fill_node_map ( unsigned long * map , unsigned bytes ) ; 
/*--o2hb_fill_node_map--*/
struct config_group * o2hb_alloc_hb_set ( void ) ; 
/*--o2hb_alloc_hb_set--*/
void o2hb_free_hb_set ( struct config_group * group ) ; 
/*--o2hb_free_hb_set--*/
void o2hb_setup_callback ( struct o2hb_callback_func * hc , enum o2hb_callback_type type , o2hb_cb_func * func , void * data , int priority ) ; 
/*--o2hb_setup_callback--*/
int o2hb_register_callback ( const char * region_uuid , struct o2hb_callback_func * hc ) ; 
/*--o2hb_register_callback--*/
void o2hb_unregister_callback ( const char * region_uuid , struct o2hb_callback_func * hc ) ; 
/*--o2hb_unregister_callback--*/
int o2hb_check_node_heartbeating ( u8 node_num ) ; 
/*--o2hb_check_node_heartbeating--*/
int o2hb_check_node_heartbeating_from_callback ( u8 node_num ) ; 
/*--o2hb_check_node_heartbeating_from_callback--*/
int o2hb_check_local_node_heartbeating ( void ) ; 
/*--o2hb_check_local_node_heartbeating--*/
void o2hb_stop_all_regions ( void ) ; 
/*--o2hb_stop_all_regions--*/
int mlog_sys_init ( struct kset * o2cb_kset ) ; 
/*--mlog_sys_init--*/
void mlog_sys_shutdown ( void ) ; 
/*--mlog_sys_shutdown--*/
void o2cb_sys_shutdown ( void ) ; 
/*--o2cb_sys_shutdown--*/
int o2cb_sys_init ( void ) ; 
/*--o2cb_sys_init--*/
struct o2nm_node * o2nm_get_node_by_num ( u8 node_num ) ; 
/*--o2nm_get_node_by_num--*/
int o2nm_configured_node_map ( unsigned long * map , unsigned bytes ) ; 
/*--o2nm_configured_node_map--*/
struct o2nm_node * o2nm_get_node_by_ip ( __be32 addr ) ; 
/*--o2nm_get_node_by_ip--*/
void o2nm_node_put ( struct o2nm_node * node ) ; 
/*--o2nm_node_put--*/
void o2nm_node_get ( struct o2nm_node * node ) ; 
/*--o2nm_node_get--*/
u8 o2nm_this_node ( void ) ; 
/*--o2nm_this_node--*/
int o2nm_depend_item ( struct config_item * item ) ; 
/*--o2nm_depend_item--*/
void o2nm_undepend_item ( struct config_item * item ) ; 
/*--o2nm_undepend_item--*/
int o2nm_depend_this_node ( void ) ; 
/*--o2nm_depend_this_node--*/
void o2nm_undepend_this_node ( void ) ; 
/*--o2nm_undepend_this_node--*/
void o2quo_disk_timeout ( void ) ; 
/*--o2quo_disk_timeout--*/
void o2quo_hb_up ( u8 node ) ; 
/*--o2quo_hb_up--*/
void o2quo_hb_down ( u8 node ) ; 
/*--o2quo_hb_down--*/
void o2quo_hb_still_up ( u8 node ) ; 
/*--o2quo_hb_still_up--*/
void o2quo_conn_up ( u8 node ) ; 
/*--o2quo_conn_up--*/
void o2quo_conn_err ( u8 node ) ; 
/*--o2quo_conn_err--*/
void o2quo_init ( void ) ; 
/*--o2quo_init--*/
void o2quo_exit ( void ) ; 
/*--o2quo_exit--*/
int o2net_num_connected_peers ( void ) ; 
/*--o2net_num_connected_peers--*/
int o2net_register_handler ( u32 msg_type , u32 key , u32 max_len , o2net_msg_handler_func * func , void * data , o2net_post_msg_handler_func * post_func , struct list_head * unreg_list ) ; 
/*--o2net_register_handler--*/
void o2net_unregister_handler_list ( struct list_head * list ) ; 
/*--o2net_unregister_handler_list--*/
int o2net_send_message_vec ( u32 msg_type , u32 key , struct kvec * caller_vec , size_t caller_veclen , u8 target_node , int * status ) ; 
/*--o2net_send_message_vec--*/
int o2net_send_message ( u32 msg_type , u32 key , void * data , u32 len , u8 target_node , int * status ) ; 
/*--o2net_send_message--*/
void o2net_disconnect_node ( struct o2nm_node * node ) ; 
/*--o2net_disconnect_node--*/
void o2net_unregister_hb_callbacks ( void ) ; 
/*--o2net_unregister_hb_callbacks--*/
int o2net_register_hb_callbacks ( void ) ; 
/*--o2net_register_hb_callbacks--*/
int o2net_start_listening ( struct o2nm_node * node ) ; 
/*--o2net_start_listening--*/
void o2net_stop_listening ( struct o2nm_node * node ) ; 
/*--o2net_stop_listening--*/
int o2net_init ( void ) ; 
/*--o2net_init--*/
void o2net_exit ( void ) ; 
/*--o2net_exit--*/
void o2net_debug_add_nst ( struct o2net_send_tracking * nst ) ; 
/*--o2net_debug_add_nst--*/
void o2net_debug_del_nst ( struct o2net_send_tracking * nst ) ; 
/*--o2net_debug_del_nst--*/
void o2net_debug_add_sc ( struct o2net_sock_container * sc ) ; 
/*--o2net_debug_add_sc--*/
void o2net_debug_del_sc ( struct o2net_sock_container * sc ) ; 
/*--o2net_debug_del_sc--*/
int o2net_debugfs_init ( void ) ; 
/*--o2net_debugfs_init--*/
void o2net_debugfs_exit ( void ) ; 
/*--o2net_debugfs_exit--*/
void cluster_print_version ( void ) ; 
/*--cluster_print_version--*/
void __dlm_unhash_lockres ( struct dlm_lock_resource * lockres ) ; 
/*--__dlm_unhash_lockres--*/
void __dlm_insert_lockres ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--__dlm_insert_lockres--*/
struct dlm_lock_resource * __dlm_lookup_lockres_full ( struct dlm_ctxt * dlm , const char * name , unsigned int len , unsigned int hash ) ; 
/*--__dlm_lookup_lockres_full--*/
struct dlm_lock_resource * __dlm_lookup_lockres ( struct dlm_ctxt * dlm , const char * name , unsigned int len , unsigned int hash ) ; 
/*--__dlm_lookup_lockres--*/
struct dlm_lock_resource * dlm_lookup_lockres ( struct dlm_ctxt * dlm , const char * name , unsigned int len ) ; 
/*--dlm_lookup_lockres--*/
void dlm_put ( struct dlm_ctxt * dlm ) ; 
/*--dlm_put--*/
struct dlm_ctxt * dlm_grab ( struct dlm_ctxt * dlm ) ; 
/*--dlm_grab--*/
int dlm_domain_fully_joined ( struct dlm_ctxt * dlm ) ; 
/*--dlm_domain_fully_joined--*/
int dlm_joined ( struct dlm_ctxt * dlm ) ; 
/*--dlm_joined--*/
int dlm_shutting_down ( struct dlm_ctxt * dlm ) ; 
/*--dlm_shutting_down--*/
void dlm_unregister_domain ( struct dlm_ctxt * dlm ) ; 
/*--dlm_unregister_domain--*/
struct dlm_ctxt * dlm_register_domain ( const char * domain , u32 key , struct dlm_protocol_version * fs_proto ) ; 
/*--dlm_register_domain--*/
void dlm_fire_domain_eviction_callbacks ( struct dlm_ctxt * dlm , int node_num ) ; 
/*--dlm_fire_domain_eviction_callbacks--*/
void dlm_setup_eviction_cb ( struct dlm_eviction_cb * cb , dlm_eviction_func * f , void * data ) ; 
/*--dlm_setup_eviction_cb--*/
void dlm_register_eviction_cb ( struct dlm_ctxt * dlm , struct dlm_eviction_cb * cb ) ; 
/*--dlm_register_eviction_cb--*/
void dlm_unregister_eviction_cb ( struct dlm_eviction_cb * cb ) ; 
/*--dlm_unregister_eviction_cb--*/
void dlm_print_one_lock_resource ( struct dlm_lock_resource * res ) ; 
/*--dlm_print_one_lock_resource--*/
void __dlm_print_one_lock_resource ( struct dlm_lock_resource * res ) ; 
/*--__dlm_print_one_lock_resource--*/
void dlm_print_one_lock ( struct dlm_lock * lockid ) ; 
/*--dlm_print_one_lock--*/
const char * dlm_errmsg ( enum dlm_status err ) ; 
/*--dlm_errmsg--*/
const char * dlm_errname ( enum dlm_status err ) ; 
/*--dlm_errname--*/
void dlm_print_one_mle ( struct dlm_master_list_entry * mle ) ; 
/*--dlm_print_one_mle--*/
int dlm_debug_init ( struct dlm_ctxt * dlm ) ; 
/*--dlm_debug_init--*/
void dlm_debug_shutdown ( struct dlm_ctxt * dlm ) ; 
/*--dlm_debug_shutdown--*/
int dlm_create_debugfs_subroot ( struct dlm_ctxt * dlm ) ; 
/*--dlm_create_debugfs_subroot--*/
void dlm_destroy_debugfs_subroot ( struct dlm_ctxt * dlm ) ; 
/*--dlm_destroy_debugfs_subroot--*/
int dlm_create_debugfs_root ( void ) ; 
/*--dlm_create_debugfs_root--*/
void dlm_destroy_debugfs_root ( void ) ; 
/*--dlm_destroy_debugfs_root--*/
void __dlm_wait_on_lockres_flags ( struct dlm_lock_resource * res , int flags ) ; 
/*--__dlm_wait_on_lockres_flags--*/
int __dlm_lockres_has_locks ( struct dlm_lock_resource * res ) ; 
/*--__dlm_lockres_has_locks--*/
int __dlm_lockres_unused ( struct dlm_lock_resource * res ) ; 
/*--__dlm_lockres_unused--*/
void __dlm_lockres_calc_usage ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--__dlm_lockres_calc_usage--*/
void dlm_lockres_calc_usage ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--dlm_lockres_calc_usage--*/
void dlm_kick_thread ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--dlm_kick_thread--*/
void __dlm_dirty_lockres ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--__dlm_dirty_lockres--*/
int dlm_launch_thread ( struct dlm_ctxt * dlm ) ; 
/*--dlm_launch_thread--*/
void dlm_complete_thread ( struct dlm_ctxt * dlm ) ; 
/*--dlm_complete_thread--*/
void dlm_dispatch_work ( struct work_struct * work ) ; 
/*--dlm_dispatch_work--*/
void dlm_kick_recovery_thread ( struct dlm_ctxt * dlm ) ; 
/*--dlm_kick_recovery_thread--*/
int dlm_launch_recovery_thread ( struct dlm_ctxt * dlm ) ; 
/*--dlm_launch_recovery_thread--*/
void dlm_complete_recovery_thread ( struct dlm_ctxt * dlm ) ; 
/*--dlm_complete_recovery_thread--*/
int dlm_is_node_dead ( struct dlm_ctxt * dlm , u8 node ) ; 
/*--dlm_is_node_dead--*/
int dlm_wait_for_node_death ( struct dlm_ctxt * dlm , u8 node , int timeout ) ; 
/*--dlm_wait_for_node_death--*/
int dlm_wait_for_node_recovery ( struct dlm_ctxt * dlm , u8 node , int timeout ) ; 
/*--dlm_wait_for_node_recovery--*/
void dlm_wait_for_recovery ( struct dlm_ctxt * dlm ) ; 
/*--dlm_wait_for_recovery--*/
int dlm_request_all_locks_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_request_all_locks_handler--*/
int dlm_reco_data_done_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_reco_data_done_handler--*/
int dlm_send_one_lockres ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , struct dlm_migratable_lockres * mres , u8 send_to , u8 flags ) ; 
/*--dlm_send_one_lockres--*/
int dlm_mig_lockres_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_mig_lockres_handler--*/
int dlm_do_master_requery ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , u8 nodenum , u8 * real_master ) ; 
/*--dlm_do_master_requery--*/
int dlm_master_requery_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_master_requery_handler--*/
void dlm_move_lockres_to_recovery_list ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--dlm_move_lockres_to_recovery_list--*/
void dlm_hb_node_down_cb ( struct o2nm_node * node , int idx , void * data ) ; 
/*--dlm_hb_node_down_cb--*/
void dlm_hb_node_up_cb ( struct o2nm_node * node , int idx , void * data ) ; 
/*--dlm_hb_node_up_cb--*/
int dlm_begin_reco_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_begin_reco_handler--*/
int dlm_finalize_reco_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_finalize_reco_handler--*/
int dlm_is_host_down ( int errno ) ; 
/*--dlm_is_host_down--*/
void __dlm_unlink_mle ( struct dlm_ctxt * dlm , struct dlm_master_list_entry * mle ) ; 
/*--__dlm_unlink_mle--*/
void __dlm_insert_mle ( struct dlm_ctxt * dlm , struct dlm_master_list_entry * mle ) ; 
/*--__dlm_insert_mle--*/
void dlm_hb_event_notify_attached ( struct dlm_ctxt * dlm , int idx , int node_up ) ; 
/*--dlm_hb_event_notify_attached--*/
int dlm_init_mle_cache ( void ) ; 
/*--dlm_init_mle_cache--*/
void dlm_destroy_mle_cache ( void ) ; 
/*--dlm_destroy_mle_cache--*/
int dlm_init_master_caches ( void ) ; 
/*--dlm_init_master_caches--*/
void dlm_destroy_master_caches ( void ) ; 
/*--dlm_destroy_master_caches--*/
void dlm_lockres_put ( struct dlm_lock_resource * res ) ; 
/*--dlm_lockres_put--*/
struct dlm_lock_resource * dlm_new_lockres ( struct dlm_ctxt * dlm , const char * name , unsigned int namelen ) ; 
/*--dlm_new_lockres--*/
void __dlm_lockres_grab_inflight_ref ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , int new_lockres , const char * file , int line ) ; 
/*--__dlm_lockres_grab_inflight_ref--*/
void __dlm_lockres_drop_inflight_ref ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , const char * file , int line ) ; 
/*--__dlm_lockres_drop_inflight_ref--*/
struct dlm_lock_resource * dlm_get_lock_resource ( struct dlm_ctxt * dlm , const char * lockid , int namelen , int flags ) ; 
/*--dlm_get_lock_resource--*/
int dlm_master_request_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_master_request_handler--*/
int dlm_assert_master_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_assert_master_handler--*/
void dlm_assert_master_post_handler ( int status , void * data , void * ret_data ) ; 
/*--dlm_assert_master_post_handler--*/
int dlm_dispatch_assert_master ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , int ignore_higher , u8 request_from , u32 flags ) ; 
/*--dlm_dispatch_assert_master--*/
int dlm_drop_lockres_ref ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--dlm_drop_lockres_ref--*/
int dlm_deref_lockres_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_deref_lockres_handler--*/
int dlm_empty_lockres ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--dlm_empty_lockres--*/
int dlm_lock_basts_flushed ( struct dlm_ctxt * dlm , struct dlm_lock * lock ) ; 
/*--dlm_lock_basts_flushed--*/
int dlm_migrate_request_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_migrate_request_handler--*/
void dlm_clean_master_list ( struct dlm_ctxt * dlm , u8 dead_node ) ; 
/*--dlm_clean_master_list--*/
int dlm_finish_migration ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , u8 old_master ) ; 
/*--dlm_finish_migration--*/
void __dlm_lockres_reserve_ast ( struct dlm_lock_resource * res ) ; 
/*--__dlm_lockres_reserve_ast--*/
void dlm_lockres_release_ast ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res ) ; 
/*--dlm_lockres_release_ast--*/
void __dlm_queue_ast ( struct dlm_ctxt * dlm , struct dlm_lock * lock ) ; 
/*--__dlm_queue_ast--*/
void dlm_queue_ast ( struct dlm_ctxt * dlm , struct dlm_lock * lock ) ; 
/*--dlm_queue_ast--*/
void __dlm_queue_bast ( struct dlm_ctxt * dlm , struct dlm_lock * lock ) ; 
/*--__dlm_queue_bast--*/
void dlm_queue_bast ( struct dlm_ctxt * dlm , struct dlm_lock * lock ) ; 
/*--dlm_queue_bast--*/
void dlm_do_local_ast ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , struct dlm_lock * lock ) ; 
/*--dlm_do_local_ast--*/
int dlm_do_remote_ast ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , struct dlm_lock * lock ) ; 
/*--dlm_do_remote_ast--*/
void dlm_do_local_bast ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , struct dlm_lock * lock , int blocked_type ) ; 
/*--dlm_do_local_bast--*/
int dlm_proxy_ast_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_proxy_ast_handler--*/
int dlm_send_proxy_ast_msg ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , struct dlm_lock * lock , int msg_type , int blocked_type , int flags ) ; 
/*--dlm_send_proxy_ast_msg--*/
enum dlm_status dlmconvert_master ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , struct dlm_lock * lock , int flags , int type ) ; 
/*--dlmconvert_master--*/
void dlm_revert_pending_convert ( struct dlm_lock_resource * res , struct dlm_lock * lock ) ; 
/*--dlm_revert_pending_convert--*/
enum dlm_status dlmconvert_remote ( struct dlm_ctxt * dlm , struct dlm_lock_resource * res , struct dlm_lock * lock , int flags , int type ) ; 
/*--dlmconvert_remote--*/
int dlm_convert_lock_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_convert_lock_handler--*/
int dlm_init_lock_cache ( void ) ; 
/*--dlm_init_lock_cache--*/
void dlm_destroy_lock_cache ( void ) ; 
/*--dlm_destroy_lock_cache--*/
void dlm_revert_pending_lock ( struct dlm_lock_resource * res , struct dlm_lock * lock ) ; 
/*--dlm_revert_pending_lock--*/
void dlm_lock_get ( struct dlm_lock * lock ) ; 
/*--dlm_lock_get--*/
void dlm_lock_put ( struct dlm_lock * lock ) ; 
/*--dlm_lock_put--*/
void dlm_lock_attach_lockres ( struct dlm_lock * lock , struct dlm_lock_resource * res ) ; 
/*--dlm_lock_attach_lockres--*/
struct dlm_lock * dlm_new_lock ( int type , u8 node , u64 cookie , struct dlm_lockstatus * lksb ) ; 
/*--dlm_new_lock--*/
int dlm_create_lock_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_create_lock_handler--*/
enum dlm_status dlmlock ( struct dlm_ctxt * dlm , int mode , struct dlm_lockstatus * lksb , int flags , const char * name , int namelen , dlm_astlockfunc_t * ast , void * data , dlm_bastlockfunc_t * bast ) ; 
/*--dlmlock--*/
void dlm_commit_pending_unlock ( struct dlm_lock_resource * res , struct dlm_lock * lock ) ; 
/*--dlm_commit_pending_unlock--*/
void dlm_commit_pending_cancel ( struct dlm_lock_resource * res , struct dlm_lock * lock ) ; 
/*--dlm_commit_pending_cancel--*/
int dlm_unlock_lock_handler ( struct o2net_msg * msg , u32 len , void * data , void * * ret_data ) ; 
/*--dlm_unlock_lock_handler--*/
enum dlm_status dlmunlock ( struct dlm_ctxt * dlm , struct dlm_lockstatus * lksb , int flags , dlm_astunlockfunc_t * unlockast , void * data ) ; 
/*--dlmunlock--*/
void dlm_print_version ( void ) ; 
/*--dlm_print_version--*/
int user_dlm_cluster_lock ( struct user_lock_res * lockres , int level , int lkm_flags ) ; 
/*--user_dlm_cluster_lock--*/
void user_dlm_cluster_unlock ( struct user_lock_res * lockres , int level ) ; 
/*--user_dlm_cluster_unlock--*/
void user_dlm_write_lvb ( struct inode * inode , const char * val , unsigned int len ) ; 
/*--user_dlm_write_lvb--*/
ssize_t user_dlm_read_lvb ( struct inode * inode , char * val , unsigned int len ) ; 
/*--user_dlm_read_lvb--*/
void user_dlm_lock_res_init ( struct user_lock_res * lockres , struct dentry * dentry ) ; 
/*--user_dlm_lock_res_init--*/
int user_dlm_destroy_lock ( struct user_lock_res * lockres ) ; 
/*--user_dlm_destroy_lock--*/
void user_dlm_set_locking_protocol ( void ) ; 
/*--user_dlm_set_locking_protocol--*/
struct ocfs2_cluster_connection * user_dlm_register ( struct qstr * name ) ; 
/*--user_dlm_register--*/
void user_dlm_unregister ( struct ocfs2_cluster_connection * conn ) ; 
/*--user_dlm_unregister--*/
int param_set_dlmfs_capabilities ( const char * val , struct kernel_param * kp ) ; 
/*--param_set_dlmfs_capabilities--*/
void dlmfs_print_version ( void ) ; 
/*--dlmfs_print_version--*/
unsigned long omfs_count_free ( struct super_block * sb ) ; 
/*--omfs_count_free--*/
int omfs_allocate_block ( struct super_block * sb , u64 block ) ; 
/*--omfs_allocate_block--*/
int omfs_allocate_range ( struct super_block * sb , int min_request , int max_request , u64 * return_block , int * return_size ) ; 
/*--omfs_allocate_range--*/
int omfs_clear_range ( struct super_block * sb , u64 block , int count ) ; 
/*--omfs_clear_range--*/
int omfs_make_empty ( struct inode * inode , struct super_block * sb ) ; 
/*--omfs_make_empty--*/
int omfs_is_bad ( struct omfs_sb_info * sbi , struct omfs_header * header , u64 fsblock ) ; 
/*--omfs_is_bad--*/
void omfs_make_empty_table ( struct buffer_head * bh , int offset ) ; 
/*--omfs_make_empty_table--*/
int omfs_shrink_inode ( struct inode * inode ) ; 
/*--omfs_shrink_inode--*/
struct inode * omfs_new_inode ( struct inode * dir , int mode ) ; 
/*--omfs_new_inode--*/
int omfs_sync_inode ( struct inode * inode ) ; 
/*--omfs_sync_inode--*/
struct inode * omfs_iget ( struct super_block * sb , ino_t ino ) ; 
/*--omfs_iget--*/
struct buffer_head * qnx4_bread ( struct inode * inode , int block , int create ) ; 
/*--qnx4_bread--*/
unsigned long qnx4_block_map ( struct inode * inode , long iblock ) ; 
/*--qnx4_block_map--*/
struct inode * qnx4_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--qnx4_iget--*/
struct dentry * qnx4_lookup ( struct inode * dir , struct dentry * dentry , struct nameidata * nd ) ; 
/*--qnx4_lookup--*/
unsigned long qnx4_count_free_blocks ( struct super_block * sb ) ; 
/*--qnx4_count_free_blocks--*/
int qtree_entry_unused ( struct qtree_mem_dqinfo * info , char * disk ) ; 
/*--qtree_entry_unused--*/
int qtree_write_dquot ( struct qtree_mem_dqinfo * info , struct dquot * dquot ) ; 
/*--qtree_write_dquot--*/
int qtree_delete_dquot ( struct qtree_mem_dqinfo * info , struct dquot * dquot ) ; 
/*--qtree_delete_dquot--*/
int qtree_read_dquot ( struct qtree_mem_dqinfo * info , struct dquot * dquot ) ; 
/*--qtree_read_dquot--*/
int qtree_release_dquot ( struct qtree_mem_dqinfo * info , struct dquot * dquot ) ; 
/*--qtree_release_dquot--*/
int is_reusable ( struct super_block * s , b_blocknr_t block , int bit_value ) ; 
/*--is_reusable--*/
__le32 reiserfs_choose_packing ( struct inode * dir ) ; 
/*--reiserfs_choose_packing--*/
void reiserfs_free_block ( struct reiserfs_transaction_handle * th , struct inode * inode , b_blocknr_t block , int for_unformatted ) ; 
/*--reiserfs_free_block--*/
void reiserfs_discard_prealloc ( struct reiserfs_transaction_handle * th , struct inode * inode ) ; 
/*--reiserfs_discard_prealloc--*/
void reiserfs_discard_all_prealloc ( struct reiserfs_transaction_handle * th ) ; 
/*--reiserfs_discard_all_prealloc--*/
void reiserfs_init_alloc_options ( struct super_block * s ) ; 
/*--reiserfs_init_alloc_options--*/
int reiserfs_parse_alloc_options ( struct super_block * s , char * options ) ; 
/*--reiserfs_parse_alloc_options--*/
int reiserfs_allocate_blocknrs ( reiserfs_blocknr_hint_t * hint , b_blocknr_t * new_blocknrs , int amount_needed , int reserved_by_us ) ; 
/*--reiserfs_allocate_blocknrs--*/
void reiserfs_cache_bitmap_metadata ( struct super_block * sb , struct buffer_head * bh , struct reiserfs_bitmap_info * info ) ; 
/*--reiserfs_cache_bitmap_metadata--*/
struct buffer_head * reiserfs_read_bitmap_block ( struct super_block * sb , unsigned int bitmap ) ; 
/*--reiserfs_read_bitmap_block--*/
int reiserfs_init_bitmap_cache ( struct super_block * sb ) ; 
/*--reiserfs_init_bitmap_cache--*/
void reiserfs_free_bitmap_cache ( struct super_block * sb ) ; 
/*--reiserfs_free_bitmap_cache--*/
void make_empty_node ( struct buffer_info * bi ) ; 
/*--make_empty_node--*/
struct buffer_head * get_FEB ( struct tree_balance * tb ) ; 
/*--get_FEB--*/
void reiserfs_invalidate_buffer ( struct tree_balance * tb , struct buffer_head * bh ) ; 
/*--reiserfs_invalidate_buffer--*/
void replace_key ( struct tree_balance * tb , struct buffer_head * dest , int n_dest , struct buffer_head * src , int n_src ) ; 
/*--replace_key--*/
int get_left_neighbor_position ( struct tree_balance * tb , int h ) ; 
/*--get_left_neighbor_position--*/
int get_right_neighbor_position ( struct tree_balance * tb , int h ) ; 
/*--get_right_neighbor_position--*/
void do_balance ( struct tree_balance * tb , struct item_head * ih , const char * body , int flag ) ; 
/*--do_balance--*/
int search_by_entry_key ( struct super_block * sb , const struct cpu_key * key , struct treepath * path , struct reiserfs_dir_entry * de ) ; 
/*--search_by_entry_key--*/
struct dentry * reiserfs_get_parent ( struct dentry * child ) ; 
/*--reiserfs_get_parent--*/
void reiserfs_delete_inode ( struct inode * inode ) ; 
/*--reiserfs_delete_inode--*/
void make_cpu_key ( struct cpu_key * key , struct inode * inode , loff_t offset , int type , int length ) ; 
/*--make_cpu_key--*/
int reiserfs_get_block ( struct inode * inode , sector_t block , struct buffer_head * bh_result , int create ) ; 
/*--reiserfs_get_block--*/
void reiserfs_update_sd_size ( struct reiserfs_transaction_handle * th , struct inode * inode , loff_t size ) ; 
/*--reiserfs_update_sd_size--*/
int reiserfs_init_locked_inode ( struct inode * inode , void * p ) ; 
/*--reiserfs_init_locked_inode--*/
void reiserfs_read_locked_inode ( struct inode * inode , struct reiserfs_iget_args * args ) ; 
/*--reiserfs_read_locked_inode--*/
int reiserfs_find_actor ( struct inode * inode , void * opaque ) ; 
/*--reiserfs_find_actor--*/
struct inode * reiserfs_iget ( struct super_block * s , const struct cpu_key * key ) ; 
/*--reiserfs_iget--*/
struct dentry * reiserfs_fh_to_dentry ( struct super_block * sb , struct fid * fid , int fh_len , int fh_type ) ; 
/*--reiserfs_fh_to_dentry--*/
struct dentry * reiserfs_fh_to_parent ( struct super_block * sb , struct fid * fid , int fh_len , int fh_type ) ; 
/*--reiserfs_fh_to_parent--*/
int reiserfs_encode_fh ( struct dentry * dentry , __u32 * data , int * lenp , int need_parent ) ; 
/*--reiserfs_encode_fh--*/
int reiserfs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--reiserfs_write_inode--*/
int reiserfs_new_inode ( struct reiserfs_transaction_handle * th , struct inode * dir , int mode , const char * symname , loff_t i_size , struct dentry * dentry , struct inode * inode , struct reiserfs_security_handle * security ) ; 
/*--reiserfs_new_inode--*/
int reiserfs_truncate_file ( struct inode * inode , int update_timestamps ) ; 
/*--reiserfs_truncate_file--*/
int reiserfs_prepare_write ( struct file * f , struct page * page , unsigned from , unsigned to ) ; 
/*--reiserfs_prepare_write--*/
int reiserfs_commit_write ( struct file * f , struct page * page , unsigned from , unsigned to ) ; 
/*--reiserfs_commit_write--*/
void sd_attrs_to_i_attrs ( __u16 sd_attrs , struct inode * inode ) ; 
/*--sd_attrs_to_i_attrs--*/
void i_attrs_to_sd_attrs ( struct inode * inode , __u16 * sd_attrs ) ; 
/*--i_attrs_to_sd_attrs--*/
int reiserfs_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--reiserfs_setattr--*/
int reiserfs_commit_page ( struct inode * inode , struct page * page , unsigned from , unsigned to ) ; 
/*--reiserfs_commit_page--*/
int reiserfs_readdir_dentry ( struct dentry * dentry , void * dirent , filldir_t filldir , loff_t * pos ) ; 
/*--reiserfs_readdir_dentry--*/
void make_empty_dir_item_v1 ( char * body , __le32 dirid , __le32 objid , __le32 par_dirid , __le32 par_objid ) ; 
/*--make_empty_dir_item_v1--*/
void make_empty_dir_item ( char * body , __le32 dirid , __le32 objid , __le32 par_dirid , __le32 par_objid ) ; 
/*--make_empty_dir_item--*/
int fix_nodes ( int op_mode , struct tree_balance * tb , struct item_head * ins_ih , const void * data ) ; 
/*--fix_nodes--*/
void unfix_nodes ( struct tree_balance * tb ) ; 
/*--unfix_nodes--*/
int is_reiserfs_3_5 ( struct reiserfs_super_block * rs ) ; 
/*--is_reiserfs_3_5--*/
int is_reiserfs_3_6 ( struct reiserfs_super_block * rs ) ; 
/*--is_reiserfs_3_6--*/
int is_reiserfs_jr ( struct reiserfs_super_block * rs ) ; 
/*--is_reiserfs_jr--*/
void add_save_link ( struct reiserfs_transaction_handle * th , struct inode * inode , int truncate ) ; 
/*--add_save_link--*/
int remove_save_link ( struct inode * inode , int truncate ) ; 
/*--remove_save_link--*/
void __reiserfs_warning ( struct super_block * sb , const char * id , const char * function , const char * fmt , ... ) ; 
/*--__reiserfs_warning--*/
void reiserfs_info ( struct super_block * sb , const char * fmt , ... ) ; 
/*--reiserfs_info--*/
void reiserfs_debug ( struct super_block * s , int level , const char * fmt , ... ) ; 
/*--reiserfs_debug--*/
void __reiserfs_panic ( struct super_block * sb , const char * id , const char * function , const char * fmt , ... ) ; 
/*--__reiserfs_panic--*/
void __reiserfs_error ( struct super_block * sb , const char * id , const char * function , const char * fmt , ... ) ; 
/*--__reiserfs_error--*/
void reiserfs_abort ( struct super_block * sb , int errno , const char * fmt , ... ) ; 
/*--reiserfs_abort--*/
char * reiserfs_hashname ( int code ) ; 
/*--reiserfs_hashname--*/
void print_block ( struct buffer_head * bh , ... ) ; 
/*--print_block--*/
void store_print_tb ( struct tree_balance * tb ) ; 
/*--store_print_tb--*/
void print_cur_tb ( char * mes ) ; 
/*--print_cur_tb--*/
void check_leaf ( struct buffer_head * bh ) ; 
/*--check_leaf--*/
void check_internal ( struct buffer_head * bh ) ; 
/*--check_internal--*/
void print_statistics ( struct super_block * s ) ; 
/*--print_statistics--*/
__u32 reiserfs_get_unused_objectid ( struct reiserfs_transaction_handle * th ) ; 
/*--reiserfs_get_unused_objectid--*/
void reiserfs_release_objectid ( struct reiserfs_transaction_handle * th , __u32 objectid_to_release ) ; 
/*--reiserfs_release_objectid--*/
int reiserfs_convert_objectid_map_v1 ( struct super_block * s ) ; 
/*--reiserfs_convert_objectid_map_v1--*/
int leaf_move_items ( int shift_mode , struct tree_balance * tb , int mov_num , int mov_bytes , struct buffer_head * Snew ) ; 
/*--leaf_move_items--*/
int leaf_shift_left ( struct tree_balance * tb , int shift_num , int shift_bytes ) ; 
/*--leaf_shift_left--*/
int leaf_shift_right ( struct tree_balance * tb , int shift_num , int shift_bytes ) ; 
/*--leaf_shift_right--*/
void leaf_delete_items ( struct buffer_info * cur_bi , int last_first , int first , int del_num , int del_bytes ) ; 
/*--leaf_delete_items--*/
void leaf_insert_into_buf ( struct buffer_info * bi , int before , struct item_head * inserted_item_ih , const char * inserted_item_body , int zeros_number ) ; 
/*--leaf_insert_into_buf--*/
void leaf_paste_in_buffer ( struct buffer_info * bi , int affected_item_num , int pos_in_item , int paste_size , const char * body , int zeros_number ) ; 
/*--leaf_paste_in_buffer--*/
void leaf_cut_from_buffer ( struct buffer_info * bi , int cut_item_num , int pos_in_item , int cut_size ) ; 
/*--leaf_cut_from_buffer--*/
void leaf_paste_entries ( struct buffer_info * bi , int item_num , int before , int new_entry_count , struct reiserfs_de_head * new_dehs , const char * records , int paste_size ) ; 
/*--leaf_paste_entries--*/
int balance_internal ( struct tree_balance * tb , int h , int child_pos , struct item_head * insert_key , struct buffer_head * * insert_ptr ) ; 
/*--balance_internal--*/
int reiserfs_check_path ( struct treepath * p ) ; 
/*--reiserfs_check_path--*/
void pathrelse_and_restore ( struct super_block * sb , struct treepath * search_path ) ; 
/*--pathrelse_and_restore--*/
void pathrelse ( struct treepath * search_path ) ; 
/*--pathrelse--*/
int search_by_key ( struct super_block * sb , const struct cpu_key * key , struct treepath * search_path , int stop_level ) ; 
/*--search_by_key--*/
int search_for_position_by_key ( struct super_block * sb , const struct cpu_key * p_cpu_key , struct treepath * search_path ) ; 
/*--search_for_position_by_key--*/
int comp_items ( const struct item_head * stored_ih , const struct treepath * path ) ; 
/*--comp_items--*/
void padd_item ( char * item , int total_length , int length ) ; 
/*--padd_item--*/
int reiserfs_delete_item ( struct reiserfs_transaction_handle * th , struct treepath * path , const struct cpu_key * item_key , struct inode * inode , struct buffer_head * un_bh ) ; 
/*--reiserfs_delete_item--*/
void reiserfs_delete_solid_item ( struct reiserfs_transaction_handle * th , struct inode * inode , struct reiserfs_key * key ) ; 
/*--reiserfs_delete_solid_item--*/
int reiserfs_delete_object ( struct reiserfs_transaction_handle * th , struct inode * inode ) ; 
/*--reiserfs_delete_object--*/
int reiserfs_cut_from_item ( struct reiserfs_transaction_handle * th , struct treepath * path , struct cpu_key * item_key , struct inode * inode , struct page * page , loff_t new_file_size ) ; 
/*--reiserfs_cut_from_item--*/
int reiserfs_do_truncate ( struct reiserfs_transaction_handle * th , struct inode * inode , struct page * page , int update_timestamps ) ; 
/*--reiserfs_do_truncate--*/
int reiserfs_paste_into_item ( struct reiserfs_transaction_handle * th , struct treepath * search_path , const struct cpu_key * key , struct inode * inode , const char * body , int pasted_size ) ; 
/*--reiserfs_paste_into_item--*/
int reiserfs_insert_item ( struct reiserfs_transaction_handle * th , struct treepath * path , const struct cpu_key * key , struct item_head * ih , struct inode * inode , const char * body ) ; 
/*--reiserfs_insert_item--*/
u32 keyed_hash ( const signed char * msg , int len ) ; 
/*--keyed_hash--*/
u32 yura_hash ( const signed char * msg , int len ) ; 
/*--yura_hash--*/
u32 r5_hash ( const signed char * msg , int len ) ; 
/*--r5_hash--*/
int direct2indirect ( struct reiserfs_transaction_handle * th , struct inode * inode , struct treepath * path , struct buffer_head * unbh , loff_t tail_offset ) ; 
/*--direct2indirect--*/
void reiserfs_unmap_buffer ( struct buffer_head * bh ) ; 
/*--reiserfs_unmap_buffer--*/
int indirect2direct ( struct reiserfs_transaction_handle * th , struct inode * inode , struct page * page , struct treepath * path , const struct cpu_key * item_key , loff_t n_new_file_size , char * mode ) ; 
/*--indirect2direct--*/
int reiserfs_allocate_list_bitmaps ( struct super_block * sb , struct reiserfs_list_bitmap * jb_array , unsigned int bmap_nr ) ; 
/*--reiserfs_allocate_list_bitmaps--*/
int reiserfs_in_journal ( struct super_block * sb , unsigned int bmap_nr , int bit_nr , int search_all , b_blocknr_t * next_zero_bit ) ; 
/*--reiserfs_in_journal--*/
void reiserfs_free_jh ( struct buffer_head * bh ) ; 
/*--reiserfs_free_jh--*/
int reiserfs_add_tail_list ( struct inode * inode , struct buffer_head * bh ) ; 
/*--reiserfs_add_tail_list--*/
int reiserfs_add_ordered_list ( struct inode * inode , struct buffer_head * bh ) ; 
/*--reiserfs_add_ordered_list--*/
void remove_journal_hash ( struct super_block * sb , struct reiserfs_journal_cnode * * table , struct reiserfs_journal_list * jl , unsigned long block , int remove_freed ) ; 
/*--remove_journal_hash--*/
int journal_release ( struct reiserfs_transaction_handle * th , struct super_block * sb ) ; 
/*--journal_release--*/
int journal_release_error ( struct reiserfs_transaction_handle * th , struct super_block * sb ) ; 
/*--journal_release_error--*/
int journal_init ( struct super_block * sb , const char * j_dev_name , int old_format , unsigned int commit_max_age ) ; 
/*--journal_init--*/
int journal_transaction_should_end ( struct reiserfs_transaction_handle * th , int new_alloc ) ; 
/*--journal_transaction_should_end--*/
void reiserfs_block_writes ( struct reiserfs_transaction_handle * th ) ; 
/*--reiserfs_block_writes--*/
void reiserfs_allow_writes ( struct super_block * s ) ; 
/*--reiserfs_allow_writes--*/
void reiserfs_wait_on_write_block ( struct super_block * s ) ; 
/*--reiserfs_wait_on_write_block--*/
struct reiserfs_transaction_handle * reiserfs_persistent_transaction ( struct super_block * s , int nblocks ) ; 
/*--reiserfs_persistent_transaction--*/
int reiserfs_end_persistent_transaction ( struct reiserfs_transaction_handle * th ) ; 
/*--reiserfs_end_persistent_transaction--*/
int journal_join_abort ( struct reiserfs_transaction_handle * th , struct super_block * sb , unsigned long nblocks ) ; 
/*--journal_join_abort--*/
int journal_begin ( struct reiserfs_transaction_handle * th , struct super_block * sb , unsigned long nblocks ) ; 
/*--journal_begin--*/
int journal_mark_dirty ( struct reiserfs_transaction_handle * th , struct super_block * sb , struct buffer_head * bh ) ; 
/*--journal_mark_dirty--*/
int journal_end ( struct reiserfs_transaction_handle * th , struct super_block * sb , unsigned long nblocks ) ; 
/*--journal_end--*/
int journal_end_sync ( struct reiserfs_transaction_handle * th , struct super_block * sb , unsigned long nblocks ) ; 
/*--journal_end_sync--*/
int reiserfs_flush_old_commits ( struct super_block * sb ) ; 
/*--reiserfs_flush_old_commits--*/
int journal_mark_freed ( struct reiserfs_transaction_handle * th , struct super_block * sb , b_blocknr_t blocknr ) ; 
/*--journal_mark_freed--*/
void reiserfs_update_inode_transaction ( struct inode * inode ) ; 
/*--reiserfs_update_inode_transaction--*/
int reiserfs_commit_for_inode ( struct inode * inode ) ; 
/*--reiserfs_commit_for_inode--*/
void reiserfs_restore_prepared_buffer ( struct super_block * sb , struct buffer_head * bh ) ; 
/*--reiserfs_restore_prepared_buffer--*/
int reiserfs_prepare_for_journal ( struct super_block * sb , struct buffer_head * bh , int wait ) ; 
/*--reiserfs_prepare_for_journal--*/
void reiserfs_abort_journal ( struct super_block * sb , int errno ) ; 
/*--reiserfs_abort_journal--*/
int reiserfs_resize ( struct super_block * s , unsigned long block_count_new ) ; 
/*--reiserfs_resize--*/
long reiserfs_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--reiserfs_ioctl--*/
long reiserfs_compat_ioctl ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--reiserfs_compat_ioctl--*/
int reiserfs_unpack ( struct inode * inode , struct file * filp ) ; 
/*--reiserfs_unpack--*/
int reiserfs_delete_xattrs ( struct inode * inode ) ; 
/*--reiserfs_delete_xattrs--*/
int reiserfs_chown_xattrs ( struct inode * inode , struct iattr * attrs ) ; 
/*--reiserfs_chown_xattrs--*/
int reiserfs_xattr_set_handle ( struct reiserfs_transaction_handle * th , struct inode * inode , const char * name , const void * buffer , size_t buffer_size , int flags ) ; 
/*--reiserfs_xattr_set_handle--*/
int reiserfs_xattr_set ( struct inode * inode , const char * name , const void * buffer , size_t buffer_size , int flags ) ; 
/*--reiserfs_xattr_set--*/
int reiserfs_xattr_get ( struct inode * inode , const char * name , void * buffer , size_t buffer_size ) ; 
/*--reiserfs_xattr_get--*/
ssize_t reiserfs_getxattr ( struct dentry * dentry , const char * name , void * buffer , size_t size ) ; 
/*--reiserfs_getxattr--*/
int reiserfs_setxattr ( struct dentry * dentry , const char * name , const void * value , size_t size , int flags ) ; 
/*--reiserfs_setxattr--*/
int reiserfs_removexattr ( struct dentry * dentry , const char * name ) ; 
/*--reiserfs_removexattr--*/
ssize_t reiserfs_listxattr ( struct dentry * dentry , char * buffer , size_t size ) ; 
/*--reiserfs_listxattr--*/
int reiserfs_permission ( struct inode * inode , int mask ) ; 
/*--reiserfs_permission--*/
int reiserfs_lookup_privroot ( struct super_block * s ) ; 
/*--reiserfs_lookup_privroot--*/
int reiserfs_xattr_init ( struct super_block * s , int mount_flags ) ; 
/*--reiserfs_xattr_init--*/
void reiserfs_write_lock ( struct super_block * s ) ; 
/*--reiserfs_write_lock--*/
void reiserfs_write_unlock ( struct super_block * s ) ; 
/*--reiserfs_write_unlock--*/
int reiserfs_write_lock_once ( struct super_block * s ) ; 
/*--reiserfs_write_lock_once--*/
void reiserfs_write_unlock_once ( struct super_block * s , int lock_depth ) ; 
/*--reiserfs_write_unlock_once--*/
void reiserfs_check_lock_depth ( struct super_block * sb , char * caller ) ; 
/*--reiserfs_check_lock_depth--*/
int reiserfs_security_init ( struct inode * dir , struct inode * inode , struct reiserfs_security_handle * sec ) ; 
/*--reiserfs_security_init--*/
int reiserfs_security_write ( struct reiserfs_transaction_handle * th , struct inode * inode , struct reiserfs_security_handle * sec ) ; 
/*--reiserfs_security_write--*/
void reiserfs_security_free ( struct reiserfs_security_handle * sec ) ; 
/*--reiserfs_security_free--*/
struct posix_acl * reiserfs_get_acl ( struct inode * inode , int type ) ; 
/*--reiserfs_get_acl--*/
int reiserfs_inherit_default_acl ( struct reiserfs_transaction_handle * th , struct inode * dir , struct dentry * dentry , struct inode * inode ) ; 
/*--reiserfs_inherit_default_acl--*/
int reiserfs_cache_default_acl ( struct inode * inode ) ; 
/*--reiserfs_cache_default_acl--*/
int reiserfs_acl_chmod ( struct inode * inode ) ; 
/*--reiserfs_acl_chmod--*/
int romfs_dev_read ( struct super_block * sb , unsigned long pos , void * buf , size_t buflen ) ; 
/*--romfs_dev_read--*/
ssize_t romfs_dev_strnlen ( struct super_block * sb , unsigned long pos , size_t maxlen ) ; 
/*--romfs_dev_strnlen--*/
int romfs_dev_strcmp ( struct super_block * sb , unsigned long pos , const char * str , size_t size ) ; 
/*--romfs_dev_strcmp--*/
int smb_setcodepage ( struct smb_sb_info * server , struct smb_nls_codepage * cp ) ; 
/*--smb_setcodepage--*/
__u32 smb_len ( __u8 * p ) ; 
/*--smb_len--*/
int smb_get_rsize ( struct smb_sb_info * server ) ; 
/*--smb_get_rsize--*/
int smb_get_wsize ( struct smb_sb_info * server ) ; 
/*--smb_get_wsize--*/
int smb_errno ( struct smb_request * req ) ; 
/*--smb_errno--*/
int smb_newconn ( struct smb_sb_info * server , struct smb_conn_opt * opt ) ; 
/*--smb_newconn--*/
__u8 * smb_setup_header ( struct smb_request * req , __u8 command , __u16 wct , __u16 bcc ) ; 
/*--smb_setup_header--*/
int smb_open ( struct dentry * dentry , int wish ) ; 
/*--smb_open--*/
int smb_close ( struct inode * ino ) ; 
/*--smb_close--*/
int smb_close_fileid ( struct dentry * dentry , __u16 fileid ) ; 
/*--smb_close_fileid--*/
int smb_proc_create ( struct dentry * dentry , __u16 attr , time_t ctime , __u16 * fileid ) ; 
/*--smb_proc_create--*/
int smb_proc_mv ( struct dentry * old_dentry , struct dentry * new_dentry ) ; 
/*--smb_proc_mv--*/
int smb_proc_mkdir ( struct dentry * dentry ) ; 
/*--smb_proc_mkdir--*/
int smb_proc_rmdir ( struct dentry * dentry ) ; 
/*--smb_proc_rmdir--*/
int smb_proc_unlink ( struct dentry * dentry ) ; 
/*--smb_proc_unlink--*/
int smb_proc_flush ( struct smb_sb_info * server , __u16 fileid ) ; 
/*--smb_proc_flush--*/
void smb_init_root_dirent ( struct smb_sb_info * server , struct smb_fattr * fattr , struct super_block * sb ) ; 
/*--smb_init_root_dirent--*/
int smb_proc_getattr ( struct dentry * dir , struct smb_fattr * fattr ) ; 
/*--smb_proc_getattr--*/
int smb_proc_setattr ( struct dentry * dir , struct smb_fattr * fattr ) ; 
/*--smb_proc_setattr--*/
int smb_proc_setattr_unix ( struct dentry * d , struct iattr * attr , unsigned int major , unsigned int minor ) ; 
/*--smb_proc_setattr_unix--*/
int smb_proc_settime ( struct dentry * dentry , struct smb_fattr * fattr ) ; 
/*--smb_proc_settime--*/
int smb_proc_dskattr ( struct dentry * dentry , struct kstatfs * attr ) ; 
/*--smb_proc_dskattr--*/
int smb_proc_read_link ( struct smb_sb_info * server , struct dentry * d , char * buffer , int len ) ; 
/*--smb_proc_read_link--*/
int smb_proc_symlink ( struct smb_sb_info * server , struct dentry * d , const char * oldpath ) ; 
/*--smb_proc_symlink--*/
int smb_proc_link ( struct smb_sb_info * server , struct dentry * dentry , struct dentry * new_dentry ) ; 
/*--smb_proc_link--*/
void smb_install_null_ops ( struct smb_ops * ops ) ; 
/*--smb_install_null_ops--*/
void smb_new_dentry ( struct dentry * dentry ) ; 
/*--smb_new_dentry--*/
void smb_renew_times ( struct dentry * dentry ) ; 
/*--smb_renew_times--*/
void smb_invalid_dir_cache ( struct inode * dir ) ; 
/*--smb_invalid_dir_cache--*/
void smb_invalidate_dircache_entries ( struct dentry * parent ) ; 
/*--smb_invalidate_dircache_entries--*/
struct dentry * smb_dget_fpos ( struct dentry * dentry , struct dentry * parent , unsigned long fpos ) ; 
/*--smb_dget_fpos--*/
int smb_fill_cache ( struct file * filp , void * dirent , filldir_t filldir , struct smb_cache_control * ctrl , struct qstr * qname , struct smb_fattr * entry ) ; 
/*--smb_fill_cache--*/
void smb_data_ready ( struct sock * sk , int len ) ; 
/*--smb_data_ready--*/
int smb_valid_socket ( struct inode * inode ) ; 
/*--smb_valid_socket--*/
void smb_close_socket ( struct smb_sb_info * server ) ; 
/*--smb_close_socket--*/
int smb_recv_available ( struct smb_sb_info * server ) ; 
/*--smb_recv_available--*/
int smb_receive_header ( struct smb_sb_info * server ) ; 
/*--smb_receive_header--*/
int smb_receive_drop ( struct smb_sb_info * server ) ; 
/*--smb_receive_drop--*/
int smb_receive ( struct smb_sb_info * server , struct smb_request * req ) ; 
/*--smb_receive--*/
int smb_send_request ( struct smb_request * req ) ; 
/*--smb_send_request--*/
struct inode * smb_iget ( struct super_block * sb , struct smb_fattr * fattr ) ; 
/*--smb_iget--*/
void smb_get_inode_attr ( struct inode * inode , struct smb_fattr * fattr ) ; 
/*--smb_get_inode_attr--*/
void smb_set_inode_attr ( struct inode * inode , struct smb_fattr * fattr ) ; 
/*--smb_set_inode_attr--*/
void smb_invalidate_inodes ( struct smb_sb_info * server ) ; 
/*--smb_invalidate_inodes--*/
int smb_revalidate_inode ( struct dentry * dentry ) ; 
/*--smb_revalidate_inode--*/
int smb_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--smb_getattr--*/
int smb_notify_change ( struct dentry * dentry , struct iattr * attr ) ; 
/*--smb_notify_change--*/
long smb_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--smb_ioctl--*/
int smb_getopt ( char * caller , char * * options , struct option * opts , char * * optopt , char * * optarg , unsigned long * flag , unsigned long * value ) ; 
/*--smb_getopt--*/
int smb_symlink ( struct inode * inode , struct dentry * dentry , const char * oldname ) ; 
/*--smb_symlink--*/
void smbiod_wake_up ( void ) ; 
/*--smbiod_wake_up--*/
int smbiod_register_server ( struct smb_sb_info * server ) ; 
/*--smbiod_register_server--*/
void smbiod_unregister_server ( struct smb_sb_info * server ) ; 
/*--smbiod_unregister_server--*/
void smbiod_flush ( struct smb_sb_info * server ) ; 
/*--smbiod_flush--*/
int smbiod_retry ( struct smb_sb_info * server ) ; 
/*--smbiod_retry--*/
int smb_init_request_cache ( void ) ; 
/*--smb_init_request_cache--*/
void smb_destroy_request_cache ( void ) ; 
/*--smb_destroy_request_cache--*/
struct smb_request * smb_alloc_request ( struct smb_sb_info * server , int bufsize ) ; 
/*--smb_alloc_request--*/
void smb_rput ( struct smb_request * req ) ; 
/*--smb_rput--*/
int smb_add_request ( struct smb_request * req ) ; 
/*--smb_add_request--*/
int smb_request_send_server ( struct smb_sb_info * server ) ; 
/*--smb_request_send_server--*/
int smb_request_recv ( struct smb_sb_info * server ) ; 
/*--smb_request_recv--*/
int squashfs_read_data ( struct super_block * sb , void * * buffer , u64 index , int length , u64 * next_index , int srclength , int pages ) ; 
/*--squashfs_read_data--*/
struct squashfs_cache_entry * squashfs_cache_get ( struct super_block * sb , struct squashfs_cache * cache , u64 block , int length ) ; 
/*--squashfs_cache_get--*/
void squashfs_cache_put ( struct squashfs_cache_entry * entry ) ; 
/*--squashfs_cache_put--*/
void squashfs_cache_delete ( struct squashfs_cache * cache ) ; 
/*--squashfs_cache_delete--*/
struct squashfs_cache * squashfs_cache_init ( char * name , int entries , int block_size ) ; 
/*--squashfs_cache_init--*/
int squashfs_copy_data ( void * buffer , struct squashfs_cache_entry * entry , int offset , int length ) ; 
/*--squashfs_copy_data--*/
int squashfs_read_metadata ( struct super_block * sb , void * buffer , u64 * block , int * offset , int length ) ; 
/*--squashfs_read_metadata--*/
struct squashfs_cache_entry * squashfs_get_fragment ( struct super_block * sb , u64 start_block , int length ) ; 
/*--squashfs_get_fragment--*/
struct squashfs_cache_entry * squashfs_get_datablock ( struct super_block * sb , u64 start_block , int length ) ; 
/*--squashfs_get_datablock--*/
int squashfs_read_table ( struct super_block * sb , void * buffer , u64 block , int length ) ; 
/*--squashfs_read_table--*/
__le64 * squashfs_read_inode_lookup_table ( struct super_block * sb , u64 lookup_table_start , unsigned int inodes ) ; 
/*--squashfs_read_inode_lookup_table--*/
int squashfs_frag_lookup ( struct super_block * sb , unsigned int fragment , u64 * fragment_block ) ; 
/*--squashfs_frag_lookup--*/
__le64 * squashfs_read_fragment_index_table ( struct super_block * sb , u64 fragment_table_start , unsigned int fragments ) ; 
/*--squashfs_read_fragment_index_table--*/
int squashfs_get_id ( struct super_block * sb , unsigned int index , unsigned int * id ) ; 
/*--squashfs_get_id--*/
__le64 * squashfs_read_id_index_table ( struct super_block * sb , u64 id_table_start , unsigned short no_ids ) ; 
/*--squashfs_read_id_index_table--*/
struct inode * squashfs_iget ( struct super_block * sb , long long ino , unsigned int ino_number ) ; 
/*--squashfs_iget--*/
int squashfs_read_inode ( struct inode * inode , long long ino ) ; 
/*--squashfs_read_inode--*/
const struct squashfs_decompressor * squashfs_lookup_decompressor ( int id ) ; 
/*--squashfs_lookup_decompressor--*/
struct sysv_inode * sysv_raw_inode ( struct super_block * sb , unsigned ino , struct buffer_head * * bh ) ; 
/*--sysv_raw_inode--*/
void sysv_free_inode ( struct inode * inode ) ; 
/*--sysv_free_inode--*/
struct inode * sysv_new_inode ( const struct inode * dir , mode_t mode ) ; 
/*--sysv_new_inode--*/
unsigned long sysv_count_free_inodes ( struct super_block * sb ) ; 
/*--sysv_count_free_inodes--*/
void sysv_free_block ( struct super_block * sb , sysv_zone_t nr ) ; 
/*--sysv_free_block--*/
sysv_zone_t sysv_new_block ( struct super_block * sb ) ; 
/*--sysv_new_block--*/
unsigned long sysv_count_free_blocks ( struct super_block * sb ) ; 
/*--sysv_count_free_blocks--*/
void sysv_set_inode ( struct inode * inode , dev_t rdev ) ; 
/*--sysv_set_inode--*/
struct inode * sysv_iget ( struct super_block * sb , unsigned int ino ) ; 
/*--sysv_iget--*/
int sysv_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--sysv_write_inode--*/
int sysv_sync_inode ( struct inode * inode ) ; 
/*--sysv_sync_inode--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) sysv_init_icache ( void ) ; 
/*--sysv_init_icache--*/
void sysv_destroy_icache ( void ) ; 
/*--sysv_destroy_icache--*/
void sysv_truncate ( struct inode * inode ) ; 
/*--sysv_truncate--*/
int sysv_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--sysv_getattr--*/
int __sysv_write_begin ( struct file * file , struct address_space * mapping , loff_t pos , unsigned len , unsigned flags , struct page * * pagep , void * * fsdata ) ; 
/*--__sysv_write_begin--*/
struct sysv_dir_entry * sysv_find_entry ( struct dentry * dentry , struct page * * res_page ) ; 
/*--sysv_find_entry--*/
int sysv_add_link ( struct dentry * dentry , struct inode * inode ) ; 
/*--sysv_add_link--*/
int sysv_delete_entry ( struct sysv_dir_entry * de , struct page * page ) ; 
/*--sysv_delete_entry--*/
int sysv_make_empty ( struct inode * inode , struct inode * dir ) ; 
/*--sysv_make_empty--*/
int sysv_empty_dir ( struct inode * inode ) ; 
/*--sysv_empty_dir--*/
void sysv_set_link ( struct sysv_dir_entry * de , struct page * page , struct inode * inode ) ; 
/*--sysv_set_link--*/
struct sysv_dir_entry * sysv_dotdot ( struct inode * dir , struct page * * p ) ; 
/*--sysv_dotdot--*/
ino_t sysv_inode_by_name ( struct dentry * dentry ) ; 
/*--sysv_inode_by_name--*/
int ubifs_shrinker ( struct shrinker * shrink , int nr , gfp_t gfp_mask ) ; 
/*--ubifs_shrinker--*/
int ubifs_jnl_update ( struct ubifs_info * c , const struct inode * dir , const struct qstr * nm , const struct inode * inode , int deletion , int xent ) ; 
/*--ubifs_jnl_update--*/
int ubifs_jnl_write_data ( struct ubifs_info * c , const struct inode * inode , const union ubifs_key * key , const void * buf , int len ) ; 
/*--ubifs_jnl_write_data--*/
int ubifs_jnl_write_inode ( struct ubifs_info * c , const struct inode * inode ) ; 
/*--ubifs_jnl_write_inode--*/
int ubifs_jnl_delete_inode ( struct ubifs_info * c , const struct inode * inode ) ; 
/*--ubifs_jnl_delete_inode--*/
int ubifs_jnl_rename ( struct ubifs_info * c , const struct inode * old_dir , const struct dentry * old_dentry , const struct inode * new_dir , const struct dentry * new_dentry , int sync ) ; 
/*--ubifs_jnl_rename--*/
int ubifs_jnl_truncate ( struct ubifs_info * c , const struct inode * inode , loff_t old_size , loff_t new_size ) ; 
/*--ubifs_jnl_truncate--*/
int ubifs_jnl_delete_xattr ( struct ubifs_info * c , const struct inode * host , const struct inode * inode , const struct qstr * nm ) ; 
/*--ubifs_jnl_delete_xattr--*/
int ubifs_jnl_change_xattr ( struct ubifs_info * c , const struct inode * inode , const struct inode * host ) ; 
/*--ubifs_jnl_change_xattr--*/
int ubifs_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--ubifs_setattr--*/
int ubifs_fsync ( struct file * file , int datasync ) ; 
/*--ubifs_fsync--*/
struct inode * ubifs_new_inode ( struct ubifs_info * c , const struct inode * dir , int mode ) ; 
/*--ubifs_new_inode--*/
int ubifs_getattr ( struct vfsmount * mnt , struct dentry * dentry , struct kstat * stat ) ; 
/*--ubifs_getattr--*/
struct inode * ubifs_iget ( struct super_block * sb , unsigned long inum ) ; 
/*--ubifs_iget--*/
struct ubifs_sb_node * ubifs_read_sb_node ( struct ubifs_info * c ) ; 
/*--ubifs_read_sb_node--*/
int ubifs_write_sb_node ( struct ubifs_info * c , struct ubifs_sb_node * sup ) ; 
/*--ubifs_write_sb_node--*/
int ubifs_read_superblock ( struct ubifs_info * c ) ; 
/*--ubifs_read_superblock--*/
void ubifs_ro_mode ( struct ubifs_info * c , int err ) ; 
/*--ubifs_ro_mode--*/
int ubifs_check_node ( const struct ubifs_info * c , const void * buf , int lnum , int offs , int quiet , int must_chk_crc ) ; 
/*--ubifs_check_node--*/
void ubifs_pad ( const struct ubifs_info * c , void * buf , int pad ) ; 
/*--ubifs_pad--*/
void ubifs_prepare_node ( struct ubifs_info * c , void * node , int len , int pad ) ; 
/*--ubifs_prepare_node--*/
void ubifs_prep_grp_node ( struct ubifs_info * c , void * node , int len , int last ) ; 
/*--ubifs_prep_grp_node--*/
int ubifs_wbuf_sync_nolock ( struct ubifs_wbuf * wbuf ) ; 
/*--ubifs_wbuf_sync_nolock--*/
int ubifs_wbuf_seek_nolock ( struct ubifs_wbuf * wbuf , int lnum , int offs , int dtype ) ; 
/*--ubifs_wbuf_seek_nolock--*/
int ubifs_bg_wbufs_sync ( struct ubifs_info * c ) ; 
/*--ubifs_bg_wbufs_sync--*/
int ubifs_wbuf_write_nolock ( struct ubifs_wbuf * wbuf , void * buf , int len ) ; 
/*--ubifs_wbuf_write_nolock--*/
int ubifs_write_node ( struct ubifs_info * c , void * buf , int len , int lnum , int offs , int dtype ) ; 
/*--ubifs_write_node--*/
int ubifs_read_node_wbuf ( struct ubifs_wbuf * wbuf , void * buf , int type , int len , int lnum , int offs ) ; 
/*--ubifs_read_node_wbuf--*/
int ubifs_read_node ( const struct ubifs_info * c , void * buf , int type , int len , int lnum , int offs ) ; 
/*--ubifs_read_node--*/
int ubifs_wbuf_init ( struct ubifs_info * c , struct ubifs_wbuf * wbuf ) ; 
/*--ubifs_wbuf_init--*/
void ubifs_wbuf_add_ino_nolock ( struct ubifs_wbuf * wbuf , ino_t inum ) ; 
/*--ubifs_wbuf_add_ino_nolock--*/
int ubifs_sync_wbufs_by_inode ( struct ubifs_info * c , struct inode * inode ) ; 
/*--ubifs_sync_wbufs_by_inode--*/
int insert_old_idx_znode ( struct ubifs_info * c , struct ubifs_znode * znode ) ; 
/*--insert_old_idx_znode--*/
void destroy_old_idx ( struct ubifs_info * c ) ; 
/*--destroy_old_idx--*/
int ubifs_lookup_level0 ( struct ubifs_info * c , const union ubifs_key * key , struct ubifs_znode * * zn , int * n ) ; 
/*--ubifs_lookup_level0--*/
int ubifs_tnc_locate ( struct ubifs_info * c , const union ubifs_key * key , void * node , int * lnum , int * offs ) ; 
/*--ubifs_tnc_locate--*/
int ubifs_tnc_get_bu_keys ( struct ubifs_info * c , struct bu_info * bu ) ; 
/*--ubifs_tnc_get_bu_keys--*/
int ubifs_tnc_bulk_read ( struct ubifs_info * c , struct bu_info * bu ) ; 
/*--ubifs_tnc_bulk_read--*/
int ubifs_tnc_lookup_nm ( struct ubifs_info * c , const union ubifs_key * key , void * node , const struct qstr * nm ) ; 
/*--ubifs_tnc_lookup_nm--*/
int ubifs_tnc_add ( struct ubifs_info * c , const union ubifs_key * key , int lnum , int offs , int len ) ; 
/*--ubifs_tnc_add--*/
int ubifs_tnc_replace ( struct ubifs_info * c , const union ubifs_key * key , int old_lnum , int old_offs , int lnum , int offs , int len ) ; 
/*--ubifs_tnc_replace--*/
int ubifs_tnc_add_nm ( struct ubifs_info * c , const union ubifs_key * key , int lnum , int offs , int len , const struct qstr * nm ) ; 
/*--ubifs_tnc_add_nm--*/
int ubifs_tnc_remove ( struct ubifs_info * c , const union ubifs_key * key ) ; 
/*--ubifs_tnc_remove--*/
int ubifs_tnc_remove_nm ( struct ubifs_info * c , const union ubifs_key * key , const struct qstr * nm ) ; 
/*--ubifs_tnc_remove_nm--*/
int ubifs_tnc_remove_range ( struct ubifs_info * c , union ubifs_key * from_key , union ubifs_key * to_key ) ; 
/*--ubifs_tnc_remove_range--*/
int ubifs_tnc_remove_ino ( struct ubifs_info * c , ino_t inum ) ; 
/*--ubifs_tnc_remove_ino--*/
struct ubifs_dent_node * ubifs_tnc_next_ent ( struct ubifs_info * c , union ubifs_key * key , const struct qstr * nm ) ; 
/*--ubifs_tnc_next_ent--*/
void ubifs_tnc_close ( struct ubifs_info * c ) ; 
/*--ubifs_tnc_close--*/
int is_idx_node_in_tnc ( struct ubifs_info * c , union ubifs_key * key , int level , int lnum , int offs ) ; 
/*--is_idx_node_in_tnc--*/
int ubifs_tnc_has_node ( struct ubifs_info * c , union ubifs_key * key , int level , int lnum , int offs , int is_idx ) ; 
/*--ubifs_tnc_has_node--*/
int ubifs_dirty_idx_node ( struct ubifs_info * c , union ubifs_key * key , int level , int lnum , int offs ) ; 
/*--ubifs_dirty_idx_node--*/
int ubifs_read_master ( struct ubifs_info * c ) ; 
/*--ubifs_read_master--*/
int ubifs_write_master ( struct ubifs_info * c ) ; 
/*--ubifs_write_master--*/
int ubifs_scan_a_node ( const struct ubifs_info * c , void * buf , int len , int lnum , int offs , int quiet ) ; 
/*--ubifs_scan_a_node--*/
struct ubifs_scan_leb * ubifs_start_scan ( const struct ubifs_info * c , int lnum , int offs , void * sbuf ) ; 
/*--ubifs_start_scan--*/
void ubifs_end_scan ( const struct ubifs_info * c , struct ubifs_scan_leb * sleb , int lnum , int offs ) ; 
/*--ubifs_end_scan--*/
int ubifs_add_snod ( const struct ubifs_info * c , struct ubifs_scan_leb * sleb , void * buf , int offs ) ; 
/*--ubifs_add_snod--*/
void ubifs_scanned_corruption ( const struct ubifs_info * c , int lnum , int offs , void * buf ) ; 
/*--ubifs_scanned_corruption--*/
struct ubifs_scan_leb * ubifs_scan ( const struct ubifs_info * c , int lnum , int offs , void * sbuf , int quiet ) ; 
/*--ubifs_scan--*/
void ubifs_scan_destroy ( struct ubifs_scan_leb * sleb ) ; 
/*--ubifs_scan_destroy--*/
int ubifs_validate_entry ( struct ubifs_info * c , const struct ubifs_dent_node * dent ) ; 
/*--ubifs_validate_entry--*/
int ubifs_replay_journal ( struct ubifs_info * c ) ; 
/*--ubifs_replay_journal--*/
struct ubifs_bud * ubifs_search_bud ( struct ubifs_info * c , int lnum ) ; 
/*--ubifs_search_bud--*/
struct ubifs_wbuf * ubifs_get_wbuf ( struct ubifs_info * c , int lnum ) ; 
/*--ubifs_get_wbuf--*/
void ubifs_add_bud ( struct ubifs_info * c , struct ubifs_bud * bud ) ; 
/*--ubifs_add_bud--*/
void ubifs_create_buds_lists ( struct ubifs_info * c ) ; 
/*--ubifs_create_buds_lists--*/
int ubifs_add_bud_to_log ( struct ubifs_info * c , int jhead , int lnum , int offs ) ; 
/*--ubifs_add_bud_to_log--*/
int ubifs_log_start_commit ( struct ubifs_info * c , int * ltail_lnum ) ; 
/*--ubifs_log_start_commit--*/
int ubifs_log_end_commit ( struct ubifs_info * c , int ltail_lnum ) ; 
/*--ubifs_log_end_commit--*/
int ubifs_log_post_commit ( struct ubifs_info * c , int old_ltail_lnum ) ; 
/*--ubifs_log_post_commit--*/
int ubifs_consolidate_log ( struct ubifs_info * c ) ; 
/*--ubifs_consolidate_log--*/
int ubifs_bg_thread ( void * info ) ; 
/*--ubifs_bg_thread--*/
void ubifs_commit_required ( struct ubifs_info * c ) ; 
/*--ubifs_commit_required--*/
void ubifs_request_bg_commit ( struct ubifs_info * c ) ; 
/*--ubifs_request_bg_commit--*/
int ubifs_run_commit ( struct ubifs_info * c ) ; 
/*--ubifs_run_commit--*/
int ubifs_gc_should_commit ( struct ubifs_info * c ) ; 
/*--ubifs_gc_should_commit--*/
int data_nodes_cmp ( void * priv , struct list_head * a , struct list_head * b ) ; 
/*--data_nodes_cmp--*/
int nondata_nodes_cmp ( void * priv , struct list_head * a , struct list_head * b ) ; 
/*--nondata_nodes_cmp--*/
int ubifs_garbage_collect_leb ( struct ubifs_info * c , struct ubifs_lprops * lp ) ; 
/*--ubifs_garbage_collect_leb--*/
int ubifs_garbage_collect ( struct ubifs_info * c , int anyway ) ; 
/*--ubifs_garbage_collect--*/
int ubifs_gc_start_commit ( struct ubifs_info * c ) ; 
/*--ubifs_gc_start_commit--*/
int ubifs_gc_end_commit ( struct ubifs_info * c ) ; 
/*--ubifs_gc_end_commit--*/
void ubifs_destroy_idx_gc ( struct ubifs_info * c ) ; 
/*--ubifs_destroy_idx_gc--*/
int ubifs_get_idx_gc_leb ( struct ubifs_info * c ) ; 
/*--ubifs_get_idx_gc_leb--*/
int ubifs_add_orphan ( struct ubifs_info * c , ino_t inum ) ; 
/*--ubifs_add_orphan--*/
void ubifs_delete_orphan ( struct ubifs_info * c , ino_t inum ) ; 
/*--ubifs_delete_orphan--*/
int ubifs_orphan_start_commit ( struct ubifs_info * c ) ; 
/*--ubifs_orphan_start_commit--*/
int ubifs_orphan_end_commit ( struct ubifs_info * c ) ; 
/*--ubifs_orphan_end_commit--*/
int ubifs_clear_orphans ( struct ubifs_info * c ) ; 
/*--ubifs_clear_orphans--*/
int ubifs_mount_orphans ( struct ubifs_info * c , int unclean , int read_only ) ; 
/*--ubifs_mount_orphans--*/
int ubifs_calc_min_idx_lebs ( struct ubifs_info * c ) ; 
/*--ubifs_calc_min_idx_lebs--*/
long long ubifs_calc_available ( const struct ubifs_info * c , int min_idx_lebs ) ; 
/*--ubifs_calc_available--*/
int ubifs_budget_space ( struct ubifs_info * c , struct ubifs_budget_req * req ) ; 
/*--ubifs_budget_space--*/
void ubifs_release_budget ( struct ubifs_info * c , struct ubifs_budget_req * req ) ; 
/*--ubifs_release_budget--*/
void ubifs_convert_page_budget ( struct ubifs_info * c ) ; 
/*--ubifs_convert_page_budget--*/
void ubifs_release_dirty_inode_budget ( struct ubifs_info * c , struct ubifs_inode * ui ) ; 
/*--ubifs_release_dirty_inode_budget--*/
long long ubifs_reported_space ( const struct ubifs_info * c , long long free ) ; 
/*--ubifs_reported_space--*/
long long ubifs_get_free_space_nolock ( struct ubifs_info * c ) ; 
/*--ubifs_get_free_space_nolock--*/
long long ubifs_get_free_space ( struct ubifs_info * c ) ; 
/*--ubifs_get_free_space--*/
int ubifs_find_dirty_leb ( struct ubifs_info * c , struct ubifs_lprops * ret_lp , int min_space , int pick_free ) ; 
/*--ubifs_find_dirty_leb--*/
int ubifs_find_free_space ( struct ubifs_info * c , int min_space , int * offs , int squeeze ) ; 
/*--ubifs_find_free_space--*/
int ubifs_find_free_leb_for_idx ( struct ubifs_info * c ) ; 
/*--ubifs_find_free_leb_for_idx--*/
int ubifs_save_dirty_idx_lnums ( struct ubifs_info * c ) ; 
/*--ubifs_save_dirty_idx_lnums--*/
int ubifs_find_dirty_idx_leb ( struct ubifs_info * c ) ; 
/*--ubifs_find_dirty_idx_leb--*/
int ubifs_tnc_start_commit ( struct ubifs_info * c , struct ubifs_zbranch * zroot ) ; 
/*--ubifs_tnc_start_commit--*/
int ubifs_tnc_end_commit ( struct ubifs_info * c ) ; 
/*--ubifs_tnc_end_commit--*/
void ubifs_compress ( const void * in_buf , int in_len , void * out_buf , int * out_len , int * compr_type ) ; 
/*--ubifs_compress--*/
int ubifs_decompress ( const void * in_buf , int in_len , void * out_buf , int * out_len , int compr_type ) ; 
/*--ubifs_decompress--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ubifs_compressors_init ( void ) ; 
/*--ubifs_compressors_init--*/
void ubifs_compressors_exit ( void ) ; 
/*--ubifs_compressors_exit--*/
int ubifs_calc_lpt_geom ( struct ubifs_info * c ) ; 
/*--ubifs_calc_lpt_geom--*/
uint32_t ubifs_unpack_bits ( uint8_t * * addr , int * pos , int nrbits ) ; 
/*--ubifs_unpack_bits--*/
void ubifs_pack_pnode ( struct ubifs_info * c , void * buf , struct ubifs_pnode * pnode ) ; 
/*--ubifs_pack_pnode--*/
void ubifs_pack_nnode ( struct ubifs_info * c , void * buf , struct ubifs_nnode * nnode ) ; 
/*--ubifs_pack_nnode--*/
void ubifs_pack_ltab ( struct ubifs_info * c , void * buf , struct ubifs_lpt_lprops * ltab ) ; 
/*--ubifs_pack_ltab--*/
void ubifs_pack_lsave ( struct ubifs_info * c , void * buf , int * lsave ) ; 
/*--ubifs_pack_lsave--*/
void ubifs_add_lpt_dirt ( struct ubifs_info * c , int lnum , int dirty ) ; 
/*--ubifs_add_lpt_dirt--*/
void ubifs_add_nnode_dirt ( struct ubifs_info * c , struct ubifs_nnode * nnode ) ; 
/*--ubifs_add_nnode_dirt--*/
int ubifs_create_dflt_lpt ( struct ubifs_info * c , int * main_lebs , int lpt_first , int * lpt_lebs , int * big_lpt ) ; 
/*--ubifs_create_dflt_lpt--*/
int ubifs_unpack_nnode ( const struct ubifs_info * c , void * buf , struct ubifs_nnode * nnode ) ; 
/*--ubifs_unpack_nnode--*/
int ubifs_read_nnode ( struct ubifs_info * c , struct ubifs_nnode * parent , int iip ) ; 
/*--ubifs_read_nnode--*/
struct ubifs_nnode * ubifs_get_nnode ( struct ubifs_info * c , struct ubifs_nnode * parent , int iip ) ; 
/*--ubifs_get_nnode--*/
struct ubifs_pnode * ubifs_get_pnode ( struct ubifs_info * c , struct ubifs_nnode * parent , int iip ) ; 
/*--ubifs_get_pnode--*/
struct ubifs_lprops * ubifs_lpt_lookup ( struct ubifs_info * c , int lnum ) ; 
/*--ubifs_lpt_lookup--*/
struct ubifs_lprops * ubifs_lpt_lookup_dirty ( struct ubifs_info * c , int lnum ) ; 
/*--ubifs_lpt_lookup_dirty--*/
int ubifs_lpt_init ( struct ubifs_info * c , int rd , int wr ) ; 
/*--ubifs_lpt_init--*/
int ubifs_lpt_scan_nolock ( struct ubifs_info * c , int start_lnum , int end_lnum , ubifs_lpt_scan_callback scan_cb , void * data ) ; 
/*--ubifs_lpt_scan_nolock--*/
void ubifs_add_to_cat ( struct ubifs_info * c , struct ubifs_lprops * lprops , int cat ) ; 
/*--ubifs_add_to_cat--*/
void ubifs_replace_cat ( struct ubifs_info * c , struct ubifs_lprops * old_lprops , struct ubifs_lprops * new_lprops ) ; 
/*--ubifs_replace_cat--*/
void ubifs_ensure_cat ( struct ubifs_info * c , struct ubifs_lprops * lprops ) ; 
/*--ubifs_ensure_cat--*/
int ubifs_categorize_lprops ( const struct ubifs_info * c , const struct ubifs_lprops * lprops ) ; 
/*--ubifs_categorize_lprops--*/
int ubifs_calc_dark ( const struct ubifs_info * c , int spc ) ; 
/*--ubifs_calc_dark--*/
const struct ubifs_lprops * ubifs_change_lp ( struct ubifs_info * c , const struct ubifs_lprops * lp , int free , int dirty , int flags , int idx_gc_cnt ) ; 
/*--ubifs_change_lp--*/
void ubifs_get_lp_stats ( struct ubifs_info * c , struct ubifs_lp_stats * lst ) ; 
/*--ubifs_get_lp_stats--*/
int ubifs_change_one_lp ( struct ubifs_info * c , int lnum , int free , int dirty , int flags_set , int flags_clean , int idx_gc_cnt ) ; 
/*--ubifs_change_one_lp--*/
int ubifs_update_one_lp ( struct ubifs_info * c , int lnum , int free , int dirty , int flags_set , int flags_clean ) ; 
/*--ubifs_update_one_lp--*/
int ubifs_read_one_lp ( struct ubifs_info * c , int lnum , struct ubifs_lprops * lp ) ; 
/*--ubifs_read_one_lp--*/
const struct ubifs_lprops * ubifs_fast_find_free ( struct ubifs_info * c ) ; 
/*--ubifs_fast_find_free--*/
const struct ubifs_lprops * ubifs_fast_find_empty ( struct ubifs_info * c ) ; 
/*--ubifs_fast_find_empty--*/
const struct ubifs_lprops * ubifs_fast_find_freeable ( struct ubifs_info * c ) ; 
/*--ubifs_fast_find_freeable--*/
const struct ubifs_lprops * ubifs_fast_find_frdi_idx ( struct ubifs_info * c ) ; 
/*--ubifs_fast_find_frdi_idx--*/
int ubifs_recover_master_node ( struct ubifs_info * c ) ; 
/*--ubifs_recover_master_node--*/
int ubifs_write_rcvrd_mst_node ( struct ubifs_info * c ) ; 
/*--ubifs_write_rcvrd_mst_node--*/
struct ubifs_scan_leb * ubifs_recover_leb ( struct ubifs_info * c , int lnum , int offs , void * sbuf , int grouped ) ; 
/*--ubifs_recover_leb--*/
struct ubifs_scan_leb * ubifs_recover_log_leb ( struct ubifs_info * c , int lnum , int offs , void * sbuf ) ; 
/*--ubifs_recover_log_leb--*/
int ubifs_recover_inl_heads ( const struct ubifs_info * c , void * sbuf ) ; 
/*--ubifs_recover_inl_heads--*/
int ubifs_clean_lebs ( const struct ubifs_info * c , void * sbuf ) ; 
/*--ubifs_clean_lebs--*/
int ubifs_rcvry_gc_commit ( struct ubifs_info * c ) ; 
/*--ubifs_rcvry_gc_commit--*/
void ubifs_destroy_size_tree ( struct ubifs_info * c ) ; 
/*--ubifs_destroy_size_tree--*/
int ubifs_recover_size_accum ( struct ubifs_info * c , union ubifs_key * key , int deletion , loff_t new_size ) ; 
/*--ubifs_recover_size_accum--*/
int ubifs_recover_size ( struct ubifs_info * c ) ; 
/*--ubifs_recover_size--*/
void ubifs_set_inode_flags ( struct inode * inode ) ; 
/*--ubifs_set_inode_flags--*/
long ubifs_ioctl ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--ubifs_ioctl--*/
long ubifs_compat_ioctl ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--ubifs_compat_ioctl--*/
int ubifs_lpt_start_commit ( struct ubifs_info * c ) ; 
/*--ubifs_lpt_start_commit--*/
int ubifs_lpt_end_commit ( struct ubifs_info * c ) ; 
/*--ubifs_lpt_end_commit--*/
int ubifs_lpt_post_commit ( struct ubifs_info * c ) ; 
/*--ubifs_lpt_post_commit--*/
void ubifs_lpt_free ( struct ubifs_info * c , int wr_only ) ; 
/*--ubifs_lpt_free--*/
struct ubifs_znode * ubifs_tnc_levelorder_next ( struct ubifs_znode * zr , struct ubifs_znode * znode ) ; 
/*--ubifs_tnc_levelorder_next--*/
int ubifs_search_zbranch ( const struct ubifs_info * c , const struct ubifs_znode * znode , const union ubifs_key * key , int * n ) ; 
/*--ubifs_search_zbranch--*/
struct ubifs_znode * ubifs_tnc_postorder_first ( struct ubifs_znode * znode ) ; 
/*--ubifs_tnc_postorder_first--*/
struct ubifs_znode * ubifs_tnc_postorder_next ( struct ubifs_znode * znode ) ; 
/*--ubifs_tnc_postorder_next--*/
long ubifs_destroy_tnc_subtree ( struct ubifs_znode * znode ) ; 
/*--ubifs_destroy_tnc_subtree--*/
struct ubifs_znode * ubifs_load_znode ( struct ubifs_info * c , struct ubifs_zbranch * zbr , struct ubifs_znode * parent , int iip ) ; 
/*--ubifs_load_znode--*/
int ubifs_tnc_read_node ( struct ubifs_info * c , struct ubifs_zbranch * zbr , void * node ) ; 
/*--ubifs_tnc_read_node--*/
int ubifs_setxattr ( struct dentry * dentry , const char * name , const void * value , size_t size , int flags ) ; 
/*--ubifs_setxattr--*/
ssize_t ubifs_getxattr ( struct dentry * dentry , const char * name , void * buf , size_t size ) ; 
/*--ubifs_getxattr--*/
ssize_t ubifs_listxattr ( struct dentry * dentry , char * buffer , size_t size ) ; 
/*--ubifs_listxattr--*/
int ubifs_removexattr ( struct dentry * dentry , const char * name ) ; 
/*--ubifs_removexattr--*/
void udf_free_blocks ( struct super_block * sb , struct inode * inode , struct kernel_lb_addr * bloc , uint32_t offset , uint32_t count ) ; 
/*--udf_free_blocks--*/
long udf_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--udf_ioctl--*/
void udf_free_inode ( struct inode * inode ) ; 
/*--udf_free_inode--*/
struct inode * udf_new_inode ( struct inode * dir , int mode , int * err ) ; 
/*--udf_new_inode--*/
void udf_delete_inode ( struct inode * inode ) ; 
/*--udf_delete_inode--*/
void udf_clear_inode ( struct inode * inode ) ; 
/*--udf_clear_inode--*/
void udf_expand_file_adinicb ( struct inode * inode , int newsize , int * err ) ; 
/*--udf_expand_file_adinicb--*/
struct buffer_head * udf_expand_dir_adinicb ( struct inode * inode , int * block , int * err ) ; 
/*--udf_expand_dir_adinicb--*/
int udf_extend_file ( struct inode * inode , struct extent_position * last_pos , struct kernel_long_ad * last_ext , sector_t blocks ) ; 
/*--udf_extend_file--*/
struct buffer_head * udf_bread ( struct inode * inode , int block , int create , int * err ) ; 
/*--udf_bread--*/
void udf_truncate ( struct inode * inode ) ; 
/*--udf_truncate--*/
int udf_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--udf_write_inode--*/
int udf_sync_inode ( struct inode * inode ) ; 
/*--udf_sync_inode--*/
struct inode * udf_iget ( struct super_block * sb , struct kernel_lb_addr * ino ) ; 
/*--udf_iget--*/
int8_t udf_add_aext ( struct inode * inode , struct extent_position * epos , struct kernel_lb_addr * eloc , uint32_t elen , int inc ) ; 
/*--udf_add_aext--*/
int8_t udf_write_aext ( struct inode * inode , struct extent_position * epos , struct kernel_lb_addr * eloc , uint32_t elen , int inc ) ; 
/*--udf_write_aext--*/
int8_t udf_next_aext ( struct inode * inode , struct extent_position * epos , struct kernel_lb_addr * eloc , uint32_t * elen , int inc ) ; 
/*--udf_next_aext--*/
int8_t udf_current_aext ( struct inode * inode , struct extent_position * epos , struct kernel_lb_addr * eloc , uint32_t * elen , int inc ) ; 
/*--udf_current_aext--*/
int8_t udf_delete_aext ( struct inode * inode , struct extent_position epos , struct kernel_lb_addr eloc , uint32_t elen ) ; 
/*--udf_delete_aext--*/
int8_t inode_bmap ( struct inode * inode , sector_t block , struct extent_position * pos , struct kernel_lb_addr * eloc , uint32_t * elen , sector_t * offset ) ; 
/*--inode_bmap--*/
long udf_block_map ( struct inode * inode , sector_t block ) ; 
/*--udf_block_map--*/
unsigned int udf_get_last_session ( struct super_block * sb ) ; 
/*--udf_get_last_session--*/
unsigned long udf_get_last_block ( struct super_block * sb ) ; 
/*--udf_get_last_block--*/
int udf_write_fi ( struct inode * inode , struct fileIdentDesc * cfi , struct fileIdentDesc * sfi , struct udf_fileident_bh * fibh , uint8_t * impuse , uint8_t * fileident ) ; 
/*--udf_write_fi--*/
uint32_t udf_get_pblock ( struct super_block * sb , uint32_t block , uint16_t partition , uint32_t offset ) ; 
/*--udf_get_pblock--*/
uint32_t udf_get_pblock_virt15 ( struct super_block * sb , uint32_t block , uint16_t partition , uint32_t offset ) ; 
/*--udf_get_pblock_virt15--*/
uint32_t udf_get_pblock_spar15 ( struct super_block * sb , uint32_t block , uint16_t partition , uint32_t offset ) ; 
/*--udf_get_pblock_spar15--*/
int udf_relocate_blocks ( struct super_block * sb , long old_block , long * new_block ) ; 
/*--udf_relocate_blocks--*/
uint32_t udf_get_pblock_meta25 ( struct super_block * sb , uint32_t block , uint16_t partition , uint32_t offset ) ; 
/*--udf_get_pblock_meta25--*/
struct logicalVolIntegrityDescImpUse * udf_sb_lvidiu ( struct udf_sb_info * sbi ) ; 
/*--udf_sb_lvidiu--*/
int udf_compute_nr_groups ( struct super_block * sb , u32 partition ) ; 
/*--udf_compute_nr_groups--*/
void udf_warning ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--udf_warning--*/
void udf_truncate_tail_extent ( struct inode * inode ) ; 
/*--udf_truncate_tail_extent--*/
void udf_discard_prealloc ( struct inode * inode ) ; 
/*--udf_discard_prealloc--*/
void udf_truncate_extents ( struct inode * inode ) ; 
/*--udf_truncate_extents--*/
struct fileIdentDesc * udf_fileident_read ( struct inode * dir , loff_t * nf_pos , struct udf_fileident_bh * fibh , struct fileIdentDesc * cfi , struct extent_position * epos , struct kernel_lb_addr * eloc , uint32_t * elen , sector_t * offset ) ; 
/*--udf_fileident_read--*/
struct fileIdentDesc * udf_get_fileident ( void * buffer , int bufsize , int * offset ) ; 
/*--udf_get_fileident--*/
struct short_ad * udf_get_fileshortad ( uint8_t * ptr , int maxoffset , uint32_t * offset , int inc ) ; 
/*--udf_get_fileshortad--*/
struct long_ad * udf_get_filelongad ( uint8_t * ptr , int maxoffset , uint32_t * offset , int inc ) ; 
/*--udf_get_filelongad--*/
struct buffer_head * udf_tgetblk ( struct super_block * sb , int block ) ; 
/*--udf_tgetblk--*/
struct buffer_head * udf_tread ( struct super_block * sb , int block ) ; 
/*--udf_tread--*/
struct genericFormat * udf_add_extendedattr ( struct inode * inode , uint32_t size , uint32_t type , uint8_t loc ) ; 
/*--udf_add_extendedattr--*/
struct genericFormat * udf_get_extendedattr ( struct inode * inode , uint32_t type , uint8_t subtype ) ; 
/*--udf_get_extendedattr--*/
struct buffer_head * udf_read_tagged ( struct super_block * sb , uint32_t block , uint32_t location , uint16_t * ident ) ; 
/*--udf_read_tagged--*/
struct buffer_head * udf_read_ptagged ( struct super_block * sb , struct kernel_lb_addr * loc , uint32_t offset , uint16_t * ident ) ; 
/*--udf_read_ptagged--*/
void udf_update_tag ( char * data , int length ) ; 
/*--udf_update_tag--*/
void udf_new_tag ( char * data , uint16_t ident , uint16_t version , uint16_t snum , uint32_t loc , int length ) ; 
/*--udf_new_tag--*/
u8 udf_tag_checksum ( const struct tag * t ) ; 
/*--udf_tag_checksum--*/
struct timespec * udf_disk_stamp_to_time ( struct timespec * dest , struct timestamp src ) ; 
/*--udf_disk_stamp_to_time--*/
struct timestamp * udf_time_to_disk_stamp ( struct timestamp * dest , struct timespec ts ) ; 
/*--udf_time_to_disk_stamp--*/
int udf_build_ustr ( struct ustr * dest , dstring * ptr , int size ) ; 
/*--udf_build_ustr--*/
int udf_CS0toUTF8 ( struct ustr * utf_o , const struct ustr * ocu_i ) ; 
/*--udf_CS0toUTF8--*/
int udf_get_filename ( struct super_block * sb , uint8_t * sname , uint8_t * dname , int flen ) ; 
/*--udf_get_filename--*/
int udf_put_filename ( struct super_block * sb , const uint8_t * sname , uint8_t * dname , int flen ) ; 
/*--udf_put_filename--*/
void ufs_free_fragments ( struct inode * inode , u64 fragment , unsigned count ) ; 
/*--ufs_free_fragments--*/
void ufs_free_blocks ( struct inode * inode , u64 fragment , unsigned count ) ; 
/*--ufs_free_blocks--*/
u64 ufs_new_fragments ( struct inode * inode , void * p , u64 fragment , u64 goal , unsigned count , int * err , struct page * locked_page ) ; 
/*--ufs_new_fragments--*/
void ufs_put_cylinder ( struct super_block * sb , unsigned bitmap_nr ) ; 
/*--ufs_put_cylinder--*/
struct ufs_cg_private_info * ufs_load_cylinder ( struct super_block * sb , unsigned cgno ) ; 
/*--ufs_load_cylinder--*/
ino_t ufs_inode_by_name ( struct inode * dir , const struct qstr * qstr ) ; 
/*--ufs_inode_by_name--*/
void ufs_set_link ( struct inode * dir , struct ufs_dir_entry * de , struct page * page , struct inode * inode ) ; 
/*--ufs_set_link--*/
struct ufs_dir_entry * ufs_dotdot ( struct inode * dir , struct page * * p ) ; 
/*--ufs_dotdot--*/
struct ufs_dir_entry * ufs_find_entry ( struct inode * dir , const struct qstr * qstr , struct page * * res_page ) ; 
/*--ufs_find_entry--*/
int ufs_add_link ( struct dentry * dentry , struct inode * inode ) ; 
/*--ufs_add_link--*/
int ufs_delete_entry ( struct inode * inode , struct ufs_dir_entry * dir , struct page * page ) ; 
/*--ufs_delete_entry--*/
int ufs_make_empty ( struct inode * inode , struct inode * dir ) ; 
/*--ufs_make_empty--*/
int ufs_empty_dir ( struct inode * inode ) ; 
/*--ufs_empty_dir--*/
void ufs_free_inode ( struct inode * inode ) ; 
/*--ufs_free_inode--*/
struct inode * ufs_new_inode ( struct inode * dir , int mode ) ; 
/*--ufs_new_inode--*/
int ufs_getfrag_block ( struct inode * inode , sector_t fragment , struct buffer_head * bh_result , int create ) ; 
/*--ufs_getfrag_block--*/
struct buffer_head * ufs_bread ( struct inode * inode , unsigned fragment , int create , int * err ) ; 
/*--ufs_bread--*/
int __ufs_write_begin ( struct file * file , struct address_space * mapping , loff_t pos , unsigned len , unsigned flags , struct page * * pagep , void * * fsdata ) ; 
/*--__ufs_write_begin--*/
struct inode * ufs_iget ( struct super_block * sb , unsigned long ino ) ; 
/*--ufs_iget--*/
int ufs_write_inode ( struct inode * inode , struct writeback_control * wbc ) ; 
/*--ufs_write_inode--*/
int ufs_sync_inode ( struct inode * inode ) ; 
/*--ufs_sync_inode--*/
void ufs_delete_inode ( struct inode * inode ) ; 
/*--ufs_delete_inode--*/
void ufs_error ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--ufs_error--*/
void ufs_panic ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--ufs_panic--*/
void ufs_warning ( struct super_block * sb , const char * function , const char * fmt , ... ) ; 
/*--ufs_warning--*/
int ufs_truncate ( struct inode * inode , loff_t old_i_size ) ; 
/*--ufs_truncate--*/
int ufs_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--ufs_setattr--*/
struct ufs_buffer_head * _ubh_bread_ ( struct ufs_sb_private_info * uspi , struct super_block * sb , u64 fragment , u64 size ) ; 
/*--_ubh_bread_--*/
struct ufs_buffer_head * ubh_bread_uspi ( struct ufs_sb_private_info * uspi , struct super_block * sb , u64 fragment , u64 size ) ; 
/*--ubh_bread_uspi--*/
void ubh_brelse ( struct ufs_buffer_head * ubh ) ; 
/*--ubh_brelse--*/
void ubh_brelse_uspi ( struct ufs_sb_private_info * uspi ) ; 
/*--ubh_brelse_uspi--*/
void ubh_mark_buffer_dirty ( struct ufs_buffer_head * ubh ) ; 
/*--ubh_mark_buffer_dirty--*/
void ubh_mark_buffer_uptodate ( struct ufs_buffer_head * ubh , int flag ) ; 
/*--ubh_mark_buffer_uptodate--*/
void ubh_ll_rw_block ( int rw , struct ufs_buffer_head * ubh ) ; 
/*--ubh_ll_rw_block--*/
void ubh_wait_on_buffer ( struct ufs_buffer_head * ubh ) ; 
/*--ubh_wait_on_buffer--*/
void ubh_bforget ( struct ufs_buffer_head * ubh ) ; 
/*--ubh_bforget--*/
int ubh_buffer_dirty ( struct ufs_buffer_head * ubh ) ; 
/*--ubh_buffer_dirty--*/
void _ubh_ubhcpymem_ ( struct ufs_sb_private_info * uspi , unsigned char * mem , struct ufs_buffer_head * ubh , unsigned size ) ; 
/*--_ubh_ubhcpymem_--*/
void _ubh_memcpyubh_ ( struct ufs_sb_private_info * uspi , struct ufs_buffer_head * ubh , unsigned char * mem , unsigned size ) ; 
/*--_ubh_memcpyubh_--*/
dev_t ufs_get_inode_dev ( struct super_block * sb , struct ufs_inode_info * ufsi ) ; 
/*--ufs_get_inode_dev--*/
void ufs_set_inode_dev ( struct super_block * sb , struct ufs_inode_info * ufsi , dev_t dev ) ; 
/*--ufs_set_inode_dev--*/
struct page * ufs_get_locked_page ( struct address_space * mapping , unsigned long index ) ; 
/*--ufs_get_locked_page--*/
void xfs_qm_dqdestroy ( xfs_dquot_t * dqp ) ; 
/*--xfs_qm_dqdestroy--*/
void xfs_qm_adjust_dqlimits ( xfs_mount_t * mp , xfs_disk_dquot_t * d ) ; 
/*--xfs_qm_adjust_dqlimits--*/
void xfs_qm_adjust_dqtimers ( xfs_mount_t * mp , xfs_disk_dquot_t * d ) ; 
/*--xfs_qm_adjust_dqtimers--*/
int xfs_qm_dqget ( xfs_mount_t * mp , xfs_inode_t * ip , xfs_dqid_t id , uint type , uint flags , xfs_dquot_t * * O_dqpp ) ; 
/*--xfs_qm_dqget--*/
void xfs_qm_dqput ( xfs_dquot_t * dqp ) ; 
/*--xfs_qm_dqput--*/
void xfs_qm_dqrele ( xfs_dquot_t * dqp ) ; 
/*--xfs_qm_dqrele--*/
int xfs_qm_dqflush ( xfs_dquot_t * dqp , uint flags ) ; 
/*--xfs_qm_dqflush--*/
int xfs_qm_dqlock_nowait ( xfs_dquot_t * dqp ) ; 
/*--xfs_qm_dqlock_nowait--*/
void xfs_dqlock ( xfs_dquot_t * dqp ) ; 
/*--xfs_dqlock--*/
void xfs_dqunlock ( xfs_dquot_t * dqp ) ; 
/*--xfs_dqunlock--*/
void xfs_dqunlock_nonotify ( xfs_dquot_t * dqp ) ; 
/*--xfs_dqunlock_nonotify--*/
void xfs_dqlock2 ( xfs_dquot_t * d1 , xfs_dquot_t * d2 ) ; 
/*--xfs_dqlock2--*/
int xfs_qm_dqpurge ( xfs_dquot_t * dqp ) ; 
/*--xfs_qm_dqpurge--*/
void xfs_qm_dqflock_pushbuf_wait ( xfs_dquot_t * dqp ) ; 
/*--xfs_qm_dqflock_pushbuf_wait--*/
void xfs_qm_dqunpin_wait ( xfs_dquot_t * dqp ) ; 
/*--xfs_qm_dqunpin_wait--*/
void xfs_qm_dquot_logitem_init ( struct xfs_dquot * dqp ) ; 
/*--xfs_qm_dquot_logitem_init--*/
xfs_qoff_logitem_t * xfs_qm_qoff_logitem_init ( struct xfs_mount * mp , xfs_qoff_logitem_t * start , uint flags ) ; 
/*--xfs_qm_qoff_logitem_init--*/
void xfs_trans_dqjoin ( xfs_trans_t * tp , xfs_dquot_t * dqp ) ; 
/*--xfs_trans_dqjoin--*/
void xfs_trans_log_dquot ( xfs_trans_t * tp , xfs_dquot_t * dqp ) ; 
/*--xfs_trans_log_dquot--*/
void xfs_trans_dup_dqinfo ( xfs_trans_t * otp , xfs_trans_t * ntp ) ; 
/*--xfs_trans_dup_dqinfo--*/
void xfs_trans_mod_dquot_byino ( xfs_trans_t * tp , xfs_inode_t * ip , uint field , long delta ) ; 
/*--xfs_trans_mod_dquot_byino--*/
void xfs_trans_mod_dquot ( xfs_trans_t * tp , xfs_dquot_t * dqp , uint field , long delta ) ; 
/*--xfs_trans_mod_dquot--*/
void xfs_trans_apply_dquot_deltas ( xfs_trans_t * tp ) ; 
/*--xfs_trans_apply_dquot_deltas--*/
void xfs_trans_unreserve_and_mod_dquots ( xfs_trans_t * tp ) ; 
/*--xfs_trans_unreserve_and_mod_dquots--*/
int xfs_trans_reserve_quota_bydquots ( xfs_trans_t * tp , xfs_mount_t * mp , xfs_dquot_t * udqp , xfs_dquot_t * gdqp , long nblks , long ninos , uint flags ) ; 
/*--xfs_trans_reserve_quota_bydquots--*/
int xfs_trans_reserve_quota_nblks ( struct xfs_trans * tp , struct xfs_inode * ip , long nblks , long ninos , uint flags ) ; 
/*--xfs_trans_reserve_quota_nblks--*/
xfs_qoff_logitem_t * xfs_trans_get_qoff_item ( xfs_trans_t * tp , xfs_qoff_logitem_t * startqoff , uint flags ) ; 
/*--xfs_trans_get_qoff_item--*/
void xfs_trans_log_quotaoff_item ( xfs_trans_t * tp , xfs_qoff_logitem_t * qlp ) ; 
/*--xfs_trans_log_quotaoff_item--*/
void xfs_trans_free_dqinfo ( xfs_trans_t * tp ) ; 
/*--xfs_trans_free_dqinfo--*/
int xfs_qm_scall_quotaoff ( xfs_mount_t * mp , uint flags ) ; 
/*--xfs_qm_scall_quotaoff--*/
int xfs_qm_scall_trunc_qfiles ( xfs_mount_t * mp , uint flags ) ; 
/*--xfs_qm_scall_trunc_qfiles--*/
int xfs_qm_scall_quotaon ( xfs_mount_t * mp , uint flags ) ; 
/*--xfs_qm_scall_quotaon--*/
int xfs_qm_scall_getqstat ( struct xfs_mount * mp , struct fs_quota_stat * out ) ; 
/*--xfs_qm_scall_getqstat--*/
int xfs_qm_scall_setqlim ( xfs_mount_t * mp , xfs_dqid_t id , uint type , fs_disk_quota_t * newlim ) ; 
/*--xfs_qm_scall_setqlim--*/
int xfs_qm_scall_getquota ( xfs_mount_t * mp , xfs_dqid_t id , uint type , fs_disk_quota_t * out ) ; 
/*--xfs_qm_scall_getquota--*/
void xfs_qm_dqrele_all_inodes ( struct xfs_mount * mp , uint flags ) ; 
/*--xfs_qm_dqrele_all_inodes--*/
void xfs_qm_statvfs ( xfs_inode_t * ip , struct kstatfs * statp ) ; 
/*--xfs_qm_statvfs--*/
int xfs_qm_newmount ( xfs_mount_t * mp , uint * needquotamount , uint * quotaflags ) ; 
/*--xfs_qm_newmount--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) xfs_qm_init ( void ) ; 
/*--xfs_qm_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) xfs_qm_exit ( void ) ; 
/*--xfs_qm_exit--*/
void xfs_qm_unmount ( struct xfs_mount * mp ) ; 
/*--xfs_qm_unmount--*/
void xfs_qm_mount_quotas ( xfs_mount_t * mp ) ; 
/*--xfs_qm_mount_quotas--*/
void xfs_qm_unmount_quotas ( xfs_mount_t * mp ) ; 
/*--xfs_qm_unmount_quotas--*/
int xfs_qm_dqpurge_all ( xfs_mount_t * mp , uint flags ) ; 
/*--xfs_qm_dqpurge_all--*/
int xfs_qm_dqattach_locked ( xfs_inode_t * ip , uint flags ) ; 
/*--xfs_qm_dqattach_locked--*/
int xfs_qm_dqattach ( struct xfs_inode * ip , uint flags ) ; 
/*--xfs_qm_dqattach--*/
void xfs_qm_dqdetach ( xfs_inode_t * ip ) ; 
/*--xfs_qm_dqdetach--*/
int xfs_qm_sync ( struct xfs_mount * mp , int flags ) ; 
/*--xfs_qm_sync--*/
void xfs_qm_destroy_quotainfo ( xfs_mount_t * mp ) ; 
/*--xfs_qm_destroy_quotainfo--*/
int xfs_qm_quotacheck ( xfs_mount_t * mp ) ; 
/*--xfs_qm_quotacheck--*/
boolean_t xfs_qm_dqalloc_incore ( xfs_dquot_t * * O_dqpp ) ; 
/*--xfs_qm_dqalloc_incore--*/
int xfs_qm_write_sb_changes ( xfs_mount_t * mp , __int64_t flags ) ; 
/*--xfs_qm_write_sb_changes--*/
int xfs_qm_vop_dqalloc ( struct xfs_inode * ip , uid_t uid , gid_t gid , prid_t prid , uint flags , struct xfs_dquot * * O_udqpp , struct xfs_dquot * * O_gdqpp ) ; 
/*--xfs_qm_vop_dqalloc--*/
xfs_dquot_t * xfs_qm_vop_chown ( xfs_trans_t * tp , xfs_inode_t * ip , xfs_dquot_t * * IO_olddq , xfs_dquot_t * newdq ) ; 
/*--xfs_qm_vop_chown--*/
int xfs_qm_vop_chown_reserve ( xfs_trans_t * tp , xfs_inode_t * ip , xfs_dquot_t * udqp , xfs_dquot_t * gdqp , uint flags ) ; 
/*--xfs_qm_vop_chown_reserve--*/
int xfs_qm_vop_rename_dqattach ( struct xfs_inode * * i_tab ) ; 
/*--xfs_qm_vop_rename_dqattach--*/
void xfs_qm_vop_create_dqattach ( struct xfs_trans * tp , struct xfs_inode * ip , struct xfs_dquot * udqp , struct xfs_dquot * gdqp ) ; 
/*--xfs_qm_vop_create_dqattach--*/
void xfs_qm_init_procfs ( void ) ; 
/*--xfs_qm_init_procfs--*/
void xfs_qm_cleanup_procfs ( void ) ; 
/*--xfs_qm_cleanup_procfs--*/
int xfs_growfs_rt ( xfs_mount_t * mp , xfs_growfs_rt_t * in ) ; 
/*--xfs_growfs_rt--*/
int xfs_rtallocate_extent ( xfs_trans_t * tp , xfs_rtblock_t bno , xfs_extlen_t minlen , xfs_extlen_t maxlen , xfs_extlen_t * len , xfs_alloctype_t type , int wasdel , xfs_extlen_t prod , xfs_rtblock_t * rtblock ) ; 
/*--xfs_rtallocate_extent--*/
int xfs_rtfree_extent ( xfs_trans_t * tp , xfs_rtblock_t bno , xfs_extlen_t len ) ; 
/*--xfs_rtfree_extent--*/
int xfs_rtmount_init ( xfs_mount_t * mp ) ; 
/*--xfs_rtmount_init--*/
int xfs_rtmount_inodes ( xfs_mount_t * mp ) ; 
/*--xfs_rtmount_inodes--*/
void xfs_rtunmount_inodes ( struct xfs_mount * mp ) ; 
/*--xfs_rtunmount_inodes--*/
int xfs_rtpick_extent ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_extlen_t len , xfs_rtblock_t * pick ) ; 
/*--xfs_rtpick_extent--*/
struct posix_acl * xfs_get_acl ( struct inode * inode , int type ) ; 
/*--xfs_get_acl--*/
int xfs_check_acl ( struct inode * inode , int mask ) ; 
/*--xfs_check_acl--*/
int posix_acl_access_exists ( struct inode * inode ) ; 
/*--posix_acl_access_exists--*/
int posix_acl_default_exists ( struct inode * inode ) ; 
/*--posix_acl_default_exists--*/
int xfs_inherit_acl ( struct inode * inode , struct posix_acl * default_acl ) ; 
/*--xfs_inherit_acl--*/
int xfs_acl_chmod ( struct inode * inode ) ; 
/*--xfs_acl_chmod--*/
int xfs_init_procfs ( void ) ; 
/*--xfs_init_procfs--*/
void xfs_cleanup_procfs ( void ) ; 
/*--xfs_cleanup_procfs--*/
int xfs_sysctl_register ( void ) ; 
/*--xfs_sysctl_register--*/
void xfs_sysctl_unregister ( void ) ; 
/*--xfs_sysctl_unregister--*/
long xfs_file_compat_ioctl ( struct file * filp , unsigned cmd , unsigned long p ) ; 
/*--xfs_file_compat_ioctl--*/
void xfs_alloc_compute_maxlevels ( xfs_mount_t * mp ) ; 
/*--xfs_alloc_compute_maxlevels--*/
xfs_extlen_t xfs_alloc_longest_free_extent ( struct xfs_mount * mp , struct xfs_perag * pag ) ; 
/*--xfs_alloc_longest_free_extent--*/
int xfs_alloc_get_freelist ( xfs_trans_t * tp , xfs_buf_t * agbp , xfs_agblock_t * bnop , int btreeblk ) ; 
/*--xfs_alloc_get_freelist--*/
void xfs_alloc_log_agf ( xfs_trans_t * tp , xfs_buf_t * bp , int fields ) ; 
/*--xfs_alloc_log_agf--*/
int xfs_alloc_pagf_init ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_agnumber_t agno , int flags ) ; 
/*--xfs_alloc_pagf_init--*/
int xfs_alloc_put_freelist ( xfs_trans_t * tp , xfs_buf_t * agbp , xfs_buf_t * agflbp , xfs_agblock_t bno , int btreeblk ) ; 
/*--xfs_alloc_put_freelist--*/
int xfs_read_agf ( struct xfs_mount * mp , struct xfs_trans * tp , xfs_agnumber_t agno , int flags , struct xfs_buf * * bpp ) ; 
/*--xfs_read_agf--*/
int xfs_alloc_read_agf ( struct xfs_mount * mp , struct xfs_trans * tp , xfs_agnumber_t agno , int flags , struct xfs_buf * * bpp ) ; 
/*--xfs_alloc_read_agf--*/
int xfs_alloc_vextent ( xfs_alloc_arg_t * args ) ; 
/*--xfs_alloc_vextent--*/
int xfs_free_extent ( xfs_trans_t * tp , xfs_fsblock_t bno , xfs_extlen_t len ) ; 
/*--xfs_free_extent--*/
void xfs_alloc_busy_insert ( struct xfs_trans * tp , xfs_agnumber_t agno , xfs_agblock_t bno , xfs_extlen_t len ) ; 
/*--xfs_alloc_busy_insert--*/
void xfs_alloc_busy_clear ( struct xfs_mount * mp , struct xfs_busy_extent * busyp ) ; 
/*--xfs_alloc_busy_clear--*/
struct xfs_btree_cur * xfs_allocbt_init_cursor ( struct xfs_mount * mp , struct xfs_trans * tp , struct xfs_buf * agbp , xfs_agnumber_t agno , xfs_btnum_t btnum ) ; 
/*--xfs_allocbt_init_cursor--*/
int xfs_allocbt_maxrecs ( struct xfs_mount * mp , int blocklen , int leaf ) ; 
/*--xfs_allocbt_maxrecs--*/
int xfs_attr_get ( xfs_inode_t * ip , const unsigned char * name , unsigned char * value , int * valuelenp , int flags ) ; 
/*--xfs_attr_get--*/
int xfs_attr_set ( xfs_inode_t * dp , const unsigned char * name , unsigned char * value , int valuelen , int flags ) ; 
/*--xfs_attr_set--*/
int xfs_attr_remove ( xfs_inode_t * dp , const unsigned char * name , int flags ) ; 
/*--xfs_attr_remove--*/
int xfs_attr_list_int ( xfs_attr_list_context_t * context ) ; 
/*--xfs_attr_list_int--*/
int xfs_attr_list ( xfs_inode_t * dp , char * buffer , int bufsize , int flags , attrlist_cursor_kern_t * cursor ) ; 
/*--xfs_attr_list--*/
int xfs_attr_inactive ( xfs_inode_t * dp ) ; 
/*--xfs_attr_inactive--*/
int xfs_attr_rmtval_get ( xfs_da_args_t * args ) ; 
/*--xfs_attr_rmtval_get--*/
int xfs_attr_shortform_bytesfit ( xfs_inode_t * dp , int bytes ) ; 
/*--xfs_attr_shortform_bytesfit--*/
void xfs_attr_shortform_create ( xfs_da_args_t * args ) ; 
/*--xfs_attr_shortform_create--*/
void xfs_attr_shortform_add ( xfs_da_args_t * args , int forkoff ) ; 
/*--xfs_attr_shortform_add--*/
int xfs_attr_shortform_remove ( xfs_da_args_t * args ) ; 
/*--xfs_attr_shortform_remove--*/
int xfs_attr_shortform_lookup ( xfs_da_args_t * args ) ; 
/*--xfs_attr_shortform_lookup--*/
int xfs_attr_shortform_getvalue ( xfs_da_args_t * args ) ; 
/*--xfs_attr_shortform_getvalue--*/
int xfs_attr_shortform_to_leaf ( xfs_da_args_t * args ) ; 
/*--xfs_attr_shortform_to_leaf--*/
int xfs_attr_shortform_list ( xfs_attr_list_context_t * context ) ; 
/*--xfs_attr_shortform_list--*/
int xfs_attr_shortform_allfit ( xfs_dabuf_t * bp , xfs_inode_t * dp ) ; 
/*--xfs_attr_shortform_allfit--*/
int xfs_attr_leaf_to_shortform ( xfs_dabuf_t * bp , xfs_da_args_t * args , int forkoff ) ; 
/*--xfs_attr_leaf_to_shortform--*/
int xfs_attr_leaf_to_node ( xfs_da_args_t * args ) ; 
/*--xfs_attr_leaf_to_node--*/
int xfs_attr_leaf_split ( xfs_da_state_t * state , xfs_da_state_blk_t * oldblk , xfs_da_state_blk_t * newblk ) ; 
/*--xfs_attr_leaf_split--*/
int xfs_attr_leaf_add ( xfs_dabuf_t * bp , xfs_da_args_t * args ) ; 
/*--xfs_attr_leaf_add--*/
int xfs_attr_leaf_toosmall ( xfs_da_state_t * state , int * action ) ; 
/*--xfs_attr_leaf_toosmall--*/
int xfs_attr_leaf_remove ( xfs_dabuf_t * bp , xfs_da_args_t * args ) ; 
/*--xfs_attr_leaf_remove--*/
void xfs_attr_leaf_unbalance ( xfs_da_state_t * state , xfs_da_state_blk_t * drop_blk , xfs_da_state_blk_t * save_blk ) ; 
/*--xfs_attr_leaf_unbalance--*/
int xfs_attr_leaf_lookup_int ( xfs_dabuf_t * bp , xfs_da_args_t * args ) ; 
/*--xfs_attr_leaf_lookup_int--*/
int xfs_attr_leaf_getvalue ( xfs_dabuf_t * bp , xfs_da_args_t * args ) ; 
/*--xfs_attr_leaf_getvalue--*/
int xfs_attr_leaf_order ( xfs_dabuf_t * leaf1_bp , xfs_dabuf_t * leaf2_bp ) ; 
/*--xfs_attr_leaf_order--*/
xfs_dahash_t xfs_attr_leaf_lasthash ( xfs_dabuf_t * bp , int * count ) ; 
/*--xfs_attr_leaf_lasthash--*/
int xfs_attr_leaf_newentsize ( int namelen , int valuelen , int blocksize , int * local ) ; 
/*--xfs_attr_leaf_newentsize--*/
int xfs_attr_leaf_list_int ( xfs_dabuf_t * bp , xfs_attr_list_context_t * context ) ; 
/*--xfs_attr_leaf_list_int--*/
int xfs_attr_leaf_clearflag ( xfs_da_args_t * args ) ; 
/*--xfs_attr_leaf_clearflag--*/
int xfs_attr_leaf_setflag ( xfs_da_args_t * args ) ; 
/*--xfs_attr_leaf_setflag--*/
int xfs_attr_leaf_flipflags ( xfs_da_args_t * args ) ; 
/*--xfs_attr_leaf_flipflags--*/
int xfs_attr_root_inactive ( xfs_trans_t * * trans , xfs_inode_t * dp ) ; 
/*--xfs_attr_root_inactive--*/
int xfs_bitmap_empty ( uint * map , uint size ) ; 
/*--xfs_bitmap_empty--*/
int xfs_contig_bits ( uint * map , uint size , uint start_bit ) ; 
/*--xfs_contig_bits--*/
int xfs_next_bit ( uint * map , uint size , uint start_bit ) ; 
/*--xfs_next_bit--*/
uint xfs_default_attroffset ( struct xfs_inode * ip ) ; 
/*--xfs_default_attroffset--*/
int xfs_bmap_add_attrfork ( xfs_inode_t * ip , int size , int rsvd ) ; 
/*--xfs_bmap_add_attrfork--*/
void xfs_bmap_add_free ( xfs_fsblock_t bno , xfs_filblks_t len , xfs_bmap_free_t * flist , xfs_mount_t * mp ) ; 
/*--xfs_bmap_add_free--*/
void xfs_bmap_compute_maxlevels ( xfs_mount_t * mp , int whichfork ) ; 
/*--xfs_bmap_compute_maxlevels--*/
int xfs_bmap_finish ( xfs_trans_t * * tp , xfs_bmap_free_t * flist , int * committed ) ; 
/*--xfs_bmap_finish--*/
void xfs_bmap_cancel ( xfs_bmap_free_t * flist ) ; 
/*--xfs_bmap_cancel--*/
int xfs_bmap_first_unused ( xfs_trans_t * tp , xfs_inode_t * ip , xfs_extlen_t len , xfs_fileoff_t * first_unused , int whichfork ) ; 
/*--xfs_bmap_first_unused--*/
int xfs_bmap_last_before ( xfs_trans_t * tp , xfs_inode_t * ip , xfs_fileoff_t * last_block , int whichfork ) ; 
/*--xfs_bmap_last_before--*/
int xfs_bmap_last_offset ( xfs_trans_t * tp , xfs_inode_t * ip , xfs_fileoff_t * last_block , int whichfork ) ; 
/*--xfs_bmap_last_offset--*/
int xfs_bmap_one_block ( xfs_inode_t * ip , int whichfork ) ; 
/*--xfs_bmap_one_block--*/
int xfs_bmap_read_extents ( xfs_trans_t * tp , xfs_inode_t * ip , int whichfork ) ; 
/*--xfs_bmap_read_extents--*/
int xfs_bmapi ( xfs_trans_t * tp , xfs_inode_t * ip , xfs_fileoff_t bno , xfs_filblks_t len , int flags , xfs_fsblock_t * firstblock , xfs_extlen_t total , xfs_bmbt_irec_t * mval , int * nmap , xfs_bmap_free_t * flist , xfs_extdelta_t * delta ) ; 
/*--xfs_bmapi--*/
int xfs_bmapi_single ( xfs_trans_t * tp , xfs_inode_t * ip , int whichfork , xfs_fsblock_t * fsb , xfs_fileoff_t bno ) ; 
/*--xfs_bmapi_single--*/
int xfs_bunmapi ( xfs_trans_t * tp , struct xfs_inode * ip , xfs_fileoff_t bno , xfs_filblks_t len , int flags , xfs_extnum_t nexts , xfs_fsblock_t * firstblock , xfs_bmap_free_t * flist , xfs_extdelta_t * delta , int * done ) ; 
/*--xfs_bunmapi--*/
int xfs_getbmap ( xfs_inode_t * ip , struct getbmapx * bmv , xfs_bmap_format_t formatter , void * arg ) ; 
/*--xfs_getbmap--*/
int xfs_bmap_eof ( xfs_inode_t * ip , xfs_fileoff_t endoff , int whichfork , int * eof ) ; 
/*--xfs_bmap_eof--*/
int xfs_bmap_count_blocks ( xfs_trans_t * tp , xfs_inode_t * ip , int whichfork , int * count ) ; 
/*--xfs_bmap_count_blocks--*/
void xfs_bmdr_to_bmbt ( struct xfs_mount * mp , xfs_bmdr_block_t * dblock , int dblocklen , struct xfs_btree_block * rblock , int rblocklen ) ; 
/*--xfs_bmdr_to_bmbt--*/
void xfs_bmbt_get_all ( xfs_bmbt_rec_host_t * r , xfs_bmbt_irec_t * s ) ; 
/*--xfs_bmbt_get_all--*/
xfs_filblks_t xfs_bmbt_get_blockcount ( xfs_bmbt_rec_host_t * r ) ; 
/*--xfs_bmbt_get_blockcount--*/
xfs_fsblock_t xfs_bmbt_get_startblock ( xfs_bmbt_rec_host_t * r ) ; 
/*--xfs_bmbt_get_startblock--*/
xfs_fileoff_t xfs_bmbt_get_startoff ( xfs_bmbt_rec_host_t * r ) ; 
/*--xfs_bmbt_get_startoff--*/
xfs_exntst_t xfs_bmbt_get_state ( xfs_bmbt_rec_host_t * r ) ; 
/*--xfs_bmbt_get_state--*/
xfs_filblks_t xfs_bmbt_disk_get_blockcount ( xfs_bmbt_rec_t * r ) ; 
/*--xfs_bmbt_disk_get_blockcount--*/
xfs_fileoff_t xfs_bmbt_disk_get_startoff ( xfs_bmbt_rec_t * r ) ; 
/*--xfs_bmbt_disk_get_startoff--*/
void xfs_bmbt_set_allf ( xfs_bmbt_rec_host_t * r , xfs_fileoff_t startoff , xfs_fsblock_t startblock , xfs_filblks_t blockcount , xfs_exntst_t state ) ; 
/*--xfs_bmbt_set_allf--*/
void xfs_bmbt_set_all ( xfs_bmbt_rec_host_t * r , xfs_bmbt_irec_t * s ) ; 
/*--xfs_bmbt_set_all--*/
void xfs_bmbt_disk_set_allf ( xfs_bmbt_rec_t * r , xfs_fileoff_t startoff , xfs_fsblock_t startblock , xfs_filblks_t blockcount , xfs_exntst_t state ) ; 
/*--xfs_bmbt_disk_set_allf--*/
void xfs_bmbt_set_blockcount ( xfs_bmbt_rec_host_t * r , xfs_filblks_t v ) ; 
/*--xfs_bmbt_set_blockcount--*/
void xfs_bmbt_set_startblock ( xfs_bmbt_rec_host_t * r , xfs_fsblock_t v ) ; 
/*--xfs_bmbt_set_startblock--*/
void xfs_bmbt_set_startoff ( xfs_bmbt_rec_host_t * r , xfs_fileoff_t v ) ; 
/*--xfs_bmbt_set_startoff--*/
void xfs_bmbt_set_state ( xfs_bmbt_rec_host_t * r , xfs_exntst_t v ) ; 
/*--xfs_bmbt_set_state--*/
void xfs_bmbt_to_bmdr ( struct xfs_mount * mp , struct xfs_btree_block * rblock , int rblocklen , xfs_bmdr_block_t * dblock , int dblocklen ) ; 
/*--xfs_bmbt_to_bmdr--*/
int xfs_check_nostate_extents ( xfs_ifork_t * ifp , xfs_extnum_t idx , xfs_extnum_t num ) ; 
/*--xfs_check_nostate_extents--*/
int xfs_bmbt_get_maxrecs ( struct xfs_btree_cur * cur , int level ) ; 
/*--xfs_bmbt_get_maxrecs--*/
struct xfs_btree_cur * xfs_bmbt_init_cursor ( struct xfs_mount * mp , struct xfs_trans * tp , struct xfs_inode * ip , int whichfork ) ; 
/*--xfs_bmbt_init_cursor--*/
int xfs_bmbt_maxrecs ( struct xfs_mount * mp , int blocklen , int leaf ) ; 
/*--xfs_bmbt_maxrecs--*/
int xfs_bmdr_maxrecs ( struct xfs_mount * mp , int blocklen , int leaf ) ; 
/*--xfs_bmdr_maxrecs--*/
int xfs_btree_check_block ( struct xfs_btree_cur * cur , struct xfs_btree_block * block , int level , struct xfs_buf * bp ) ; 
/*--xfs_btree_check_block--*/
int xfs_btree_check_lptr ( struct xfs_btree_cur * cur , xfs_dfsbno_t bno , int level ) ; 
/*--xfs_btree_check_lptr--*/
void xfs_btree_del_cursor ( xfs_btree_cur_t * cur , int error ) ; 
/*--xfs_btree_del_cursor--*/
int xfs_btree_dup_cursor ( xfs_btree_cur_t * cur , xfs_btree_cur_t * * ncur ) ; 
/*--xfs_btree_dup_cursor--*/
xfs_buf_t * xfs_btree_get_bufl ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_fsblock_t fsbno , uint lock ) ; 
/*--xfs_btree_get_bufl--*/
xfs_buf_t * xfs_btree_get_bufs ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_agnumber_t agno , xfs_agblock_t agbno , uint lock ) ; 
/*--xfs_btree_get_bufs--*/
int xfs_btree_islastblock ( xfs_btree_cur_t * cur , int level ) ; 
/*--xfs_btree_islastblock--*/
void xfs_btree_offsets ( __int64_t fields , const short * offsets , int nbits , int * first , int * last ) ; 
/*--xfs_btree_offsets--*/
int xfs_btree_read_bufl ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_fsblock_t fsbno , uint lock , xfs_buf_t * * bpp , int refval ) ; 
/*--xfs_btree_read_bufl--*/
void xfs_btree_reada_bufl ( xfs_mount_t * mp , xfs_fsblock_t fsbno , xfs_extlen_t count ) ; 
/*--xfs_btree_reada_bufl--*/
void xfs_btree_reada_bufs ( xfs_mount_t * mp , xfs_agnumber_t agno , xfs_agblock_t agbno , xfs_extlen_t count ) ; 
/*--xfs_btree_reada_bufs--*/
void xfs_btree_setbuf ( xfs_btree_cur_t * cur , int lev , xfs_buf_t * bp ) ; 
/*--xfs_btree_setbuf--*/
void xfs_btree_log_recs ( struct xfs_btree_cur * cur , struct xfs_buf * bp , int first , int last ) ; 
/*--xfs_btree_log_recs--*/
void xfs_btree_log_block ( struct xfs_btree_cur * cur , struct xfs_buf * bp , int fields ) ; 
/*--xfs_btree_log_block--*/
int xfs_btree_increment ( struct xfs_btree_cur * cur , int level , int * stat ) ; 
/*--xfs_btree_increment--*/
int xfs_btree_decrement ( struct xfs_btree_cur * cur , int level , int * stat ) ; 
/*--xfs_btree_decrement--*/
int xfs_btree_lookup ( struct xfs_btree_cur * cur , xfs_lookup_t dir , int * stat ) ; 
/*--xfs_btree_lookup--*/
int xfs_btree_update ( struct xfs_btree_cur * cur , union xfs_btree_rec * rec ) ; 
/*--xfs_btree_update--*/
int xfs_btree_new_iroot ( struct xfs_btree_cur * cur , int * logflags , int * stat ) ; 
/*--xfs_btree_new_iroot--*/
int xfs_btree_insert ( struct xfs_btree_cur * cur , int * stat ) ; 
/*--xfs_btree_insert--*/
int xfs_btree_delete ( struct xfs_btree_cur * cur , int * stat ) ; 
/*--xfs_btree_delete--*/
int xfs_btree_get_rec ( struct xfs_btree_cur * cur , union xfs_btree_rec * * recp , int * stat ) ; 
/*--xfs_btree_get_rec--*/
void xfs_buf_item_init ( xfs_buf_t * bp , xfs_mount_t * mp ) ; 
/*--xfs_buf_item_init--*/
void xfs_buf_item_log ( xfs_buf_log_item_t * bip , uint first , uint last ) ; 
/*--xfs_buf_item_log--*/
uint xfs_buf_item_dirty ( xfs_buf_log_item_t * bip ) ; 
/*--xfs_buf_item_dirty--*/
void xfs_buf_item_relse ( xfs_buf_t * bp ) ; 
/*--xfs_buf_item_relse--*/
void xfs_buf_attach_iodone ( xfs_buf_t * bp , void ( * cb ) ( xfs_buf_t * , xfs_log_item_t * ) , xfs_log_item_t * lip ) ; 
/*--xfs_buf_attach_iodone--*/
void xfs_buf_iodone_callbacks ( xfs_buf_t * bp ) ; 
/*--xfs_buf_iodone_callbacks--*/
void xfs_buf_iodone ( xfs_buf_t * bp , xfs_buf_log_item_t * bip ) ; 
/*--xfs_buf_iodone--*/
int xfs_da_node_create ( xfs_da_args_t * args , xfs_dablk_t blkno , int level , xfs_dabuf_t * * bpp , int whichfork ) ; 
/*--xfs_da_node_create--*/
int xfs_da_split ( xfs_da_state_t * state ) ; 
/*--xfs_da_split--*/
int xfs_da_join ( xfs_da_state_t * state ) ; 
/*--xfs_da_join--*/
void xfs_da_fixhashpath ( xfs_da_state_t * state , xfs_da_state_path_t * path ) ; 
/*--xfs_da_fixhashpath--*/
int xfs_da_node_lookup_int ( xfs_da_state_t * state , int * result ) ; 
/*--xfs_da_node_lookup_int--*/
int xfs_da_blk_link ( xfs_da_state_t * state , xfs_da_state_blk_t * old_blk , xfs_da_state_blk_t * new_blk ) ; 
/*--xfs_da_blk_link--*/
int xfs_da_path_shift ( xfs_da_state_t * state , xfs_da_state_path_t * path , int forward , int release , int * result ) ; 
/*--xfs_da_path_shift--*/
xfs_dahash_t xfs_da_hashname ( const __uint8_t * name , int namelen ) ; 
/*--xfs_da_hashname--*/
enum xfs_dacmp xfs_da_compname ( struct xfs_da_args * args , const unsigned char * name , int len ) ; 
/*--xfs_da_compname--*/
int xfs_da_grow_inode ( xfs_da_args_t * args , xfs_dablk_t * new_blkno ) ; 
/*--xfs_da_grow_inode--*/
int xfs_da_shrink_inode ( xfs_da_args_t * args , xfs_dablk_t dead_blkno , xfs_dabuf_t * dead_buf ) ; 
/*--xfs_da_shrink_inode--*/
int xfs_da_get_buf ( xfs_trans_t * trans , xfs_inode_t * dp , xfs_dablk_t bno , xfs_daddr_t mappedbno , xfs_dabuf_t * * bpp , int whichfork ) ; 
/*--xfs_da_get_buf--*/
int xfs_da_read_buf ( xfs_trans_t * trans , xfs_inode_t * dp , xfs_dablk_t bno , xfs_daddr_t mappedbno , xfs_dabuf_t * * bpp , int whichfork ) ; 
/*--xfs_da_read_buf--*/
xfs_daddr_t xfs_da_reada_buf ( xfs_trans_t * trans , xfs_inode_t * dp , xfs_dablk_t bno , int whichfork ) ; 
/*--xfs_da_reada_buf--*/
xfs_da_state_t * xfs_da_state_alloc ( void ) ; 
/*--xfs_da_state_alloc--*/
void xfs_da_state_free ( xfs_da_state_t * state ) ; 
/*--xfs_da_state_free--*/
void xfs_da_buf_done ( xfs_dabuf_t * dabuf ) ; 
/*--xfs_da_buf_done--*/
void xfs_da_log_buf ( xfs_trans_t * tp , xfs_dabuf_t * dabuf , uint first , uint last ) ; 
/*--xfs_da_log_buf--*/
void xfs_da_brelse ( xfs_trans_t * tp , xfs_dabuf_t * dabuf ) ; 
/*--xfs_da_brelse--*/
void xfs_da_binval ( xfs_trans_t * tp , xfs_dabuf_t * dabuf ) ; 
/*--xfs_da_binval--*/
xfs_daddr_t xfs_da_blkno ( xfs_dabuf_t * dabuf ) ; 
/*--xfs_da_blkno--*/
void xfs_dir_mount ( xfs_mount_t * mp ) ; 
/*--xfs_dir_mount--*/
int xfs_dir_isempty ( xfs_inode_t * dp ) ; 
/*--xfs_dir_isempty--*/
int xfs_dir_ino_validate ( xfs_mount_t * mp , xfs_ino_t ino ) ; 
/*--xfs_dir_ino_validate--*/
int xfs_dir_init ( xfs_trans_t * tp , xfs_inode_t * dp , xfs_inode_t * pdp ) ; 
/*--xfs_dir_init--*/
int xfs_dir_createname ( xfs_trans_t * tp , xfs_inode_t * dp , struct xfs_name * name , xfs_ino_t inum , xfs_fsblock_t * first , xfs_bmap_free_t * flist , xfs_extlen_t total ) ; 
/*--xfs_dir_createname--*/
int xfs_dir_cilookup_result ( struct xfs_da_args * args , const unsigned char * name , int len ) ; 
/*--xfs_dir_cilookup_result--*/
int xfs_dir_lookup ( xfs_trans_t * tp , xfs_inode_t * dp , struct xfs_name * name , xfs_ino_t * inum , struct xfs_name * ci_name ) ; 
/*--xfs_dir_lookup--*/
int xfs_dir_removename ( xfs_trans_t * tp , xfs_inode_t * dp , struct xfs_name * name , xfs_ino_t ino , xfs_fsblock_t * first , xfs_bmap_free_t * flist , xfs_extlen_t total ) ; 
/*--xfs_dir_removename--*/
int xfs_readdir ( xfs_inode_t * dp , void * dirent , size_t bufsize , xfs_off_t * offset , filldir_t filldir ) ; 
/*--xfs_readdir--*/
int xfs_dir_replace ( xfs_trans_t * tp , xfs_inode_t * dp , struct xfs_name * name , xfs_ino_t inum , xfs_fsblock_t * first , xfs_bmap_free_t * flist , xfs_extlen_t total ) ; 
/*--xfs_dir_replace--*/
int xfs_dir_canenter ( xfs_trans_t * tp , xfs_inode_t * dp , struct xfs_name * name , uint resblks ) ; 
/*--xfs_dir_canenter--*/
int xfs_dir2_grow_inode ( xfs_da_args_t * args , int space , xfs_dir2_db_t * dbp ) ; 
/*--xfs_dir2_grow_inode--*/
int xfs_dir2_isblock ( xfs_trans_t * tp , xfs_inode_t * dp , int * vp ) ; 
/*--xfs_dir2_isblock--*/
int xfs_dir2_isleaf ( xfs_trans_t * tp , xfs_inode_t * dp , int * vp ) ; 
/*--xfs_dir2_isleaf--*/
int xfs_dir2_shrink_inode ( xfs_da_args_t * args , xfs_dir2_db_t db , xfs_dabuf_t * bp ) ; 
/*--xfs_dir2_shrink_inode--*/
void xfs_dir_startup ( void ) ; 
/*--xfs_dir_startup--*/
int xfs_dir2_block_addname ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_block_addname--*/
int xfs_dir2_block_getdents ( xfs_inode_t * dp , void * dirent , xfs_off_t * offset , filldir_t filldir ) ; 
/*--xfs_dir2_block_getdents--*/
int xfs_dir2_block_lookup ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_block_lookup--*/
int xfs_dir2_block_removename ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_block_removename--*/
int xfs_dir2_block_replace ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_block_replace--*/
int xfs_dir2_leaf_to_block ( xfs_da_args_t * args , xfs_dabuf_t * lbp , xfs_dabuf_t * dbp ) ; 
/*--xfs_dir2_leaf_to_block--*/
int xfs_dir2_sf_to_block ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_sf_to_block--*/
xfs_dir2_data_free_t * xfs_dir2_data_freefind ( xfs_dir2_data_t * d , xfs_dir2_data_unused_t * dup ) ; 
/*--xfs_dir2_data_freefind--*/
xfs_dir2_data_free_t * xfs_dir2_data_freeinsert ( xfs_dir2_data_t * d , xfs_dir2_data_unused_t * dup , int * loghead ) ; 
/*--xfs_dir2_data_freeinsert--*/
void xfs_dir2_data_freescan ( xfs_mount_t * mp , xfs_dir2_data_t * d , int * loghead ) ; 
/*--xfs_dir2_data_freescan--*/
int xfs_dir2_data_init ( xfs_da_args_t * args , xfs_dir2_db_t blkno , xfs_dabuf_t * * bpp ) ; 
/*--xfs_dir2_data_init--*/
void xfs_dir2_data_log_entry ( xfs_trans_t * tp , xfs_dabuf_t * bp , xfs_dir2_data_entry_t * dep ) ; 
/*--xfs_dir2_data_log_entry--*/
void xfs_dir2_data_log_header ( xfs_trans_t * tp , xfs_dabuf_t * bp ) ; 
/*--xfs_dir2_data_log_header--*/
void xfs_dir2_data_log_unused ( xfs_trans_t * tp , xfs_dabuf_t * bp , xfs_dir2_data_unused_t * dup ) ; 
/*--xfs_dir2_data_log_unused--*/
void xfs_dir2_data_make_free ( xfs_trans_t * tp , xfs_dabuf_t * bp , xfs_dir2_data_aoff_t offset , xfs_dir2_data_aoff_t len , int * needlogp , int * needscanp ) ; 
/*--xfs_dir2_data_make_free--*/
void xfs_dir2_data_use_free ( xfs_trans_t * tp , xfs_dabuf_t * bp , xfs_dir2_data_unused_t * dup , xfs_dir2_data_aoff_t offset , xfs_dir2_data_aoff_t len , int * needlogp , int * needscanp ) ; 
/*--xfs_dir2_data_use_free--*/
int xfs_dir2_block_to_leaf ( xfs_da_args_t * args , xfs_dabuf_t * dbp ) ; 
/*--xfs_dir2_block_to_leaf--*/
int xfs_dir2_leaf_addname ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_leaf_addname--*/
void xfs_dir2_leaf_compact ( xfs_da_args_t * args , xfs_dabuf_t * bp ) ; 
/*--xfs_dir2_leaf_compact--*/
void xfs_dir2_leaf_compact_x1 ( xfs_dabuf_t * bp , int * indexp , int * lowstalep , int * highstalep , int * lowlogp , int * highlogp ) ; 
/*--xfs_dir2_leaf_compact_x1--*/
int xfs_dir2_leaf_getdents ( xfs_inode_t * dp , void * dirent , size_t bufsize , xfs_off_t * offset , filldir_t filldir ) ; 
/*--xfs_dir2_leaf_getdents--*/
int xfs_dir2_leaf_init ( xfs_da_args_t * args , xfs_dir2_db_t bno , xfs_dabuf_t * * bpp , int magic ) ; 
/*--xfs_dir2_leaf_init--*/
void xfs_dir2_leaf_log_ents ( xfs_trans_t * tp , xfs_dabuf_t * bp , int first , int last ) ; 
/*--xfs_dir2_leaf_log_ents--*/
void xfs_dir2_leaf_log_header ( xfs_trans_t * tp , xfs_dabuf_t * bp ) ; 
/*--xfs_dir2_leaf_log_header--*/
int xfs_dir2_leaf_lookup ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_leaf_lookup--*/
int xfs_dir2_leaf_removename ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_leaf_removename--*/
int xfs_dir2_leaf_replace ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_leaf_replace--*/
int xfs_dir2_leaf_search_hash ( xfs_da_args_t * args , xfs_dabuf_t * lbp ) ; 
/*--xfs_dir2_leaf_search_hash--*/
int xfs_dir2_leaf_trim_data ( xfs_da_args_t * args , xfs_dabuf_t * lbp , xfs_dir2_db_t db ) ; 
/*--xfs_dir2_leaf_trim_data--*/
int xfs_dir2_node_to_leaf ( xfs_da_state_t * state ) ; 
/*--xfs_dir2_node_to_leaf--*/
int xfs_dir2_leaf_to_node ( xfs_da_args_t * args , xfs_dabuf_t * lbp ) ; 
/*--xfs_dir2_leaf_to_node--*/
xfs_dahash_t xfs_dir2_leafn_lasthash ( xfs_dabuf_t * bp , int * count ) ; 
/*--xfs_dir2_leafn_lasthash--*/
int xfs_dir2_leafn_lookup_int ( xfs_dabuf_t * bp , xfs_da_args_t * args , int * indexp , xfs_da_state_t * state ) ; 
/*--xfs_dir2_leafn_lookup_int--*/
int xfs_dir2_leafn_order ( xfs_dabuf_t * leaf1_bp , xfs_dabuf_t * leaf2_bp ) ; 
/*--xfs_dir2_leafn_order--*/
int xfs_dir2_leafn_split ( xfs_da_state_t * state , xfs_da_state_blk_t * oldblk , xfs_da_state_blk_t * newblk ) ; 
/*--xfs_dir2_leafn_split--*/
int xfs_dir2_leafn_toosmall ( xfs_da_state_t * state , int * action ) ; 
/*--xfs_dir2_leafn_toosmall--*/
void xfs_dir2_leafn_unbalance ( xfs_da_state_t * state , xfs_da_state_blk_t * drop_blk , xfs_da_state_blk_t * save_blk ) ; 
/*--xfs_dir2_leafn_unbalance--*/
int xfs_dir2_node_addname ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_node_addname--*/
int xfs_dir2_node_lookup ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_node_lookup--*/
int xfs_dir2_node_removename ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_node_removename--*/
int xfs_dir2_node_replace ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_node_replace--*/
int xfs_dir2_node_trim_free ( xfs_da_args_t * args , xfs_fileoff_t fo , int * rvalp ) ; 
/*--xfs_dir2_node_trim_free--*/
int xfs_dir2_block_sfsize ( xfs_inode_t * dp , xfs_dir2_block_t * block , xfs_dir2_sf_hdr_t * sfhp ) ; 
/*--xfs_dir2_block_sfsize--*/
int xfs_dir2_block_to_sf ( xfs_da_args_t * args , xfs_dabuf_t * bp , int size , xfs_dir2_sf_hdr_t * sfhp ) ; 
/*--xfs_dir2_block_to_sf--*/
int xfs_dir2_sf_addname ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_sf_addname--*/
int xfs_dir2_sf_create ( xfs_da_args_t * args , xfs_ino_t pino ) ; 
/*--xfs_dir2_sf_create--*/
int xfs_dir2_sf_getdents ( xfs_inode_t * dp , void * dirent , xfs_off_t * offset , filldir_t filldir ) ; 
/*--xfs_dir2_sf_getdents--*/
int xfs_dir2_sf_lookup ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_sf_lookup--*/
int xfs_dir2_sf_removename ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_sf_removename--*/
int xfs_dir2_sf_replace ( xfs_da_args_t * args ) ; 
/*--xfs_dir2_sf_replace--*/
void xfs_fs_cmn_err ( int level , xfs_mount_t * mp , char * fmt , ... ) ; 
/*--xfs_fs_cmn_err--*/
void xfs_cmn_err ( int panic_tag , int level , xfs_mount_t * mp , char * fmt , ... ) ; 
/*--xfs_cmn_err--*/
void xfs_error_report ( const char * tag , int level , struct xfs_mount * mp , const char * filename , int linenum , inst_t * ra ) ; 
/*--xfs_error_report--*/
void xfs_corruption_error ( const char * tag , int level , struct xfs_mount * mp , void * p , const char * filename , int linenum , inst_t * ra ) ; 
/*--xfs_corruption_error--*/
void xfs_efi_item_free ( xfs_efi_log_item_t * efip ) ; 
/*--xfs_efi_item_free--*/
xfs_efi_log_item_t * xfs_efi_init ( xfs_mount_t * mp , uint nextents ) ; 
/*--xfs_efi_init--*/
int xfs_efi_copy_format ( xfs_log_iovec_t * buf , xfs_efi_log_format_t * dst_efi_fmt ) ; 
/*--xfs_efi_copy_format--*/
void xfs_efi_release ( xfs_efi_log_item_t * efip , uint nextents ) ; 
/*--xfs_efi_release--*/
xfs_efd_log_item_t * xfs_efd_init ( xfs_mount_t * mp , xfs_efi_log_item_t * efip , uint nextents ) ; 
/*--xfs_efd_init--*/
int xfs_filestream_init ( void ) ; 
/*--xfs_filestream_init--*/
void xfs_filestream_uninit ( void ) ; 
/*--xfs_filestream_uninit--*/
int xfs_filestream_mount ( xfs_mount_t * mp ) ; 
/*--xfs_filestream_mount--*/
void xfs_filestream_unmount ( xfs_mount_t * mp ) ; 
/*--xfs_filestream_unmount--*/
xfs_agnumber_t xfs_filestream_lookup_ag ( xfs_inode_t * ip ) ; 
/*--xfs_filestream_lookup_ag--*/
int xfs_filestream_associate ( xfs_inode_t * pip , xfs_inode_t * ip ) ; 
/*--xfs_filestream_associate--*/
int xfs_filestream_new_ag ( xfs_bmalloca_t * ap , xfs_agnumber_t * agp ) ; 
/*--xfs_filestream_new_ag--*/
void xfs_filestream_deassociate ( xfs_inode_t * ip ) ; 
/*--xfs_filestream_deassociate--*/
int xfs_fs_geometry ( xfs_mount_t * mp , xfs_fsop_geom_t * geo , int new_version ) ; 
/*--xfs_fs_geometry--*/
int xfs_growfs_data ( xfs_mount_t * mp , xfs_growfs_data_t * in ) ; 
/*--xfs_growfs_data--*/
int xfs_growfs_log ( xfs_mount_t * mp , xfs_growfs_log_t * in ) ; 
/*--xfs_growfs_log--*/
int xfs_fs_counts ( xfs_mount_t * mp , xfs_fsop_counts_t * cnt ) ; 
/*--xfs_fs_counts--*/
int xfs_reserve_blocks ( xfs_mount_t * mp , __uint64_t * inval , xfs_fsop_resblks_t * outval ) ; 
/*--xfs_reserve_blocks--*/
int xfs_fs_log_dummy ( xfs_mount_t * mp ) ; 
/*--xfs_fs_log_dummy--*/
int xfs_fs_goingdown ( xfs_mount_t * mp , __uint32_t inflags ) ; 
/*--xfs_fs_goingdown--*/
int xfs_inobt_lookup ( struct xfs_btree_cur * cur , xfs_agino_t ino , xfs_lookup_t dir , int * stat ) ; 
/*--xfs_inobt_lookup--*/
int xfs_inobt_get_rec ( struct xfs_btree_cur * cur , xfs_inobt_rec_incore_t * irec , int * stat ) ; 
/*--xfs_inobt_get_rec--*/
int xfs_dialloc ( xfs_trans_t * tp , xfs_ino_t parent , mode_t mode , int okalloc , xfs_buf_t * * IO_agbp , boolean_t * alloc_done , xfs_ino_t * inop ) ; 
/*--xfs_dialloc--*/
int xfs_difree ( xfs_trans_t * tp , xfs_ino_t inode , xfs_bmap_free_t * flist , int * delete , xfs_ino_t * first_ino ) ; 
/*--xfs_difree--*/
int xfs_imap ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_ino_t ino , struct xfs_imap * imap , uint flags ) ; 
/*--xfs_imap--*/
void xfs_ialloc_compute_maxlevels ( xfs_mount_t * mp ) ; 
/*--xfs_ialloc_compute_maxlevels--*/
void xfs_ialloc_log_agi ( xfs_trans_t * tp , xfs_buf_t * bp , int fields ) ; 
/*--xfs_ialloc_log_agi--*/
int xfs_read_agi ( struct xfs_mount * mp , struct xfs_trans * tp , xfs_agnumber_t agno , struct xfs_buf * * bpp ) ; 
/*--xfs_read_agi--*/
int xfs_ialloc_read_agi ( struct xfs_mount * mp , struct xfs_trans * tp , xfs_agnumber_t agno , struct xfs_buf * * bpp ) ; 
/*--xfs_ialloc_read_agi--*/
int xfs_ialloc_pagi_init ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_agnumber_t agno ) ; 
/*--xfs_ialloc_pagi_init--*/
struct xfs_btree_cur * xfs_inobt_init_cursor ( struct xfs_mount * mp , struct xfs_trans * tp , struct xfs_buf * agbp , xfs_agnumber_t agno ) ; 
/*--xfs_inobt_init_cursor--*/
int xfs_inobt_maxrecs ( struct xfs_mount * mp , int blocklen , int leaf ) ; 
/*--xfs_inobt_maxrecs--*/
int xfs_iget ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_ino_t ino , uint flags , uint lock_flags , xfs_inode_t * * ipp ) ; 
/*--xfs_iget--*/
void xfs_iput ( xfs_inode_t * ip , uint lock_flags ) ; 
/*--xfs_iput--*/
void xfs_iput_new ( xfs_inode_t * ip , uint lock_flags ) ; 
/*--xfs_iput_new--*/
void xfs_ireclaim ( struct xfs_inode * ip ) ; 
/*--xfs_ireclaim--*/
uint xfs_ilock_map_shared ( xfs_inode_t * ip ) ; 
/*--xfs_ilock_map_shared--*/
void xfs_iunlock_map_shared ( xfs_inode_t * ip , unsigned int lock_mode ) ; 
/*--xfs_iunlock_map_shared--*/
void xfs_ilock ( xfs_inode_t * ip , uint lock_flags ) ; 
/*--xfs_ilock--*/
int xfs_ilock_nowait ( xfs_inode_t * ip , uint lock_flags ) ; 
/*--xfs_ilock_nowait--*/
void xfs_iunlock ( xfs_inode_t * ip , uint lock_flags ) ; 
/*--xfs_iunlock--*/
void xfs_ilock_demote ( xfs_inode_t * ip , uint lock_flags ) ; 
/*--xfs_ilock_demote--*/
int xfs_inotobp ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_ino_t ino , xfs_dinode_t * * dipp , xfs_buf_t * * bpp , int * offset , uint imap_flags ) ; 
/*--xfs_inotobp--*/
int xfs_itobp ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_inode_t * ip , xfs_dinode_t * * dipp , xfs_buf_t * * bpp , uint buf_flags ) ; 
/*--xfs_itobp--*/
void xfs_dinode_to_disk ( xfs_dinode_t * to , xfs_icdinode_t * from ) ; 
/*--xfs_dinode_to_disk--*/
uint xfs_ip2xflags ( xfs_inode_t * ip ) ; 
/*--xfs_ip2xflags--*/
uint xfs_dic2xflags ( xfs_dinode_t * dip ) ; 
/*--xfs_dic2xflags--*/
int xfs_iread ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_inode_t * ip , uint iget_flags ) ; 
/*--xfs_iread--*/
int xfs_iread_extents ( xfs_trans_t * tp , xfs_inode_t * ip , int whichfork ) ; 
/*--xfs_iread_extents--*/
int xfs_ialloc ( xfs_trans_t * tp , xfs_inode_t * pip , mode_t mode , xfs_nlink_t nlink , xfs_dev_t rdev , cred_t * cr , xfs_prid_t prid , int okalloc , xfs_buf_t * * ialloc_context , boolean_t * call_again , xfs_inode_t * * ipp ) ; 
/*--xfs_ialloc--*/
int xfs_itruncate_start ( xfs_inode_t * ip , uint flags , xfs_fsize_t new_size ) ; 
/*--xfs_itruncate_start--*/
int xfs_itruncate_finish ( xfs_trans_t * * tp , xfs_inode_t * ip , xfs_fsize_t new_size , int fork , int sync ) ; 
/*--xfs_itruncate_finish--*/
int xfs_iunlink ( xfs_trans_t * tp , xfs_inode_t * ip ) ; 
/*--xfs_iunlink--*/
int xfs_ifree ( xfs_trans_t * tp , xfs_inode_t * ip , xfs_bmap_free_t * flist ) ; 
/*--xfs_ifree--*/
void xfs_iroot_realloc ( xfs_inode_t * ip , int rec_diff , int whichfork ) ; 
/*--xfs_iroot_realloc--*/
void xfs_idata_realloc ( xfs_inode_t * ip , int byte_diff , int whichfork ) ; 
/*--xfs_idata_realloc--*/
void xfs_idestroy_fork ( xfs_inode_t * ip , int whichfork ) ; 
/*--xfs_idestroy_fork--*/
void xfs_iunpin_wait ( struct xfs_inode * ip ) ; 
/*--xfs_iunpin_wait--*/
int xfs_iextents_copy ( xfs_inode_t * ip , xfs_bmbt_rec_t * dp , int whichfork ) ; 
/*--xfs_iextents_copy--*/
int xfs_iflush ( xfs_inode_t * ip , uint flags ) ; 
/*--xfs_iflush--*/
xfs_bmbt_rec_host_t * xfs_iext_get_ext ( xfs_ifork_t * ifp , xfs_extnum_t idx ) ; 
/*--xfs_iext_get_ext--*/
void xfs_iext_insert ( xfs_inode_t * ip , xfs_extnum_t idx , xfs_extnum_t count , xfs_bmbt_irec_t * new , int state ) ; 
/*--xfs_iext_insert--*/
void xfs_iext_add ( xfs_ifork_t * ifp , xfs_extnum_t idx , int ext_diff ) ; 
/*--xfs_iext_add--*/
void xfs_iext_add_indirect_multi ( xfs_ifork_t * ifp , int erp_idx , xfs_extnum_t idx , int count ) ; 
/*--xfs_iext_add_indirect_multi--*/
void xfs_iext_remove ( xfs_inode_t * ip , xfs_extnum_t idx , int ext_diff , int state ) ; 
/*--xfs_iext_remove--*/
void xfs_iext_remove_inline ( xfs_ifork_t * ifp , xfs_extnum_t idx , int ext_diff ) ; 
/*--xfs_iext_remove_inline--*/
void xfs_iext_remove_direct ( xfs_ifork_t * ifp , xfs_extnum_t idx , int ext_diff ) ; 
/*--xfs_iext_remove_direct--*/
void xfs_iext_remove_indirect ( xfs_ifork_t * ifp , xfs_extnum_t idx , int count ) ; 
/*--xfs_iext_remove_indirect--*/
void xfs_iext_realloc_direct ( xfs_ifork_t * ifp , int new_size ) ; 
/*--xfs_iext_realloc_direct--*/
void xfs_iext_direct_to_inline ( xfs_ifork_t * ifp , xfs_extnum_t nextents ) ; 
/*--xfs_iext_direct_to_inline--*/
void xfs_iext_inline_to_direct ( xfs_ifork_t * ifp , int new_size ) ; 
/*--xfs_iext_inline_to_direct--*/
void xfs_iext_destroy ( xfs_ifork_t * ifp ) ; 
/*--xfs_iext_destroy--*/
xfs_bmbt_rec_host_t * xfs_iext_bno_to_ext ( xfs_ifork_t * ifp , xfs_fileoff_t bno , xfs_extnum_t * idxp ) ; 
/*--xfs_iext_bno_to_ext--*/
xfs_ext_irec_t * xfs_iext_bno_to_irec ( xfs_ifork_t * ifp , xfs_fileoff_t bno , int * erp_idxp ) ; 
/*--xfs_iext_bno_to_irec--*/
xfs_ext_irec_t * xfs_iext_idx_to_irec ( xfs_ifork_t * ifp , xfs_extnum_t * idxp , int * erp_idxp , int realloc ) ; 
/*--xfs_iext_idx_to_irec--*/
void xfs_iext_irec_init ( xfs_ifork_t * ifp ) ; 
/*--xfs_iext_irec_init--*/
xfs_ext_irec_t * xfs_iext_irec_new ( xfs_ifork_t * ifp , int erp_idx ) ; 
/*--xfs_iext_irec_new--*/
void xfs_iext_irec_remove ( xfs_ifork_t * ifp , int erp_idx ) ; 
/*--xfs_iext_irec_remove--*/
void xfs_iext_irec_compact ( xfs_ifork_t * ifp ) ; 
/*--xfs_iext_irec_compact--*/
void xfs_iext_irec_compact_pages ( xfs_ifork_t * ifp ) ; 
/*--xfs_iext_irec_compact_pages--*/
void xfs_iext_irec_update_extoffs ( xfs_ifork_t * ifp , int erp_idx , int ext_diff ) ; 
/*--xfs_iext_irec_update_extoffs--*/
void xfs_inode_item_init ( xfs_inode_t * ip , xfs_mount_t * mp ) ; 
/*--xfs_inode_item_init--*/
void xfs_inode_item_destroy ( xfs_inode_t * ip ) ; 
/*--xfs_inode_item_destroy--*/
void xfs_iflush_done ( xfs_buf_t * bp , xfs_inode_log_item_t * iip ) ; 
/*--xfs_iflush_done--*/
void xfs_iflush_abort ( xfs_inode_t * ip ) ; 
/*--xfs_iflush_abort--*/
void xfs_istale_done ( xfs_buf_t * bp , xfs_inode_log_item_t * iip ) ; 
/*--xfs_istale_done--*/
int xfs_inode_item_format_convert ( xfs_log_iovec_t * buf , xfs_inode_log_format_t * in_f ) ; 
/*--xfs_inode_item_format_convert--*/
int xfs_iomap ( struct xfs_inode * ip , xfs_off_t offset , ssize_t count , int flags , struct xfs_bmbt_irec * imap , int * nimaps , int * new ) ; 
/*--xfs_iomap--*/
int xfs_iomap_write_unwritten ( xfs_inode_t * ip , xfs_off_t offset , size_t count ) ; 
/*--xfs_iomap_write_unwritten--*/
int xfs_bulkstat_one_int ( struct xfs_mount * mp , xfs_ino_t ino , void * buffer , int ubsize , bulkstat_one_fmt_pf formatter , int * ubused , int * stat ) ; 
/*--xfs_bulkstat_one_int--*/
int xfs_bulkstat_one ( xfs_mount_t * mp , xfs_ino_t ino , void * buffer , int ubsize , int * ubused , int * stat ) ; 
/*--xfs_bulkstat_one--*/
int xfs_bulkstat ( xfs_mount_t * mp , xfs_ino_t * lastinop , int * ubcountp , bulkstat_one_pf formatter , size_t statstruct_size , char * ubuffer , int * done ) ; 
/*--xfs_bulkstat--*/
int xfs_bulkstat_single ( xfs_mount_t * mp , xfs_ino_t * lastinop , char * buffer , int * done ) ; 
/*--xfs_bulkstat_single--*/
int xfs_inumbers_fmt ( void * ubuffer , const xfs_inogrp_t * buffer , long count , long * written ) ; 
/*--xfs_inumbers_fmt--*/
int xfs_inumbers ( xfs_mount_t * mp , xfs_ino_t * lastino , int * count , void * ubuffer , inumbers_fmt_pf formatter ) ; 
/*--xfs_inumbers--*/
int xfs_swapext ( xfs_swapext_t * sxp ) ; 
/*--xfs_swapext--*/
xfs_lsn_t xfs_log_done ( struct xfs_mount * mp , struct xlog_ticket * ticket , struct xlog_in_core * * iclog , uint flags ) ; 
/*--xfs_log_done--*/
int xfs_log_notify ( struct xfs_mount * mp , struct xlog_in_core * iclog , xfs_log_callback_t * cb ) ; 
/*--xfs_log_notify--*/
int xfs_log_release_iclog ( struct xfs_mount * mp , struct xlog_in_core * iclog ) ; 
/*--xfs_log_release_iclog--*/
int xfs_log_reserve ( struct xfs_mount * mp , int unit_bytes , int cnt , struct xlog_ticket * * ticket , __uint8_t client , uint flags , uint t_type ) ; 
/*--xfs_log_reserve--*/
int xfs_log_mount ( xfs_mount_t * mp , xfs_buftarg_t * log_target , xfs_daddr_t blk_offset , int num_bblks ) ; 
/*--xfs_log_mount--*/
int xfs_log_mount_finish ( xfs_mount_t * mp ) ; 
/*--xfs_log_mount_finish--*/
int xfs_log_unmount_write ( xfs_mount_t * mp ) ; 
/*--xfs_log_unmount_write--*/
void xfs_log_unmount ( xfs_mount_t * mp ) ; 
/*--xfs_log_unmount--*/
void xfs_log_item_init ( struct xfs_mount * mp , struct xfs_log_item * item , int type , struct xfs_item_ops * ops ) ; 
/*--xfs_log_item_init--*/
int xfs_log_write ( struct xfs_mount * mp , struct xfs_log_iovec reg [ ] , int nentries , struct xlog_ticket * tic , xfs_lsn_t * start_lsn ) ; 
/*--xfs_log_write--*/
void xfs_log_move_tail ( xfs_mount_t * mp , xfs_lsn_t tail_lsn ) ; 
/*--xfs_log_move_tail--*/
int xfs_log_need_covered ( xfs_mount_t * mp ) ; 
/*--xfs_log_need_covered--*/
xfs_lsn_t xlog_assign_tail_lsn ( xfs_mount_t * mp ) ; 
/*--xlog_assign_tail_lsn--*/
void xlog_iodone ( xfs_buf_t * bp ) ; 
/*--xlog_iodone--*/
void xlog_print_tic_res ( struct xfs_mount * mp , struct xlog_ticket * ticket ) ; 
/*--xlog_print_tic_res--*/
int xlog_write ( struct log * log , struct xfs_log_vec * log_vector , struct xlog_ticket * ticket , xfs_lsn_t * start_lsn , struct xlog_in_core * * commit_iclog , uint flags ) ; 
/*--xlog_write--*/
int _xfs_log_force ( struct xfs_mount * mp , uint flags , int * log_flushed ) ; 
/*--_xfs_log_force--*/
void xfs_log_force ( xfs_mount_t * mp , uint flags ) ; 
/*--xfs_log_force--*/
int _xfs_log_force_lsn ( struct xfs_mount * mp , xfs_lsn_t lsn , uint flags , int * log_flushed ) ; 
/*--_xfs_log_force_lsn--*/
void xfs_log_force_lsn ( xfs_mount_t * mp , xfs_lsn_t lsn , uint flags ) ; 
/*--xfs_log_force_lsn--*/
void xfs_log_ticket_put ( xlog_ticket_t * ticket ) ; 
/*--xfs_log_ticket_put--*/
xlog_ticket_t * xfs_log_ticket_get ( xlog_ticket_t * ticket ) ; 
/*--xfs_log_ticket_get--*/
xlog_tid_t xfs_log_get_trans_ident ( struct xfs_trans * tp ) ; 
/*--xfs_log_get_trans_ident--*/
xlog_ticket_t * xlog_ticket_alloc ( struct log * log , int unit_bytes , int cnt , char client , uint xflags , int alloc_flags ) ; 
/*--xlog_ticket_alloc--*/
int xfs_log_force_umount ( struct xfs_mount * mp , int logerror ) ; 
/*--xfs_log_force_umount--*/
int xlog_cil_init ( struct log * log ) ; 
/*--xlog_cil_init--*/
void xlog_cil_destroy ( struct log * log ) ; 
/*--xlog_cil_destroy--*/
void xlog_cil_init_post_recovery ( struct log * log ) ; 
/*--xlog_cil_init_post_recovery--*/
int xfs_log_commit_cil ( struct xfs_mount * mp , struct xfs_trans * tp , struct xfs_log_vec * log_vector , xfs_lsn_t * commit_lsn , int flags ) ; 
/*--xfs_log_commit_cil--*/
int xlog_cil_push ( struct log * log , int push_now ) ; 
/*--xlog_cil_push--*/
xfs_lsn_t xlog_cil_push_lsn ( struct log * log , xfs_lsn_t push_seq ) ; 
/*--xlog_cil_push_lsn--*/
bool xfs_log_item_in_current_chkpt ( struct xfs_log_item * lip ) ; 
/*--xfs_log_item_in_current_chkpt--*/
int xfs_qm_dqcheck ( xfs_disk_dquot_t * ddq , xfs_dqid_t id , uint type , uint flags , char * str ) ; 
/*--xfs_qm_dqcheck--*/
void xlog_pack_data ( xlog_t * log , xlog_in_core_t * iclog , int roundoff ) ; 
/*--xlog_pack_data--*/
int xlog_recover ( xlog_t * log ) ; 
/*--xlog_recover--*/
int xlog_recover_finish ( xlog_t * log ) ; 
/*--xlog_recover_finish--*/
struct xfs_perag * xfs_perag_get ( struct xfs_mount * mp , xfs_agnumber_t agno ) ; 
/*--xfs_perag_get--*/
void xfs_perag_put ( struct xfs_perag * pag ) ; 
/*--xfs_perag_put--*/
int xfs_sb_validate_fsb_count ( xfs_sb_t * sbp , __uint64_t nblocks ) ; 
/*--xfs_sb_validate_fsb_count--*/
int xfs_initialize_perag ( xfs_mount_t * mp , xfs_agnumber_t agcount , xfs_agnumber_t * maxagi ) ; 
/*--xfs_initialize_perag--*/
void xfs_sb_from_disk ( xfs_sb_t * to , xfs_dsb_t * from ) ; 
/*--xfs_sb_from_disk--*/
void xfs_sb_to_disk ( xfs_dsb_t * to , xfs_sb_t * from , __int64_t fields ) ; 
/*--xfs_sb_to_disk--*/
int xfs_readsb ( xfs_mount_t * mp , int flags ) ; 
/*--xfs_readsb--*/
int xfs_mount_reset_sbqflags ( struct xfs_mount * mp ) ; 
/*--xfs_mount_reset_sbqflags--*/
__uint64_t xfs_default_resblks ( xfs_mount_t * mp ) ; 
/*--xfs_default_resblks--*/
int xfs_mountfs ( xfs_mount_t * mp ) ; 
/*--xfs_mountfs--*/
void xfs_unmountfs ( struct xfs_mount * mp ) ; 
/*--xfs_unmountfs--*/
int xfs_fs_writable ( xfs_mount_t * mp ) ; 
/*--xfs_fs_writable--*/
int xfs_log_sbcount ( xfs_mount_t * mp , uint sync ) ; 
/*--xfs_log_sbcount--*/
int xfs_unmountfs_writesb ( xfs_mount_t * mp ) ; 
/*--xfs_unmountfs_writesb--*/
void xfs_mod_sb ( xfs_trans_t * tp , __int64_t fields ) ; 
/*--xfs_mod_sb--*/
int xfs_mod_incore_sb ( xfs_mount_t * mp , xfs_sb_field_t field , int64_t delta , int rsvd ) ; 
/*--xfs_mod_incore_sb--*/
int xfs_mod_incore_sb_batch ( xfs_mount_t * mp , xfs_mod_sb_t * msb , uint nmsb , int rsvd ) ; 
/*--xfs_mod_incore_sb_batch--*/
xfs_buf_t * xfs_getsb ( xfs_mount_t * mp , int flags ) ; 
/*--xfs_getsb--*/
void xfs_freesb ( xfs_mount_t * mp ) ; 
/*--xfs_freesb--*/
int xfs_mount_log_sb ( xfs_mount_t * mp , __int64_t fields ) ; 
/*--xfs_mount_log_sb--*/
int xfs_dev_is_read_only ( struct xfs_mount * mp , char * message ) ; 
/*--xfs_dev_is_read_only--*/
int xfs_icsb_init_counters ( xfs_mount_t * mp ) ; 
/*--xfs_icsb_init_counters--*/
void xfs_icsb_reinit_counters ( xfs_mount_t * mp ) ; 
/*--xfs_icsb_reinit_counters--*/
void xfs_icsb_destroy_counters ( xfs_mount_t * mp ) ; 
/*--xfs_icsb_destroy_counters--*/
void xfs_icsb_sync_counters_locked ( xfs_mount_t * mp , int flags ) ; 
/*--xfs_icsb_sync_counters_locked--*/
void xfs_icsb_sync_counters ( xfs_mount_t * mp , int flags ) ; 
/*--xfs_icsb_sync_counters--*/
int xfs_mru_cache_init ( void ) ; 
/*--xfs_mru_cache_init--*/
void xfs_mru_cache_uninit ( void ) ; 
/*--xfs_mru_cache_uninit--*/
int xfs_mru_cache_create ( xfs_mru_cache_t * * mrup , unsigned int lifetime_ms , unsigned int grp_count , xfs_mru_cache_free_func_t free_func ) ; 
/*--xfs_mru_cache_create--*/
void xfs_mru_cache_destroy ( xfs_mru_cache_t * mru ) ; 
/*--xfs_mru_cache_destroy--*/
int xfs_mru_cache_insert ( xfs_mru_cache_t * mru , unsigned long key , void * value ) ; 
/*--xfs_mru_cache_insert--*/
void * xfs_mru_cache_remove ( xfs_mru_cache_t * mru , unsigned long key ) ; 
/*--xfs_mru_cache_remove--*/
void xfs_mru_cache_delete ( xfs_mru_cache_t * mru , unsigned long key ) ; 
/*--xfs_mru_cache_delete--*/
void * xfs_mru_cache_lookup ( xfs_mru_cache_t * mru , unsigned long key ) ; 
/*--xfs_mru_cache_lookup--*/
void xfs_mru_cache_done ( xfs_mru_cache_t * mru ) ; 
/*--xfs_mru_cache_done--*/
int xfs_rename ( xfs_inode_t * src_dp , struct xfs_name * src_name , xfs_inode_t * src_ip , xfs_inode_t * target_dp , struct xfs_name * target_name , xfs_inode_t * target_ip ) ; 
/*--xfs_rename--*/
void xfs_trans_init ( struct xfs_mount * mp ) ; 
/*--xfs_trans_init--*/
xfs_trans_t * xfs_trans_alloc ( xfs_mount_t * mp , uint type ) ; 
/*--xfs_trans_alloc--*/
xfs_trans_t * _xfs_trans_alloc ( xfs_mount_t * mp , uint type , uint memflags ) ; 
/*--_xfs_trans_alloc--*/
xfs_trans_t * xfs_trans_dup ( xfs_trans_t * tp ) ; 
/*--xfs_trans_dup--*/
int xfs_trans_reserve ( xfs_trans_t * tp , uint blocks , uint logspace , uint rtextents , uint flags , uint logcount ) ; 
/*--xfs_trans_reserve--*/
void xfs_trans_mod_sb ( xfs_trans_t * tp , uint field , int64_t delta ) ; 
/*--xfs_trans_mod_sb--*/
void xfs_trans_unreserve_and_mod_sb ( xfs_trans_t * tp ) ; 
/*--xfs_trans_unreserve_and_mod_sb--*/
void xfs_trans_item_committed ( struct xfs_log_item * lip , xfs_lsn_t commit_lsn , int aborted ) ; 
/*--xfs_trans_item_committed--*/
int _xfs_trans_commit ( struct xfs_trans * tp , uint flags , int * log_flushed ) ; 
/*--_xfs_trans_commit--*/
void xfs_trans_cancel ( xfs_trans_t * tp , int flags ) ; 
/*--xfs_trans_cancel--*/
int xfs_trans_roll ( struct xfs_trans * * tpp , struct xfs_inode * dp ) ; 
/*--xfs_trans_roll--*/
xfs_lsn_t xfs_trans_ail_tail ( struct xfs_ail * ailp ) ; 
/*--xfs_trans_ail_tail--*/
void xfs_trans_ail_push ( struct xfs_ail * ailp , xfs_lsn_t threshold_lsn ) ; 
/*--xfs_trans_ail_push--*/
struct xfs_log_item * xfs_trans_ail_cursor_next ( struct xfs_ail * ailp , struct xfs_ail_cursor * cur ) ; 
/*--xfs_trans_ail_cursor_next--*/
void xfs_trans_ail_cursor_done ( struct xfs_ail * ailp , struct xfs_ail_cursor * done ) ; 
/*--xfs_trans_ail_cursor_done--*/
xfs_log_item_t * xfs_trans_ail_cursor_first ( struct xfs_ail * ailp , struct xfs_ail_cursor * cur , xfs_lsn_t lsn ) ; 
/*--xfs_trans_ail_cursor_first--*/
long xfsaild_push ( struct xfs_ail * ailp , xfs_lsn_t * last_lsn ) ; 
/*--xfsaild_push--*/
void xfs_trans_unlocked_item ( struct xfs_ail * ailp , xfs_log_item_t * lip ) ; 
/*--xfs_trans_unlocked_item--*/
void xfs_trans_ail_update ( struct xfs_ail * ailp , xfs_log_item_t * lip , xfs_lsn_t lsn ) ; 
/*--xfs_trans_ail_update--*/
void xfs_trans_ail_delete ( struct xfs_ail * ailp , xfs_log_item_t * lip ) ; 
/*--xfs_trans_ail_delete--*/
int xfs_trans_ail_init ( xfs_mount_t * mp ) ; 
/*--xfs_trans_ail_init--*/
void xfs_trans_ail_destroy ( xfs_mount_t * mp ) ; 
/*--xfs_trans_ail_destroy--*/
void xfs_trans_bjoin ( struct xfs_trans * tp , struct xfs_buf * bp ) ; 
/*--xfs_trans_bjoin--*/
xfs_buf_t * xfs_trans_get_buf ( xfs_trans_t * tp , xfs_buftarg_t * target_dev , xfs_daddr_t blkno , int len , uint flags ) ; 
/*--xfs_trans_get_buf--*/
xfs_buf_t * xfs_trans_getsb ( xfs_trans_t * tp , struct xfs_mount * mp , int flags ) ; 
/*--xfs_trans_getsb--*/
int xfs_trans_read_buf ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_buftarg_t * target , xfs_daddr_t blkno , int len , uint flags , xfs_buf_t * * bpp ) ; 
/*--xfs_trans_read_buf--*/
void xfs_trans_brelse ( xfs_trans_t * tp , xfs_buf_t * bp ) ; 
/*--xfs_trans_brelse--*/
void xfs_trans_bhold ( xfs_trans_t * tp , xfs_buf_t * bp ) ; 
/*--xfs_trans_bhold--*/
void xfs_trans_bhold_release ( xfs_trans_t * tp , xfs_buf_t * bp ) ; 
/*--xfs_trans_bhold_release--*/
void xfs_trans_log_buf ( xfs_trans_t * tp , xfs_buf_t * bp , uint first , uint last ) ; 
/*--xfs_trans_log_buf--*/
void xfs_trans_binval ( xfs_trans_t * tp , xfs_buf_t * bp ) ; 
/*--xfs_trans_binval--*/
void xfs_trans_inode_buf ( xfs_trans_t * tp , xfs_buf_t * bp ) ; 
/*--xfs_trans_inode_buf--*/
void xfs_trans_stale_inode_buf ( xfs_trans_t * tp , xfs_buf_t * bp ) ; 
/*--xfs_trans_stale_inode_buf--*/
void xfs_trans_inode_alloc_buf ( xfs_trans_t * tp , xfs_buf_t * bp ) ; 
/*--xfs_trans_inode_alloc_buf--*/
void xfs_trans_dquot_buf ( xfs_trans_t * tp , xfs_buf_t * bp , uint type ) ; 
/*--xfs_trans_dquot_buf--*/
xfs_efi_log_item_t * xfs_trans_get_efi ( xfs_trans_t * tp , uint nextents ) ; 
/*--xfs_trans_get_efi--*/
void xfs_trans_log_efi_extent ( xfs_trans_t * tp , xfs_efi_log_item_t * efip , xfs_fsblock_t start_block , xfs_extlen_t ext_len ) ; 
/*--xfs_trans_log_efi_extent--*/
xfs_efd_log_item_t * xfs_trans_get_efd ( xfs_trans_t * tp , xfs_efi_log_item_t * efip , uint nextents ) ; 
/*--xfs_trans_get_efd--*/
void xfs_trans_log_efd_extent ( xfs_trans_t * tp , xfs_efd_log_item_t * efdp , xfs_fsblock_t start_block , xfs_extlen_t ext_len ) ; 
/*--xfs_trans_log_efd_extent--*/
int xfs_trans_iget ( xfs_mount_t * mp , xfs_trans_t * tp , xfs_ino_t ino , uint flags , uint lock_flags , xfs_inode_t * * ipp ) ; 
/*--xfs_trans_iget--*/
void xfs_trans_ijoin ( xfs_trans_t * tp , xfs_inode_t * ip , uint lock_flags ) ; 
/*--xfs_trans_ijoin--*/
void xfs_trans_ihold ( xfs_trans_t * tp , xfs_inode_t * ip ) ; 
/*--xfs_trans_ihold--*/
void xfs_trans_log_inode ( xfs_trans_t * tp , xfs_inode_t * ip , uint flags ) ; 
/*--xfs_trans_log_inode--*/
xfs_log_item_desc_t * xfs_trans_add_item ( xfs_trans_t * tp , xfs_log_item_t * lip ) ; 
/*--xfs_trans_add_item--*/
void xfs_trans_free_item ( xfs_trans_t * tp , xfs_log_item_desc_t * lidp ) ; 
/*--xfs_trans_free_item--*/
xfs_log_item_desc_t * xfs_trans_find_item ( xfs_trans_t * tp , xfs_log_item_t * lip ) ; 
/*--xfs_trans_find_item--*/
xfs_log_item_desc_t * xfs_trans_first_item ( xfs_trans_t * tp ) ; 
/*--xfs_trans_first_item--*/
xfs_log_item_desc_t * xfs_trans_next_item ( xfs_trans_t * tp , xfs_log_item_desc_t * lidp ) ; 
/*--xfs_trans_next_item--*/
void xfs_trans_free_items ( xfs_trans_t * tp , xfs_lsn_t commit_lsn , int flags ) ; 
/*--xfs_trans_free_items--*/
void xfs_trans_unlock_items ( xfs_trans_t * tp , xfs_lsn_t commit_lsn ) ; 
/*--xfs_trans_unlock_items--*/
int xfs_dir_ialloc ( xfs_trans_t * * tpp , xfs_inode_t * dp , mode_t mode , xfs_nlink_t nlink , xfs_dev_t rdev , cred_t * credp , prid_t prid , int okalloc , xfs_inode_t * * ipp , int * committed ) ; 
/*--xfs_dir_ialloc--*/
int xfs_droplink ( xfs_trans_t * tp , xfs_inode_t * ip ) ; 
/*--xfs_droplink--*/
void xfs_bump_ino_vers2 ( xfs_trans_t * tp , xfs_inode_t * ip ) ; 
/*--xfs_bump_ino_vers2--*/
int xfs_bumplink ( xfs_trans_t * tp , xfs_inode_t * ip ) ; 
/*--xfs_bumplink--*/
int xfs_truncate_file ( xfs_mount_t * mp , xfs_inode_t * ip ) ; 
/*--xfs_truncate_file--*/
int xfs_setattr ( struct xfs_inode * ip , struct iattr * iattr , int flags ) ; 
/*--xfs_setattr--*/
int xfs_readlink ( xfs_inode_t * ip , char * link ) ; 
/*--xfs_readlink--*/
int xfs_release ( xfs_inode_t * ip ) ; 
/*--xfs_release--*/
int xfs_inactive ( xfs_inode_t * ip ) ; 
/*--xfs_inactive--*/
int xfs_lookup ( xfs_inode_t * dp , struct xfs_name * name , xfs_inode_t * * ipp , struct xfs_name * ci_name ) ; 
/*--xfs_lookup--*/
int xfs_create ( xfs_inode_t * dp , struct xfs_name * name , mode_t mode , xfs_dev_t rdev , xfs_inode_t * * ipp , cred_t * credp ) ; 
/*--xfs_create--*/
void xfs_lock_inodes ( xfs_inode_t * * ips , int inodes , uint lock_mode ) ; 
/*--xfs_lock_inodes--*/
void xfs_lock_two_inodes ( xfs_inode_t * ip0 , xfs_inode_t * ip1 , uint lock_mode ) ; 
/*--xfs_lock_two_inodes--*/
int xfs_remove ( xfs_inode_t * dp , struct xfs_name * name , xfs_inode_t * ip ) ; 
/*--xfs_remove--*/
int xfs_link ( xfs_inode_t * tdp , xfs_inode_t * sip , struct xfs_name * target_name ) ; 
/*--xfs_link--*/
int xfs_symlink ( xfs_inode_t * dp , struct xfs_name * link_name , const char * target_path , mode_t mode , xfs_inode_t * * ipp , cred_t * credp ) ; 
/*--xfs_symlink--*/
int xfs_set_dmattrs ( xfs_inode_t * ip , u_int evmask , u_int16_t state ) ; 
/*--xfs_set_dmattrs--*/
int xfs_change_file_space ( xfs_inode_t * ip , int cmd , xfs_flock64_t * bf , xfs_off_t offset , int attr_flags ) ; 
/*--xfs_change_file_space--*/
void xfs_do_force_shutdown ( xfs_mount_t * mp , int flags , char * fname , int lnnum ) ; 
/*--xfs_do_force_shutdown--*/
void xfs_ioerror_alert ( char * func , struct xfs_mount * mp , xfs_buf_t * bp , xfs_daddr_t blkno ) ; 
/*--xfs_ioerror_alert--*/
int xfs_read_buf ( struct xfs_mount * mp , xfs_buftarg_t * target , xfs_daddr_t blkno , int len , uint flags , xfs_buf_t * * bpp ) ; 
/*--xfs_read_buf--*/
xfs_extlen_t xfs_get_extsz_hint ( struct xfs_inode * ip ) ; 
/*--xfs_get_extsz_hint--*/
int xfs_dmops_get ( struct xfs_mount * mp ) ; 
/*--xfs_dmops_get--*/
void xfs_dmops_put ( struct xfs_mount * mp ) ; 
/*--xfs_dmops_put--*/
void * kmem_zalloc_greedy ( size_t * size , size_t minsize , size_t maxsize ) ; 
/*--kmem_zalloc_greedy--*/
void * kmem_alloc ( size_t size , unsigned int flags ) ; 
/*--kmem_alloc--*/
void * kmem_zalloc ( size_t size , unsigned int flags ) ; 
/*--kmem_zalloc--*/
void kmem_free ( const void * ptr ) ; 
/*--kmem_free--*/
void * kmem_realloc ( const void * ptr , size_t newsize , size_t oldsize , unsigned int flags ) ; 
/*--kmem_realloc--*/
void * kmem_zone_alloc ( struct kmem_cache * zone , unsigned int flags ) ; 
/*--kmem_zone_alloc--*/
void * kmem_zone_zalloc ( struct kmem_cache * zone , unsigned int flags ) ; 
/*--kmem_zone_zalloc--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) xfs_ioend_init ( void ) ; 
/*--xfs_ioend_init--*/
void xfs_ioend_wait ( xfs_inode_t * ip ) ; 
/*--xfs_ioend_wait--*/
void xfs_count_page_state ( struct page * page , int * delalloc , int * unmapped , int * unwritten ) ; 
/*--xfs_count_page_state--*/
int xfs_get_blocks ( struct inode * inode , sector_t iblock , struct buffer_head * bh_result , int create ) ; 
/*--xfs_get_blocks--*/
void xfs_buf_free ( xfs_buf_t * bp ) ; 
/*--xfs_buf_free--*/
xfs_buf_t * _xfs_buf_find ( xfs_buftarg_t * btp , xfs_off_t ioff , size_t isize , xfs_buf_flags_t flags , xfs_buf_t * new_bp ) ; 
/*--_xfs_buf_find--*/
xfs_buf_t * xfs_buf_get ( xfs_buftarg_t * target , xfs_off_t ioff , size_t isize , xfs_buf_flags_t flags ) ; 
/*--xfs_buf_get--*/
xfs_buf_t * xfs_buf_read ( xfs_buftarg_t * target , xfs_off_t ioff , size_t isize , xfs_buf_flags_t flags ) ; 
/*--xfs_buf_read--*/
void xfs_buf_readahead ( xfs_buftarg_t * target , xfs_off_t ioff , size_t isize , xfs_buf_flags_t flags ) ; 
/*--xfs_buf_readahead--*/
xfs_buf_t * xfs_buf_get_empty ( size_t len , xfs_buftarg_t * target ) ; 
/*--xfs_buf_get_empty--*/
int xfs_buf_associate_memory ( xfs_buf_t * bp , void * mem , size_t len ) ; 
/*--xfs_buf_associate_memory--*/
xfs_buf_t * xfs_buf_get_noaddr ( size_t len , xfs_buftarg_t * target ) ; 
/*--xfs_buf_get_noaddr--*/
void xfs_buf_hold ( xfs_buf_t * bp ) ; 
/*--xfs_buf_hold--*/
void xfs_buf_rele ( xfs_buf_t * bp ) ; 
/*--xfs_buf_rele--*/
int xfs_buf_cond_lock ( xfs_buf_t * bp ) ; 
/*--xfs_buf_cond_lock--*/
int xfs_buf_lock_value ( xfs_buf_t * bp ) ; 
/*--xfs_buf_lock_value--*/
void xfs_buf_lock ( xfs_buf_t * bp ) ; 
/*--xfs_buf_lock--*/
void xfs_buf_unlock ( xfs_buf_t * bp ) ; 
/*--xfs_buf_unlock--*/
void xfs_buf_pin ( xfs_buf_t * bp ) ; 
/*--xfs_buf_pin--*/
void xfs_buf_unpin ( xfs_buf_t * bp ) ; 
/*--xfs_buf_unpin--*/
int xfs_buf_ispin ( xfs_buf_t * bp ) ; 
/*--xfs_buf_ispin--*/
void xfs_buf_ioend ( xfs_buf_t * bp , int schedule ) ; 
/*--xfs_buf_ioend--*/
void xfs_buf_ioerror ( xfs_buf_t * bp , int error ) ; 
/*--xfs_buf_ioerror--*/
int xfs_bwrite ( struct xfs_mount * mp , struct xfs_buf * bp ) ; 
/*--xfs_bwrite--*/
void xfs_bdwrite ( void * mp , struct xfs_buf * bp ) ; 
/*--xfs_bdwrite--*/
int xfs_bdstrat_cb ( struct xfs_buf * bp ) ; 
/*--xfs_bdstrat_cb--*/
void xfsbdstrat ( struct xfs_mount * mp , struct xfs_buf * bp ) ; 
/*--xfsbdstrat--*/
int xfs_buf_iorequest ( xfs_buf_t * bp ) ; 
/*--xfs_buf_iorequest--*/
int xfs_buf_iowait ( xfs_buf_t * bp ) ; 
/*--xfs_buf_iowait--*/
xfs_caddr_t xfs_buf_offset ( xfs_buf_t * bp , size_t offset ) ; 
/*--xfs_buf_offset--*/
void xfs_buf_iomove ( xfs_buf_t * bp , size_t boff , size_t bsize , void * data , xfs_buf_rw_t mode ) ; 
/*--xfs_buf_iomove--*/
void xfs_wait_buftarg ( xfs_buftarg_t * btp ) ; 
/*--xfs_wait_buftarg--*/
void xfs_free_buftarg ( struct xfs_mount * mp , struct xfs_buftarg * btp ) ; 
/*--xfs_free_buftarg--*/
int xfs_setsize_buftarg ( xfs_buftarg_t * btp , unsigned int blocksize , unsigned int sectorsize ) ; 
/*--xfs_setsize_buftarg--*/
xfs_buftarg_t * xfs_alloc_buftarg ( struct block_device * bdev , int external , const char * fsname ) ; 
/*--xfs_alloc_buftarg--*/
void xfs_buf_delwri_dequeue ( xfs_buf_t * bp ) ; 
/*--xfs_buf_delwri_dequeue--*/
void xfs_buf_delwri_promote ( struct xfs_buf * bp ) ; 
/*--xfs_buf_delwri_promote--*/
void xfs_buf_delwri_sort ( xfs_buftarg_t * target , struct list_head * list ) ; 
/*--xfs_buf_delwri_sort--*/
int xfs_flush_buftarg ( xfs_buftarg_t * target , int wait ) ; 
/*--xfs_flush_buftarg--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) xfs_buf_init ( void ) ; 
/*--xfs_buf_init--*/
void xfs_buf_terminate ( void ) ; 
/*--xfs_buf_terminate--*/
int xfs_zero_eof ( xfs_inode_t * ip , xfs_off_t offset , xfs_fsize_t isize ) ; 
/*--xfs_zero_eof--*/
int fs_noerr ( void ) ; 
/*--fs_noerr--*/
int fs_nosys ( void ) ; 
/*--fs_nosys--*/
void fs_noval ( void ) ; 
/*--fs_noval--*/
void xfs_tosspages ( xfs_inode_t * ip , xfs_off_t first , xfs_off_t last , int fiopt ) ; 
/*--xfs_tosspages--*/
int xfs_flushinval_pages ( xfs_inode_t * ip , xfs_off_t first , xfs_off_t last , int fiopt ) ; 
/*--xfs_flushinval_pages--*/
int xfs_flush_pages ( xfs_inode_t * ip , xfs_off_t first , xfs_off_t last , uint64_t flags , int fiopt ) ; 
/*--xfs_flush_pages--*/
int xfs_wait_on_pages ( xfs_inode_t * ip , xfs_off_t first , xfs_off_t last ) ; 
/*--xfs_wait_on_pages--*/
int xfs_find_handle ( unsigned int cmd , xfs_fsop_handlereq_t * hreq ) ; 
/*--xfs_find_handle--*/
struct dentry * xfs_handle_to_dentry ( struct file * parfilp , void * uhandle , u32 hlen ) ; 
/*--xfs_handle_to_dentry--*/
int xfs_open_by_handle ( struct file * parfilp , xfs_fsop_handlereq_t * hreq ) ; 
/*--xfs_open_by_handle--*/
int xfs_readlink_by_handle ( struct file * parfilp , xfs_fsop_handlereq_t * hreq ) ; 
/*--xfs_readlink_by_handle--*/
int xfs_attrmulti_attr_get ( struct inode * inode , unsigned char * name , unsigned char * ubuf , __uint32_t * len , __uint32_t flags ) ; 
/*--xfs_attrmulti_attr_get--*/
int xfs_attrmulti_attr_set ( struct inode * inode , unsigned char * name , const unsigned char * ubuf , __uint32_t len , __uint32_t flags ) ; 
/*--xfs_attrmulti_attr_set--*/
int xfs_attrmulti_attr_remove ( struct inode * inode , unsigned char * name , __uint32_t flags ) ; 
/*--xfs_attrmulti_attr_remove--*/
int xfs_ioc_space ( struct xfs_inode * ip , struct inode * inode , struct file * filp , int ioflags , unsigned int cmd , xfs_flock64_t * bf ) ; 
/*--xfs_ioc_space--*/
long xfs_file_ioctl ( struct file * filp , unsigned int cmd , unsigned long p ) ; 
/*--xfs_file_ioctl--*/
void xfs_synchronize_times ( xfs_inode_t * ip ) ; 
/*--xfs_synchronize_times--*/
void xfs_mark_inode_dirty_sync ( xfs_inode_t * ip ) ; 
/*--xfs_mark_inode_dirty_sync--*/
void xfs_mark_inode_dirty ( xfs_inode_t * ip ) ; 
/*--xfs_mark_inode_dirty--*/
void xfs_ichgtime ( xfs_inode_t * ip , int flags ) ; 
/*--xfs_ichgtime--*/
void xfs_setup_inode ( struct xfs_inode * ip ) ; 
/*--xfs_setup_inode--*/
__uint64_t xfs_max_file_offset ( unsigned int blockshift ) ; 
/*--xfs_max_file_offset--*/
void xfs_blkdev_issue_flush ( xfs_buftarg_t * buftarg ) ; 
/*--xfs_blkdev_issue_flush--*/
void xfsaild_wakeup ( struct xfs_ail * ailp , xfs_lsn_t threshold_lsn ) ; 
/*--xfsaild_wakeup--*/
int xfsaild_start ( struct xfs_ail * ailp ) ; 
/*--xfsaild_start--*/
void xfsaild_stop ( struct xfs_ail * ailp ) ; 
/*--xfsaild_stop--*/
int xfs_inode_ag_iterator ( struct xfs_mount * mp , int ( * execute ) ( struct xfs_inode * ip , struct xfs_perag * pag , int flags ) , int flags , int tag , int exclusive , int * nr_to_scan ) ; 
/*--xfs_inode_ag_iterator--*/
int xfs_sync_inode_valid ( struct xfs_inode * ip , struct xfs_perag * pag ) ; 
/*--xfs_sync_inode_valid--*/
int xfs_sync_data ( struct xfs_mount * mp , int flags ) ; 
/*--xfs_sync_data--*/
int xfs_sync_attr ( struct xfs_mount * mp , int flags ) ; 
/*--xfs_sync_attr--*/
int xfs_quiesce_data ( struct xfs_mount * mp ) ; 
/*--xfs_quiesce_data--*/
void xfs_quiesce_attr ( struct xfs_mount * mp ) ; 
/*--xfs_quiesce_attr--*/
void xfs_flush_inodes ( xfs_inode_t * ip ) ; 
/*--xfs_flush_inodes--*/
int xfs_syncd_init ( struct xfs_mount * mp ) ; 
/*--xfs_syncd_init--*/
void xfs_syncd_stop ( struct xfs_mount * mp ) ; 
/*--xfs_syncd_stop--*/
void __xfs_inode_set_reclaim_tag ( struct xfs_perag * pag , struct xfs_inode * ip ) ; 
/*--__xfs_inode_set_reclaim_tag--*/
void xfs_inode_set_reclaim_tag ( xfs_inode_t * ip ) ; 
/*--xfs_inode_set_reclaim_tag--*/
void __xfs_inode_clear_reclaim ( xfs_perag_t * pag , xfs_inode_t * ip ) ; 
/*--__xfs_inode_clear_reclaim--*/
void __xfs_inode_clear_reclaim_tag ( xfs_mount_t * mp , xfs_perag_t * pag , xfs_inode_t * ip ) ; 
/*--__xfs_inode_clear_reclaim_tag--*/
int xfs_reclaim_inodes ( xfs_mount_t * mp , int mode ) ; 
/*--xfs_reclaim_inodes--*/
void xfs_inode_shrinker_register ( struct xfs_mount * mp ) ; 
/*--xfs_inode_shrinker_register--*/
void xfs_inode_shrinker_unregister ( struct xfs_mount * mp ) ; 
/*--xfs_inode_shrinker_unregister--*/
ssize_t xfs_vn_listxattr ( struct dentry * dentry , char * data , size_t size ) ; 
/*--xfs_vn_listxattr--*/
void cmn_err ( register int level , char * fmt , ... ) ; 
/*--cmn_err--*/
void xfs_fs_vcmn_err ( int level , struct xfs_mount * mp , char * fmt , va_list ap ) ; 
/*--xfs_fs_vcmn_err--*/
void assfail ( char * expr , char * file , int line ) ; 
/*--assfail--*/
void xfs_hex_dump ( void * p , int length ) ; 
/*--xfs_hex_dump--*/
void uuid_getnodeuniq ( uuid_t * uuid , int fsid [ 2 ] ) ; 
/*--uuid_getnodeuniq--*/
int uuid_is_nil ( uuid_t * uuid ) ; 
/*--uuid_is_nil--*/
int uuid_equal ( uuid_t * uuid1 , uuid_t * uuid2 ) ; 
/*--uuid_equal--*/
void gf128mul_x_ble ( be128 * r , const be128 * x ) ; 
/*--gf128mul_x_ble--*/
void gf128mul_lle ( be128 * r , const be128 * b ) ; 
/*--gf128mul_lle--*/
void gf128mul_bbe ( be128 * r , const be128 * b ) ; 
/*--gf128mul_bbe--*/
struct gf128mul_64k * gf128mul_init_64k_lle ( const be128 * g ) ; 
/*--gf128mul_init_64k_lle--*/
struct gf128mul_64k * gf128mul_init_64k_bbe ( const be128 * g ) ; 
/*--gf128mul_init_64k_bbe--*/
void gf128mul_free_64k ( struct gf128mul_64k * t ) ; 
/*--gf128mul_free_64k--*/
void gf128mul_64k_lle ( be128 * a , struct gf128mul_64k * t ) ; 
/*--gf128mul_64k_lle--*/
void gf128mul_64k_bbe ( be128 * a , struct gf128mul_64k * t ) ; 
/*--gf128mul_64k_bbe--*/
struct gf128mul_4k * gf128mul_init_4k_lle ( const be128 * g ) ; 
/*--gf128mul_init_4k_lle--*/
struct gf128mul_4k * gf128mul_init_4k_bbe ( const be128 * g ) ; 
/*--gf128mul_init_4k_bbe--*/
void gf128mul_4k_lle ( be128 * a , struct gf128mul_4k * t ) ; 
/*--gf128mul_4k_lle--*/
void gf128mul_4k_bbe ( be128 * a , struct gf128mul_4k * t ) ; 
/*--gf128mul_4k_bbe--*/
struct cryptd_ablkcipher * cryptd_alloc_ablkcipher ( const char * alg_name , u32 type , u32 mask ) ; 
/*--cryptd_alloc_ablkcipher--*/
struct crypto_blkcipher * cryptd_ablkcipher_child ( struct cryptd_ablkcipher * tfm ) ; 
/*--cryptd_ablkcipher_child--*/
void cryptd_free_ablkcipher ( struct cryptd_ablkcipher * tfm ) ; 
/*--cryptd_free_ablkcipher--*/
struct cryptd_ahash * cryptd_alloc_ahash ( const char * alg_name , u32 type , u32 mask ) ; 
/*--cryptd_alloc_ahash--*/
struct crypto_shash * cryptd_ahash_child ( struct cryptd_ahash * tfm ) ; 
/*--cryptd_ahash_child--*/
struct shash_desc * cryptd_shash_desc ( struct ahash_request * req ) ; 
/*--cryptd_shash_desc--*/
void cryptd_free_ahash ( struct cryptd_ahash * tfm ) ; 
/*--cryptd_free_ahash--*/
unsigned long des_ekey ( u32 * pe , const u8 * k ) ; 
/*--des_ekey--*/
int twofish_setkey ( struct crypto_tfm * tfm , const u8 * key , unsigned int key_len ) ; 
/*--twofish_setkey--*/
int crypto_aes_expand_key ( struct crypto_aes_ctx * ctx , const u8 * in_key , unsigned int key_len ) ; 
/*--crypto_aes_expand_key--*/
int crypto_aes_set_key ( struct crypto_tfm * tfm , const u8 * in_key , unsigned int key_len ) ; 
/*--crypto_aes_set_key--*/
void xor_blocks ( unsigned int src_count , unsigned int bytes , void * dest , void * * srcs ) ; 
/*--xor_blocks--*/
; struct dma_chan * __async_tx_find_channel ( struct async_submit_ctl * submit , enum dma_transaction_type tx_type ) ; 
/*--__async_tx_find_channel--*/
void async_tx_submit ( struct dma_chan * chan , struct dma_async_tx_descriptor * tx , struct async_submit_ctl * submit ) ; 
/*--async_tx_submit--*/
struct dma_async_tx_descriptor * async_trigger_callback ( struct async_submit_ctl * submit ) ; 
/*--async_trigger_callback--*/
void async_tx_quiesce ( struct dma_async_tx_descriptor * * tx ) ; 
/*--async_tx_quiesce--*/
struct dma_async_tx_descriptor * async_memcpy ( struct page * dest , struct page * src , unsigned int dest_offset , unsigned int src_offset , size_t len , struct async_submit_ctl * submit ) ; 
/*--async_memcpy--*/
struct dma_async_tx_descriptor * async_xor ( struct page * dest , struct page * * src_list , unsigned int offset , int src_cnt , size_t len , struct async_submit_ctl * submit ) ; 
/*--async_xor--*/
struct dma_async_tx_descriptor * async_xor_val ( struct page * dest , struct page * * src_list , unsigned int offset , int src_cnt , size_t len , enum sum_check_flags * result , struct async_submit_ctl * submit ) ; 
/*--async_xor_val--*/
struct dma_async_tx_descriptor * async_gen_syndrome ( struct page * * blocks , unsigned int offset , int disks , size_t len , struct async_submit_ctl * submit ) ; 
/*--async_gen_syndrome--*/
struct dma_async_tx_descriptor * async_syndrome_val ( struct page * * blocks , unsigned int offset , int disks , size_t len , enum sum_check_flags * pqres , struct page * spare , struct async_submit_ctl * submit ) ; 
/*--async_syndrome_val--*/
struct dma_async_tx_descriptor * async_raid6_2data_recov ( int disks , size_t bytes , int faila , int failb , struct page * * blocks , struct async_submit_ctl * submit ) ; 
/*--async_raid6_2data_recov--*/
struct dma_async_tx_descriptor * async_raid6_datap_recov ( int disks , size_t bytes , int faila , struct page * * blocks , struct async_submit_ctl * submit ) ; 
/*--async_raid6_datap_recov--*/
int acpi_video_get_edid ( struct acpi_device * device , int type , int device_id , void * * edid ) ; 
/*--acpi_video_get_edid--*/
int acpi_video_register ( void ) ; 
/*--acpi_video_register--*/
void acpi_video_unregister ( void ) ; 
/*--acpi_video_unregister--*/
void ahci_save_initial_config ( struct device * dev , struct ahci_host_priv * hpriv , unsigned int force_port_map , unsigned int mask_port_map ) ; 
/*--ahci_save_initial_config--*/
void ahci_start_engine ( struct ata_port * ap ) ; 
/*--ahci_start_engine--*/
int ahci_stop_engine ( struct ata_port * ap ) ; 
/*--ahci_stop_engine--*/
int ahci_reset_controller ( struct ata_host * host ) ; 
/*--ahci_reset_controller--*/
int ahci_reset_em ( struct ata_host * host ) ; 
/*--ahci_reset_em--*/
void ahci_init_controller ( struct ata_host * host ) ; 
/*--ahci_init_controller--*/
int ahci_kick_engine ( struct ata_port * ap ) ; 
/*--ahci_kick_engine--*/
int ahci_do_softreset ( struct ata_link * link , unsigned int * class , int pmp , unsigned long deadline , int ( * check_ready ) ( struct ata_link * link ) ) ; 
/*--ahci_do_softreset--*/
int ahci_check_ready ( struct ata_link * link ) ; 
/*--ahci_check_ready--*/
irqreturn_t ahci_interrupt ( int irq , void * dev_instance ) ; 
/*--ahci_interrupt--*/
void ahci_print_info ( struct ata_host * host , const char * scc_s ) ; 
/*--ahci_print_info--*/
void ahci_set_em_messages ( struct ahci_host_priv * hpriv , struct ata_port_info * pi ) ; 
/*--ahci_set_em_messages--*/
void sil680_sff_exec_command ( struct ata_port * ap , const struct ata_taskfile * tf ) ; 
/*--sil680_sff_exec_command--*/
int uPD98402_init ( struct atm_dev * dev ) ; 
/*--uPD98402_init--*/
int suni_init ( struct atm_dev * dev ) ; 
/*--suni_init--*/
void solos_bh ( unsigned long card_arg ) ; 
/*--solos_bh--*/
void ks0108_writedata ( unsigned char byte ) ; 
/*--ks0108_writedata--*/
void ks0108_writecontrol ( unsigned char byte ) ; 
/*--ks0108_writecontrol--*/
void ks0108_displaystate ( unsigned char state ) ; 
/*--ks0108_displaystate--*/
void ks0108_startline ( unsigned char startline ) ; 
/*--ks0108_startline--*/
void ks0108_address ( unsigned char address ) ; 
/*--ks0108_address--*/
void ks0108_page ( unsigned char page ) ; 
/*--ks0108_page--*/
unsigned char ks0108_isinited ( void ) ; 
/*--ks0108_isinited--*/
unsigned int cfag12864b_getrate ( void ) ; 
/*--cfag12864b_getrate--*/
unsigned char cfag12864b_enable ( void ) ; 
/*--cfag12864b_enable--*/
void cfag12864b_disable ( void ) ; 
/*--cfag12864b_disable--*/
unsigned char cfag12864b_isenabled ( void ) ; 
/*--cfag12864b_isenabled--*/
unsigned char cfag12864b_isinited ( void ) ; 
/*--cfag12864b_isinited--*/
irqreturn_t floppy_interrupt ( int irq , void * dev_id ) ; 
/*--floppy_interrupt--*/
void aoedisk_rm_sysfs ( struct aoedev * d ) ; 
/*--aoedisk_rm_sysfs--*/
void aoeblk_gdalloc ( void * vp ) ; 
/*--aoeblk_gdalloc--*/
void aoeblk_exit ( void ) ; 
/*--aoeblk_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) aoeblk_init ( void ) ; 
/*--aoeblk_init--*/
void aoechr_error ( char * msg ) ; 
/*--aoechr_error--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) aoechr_init ( void ) ; 
/*--aoechr_init--*/
void aoechr_exit ( void ) ; 
/*--aoechr_exit--*/
void aoecmd_work ( struct aoedev * d ) ; 
/*--aoecmd_work--*/
void aoecmd_sleepwork ( struct work_struct * work ) ; 
/*--aoecmd_sleepwork--*/
void aoecmd_ata_rsp ( struct sk_buff * skb ) ; 
/*--aoecmd_ata_rsp--*/
void aoecmd_cfg ( ushort aoemajor , unsigned char aoeminor ) ; 
/*--aoecmd_cfg--*/
struct sk_buff * aoecmd_ata_id ( struct aoedev * d ) ; 
/*--aoecmd_ata_id--*/
void aoecmd_cfg_rsp ( struct sk_buff * skb ) ; 
/*--aoecmd_cfg_rsp--*/
void aoecmd_cleanslate ( struct aoedev * d ) ; 
/*--aoecmd_cleanslate--*/
struct aoedev * aoedev_by_aoeaddr ( int maj , int min ) ; 
/*--aoedev_by_aoeaddr--*/
void aoedev_downdev ( struct aoedev * d ) ; 
/*--aoedev_downdev--*/
int aoedev_flush ( const char * str , size_t cnt ) ; 
/*--aoedev_flush--*/
struct aoedev * aoedev_by_sysminor_m ( ulong sysminor ) ; 
/*--aoedev_by_sysminor_m--*/
void aoedev_exit ( void ) ; 
/*--aoedev_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) aoedev_init ( void ) ; 
/*--aoedev_init--*/
int is_aoe_netif ( struct net_device * ifp ) ; 
/*--is_aoe_netif--*/
int set_aoe_iflist ( const char * user_str , size_t size ) ; 
/*--set_aoe_iflist--*/
void aoenet_xmit ( struct sk_buff_head * queue ) ; 
/*--aoenet_xmit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) aoenet_init ( void ) ; 
/*--aoenet_init--*/
void aoenet_exit ( void ) ; 
/*--aoenet_exit--*/
void pi_write_regr ( PIA * pi , int cont , int regr , int val ) ; 
/*--pi_write_regr--*/
int pi_read_regr ( PIA * pi , int cont , int regr ) ; 
/*--pi_read_regr--*/
void pi_write_block ( PIA * pi , char * buf , int count ) ; 
/*--pi_write_block--*/
void pi_read_block ( PIA * pi , char * buf , int count ) ; 
/*--pi_read_block--*/
int pi_schedule_claimed ( PIA * pi , void ( * cont ) ( void ) ) ; 
/*--pi_schedule_claimed--*/
void pi_do_claimed ( PIA * pi , void ( * cont ) ( void ) ) ; 
/*--pi_do_claimed--*/
void pi_connect ( PIA * pi ) ; 
/*--pi_connect--*/
void pi_disconnect ( PIA * pi ) ; 
/*--pi_disconnect--*/
void pi_release ( PIA * pi ) ; 
/*--pi_release--*/
int paride_register ( PIP * pr ) ; 
/*--paride_register--*/
void paride_unregister ( PIP * pr ) ; 
/*--paride_unregister--*/
int pi_init ( PIA * pi , int autoprobe , int port , int mode , int unit , int protocol , int delay , char * scratch , int devtype , int verbose , char * device ) ; 
/*--pi_init--*/
void btmrvl_interrupt ( struct btmrvl_private * priv ) ; 
/*--btmrvl_interrupt--*/
void btmrvl_check_evtpkt ( struct btmrvl_private * priv , struct sk_buff * skb ) ; 
/*--btmrvl_check_evtpkt--*/
int btmrvl_process_event ( struct btmrvl_private * priv , struct sk_buff * skb ) ; 
/*--btmrvl_process_event--*/
int btmrvl_send_module_cfg_cmd ( struct btmrvl_private * priv , int subcmd ) ; 
/*--btmrvl_send_module_cfg_cmd--*/
int btmrvl_enable_ps ( struct btmrvl_private * priv ) ; 
/*--btmrvl_enable_ps--*/
int btmrvl_prepare_command ( struct btmrvl_private * priv ) ; 
/*--btmrvl_prepare_command--*/
int btmrvl_register_hdev ( struct btmrvl_private * priv ) ; 
/*--btmrvl_register_hdev--*/
struct btmrvl_private * btmrvl_add_card ( void * card ) ; 
/*--btmrvl_add_card--*/
int btmrvl_remove_card ( struct btmrvl_private * priv ) ; 
/*--btmrvl_remove_card--*/
void btmrvl_debugfs_init ( struct hci_dev * hdev ) ; 
/*--btmrvl_debugfs_init--*/
void btmrvl_debugfs_remove ( struct hci_dev * hdev ) ; 
/*--btmrvl_debugfs_remove--*/
int hci_uart_register_proto ( struct hci_uart_proto * p ) ; 
/*--hci_uart_register_proto--*/
int hci_uart_unregister_proto ( struct hci_uart_proto * p ) ; 
/*--hci_uart_unregister_proto--*/
int hci_uart_tx_wakeup ( struct hci_uart * hu ) ; 
/*--hci_uart_tx_wakeup--*/
int h4_init ( void ) ; 
/*--h4_init--*/
int h4_deinit ( void ) ; 
/*--h4_deinit--*/
int bcsp_init ( void ) ; 
/*--bcsp_init--*/
int bcsp_deinit ( void ) ; 
/*--bcsp_deinit--*/
int ll_init ( void ) ; 
/*--ll_init--*/
int ll_deinit ( void ) ; 
/*--ll_deinit--*/
int ipmi_smi_watcher_register ( struct ipmi_smi_watcher * watcher ) ; 
/*--ipmi_smi_watcher_register--*/
int ipmi_smi_watcher_unregister ( struct ipmi_smi_watcher * watcher ) ; 
/*--ipmi_smi_watcher_unregister--*/
int ipmi_validate_addr ( struct ipmi_addr * addr , int len ) ; 
/*--ipmi_validate_addr--*/
unsigned int ipmi_addr_length ( int addr_type ) ; 
/*--ipmi_addr_length--*/
int ipmi_create_user ( unsigned int if_num , struct ipmi_user_hndl * handler , void * handler_data , ipmi_user_t * user ) ; 
/*--ipmi_create_user--*/
int ipmi_destroy_user ( ipmi_user_t user ) ; 
/*--ipmi_destroy_user--*/
void ipmi_get_version ( ipmi_user_t user , unsigned char * major , unsigned char * minor ) ; 
/*--ipmi_get_version--*/
int ipmi_set_my_address ( ipmi_user_t user , unsigned int channel , unsigned char address ) ; 
/*--ipmi_set_my_address--*/
int ipmi_get_my_address ( ipmi_user_t user , unsigned int channel , unsigned char * address ) ; 
/*--ipmi_get_my_address--*/
int ipmi_set_my_LUN ( ipmi_user_t user , unsigned int channel , unsigned char LUN ) ; 
/*--ipmi_set_my_LUN--*/
int ipmi_get_my_LUN ( ipmi_user_t user , unsigned int channel , unsigned char * address ) ; 
/*--ipmi_get_my_LUN--*/
int ipmi_get_maintenance_mode ( ipmi_user_t user ) ; 
/*--ipmi_get_maintenance_mode--*/
int ipmi_set_maintenance_mode ( ipmi_user_t user , int mode ) ; 
/*--ipmi_set_maintenance_mode--*/
int ipmi_set_gets_events ( ipmi_user_t user , int val ) ; 
/*--ipmi_set_gets_events--*/
int ipmi_register_for_cmd ( ipmi_user_t user , unsigned char netfn , unsigned char cmd , unsigned int chans ) ; 
/*--ipmi_register_for_cmd--*/
int ipmi_unregister_for_cmd ( ipmi_user_t user , unsigned char netfn , unsigned char cmd , unsigned int chans ) ; 
/*--ipmi_unregister_for_cmd--*/
int ipmi_request_settime ( ipmi_user_t user , struct ipmi_addr * addr , long msgid , struct kernel_ipmi_msg * msg , void * user_msg_data , int priority , int retries , unsigned int retry_time_ms ) ; 
/*--ipmi_request_settime--*/
int ipmi_request_supply_msgs ( ipmi_user_t user , struct ipmi_addr * addr , long msgid , struct kernel_ipmi_msg * msg , void * user_msg_data , void * supplied_smi , struct ipmi_recv_msg * supplied_recv , int priority ) ; 
/*--ipmi_request_supply_msgs--*/
int ipmi_smi_add_proc_entry ( ipmi_smi_t smi , char * name , read_proc_t * read_proc , void * data ) ; 
/*--ipmi_smi_add_proc_entry--*/
void ipmi_poll_interface ( ipmi_user_t user ) ; 
/*--ipmi_poll_interface--*/
int ipmi_register_smi ( struct ipmi_smi_handlers * handlers , void * send_info , struct ipmi_device_id * device_id , struct device * si_dev , const char * sysfs_name , unsigned char slave_addr ) ; 
/*--ipmi_register_smi--*/
int ipmi_unregister_smi ( ipmi_smi_t intf ) ; 
/*--ipmi_unregister_smi--*/
void ipmi_smi_msg_received ( ipmi_smi_t intf , struct ipmi_smi_msg * msg ) ; 
/*--ipmi_smi_msg_received--*/
void ipmi_smi_watchdog_pretimeout ( ipmi_smi_t intf ) ; 
/*--ipmi_smi_watchdog_pretimeout--*/
struct ipmi_smi_msg * ipmi_alloc_smi_msg ( void ) ; 
/*--ipmi_alloc_smi_msg--*/
void ipmi_free_recv_msg ( struct ipmi_recv_msg * msg ) ; 
/*--ipmi_free_recv_msg--*/
int smapi_query_DSP_cfg ( SMAPI_DSP_SETTINGS * pSettings ) ; 
/*--smapi_query_DSP_cfg--*/
int smapi_set_DSP_cfg ( void ) ; 
/*--smapi_set_DSP_cfg--*/
int smapi_set_DSP_power_state ( int bOn ) ; 
/*--smapi_set_DSP_power_state--*/
int smapi_init ( void ) ; 
/*--smapi_init--*/
int tp3780I_InitializeBoardData ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_InitializeBoardData--*/
int tp3780I_Cleanup ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_Cleanup--*/
int tp3780I_CalcResources ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_CalcResources--*/
int tp3780I_ClaimResources ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_ClaimResources--*/
int tp3780I_ReleaseResources ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_ReleaseResources--*/
int tp3780I_EnableDSP ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_EnableDSP--*/
int tp3780I_DisableDSP ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_DisableDSP--*/
int tp3780I_ResetDSP ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_ResetDSP--*/
int tp3780I_StartDSP ( THINKPAD_BD_DATA * pBDData ) ; 
/*--tp3780I_StartDSP--*/
int tp3780I_QueryAbilities ( THINKPAD_BD_DATA * pBDData , MW_ABILITIES * pAbilities ) ; 
/*--tp3780I_QueryAbilities--*/
int tp3780I_ReadWriteDspDStore ( THINKPAD_BD_DATA * pBDData , unsigned int uOpcode , void * pvBuffer , unsigned int uCount , unsigned long ulDSPAddr ) ; 
/*--tp3780I_ReadWriteDspDStore--*/
int tp3780I_ReadWriteDspIStore ( THINKPAD_BD_DATA * pBDData , unsigned int uOpcode , void * pvBuffer , unsigned int uCount , unsigned long ulDSPAddr ) ; 
/*--tp3780I_ReadWriteDspIStore--*/
unsigned short dsp3780I_ReadMsaCfg ( unsigned short usDspBaseIO , unsigned long ulMsaAddr ) ; 
/*--dsp3780I_ReadMsaCfg--*/
void dsp3780I_WriteMsaCfg ( unsigned short usDspBaseIO , unsigned long ulMsaAddr , unsigned short usValue ) ; 
/*--dsp3780I_WriteMsaCfg--*/
int dsp3780I_EnableDSP ( DSP_3780I_CONFIG_SETTINGS * pSettings , unsigned short * pIrqMap , unsigned short * pDmaMap ) ; 
/*--dsp3780I_EnableDSP--*/
int dsp3780I_DisableDSP ( DSP_3780I_CONFIG_SETTINGS * pSettings ) ; 
/*--dsp3780I_DisableDSP--*/
int dsp3780I_Reset ( DSP_3780I_CONFIG_SETTINGS * pSettings ) ; 
/*--dsp3780I_Reset--*/
int dsp3780I_Run ( DSP_3780I_CONFIG_SETTINGS * pSettings ) ; 
/*--dsp3780I_Run--*/
int dsp3780I_ReadDStore ( unsigned short usDspBaseIO , void * pvBuffer , unsigned uCount , unsigned long ulDSPAddr ) ; 
/*--dsp3780I_ReadDStore--*/
int dsp3780I_ReadAndClearDStore ( unsigned short usDspBaseIO , void * pvBuffer , unsigned uCount , unsigned long ulDSPAddr ) ; 
/*--dsp3780I_ReadAndClearDStore--*/
int dsp3780I_WriteDStore ( unsigned short usDspBaseIO , void * pvBuffer , unsigned uCount , unsigned long ulDSPAddr ) ; 
/*--dsp3780I_WriteDStore--*/
int dsp3780I_ReadIStore ( unsigned short usDspBaseIO , void * pvBuffer , unsigned uCount , unsigned long ulDSPAddr ) ; 
/*--dsp3780I_ReadIStore--*/
int dsp3780I_WriteIStore ( unsigned short usDspBaseIO , void * pvBuffer , unsigned uCount , unsigned long ulDSPAddr ) ; 
/*--dsp3780I_WriteIStore--*/
int dsp3780I_GetIPCSource ( unsigned short usDspBaseIO , unsigned short * pusIPCSource ) ; 
/*--dsp3780I_GetIPCSource--*/
irqreturn_t ipwireless_interrupt ( int irq , void * dev_id ) ; 
/*--ipwireless_interrupt--*/
int ipwireless_send_packet ( struct ipw_hardware * hw , unsigned int channel_idx , const unsigned char * data , unsigned int length , void ( * callback ) ( void * cb , unsigned int length ) , void * callback_data ) ; 
/*--ipwireless_send_packet--*/
int ipwireless_set_DTR ( struct ipw_hardware * hw , unsigned int channel_idx , int state ) ; 
/*--ipwireless_set_DTR--*/
int ipwireless_set_RTS ( struct ipw_hardware * hw , unsigned int channel_idx , int state ) ; 
/*--ipwireless_set_RTS--*/
struct ipw_hardware * ipwireless_hardware_create ( void ) ; 
/*--ipwireless_hardware_create--*/
void ipwireless_init_hardware_v1 ( struct ipw_hardware * hw , unsigned int base_port , void * attr_memory , void * common_memory , int is_v2_card , void ( * reboot_callback ) ( void * data ) , void * reboot_callback_data ) ; 
/*--ipwireless_init_hardware_v1--*/
void ipwireless_init_hardware_v2_v3 ( struct ipw_hardware * hw ) ; 
/*--ipwireless_init_hardware_v2_v3--*/
void ipwireless_stop_interrupts ( struct ipw_hardware * hw ) ; 
/*--ipwireless_stop_interrupts--*/
void ipwireless_hardware_free ( struct ipw_hardware * hw ) ; 
/*--ipwireless_hardware_free--*/
void ipwireless_associate_network ( struct ipw_hardware * hw , struct ipw_network * network ) ; 
/*--ipwireless_associate_network--*/
void ipwireless_network_notify_control_line_change ( struct ipw_network * network , unsigned int channel_idx , unsigned int control_lines , unsigned int changed_mask ) ; 
/*--ipwireless_network_notify_control_line_change--*/
void ipwireless_network_packet_received ( struct ipw_network * network , unsigned int channel_idx , unsigned char * data , unsigned int length ) ; 
/*--ipwireless_network_packet_received--*/
struct ipw_network * ipwireless_network_create ( struct ipw_hardware * hw ) ; 
/*--ipwireless_network_create--*/
void ipwireless_network_free ( struct ipw_network * network ) ; 
/*--ipwireless_network_free--*/
void ipwireless_associate_network_tty ( struct ipw_network * network , unsigned int channel_idx , struct ipw_tty * tty ) ; 
/*--ipwireless_associate_network_tty--*/
void ipwireless_disassociate_network_ttys ( struct ipw_network * network , unsigned int channel_idx ) ; 
/*--ipwireless_disassociate_network_ttys--*/
void ipwireless_ppp_open ( struct ipw_network * network ) ; 
/*--ipwireless_ppp_open--*/
void ipwireless_ppp_close ( struct ipw_network * network ) ; 
/*--ipwireless_ppp_close--*/
int ipwireless_ppp_channel_index ( struct ipw_network * network ) ; 
/*--ipwireless_ppp_channel_index--*/
int ipwireless_ppp_unit_number ( struct ipw_network * network ) ; 
/*--ipwireless_ppp_unit_number--*/
int ipwireless_ppp_mru ( const struct ipw_network * network ) ; 
/*--ipwireless_ppp_mru--*/
void ipwireless_tty_received ( struct ipw_tty * tty , unsigned char * data , unsigned int length ) ; 
/*--ipwireless_tty_received--*/
struct ipw_tty * ipwireless_tty_create ( struct ipw_hardware * hardware , struct ipw_network * network ) ; 
/*--ipwireless_tty_create--*/
void ipwireless_tty_free ( struct ipw_tty * tty ) ; 
/*--ipwireless_tty_free--*/
int ipwireless_tty_init ( void ) ; 
/*--ipwireless_tty_init--*/
void ipwireless_tty_release ( void ) ; 
/*--ipwireless_tty_release--*/
int ipwireless_tty_is_modem ( struct ipw_tty * tty ) ; 
/*--ipwireless_tty_is_modem--*/
void ipwireless_tty_notify_control_line_change ( struct ipw_tty * tty , unsigned int channel_idx , unsigned int control_lines , unsigned int changed_mask ) ; 
/*--ipwireless_tty_notify_control_line_change--*/
unsigned long tpm_calc_ordinal_duration ( struct tpm_chip * chip , u32 ordinal ) ; 
/*--tpm_calc_ordinal_duration--*/
ssize_t tpm_getcap ( struct device * dev , __be32 subcap_id , cap_t * cap , const char * desc ) ; 
/*--tpm_getcap--*/
void tpm_gen_interrupt ( struct tpm_chip * chip ) ; 
/*--tpm_gen_interrupt--*/
void tpm_get_timeouts ( struct tpm_chip * chip ) ; 
/*--tpm_get_timeouts--*/
void tpm_continue_selftest ( struct tpm_chip * chip ) ; 
/*--tpm_continue_selftest--*/
ssize_t tpm_show_enabled ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--tpm_show_enabled--*/
ssize_t tpm_show_active ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--tpm_show_active--*/
ssize_t tpm_show_owned ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--tpm_show_owned--*/
ssize_t tpm_show_temp_deactivated ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--tpm_show_temp_deactivated--*/
int __tpm_pcr_read ( struct tpm_chip * chip , int pcr_idx , u8 * res_buf ) ; 
/*--__tpm_pcr_read--*/
int tpm_pcr_read ( u32 chip_num , int pcr_idx , u8 * res_buf ) ; 
/*--tpm_pcr_read--*/
int tpm_pcr_extend ( u32 chip_num , int pcr_idx , const u8 * hash ) ; 
/*--tpm_pcr_extend--*/
ssize_t tpm_show_pcrs ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--tpm_show_pcrs--*/
ssize_t tpm_show_pubek ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--tpm_show_pubek--*/
ssize_t tpm_show_caps ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--tpm_show_caps--*/
ssize_t tpm_show_caps_1_2 ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--tpm_show_caps_1_2--*/
ssize_t tpm_store_cancel ( struct device * dev , struct device_attribute * attr , const char * buf , size_t count ) ; 
/*--tpm_store_cancel--*/
int tpm_open ( struct inode * inode , struct file * file ) ; 
/*--tpm_open--*/
int tpm_release ( struct inode * inode , struct file * file ) ; 
/*--tpm_release--*/
ssize_t tpm_write ( struct file * file , const char * buf , size_t size , loff_t * off ) ; 
/*--tpm_write--*/
ssize_t tpm_read ( struct file * file , char * buf , size_t size , loff_t * off ) ; 
/*--tpm_read--*/
void tpm_remove_hardware ( struct device * dev ) ; 
/*--tpm_remove_hardware--*/
int tpm_pm_suspend ( struct device * dev , pm_message_t pm_state ) ; 
/*--tpm_pm_suspend--*/
int tpm_pm_resume ( struct device * dev ) ; 
/*--tpm_pm_resume--*/
void tpm_dev_vendor_release ( struct tpm_chip * chip ) ; 
/*--tpm_dev_vendor_release--*/
void tpm_dev_release ( struct device * dev ) ; 
/*--tpm_dev_release--*/
struct tpm_chip * tpm_register_hardware ( struct device * dev , const struct tpm_vendor_specific * entry ) ; 
/*--tpm_register_hardware--*/
struct dentry * * tpm_bios_log_setup ( char * name ) ; 
/*--tpm_bios_log_setup--*/
void tpm_bios_log_teardown ( struct dentry * * lst ) ; 
/*--tpm_bios_log_teardown--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) virtio_cons_early_init ( int ( * put_chars ) ( u32 , const char * , int ) ) ; 
/*--virtio_cons_early_init--*/
int init_port_console ( struct port * port ) ; 
/*--init_port_console--*/
unsigned char __nvram_read_byte ( int i ) ; 
/*--__nvram_read_byte--*/
unsigned char nvram_read_byte ( int i ) ; 
/*--nvram_read_byte--*/
void __nvram_write_byte ( unsigned char c , int i ) ; 
/*--__nvram_write_byte--*/
void nvram_write_byte ( unsigned char c , int i ) ; 
/*--nvram_write_byte--*/
int __nvram_check_checksum ( void ) ; 
/*--__nvram_check_checksum--*/
int nvram_check_checksum ( void ) ; 
/*--nvram_check_checksum--*/
void nsc_gpio_dump ( struct nsc_gpio_ops * amp , unsigned index ) ; 
/*--nsc_gpio_dump--*/
ssize_t nsc_gpio_write ( struct file * file , const char * data , size_t len , loff_t * ppos ) ; 
/*--nsc_gpio_write--*/
ssize_t nsc_gpio_read ( struct file * file , char * buf , size_t len , loff_t * ppos ) ; 
/*--nsc_gpio_read--*/
int dca_add_requester ( struct device * dev ) ; 
/*--dca_add_requester--*/
int dca_remove_requester ( struct device * dev ) ; 
/*--dca_remove_requester--*/
u8 dca_common_get_tag ( struct device * dev , int cpu ) ; 
/*--dca_common_get_tag--*/
u8 dca3_get_tag ( struct device * dev , int cpu ) ; 
/*--dca3_get_tag--*/
u8 dca_get_tag ( int cpu ) ; 
/*--dca_get_tag--*/
struct dca_provider * alloc_dca_provider ( struct dca_ops * ops , int priv_size ) ; 
/*--alloc_dca_provider--*/
void free_dca_provider ( struct dca_provider * dca ) ; 
/*--free_dca_provider--*/
int register_dca_provider ( struct dca_provider * dca , struct device * dev ) ; 
/*--register_dca_provider--*/
void unregister_dca_provider ( struct dca_provider * dca , struct device * dev ) ; 
/*--unregister_dca_provider--*/
void dca_register_notify ( struct notifier_block * nb ) ; 
/*--dca_register_notify--*/
void dca_unregister_notify ( struct notifier_block * nb ) ; 
/*--dca_unregister_notify--*/
int dca_sysfs_add_req ( struct dca_provider * dca , struct device * dev , int slot ) ; 
/*--dca_sysfs_add_req--*/
void dca_sysfs_remove_req ( struct dca_provider * dca , int slot ) ; 
/*--dca_sysfs_remove_req--*/
int dca_sysfs_add_provider ( struct dca_provider * dca , struct device * dev ) ; 
/*--dca_sysfs_add_provider--*/
void dca_sysfs_remove_provider ( struct dca_provider * dca ) ; 
/*--dca_sysfs_remove_provider--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dca_sysfs_init ( void ) ; 
/*--dca_sysfs_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) dca_sysfs_exit ( void ) ; 
/*--dca_sysfs_exit--*/
void ioat_init_channel ( struct ioatdma_device * device , struct ioat_chan_common * chan , int idx ) ; 
/*--ioat_init_channel--*/
void ioat_dma_unmap ( struct ioat_chan_common * chan , enum dma_ctrl_flags flags , size_t len , struct ioat_dma_descriptor * hw ) ; 
/*--ioat_dma_unmap--*/
unsigned long ioat_get_current_completion ( struct ioat_chan_common * chan ) ; 
/*--ioat_get_current_completion--*/
bool ioat_cleanup_preamble ( struct ioat_chan_common * chan , unsigned long * phys_complete ) ; 
/*--ioat_cleanup_preamble--*/
enum dma_status ioat_dma_tx_status ( struct dma_chan * c , dma_cookie_t cookie , struct dma_tx_state * txstate ) ; 
/*--ioat_dma_tx_status--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat_dma_self_test ( struct ioatdma_device * device ) ; 
/*--ioat_dma_self_test--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat_probe ( struct ioatdma_device * device ) ; 
/*--ioat_probe--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat_register ( struct ioatdma_device * device ) ; 
/*--ioat_register--*/
void ioat_kobject_add ( struct ioatdma_device * device , struct kobj_type * type ) ; 
/*--ioat_kobject_add--*/
void ioat_kobject_del ( struct ioatdma_device * device ) ; 
/*--ioat_kobject_del--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat1_dma_probe ( struct ioatdma_device * device , int dca ) ; 
/*--ioat1_dma_probe--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat_dma_remove ( struct ioatdma_device * device ) ; 
/*--ioat_dma_remove--*/
void __ioat2_issue_pending ( struct ioat2_dma_chan * ioat ) ; 
/*--__ioat2_issue_pending--*/
void ioat2_issue_pending ( struct dma_chan * c ) ; 
/*--ioat2_issue_pending--*/
void ioat2_cleanup_event ( unsigned long data ) ; 
/*--ioat2_cleanup_event--*/
void __ioat2_restart_chan ( struct ioat2_dma_chan * ioat ) ; 
/*--__ioat2_restart_chan--*/
int ioat2_quiesce ( struct ioat_chan_common * chan , unsigned long tmo ) ; 
/*--ioat2_quiesce--*/
int ioat2_reset_sync ( struct ioat_chan_common * chan , unsigned long tmo ) ; 
/*--ioat2_reset_sync--*/
void ioat2_timer_event ( unsigned long data ) ; 
/*--ioat2_timer_event--*/
int ioat2_enumerate_channels ( struct ioatdma_device * device ) ; 
/*--ioat2_enumerate_channels--*/
int ioat2_alloc_chan_resources ( struct dma_chan * c ) ; 
/*--ioat2_alloc_chan_resources--*/
bool reshape_ring ( struct ioat2_dma_chan * ioat , int order ) ; 
/*--reshape_ring--*/
int ioat2_check_space_lock ( struct ioat2_dma_chan * ioat , int num_descs ) ; 
/*--ioat2_check_space_lock--*/
struct dma_async_tx_descriptor * ioat2_dma_prep_memcpy_lock ( struct dma_chan * c , dma_addr_t dma_dest , dma_addr_t dma_src , size_t len , unsigned long flags ) ; 
/*--ioat2_dma_prep_memcpy_lock--*/
void ioat2_free_chan_resources ( struct dma_chan * c ) ; 
/*--ioat2_free_chan_resources--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat2_dma_probe ( struct ioatdma_device * device , int dca ) ; 
/*--ioat2_dma_probe--*/
struct dma_async_tx_descriptor * ioat3_prep_xor_val ( struct dma_chan * chan , dma_addr_t * src , unsigned int src_cnt , size_t len , enum sum_check_flags * result , unsigned long flags ) ; 
/*--ioat3_prep_xor_val--*/
struct dma_async_tx_descriptor * ioat3_prep_pq_val ( struct dma_chan * chan , dma_addr_t * pq , dma_addr_t * src , unsigned int src_cnt , const unsigned char * scf , size_t len , enum sum_check_flags * pqres , unsigned long flags ) ; 
/*--ioat3_prep_pq_val--*/
struct dma_async_tx_descriptor * ioat3_prep_pqxor_val ( struct dma_chan * chan , dma_addr_t * src , unsigned int src_cnt , size_t len , enum sum_check_flags * result , unsigned long flags ) ; 
/*--ioat3_prep_pqxor_val--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat3_dma_probe ( struct ioatdma_device * device , int dca ) ; 
/*--ioat3_dma_probe--*/
int system_has_dca_enabled ( struct pci_dev * pdev ) ; 
/*--system_has_dca_enabled--*/
struct dca_provider * __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat_dca_init ( struct pci_dev * pdev , void * iobase ) ; 
/*--ioat_dca_init--*/
struct dca_provider * __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat2_dca_init ( struct pci_dev * pdev , void * iobase ) ; 
/*--ioat2_dca_init--*/
struct dca_provider * __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ioat3_dca_init ( struct pci_dev * pdev , void * iobase ) ; 
/*--ioat3_dca_init--*/
int amd64_get_dram_hole_info ( struct mem_ctl_info * mci , u64 * hole_base , u64 * hole_offset , u64 * hole_size ) ; 
/*--amd64_get_dram_hole_info--*/
void amd64_decode_bus_error ( int node_id , struct err_regs * regs ) ; 
/*--amd64_decode_bus_error--*/
void * edac_align_ptr ( void * ptr , unsigned size ) ; 
/*--edac_align_ptr--*/
struct mem_ctl_info * edac_mc_alloc ( unsigned sz_pvt , unsigned nr_csrows , unsigned nr_chans , int edac_index ) ; 
/*--edac_mc_alloc--*/
void edac_mc_free ( struct mem_ctl_info * mci ) ; 
/*--edac_mc_free--*/
void edac_mc_reset_delay_period ( int value ) ; 
/*--edac_mc_reset_delay_period--*/
struct mem_ctl_info * edac_mc_find ( int idx ) ; 
/*--edac_mc_find--*/
int edac_mc_add_mc ( struct mem_ctl_info * mci ) ; 
/*--edac_mc_add_mc--*/
struct mem_ctl_info * edac_mc_del_mc ( struct device * dev ) ; 
/*--edac_mc_del_mc--*/
int edac_mc_find_csrow_by_page ( struct mem_ctl_info * mci , unsigned long page ) ; 
/*--edac_mc_find_csrow_by_page--*/
void edac_mc_handle_ce ( struct mem_ctl_info * mci , unsigned long page_frame_number , unsigned long offset_in_page , unsigned long syndrome , int row , int channel , const char * msg ) ; 
/*--edac_mc_handle_ce--*/
void edac_mc_handle_ce_no_info ( struct mem_ctl_info * mci , const char * msg ) ; 
/*--edac_mc_handle_ce_no_info--*/
void edac_mc_handle_ue ( struct mem_ctl_info * mci , unsigned long page_frame_number , unsigned long offset_in_page , int row , const char * msg ) ; 
/*--edac_mc_handle_ue--*/
void edac_mc_handle_ue_no_info ( struct mem_ctl_info * mci , const char * msg ) ; 
/*--edac_mc_handle_ue_no_info--*/
void edac_mc_handle_fbd_ue ( struct mem_ctl_info * mci , unsigned int csrow , unsigned int channela , unsigned int channelb , char * msg ) ; 
/*--edac_mc_handle_fbd_ue--*/
void edac_mc_handle_fbd_ce ( struct mem_ctl_info * mci , unsigned int csrow , unsigned int channel , char * msg ) ; 
/*--edac_mc_handle_fbd_ce--*/
struct edac_device_ctl_info * edac_device_alloc_ctl_info ( unsigned sz_private , char * edac_device_name , unsigned nr_instances , char * edac_block_name , unsigned nr_blocks , unsigned offset_value , struct edac_dev_sysfs_block_attribute * attrib_spec , unsigned nr_attrib , int device_index ) ; 
/*--edac_device_alloc_ctl_info--*/
void edac_device_free_ctl_info ( struct edac_device_ctl_info * ctl_info ) ; 
/*--edac_device_free_ctl_info--*/
void edac_device_workq_setup ( struct edac_device_ctl_info * edac_dev , unsigned msec ) ; 
/*--edac_device_workq_setup--*/
void edac_device_workq_teardown ( struct edac_device_ctl_info * edac_dev ) ; 
/*--edac_device_workq_teardown--*/
void edac_device_reset_delay_period ( struct edac_device_ctl_info * edac_dev , unsigned long value ) ; 
/*--edac_device_reset_delay_period--*/
int edac_device_alloc_index ( void ) ; 
/*--edac_device_alloc_index--*/
int edac_device_add_device ( struct edac_device_ctl_info * edac_dev ) ; 
/*--edac_device_add_device--*/
struct edac_device_ctl_info * edac_device_del_device ( struct device * dev ) ; 
/*--edac_device_del_device--*/
void edac_device_handle_ce ( struct edac_device_ctl_info * edac_dev , int inst_nr , int block_nr , const char * msg ) ; 
/*--edac_device_handle_ce--*/
void edac_device_handle_ue ( struct edac_device_ctl_info * edac_dev , int inst_nr , int block_nr , const char * msg ) ; 
/*--edac_device_handle_ue--*/
int edac_mc_get_log_ue ( void ) ; 
/*--edac_mc_get_log_ue--*/
int edac_mc_get_log_ce ( void ) ; 
/*--edac_mc_get_log_ce--*/
int edac_mc_get_panic_on_ue ( void ) ; 
/*--edac_mc_get_panic_on_ue--*/
int edac_mc_get_poll_msec ( void ) ; 
/*--edac_mc_get_poll_msec--*/
int edac_mc_register_sysfs_main_kobj ( struct mem_ctl_info * mci ) ; 
/*--edac_mc_register_sysfs_main_kobj--*/
void edac_mc_unregister_sysfs_main_kobj ( struct mem_ctl_info * mci ) ; 
/*--edac_mc_unregister_sysfs_main_kobj--*/
int edac_create_sysfs_mci_device ( struct mem_ctl_info * mci ) ; 
/*--edac_create_sysfs_mci_device--*/
void edac_remove_sysfs_mci_device ( struct mem_ctl_info * mci ) ; 
/*--edac_remove_sysfs_mci_device--*/
int edac_sysfs_setup_mc_kset ( void ) ; 
/*--edac_sysfs_setup_mc_kset--*/
void edac_sysfs_teardown_mc_kset ( void ) ; 
/*--edac_sysfs_teardown_mc_kset--*/
int edac_pci_get_check_errors ( void ) ; 
/*--edac_pci_get_check_errors--*/
int edac_pci_get_poll_msec ( void ) ; 
/*--edac_pci_get_poll_msec--*/
int edac_pci_create_sysfs ( struct edac_pci_ctl_info * pci ) ; 
/*--edac_pci_create_sysfs--*/
void edac_pci_remove_sysfs ( struct edac_pci_ctl_info * pci ) ; 
/*--edac_pci_remove_sysfs--*/
void edac_pci_do_parity_check ( void ) ; 
/*--edac_pci_do_parity_check--*/
void edac_pci_clear_parity_errors ( void ) ; 
/*--edac_pci_clear_parity_errors--*/
void edac_pci_handle_pe ( struct edac_pci_ctl_info * pci , const char * msg ) ; 
/*--edac_pci_handle_pe--*/
void edac_pci_handle_npe ( struct edac_pci_ctl_info * pci , const char * msg ) ; 
/*--edac_pci_handle_npe--*/
char * edac_op_state_to_string ( int opstate ) ; 
/*--edac_op_state_to_string--*/
struct sysdev_class * edac_get_edac_class ( void ) ; 
/*--edac_get_edac_class--*/
int edac_device_register_sysfs_main_kobj ( struct edac_device_ctl_info * edac_dev ) ; 
/*--edac_device_register_sysfs_main_kobj--*/
void edac_device_unregister_sysfs_main_kobj ( struct edac_device_ctl_info * edac_dev ) ; 
/*--edac_device_unregister_sysfs_main_kobj--*/
int edac_device_create_sysfs ( struct edac_device_ctl_info * edac_dev ) ; 
/*--edac_device_create_sysfs--*/
void edac_device_remove_sysfs ( struct edac_device_ctl_info * edac_dev ) ; 
/*--edac_device_remove_sysfs--*/
struct edac_pci_ctl_info * edac_pci_alloc_ctl_info ( unsigned int sz_pvt , const char * edac_pci_name ) ; 
/*--edac_pci_alloc_ctl_info--*/
void edac_pci_free_ctl_info ( struct edac_pci_ctl_info * pci ) ; 
/*--edac_pci_free_ctl_info--*/
void edac_pci_reset_delay_period ( struct edac_pci_ctl_info * pci , unsigned long value ) ; 
/*--edac_pci_reset_delay_period--*/
int edac_pci_alloc_index ( void ) ; 
/*--edac_pci_alloc_index--*/
int edac_pci_add_device ( struct edac_pci_ctl_info * pci , int edac_idx ) ; 
/*--edac_pci_add_device--*/
struct edac_pci_ctl_info * edac_pci_del_device ( struct device * dev ) ; 
/*--edac_pci_del_device--*/
struct edac_pci_ctl_info * edac_pci_create_generic_ctl ( struct device * dev , const char * mod_name ) ; 
/*--edac_pci_create_generic_ctl--*/
void edac_pci_release_generic_ctl ( struct edac_pci_ctl_info * pci ) ; 
/*--edac_pci_release_generic_ctl--*/
void amd_report_gart_errors ( bool v ) ; 
/*--amd_report_gart_errors--*/
void amd_register_ecc_decoder ( void ( * f ) ( int , struct err_regs * ) ) ; 
/*--amd_register_ecc_decoder--*/
void amd_unregister_ecc_decoder ( void ( * f ) ( int , struct err_regs * ) ) ; 
/*--amd_unregister_ecc_decoder--*/
void amd_decode_nb_mce ( int node_id , struct err_regs * regs , int handle_errors ) ; 
/*--amd_decode_nb_mce--*/
void * i3200_map_mchbar ( struct pci_dev * pdev ) ; 
/*--i3200_map_mchbar--*/
void * x38_map_mchbar ( struct pci_dev * pdev ) ; 
/*--x38_map_mchbar--*/
int fw_compute_block_crc ( __be32 * block ) ; 
/*--fw_compute_block_crc--*/
int fw_core_add_descriptor ( struct fw_descriptor * desc ) ; 
/*--fw_core_add_descriptor--*/
void fw_core_remove_descriptor ( struct fw_descriptor * desc ) ; 
/*--fw_core_remove_descriptor--*/
void fw_schedule_bm_work ( struct fw_card * card , unsigned long delay ) ; 
/*--fw_schedule_bm_work--*/
void fw_card_initialize ( struct fw_card * card , const struct fw_card_driver * driver , struct device * device ) ; 
/*--fw_card_initialize--*/
int fw_card_add ( struct fw_card * card , u32 max_receive , u32 link_speed , u64 guid ) ; 
/*--fw_card_add--*/
void fw_card_release ( struct kref * kref ) ; 
/*--fw_card_release--*/
void fw_core_remove_card ( struct fw_card * card ) ; 
/*--fw_core_remove_card--*/
int fw_core_initiate_bus_reset ( struct fw_card * card , int short_reset ) ; 
/*--fw_core_initiate_bus_reset--*/
void fw_device_cdev_update ( struct fw_device * device ) ; 
/*--fw_device_cdev_update--*/
void fw_device_cdev_remove ( struct fw_device * device ) ; 
/*--fw_device_cdev_remove--*/
void fw_csr_iterator_init ( struct fw_csr_iterator * ci , const u32 * p ) ; 
/*--fw_csr_iterator_init--*/
int fw_csr_iterator_next ( struct fw_csr_iterator * ci , int * key , int * value ) ; 
/*--fw_csr_iterator_next--*/
int fw_csr_string ( const u32 * directory , int key , char * buf , size_t size ) ; 
/*--fw_csr_string--*/
int fw_device_enable_phys_dma ( struct fw_device * device ) ; 
/*--fw_device_enable_phys_dma--*/
struct fw_device * fw_device_get_by_devt ( dev_t devt ) ; 
/*--fw_device_get_by_devt--*/
int fw_device_set_broadcast_channel ( struct device * dev , void * gen ) ; 
/*--fw_device_set_broadcast_channel--*/
void fw_node_event ( struct fw_card * card , struct fw_node * node , int event ) ; 
/*--fw_node_event--*/
int fw_iso_buffer_init ( struct fw_iso_buffer * buffer , struct fw_card * card , int page_count , enum dma_data_direction direction ) ; 
/*--fw_iso_buffer_init--*/
int fw_iso_buffer_map ( struct fw_iso_buffer * buffer , struct vm_area_struct * vma ) ; 
/*--fw_iso_buffer_map--*/
void fw_iso_buffer_destroy ( struct fw_iso_buffer * buffer , struct fw_card * card ) ; 
/*--fw_iso_buffer_destroy--*/
struct fw_iso_context * fw_iso_context_create ( struct fw_card * card , int type , int channel , int speed , size_t header_size , fw_iso_callback_t callback , void * callback_data ) ; 
/*--fw_iso_context_create--*/
void fw_iso_context_destroy ( struct fw_iso_context * ctx ) ; 
/*--fw_iso_context_destroy--*/
int fw_iso_context_start ( struct fw_iso_context * ctx , int cycle , int sync , int tags ) ; 
/*--fw_iso_context_start--*/
int fw_iso_context_queue ( struct fw_iso_context * ctx , struct fw_iso_packet * packet , struct fw_iso_buffer * buffer , unsigned long payload ) ; 
/*--fw_iso_context_queue--*/
int fw_iso_context_stop ( struct fw_iso_context * ctx ) ; 
/*--fw_iso_context_stop--*/
void fw_iso_resource_manage ( struct fw_card * card , int generation , u64 channels_mask , int * channel , int * bandwidth , bool allocate , __be32 buffer [ 2 ] ) ; 
/*--fw_iso_resource_manage--*/
void fw_destroy_nodes ( struct fw_card * card ) ; 
/*--fw_destroy_nodes--*/
void fw_core_handle_bus_reset ( struct fw_card * card , int node_id , int generation , int self_id_count , u32 * self_ids ) ; 
/*--fw_core_handle_bus_reset--*/
int fw_cancel_transaction ( struct fw_card * card , struct fw_transaction * transaction ) ; 
/*--fw_cancel_transaction--*/
void fw_send_request ( struct fw_card * card , struct fw_transaction * t , int tcode , int destination_id , int generation , int speed , unsigned long long offset , void * payload , size_t length , fw_transaction_callback_t callback , void * callback_data ) ; 
/*--fw_send_request--*/
int fw_run_transaction ( struct fw_card * card , int tcode , int destination_id , int generation , int speed , unsigned long long offset , void * payload , size_t length ) ; 
/*--fw_run_transaction--*/
void fw_send_phy_config ( struct fw_card * card , int node_id , int generation , int gap_count ) ; 
/*--fw_send_phy_config--*/
int fw_core_add_address_handler ( struct fw_address_handler * handler , const struct fw_address_region * region ) ; 
/*--fw_core_add_address_handler--*/
void fw_core_remove_address_handler ( struct fw_address_handler * handler ) ; 
/*--fw_core_remove_address_handler--*/
void fw_fill_response ( struct fw_packet * response , u32 * request_header , int rcode , void * payload , size_t length ) ; 
/*--fw_fill_response--*/
void fw_send_response ( struct fw_card * card , struct fw_request * request , int rcode ) ; 
/*--fw_send_response--*/
void fw_core_handle_request ( struct fw_card * card , struct fw_packet * p ) ; 
/*--fw_core_handle_request--*/
void fw_core_handle_response ( struct fw_card * card , struct fw_packet * p ) ; 
/*--fw_core_handle_response--*/
int dcdbas_smi_request ( struct smi_cmd * smi_cmd ) ; 
/*--dcdbas_smi_request--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __max730x_probe ( struct max7301 * ts ) ; 
/*--__max730x_probe--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __max730x_remove ( struct device * dev ) ; 
/*--__max730x_remove--*/
struct ch7006_mode * ch7006_lookup_mode ( struct drm_encoder * encoder , struct drm_display_mode * drm_mode ) ; 
/*--ch7006_lookup_mode--*/
void ch7006_setup_levels ( struct drm_encoder * encoder ) ; 
/*--ch7006_setup_levels--*/
void ch7006_setup_subcarrier ( struct drm_encoder * encoder ) ; 
/*--ch7006_setup_subcarrier--*/
void ch7006_setup_pll ( struct drm_encoder * encoder ) ; 
/*--ch7006_setup_pll--*/
void ch7006_setup_power_state ( struct drm_encoder * encoder ) ; 
/*--ch7006_setup_power_state--*/
void ch7006_setup_properties ( struct drm_encoder * encoder ) ; 
/*--ch7006_setup_properties--*/
void ch7006_write ( struct i2c_client * client , uint8_t addr , uint8_t val ) ; 
/*--ch7006_write--*/
uint8_t ch7006_read ( struct i2c_client * client , uint8_t addr ) ; 
/*--ch7006_read--*/
void ch7006_state_load ( struct i2c_client * client , struct ch7006_state * state ) ; 
/*--ch7006_state_load--*/
void ch7006_state_save ( struct i2c_client * client , struct ch7006_state * state ) ; 
/*--ch7006_state_save--*/
int i810_driver_load ( struct drm_device * dev , unsigned long flags ) ; 
/*--i810_driver_load--*/
void i810_driver_lastclose ( struct drm_device * dev ) ; 
/*--i810_driver_lastclose--*/
void i810_driver_preclose ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--i810_driver_preclose--*/
void i810_driver_reclaim_buffers_locked ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--i810_driver_reclaim_buffers_locked--*/
int i810_driver_dma_quiescent ( struct drm_device * dev ) ; 
/*--i810_driver_dma_quiescent--*/
int i810_driver_device_is_agp ( struct drm_device * dev ) ; 
/*--i810_driver_device_is_agp--*/
int i830_wait_ring ( struct drm_device * dev , int n , const char * caller ) ; 
/*--i830_wait_ring--*/
int i830_driver_load ( struct drm_device * dev , unsigned long flags ) ; 
/*--i830_driver_load--*/
void i830_driver_lastclose ( struct drm_device * dev ) ; 
/*--i830_driver_lastclose--*/
void i830_driver_preclose ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--i830_driver_preclose--*/
void i830_driver_reclaim_buffers_locked ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--i830_driver_reclaim_buffers_locked--*/
int i830_driver_dma_quiescent ( struct drm_device * dev ) ; 
/*--i830_driver_dma_quiescent--*/
int i830_driver_device_is_agp ( struct drm_device * dev ) ; 
/*--i830_driver_device_is_agp--*/
irqreturn_t i830_driver_irq_handler ( int irq , void * arg ) ; 
/*--i830_driver_irq_handler--*/
int i830_irq_emit ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i830_irq_emit--*/
int i830_irq_wait ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i830_irq_wait--*/
void i830_driver_irq_preinstall ( struct drm_device * dev ) ; 
/*--i830_driver_irq_preinstall--*/
void i830_driver_irq_postinstall ( struct drm_device * dev ) ; 
/*--i830_driver_irq_postinstall--*/
void i830_driver_irq_uninstall ( struct drm_device * dev ) ; 
/*--i830_driver_irq_uninstall--*/
void intel_detect_pch ( struct drm_device * dev ) ; 
/*--intel_detect_pch--*/
int i915_suspend ( struct drm_device * dev , pm_message_t state ) ; 
/*--i915_suspend--*/
int i915_resume ( struct drm_device * dev ) ; 
/*--i915_resume--*/
int i965_reset ( struct drm_device * dev , u8 flags ) ; 
/*--i965_reset--*/
void i915_kernel_lost_context ( struct drm_device * dev ) ; 
/*--i915_kernel_lost_context--*/
int i915_emit_box ( struct drm_device * dev , struct drm_clip_rect * boxes , int i , int DR1 , int DR4 ) ; 
/*--i915_emit_box--*/
int i915_master_create ( struct drm_device * dev , struct drm_master * master ) ; 
/*--i915_master_create--*/
void i915_master_destroy ( struct drm_device * dev , struct drm_master * master ) ; 
/*--i915_master_destroy--*/
unsigned long i915_chipset_val ( struct drm_i915_private * dev_priv ) ; 
/*--i915_chipset_val--*/
unsigned long i915_mch_val ( struct drm_i915_private * dev_priv ) ; 
/*--i915_mch_val--*/
void i915_update_gfx_val ( struct drm_i915_private * dev_priv ) ; 
/*--i915_update_gfx_val--*/
unsigned long i915_gfx_val ( struct drm_i915_private * dev_priv ) ; 
/*--i915_gfx_val--*/
unsigned long i915_read_mch_val ( void ) ; 
/*--i915_read_mch_val--*/
bool i915_gpu_raise ( void ) ; 
/*--i915_gpu_raise--*/
bool i915_gpu_lower ( void ) ; 
/*--i915_gpu_lower--*/
bool i915_gpu_busy ( void ) ; 
/*--i915_gpu_busy--*/
bool i915_gpu_turbo_disable ( void ) ; 
/*--i915_gpu_turbo_disable--*/
int i915_driver_load ( struct drm_device * dev , unsigned long flags ) ; 
/*--i915_driver_load--*/
int i915_driver_unload ( struct drm_device * dev ) ; 
/*--i915_driver_unload--*/
int i915_driver_open ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--i915_driver_open--*/
void i915_driver_lastclose ( struct drm_device * dev ) ; 
/*--i915_driver_lastclose--*/
void i915_driver_preclose ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--i915_driver_preclose--*/
void i915_driver_postclose ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--i915_driver_postclose--*/
int i915_driver_device_is_agp ( struct drm_device * dev ) ; 
/*--i915_driver_device_is_agp--*/
void ironlake_enable_graphics_irq ( drm_i915_private_t * dev_priv , u32 mask ) ; 
/*--ironlake_enable_graphics_irq--*/
void ironlake_disable_graphics_irq ( drm_i915_private_t * dev_priv , u32 mask ) ; 
/*--ironlake_disable_graphics_irq--*/
void ironlake_enable_display_irq ( drm_i915_private_t * dev_priv , u32 mask ) ; 
/*--ironlake_enable_display_irq--*/
void i915_enable_irq ( drm_i915_private_t * dev_priv , u32 mask ) ; 
/*--i915_enable_irq--*/
void i915_disable_irq ( drm_i915_private_t * dev_priv , u32 mask ) ; 
/*--i915_disable_irq--*/
void i915_enable_pipestat ( drm_i915_private_t * dev_priv , int pipe , u32 mask ) ; 
/*--i915_enable_pipestat--*/
void i915_disable_pipestat ( drm_i915_private_t * dev_priv , int pipe , u32 mask ) ; 
/*--i915_disable_pipestat--*/
void intel_enable_asle ( struct drm_device * dev ) ; 
/*--intel_enable_asle--*/
u32 i915_get_vblank_counter ( struct drm_device * dev , int pipe ) ; 
/*--i915_get_vblank_counter--*/
u32 gm45_get_vblank_counter ( struct drm_device * dev , int pipe ) ; 
/*--gm45_get_vblank_counter--*/
irqreturn_t ironlake_irq_handler ( struct drm_device * dev ) ; 
/*--ironlake_irq_handler--*/
void i915_destroy_error_state ( struct drm_device * dev ) ; 
/*--i915_destroy_error_state--*/
irqreturn_t i915_driver_irq_handler ( int irq , void * arg ) ; 
/*--i915_driver_irq_handler--*/
void i915_trace_irq_get ( struct drm_device * dev , u32 seqno ) ; 
/*--i915_trace_irq_get--*/
int i915_irq_emit ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_irq_emit--*/
int i915_irq_wait ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_irq_wait--*/
int i915_enable_vblank ( struct drm_device * dev , int pipe ) ; 
/*--i915_enable_vblank--*/
void i915_disable_vblank ( struct drm_device * dev , int pipe ) ; 
/*--i915_disable_vblank--*/
void i915_enable_interrupt ( struct drm_device * dev ) ; 
/*--i915_enable_interrupt--*/
int i915_vblank_pipe_set ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_vblank_pipe_set--*/
int i915_vblank_pipe_get ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_vblank_pipe_get--*/
int i915_vblank_swap ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_vblank_swap--*/
struct drm_i915_gem_request * i915_get_tail_request ( struct drm_device * dev ) ; 
/*--i915_get_tail_request--*/
void i915_hangcheck_elapsed ( unsigned long data ) ; 
/*--i915_hangcheck_elapsed--*/
void i915_driver_irq_preinstall ( struct drm_device * dev ) ; 
/*--i915_driver_irq_preinstall--*/
int i915_driver_irq_postinstall ( struct drm_device * dev ) ; 
/*--i915_driver_irq_postinstall--*/
void i915_driver_irq_uninstall ( struct drm_device * dev ) ; 
/*--i915_driver_irq_uninstall--*/
void i915_mem_release ( struct drm_device * dev , struct drm_file * file_priv , struct mem_block * heap ) ; 
/*--i915_mem_release--*/
void i915_mem_takedown ( struct mem_block * * heap ) ; 
/*--i915_mem_takedown--*/
int i915_mem_alloc ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_mem_alloc--*/
int i915_mem_free ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_mem_free--*/
int i915_mem_init_heap ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_mem_init_heap--*/
int i915_mem_destroy_heap ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_mem_destroy_heap--*/
int i915_debugfs_init ( struct drm_minor * minor ) ; 
/*--i915_debugfs_init--*/
void i915_debugfs_cleanup ( struct drm_minor * minor ) ; 
/*--i915_debugfs_cleanup--*/
void i915_save_display ( struct drm_device * dev ) ; 
/*--i915_save_display--*/
void i915_restore_display ( struct drm_device * dev ) ; 
/*--i915_restore_display--*/
int i915_save_state ( struct drm_device * dev ) ; 
/*--i915_save_state--*/
int i915_restore_state ( struct drm_device * dev ) ; 
/*--i915_restore_state--*/
int i915_gem_do_init ( struct drm_device * dev , unsigned long start , unsigned long end ) ; 
/*--i915_gem_do_init--*/
int i915_gem_init_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_init_ioctl--*/
int i915_gem_get_aperture_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_get_aperture_ioctl--*/
int i915_gem_create_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_create_ioctl--*/
int i915_gem_pread_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_pread_ioctl--*/
int i915_gem_pwrite_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_pwrite_ioctl--*/
int i915_gem_set_domain_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_set_domain_ioctl--*/
int i915_gem_sw_finish_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_sw_finish_ioctl--*/
int i915_gem_mmap_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_mmap_ioctl--*/
int i915_gem_fault ( struct vm_area_struct * vma , struct vm_fault * vmf ) ; 
/*--i915_gem_fault--*/
void i915_gem_release_mmap ( struct drm_gem_object * obj ) ; 
/*--i915_gem_release_mmap--*/
int i915_gem_mmap_gtt_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_mmap_gtt_ioctl--*/
void i915_gem_object_put_pages ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_put_pages--*/
uint32_t i915_add_request ( struct drm_device * dev , struct drm_file * file_priv , uint32_t flush_domains , struct intel_ring_buffer * ring ) ; 
/*--i915_add_request--*/
bool i915_seqno_passed ( uint32_t seq1 , uint32_t seq2 ) ; 
/*--i915_seqno_passed--*/
uint32_t i915_get_gem_seqno ( struct drm_device * dev , struct intel_ring_buffer * ring ) ; 
/*--i915_get_gem_seqno--*/
void i915_gem_retire_requests ( struct drm_device * dev , struct intel_ring_buffer * ring ) ; 
/*--i915_gem_retire_requests--*/
void i915_gem_retire_work_handler ( struct work_struct * work ) ; 
/*--i915_gem_retire_work_handler--*/
int i915_do_wait_request ( struct drm_device * dev , uint32_t seqno , int interruptible , struct intel_ring_buffer * ring ) ; 
/*--i915_do_wait_request--*/
int i915_gem_object_unbind ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_unbind--*/
int i915_gem_object_get_pages ( struct drm_gem_object * obj , gfp_t gfpmask ) ; 
/*--i915_gem_object_get_pages--*/
int i915_gem_object_get_fence_reg ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_get_fence_reg--*/
int i915_gem_object_put_fence_reg ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_put_fence_reg--*/
void i915_gem_clflush_object ( struct drm_gem_object * obj ) ; 
/*--i915_gem_clflush_object--*/
void i915_gem_object_flush_write_domain ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_flush_write_domain--*/
int i915_gem_object_set_to_gtt_domain ( struct drm_gem_object * obj , int write ) ; 
/*--i915_gem_object_set_to_gtt_domain--*/
int i915_gem_object_set_to_display_plane ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_set_to_display_plane--*/
int i915_gem_do_execbuffer ( struct drm_device * dev , void * data , struct drm_file * file_priv , struct drm_i915_gem_execbuffer2 * args , struct drm_i915_gem_exec_object2 * exec_list ) ; 
/*--i915_gem_do_execbuffer--*/
int i915_gem_execbuffer ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_execbuffer--*/
int i915_gem_execbuffer2 ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_execbuffer2--*/
int i915_gem_object_pin ( struct drm_gem_object * obj , uint32_t alignment ) ; 
/*--i915_gem_object_pin--*/
void i915_gem_object_unpin ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_unpin--*/
int i915_gem_pin_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_pin_ioctl--*/
int i915_gem_unpin_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_unpin_ioctl--*/
int i915_gem_busy_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_busy_ioctl--*/
int i915_gem_throttle_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_throttle_ioctl--*/
int i915_gem_madvise_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_madvise_ioctl--*/
struct drm_gem_object * i915_gem_alloc_object ( struct drm_device * dev , size_t size ) ; 
/*--i915_gem_alloc_object--*/
int i915_gem_init_object ( struct drm_gem_object * obj ) ; 
/*--i915_gem_init_object--*/
void i915_gem_free_object ( struct drm_gem_object * obj ) ; 
/*--i915_gem_free_object--*/
int i915_gem_idle ( struct drm_device * dev ) ; 
/*--i915_gem_idle--*/
int i915_gem_init_ringbuffer ( struct drm_device * dev ) ; 
/*--i915_gem_init_ringbuffer--*/
void i915_gem_cleanup_ringbuffer ( struct drm_device * dev ) ; 
/*--i915_gem_cleanup_ringbuffer--*/
int i915_gem_entervt_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_entervt_ioctl--*/
int i915_gem_leavevt_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_leavevt_ioctl--*/
void i915_gem_lastclose ( struct drm_device * dev ) ; 
/*--i915_gem_lastclose--*/
void i915_gem_load ( struct drm_device * dev ) ; 
/*--i915_gem_load--*/
int i915_gem_init_phys_object ( struct drm_device * dev , int id , int size ) ; 
/*--i915_gem_init_phys_object--*/
void i915_gem_free_phys_object ( struct drm_device * dev , int id ) ; 
/*--i915_gem_free_phys_object--*/
void i915_gem_free_all_phys_object ( struct drm_device * dev ) ; 
/*--i915_gem_free_all_phys_object--*/
void i915_gem_detach_phys_object ( struct drm_device * dev , struct drm_gem_object * obj ) ; 
/*--i915_gem_detach_phys_object--*/
int i915_gem_attach_phys_object ( struct drm_device * dev , struct drm_gem_object * obj , int id ) ; 
/*--i915_gem_attach_phys_object--*/
void i915_gem_release ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--i915_gem_release--*/
__attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) void i915_gem_shrinker_init ( void ) ; 
/*--i915_gem_shrinker_init--*/
__attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) void i915_gem_shrinker_exit ( void ) ; 
/*--i915_gem_shrinker_exit--*/
void i915_gem_detect_bit_6_swizzle ( struct drm_device * dev ) ; 
/*--i915_gem_detect_bit_6_swizzle--*/
bool i915_tiling_ok ( struct drm_device * dev , int stride , int size , int tiling_mode ) ; 
/*--i915_tiling_ok--*/
bool i915_gem_object_fence_offset_ok ( struct drm_gem_object * obj , int tiling_mode ) ; 
/*--i915_gem_object_fence_offset_ok--*/
int i915_gem_set_tiling ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_set_tiling--*/
int i915_gem_get_tiling ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--i915_gem_get_tiling--*/
void i915_gem_object_do_bit_17_swizzle ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_do_bit_17_swizzle--*/
void i915_gem_object_save_bit_17_swizzle ( struct drm_gem_object * obj ) ; 
/*--i915_gem_object_save_bit_17_swizzle--*/
bool intel_pipe_has_type ( struct drm_crtc * crtc , int type ) ; 
/*--intel_pipe_has_type--*/
void intel_wait_for_vblank ( struct drm_device * dev ) ; 
/*--intel_wait_for_vblank--*/
void i8xx_disable_fbc ( struct drm_device * dev ) ; 
/*--i8xx_disable_fbc--*/
void g4x_disable_fbc ( struct drm_device * dev ) ; 
/*--g4x_disable_fbc--*/
bool intel_fbc_enabled ( struct drm_device * dev ) ; 
/*--intel_fbc_enabled--*/
void intel_enable_fbc ( struct drm_crtc * crtc , unsigned long interval ) ; 
/*--intel_enable_fbc--*/
void intel_disable_fbc ( struct drm_device * dev ) ; 
/*--intel_disable_fbc--*/
int intel_pin_and_fence_fb_obj ( struct drm_device * dev , struct drm_gem_object * obj ) ; 
/*--intel_pin_and_fence_fb_obj--*/
void intel_encoder_prepare ( struct drm_encoder * encoder ) ; 
/*--intel_encoder_prepare--*/
void intel_encoder_commit ( struct drm_encoder * encoder ) ; 
/*--intel_encoder_commit--*/
int intel_panel_fitter_pipe ( struct drm_device * dev ) ; 
/*--intel_panel_fitter_pipe--*/
void intel_crtc_load_lut ( struct drm_crtc * crtc ) ; 
/*--intel_crtc_load_lut--*/
void intel_crtc_fb_gamma_set ( struct drm_crtc * crtc , u16 red , u16 green , u16 blue , int regno ) ; 
/*--intel_crtc_fb_gamma_set--*/
void intel_crtc_fb_gamma_get ( struct drm_crtc * crtc , u16 * red , u16 * green , u16 * blue , int regno ) ; 
/*--intel_crtc_fb_gamma_get--*/
struct drm_crtc * intel_get_load_detect_pipe ( struct intel_encoder * intel_encoder , struct drm_connector * connector , struct drm_display_mode * mode , int * dpms_mode ) ; 
/*--intel_get_load_detect_pipe--*/
void intel_release_load_detect_pipe ( struct intel_encoder * intel_encoder , struct drm_connector * connector , int dpms_mode ) ; 
/*--intel_release_load_detect_pipe--*/
struct drm_display_mode * intel_crtc_mode_get ( struct drm_device * dev , struct drm_crtc * crtc ) ; 
/*--intel_crtc_mode_get--*/
void intel_mark_busy ( struct drm_device * dev , struct drm_gem_object * obj ) ; 
/*--intel_mark_busy--*/
void intel_finish_page_flip ( struct drm_device * dev , int pipe ) ; 
/*--intel_finish_page_flip--*/
void intel_finish_page_flip_plane ( struct drm_device * dev , int plane ) ; 
/*--intel_finish_page_flip_plane--*/
void intel_prepare_page_flip ( struct drm_device * dev , int plane ) ; 
/*--intel_prepare_page_flip--*/
int intel_get_pipe_from_crtc_id ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--intel_get_pipe_from_crtc_id--*/
struct drm_crtc * intel_get_crtc_from_pipe ( struct drm_device * dev , int pipe ) ; 
/*--intel_get_crtc_from_pipe--*/
int intel_framebuffer_init ( struct drm_device * dev , struct intel_framebuffer * intel_fb , struct drm_mode_fb_cmd * mode_cmd , struct drm_gem_object * obj ) ; 
/*--intel_framebuffer_init--*/
bool ironlake_set_drps ( struct drm_device * dev , u8 val ) ; 
/*--ironlake_set_drps--*/
void ironlake_enable_drps ( struct drm_device * dev ) ; 
/*--ironlake_enable_drps--*/
void ironlake_disable_drps ( struct drm_device * dev ) ; 
/*--ironlake_disable_drps--*/
void intel_init_emon ( struct drm_device * dev ) ; 
/*--intel_init_emon--*/
void intel_init_clock_gating ( struct drm_device * dev ) ; 
/*--intel_init_clock_gating--*/
void intel_modeset_init ( struct drm_device * dev ) ; 
/*--intel_modeset_init--*/
void intel_modeset_cleanup ( struct drm_device * dev ) ; 
/*--intel_modeset_cleanup--*/
struct drm_encoder * intel_attached_encoder ( struct drm_connector * connector ) ; 
/*--intel_attached_encoder--*/
int intel_modeset_vga_set_state ( struct drm_device * dev , bool state ) ; 
/*--intel_modeset_vga_set_state--*/
void intel_crt_init ( struct drm_device * dev ) ; 
/*--intel_crt_init--*/
void intel_lvds_init ( struct drm_device * dev ) ; 
/*--intel_lvds_init--*/
bool intel_init_bios ( struct drm_device * dev ) ; 
/*--intel_init_bios--*/
void intel_edp_link_config ( struct intel_encoder * intel_encoder , int * lane_num , int * link_bw ) ; 
/*--intel_edp_link_config--*/
void intel_dp_set_m_n ( struct drm_crtc * crtc , struct drm_display_mode * mode , struct drm_display_mode * adjusted_mode ) ; 
/*--intel_dp_set_m_n--*/
void intel_dp_hot_plug ( struct intel_encoder * intel_encoder ) ; 
/*--intel_dp_hot_plug--*/
int intel_trans_dp_port_sel ( struct drm_crtc * crtc ) ; 
/*--intel_trans_dp_port_sel--*/
void intel_dp_init ( struct drm_device * dev , int output_reg ) ; 
/*--intel_dp_init--*/
void intel_hdmi_init ( struct drm_device * dev , int sdvox_reg ) ; 
/*--intel_hdmi_init--*/
enum drm_connector_status intel_sdvo_hdmi_sink_detect ( struct drm_connector * connector ) ; 
/*--intel_sdvo_hdmi_sink_detect--*/
bool intel_sdvo_init ( struct drm_device * dev , int sdvo_reg ) ; 
/*--intel_sdvo_init--*/
bool intel_ddc_probe ( struct intel_encoder * intel_encoder ) ; 
/*--intel_ddc_probe--*/
int intel_ddc_get_modes ( struct drm_connector * connector , struct i2c_adapter * adapter ) ; 
/*--intel_ddc_get_modes--*/
void intel_i2c_quirk_set ( struct drm_device * dev , bool enable ) ; 
/*--intel_i2c_quirk_set--*/
void intel_i2c_reset_gmbus ( struct drm_device * dev ) ; 
/*--intel_i2c_reset_gmbus--*/
struct i2c_adapter * intel_i2c_create ( struct drm_device * dev , const u32 reg , const char * name ) ; 
/*--intel_i2c_create--*/
void intel_i2c_destroy ( struct i2c_adapter * adapter ) ; 
/*--intel_i2c_destroy--*/
int intel_fbdev_destroy ( struct drm_device * dev , struct intel_fbdev * ifbdev ) ; 
/*--intel_fbdev_destroy--*/
int intel_fbdev_init ( struct drm_device * dev ) ; 
/*--intel_fbdev_init--*/
void intel_fbdev_fini ( struct drm_device * dev ) ; 
/*--intel_fbdev_fini--*/
void intel_fb_output_poll_changed ( struct drm_device * dev ) ; 
/*--intel_fb_output_poll_changed--*/
void intel_tv_init ( struct drm_device * dev ) ; 
/*--intel_tv_init--*/
void intel_dvo_init ( struct drm_device * dev ) ; 
/*--intel_dvo_init--*/
void bsd_ring_flush ( struct drm_device * dev , struct intel_ring_buffer * ring , u32 invalidate_domains , u32 flush_domains ) ; 
/*--bsd_ring_flush--*/
int intel_init_ring_buffer ( struct drm_device * dev , struct intel_ring_buffer * ring ) ; 
/*--intel_init_ring_buffer--*/
void intel_cleanup_ring_buffer ( struct drm_device * dev , struct intel_ring_buffer * ring ) ; 
/*--intel_cleanup_ring_buffer--*/
int intel_wrap_ring_buffer ( struct drm_device * dev , struct intel_ring_buffer * ring ) ; 
/*--intel_wrap_ring_buffer--*/
int intel_wait_ring_buffer ( struct drm_device * dev , struct intel_ring_buffer * ring , int n ) ; 
/*--intel_wait_ring_buffer--*/
void intel_ring_begin ( struct drm_device * dev , struct intel_ring_buffer * ring , int num_dwords ) ; 
/*--intel_ring_begin--*/
void intel_ring_emit ( struct drm_device * dev , struct intel_ring_buffer * ring , unsigned int data ) ; 
/*--intel_ring_emit--*/
void intel_ring_advance ( struct drm_device * dev , struct intel_ring_buffer * ring ) ; 
/*--intel_ring_advance--*/
void intel_fill_struct ( struct drm_device * dev , struct intel_ring_buffer * ring , void * data , unsigned int len ) ; 
/*--intel_fill_struct--*/
u32 intel_ring_get_seqno ( struct drm_device * dev , struct intel_ring_buffer * ring ) ; 
/*--intel_ring_get_seqno--*/
int intel_overlay_recover_from_interrupt ( struct intel_overlay * overlay , int interruptible ) ; 
/*--intel_overlay_recover_from_interrupt--*/
int intel_overlay_do_put_image ( struct intel_overlay * overlay , struct drm_gem_object * new_bo , struct put_image_params * params ) ; 
/*--intel_overlay_do_put_image--*/
int intel_overlay_switch_off ( struct intel_overlay * overlay ) ; 
/*--intel_overlay_switch_off--*/
int intel_overlay_put_image ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--intel_overlay_put_image--*/
int intel_overlay_attrs ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--intel_overlay_attrs--*/
void intel_setup_overlay ( struct drm_device * dev ) ; 
/*--intel_setup_overlay--*/
void intel_cleanup_overlay ( struct drm_device * dev ) ; 
/*--intel_cleanup_overlay--*/
void opregion_asle_intr ( struct drm_device * dev ) ; 
/*--opregion_asle_intr--*/
void ironlake_opregion_gse_intr ( struct drm_device * dev ) ; 
/*--ironlake_opregion_gse_intr--*/
void opregion_enable_asle ( struct drm_device * dev ) ; 
/*--opregion_enable_asle--*/
int intel_opregion_init ( struct drm_device * dev , int resume ) ; 
/*--intel_opregion_init--*/
void intel_opregion_free ( struct drm_device * dev , int suspend ) ; 
/*--intel_opregion_free--*/
long i915_compat_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--i915_compat_ioctl--*/
int mga_do_wait_for_idle ( drm_mga_private_t * dev_priv ) ; 
/*--mga_do_wait_for_idle--*/
void mga_do_dma_flush ( drm_mga_private_t * dev_priv ) ; 
/*--mga_do_dma_flush--*/
void mga_do_dma_wrap_start ( drm_mga_private_t * dev_priv ) ; 
/*--mga_do_dma_wrap_start--*/
void mga_do_dma_wrap_end ( drm_mga_private_t * dev_priv ) ; 
/*--mga_do_dma_wrap_end--*/
int mga_freelist_put ( struct drm_device * dev , struct drm_buf * buf ) ; 
/*--mga_freelist_put--*/
int mga_driver_load ( struct drm_device * dev , unsigned long flags ) ; 
/*--mga_driver_load--*/
int mga_dma_bootstrap ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--mga_dma_bootstrap--*/
int mga_dma_init ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--mga_dma_init--*/
int mga_dma_flush ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--mga_dma_flush--*/
int mga_dma_reset ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--mga_dma_reset--*/
int mga_dma_buffers ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--mga_dma_buffers--*/
int mga_driver_unload ( struct drm_device * dev ) ; 
/*--mga_driver_unload--*/
void mga_driver_lastclose ( struct drm_device * dev ) ; 
/*--mga_driver_lastclose--*/
int mga_driver_dma_quiescent ( struct drm_device * dev ) ; 
/*--mga_driver_dma_quiescent--*/
int mga_warp_install_microcode ( drm_mga_private_t * dev_priv ) ; 
/*--mga_warp_install_microcode--*/
int mga_warp_init ( drm_mga_private_t * dev_priv ) ; 
/*--mga_warp_init--*/
u32 mga_get_vblank_counter ( struct drm_device * dev , int crtc ) ; 
/*--mga_get_vblank_counter--*/
irqreturn_t mga_driver_irq_handler ( int irq , void * arg ) ; 
/*--mga_driver_irq_handler--*/
int mga_enable_vblank ( struct drm_device * dev , int crtc ) ; 
/*--mga_enable_vblank--*/
void mga_disable_vblank ( struct drm_device * dev , int crtc ) ; 
/*--mga_disable_vblank--*/
int mga_driver_fence_wait ( struct drm_device * dev , unsigned int * sequence ) ; 
/*--mga_driver_fence_wait--*/
void mga_driver_irq_preinstall ( struct drm_device * dev ) ; 
/*--mga_driver_irq_preinstall--*/
int mga_driver_irq_postinstall ( struct drm_device * dev ) ; 
/*--mga_driver_irq_postinstall--*/
void mga_driver_irq_uninstall ( struct drm_device * dev ) ; 
/*--mga_driver_irq_uninstall--*/
long mga_compat_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--mga_compat_ioctl--*/
int nouveau_pci_suspend ( struct pci_dev * pdev , pm_message_t pm_state ) ; 
/*--nouveau_pci_suspend--*/
int nouveau_pci_resume ( struct pci_dev * pdev ) ; 
/*--nouveau_pci_resume--*/
int nouveau_card_init ( struct drm_device * dev ) ; 
/*--nouveau_card_init--*/
void nouveau_preclose ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--nouveau_preclose--*/
int nouveau_firstopen ( struct drm_device * dev ) ; 
/*--nouveau_firstopen--*/
int nouveau_load ( struct drm_device * dev , unsigned long flags ) ; 
/*--nouveau_load--*/
void nouveau_lastclose ( struct drm_device * dev ) ; 
/*--nouveau_lastclose--*/
int nouveau_unload ( struct drm_device * dev ) ; 
/*--nouveau_unload--*/
int nouveau_ioctl_getparam ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_ioctl_getparam--*/
int nouveau_ioctl_setparam ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_ioctl_setparam--*/
bool nouveau_wait_until ( struct drm_device * dev , uint64_t timeout , uint32_t reg , uint32_t mask , uint32_t val ) ; 
/*--nouveau_wait_until--*/
bool nouveau_wait_for_idle ( struct drm_device * dev ) ; 
/*--nouveau_wait_for_idle--*/
int nouveau_channel_alloc ( struct drm_device * dev , struct nouveau_channel * * chan_ret , struct drm_file * file_priv , uint32_t vram_handle , uint32_t tt_handle ) ; 
/*--nouveau_channel_alloc--*/
void nouveau_channel_free ( struct nouveau_channel * chan ) ; 
/*--nouveau_channel_free--*/
void nouveau_channel_cleanup ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--nouveau_channel_cleanup--*/
int nouveau_channel_owner ( struct drm_device * dev , struct drm_file * file_priv , int channel ) ; 
/*--nouveau_channel_owner--*/
struct mem_block * nouveau_mem_alloc_block ( struct mem_block * heap , uint64_t size , int align2 , struct drm_file * file_priv , int tail ) ; 
/*--nouveau_mem_alloc_block--*/
void nouveau_mem_free_block ( struct mem_block * p ) ; 
/*--nouveau_mem_free_block--*/
int nouveau_mem_init_heap ( struct mem_block * * heap , uint64_t start , uint64_t size ) ; 
/*--nouveau_mem_init_heap--*/
void nouveau_mem_release ( struct drm_file * file_priv , struct mem_block * heap ) ; 
/*--nouveau_mem_release--*/
struct nouveau_tile_reg * nv10_mem_set_tiling ( struct drm_device * dev , uint32_t addr , uint32_t size , uint32_t pitch ) ; 
/*--nv10_mem_set_tiling--*/
void nv10_mem_expire_tiling ( struct drm_device * dev , struct nouveau_tile_reg * tile , struct nouveau_fence * fence ) ; 
/*--nv10_mem_expire_tiling--*/
int nv50_mem_vm_bind_linear ( struct drm_device * dev , uint64_t virt , uint32_t size , uint32_t flags , uint64_t phys ) ; 
/*--nv50_mem_vm_bind_linear--*/
void nv50_mem_vm_unbind ( struct drm_device * dev , uint64_t virt , uint32_t size ) ; 
/*--nv50_mem_vm_unbind--*/
void nouveau_mem_takedown ( struct mem_block * * heap ) ; 
/*--nouveau_mem_takedown--*/
void nouveau_mem_close ( struct drm_device * dev ) ; 
/*--nouveau_mem_close--*/
int nouveau_mem_detect ( struct drm_device * dev ) ; 
/*--nouveau_mem_detect--*/
int nouveau_mem_init_agp ( struct drm_device * dev ) ; 
/*--nouveau_mem_init_agp--*/
int nouveau_mem_init ( struct drm_device * dev ) ; 
/*--nouveau_mem_init--*/
int nouveau_gpuobj_new ( struct drm_device * dev , struct nouveau_channel * chan , uint32_t size , int align , uint32_t flags , struct nouveau_gpuobj * * gpuobj_ret ) ; 
/*--nouveau_gpuobj_new--*/
int nouveau_gpuobj_early_init ( struct drm_device * dev ) ; 
/*--nouveau_gpuobj_early_init--*/
int nouveau_gpuobj_init ( struct drm_device * dev ) ; 
/*--nouveau_gpuobj_init--*/
void nouveau_gpuobj_takedown ( struct drm_device * dev ) ; 
/*--nouveau_gpuobj_takedown--*/
void nouveau_gpuobj_late_takedown ( struct drm_device * dev ) ; 
/*--nouveau_gpuobj_late_takedown--*/
int nouveau_gpuobj_del ( struct drm_device * dev , struct nouveau_gpuobj * * pgpuobj ) ; 
/*--nouveau_gpuobj_del--*/
int nouveau_gpuobj_ref_add ( struct drm_device * dev , struct nouveau_channel * chan , uint32_t handle , struct nouveau_gpuobj * gpuobj , struct nouveau_gpuobj_ref * * ref_ret ) ; 
/*--nouveau_gpuobj_ref_add--*/
int nouveau_gpuobj_ref_del ( struct drm_device * dev , struct nouveau_gpuobj_ref * * pref ) ; 
/*--nouveau_gpuobj_ref_del--*/
int nouveau_gpuobj_new_ref ( struct drm_device * dev , struct nouveau_channel * oc , struct nouveau_channel * rc , uint32_t handle , uint32_t size , int align , uint32_t flags , struct nouveau_gpuobj_ref * * ref ) ; 
/*--nouveau_gpuobj_new_ref--*/
int nouveau_gpuobj_ref_find ( struct nouveau_channel * chan , uint32_t handle , struct nouveau_gpuobj_ref * * ref_ret ) ; 
/*--nouveau_gpuobj_ref_find--*/
int nouveau_gpuobj_new_fake ( struct drm_device * dev , uint32_t p_offset , uint32_t b_offset , uint32_t size , uint32_t flags , struct nouveau_gpuobj * * pgpuobj , struct nouveau_gpuobj_ref * * pref ) ; 
/*--nouveau_gpuobj_new_fake--*/
int nouveau_gpuobj_dma_new ( struct nouveau_channel * chan , int class , uint64_t offset , uint64_t size , int access , int target , struct nouveau_gpuobj * * gpuobj ) ; 
/*--nouveau_gpuobj_dma_new--*/
int nouveau_gpuobj_gart_dma_new ( struct nouveau_channel * chan , uint64_t offset , uint64_t size , int access , struct nouveau_gpuobj * * gpuobj , uint32_t * o_ret ) ; 
/*--nouveau_gpuobj_gart_dma_new--*/
int nouveau_gpuobj_gr_new ( struct nouveau_channel * chan , int class , struct nouveau_gpuobj * * gpuobj ) ; 
/*--nouveau_gpuobj_gr_new--*/
int nouveau_gpuobj_sw_new ( struct nouveau_channel * chan , int class , struct nouveau_gpuobj * * gpuobj_ret ) ; 
/*--nouveau_gpuobj_sw_new--*/
int nouveau_gpuobj_channel_init ( struct nouveau_channel * chan , uint32_t vram_h , uint32_t tt_h ) ; 
/*--nouveau_gpuobj_channel_init--*/
void nouveau_gpuobj_channel_takedown ( struct nouveau_channel * chan ) ; 
/*--nouveau_gpuobj_channel_takedown--*/
int nouveau_gpuobj_suspend ( struct drm_device * dev ) ; 
/*--nouveau_gpuobj_suspend--*/
void nouveau_gpuobj_suspend_cleanup ( struct drm_device * dev ) ; 
/*--nouveau_gpuobj_suspend_cleanup--*/
void nouveau_gpuobj_resume ( struct drm_device * dev ) ; 
/*--nouveau_gpuobj_resume--*/
int nouveau_ioctl_grobj_alloc ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_ioctl_grobj_alloc--*/
int nouveau_ioctl_gpuobj_free ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_ioctl_gpuobj_free--*/
void nouveau_irq_preinstall ( struct drm_device * dev ) ; 
/*--nouveau_irq_preinstall--*/
int nouveau_irq_postinstall ( struct drm_device * dev ) ; 
/*--nouveau_irq_postinstall--*/
void nouveau_irq_uninstall ( struct drm_device * dev ) ; 
/*--nouveau_irq_uninstall--*/
irqreturn_t nouveau_irq_handler ( int irq , void * arg ) ; 
/*--nouveau_irq_handler--*/
int nouveau_notifier_init_channel ( struct nouveau_channel * chan ) ; 
/*--nouveau_notifier_init_channel--*/
void nouveau_notifier_takedown_channel ( struct nouveau_channel * chan ) ; 
/*--nouveau_notifier_takedown_channel--*/
int nouveau_notifier_alloc ( struct nouveau_channel * chan , uint32_t handle , int size , uint32_t * b_offset ) ; 
/*--nouveau_notifier_alloc--*/
int nouveau_notifier_offset ( struct nouveau_gpuobj * nobj , uint32_t * poffset ) ; 
/*--nouveau_notifier_offset--*/
int nouveau_ioctl_notifier_alloc ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_ioctl_notifier_alloc--*/
struct ttm_backend * nouveau_sgdma_init_ttm ( struct drm_device * dev ) ; 
/*--nouveau_sgdma_init_ttm--*/
int nouveau_sgdma_init ( struct drm_device * dev ) ; 
/*--nouveau_sgdma_init--*/
void nouveau_sgdma_takedown ( struct drm_device * dev ) ; 
/*--nouveau_sgdma_takedown--*/
int nouveau_sgdma_get_page ( struct drm_device * dev , uint32_t offset , uint32_t * page ) ; 
/*--nouveau_sgdma_get_page--*/
void nouveau_dma_pre_init ( struct nouveau_channel * chan ) ; 
/*--nouveau_dma_pre_init--*/
int nouveau_dma_init ( struct nouveau_channel * chan ) ; 
/*--nouveau_dma_init--*/
void OUT_RINGp ( struct nouveau_channel * chan , const void * data , unsigned nr_dwords ) ; 
/*--OUT_RINGp--*/
void nv50_dma_push ( struct nouveau_channel * chan , struct nouveau_bo * bo , int delta , int length ) ; 
/*--nv50_dma_push--*/
int nouveau_dma_wait ( struct nouveau_channel * chan , int slots , int size ) ; 
/*--nouveau_dma_wait--*/
int nouveau_bo_new ( struct drm_device * dev , struct nouveau_channel * chan , int size , int align , uint32_t flags , uint32_t tile_mode , uint32_t tile_flags , bool no_vm , bool mappable , struct nouveau_bo * * pnvbo ) ; 
/*--nouveau_bo_new--*/
void nouveau_bo_placement_set ( struct nouveau_bo * nvbo , uint32_t type , uint32_t busy ) ; 
/*--nouveau_bo_placement_set--*/
int nouveau_bo_pin ( struct nouveau_bo * nvbo , uint32_t memtype ) ; 
/*--nouveau_bo_pin--*/
int nouveau_bo_unpin ( struct nouveau_bo * nvbo ) ; 
/*--nouveau_bo_unpin--*/
int nouveau_bo_map ( struct nouveau_bo * nvbo ) ; 
/*--nouveau_bo_map--*/
void nouveau_bo_unmap ( struct nouveau_bo * nvbo ) ; 
/*--nouveau_bo_unmap--*/
u16 nouveau_bo_rd16 ( struct nouveau_bo * nvbo , unsigned index ) ; 
/*--nouveau_bo_rd16--*/
void nouveau_bo_wr16 ( struct nouveau_bo * nvbo , unsigned index , u16 val ) ; 
/*--nouveau_bo_wr16--*/
u32 nouveau_bo_rd32 ( struct nouveau_bo * nvbo , unsigned index ) ; 
/*--nouveau_bo_rd32--*/
void nouveau_bo_wr32 ( struct nouveau_bo * nvbo , unsigned index , u32 val ) ; 
/*--nouveau_bo_wr32--*/
void nouveau_fence_update ( struct nouveau_channel * chan ) ; 
/*--nouveau_fence_update--*/
int nouveau_fence_new ( struct nouveau_channel * chan , struct nouveau_fence * * pfence , bool emit ) ; 
/*--nouveau_fence_new--*/
struct nouveau_channel * nouveau_fence_channel ( struct nouveau_fence * fence ) ; 
/*--nouveau_fence_channel--*/
int nouveau_fence_emit ( struct nouveau_fence * fence ) ; 
/*--nouveau_fence_emit--*/
void nouveau_fence_unref ( void * * sync_obj ) ; 
/*--nouveau_fence_unref--*/
void * nouveau_fence_ref ( void * sync_obj ) ; 
/*--nouveau_fence_ref--*/
bool nouveau_fence_signalled ( void * sync_obj , void * sync_arg ) ; 
/*--nouveau_fence_signalled--*/
int nouveau_fence_wait ( void * sync_obj , void * sync_arg , bool lazy , bool intr ) ; 
/*--nouveau_fence_wait--*/
int nouveau_fence_flush ( void * sync_obj , void * sync_arg ) ; 
/*--nouveau_fence_flush--*/
void nouveau_fence_handler ( struct drm_device * dev , int channel ) ; 
/*--nouveau_fence_handler--*/
int nouveau_fence_init ( struct nouveau_channel * chan ) ; 
/*--nouveau_fence_init--*/
void nouveau_fence_fini ( struct nouveau_channel * chan ) ; 
/*--nouveau_fence_fini--*/
int nouveau_gem_object_new ( struct drm_gem_object * gem ) ; 
/*--nouveau_gem_object_new--*/
void nouveau_gem_object_del ( struct drm_gem_object * gem ) ; 
/*--nouveau_gem_object_del--*/
int nouveau_gem_new ( struct drm_device * dev , struct nouveau_channel * chan , int size , int align , uint32_t flags , uint32_t tile_mode , uint32_t tile_flags , bool no_vm , bool mappable , struct nouveau_bo * * pnvbo ) ; 
/*--nouveau_gem_new--*/
int nouveau_gem_ioctl_new ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_gem_ioctl_new--*/
int nouveau_gem_ioctl_pushbuf ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_gem_ioctl_pushbuf--*/
int nouveau_gem_ioctl_cpu_prep ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_gem_ioctl_cpu_prep--*/
int nouveau_gem_ioctl_cpu_fini ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_gem_ioctl_cpu_fini--*/
int nouveau_gem_ioctl_info ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--nouveau_gem_ioctl_info--*/
int nouveau_ttm_mmap ( struct file * filp , struct vm_area_struct * vma ) ; 
/*--nouveau_ttm_mmap--*/
int nouveau_ttm_global_init ( struct drm_nouveau_private * dev_priv ) ; 
/*--nouveau_ttm_global_init--*/
void nouveau_ttm_global_release ( struct drm_nouveau_private * dev_priv ) ; 
/*--nouveau_ttm_global_release--*/
void NVWriteVgaSeq ( struct drm_device * dev , int head , uint8_t index , uint8_t value ) ; 
/*--NVWriteVgaSeq--*/
uint8_t NVReadVgaSeq ( struct drm_device * dev , int head , uint8_t index ) ; 
/*--NVReadVgaSeq--*/
void NVWriteVgaGr ( struct drm_device * dev , int head , uint8_t index , uint8_t value ) ; 
/*--NVWriteVgaGr--*/
uint8_t NVReadVgaGr ( struct drm_device * dev , int head , uint8_t index ) ; 
/*--NVReadVgaGr--*/
void NVSetOwner ( struct drm_device * dev , int owner ) ; 
/*--NVSetOwner--*/
void NVBlankScreen ( struct drm_device * dev , int head , bool blank ) ; 
/*--NVBlankScreen--*/
void nouveau_hw_setpll ( struct drm_device * dev , uint32_t reg1 , struct nouveau_pll_vals * pv ) ; 
/*--nouveau_hw_setpll--*/
int nouveau_hw_get_pllvals ( struct drm_device * dev , enum pll_types plltype , struct nouveau_pll_vals * pllvals ) ; 
/*--nouveau_hw_get_pllvals--*/
int nouveau_hw_pllvals_to_clk ( struct nouveau_pll_vals * pv ) ; 
/*--nouveau_hw_pllvals_to_clk--*/
int nouveau_hw_get_clock ( struct drm_device * dev , enum pll_types plltype ) ; 
/*--nouveau_hw_get_clock--*/
void nouveau_hw_save_vga_fonts ( struct drm_device * dev , bool save ) ; 
/*--nouveau_hw_save_vga_fonts--*/
void nouveau_hw_load_state_palette ( struct drm_device * dev , int head , struct nv04_mode_state * state ) ; 
/*--nouveau_hw_load_state_palette--*/
void nouveau_hw_save_state ( struct drm_device * dev , int head , struct nv04_mode_state * state ) ; 
/*--nouveau_hw_save_state--*/
void nouveau_hw_load_state ( struct drm_device * dev , int head , struct nv04_mode_state * state ) ; 
/*--nouveau_hw_load_state--*/
void nouveau_calc_arb ( struct drm_device * dev , int vclk , int bpp , int * burst , int * lwm ) ; 
/*--nouveau_calc_arb--*/
int nouveau_calc_pll_mnp ( struct drm_device * dev , struct pll_lims * pll_lim , int clk , struct nouveau_pll_vals * pv ) ; 
/*--nouveau_calc_pll_mnp--*/
int call_lvds_script ( struct drm_device * dev , struct dcb_entry * dcbent , int head , enum LVDS_script script , int pxclk ) ; 
/*--call_lvds_script--*/
bool nouveau_bios_fp_mode ( struct drm_device * dev , struct drm_display_mode * mode ) ; 
/*--nouveau_bios_fp_mode--*/
int nouveau_bios_parse_lvds_table ( struct drm_device * dev , int pxclk , bool * dl , bool * if_is_24bit ) ; 
/*--nouveau_bios_parse_lvds_table--*/
void * nouveau_bios_dp_table ( struct drm_device * dev , struct dcb_entry * dcbent , int * length ) ; 
/*--nouveau_bios_dp_table--*/
int nouveau_bios_run_display_table ( struct drm_device * dev , struct dcb_entry * dcbent , uint32_t sub , int pxclk ) ; 
/*--nouveau_bios_run_display_table--*/
int run_tmds_table ( struct drm_device * dev , struct dcb_entry * dcbent , int head , int pxclk ) ; 
/*--run_tmds_table--*/
int get_pll_limits ( struct drm_device * dev , uint32_t limit_match , struct pll_lims * pll_lim ) ; 
/*--get_pll_limits--*/
struct dcb_gpio_entry * nouveau_bios_gpio_entry ( struct drm_device * dev , enum dcb_gpio_tag tag ) ; 
/*--nouveau_bios_gpio_entry--*/
struct dcb_connector_table_entry * nouveau_bios_connector_entry ( struct drm_device * dev , int index ) ; 
/*--nouveau_bios_connector_entry--*/
uint8_t * nouveau_bios_embedded_edid ( struct drm_device * dev ) ; 
/*--nouveau_bios_embedded_edid--*/
void nouveau_bios_run_init_table ( struct drm_device * dev , uint16_t table , struct dcb_entry * dcbent ) ; 
/*--nouveau_bios_run_init_table--*/
int nouveau_run_vbios_init ( struct drm_device * dev ) ; 
/*--nouveau_run_vbios_init--*/
int nouveau_bios_init ( struct drm_device * dev ) ; 
/*--nouveau_bios_init--*/
void nouveau_bios_takedown ( struct drm_device * dev ) ; 
/*--nouveau_bios_takedown--*/
int nouveau_i2c_init ( struct drm_device * dev , struct dcb_i2c_entry * entry , int index ) ; 
/*--nouveau_i2c_init--*/
void nouveau_i2c_fini ( struct drm_device * dev , struct dcb_i2c_entry * entry ) ; 
/*--nouveau_i2c_fini--*/
struct nouveau_i2c_chan * nouveau_i2c_find ( struct drm_device * dev , int index ) ; 
/*--nouveau_i2c_find--*/
int nouveau_framebuffer_init ( struct drm_device * dev , struct nouveau_framebuffer * nouveau_fb , struct drm_mode_fb_cmd * mode_cmd , struct nouveau_bo * nvbo ) ; 
/*--nouveau_framebuffer_init--*/
struct nouveau_connector * nouveau_encoder_connector_get ( struct nouveau_encoder * encoder ) ; 
/*--nouveau_encoder_connector_get--*/
int nouveau_connector_create ( struct drm_device * dev , struct dcb_connector_table_entry * dcb ) ; 
/*--nouveau_connector_create--*/
void nouveau_fbcon_output_poll_changed ( struct drm_device * dev ) ; 
/*--nouveau_fbcon_output_poll_changed--*/
int nouveau_fbcon_destroy ( struct drm_device * dev , struct nouveau_fbdev * nfbdev ) ; 
/*--nouveau_fbcon_destroy--*/
void nouveau_fbcon_gpu_lockup ( struct fb_info * info ) ; 
/*--nouveau_fbcon_gpu_lockup--*/
int nouveau_fbcon_init ( struct drm_device * dev ) ; 
/*--nouveau_fbcon_init--*/
void nouveau_fbcon_fini ( struct drm_device * dev ) ; 
/*--nouveau_fbcon_fini--*/
void nouveau_fbcon_save_disable_accel ( struct drm_device * dev ) ; 
/*--nouveau_fbcon_save_disable_accel--*/
void nouveau_fbcon_restore_accel ( struct drm_device * dev ) ; 
/*--nouveau_fbcon_restore_accel--*/
void nouveau_fbcon_set_suspend ( struct drm_device * dev , int state ) ; 
/*--nouveau_fbcon_set_suspend--*/
void nouveau_fbcon_zfill_all ( struct drm_device * dev ) ; 
/*--nouveau_fbcon_zfill_all--*/
bool nouveau_dp_link_train ( struct drm_encoder * encoder ) ; 
/*--nouveau_dp_link_train--*/
bool nouveau_dp_detect ( struct drm_encoder * encoder ) ; 
/*--nouveau_dp_detect--*/
int nouveau_dp_auxch ( struct nouveau_i2c_chan * auxch , int cmd , int addr , uint8_t * data , int data_nr ) ; 
/*--nouveau_dp_auxch--*/
int nouveau_dp_i2c_aux_ch ( struct i2c_adapter * adapter , int mode , uint8_t write_byte , uint8_t * read_byte ) ; 
/*--nouveau_dp_i2c_aux_ch--*/
int nouveau_grctx_prog_load ( struct drm_device * dev ) ; 
/*--nouveau_grctx_prog_load--*/
void nouveau_grctx_fini ( struct drm_device * dev ) ; 
/*--nouveau_grctx_fini--*/
void nouveau_grctx_vals_load ( struct drm_device * dev , struct nouveau_gpuobj * ctx ) ; 
/*--nouveau_grctx_vals_load--*/
int nv04_timer_init ( struct drm_device * dev ) ; 
/*--nv04_timer_init--*/
uint64_t nv04_timer_read ( struct drm_device * dev ) ; 
/*--nv04_timer_read--*/
void nv04_timer_takedown ( struct drm_device * dev ) ; 
/*--nv04_timer_takedown--*/
int nv04_mc_init ( struct drm_device * dev ) ; 
/*--nv04_mc_init--*/
void nv04_mc_takedown ( struct drm_device * dev ) ; 
/*--nv04_mc_takedown--*/
int nv40_mc_init ( struct drm_device * dev ) ; 
/*--nv40_mc_init--*/
void nv40_mc_takedown ( struct drm_device * dev ) ; 
/*--nv40_mc_takedown--*/
int nv50_mc_init ( struct drm_device * dev ) ; 
/*--nv50_mc_init--*/
void nv50_mc_takedown ( struct drm_device * dev ) ; 
/*--nv50_mc_takedown--*/
int nv04_fb_init ( struct drm_device * dev ) ; 
/*--nv04_fb_init--*/
void nv04_fb_takedown ( struct drm_device * dev ) ; 
/*--nv04_fb_takedown--*/
void nv10_fb_set_region_tiling ( struct drm_device * dev , int i , uint32_t addr , uint32_t size , uint32_t pitch ) ; 
/*--nv10_fb_set_region_tiling--*/
int nv10_fb_init ( struct drm_device * dev ) ; 
/*--nv10_fb_init--*/
void nv10_fb_takedown ( struct drm_device * dev ) ; 
/*--nv10_fb_takedown--*/
void nv40_fb_set_region_tiling ( struct drm_device * dev , int i , uint32_t addr , uint32_t size , uint32_t pitch ) ; 
/*--nv40_fb_set_region_tiling--*/
int nv40_fb_init ( struct drm_device * dev ) ; 
/*--nv40_fb_init--*/
void nv40_fb_takedown ( struct drm_device * dev ) ; 
/*--nv40_fb_takedown--*/
int nv50_fb_init ( struct drm_device * dev ) ; 
/*--nv50_fb_init--*/
void nv50_fb_takedown ( struct drm_device * dev ) ; 
/*--nv50_fb_takedown--*/
void nv04_fifo_disable ( struct drm_device * dev ) ; 
/*--nv04_fifo_disable--*/
void nv04_fifo_enable ( struct drm_device * dev ) ; 
/*--nv04_fifo_enable--*/
bool nv04_fifo_reassign ( struct drm_device * dev , bool enable ) ; 
/*--nv04_fifo_reassign--*/
bool nv04_fifo_cache_flush ( struct drm_device * dev ) ; 
/*--nv04_fifo_cache_flush--*/
bool nv04_fifo_cache_pull ( struct drm_device * dev , bool enable ) ; 
/*--nv04_fifo_cache_pull--*/
int nv04_fifo_channel_id ( struct drm_device * dev ) ; 
/*--nv04_fifo_channel_id--*/
int nv04_fifo_create_context ( struct nouveau_channel * chan ) ; 
/*--nv04_fifo_create_context--*/
void nv04_fifo_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv04_fifo_destroy_context--*/
int nv04_fifo_load_context ( struct nouveau_channel * chan ) ; 
/*--nv04_fifo_load_context--*/
int nv04_fifo_unload_context ( struct drm_device * dev ) ; 
/*--nv04_fifo_unload_context--*/
int nv04_fifo_init ( struct drm_device * dev ) ; 
/*--nv04_fifo_init--*/
int nv10_fifo_channel_id ( struct drm_device * dev ) ; 
/*--nv10_fifo_channel_id--*/
int nv10_fifo_create_context ( struct nouveau_channel * chan ) ; 
/*--nv10_fifo_create_context--*/
void nv10_fifo_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv10_fifo_destroy_context--*/
int nv10_fifo_load_context ( struct nouveau_channel * chan ) ; 
/*--nv10_fifo_load_context--*/
int nv10_fifo_unload_context ( struct drm_device * dev ) ; 
/*--nv10_fifo_unload_context--*/
int nv10_fifo_init ( struct drm_device * dev ) ; 
/*--nv10_fifo_init--*/
int nv40_fifo_create_context ( struct nouveau_channel * chan ) ; 
/*--nv40_fifo_create_context--*/
void nv40_fifo_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv40_fifo_destroy_context--*/
int nv40_fifo_load_context ( struct nouveau_channel * chan ) ; 
/*--nv40_fifo_load_context--*/
int nv40_fifo_unload_context ( struct drm_device * dev ) ; 
/*--nv40_fifo_unload_context--*/
int nv40_fifo_init ( struct drm_device * dev ) ; 
/*--nv40_fifo_init--*/
int nv50_fifo_init ( struct drm_device * dev ) ; 
/*--nv50_fifo_init--*/
void nv50_fifo_takedown ( struct drm_device * dev ) ; 
/*--nv50_fifo_takedown--*/
int nv50_fifo_channel_id ( struct drm_device * dev ) ; 
/*--nv50_fifo_channel_id--*/
int nv50_fifo_create_context ( struct nouveau_channel * chan ) ; 
/*--nv50_fifo_create_context--*/
void nv50_fifo_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv50_fifo_destroy_context--*/
int nv50_fifo_load_context ( struct nouveau_channel * chan ) ; 
/*--nv50_fifo_load_context--*/
int nv50_fifo_unload_context ( struct drm_device * dev ) ; 
/*--nv50_fifo_unload_context--*/
struct nouveau_channel * nv04_graph_channel ( struct drm_device * dev ) ; 
/*--nv04_graph_channel--*/
void nv04_graph_context_switch ( struct drm_device * dev ) ; 
/*--nv04_graph_context_switch--*/
int nv04_graph_create_context ( struct nouveau_channel * chan ) ; 
/*--nv04_graph_create_context--*/
void nv04_graph_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv04_graph_destroy_context--*/
int nv04_graph_load_context ( struct nouveau_channel * chan ) ; 
/*--nv04_graph_load_context--*/
int nv04_graph_unload_context ( struct drm_device * dev ) ; 
/*--nv04_graph_unload_context--*/
int nv04_graph_init ( struct drm_device * dev ) ; 
/*--nv04_graph_init--*/
void nv04_graph_takedown ( struct drm_device * dev ) ; 
/*--nv04_graph_takedown--*/
void nv04_graph_fifo_access ( struct drm_device * dev , bool enabled ) ; 
/*--nv04_graph_fifo_access--*/
int nv10_graph_load_context ( struct nouveau_channel * chan ) ; 
/*--nv10_graph_load_context--*/
int nv10_graph_unload_context ( struct drm_device * dev ) ; 
/*--nv10_graph_unload_context--*/
void nv10_graph_context_switch ( struct drm_device * dev ) ; 
/*--nv10_graph_context_switch--*/
struct nouveau_channel * nv10_graph_channel ( struct drm_device * dev ) ; 
/*--nv10_graph_channel--*/
int nv10_graph_create_context ( struct nouveau_channel * chan ) ; 
/*--nv10_graph_create_context--*/
void nv10_graph_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv10_graph_destroy_context--*/
void nv10_graph_set_region_tiling ( struct drm_device * dev , int i , uint32_t addr , uint32_t size , uint32_t pitch ) ; 
/*--nv10_graph_set_region_tiling--*/
int nv10_graph_init ( struct drm_device * dev ) ; 
/*--nv10_graph_init--*/
void nv10_graph_takedown ( struct drm_device * dev ) ; 
/*--nv10_graph_takedown--*/
int nv20_graph_create_context ( struct nouveau_channel * chan ) ; 
/*--nv20_graph_create_context--*/
void nv20_graph_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv20_graph_destroy_context--*/
int nv20_graph_load_context ( struct nouveau_channel * chan ) ; 
/*--nv20_graph_load_context--*/
int nv20_graph_unload_context ( struct drm_device * dev ) ; 
/*--nv20_graph_unload_context--*/
void nv20_graph_set_region_tiling ( struct drm_device * dev , int i , uint32_t addr , uint32_t size , uint32_t pitch ) ; 
/*--nv20_graph_set_region_tiling--*/
int nv20_graph_init ( struct drm_device * dev ) ; 
/*--nv20_graph_init--*/
void nv20_graph_takedown ( struct drm_device * dev ) ; 
/*--nv20_graph_takedown--*/
int nv30_graph_init ( struct drm_device * dev ) ; 
/*--nv30_graph_init--*/
struct nouveau_channel * nv40_graph_channel ( struct drm_device * dev ) ; 
/*--nv40_graph_channel--*/
int nv40_graph_create_context ( struct nouveau_channel * chan ) ; 
/*--nv40_graph_create_context--*/
void nv40_graph_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv40_graph_destroy_context--*/
int nv40_graph_load_context ( struct nouveau_channel * chan ) ; 
/*--nv40_graph_load_context--*/
int nv40_graph_unload_context ( struct drm_device * dev ) ; 
/*--nv40_graph_unload_context--*/
void nv40_graph_set_region_tiling ( struct drm_device * dev , int i , uint32_t addr , uint32_t size , uint32_t pitch ) ; 
/*--nv40_graph_set_region_tiling--*/
int nv40_graph_init ( struct drm_device * dev ) ; 
/*--nv40_graph_init--*/
void nv40_graph_takedown ( struct drm_device * dev ) ; 
/*--nv40_graph_takedown--*/
int nv50_graph_init ( struct drm_device * dev ) ; 
/*--nv50_graph_init--*/
void nv50_graph_takedown ( struct drm_device * dev ) ; 
/*--nv50_graph_takedown--*/
void nv50_graph_fifo_access ( struct drm_device * dev , bool enabled ) ; 
/*--nv50_graph_fifo_access--*/
struct nouveau_channel * nv50_graph_channel ( struct drm_device * dev ) ; 
/*--nv50_graph_channel--*/
int nv50_graph_create_context ( struct nouveau_channel * chan ) ; 
/*--nv50_graph_create_context--*/
void nv50_graph_destroy_context ( struct nouveau_channel * chan ) ; 
/*--nv50_graph_destroy_context--*/
int nv50_graph_load_context ( struct nouveau_channel * chan ) ; 
/*--nv50_graph_load_context--*/
int nv50_graph_unload_context ( struct drm_device * dev ) ; 
/*--nv50_graph_unload_context--*/
void nv50_graph_context_switch ( struct drm_device * dev ) ; 
/*--nv50_graph_context_switch--*/
void nv40_grctx_init ( struct nouveau_grctx * ctx ) ; 
/*--nv40_grctx_init--*/
int nv50_grctx_init ( struct nouveau_grctx * ctx ) ; 
/*--nv50_grctx_init--*/
int nv04_instmem_init ( struct drm_device * dev ) ; 
/*--nv04_instmem_init--*/
void nv04_instmem_takedown ( struct drm_device * dev ) ; 
/*--nv04_instmem_takedown--*/
int nv04_instmem_populate ( struct drm_device * dev , struct nouveau_gpuobj * gpuobj , uint32_t * sz ) ; 
/*--nv04_instmem_populate--*/
void nv04_instmem_clear ( struct drm_device * dev , struct nouveau_gpuobj * gpuobj ) ; 
/*--nv04_instmem_clear--*/
int nv04_instmem_bind ( struct drm_device * dev , struct nouveau_gpuobj * gpuobj ) ; 
/*--nv04_instmem_bind--*/
int nv04_instmem_unbind ( struct drm_device * dev , struct nouveau_gpuobj * gpuobj ) ; 
/*--nv04_instmem_unbind--*/
void nv04_instmem_prepare_access ( struct drm_device * dev , bool write ) ; 
/*--nv04_instmem_prepare_access--*/
void nv04_instmem_finish_access ( struct drm_device * dev ) ; 
/*--nv04_instmem_finish_access--*/
int nv04_instmem_suspend ( struct drm_device * dev ) ; 
/*--nv04_instmem_suspend--*/
void nv04_instmem_resume ( struct drm_device * dev ) ; 
/*--nv04_instmem_resume--*/
int nv50_instmem_init ( struct drm_device * dev ) ; 
/*--nv50_instmem_init--*/
void nv50_instmem_takedown ( struct drm_device * dev ) ; 
/*--nv50_instmem_takedown--*/
int nv50_instmem_suspend ( struct drm_device * dev ) ; 
/*--nv50_instmem_suspend--*/
void nv50_instmem_resume ( struct drm_device * dev ) ; 
/*--nv50_instmem_resume--*/
int nv50_instmem_populate ( struct drm_device * dev , struct nouveau_gpuobj * gpuobj , uint32_t * sz ) ; 
/*--nv50_instmem_populate--*/
void nv50_instmem_clear ( struct drm_device * dev , struct nouveau_gpuobj * gpuobj ) ; 
/*--nv50_instmem_clear--*/
int nv50_instmem_bind ( struct drm_device * dev , struct nouveau_gpuobj * gpuobj ) ; 
/*--nv50_instmem_bind--*/
int nv50_instmem_unbind ( struct drm_device * dev , struct nouveau_gpuobj * gpuobj ) ; 
/*--nv50_instmem_unbind--*/
void nv50_instmem_prepare_access ( struct drm_device * dev , bool write ) ; 
/*--nv50_instmem_prepare_access--*/
void nv50_instmem_finish_access ( struct drm_device * dev ) ; 
/*--nv50_instmem_finish_access--*/
int nv50_crtc_blank ( struct nouveau_crtc * nv_crtc , bool blanked ) ; 
/*--nv50_crtc_blank--*/
struct nouveau_connector * nouveau_crtc_connector_get ( struct nouveau_crtc * nv_crtc ) ; 
/*--nouveau_crtc_connector_get--*/
int nv50_crtc_set_clock ( struct drm_device * dev , int head , int pclk ) ; 
/*--nv50_crtc_set_clock--*/
int nv50_crtc_cursor_set ( struct drm_crtc * crtc , struct drm_file * file_priv , uint32_t buffer_handle , uint32_t width , uint32_t height ) ; 
/*--nv50_crtc_cursor_set--*/
int nv50_crtc_cursor_move ( struct drm_crtc * crtc , int x , int y ) ; 
/*--nv50_crtc_cursor_move--*/
int nv50_crtc_create ( struct drm_device * dev , int index ) ; 
/*--nv50_crtc_create--*/
int nv50_dac_create ( struct drm_device * dev , struct dcb_entry * entry ) ; 
/*--nv50_dac_create--*/
int nv50_sor_create ( struct drm_device * dev , struct dcb_entry * entry ) ; 
/*--nv50_sor_create--*/
int nv50_cursor_init ( struct nouveau_crtc * nv_crtc ) ; 
/*--nv50_cursor_init--*/
void nv50_cursor_fini ( struct nouveau_crtc * nv_crtc ) ; 
/*--nv50_cursor_fini--*/
int nv50_display_init ( struct drm_device * dev ) ; 
/*--nv50_display_init--*/
int nv50_display_create ( struct drm_device * dev ) ; 
/*--nv50_display_create--*/
int nv50_display_destroy ( struct drm_device * dev ) ; 
/*--nv50_display_destroy--*/
void nv50_display_irq_handler_bh ( struct work_struct * work ) ; 
/*--nv50_display_irq_handler_bh--*/
void nv50_display_irq_hotplug_bh ( struct work_struct * work ) ; 
/*--nv50_display_irq_hotplug_bh--*/
void nv50_display_irq_handler ( struct drm_device * dev ) ; 
/*--nv50_display_irq_handler--*/
void nv50_fbcon_fillrect ( struct fb_info * info , const struct fb_fillrect * rect ) ; 
/*--nv50_fbcon_fillrect--*/
void nv50_fbcon_copyarea ( struct fb_info * info , const struct fb_copyarea * region ) ; 
/*--nv50_fbcon_copyarea--*/
void nv50_fbcon_imageblit ( struct fb_info * info , const struct fb_image * image ) ; 
/*--nv50_fbcon_imageblit--*/
int nv50_fbcon_accel_init ( struct fb_info * info ) ; 
/*--nv50_fbcon_accel_init--*/
int nv04_dac_output_offset ( struct drm_encoder * encoder ) ; 
/*--nv04_dac_output_offset--*/
uint32_t nv17_dac_sample_load ( struct drm_encoder * encoder ) ; 
/*--nv17_dac_sample_load--*/
void nv04_dac_update_dacclk ( struct drm_encoder * encoder , bool enable ) ; 
/*--nv04_dac_update_dacclk--*/
int nv04_dac_create ( struct drm_device * dev , struct dcb_entry * entry ) ; 
/*--nv04_dac_create--*/
int nv04_dfp_get_bound_head ( struct drm_device * dev , struct dcb_entry * dcbent ) ; 
/*--nv04_dfp_get_bound_head--*/
void nv04_dfp_bind_head ( struct drm_device * dev , struct dcb_entry * dcbent , int head , bool dl ) ; 
/*--nv04_dfp_bind_head--*/
void nv04_dfp_disable ( struct drm_device * dev , int head ) ; 
/*--nv04_dfp_disable--*/
void nv04_dfp_update_fp_control ( struct drm_encoder * encoder , int mode ) ; 
/*--nv04_dfp_update_fp_control--*/
int nv04_dfp_create ( struct drm_device * dev , struct dcb_entry * entry ) ; 
/*--nv04_dfp_create--*/
int nv04_tv_identify ( struct drm_device * dev , int i2c_index ) ; 
/*--nv04_tv_identify--*/
int nv04_tv_create ( struct drm_device * dev , struct dcb_entry * entry ) ; 
/*--nv04_tv_create--*/
int nv17_tv_create ( struct drm_device * dev , struct dcb_entry * entry ) ; 
/*--nv17_tv_create--*/
void nv17_tv_state_save ( struct drm_device * dev , struct nv17_tv_state * state ) ; 
/*--nv17_tv_state_save--*/
void nv17_tv_state_load ( struct drm_device * dev , struct nv17_tv_state * state ) ; 
/*--nv17_tv_state_load--*/
void nv17_tv_update_properties ( struct drm_encoder * encoder ) ; 
/*--nv17_tv_update_properties--*/
void nv17_tv_update_rescaler ( struct drm_encoder * encoder ) ; 
/*--nv17_tv_update_rescaler--*/
void nv17_ctv_update_rescaler ( struct drm_encoder * encoder ) ; 
/*--nv17_ctv_update_rescaler--*/
int nv04_crtc_create ( struct drm_device * dev , int crtc_num ) ; 
/*--nv04_crtc_create--*/
int nv04_display_create ( struct drm_device * dev ) ; 
/*--nv04_display_create--*/
void nv04_display_destroy ( struct drm_device * dev ) ; 
/*--nv04_display_destroy--*/
void nv04_display_restore ( struct drm_device * dev ) ; 
/*--nv04_display_restore--*/
int nv04_cursor_init ( struct nouveau_crtc * crtc ) ; 
/*--nv04_cursor_init--*/
void nv04_fbcon_copyarea ( struct fb_info * info , const struct fb_copyarea * region ) ; 
/*--nv04_fbcon_copyarea--*/
void nv04_fbcon_fillrect ( struct fb_info * info , const struct fb_fillrect * rect ) ; 
/*--nv04_fbcon_fillrect--*/
void nv04_fbcon_imageblit ( struct fb_info * info , const struct fb_image * image ) ; 
/*--nv04_fbcon_imageblit--*/
int nv04_fbcon_accel_init ( struct fb_info * info ) ; 
/*--nv04_fbcon_accel_init--*/
int nv17_gpio_get ( struct drm_device * dev , enum dcb_gpio_tag tag ) ; 
/*--nv17_gpio_get--*/
int nv17_gpio_set ( struct drm_device * dev , enum dcb_gpio_tag tag , int state ) ; 
/*--nv17_gpio_set--*/
int nv50_gpio_get ( struct drm_device * dev , enum dcb_gpio_tag tag ) ; 
/*--nv50_gpio_get--*/
int nv50_gpio_set ( struct drm_device * dev , enum dcb_gpio_tag tag , int state ) ; 
/*--nv50_gpio_set--*/
int nv50_calc_pll ( struct drm_device * dev , struct pll_lims * pll , int clk , int * N1 , int * M1 , int * N2 , int * M2 , int * P ) ; 
/*--nv50_calc_pll--*/
int nv50_calc_pll2 ( struct drm_device * dev , struct pll_lims * pll , int clk , int * N , int * fN , int * M , int * P ) ; 
/*--nv50_calc_pll2--*/
int nouveau_debugfs_channel_init ( struct nouveau_channel * chan ) ; 
/*--nouveau_debugfs_channel_init--*/
void nouveau_debugfs_channel_fini ( struct nouveau_channel * chan ) ; 
/*--nouveau_debugfs_channel_fini--*/
int nouveau_debugfs_init ( struct drm_minor * minor ) ; 
/*--nouveau_debugfs_init--*/
void nouveau_debugfs_takedown ( struct drm_minor * minor ) ; 
/*--nouveau_debugfs_takedown--*/
long nouveau_compat_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--nouveau_compat_ioctl--*/
int nouveau_backlight_init ( struct drm_device * dev ) ; 
/*--nouveau_backlight_init--*/
void nouveau_backlight_exit ( struct drm_device * dev ) ; 
/*--nouveau_backlight_exit--*/
void nouveau_register_dsm_handler ( void ) ; 
/*--nouveau_register_dsm_handler--*/
void nouveau_unregister_dsm_handler ( void ) ; 
/*--nouveau_unregister_dsm_handler--*/
bool nouveau_acpi_rom_supported ( struct pci_dev * pdev ) ; 
/*--nouveau_acpi_rom_supported--*/
int nouveau_acpi_get_bios_chunk ( uint8_t * bios , int offset , int len ) ; 
/*--nouveau_acpi_get_bios_chunk--*/
int r128_driver_load ( struct drm_device * dev , unsigned long flags ) ; 
/*--r128_driver_load--*/
int r128_do_cce_idle ( drm_r128_private_t * dev_priv ) ; 
/*--r128_do_cce_idle--*/
int r128_do_cleanup_cce ( struct drm_device * dev ) ; 
/*--r128_do_cleanup_cce--*/
int r128_cce_init ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--r128_cce_init--*/
int r128_cce_start ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--r128_cce_start--*/
int r128_cce_stop ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--r128_cce_stop--*/
int r128_cce_reset ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--r128_cce_reset--*/
int r128_cce_idle ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--r128_cce_idle--*/
int r128_engine_reset ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--r128_engine_reset--*/
int r128_fullscreen ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--r128_fullscreen--*/
void r128_freelist_reset ( struct drm_device * dev ) ; 
/*--r128_freelist_reset--*/
int r128_wait_ring ( drm_r128_private_t * dev_priv , int n ) ; 
/*--r128_wait_ring--*/
int r128_cce_buffers ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--r128_cce_buffers--*/
void r128_driver_preclose ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--r128_driver_preclose--*/
void r128_driver_lastclose ( struct drm_device * dev ) ; 
/*--r128_driver_lastclose--*/
u32 r128_get_vblank_counter ( struct drm_device * dev , int crtc ) ; 
/*--r128_get_vblank_counter--*/
irqreturn_t r128_driver_irq_handler ( int irq , void * arg ) ; 
/*--r128_driver_irq_handler--*/
int r128_enable_vblank ( struct drm_device * dev , int crtc ) ; 
/*--r128_enable_vblank--*/
void r128_disable_vblank ( struct drm_device * dev , int crtc ) ; 
/*--r128_disable_vblank--*/
void r128_driver_irq_preinstall ( struct drm_device * dev ) ; 
/*--r128_driver_irq_preinstall--*/
int r128_driver_irq_postinstall ( struct drm_device * dev ) ; 
/*--r128_driver_irq_postinstall--*/
void r128_driver_irq_uninstall ( struct drm_device * dev ) ; 
/*--r128_driver_irq_uninstall--*/
long r128_compat_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--r128_compat_ioctl--*/
u32 radeon_read_ring_rptr ( drm_radeon_private_t * dev_priv , u32 off ) ; 
/*--radeon_read_ring_rptr--*/
u32 radeon_get_ring_head ( drm_radeon_private_t * dev_priv ) ; 
/*--radeon_get_ring_head--*/
void radeon_write_ring_rptr ( drm_radeon_private_t * dev_priv , u32 off , u32 val ) ; 
/*--radeon_write_ring_rptr--*/
void radeon_set_ring_head ( drm_radeon_private_t * dev_priv , u32 val ) ; 
/*--radeon_set_ring_head--*/
u32 radeon_get_scratch ( drm_radeon_private_t * dev_priv , int index ) ; 
/*--radeon_get_scratch--*/
u32 RADEON_READ_MM ( drm_radeon_private_t * dev_priv , int addr ) ; 
/*--RADEON_READ_MM--*/
u32 radeon_read_fb_location ( drm_radeon_private_t * dev_priv ) ; 
/*--radeon_read_fb_location--*/
void radeon_write_agp_location ( drm_radeon_private_t * dev_priv , u32 agp_loc ) ; 
/*--radeon_write_agp_location--*/
void radeon_write_agp_base ( drm_radeon_private_t * dev_priv , u64 agp_base ) ; 
/*--radeon_write_agp_base--*/
void radeon_enable_bm ( struct drm_radeon_private * dev_priv ) ; 
/*--radeon_enable_bm--*/
int radeon_do_cp_idle ( drm_radeon_private_t * dev_priv ) ; 
/*--radeon_do_cp_idle--*/
int radeon_cp_init ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_init--*/
int radeon_cp_start ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_start--*/
int radeon_cp_stop ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_stop--*/
void radeon_do_release ( struct drm_device * dev ) ; 
/*--radeon_do_release--*/
int radeon_cp_reset ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_reset--*/
int radeon_cp_idle ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_idle--*/
int radeon_cp_resume ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_resume--*/
int radeon_engine_reset ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_engine_reset--*/
int radeon_fullscreen ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_fullscreen--*/
struct drm_buf * radeon_freelist_get ( struct drm_device * dev ) ; 
/*--radeon_freelist_get--*/
void radeon_freelist_reset ( struct drm_device * dev ) ; 
/*--radeon_freelist_reset--*/
int radeon_wait_ring ( drm_radeon_private_t * dev_priv , int n ) ; 
/*--radeon_wait_ring--*/
int radeon_cp_buffers ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_buffers--*/
int radeon_driver_load ( struct drm_device * dev , unsigned long flags ) ; 
/*--radeon_driver_load--*/
int radeon_master_create ( struct drm_device * dev , struct drm_master * master ) ; 
/*--radeon_master_create--*/
void radeon_master_destroy ( struct drm_device * dev , struct drm_master * master ) ; 
/*--radeon_master_destroy--*/
int radeon_driver_firstopen ( struct drm_device * dev ) ; 
/*--radeon_driver_firstopen--*/
int radeon_driver_unload ( struct drm_device * dev ) ; 
/*--radeon_driver_unload--*/
void radeon_commit_ring ( drm_radeon_private_t * dev_priv ) ; 
/*--radeon_commit_ring--*/
void radeon_cp_dispatch_flip ( struct drm_device * dev , struct drm_master * master ) ; 
/*--radeon_cp_dispatch_flip--*/
void radeon_cp_discard_buffer ( struct drm_device * dev , struct drm_master * master , struct drm_buf * buf ) ; 
/*--radeon_cp_discard_buffer--*/
void radeon_driver_preclose ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--radeon_driver_preclose--*/
void radeon_driver_lastclose ( struct drm_device * dev ) ; 
/*--radeon_driver_lastclose--*/
int radeon_driver_open ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--radeon_driver_open--*/
void radeon_driver_postclose ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--radeon_driver_postclose--*/
void radeon_mem_release ( struct drm_file * file_priv , struct mem_block * heap ) ; 
/*--radeon_mem_release--*/
void radeon_mem_takedown ( struct mem_block * * heap ) ; 
/*--radeon_mem_takedown--*/
int radeon_mem_alloc ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_mem_alloc--*/
int radeon_mem_free ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_mem_free--*/
int radeon_mem_init_heap ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_mem_init_heap--*/
void radeon_irq_set_state ( struct drm_device * dev , u32 mask , int state ) ; 
/*--radeon_irq_set_state--*/
int radeon_enable_vblank ( struct drm_device * dev , int crtc ) ; 
/*--radeon_enable_vblank--*/
void radeon_disable_vblank ( struct drm_device * dev , int crtc ) ; 
/*--radeon_disable_vblank--*/
irqreturn_t radeon_driver_irq_handler ( int irq , void * arg ) ; 
/*--radeon_driver_irq_handler--*/
u32 radeon_get_vblank_counter ( struct drm_device * dev , int crtc ) ; 
/*--radeon_get_vblank_counter--*/
int radeon_irq_emit ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_irq_emit--*/
int radeon_irq_wait ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_irq_wait--*/
void radeon_driver_irq_preinstall ( struct drm_device * dev ) ; 
/*--radeon_driver_irq_preinstall--*/
int radeon_driver_irq_postinstall ( struct drm_device * dev ) ; 
/*--radeon_driver_irq_postinstall--*/
void radeon_driver_irq_uninstall ( struct drm_device * dev ) ; 
/*--radeon_driver_irq_uninstall--*/
int radeon_vblank_crtc_get ( struct drm_device * dev ) ; 
/*--radeon_vblank_crtc_get--*/
int radeon_vblank_crtc_set ( struct drm_device * dev , int64_t value ) ; 
/*--radeon_vblank_crtc_set--*/
void r300_init_reg_flags ( struct drm_device * dev ) ; 
/*--r300_init_reg_flags--*/
int r300_do_cp_cmdbuf ( struct drm_device * dev , struct drm_file * file_priv , drm_radeon_kcmd_buffer_t * cmdbuf ) ; 
/*--r300_do_cp_cmdbuf--*/
void r600_page_table_cleanup ( struct drm_device * dev , struct drm_ati_pcigart_info * gart_info ) ; 
/*--r600_page_table_cleanup--*/
int r600_page_table_init ( struct drm_device * dev ) ; 
/*--r600_page_table_init--*/
int r600_do_engine_reset ( struct drm_device * dev ) ; 
/*--r600_do_engine_reset--*/
int r600_do_cleanup_cp ( struct drm_device * dev ) ; 
/*--r600_do_cleanup_cp--*/
int r600_do_init_cp ( struct drm_device * dev , drm_radeon_init_t * init , struct drm_file * file_priv ) ; 
/*--r600_do_init_cp--*/
int r600_do_resume_cp ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--r600_do_resume_cp--*/
int r600_do_cp_idle ( drm_radeon_private_t * dev_priv ) ; 
/*--r600_do_cp_idle--*/
void r600_do_cp_start ( drm_radeon_private_t * dev_priv ) ; 
/*--r600_do_cp_start--*/
void r600_do_cp_reset ( drm_radeon_private_t * dev_priv ) ; 
/*--r600_do_cp_reset--*/
void r600_do_cp_stop ( drm_radeon_private_t * dev_priv ) ; 
/*--r600_do_cp_stop--*/
int r600_cp_dispatch_indirect ( struct drm_device * dev , struct drm_buf * buf , int start , int end ) ; 
/*--r600_cp_dispatch_indirect--*/
void r600_cp_dispatch_swap ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--r600_cp_dispatch_swap--*/
int r600_cp_dispatch_texture ( struct drm_device * dev , struct drm_file * file_priv , drm_radeon_texture_t * tex , drm_radeon_tex_image_t * image ) ; 
/*--r600_cp_dispatch_texture--*/
int r600_cs_legacy_ioctl ( struct drm_device * dev , void * data , struct drm_file * fpriv ) ; 
/*--r600_cs_legacy_ioctl--*/
void r600_cs_legacy_get_tiling_conf ( struct drm_device * dev , u32 * npipes , u32 * nbanks , u32 * group_size ) ; 
/*--r600_cs_legacy_get_tiling_conf--*/
void radeon_surface_init ( struct radeon_device * rdev ) ; 
/*--radeon_surface_init--*/
void radeon_scratch_init ( struct radeon_device * rdev ) ; 
/*--radeon_scratch_init--*/
int radeon_scratch_get ( struct radeon_device * rdev , uint32_t * reg ) ; 
/*--radeon_scratch_get--*/
void radeon_scratch_free ( struct radeon_device * rdev , uint32_t reg ) ; 
/*--radeon_scratch_free--*/
void radeon_vram_location ( struct radeon_device * rdev , struct radeon_mc * mc , u64 base ) ; 
/*--radeon_vram_location--*/
void radeon_gtt_location ( struct radeon_device * rdev , struct radeon_mc * mc ) ; 
/*--radeon_gtt_location--*/
bool radeon_card_posted ( struct radeon_device * rdev ) ; 
/*--radeon_card_posted--*/
void radeon_update_bandwidth_info ( struct radeon_device * rdev ) ; 
/*--radeon_update_bandwidth_info--*/
bool radeon_boot_test_post_card ( struct radeon_device * rdev ) ; 
/*--radeon_boot_test_post_card--*/
int radeon_dummy_page_init ( struct radeon_device * rdev ) ; 
/*--radeon_dummy_page_init--*/
void radeon_dummy_page_fini ( struct radeon_device * rdev ) ; 
/*--radeon_dummy_page_fini--*/
int radeon_atombios_init ( struct radeon_device * rdev ) ; 
/*--radeon_atombios_init--*/
void radeon_atombios_fini ( struct radeon_device * rdev ) ; 
/*--radeon_atombios_fini--*/
int radeon_combios_init ( struct radeon_device * rdev ) ; 
/*--radeon_combios_init--*/
void radeon_combios_fini ( struct radeon_device * rdev ) ; 
/*--radeon_combios_fini--*/
void radeon_check_arguments ( struct radeon_device * rdev ) ; 
/*--radeon_check_arguments--*/
int radeon_device_init ( struct radeon_device * rdev , struct drm_device * ddev , struct pci_dev * pdev , uint32_t flags ) ; 
/*--radeon_device_init--*/
void radeon_device_fini ( struct radeon_device * rdev ) ; 
/*--radeon_device_fini--*/
int radeon_suspend_kms ( struct drm_device * dev , pm_message_t state ) ; 
/*--radeon_suspend_kms--*/
int radeon_resume_kms ( struct drm_device * dev ) ; 
/*--radeon_resume_kms--*/
int radeon_gpu_reset ( struct radeon_device * rdev ) ; 
/*--radeon_gpu_reset--*/
int radeon_debugfs_add_files ( struct radeon_device * rdev , struct drm_info_list * files , unsigned nfiles ) ; 
/*--radeon_debugfs_add_files--*/
int radeon_debugfs_init ( struct drm_minor * minor ) ; 
/*--radeon_debugfs_init--*/
void radeon_debugfs_cleanup ( struct drm_minor * minor ) ; 
/*--radeon_debugfs_cleanup--*/
void radeon_agp_disable ( struct radeon_device * rdev ) ; 
/*--radeon_agp_disable--*/
int radeon_asic_init ( struct radeon_device * rdev ) ; 
/*--radeon_asic_init--*/
int radeon_clocks_init ( struct radeon_device * rdev ) ; 
/*--radeon_clocks_init--*/
void radeon_clocks_fini ( struct radeon_device * rdev ) ; 
/*--radeon_clocks_fini--*/
int radeon_driver_unload_kms ( struct drm_device * dev ) ; 
/*--radeon_driver_unload_kms--*/
int radeon_driver_load_kms ( struct drm_device * dev , unsigned long flags ) ; 
/*--radeon_driver_load_kms--*/
int radeon_info_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_info_ioctl--*/
int radeon_driver_firstopen_kms ( struct drm_device * dev ) ; 
/*--radeon_driver_firstopen_kms--*/
void radeon_driver_lastclose_kms ( struct drm_device * dev ) ; 
/*--radeon_driver_lastclose_kms--*/
int radeon_driver_open_kms ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--radeon_driver_open_kms--*/
void radeon_driver_postclose_kms ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--radeon_driver_postclose_kms--*/
void radeon_driver_preclose_kms ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--radeon_driver_preclose_kms--*/
u32 radeon_get_vblank_counter_kms ( struct drm_device * dev , int crtc ) ; 
/*--radeon_get_vblank_counter_kms--*/
int radeon_enable_vblank_kms ( struct drm_device * dev , int crtc ) ; 
/*--radeon_enable_vblank_kms--*/
void radeon_disable_vblank_kms ( struct drm_device * dev , int crtc ) ; 
/*--radeon_disable_vblank_kms--*/
int radeon_dma_ioctl_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_dma_ioctl_kms--*/
int radeon_cp_init_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_init_kms--*/
int radeon_cp_start_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_start_kms--*/
int radeon_cp_stop_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_stop_kms--*/
int radeon_cp_reset_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_reset_kms--*/
int radeon_cp_idle_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_idle_kms--*/
int radeon_cp_resume_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_resume_kms--*/
int radeon_engine_reset_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_engine_reset_kms--*/
int radeon_fullscreen_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_fullscreen_kms--*/
int radeon_cp_swap_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_swap_kms--*/
int radeon_cp_clear_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_clear_kms--*/
int radeon_cp_vertex_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_vertex_kms--*/
int radeon_cp_indices_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_indices_kms--*/
int radeon_cp_texture_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_texture_kms--*/
int radeon_cp_stipple_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_stipple_kms--*/
int radeon_cp_indirect_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_indirect_kms--*/
int radeon_cp_vertex2_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_vertex2_kms--*/
int radeon_cp_cmdbuf_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_cmdbuf_kms--*/
int radeon_cp_getparam_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_getparam_kms--*/
int radeon_cp_flip_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_flip_kms--*/
int radeon_mem_alloc_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_mem_alloc_kms--*/
int radeon_mem_free_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_mem_free_kms--*/
int radeon_mem_init_heap_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_mem_init_heap_kms--*/
int radeon_irq_emit_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_irq_emit_kms--*/
int radeon_irq_wait_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_irq_wait_kms--*/
int radeon_cp_setparam_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_cp_setparam_kms--*/
int radeon_surface_alloc_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_surface_alloc_kms--*/
int radeon_surface_free_kms ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--radeon_surface_free_kms--*/
bool radeon_get_atom_connector_info_from_object_table ( struct drm_device * dev ) ; 
/*--radeon_get_atom_connector_info_from_object_table--*/
bool radeon_get_atom_connector_info_from_supported_devices_table ( struct drm_device * dev ) ; 
/*--radeon_get_atom_connector_info_from_supported_devices_table--*/
bool radeon_atom_get_clock_info ( struct drm_device * dev ) ; 
/*--radeon_atom_get_clock_info--*/
bool radeon_atombios_sideport_present ( struct radeon_device * rdev ) ; 
/*--radeon_atombios_sideport_present--*/
bool radeon_atombios_get_tmds_info ( struct radeon_encoder * encoder , struct radeon_encoder_int_tmds * tmds ) ; 
/*--radeon_atombios_get_tmds_info--*/
struct radeon_encoder_atom_dig * radeon_atombios_get_lvds_info ( struct radeon_encoder * encoder ) ; 
/*--radeon_atombios_get_lvds_info--*/
struct radeon_encoder_primary_dac * radeon_atombios_get_primary_dac_info ( struct radeon_encoder * encoder ) ; 
/*--radeon_atombios_get_primary_dac_info--*/
bool radeon_atom_get_tv_timings ( struct radeon_device * rdev , int index , struct drm_display_mode * mode ) ; 
/*--radeon_atom_get_tv_timings--*/
enum radeon_tv_std radeon_atombios_get_tv_info ( struct radeon_device * rdev ) ; 
/*--radeon_atombios_get_tv_info--*/
struct radeon_encoder_tv_dac * radeon_atombios_get_tv_dac_info ( struct radeon_encoder * encoder ) ; 
/*--radeon_atombios_get_tv_dac_info--*/
void radeon_atombios_get_power_modes ( struct radeon_device * rdev ) ; 
/*--radeon_atombios_get_power_modes--*/
void radeon_atom_set_clock_gating ( struct radeon_device * rdev , int enable ) ; 
/*--radeon_atom_set_clock_gating--*/
uint32_t radeon_atom_get_engine_clock ( struct radeon_device * rdev ) ; 
/*--radeon_atom_get_engine_clock--*/
uint32_t radeon_atom_get_memory_clock ( struct radeon_device * rdev ) ; 
/*--radeon_atom_get_memory_clock--*/
void radeon_atom_set_engine_clock ( struct radeon_device * rdev , uint32_t eng_clock ) ; 
/*--radeon_atom_set_engine_clock--*/
void radeon_atom_set_memory_clock ( struct radeon_device * rdev , uint32_t mem_clock ) ; 
/*--radeon_atom_set_memory_clock--*/
void radeon_atom_set_voltage ( struct radeon_device * rdev , u16 level ) ; 
/*--radeon_atom_set_voltage--*/
void radeon_atom_initialize_bios_scratch_regs ( struct drm_device * dev ) ; 
/*--radeon_atom_initialize_bios_scratch_regs--*/
void radeon_save_bios_scratch_regs ( struct radeon_device * rdev ) ; 
/*--radeon_save_bios_scratch_regs--*/
void radeon_restore_bios_scratch_regs ( struct radeon_device * rdev ) ; 
/*--radeon_restore_bios_scratch_regs--*/
void radeon_atom_output_lock ( struct drm_encoder * encoder , bool lock ) ; 
/*--radeon_atom_output_lock--*/
void radeon_atombios_connected_scratch_regs ( struct drm_connector * connector , struct drm_encoder * encoder , bool connected ) ; 
/*--radeon_atombios_connected_scratch_regs--*/
void radeon_atombios_encoder_crtc_scratch_regs ( struct drm_encoder * encoder , int crtc ) ; 
/*--radeon_atombios_encoder_crtc_scratch_regs--*/
void radeon_atombios_encoder_dpms_scratch_regs ( struct drm_encoder * encoder , bool on ) ; 
/*--radeon_atombios_encoder_dpms_scratch_regs--*/
int radeon_agp_init ( struct radeon_device * rdev ) ; 
/*--radeon_agp_init--*/
void radeon_agp_resume ( struct radeon_device * rdev ) ; 
/*--radeon_agp_resume--*/
void radeon_agp_fini ( struct radeon_device * rdev ) ; 
/*--radeon_agp_fini--*/
void radeon_agp_suspend ( struct radeon_device * rdev ) ; 
/*--radeon_agp_suspend--*/
void atombios_crtc_dpms ( struct drm_crtc * crtc , int mode ) ; 
/*--atombios_crtc_dpms--*/
int atombios_crtc_set_base ( struct drm_crtc * crtc , int x , int y , struct drm_framebuffer * old_fb ) ; 
/*--atombios_crtc_set_base--*/
int atombios_crtc_mode_set ( struct drm_crtc * crtc , struct drm_display_mode * mode , struct drm_display_mode * adjusted_mode , int x , int y , struct drm_framebuffer * old_fb ) ; 
/*--atombios_crtc_mode_set--*/
void radeon_atombios_init_crtc ( struct drm_device * dev , struct radeon_crtc * radeon_crtc ) ; 
/*--radeon_atombios_init_crtc--*/
bool radeon_combios_check_hardcoded_edid ( struct radeon_device * rdev ) ; 
/*--radeon_combios_check_hardcoded_edid--*/
struct edid * radeon_combios_get_hardcoded_edid ( struct radeon_device * rdev ) ; 
/*--radeon_combios_get_hardcoded_edid--*/
bool radeon_combios_get_clock_info ( struct drm_device * dev ) ; 
/*--radeon_combios_get_clock_info--*/
bool radeon_combios_sideport_present ( struct radeon_device * rdev ) ; 
/*--radeon_combios_sideport_present--*/
struct radeon_encoder_primary_dac * radeon_combios_get_primary_dac_info ( struct radeon_encoder * encoder ) ; 
/*--radeon_combios_get_primary_dac_info--*/
enum radeon_tv_std radeon_combios_get_tv_info ( struct radeon_device * rdev ) ; 
/*--radeon_combios_get_tv_info--*/
struct radeon_encoder_tv_dac * radeon_combios_get_tv_dac_info ( struct radeon_encoder * encoder ) ; 
/*--radeon_combios_get_tv_dac_info--*/
struct radeon_encoder_lvds * radeon_combios_get_lvds_info ( struct radeon_encoder * encoder ) ; 
/*--radeon_combios_get_lvds_info--*/
bool radeon_legacy_get_tmds_info_from_table ( struct radeon_encoder * encoder , struct radeon_encoder_int_tmds * tmds ) ; 
/*--radeon_legacy_get_tmds_info_from_table--*/
bool radeon_legacy_get_tmds_info_from_combios ( struct radeon_encoder * encoder , struct radeon_encoder_int_tmds * tmds ) ; 
/*--radeon_legacy_get_tmds_info_from_combios--*/
bool radeon_legacy_get_ext_tmds_info_from_table ( struct radeon_encoder * encoder , struct radeon_encoder_ext_tmds * tmds ) ; 
/*--radeon_legacy_get_ext_tmds_info_from_table--*/
bool radeon_legacy_get_ext_tmds_info_from_combios ( struct radeon_encoder * encoder , struct radeon_encoder_ext_tmds * tmds ) ; 
/*--radeon_legacy_get_ext_tmds_info_from_combios--*/
bool radeon_get_legacy_connector_info_from_table ( struct drm_device * dev ) ; 
/*--radeon_get_legacy_connector_info_from_table--*/
bool radeon_get_legacy_connector_info_from_bios ( struct drm_device * dev ) ; 
/*--radeon_get_legacy_connector_info_from_bios--*/
void radeon_combios_get_power_modes ( struct radeon_device * rdev ) ; 
/*--radeon_combios_get_power_modes--*/
void radeon_external_tmds_setup ( struct drm_encoder * encoder ) ; 
/*--radeon_external_tmds_setup--*/
bool radeon_combios_external_tmds_setup ( struct drm_encoder * encoder ) ; 
/*--radeon_combios_external_tmds_setup--*/
void radeon_combios_dyn_clk_setup ( struct drm_device * dev , int enable ) ; 
/*--radeon_combios_dyn_clk_setup--*/
void radeon_combios_asic_init ( struct drm_device * dev ) ; 
/*--radeon_combios_asic_init--*/
void radeon_combios_initialize_bios_scratch_regs ( struct drm_device * dev ) ; 
/*--radeon_combios_initialize_bios_scratch_regs--*/
void radeon_combios_output_lock ( struct drm_encoder * encoder , bool lock ) ; 
/*--radeon_combios_output_lock--*/
void radeon_combios_connected_scratch_regs ( struct drm_connector * connector , struct drm_encoder * encoder , bool connected ) ; 
/*--radeon_combios_connected_scratch_regs--*/
void radeon_combios_encoder_crtc_scratch_regs ( struct drm_encoder * encoder , int crtc ) ; 
/*--radeon_combios_encoder_crtc_scratch_regs--*/
void radeon_combios_encoder_dpms_scratch_regs ( struct drm_encoder * encoder , bool on ) ; 
/*--radeon_combios_encoder_dpms_scratch_regs--*/
int atom_execute_table ( struct atom_context * ctx , int index , uint32_t * params ) ; 
/*--atom_execute_table--*/
struct atom_context * atom_parse ( struct card_info * card , void * bios ) ; 
/*--atom_parse--*/
int atom_asic_init ( struct atom_context * ctx ) ; 
/*--atom_asic_init--*/
void atom_destroy ( struct atom_context * ctx ) ; 
/*--atom_destroy--*/
bool atom_parse_data_header ( struct atom_context * ctx , int index , uint16_t * size , uint8_t * frev , uint8_t * crev , uint16_t * data_start ) ; 
/*--atom_parse_data_header--*/
bool atom_parse_cmd_header ( struct atom_context * ctx , int index , uint8_t * frev , uint8_t * crev ) ; 
/*--atom_parse_cmd_header--*/
int atom_allocate_fb_scratch ( struct atom_context * ctx ) ; 
/*--atom_allocate_fb_scratch--*/
int radeon_fence_emit ( struct radeon_device * rdev , struct radeon_fence * fence ) ; 
/*--radeon_fence_emit--*/
int radeon_fence_create ( struct radeon_device * rdev , struct radeon_fence * * fence ) ; 
/*--radeon_fence_create--*/
bool radeon_fence_signaled ( struct radeon_fence * fence ) ; 
/*--radeon_fence_signaled--*/
int radeon_fence_wait ( struct radeon_fence * fence , bool intr ) ; 
/*--radeon_fence_wait--*/
int radeon_fence_wait_next ( struct radeon_device * rdev ) ; 
/*--radeon_fence_wait_next--*/
int radeon_fence_wait_last ( struct radeon_device * rdev ) ; 
/*--radeon_fence_wait_last--*/
struct radeon_fence * radeon_fence_ref ( struct radeon_fence * fence ) ; 
/*--radeon_fence_ref--*/
void radeon_fence_unref ( struct radeon_fence * * fence ) ; 
/*--radeon_fence_unref--*/
void radeon_fence_process ( struct radeon_device * rdev ) ; 
/*--radeon_fence_process--*/
int radeon_fence_driver_init ( struct radeon_device * rdev ) ; 
/*--radeon_fence_driver_init--*/
void radeon_fence_driver_fini ( struct radeon_device * rdev ) ; 
/*--radeon_fence_driver_fini--*/
int radeon_debugfs_fence_init ( struct radeon_device * rdev ) ; 
/*--radeon_debugfs_fence_init--*/
int radeon_ttm_init ( struct radeon_device * rdev ) ; 
/*--radeon_ttm_init--*/
void radeon_ttm_fini ( struct radeon_device * rdev ) ; 
/*--radeon_ttm_fini--*/
int radeon_mmap ( struct file * filp , struct vm_area_struct * vma ) ; 
/*--radeon_mmap--*/
struct ttm_backend * radeon_ttm_backend_create ( struct radeon_device * rdev ) ; 
/*--radeon_ttm_backend_create--*/
bool radeon_ttm_bo_is_radeon_bo ( struct ttm_buffer_object * bo ) ; 
/*--radeon_ttm_bo_is_radeon_bo--*/
void radeon_ttm_placement_from_domain ( struct radeon_bo * rbo , u32 domain ) ; 
/*--radeon_ttm_placement_from_domain--*/
int radeon_bo_create ( struct radeon_device * rdev , struct drm_gem_object * gobj , unsigned long size , bool kernel , u32 domain , struct radeon_bo * * bo_ptr ) ; 
/*--radeon_bo_create--*/
int radeon_bo_kmap ( struct radeon_bo * bo , void * * ptr ) ; 
/*--radeon_bo_kmap--*/
void radeon_bo_kunmap ( struct radeon_bo * bo ) ; 
/*--radeon_bo_kunmap--*/
void radeon_bo_unref ( struct radeon_bo * * bo ) ; 
/*--radeon_bo_unref--*/
int radeon_bo_pin ( struct radeon_bo * bo , u32 domain , u64 * gpu_addr ) ; 
/*--radeon_bo_pin--*/
int radeon_bo_unpin ( struct radeon_bo * bo ) ; 
/*--radeon_bo_unpin--*/
int radeon_bo_evict_vram ( struct radeon_device * rdev ) ; 
/*--radeon_bo_evict_vram--*/
void radeon_bo_force_delete ( struct radeon_device * rdev ) ; 
/*--radeon_bo_force_delete--*/
int radeon_bo_init ( struct radeon_device * rdev ) ; 
/*--radeon_bo_init--*/
void radeon_bo_fini ( struct radeon_device * rdev ) ; 
/*--radeon_bo_fini--*/
void radeon_bo_list_add_object ( struct radeon_bo_list * lobj , struct list_head * head ) ; 
/*--radeon_bo_list_add_object--*/
int radeon_bo_list_reserve ( struct list_head * head ) ; 
/*--radeon_bo_list_reserve--*/
void radeon_bo_list_unreserve ( struct list_head * head ) ; 
/*--radeon_bo_list_unreserve--*/
int radeon_bo_list_validate ( struct list_head * head ) ; 
/*--radeon_bo_list_validate--*/
void radeon_bo_list_fence ( struct list_head * head , void * fence ) ; 
/*--radeon_bo_list_fence--*/
int radeon_bo_fbdev_mmap ( struct radeon_bo * bo , struct vm_area_struct * vma ) ; 
/*--radeon_bo_fbdev_mmap--*/
int radeon_bo_get_surface_reg ( struct radeon_bo * bo ) ; 
/*--radeon_bo_get_surface_reg--*/
int radeon_bo_set_tiling_flags ( struct radeon_bo * bo , uint32_t tiling_flags , uint32_t pitch ) ; 
/*--radeon_bo_set_tiling_flags--*/
void radeon_bo_get_tiling_flags ( struct radeon_bo * bo , uint32_t * tiling_flags , uint32_t * pitch ) ; 
/*--radeon_bo_get_tiling_flags--*/
int radeon_bo_check_tiling ( struct radeon_bo * bo , bool has_moved , bool force_drop ) ; 
/*--radeon_bo_check_tiling--*/
void radeon_bo_move_notify ( struct ttm_buffer_object * bo , struct ttm_mem_reg * mem ) ; 
/*--radeon_bo_move_notify--*/
int radeon_bo_fault_reserve_notify ( struct ttm_buffer_object * bo ) ; 
/*--radeon_bo_fault_reserve_notify--*/
int radeon_gart_table_ram_alloc ( struct radeon_device * rdev ) ; 
/*--radeon_gart_table_ram_alloc--*/
void radeon_gart_table_ram_free ( struct radeon_device * rdev ) ; 
/*--radeon_gart_table_ram_free--*/
int radeon_gart_table_vram_alloc ( struct radeon_device * rdev ) ; 
/*--radeon_gart_table_vram_alloc--*/
int radeon_gart_table_vram_pin ( struct radeon_device * rdev ) ; 
/*--radeon_gart_table_vram_pin--*/
void radeon_gart_table_vram_free ( struct radeon_device * rdev ) ; 
/*--radeon_gart_table_vram_free--*/
void radeon_gart_unbind ( struct radeon_device * rdev , unsigned offset , int pages ) ; 
/*--radeon_gart_unbind--*/
int radeon_gart_bind ( struct radeon_device * rdev , unsigned offset , int pages , struct page * * pagelist ) ; 
/*--radeon_gart_bind--*/
void radeon_gart_restore ( struct radeon_device * rdev ) ; 
/*--radeon_gart_restore--*/
int radeon_gart_init ( struct radeon_device * rdev ) ; 
/*--radeon_gart_init--*/
void radeon_gart_fini ( struct radeon_device * rdev ) ; 
/*--radeon_gart_fini--*/
void radeon_restore_common_regs ( struct drm_device * dev ) ; 
/*--radeon_restore_common_regs--*/
void radeon_crtc_dpms ( struct drm_crtc * crtc , int mode ) ; 
/*--radeon_crtc_dpms--*/
int radeon_crtc_set_base ( struct drm_crtc * crtc , int x , int y , struct drm_framebuffer * old_fb ) ; 
/*--radeon_crtc_set_base--*/
void radeon_legacy_init_crtc ( struct drm_device * dev , struct radeon_crtc * radeon_crtc ) ; 
/*--radeon_legacy_init_crtc--*/
void radeon_add_legacy_encoder ( struct drm_device * dev , uint32_t encoder_id , uint32_t supported_device ) ; 
/*--radeon_add_legacy_encoder--*/
void radeon_connector_hotplug ( struct drm_connector * connector ) ; 
/*--radeon_connector_hotplug--*/
struct drm_encoder * radeon_find_encoder ( struct drm_connector * connector , int encoder_type ) ; 
/*--radeon_find_encoder--*/
struct drm_encoder * radeon_best_single_encoder ( struct drm_connector * connector ) ; 
/*--radeon_best_single_encoder--*/
int radeon_connector_set_property ( struct drm_connector * connector , struct drm_property * property , uint64_t val ) ; 
/*--radeon_connector_set_property--*/
struct drm_encoder * radeon_dvi_encoder ( struct drm_connector * connector ) ; 
/*--radeon_dvi_encoder--*/
void radeon_add_atom_connector ( struct drm_device * dev , uint32_t connector_id , uint32_t supported_device , int connector_type , struct radeon_i2c_bus_rec * i2c_bus , bool linkb , uint32_t igp_lane_info , uint16_t connector_object_id , struct radeon_hpd * hpd ) ; 
/*--radeon_add_atom_connector--*/
void radeon_add_legacy_connector ( struct drm_device * dev , uint32_t connector_id , uint32_t supported_device , int connector_type , struct radeon_i2c_bus_rec * i2c_bus , uint16_t connector_object_id , struct radeon_hpd * hpd ) ; 
/*--radeon_add_legacy_connector--*/
void radeon_setup_encoder_clones ( struct drm_device * dev ) ; 
/*--radeon_setup_encoder_clones--*/
uint32_t radeon_get_encoder_id ( struct drm_device * dev , uint32_t supported_device , uint8_t dac ) ; 
/*--radeon_get_encoder_id--*/
void radeon_link_encoder_connector ( struct drm_device * dev ) ; 
/*--radeon_link_encoder_connector--*/
void radeon_encoder_set_active_device ( struct drm_encoder * encoder ) ; 
/*--radeon_encoder_set_active_device--*/
void radeon_panel_mode_fixup ( struct drm_encoder * encoder , struct drm_display_mode * adjusted_mode ) ; 
/*--radeon_panel_mode_fixup--*/
void atombios_external_tmds_setup ( struct drm_encoder * encoder , int action ) ; 
/*--atombios_external_tmds_setup--*/
void atombios_digital_setup ( struct drm_encoder * encoder , int action ) ; 
/*--atombios_digital_setup--*/
int atombios_get_encoder_mode ( struct drm_encoder * encoder ) ; 
/*--atombios_get_encoder_mode--*/
void atombios_dig_encoder_setup ( struct drm_encoder * encoder , int action ) ; 
/*--atombios_dig_encoder_setup--*/
void atombios_dig_transmitter_setup ( struct drm_encoder * encoder , int action , uint8_t lane_num , uint8_t lane_set ) ; 
/*--atombios_dig_transmitter_setup--*/
void radeon_enc_destroy ( struct drm_encoder * encoder ) ; 
/*--radeon_enc_destroy--*/
struct radeon_encoder_atom_dac * radeon_atombios_set_dac_info ( struct radeon_encoder * radeon_encoder ) ; 
/*--radeon_atombios_set_dac_info--*/
struct radeon_encoder_atom_dig * radeon_atombios_set_dig_info ( struct radeon_encoder * radeon_encoder ) ; 
/*--radeon_atombios_set_dig_info--*/
void radeon_add_atom_encoder ( struct drm_device * dev , uint32_t encoder_id , uint32_t supported_device ) ; 
/*--radeon_add_atom_encoder--*/
void radeon_crtc_load_lut ( struct drm_crtc * crtc ) ; 
/*--radeon_crtc_load_lut--*/
void radeon_crtc_fb_gamma_set ( struct drm_crtc * crtc , u16 red , u16 green , u16 blue , int regno ) ; 
/*--radeon_crtc_fb_gamma_set--*/
void radeon_crtc_fb_gamma_get ( struct drm_crtc * crtc , u16 * red , u16 * green , u16 * blue , int regno ) ; 
/*--radeon_crtc_fb_gamma_get--*/
int radeon_ddc_get_modes ( struct radeon_connector * radeon_connector ) ; 
/*--radeon_ddc_get_modes--*/
void radeon_compute_pll ( struct radeon_pll * pll , uint64_t freq , uint32_t * dot_clock_p , uint32_t * fb_div_p , uint32_t * frac_fb_div_p , uint32_t * ref_div_p , uint32_t * post_div_p ) ; 
/*--radeon_compute_pll--*/
void radeon_framebuffer_init ( struct drm_device * dev , struct radeon_framebuffer * rfb , struct drm_mode_fb_cmd * mode_cmd , struct drm_gem_object * obj ) ; 
/*--radeon_framebuffer_init--*/
void radeon_update_display_priority ( struct radeon_device * rdev ) ; 
/*--radeon_update_display_priority--*/
int radeon_modeset_init ( struct radeon_device * rdev ) ; 
/*--radeon_modeset_init--*/
void radeon_modeset_fini ( struct radeon_device * rdev ) ; 
/*--radeon_modeset_fini--*/
bool radeon_crtc_scaling_mode_fixup ( struct drm_crtc * crtc , struct drm_display_mode * mode , struct drm_display_mode * adjusted_mode ) ; 
/*--radeon_crtc_scaling_mode_fixup--*/
int radeon_crtc_cursor_set ( struct drm_crtc * crtc , struct drm_file * file_priv , uint32_t handle , uint32_t width , uint32_t height ) ; 
/*--radeon_crtc_cursor_set--*/
int radeon_crtc_cursor_move ( struct drm_crtc * crtc , int x , int y ) ; 
/*--radeon_crtc_cursor_move--*/
bool radeon_ddc_probe ( struct radeon_connector * radeon_connector ) ; 
/*--radeon_ddc_probe--*/
struct radeon_i2c_chan * radeon_i2c_create ( struct drm_device * dev , struct radeon_i2c_bus_rec * rec , const char * name ) ; 
/*--radeon_i2c_create--*/
struct radeon_i2c_chan * radeon_i2c_create_dp ( struct drm_device * dev , struct radeon_i2c_bus_rec * rec , const char * name ) ; 
/*--radeon_i2c_create_dp--*/
void radeon_i2c_destroy ( struct radeon_i2c_chan * i2c ) ; 
/*--radeon_i2c_destroy--*/
struct drm_encoder * radeon_best_encoder ( struct drm_connector * connector ) ; 
/*--radeon_best_encoder--*/
void radeon_i2c_get_byte ( struct radeon_i2c_chan * i2c_bus , u8 slave_addr , u8 addr , u8 * val ) ; 
/*--radeon_i2c_get_byte--*/
void radeon_i2c_put_byte ( struct radeon_i2c_chan * i2c_bus , u8 slave_addr , u8 addr , u8 val ) ; 
/*--radeon_i2c_put_byte--*/
uint32_t radeon_legacy_get_engine_clock ( struct radeon_device * rdev ) ; 
/*--radeon_legacy_get_engine_clock--*/
uint32_t radeon_legacy_get_memory_clock ( struct radeon_device * rdev ) ; 
/*--radeon_legacy_get_memory_clock--*/
void radeon_get_clock_info ( struct drm_device * dev ) ; 
/*--radeon_get_clock_info--*/
void radeon_legacy_set_engine_clock ( struct radeon_device * rdev , uint32_t eng_clock ) ; 
/*--radeon_legacy_set_engine_clock--*/
void radeon_legacy_set_clock_gating ( struct radeon_device * rdev , int enable ) ; 
/*--radeon_legacy_set_clock_gating--*/
int radeon_static_clocks_init ( struct drm_device * dev ) ; 
/*--radeon_static_clocks_init--*/
int radeon_parse_options ( char * options ) ; 
/*--radeon_parse_options--*/
void radeon_fb_output_poll_changed ( struct radeon_device * rdev ) ; 
/*--radeon_fb_output_poll_changed--*/
int radeon_fbdev_init ( struct radeon_device * rdev ) ; 
/*--radeon_fbdev_init--*/
void radeon_fbdev_fini ( struct radeon_device * rdev ) ; 
/*--radeon_fbdev_fini--*/
void radeon_fbdev_set_suspend ( struct radeon_device * rdev , int state ) ; 
/*--radeon_fbdev_set_suspend--*/
int radeon_fbdev_total_size ( struct radeon_device * rdev ) ; 
/*--radeon_fbdev_total_size--*/
bool radeon_fbdev_robj_is_fb ( struct radeon_device * rdev , struct radeon_bo * robj ) ; 
/*--radeon_fbdev_robj_is_fb--*/
int radeon_gem_object_init ( struct drm_gem_object * obj ) ; 
/*--radeon_gem_object_init--*/
void radeon_gem_object_free ( struct drm_gem_object * gobj ) ; 
/*--radeon_gem_object_free--*/
int radeon_gem_object_create ( struct radeon_device * rdev , int size , int alignment , int initial_domain , bool discardable , bool kernel , struct drm_gem_object * * obj ) ; 
/*--radeon_gem_object_create--*/
int radeon_gem_object_pin ( struct drm_gem_object * obj , uint32_t pin_domain , uint64_t * gpu_addr ) ; 
/*--radeon_gem_object_pin--*/
void radeon_gem_object_unpin ( struct drm_gem_object * obj ) ; 
/*--radeon_gem_object_unpin--*/
int radeon_gem_set_domain ( struct drm_gem_object * gobj , uint32_t rdomain , uint32_t wdomain ) ; 
/*--radeon_gem_set_domain--*/
int radeon_gem_init ( struct radeon_device * rdev ) ; 
/*--radeon_gem_init--*/
void radeon_gem_fini ( struct radeon_device * rdev ) ; 
/*--radeon_gem_fini--*/
int radeon_gem_info_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_info_ioctl--*/
int radeon_gem_pread_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_pread_ioctl--*/
int radeon_gem_pwrite_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_pwrite_ioctl--*/
int radeon_gem_create_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_create_ioctl--*/
int radeon_gem_set_domain_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_set_domain_ioctl--*/
int radeon_gem_mmap_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_mmap_ioctl--*/
int radeon_gem_busy_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_busy_ioctl--*/
int radeon_gem_wait_idle_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_wait_idle_ioctl--*/
int radeon_gem_set_tiling_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_set_tiling_ioctl--*/
int radeon_gem_get_tiling_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_gem_get_tiling_ioctl--*/
void radeon_ib_bogus_cleanup ( struct radeon_device * rdev ) ; 
/*--radeon_ib_bogus_cleanup--*/
void radeon_ib_bogus_add ( struct radeon_device * rdev , struct radeon_ib * ib ) ; 
/*--radeon_ib_bogus_add--*/
int radeon_ib_get ( struct radeon_device * rdev , struct radeon_ib * * ib ) ; 
/*--radeon_ib_get--*/
void radeon_ib_free ( struct radeon_device * rdev , struct radeon_ib * * ib ) ; 
/*--radeon_ib_free--*/
int radeon_ib_schedule ( struct radeon_device * rdev , struct radeon_ib * ib ) ; 
/*--radeon_ib_schedule--*/
int radeon_ib_pool_init ( struct radeon_device * rdev ) ; 
/*--radeon_ib_pool_init--*/
void radeon_ib_pool_fini ( struct radeon_device * rdev ) ; 
/*--radeon_ib_pool_fini--*/
void radeon_ring_free_size ( struct radeon_device * rdev ) ; 
/*--radeon_ring_free_size--*/
int radeon_ring_alloc ( struct radeon_device * rdev , unsigned ndw ) ; 
/*--radeon_ring_alloc--*/
int radeon_ring_lock ( struct radeon_device * rdev , unsigned ndw ) ; 
/*--radeon_ring_lock--*/
void radeon_ring_commit ( struct radeon_device * rdev ) ; 
/*--radeon_ring_commit--*/
void radeon_ring_unlock_commit ( struct radeon_device * rdev ) ; 
/*--radeon_ring_unlock_commit--*/
void radeon_ring_unlock_undo ( struct radeon_device * rdev ) ; 
/*--radeon_ring_unlock_undo--*/
int radeon_ring_init ( struct radeon_device * rdev , unsigned ring_size ) ; 
/*--radeon_ring_init--*/
void radeon_ring_fini ( struct radeon_device * rdev ) ; 
/*--radeon_ring_fini--*/
int radeon_debugfs_ib_init ( struct radeon_device * rdev ) ; 
/*--radeon_debugfs_ib_init--*/
irqreturn_t radeon_driver_irq_handler_kms ( int irq , void * arg ) ; 
/*--radeon_driver_irq_handler_kms--*/
void radeon_driver_irq_preinstall_kms ( struct drm_device * dev ) ; 
/*--radeon_driver_irq_preinstall_kms--*/
int radeon_driver_irq_postinstall_kms ( struct drm_device * dev ) ; 
/*--radeon_driver_irq_postinstall_kms--*/
void radeon_driver_irq_uninstall_kms ( struct drm_device * dev ) ; 
/*--radeon_driver_irq_uninstall_kms--*/
int radeon_irq_kms_init ( struct radeon_device * rdev ) ; 
/*--radeon_irq_kms_init--*/
void radeon_irq_kms_fini ( struct radeon_device * rdev ) ; 
/*--radeon_irq_kms_fini--*/
void radeon_irq_kms_sw_irq_get ( struct radeon_device * rdev ) ; 
/*--radeon_irq_kms_sw_irq_get--*/
void radeon_irq_kms_sw_irq_put ( struct radeon_device * rdev ) ; 
/*--radeon_irq_kms_sw_irq_put--*/
int radeon_cs_parser_relocs ( struct radeon_cs_parser * p ) ; 
/*--radeon_cs_parser_relocs--*/
int radeon_cs_parser_init ( struct radeon_cs_parser * p , void * data ) ; 
/*--radeon_cs_parser_init--*/
int radeon_cs_ioctl ( struct drm_device * dev , void * data , struct drm_file * filp ) ; 
/*--radeon_cs_ioctl--*/
int radeon_cs_finish_pages ( struct radeon_cs_parser * p ) ; 
/*--radeon_cs_finish_pages--*/
int radeon_cs_update_pages ( struct radeon_cs_parser * p , int pg_idx ) ; 
/*--radeon_cs_update_pages--*/
bool radeon_get_bios ( struct radeon_device * rdev ) ; 
/*--radeon_get_bios--*/
void radeon_benchmark_move ( struct radeon_device * rdev , unsigned bsize , unsigned sdomain , unsigned ddomain ) ; 
/*--radeon_benchmark_move--*/
void radeon_benchmark ( struct radeon_device * rdev ) ; 
/*--radeon_benchmark--*/
void r100_pm_get_dynpm_state ( struct radeon_device * rdev ) ; 
/*--r100_pm_get_dynpm_state--*/
void r100_pm_init_profile ( struct radeon_device * rdev ) ; 
/*--r100_pm_init_profile--*/
void r100_pm_misc ( struct radeon_device * rdev ) ; 
/*--r100_pm_misc--*/
void r100_pm_prepare ( struct radeon_device * rdev ) ; 
/*--r100_pm_prepare--*/
void r100_pm_finish ( struct radeon_device * rdev ) ; 
/*--r100_pm_finish--*/
bool r100_gui_idle ( struct radeon_device * rdev ) ; 
/*--r100_gui_idle--*/
bool r100_hpd_sense ( struct radeon_device * rdev , enum radeon_hpd_id hpd ) ; 
/*--r100_hpd_sense--*/
void r100_hpd_set_polarity ( struct radeon_device * rdev , enum radeon_hpd_id hpd ) ; 
/*--r100_hpd_set_polarity--*/
void r100_hpd_init ( struct radeon_device * rdev ) ; 
/*--r100_hpd_init--*/
void r100_hpd_fini ( struct radeon_device * rdev ) ; 
/*--r100_hpd_fini--*/
void r100_pci_gart_tlb_flush ( struct radeon_device * rdev ) ; 
/*--r100_pci_gart_tlb_flush--*/
int r100_pci_gart_init ( struct radeon_device * rdev ) ; 
/*--r100_pci_gart_init--*/
void r100_enable_bm ( struct radeon_device * rdev ) ; 
/*--r100_enable_bm--*/
int r100_pci_gart_enable ( struct radeon_device * rdev ) ; 
/*--r100_pci_gart_enable--*/
void r100_pci_gart_disable ( struct radeon_device * rdev ) ; 
/*--r100_pci_gart_disable--*/
int r100_pci_gart_set_page ( struct radeon_device * rdev , int i , uint64_t addr ) ; 
/*--r100_pci_gart_set_page--*/
void r100_pci_gart_fini ( struct radeon_device * rdev ) ; 
/*--r100_pci_gart_fini--*/
int r100_irq_set ( struct radeon_device * rdev ) ; 
/*--r100_irq_set--*/
void r100_irq_disable ( struct radeon_device * rdev ) ; 
/*--r100_irq_disable--*/
int r100_irq_process ( struct radeon_device * rdev ) ; 
/*--r100_irq_process--*/
u32 r100_get_vblank_counter ( struct radeon_device * rdev , int crtc ) ; 
/*--r100_get_vblank_counter--*/
void r100_fence_ring_emit ( struct radeon_device * rdev , struct radeon_fence * fence ) ; 
/*--r100_fence_ring_emit--*/
int r100_wb_init ( struct radeon_device * rdev ) ; 
/*--r100_wb_init--*/
void r100_wb_disable ( struct radeon_device * rdev ) ; 
/*--r100_wb_disable--*/
void r100_wb_fini ( struct radeon_device * rdev ) ; 
/*--r100_wb_fini--*/
int r100_copy_blit ( struct radeon_device * rdev , uint64_t src_offset , uint64_t dst_offset , unsigned num_pages , struct radeon_fence * fence ) ; 
/*--r100_copy_blit--*/
void r100_ring_start ( struct radeon_device * rdev ) ; 
/*--r100_ring_start--*/
int r100_cp_init ( struct radeon_device * rdev , unsigned ring_size ) ; 
/*--r100_cp_init--*/
void r100_cp_fini ( struct radeon_device * rdev ) ; 
/*--r100_cp_fini--*/
void r100_cp_disable ( struct radeon_device * rdev ) ; 
/*--r100_cp_disable--*/
void r100_cp_commit ( struct radeon_device * rdev ) ; 
/*--r100_cp_commit--*/
int r100_cs_parse_packet0 ( struct radeon_cs_parser * p , struct radeon_cs_packet * pkt , const unsigned * auth , unsigned n , radeon_packet0_check_t check ) ; 
/*--r100_cs_parse_packet0--*/
void r100_cs_dump_packet ( struct radeon_cs_parser * p , struct radeon_cs_packet * pkt ) ; 
/*--r100_cs_dump_packet--*/
int r100_cs_packet_parse ( struct radeon_cs_parser * p , struct radeon_cs_packet * pkt , unsigned idx ) ; 
/*--r100_cs_packet_parse--*/
int r100_cs_packet_parse_vline ( struct radeon_cs_parser * p ) ; 
/*--r100_cs_packet_parse_vline--*/
int r100_cs_packet_next_reloc ( struct radeon_cs_parser * p , struct radeon_cs_reloc * * cs_reloc ) ; 
/*--r100_cs_packet_next_reloc--*/
int r100_cs_track_check_pkt3_indx_buffer ( struct radeon_cs_parser * p , struct radeon_cs_packet * pkt , struct radeon_bo * robj ) ; 
/*--r100_cs_track_check_pkt3_indx_buffer--*/
int r100_cs_parse ( struct radeon_cs_parser * p ) ; 
/*--r100_cs_parse--*/
void r100_errata ( struct radeon_device * rdev ) ; 
/*--r100_errata--*/
void r100_gpu_wait_for_vsync ( struct radeon_device * rdev ) ; 
/*--r100_gpu_wait_for_vsync--*/
void r100_gpu_wait_for_vsync2 ( struct radeon_device * rdev ) ; 
/*--r100_gpu_wait_for_vsync2--*/
int r100_rbbm_fifo_wait_for_entry ( struct radeon_device * rdev , unsigned n ) ; 
/*--r100_rbbm_fifo_wait_for_entry--*/
int r100_gui_wait_for_idle ( struct radeon_device * rdev ) ; 
/*--r100_gui_wait_for_idle--*/
int r100_mc_wait_for_idle ( struct radeon_device * rdev ) ; 
/*--r100_mc_wait_for_idle--*/
void r100_gpu_lockup_update ( struct r100_gpu_lockup * lockup , struct radeon_cp * cp ) ; 
/*--r100_gpu_lockup_update--*/
bool r100_gpu_cp_is_lockup ( struct radeon_device * rdev , struct r100_gpu_lockup * lockup , struct radeon_cp * cp ) ; 
/*--r100_gpu_cp_is_lockup--*/
bool r100_gpu_is_lockup ( struct radeon_device * rdev ) ; 
/*--r100_gpu_is_lockup--*/
void r100_bm_disable ( struct radeon_device * rdev ) ; 
/*--r100_bm_disable--*/
int r100_asic_reset ( struct radeon_device * rdev ) ; 
/*--r100_asic_reset--*/
void r100_set_common_regs ( struct radeon_device * rdev ) ; 
/*--r100_set_common_regs--*/
void r100_vram_init_sizes ( struct radeon_device * rdev ) ; 
/*--r100_vram_init_sizes--*/
void r100_vga_set_state ( struct radeon_device * rdev , bool state ) ; 
/*--r100_vga_set_state--*/
void r100_mc_init ( struct radeon_device * rdev ) ; 
/*--r100_mc_init--*/
void r100_pll_errata_after_index ( struct radeon_device * rdev ) ; 
/*--r100_pll_errata_after_index--*/
uint32_t r100_pll_rreg ( struct radeon_device * rdev , uint32_t reg ) ; 
/*--r100_pll_rreg--*/
void r100_pll_wreg ( struct radeon_device * rdev , uint32_t reg , uint32_t v ) ; 
/*--r100_pll_wreg--*/
void r100_set_safe_registers ( struct radeon_device * rdev ) ; 
/*--r100_set_safe_registers--*/
int r100_debugfs_rbbm_init ( struct radeon_device * rdev ) ; 
/*--r100_debugfs_rbbm_init--*/
int r100_debugfs_cp_init ( struct radeon_device * rdev ) ; 
/*--r100_debugfs_cp_init--*/
int r100_debugfs_mc_info_init ( struct radeon_device * rdev ) ; 
/*--r100_debugfs_mc_info_init--*/
int r100_set_surface_reg ( struct radeon_device * rdev , int reg , uint32_t tiling_flags , uint32_t pitch , uint32_t offset , uint32_t obj_size ) ; 
/*--r100_set_surface_reg--*/
void r100_clear_surface_reg ( struct radeon_device * rdev , int reg ) ; 
/*--r100_clear_surface_reg--*/
void r100_bandwidth_update ( struct radeon_device * rdev ) ; 
/*--r100_bandwidth_update--*/
int r100_cs_track_check ( struct radeon_device * rdev , struct r100_cs_track * track ) ; 
/*--r100_cs_track_check--*/
void r100_cs_track_clear ( struct radeon_device * rdev , struct r100_cs_track * track ) ; 
/*--r100_cs_track_clear--*/
int r100_ring_test ( struct radeon_device * rdev ) ; 
/*--r100_ring_test--*/
void r100_ring_ib_execute ( struct radeon_device * rdev , struct radeon_ib * ib ) ; 
/*--r100_ring_ib_execute--*/
int r100_ib_test ( struct radeon_device * rdev ) ; 
/*--r100_ib_test--*/
void r100_ib_fini ( struct radeon_device * rdev ) ; 
/*--r100_ib_fini--*/
int r100_ib_init ( struct radeon_device * rdev ) ; 
/*--r100_ib_init--*/
void r100_mc_stop ( struct radeon_device * rdev , struct r100_mc_save * save ) ; 
/*--r100_mc_stop--*/
void r100_mc_resume ( struct radeon_device * rdev , struct r100_mc_save * save ) ; 
/*--r100_mc_resume--*/
void r100_vga_render_disable ( struct radeon_device * rdev ) ; 
/*--r100_vga_render_disable--*/
void r100_clock_startup ( struct radeon_device * rdev ) ; 
/*--r100_clock_startup--*/
int r100_resume ( struct radeon_device * rdev ) ; 
/*--r100_resume--*/
int r100_suspend ( struct radeon_device * rdev ) ; 
/*--r100_suspend--*/
void r100_fini ( struct radeon_device * rdev ) ; 
/*--r100_fini--*/
int r100_init ( struct radeon_device * rdev ) ; 
/*--r100_init--*/
void rv370_pcie_gart_tlb_flush ( struct radeon_device * rdev ) ; 
/*--rv370_pcie_gart_tlb_flush--*/
int rv370_pcie_gart_set_page ( struct radeon_device * rdev , int i , uint64_t addr ) ; 
/*--rv370_pcie_gart_set_page--*/
int rv370_pcie_gart_init ( struct radeon_device * rdev ) ; 
/*--rv370_pcie_gart_init--*/
int rv370_pcie_gart_enable ( struct radeon_device * rdev ) ; 
/*--rv370_pcie_gart_enable--*/
void rv370_pcie_gart_disable ( struct radeon_device * rdev ) ; 
/*--rv370_pcie_gart_disable--*/
void rv370_pcie_gart_fini ( struct radeon_device * rdev ) ; 
/*--rv370_pcie_gart_fini--*/
void r300_fence_ring_emit ( struct radeon_device * rdev , struct radeon_fence * fence ) ; 
/*--r300_fence_ring_emit--*/
void r300_ring_start ( struct radeon_device * rdev ) ; 
/*--r300_ring_start--*/
void r300_errata ( struct radeon_device * rdev ) ; 
/*--r300_errata--*/
int r300_mc_wait_for_idle ( struct radeon_device * rdev ) ; 
/*--r300_mc_wait_for_idle--*/
void r300_gpu_init ( struct radeon_device * rdev ) ; 
/*--r300_gpu_init--*/
bool r300_gpu_is_lockup ( struct radeon_device * rdev ) ; 
/*--r300_gpu_is_lockup--*/
int r300_asic_reset ( struct radeon_device * rdev ) ; 
/*--r300_asic_reset--*/
void r300_mc_init ( struct radeon_device * rdev ) ; 
/*--r300_mc_init--*/
void rv370_set_pcie_lanes ( struct radeon_device * rdev , int lanes ) ; 
/*--rv370_set_pcie_lanes--*/
int rv370_get_pcie_lanes ( struct radeon_device * rdev ) ; 
/*--rv370_get_pcie_lanes--*/
int r300_cs_parse ( struct radeon_cs_parser * p ) ; 
/*--r300_cs_parse--*/
void r300_set_reg_safe ( struct radeon_device * rdev ) ; 
/*--r300_set_reg_safe--*/
void r300_mc_program ( struct radeon_device * rdev ) ; 
/*--r300_mc_program--*/
void r300_clock_startup ( struct radeon_device * rdev ) ; 
/*--r300_clock_startup--*/
int r300_resume ( struct radeon_device * rdev ) ; 
/*--r300_resume--*/
int r300_suspend ( struct radeon_device * rdev ) ; 
/*--r300_suspend--*/
void r300_fini ( struct radeon_device * rdev ) ; 
/*--r300_fini--*/
int r300_init ( struct radeon_device * rdev ) ; 
/*--r300_init--*/
void r420_pm_init_profile ( struct radeon_device * rdev ) ; 
/*--r420_pm_init_profile--*/
void r420_pipes_init ( struct radeon_device * rdev ) ; 
/*--r420_pipes_init--*/
u32 r420_mc_rreg ( struct radeon_device * rdev , u32 reg ) ; 
/*--r420_mc_rreg--*/
void r420_mc_wreg ( struct radeon_device * rdev , u32 reg , u32 v ) ; 
/*--r420_mc_wreg--*/
int r420_resume ( struct radeon_device * rdev ) ; 
/*--r420_resume--*/
int r420_suspend ( struct radeon_device * rdev ) ; 
/*--r420_suspend--*/
void r420_fini ( struct radeon_device * rdev ) ; 
/*--r420_fini--*/
int r420_init ( struct radeon_device * rdev ) ; 
/*--r420_init--*/
int r420_debugfs_pipes_info_init ( struct radeon_device * rdev ) ; 
/*--r420_debugfs_pipes_info_init--*/
void rs400_gart_adjust_size ( struct radeon_device * rdev ) ; 
/*--rs400_gart_adjust_size--*/
void rs400_gart_tlb_flush ( struct radeon_device * rdev ) ; 
/*--rs400_gart_tlb_flush--*/
int rs400_gart_init ( struct radeon_device * rdev ) ; 
/*--rs400_gart_init--*/
int rs400_gart_enable ( struct radeon_device * rdev ) ; 
/*--rs400_gart_enable--*/
void rs400_gart_disable ( struct radeon_device * rdev ) ; 
/*--rs400_gart_disable--*/
void rs400_gart_fini ( struct radeon_device * rdev ) ; 
/*--rs400_gart_fini--*/
int rs400_gart_set_page ( struct radeon_device * rdev , int i , uint64_t addr ) ; 
/*--rs400_gart_set_page--*/
int rs400_mc_wait_for_idle ( struct radeon_device * rdev ) ; 
/*--rs400_mc_wait_for_idle--*/
void rs400_gpu_init ( struct radeon_device * rdev ) ; 
/*--rs400_gpu_init--*/
void rs400_mc_init ( struct radeon_device * rdev ) ; 
/*--rs400_mc_init--*/
uint32_t rs400_mc_rreg ( struct radeon_device * rdev , uint32_t reg ) ; 
/*--rs400_mc_rreg--*/
void rs400_mc_wreg ( struct radeon_device * rdev , uint32_t reg , uint32_t v ) ; 
/*--rs400_mc_wreg--*/
void rs400_mc_program ( struct radeon_device * rdev ) ; 
/*--rs400_mc_program--*/
int rs400_resume ( struct radeon_device * rdev ) ; 
/*--rs400_resume--*/
int rs400_suspend ( struct radeon_device * rdev ) ; 
/*--rs400_suspend--*/
void rs400_fini ( struct radeon_device * rdev ) ; 
/*--rs400_fini--*/
int rs400_init ( struct radeon_device * rdev ) ; 
/*--rs400_init--*/
void rs600_pm_misc ( struct radeon_device * rdev ) ; 
/*--rs600_pm_misc--*/
void rs600_pm_prepare ( struct radeon_device * rdev ) ; 
/*--rs600_pm_prepare--*/
void rs600_pm_finish ( struct radeon_device * rdev ) ; 
/*--rs600_pm_finish--*/
bool rs600_hpd_sense ( struct radeon_device * rdev , enum radeon_hpd_id hpd ) ; 
/*--rs600_hpd_sense--*/
void rs600_hpd_set_polarity ( struct radeon_device * rdev , enum radeon_hpd_id hpd ) ; 
/*--rs600_hpd_set_polarity--*/
void rs600_hpd_init ( struct radeon_device * rdev ) ; 
/*--rs600_hpd_init--*/
void rs600_hpd_fini ( struct radeon_device * rdev ) ; 
/*--rs600_hpd_fini--*/
void rs600_bm_disable ( struct radeon_device * rdev ) ; 
/*--rs600_bm_disable--*/
int rs600_asic_reset ( struct radeon_device * rdev ) ; 
/*--rs600_asic_reset--*/
void rs600_gart_tlb_flush ( struct radeon_device * rdev ) ; 
/*--rs600_gart_tlb_flush--*/
int rs600_gart_init ( struct radeon_device * rdev ) ; 
/*--rs600_gart_init--*/
int rs600_gart_enable ( struct radeon_device * rdev ) ; 
/*--rs600_gart_enable--*/
void rs600_gart_disable ( struct radeon_device * rdev ) ; 
/*--rs600_gart_disable--*/
void rs600_gart_fini ( struct radeon_device * rdev ) ; 
/*--rs600_gart_fini--*/
int rs600_gart_set_page ( struct radeon_device * rdev , int i , uint64_t addr ) ; 
/*--rs600_gart_set_page--*/
int rs600_irq_set ( struct radeon_device * rdev ) ; 
/*--rs600_irq_set--*/
void rs600_irq_disable ( struct radeon_device * rdev ) ; 
/*--rs600_irq_disable--*/
int rs600_irq_process ( struct radeon_device * rdev ) ; 
/*--rs600_irq_process--*/
u32 rs600_get_vblank_counter ( struct radeon_device * rdev , int crtc ) ; 
/*--rs600_get_vblank_counter--*/
int rs600_mc_wait_for_idle ( struct radeon_device * rdev ) ; 
/*--rs600_mc_wait_for_idle--*/
void rs600_gpu_init ( struct radeon_device * rdev ) ; 
/*--rs600_gpu_init--*/
void rs600_mc_init ( struct radeon_device * rdev ) ; 
/*--rs600_mc_init--*/
void rs600_bandwidth_update ( struct radeon_device * rdev ) ; 
/*--rs600_bandwidth_update--*/
uint32_t rs600_mc_rreg ( struct radeon_device * rdev , uint32_t reg ) ; 
/*--rs600_mc_rreg--*/
void rs600_mc_wreg ( struct radeon_device * rdev , uint32_t reg , uint32_t v ) ; 
/*--rs600_mc_wreg--*/
void rs600_debugfs ( struct radeon_device * rdev ) ; 
/*--rs600_debugfs--*/
void rs600_set_safe_registers ( struct radeon_device * rdev ) ; 
/*--rs600_set_safe_registers--*/
int rs600_resume ( struct radeon_device * rdev ) ; 
/*--rs600_resume--*/
int rs600_suspend ( struct radeon_device * rdev ) ; 
/*--rs600_suspend--*/
void rs600_fini ( struct radeon_device * rdev ) ; 
/*--rs600_fini--*/
int rs600_init ( struct radeon_device * rdev ) ; 
/*--rs600_init--*/
void rs690_pm_info ( struct radeon_device * rdev ) ; 
/*--rs690_pm_info--*/
void rs690_mc_init ( struct radeon_device * rdev ) ; 
/*--rs690_mc_init--*/
void rs690_line_buffer_adjust ( struct radeon_device * rdev , struct drm_display_mode * mode1 , struct drm_display_mode * mode2 ) ; 
/*--rs690_line_buffer_adjust--*/
void rs690_crtc_bandwidth_compute ( struct radeon_device * rdev , struct radeon_crtc * crtc , struct rs690_watermark * wm ) ; 
/*--rs690_crtc_bandwidth_compute--*/
void rs690_bandwidth_update ( struct radeon_device * rdev ) ; 
/*--rs690_bandwidth_update--*/
uint32_t rs690_mc_rreg ( struct radeon_device * rdev , uint32_t reg ) ; 
/*--rs690_mc_rreg--*/
void rs690_mc_wreg ( struct radeon_device * rdev , uint32_t reg , uint32_t v ) ; 
/*--rs690_mc_wreg--*/
void rs690_mc_program ( struct radeon_device * rdev ) ; 
/*--rs690_mc_program--*/
int rs690_resume ( struct radeon_device * rdev ) ; 
/*--rs690_resume--*/
int rs690_suspend ( struct radeon_device * rdev ) ; 
/*--rs690_suspend--*/
void rs690_fini ( struct radeon_device * rdev ) ; 
/*--rs690_fini--*/
int rs690_init ( struct radeon_device * rdev ) ; 
/*--rs690_init--*/
void rv515_debugfs ( struct radeon_device * rdev ) ; 
/*--rv515_debugfs--*/
void rv515_ring_start ( struct radeon_device * rdev ) ; 
/*--rv515_ring_start--*/
int rv515_mc_wait_for_idle ( struct radeon_device * rdev ) ; 
/*--rv515_mc_wait_for_idle--*/
void rv515_vga_render_disable ( struct radeon_device * rdev ) ; 
/*--rv515_vga_render_disable--*/
void rv515_gpu_init ( struct radeon_device * rdev ) ; 
/*--rv515_gpu_init--*/
void rv515_mc_init ( struct radeon_device * rdev ) ; 
/*--rv515_mc_init--*/
uint32_t rv515_mc_rreg ( struct radeon_device * rdev , uint32_t reg ) ; 
/*--rv515_mc_rreg--*/
void rv515_mc_wreg ( struct radeon_device * rdev , uint32_t reg , uint32_t v ) ; 
/*--rv515_mc_wreg--*/
int rv515_debugfs_pipes_info_init ( struct radeon_device * rdev ) ; 
/*--rv515_debugfs_pipes_info_init--*/
int rv515_debugfs_ga_info_init ( struct radeon_device * rdev ) ; 
/*--rv515_debugfs_ga_info_init--*/
void rv515_mc_stop ( struct radeon_device * rdev , struct rv515_mc_save * save ) ; 
/*--rv515_mc_stop--*/
void rv515_mc_resume ( struct radeon_device * rdev , struct rv515_mc_save * save ) ; 
/*--rv515_mc_resume--*/
void rv515_mc_program ( struct radeon_device * rdev ) ; 
/*--rv515_mc_program--*/
void rv515_clock_startup ( struct radeon_device * rdev ) ; 
/*--rv515_clock_startup--*/
int rv515_resume ( struct radeon_device * rdev ) ; 
/*--rv515_resume--*/
int rv515_suspend ( struct radeon_device * rdev ) ; 
/*--rv515_suspend--*/
void rv515_set_safe_registers ( struct radeon_device * rdev ) ; 
/*--rv515_set_safe_registers--*/
void rv515_fini ( struct radeon_device * rdev ) ; 
/*--rv515_fini--*/
int rv515_init ( struct radeon_device * rdev ) ; 
/*--rv515_init--*/
void atom_rv515_force_tv_scaler ( struct radeon_device * rdev , struct radeon_crtc * crtc ) ; 
/*--atom_rv515_force_tv_scaler--*/
void rv515_crtc_bandwidth_compute ( struct radeon_device * rdev , struct radeon_crtc * crtc , struct rv515_watermark * wm ) ; 
/*--rv515_crtc_bandwidth_compute--*/
void rv515_bandwidth_avivo_update ( struct radeon_device * rdev ) ; 
/*--rv515_bandwidth_avivo_update--*/
void rv515_bandwidth_update ( struct radeon_device * rdev ) ; 
/*--rv515_bandwidth_update--*/
void r520_mc_init ( struct radeon_device * rdev ) ; 
/*--r520_mc_init--*/
void r520_mc_program ( struct radeon_device * rdev ) ; 
/*--r520_mc_program--*/
int r520_resume ( struct radeon_device * rdev ) ; 
/*--r520_resume--*/
int r520_init ( struct radeon_device * rdev ) ; 
/*--r520_init--*/
void r600_pm_get_dynpm_state ( struct radeon_device * rdev ) ; 
/*--r600_pm_get_dynpm_state--*/
void rs780_pm_init_profile ( struct radeon_device * rdev ) ; 
/*--rs780_pm_init_profile--*/
void r600_pm_init_profile ( struct radeon_device * rdev ) ; 
/*--r600_pm_init_profile--*/
void r600_pm_misc ( struct radeon_device * rdev ) ; 
/*--r600_pm_misc--*/
bool r600_gui_idle ( struct radeon_device * rdev ) ; 
/*--r600_gui_idle--*/
bool r600_hpd_sense ( struct radeon_device * rdev , enum radeon_hpd_id hpd ) ; 
/*--r600_hpd_sense--*/
void r600_hpd_set_polarity ( struct radeon_device * rdev , enum radeon_hpd_id hpd ) ; 
/*--r600_hpd_set_polarity--*/
void r600_hpd_init ( struct radeon_device * rdev ) ; 
/*--r600_hpd_init--*/
void r600_hpd_fini ( struct radeon_device * rdev ) ; 
/*--r600_hpd_fini--*/
void r600_pcie_gart_tlb_flush ( struct radeon_device * rdev ) ; 
/*--r600_pcie_gart_tlb_flush--*/
int r600_pcie_gart_init ( struct radeon_device * rdev ) ; 
/*--r600_pcie_gart_init--*/
int r600_pcie_gart_enable ( struct radeon_device * rdev ) ; 
/*--r600_pcie_gart_enable--*/
void r600_pcie_gart_disable ( struct radeon_device * rdev ) ; 
/*--r600_pcie_gart_disable--*/
void r600_pcie_gart_fini ( struct radeon_device * rdev ) ; 
/*--r600_pcie_gart_fini--*/
void r600_agp_enable ( struct radeon_device * rdev ) ; 
/*--r600_agp_enable--*/
int r600_mc_wait_for_idle ( struct radeon_device * rdev ) ; 
/*--r600_mc_wait_for_idle--*/
void r600_vram_gtt_location ( struct radeon_device * rdev , struct radeon_mc * mc ) ; 
/*--r600_vram_gtt_location--*/
int r600_mc_init ( struct radeon_device * rdev ) ; 
/*--r600_mc_init--*/
int r600_gpu_soft_reset ( struct radeon_device * rdev ) ; 
/*--r600_gpu_soft_reset--*/
bool r600_gpu_is_lockup ( struct radeon_device * rdev ) ; 
/*--r600_gpu_is_lockup--*/
int r600_asic_reset ( struct radeon_device * rdev ) ; 
/*--r600_asic_reset--*/
int r600_count_pipe_bits ( uint32_t val ) ; 
/*--r600_count_pipe_bits--*/
void r600_gpu_init ( struct radeon_device * rdev ) ; 
/*--r600_gpu_init--*/
u32 r600_pciep_rreg ( struct radeon_device * rdev , u32 reg ) ; 
/*--r600_pciep_rreg--*/
void r600_pciep_wreg ( struct radeon_device * rdev , u32 reg , u32 v ) ; 
/*--r600_pciep_wreg--*/
void r600_cp_stop ( struct radeon_device * rdev ) ; 
/*--r600_cp_stop--*/
int r600_init_microcode ( struct radeon_device * rdev ) ; 
/*--r600_init_microcode--*/
int r600_cp_start ( struct radeon_device * rdev ) ; 
/*--r600_cp_start--*/
int r600_cp_resume ( struct radeon_device * rdev ) ; 
/*--r600_cp_resume--*/
void r600_cp_commit ( struct radeon_device * rdev ) ; 
/*--r600_cp_commit--*/
void r600_ring_init ( struct radeon_device * rdev , unsigned ring_size ) ; 
/*--r600_ring_init--*/
void r600_cp_fini ( struct radeon_device * rdev ) ; 
/*--r600_cp_fini--*/
void r600_scratch_init ( struct radeon_device * rdev ) ; 
/*--r600_scratch_init--*/
int r600_ring_test ( struct radeon_device * rdev ) ; 
/*--r600_ring_test--*/
void r600_wb_disable ( struct radeon_device * rdev ) ; 
/*--r600_wb_disable--*/
void r600_wb_fini ( struct radeon_device * rdev ) ; 
/*--r600_wb_fini--*/
int r600_wb_enable ( struct radeon_device * rdev ) ; 
/*--r600_wb_enable--*/
void r600_fence_ring_emit ( struct radeon_device * rdev , struct radeon_fence * fence ) ; 
/*--r600_fence_ring_emit--*/
int r600_copy_blit ( struct radeon_device * rdev , uint64_t src_offset , uint64_t dst_offset , unsigned num_pages , struct radeon_fence * fence ) ; 
/*--r600_copy_blit--*/
int r600_set_surface_reg ( struct radeon_device * rdev , int reg , uint32_t tiling_flags , uint32_t pitch , uint32_t offset , uint32_t obj_size ) ; 
/*--r600_set_surface_reg--*/
void r600_clear_surface_reg ( struct radeon_device * rdev , int reg ) ; 
/*--r600_clear_surface_reg--*/
bool r600_card_posted ( struct radeon_device * rdev ) ; 
/*--r600_card_posted--*/
int r600_startup ( struct radeon_device * rdev ) ; 
/*--r600_startup--*/
void r600_vga_set_state ( struct radeon_device * rdev , bool state ) ; 
/*--r600_vga_set_state--*/
int r600_resume ( struct radeon_device * rdev ) ; 
/*--r600_resume--*/
int r600_suspend ( struct radeon_device * rdev ) ; 
/*--r600_suspend--*/
int r600_init ( struct radeon_device * rdev ) ; 
/*--r600_init--*/
void r600_fini ( struct radeon_device * rdev ) ; 
/*--r600_fini--*/
void r600_ring_ib_execute ( struct radeon_device * rdev , struct radeon_ib * ib ) ; 
/*--r600_ring_ib_execute--*/
int r600_ib_test ( struct radeon_device * rdev ) ; 
/*--r600_ib_test--*/
void r600_ih_ring_init ( struct radeon_device * rdev , unsigned ring_size ) ; 
/*--r600_ih_ring_init--*/
void r600_rlc_stop ( struct radeon_device * rdev ) ; 
/*--r600_rlc_stop--*/
void r600_disable_interrupts ( struct radeon_device * rdev ) ; 
/*--r600_disable_interrupts--*/
int r600_irq_init ( struct radeon_device * rdev ) ; 
/*--r600_irq_init--*/
void r600_irq_suspend ( struct radeon_device * rdev ) ; 
/*--r600_irq_suspend--*/
void r600_irq_fini ( struct radeon_device * rdev ) ; 
/*--r600_irq_fini--*/
int r600_irq_set ( struct radeon_device * rdev ) ; 
/*--r600_irq_set--*/
void r600_irq_disable ( struct radeon_device * rdev ) ; 
/*--r600_irq_disable--*/
int r600_irq_process ( struct radeon_device * rdev ) ; 
/*--r600_irq_process--*/
int r600_debugfs_mc_info_init ( struct radeon_device * rdev ) ; 
/*--r600_debugfs_mc_info_init--*/
void r600_ioctl_wait_idle ( struct radeon_device * rdev , struct radeon_bo * bo ) ; 
/*--r600_ioctl_wait_idle--*/
void rv770_pm_misc ( struct radeon_device * rdev ) ; 
/*--rv770_pm_misc--*/
int rv770_pcie_gart_enable ( struct radeon_device * rdev ) ; 
/*--rv770_pcie_gart_enable--*/
void rv770_pcie_gart_disable ( struct radeon_device * rdev ) ; 
/*--rv770_pcie_gart_disable--*/
void rv770_pcie_gart_fini ( struct radeon_device * rdev ) ; 
/*--rv770_pcie_gart_fini--*/
void rv770_agp_enable ( struct radeon_device * rdev ) ; 
/*--rv770_agp_enable--*/
void r700_cp_stop ( struct radeon_device * rdev ) ; 
/*--r700_cp_stop--*/
void r700_cp_fini ( struct radeon_device * rdev ) ; 
/*--r700_cp_fini--*/
int rv770_mc_init ( struct radeon_device * rdev ) ; 
/*--rv770_mc_init--*/
int rv770_resume ( struct radeon_device * rdev ) ; 
/*--rv770_resume--*/
int rv770_suspend ( struct radeon_device * rdev ) ; 
/*--rv770_suspend--*/
int rv770_init ( struct radeon_device * rdev ) ; 
/*--rv770_init--*/
void rv770_fini ( struct radeon_device * rdev ) ; 
/*--rv770_fini--*/
void radeon_test_moves ( struct radeon_device * rdev ) ; 
/*--radeon_test_moves--*/
int r200_copy_dma ( struct radeon_device * rdev , uint64_t src_offset , uint64_t dst_offset , unsigned num_pages , struct radeon_fence * fence ) ; 
/*--r200_copy_dma--*/
int r200_packet0_check ( struct radeon_cs_parser * p , struct radeon_cs_packet * pkt , unsigned idx , unsigned reg ) ; 
/*--r200_packet0_check--*/
void r200_set_safe_registers ( struct radeon_device * rdev ) ; 
/*--r200_set_safe_registers--*/
void radeon_legacy_tv_mode_set ( struct drm_encoder * encoder , struct drm_display_mode * mode , struct drm_display_mode * adjusted_mode ) ; 
/*--radeon_legacy_tv_mode_set--*/
void radeon_legacy_tv_adjust_crtc_reg ( struct drm_encoder * encoder , uint32_t * h_total_disp , uint32_t * h_sync_strt_wid , uint32_t * v_total_disp , uint32_t * v_sync_strt_wid ) ; 
/*--radeon_legacy_tv_adjust_crtc_reg--*/
void radeon_legacy_tv_adjust_pll1 ( struct drm_encoder * encoder , uint32_t * htotal_cntl , uint32_t * ppll_ref_div , uint32_t * ppll_div_3 , uint32_t * pixclks_cntl ) ; 
/*--radeon_legacy_tv_adjust_pll1--*/
void radeon_legacy_tv_adjust_pll2 ( struct drm_encoder * encoder , uint32_t * htotal2_cntl , uint32_t * p2pll_ref_div , uint32_t * p2pll_div_0 , uint32_t * pixclks_cntl ) ; 
/*--radeon_legacy_tv_adjust_pll2--*/
int r600_cs_packet_parse ( struct radeon_cs_parser * p , struct radeon_cs_packet * pkt , unsigned idx ) ; 
/*--r600_cs_packet_parse--*/
int r600_cs_parse ( struct radeon_cs_parser * p ) ; 
/*--r600_cs_parse--*/
int r600_cs_legacy ( struct drm_device * dev , void * data , struct drm_file * filp , unsigned family , u32 * ib , int * l ) ; 
/*--r600_cs_legacy--*/
void r600_cs_legacy_init ( void ) ; 
/*--r600_cs_legacy_init--*/
int r600_prepare_blit_copy ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--r600_prepare_blit_copy--*/
void r600_done_blit_copy ( struct drm_device * dev ) ; 
/*--r600_done_blit_copy--*/
void r600_blit_copy ( struct drm_device * dev , uint64_t src_gpu_addr , uint64_t dst_gpu_addr , int size_bytes ) ; 
/*--r600_blit_copy--*/
void r600_blit_swap ( struct drm_device * dev , uint64_t src_gpu_addr , uint64_t dst_gpu_addr , int sx , int sy , int dx , int dy , int w , int h , int src_pitch , int dst_pitch , int cpp ) ; 
/*--r600_blit_swap--*/
int r600_blit_init ( struct radeon_device * rdev ) ; 
/*--r600_blit_init--*/
void r600_blit_fini ( struct radeon_device * rdev ) ; 
/*--r600_blit_fini--*/
int r600_vb_ib_get ( struct radeon_device * rdev ) ; 
/*--r600_vb_ib_get--*/
void r600_vb_ib_put ( struct radeon_device * rdev ) ; 
/*--r600_vb_ib_put--*/
int r600_blit_prepare_copy ( struct radeon_device * rdev , int size_bytes ) ; 
/*--r600_blit_prepare_copy--*/
void r600_blit_done_copy ( struct radeon_device * rdev , struct radeon_fence * fence ) ; 
/*--r600_blit_done_copy--*/
void r600_kms_blit_copy ( struct radeon_device * rdev , u64 src_gpu_addr , u64 dst_gpu_addr , int size_bytes ) ; 
/*--r600_kms_blit_copy--*/
void radeon_pm_suspend ( struct radeon_device * rdev ) ; 
/*--radeon_pm_suspend--*/
void radeon_pm_resume ( struct radeon_device * rdev ) ; 
/*--radeon_pm_resume--*/
int radeon_pm_init ( struct radeon_device * rdev ) ; 
/*--radeon_pm_init--*/
void radeon_pm_fini ( struct radeon_device * rdev ) ; 
/*--radeon_pm_fini--*/
void radeon_pm_compute_clocks ( struct radeon_device * rdev ) ; 
/*--radeon_pm_compute_clocks--*/
int dp_mode_valid ( u8 dpcd [ 8 ] , int mode_clock ) ; 
/*--dp_mode_valid--*/
bool radeon_process_aux_ch ( struct radeon_i2c_chan * chan , u8 * req_bytes , int num_bytes , u8 * read_byte , u8 read_buf_len , u8 delay ) ; 
/*--radeon_process_aux_ch--*/
bool radeon_dp_aux_native_write ( struct radeon_connector * radeon_connector , uint16_t address , uint8_t send_bytes , uint8_t * send ) ; 
/*--radeon_dp_aux_native_write--*/
bool radeon_dp_aux_native_read ( struct radeon_connector * radeon_connector , uint16_t address , uint8_t delay , uint8_t expected_bytes , uint8_t * read_p ) ; 
/*--radeon_dp_aux_native_read--*/
u8 radeon_dp_getsinktype ( struct radeon_connector * radeon_connector ) ; 
/*--radeon_dp_getsinktype--*/
bool radeon_dp_getdpcd ( struct radeon_connector * radeon_connector ) ; 
/*--radeon_dp_getdpcd--*/
void radeon_dp_set_link_config ( struct drm_connector * connector , struct drm_display_mode * mode ) ; 
/*--radeon_dp_set_link_config--*/
int radeon_dp_mode_valid_helper ( struct radeon_connector * radeon_connector , struct drm_display_mode * mode ) ; 
/*--radeon_dp_mode_valid_helper--*/
bool radeon_dp_needs_link_train ( struct radeon_connector * radeon_connector ) ; 
/*--radeon_dp_needs_link_train--*/
void dp_link_train ( struct drm_encoder * encoder , struct drm_connector * connector ) ; 
/*--dp_link_train--*/
int radeon_dp_i2c_aux_ch ( struct i2c_adapter * adapter , int mode , uint8_t write_byte , uint8_t * read_byte ) ; 
/*--radeon_dp_i2c_aux_ch--*/
int r600_audio_channels ( struct radeon_device * rdev ) ; 
/*--r600_audio_channels--*/
int r600_audio_bits_per_sample ( struct radeon_device * rdev ) ; 
/*--r600_audio_bits_per_sample--*/
int r600_audio_rate ( struct radeon_device * rdev ) ; 
/*--r600_audio_rate--*/
uint8_t r600_audio_status_bits ( struct radeon_device * rdev ) ; 
/*--r600_audio_status_bits--*/
uint8_t r600_audio_category_code ( struct radeon_device * rdev ) ; 
/*--r600_audio_category_code--*/
void r600_audio_schedule_polling ( struct radeon_device * rdev ) ; 
/*--r600_audio_schedule_polling--*/
int r600_audio_init ( struct radeon_device * rdev ) ; 
/*--r600_audio_init--*/
void r600_audio_enable_polling ( struct drm_encoder * encoder ) ; 
/*--r600_audio_enable_polling--*/
void r600_audio_disable_polling ( struct drm_encoder * encoder ) ; 
/*--r600_audio_disable_polling--*/
void r600_audio_set_clock ( struct drm_encoder * encoder , int clock ) ; 
/*--r600_audio_set_clock--*/
void r600_audio_fini ( struct radeon_device * rdev ) ; 
/*--r600_audio_fini--*/
int r600_hdmi_buffer_status_changed ( struct drm_encoder * encoder ) ; 
/*--r600_hdmi_buffer_status_changed--*/
void r600_hdmi_audio_workaround ( struct drm_encoder * encoder ) ; 
/*--r600_hdmi_audio_workaround--*/
void r600_hdmi_setmode ( struct drm_encoder * encoder , struct drm_display_mode * mode ) ; 
/*--r600_hdmi_setmode--*/
void r600_hdmi_update_audio_settings ( struct drm_encoder * encoder ) ; 
/*--r600_hdmi_update_audio_settings--*/
void r600_hdmi_enable ( struct drm_encoder * encoder ) ; 
/*--r600_hdmi_enable--*/
void r600_hdmi_disable ( struct drm_encoder * encoder ) ; 
/*--r600_hdmi_disable--*/
void evergreen_pm_misc ( struct radeon_device * rdev ) ; 
/*--evergreen_pm_misc--*/
void evergreen_pm_prepare ( struct radeon_device * rdev ) ; 
/*--evergreen_pm_prepare--*/
void evergreen_pm_finish ( struct radeon_device * rdev ) ; 
/*--evergreen_pm_finish--*/
bool evergreen_hpd_sense ( struct radeon_device * rdev , enum radeon_hpd_id hpd ) ; 
/*--evergreen_hpd_sense--*/
void evergreen_hpd_set_polarity ( struct radeon_device * rdev , enum radeon_hpd_id hpd ) ; 
/*--evergreen_hpd_set_polarity--*/
void evergreen_hpd_init ( struct radeon_device * rdev ) ; 
/*--evergreen_hpd_init--*/
void evergreen_hpd_fini ( struct radeon_device * rdev ) ; 
/*--evergreen_hpd_fini--*/
void evergreen_bandwidth_update ( struct radeon_device * rdev ) ; 
/*--evergreen_bandwidth_update--*/
void evergreen_pcie_gart_tlb_flush ( struct radeon_device * rdev ) ; 
/*--evergreen_pcie_gart_tlb_flush--*/
int evergreen_pcie_gart_enable ( struct radeon_device * rdev ) ; 
/*--evergreen_pcie_gart_enable--*/
void evergreen_pcie_gart_disable ( struct radeon_device * rdev ) ; 
/*--evergreen_pcie_gart_disable--*/
void evergreen_pcie_gart_fini ( struct radeon_device * rdev ) ; 
/*--evergreen_pcie_gart_fini--*/
void evergreen_agp_enable ( struct radeon_device * rdev ) ; 
/*--evergreen_agp_enable--*/
int evergreen_cp_resume ( struct radeon_device * rdev ) ; 
/*--evergreen_cp_resume--*/
int evergreen_mc_init ( struct radeon_device * rdev ) ; 
/*--evergreen_mc_init--*/
bool evergreen_gpu_is_lockup ( struct radeon_device * rdev ) ; 
/*--evergreen_gpu_is_lockup--*/
int evergreen_asic_reset ( struct radeon_device * rdev ) ; 
/*--evergreen_asic_reset--*/
u32 evergreen_get_vblank_counter ( struct radeon_device * rdev , int crtc ) ; 
/*--evergreen_get_vblank_counter--*/
void evergreen_disable_interrupt_state ( struct radeon_device * rdev ) ; 
/*--evergreen_disable_interrupt_state--*/
int evergreen_irq_set ( struct radeon_device * rdev ) ; 
/*--evergreen_irq_set--*/
void evergreen_irq_disable ( struct radeon_device * rdev ) ; 
/*--evergreen_irq_disable--*/
int evergreen_irq_process ( struct radeon_device * rdev ) ; 
/*--evergreen_irq_process--*/
int evergreen_resume ( struct radeon_device * rdev ) ; 
/*--evergreen_resume--*/
int evergreen_suspend ( struct radeon_device * rdev ) ; 
/*--evergreen_suspend--*/
int evergreen_init ( struct radeon_device * rdev ) ; 
/*--evergreen_init--*/
void evergreen_fini ( struct radeon_device * rdev ) ; 
/*--evergreen_fini--*/
int evergreen_cs_packet_parse ( struct radeon_cs_parser * p , struct radeon_cs_packet * pkt , unsigned idx ) ; 
/*--evergreen_cs_packet_parse--*/
int evergreen_cs_parse ( struct radeon_cs_parser * p ) ; 
/*--evergreen_cs_parse--*/
long radeon_compat_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--radeon_compat_ioctl--*/
long radeon_kms_compat_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--radeon_kms_compat_ioctl--*/
uint16_t savage_bci_emit_event ( drm_savage_private_t * dev_priv , unsigned int flags ) ; 
/*--savage_bci_emit_event--*/
void savage_freelist_put ( struct drm_device * dev , struct drm_buf * buf ) ; 
/*--savage_freelist_put--*/
void savage_dma_reset ( drm_savage_private_t * dev_priv ) ; 
/*--savage_dma_reset--*/
void savage_dma_wait ( drm_savage_private_t * dev_priv , unsigned int page ) ; 
/*--savage_dma_wait--*/
uint32_t * savage_dma_alloc ( drm_savage_private_t * dev_priv , unsigned int n ) ; 
/*--savage_dma_alloc--*/
int savage_driver_load ( struct drm_device * dev , unsigned long chipset ) ; 
/*--savage_driver_load--*/
int savage_driver_firstopen ( struct drm_device * dev ) ; 
/*--savage_driver_firstopen--*/
void savage_driver_lastclose ( struct drm_device * dev ) ; 
/*--savage_driver_lastclose--*/
int savage_driver_unload ( struct drm_device * dev ) ; 
/*--savage_driver_unload--*/
int savage_bci_buffers ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--savage_bci_buffers--*/
void savage_reclaim_buffers ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--savage_reclaim_buffers--*/
void savage_emit_clip_rect_s3d ( drm_savage_private_t * dev_priv , const struct drm_clip_rect * pbox ) ; 
/*--savage_emit_clip_rect_s3d--*/
void savage_emit_clip_rect_s4 ( drm_savage_private_t * dev_priv , const struct drm_clip_rect * pbox ) ; 
/*--savage_emit_clip_rect_s4--*/
int savage_bci_cmdbuf ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--savage_bci_cmdbuf--*/
int sis_idle ( struct drm_device * dev ) ; 
/*--sis_idle--*/
void sis_lastclose ( struct drm_device * dev ) ; 
/*--sis_lastclose--*/
void sis_reclaim_buffers_locked ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--sis_reclaim_buffers_locked--*/
struct ttm_backend * ttm_agp_backend_init ( struct ttm_bo_device * bdev , struct agp_bridge_data * bridge ) ; 
/*--ttm_agp_backend_init--*/
int ttm_mem_global_init ( struct ttm_mem_global * glob ) ; 
/*--ttm_mem_global_init--*/
void ttm_mem_global_release ( struct ttm_mem_global * glob ) ; 
/*--ttm_mem_global_release--*/
void ttm_mem_global_free ( struct ttm_mem_global * glob , uint64_t amount ) ; 
/*--ttm_mem_global_free--*/
int ttm_mem_global_alloc ( struct ttm_mem_global * glob , uint64_t memory , bool no_wait , bool interruptible ) ; 
/*--ttm_mem_global_alloc--*/
int ttm_mem_global_alloc_page ( struct ttm_mem_global * glob , struct page * page , bool no_wait , bool interruptible ) ; 
/*--ttm_mem_global_alloc_page--*/
void ttm_mem_global_free_page ( struct ttm_mem_global * glob , struct page * page ) ; 
/*--ttm_mem_global_free_page--*/
size_t ttm_round_pot ( size_t size ) ; 
/*--ttm_round_pot--*/
struct page * ttm_tt_get_page ( struct ttm_tt * ttm , int index ) ; 
/*--ttm_tt_get_page--*/
int ttm_tt_populate ( struct ttm_tt * ttm ) ; 
/*--ttm_tt_populate--*/
int ttm_tt_set_placement_caching ( struct ttm_tt * ttm , uint32_t placement ) ; 
/*--ttm_tt_set_placement_caching--*/
void ttm_tt_destroy ( struct ttm_tt * ttm ) ; 
/*--ttm_tt_destroy--*/
int ttm_tt_set_user ( struct ttm_tt * ttm , struct task_struct * tsk , unsigned long start , unsigned long num_pages ) ; 
/*--ttm_tt_set_user--*/
struct ttm_tt * ttm_tt_create ( struct ttm_bo_device * bdev , unsigned long size , uint32_t page_flags , struct page * dummy_read_page ) ; 
/*--ttm_tt_create--*/
void ttm_tt_unbind ( struct ttm_tt * ttm ) ; 
/*--ttm_tt_unbind--*/
int ttm_tt_bind ( struct ttm_tt * ttm , struct ttm_mem_reg * bo_mem ) ; 
/*--ttm_tt_bind--*/
int ttm_tt_swapout ( struct ttm_tt * ttm , struct file * persistant_swap_storage ) ; 
/*--ttm_tt_swapout--*/
int ttm_bo_wait_unreserved ( struct ttm_buffer_object * bo , bool interruptible ) ; 
/*--ttm_bo_wait_unreserved--*/
int ttm_bo_reserve_locked ( struct ttm_buffer_object * bo , bool interruptible , bool no_wait , bool use_sequence , uint32_t sequence ) ; 
/*--ttm_bo_reserve_locked--*/
int ttm_bo_reserve ( struct ttm_buffer_object * bo , bool interruptible , bool no_wait , bool use_sequence , uint32_t sequence ) ; 
/*--ttm_bo_reserve--*/
void ttm_bo_unreserve ( struct ttm_buffer_object * bo ) ; 
/*--ttm_bo_unreserve--*/
void ttm_bo_unref ( struct ttm_buffer_object * * p_bo ) ; 
/*--ttm_bo_unref--*/
int ttm_bo_lock_delayed_workqueue ( struct ttm_bo_device * bdev ) ; 
/*--ttm_bo_lock_delayed_workqueue--*/
void ttm_bo_unlock_delayed_workqueue ( struct ttm_bo_device * bdev , int resched ) ; 
/*--ttm_bo_unlock_delayed_workqueue--*/
int ttm_bo_mem_space ( struct ttm_buffer_object * bo , struct ttm_placement * placement , struct ttm_mem_reg * mem , bool interruptible , bool no_wait_reserve , bool no_wait_gpu ) ; 
/*--ttm_bo_mem_space--*/
int ttm_bo_wait_cpu ( struct ttm_buffer_object * bo , bool no_wait ) ; 
/*--ttm_bo_wait_cpu--*/
int ttm_bo_move_buffer ( struct ttm_buffer_object * bo , struct ttm_placement * placement , bool interruptible , bool no_wait_reserve , bool no_wait_gpu ) ; 
/*--ttm_bo_move_buffer--*/
int ttm_bo_validate ( struct ttm_buffer_object * bo , struct ttm_placement * placement , bool interruptible , bool no_wait_reserve , bool no_wait_gpu ) ; 
/*--ttm_bo_validate--*/
int ttm_bo_check_placement ( struct ttm_buffer_object * bo , struct ttm_placement * placement ) ; 
/*--ttm_bo_check_placement--*/
int ttm_bo_init ( struct ttm_bo_device * bdev , struct ttm_buffer_object * bo , unsigned long size , enum ttm_bo_type type , struct ttm_placement * placement , uint32_t page_alignment , unsigned long buffer_start , bool interruptible , struct file * persistant_swap_storage , size_t acc_size , void ( * destroy ) ( struct ttm_buffer_object * ) ) ; 
/*--ttm_bo_init--*/
int ttm_bo_create ( struct ttm_bo_device * bdev , unsigned long size , enum ttm_bo_type type , struct ttm_placement * placement , uint32_t page_alignment , unsigned long buffer_start , bool interruptible , struct file * persistant_swap_storage , struct ttm_buffer_object * * p_bo ) ; 
/*--ttm_bo_create--*/
int ttm_bo_clean_mm ( struct ttm_bo_device * bdev , unsigned mem_type ) ; 
/*--ttm_bo_clean_mm--*/
int ttm_bo_evict_mm ( struct ttm_bo_device * bdev , unsigned mem_type ) ; 
/*--ttm_bo_evict_mm--*/
int ttm_bo_init_mm ( struct ttm_bo_device * bdev , unsigned type , unsigned long p_size ) ; 
/*--ttm_bo_init_mm--*/
void ttm_bo_global_release ( struct ttm_global_reference * ref ) ; 
/*--ttm_bo_global_release--*/
int ttm_bo_global_init ( struct ttm_global_reference * ref ) ; 
/*--ttm_bo_global_init--*/
int ttm_bo_device_release ( struct ttm_bo_device * bdev ) ; 
/*--ttm_bo_device_release--*/
int ttm_bo_device_init ( struct ttm_bo_device * bdev , struct ttm_bo_global * glob , struct ttm_bo_driver * driver , uint64_t file_page_offset , bool need_dma32 ) ; 
/*--ttm_bo_device_init--*/
bool ttm_mem_reg_is_pci ( struct ttm_bo_device * bdev , struct ttm_mem_reg * mem ) ; 
/*--ttm_mem_reg_is_pci--*/
void ttm_bo_unmap_virtual ( struct ttm_buffer_object * bo ) ; 
/*--ttm_bo_unmap_virtual--*/
int ttm_bo_wait ( struct ttm_buffer_object * bo , bool lazy , bool interruptible , bool no_wait ) ; 
/*--ttm_bo_wait--*/
int ttm_bo_synccpu_write_grab ( struct ttm_buffer_object * bo , bool no_wait ) ; 
/*--ttm_bo_synccpu_write_grab--*/
void ttm_bo_synccpu_write_release ( struct ttm_buffer_object * bo ) ; 
/*--ttm_bo_synccpu_write_release--*/
void ttm_bo_swapout_all ( struct ttm_bo_device * bdev ) ; 
/*--ttm_bo_swapout_all--*/
void ttm_bo_free_old_node ( struct ttm_buffer_object * bo ) ; 
/*--ttm_bo_free_old_node--*/
int ttm_bo_move_ttm ( struct ttm_buffer_object * bo , bool evict , bool no_wait_reserve , bool no_wait_gpu , struct ttm_mem_reg * new_mem ) ; 
/*--ttm_bo_move_ttm--*/
int ttm_mem_io_reserve ( struct ttm_bo_device * bdev , struct ttm_mem_reg * mem ) ; 
/*--ttm_mem_io_reserve--*/
void ttm_mem_io_free ( struct ttm_bo_device * bdev , struct ttm_mem_reg * mem ) ; 
/*--ttm_mem_io_free--*/
int ttm_mem_reg_ioremap ( struct ttm_bo_device * bdev , struct ttm_mem_reg * mem , void * * virtual ) ; 
/*--ttm_mem_reg_ioremap--*/
void ttm_mem_reg_iounmap ( struct ttm_bo_device * bdev , struct ttm_mem_reg * mem , void * virtual ) ; 
/*--ttm_mem_reg_iounmap--*/
int ttm_bo_move_memcpy ( struct ttm_buffer_object * bo , bool evict , bool no_wait_reserve , bool no_wait_gpu , struct ttm_mem_reg * new_mem ) ; 
/*--ttm_bo_move_memcpy--*/
pgprot_t ttm_io_prot ( uint32_t caching_flags , pgprot_t tmp ) ; 
/*--ttm_io_prot--*/
int ttm_bo_kmap ( struct ttm_buffer_object * bo , unsigned long start_page , unsigned long num_pages , struct ttm_bo_kmap_obj * map ) ; 
/*--ttm_bo_kmap--*/
void ttm_bo_kunmap ( struct ttm_bo_kmap_obj * map ) ; 
/*--ttm_bo_kunmap--*/
int ttm_bo_move_accel_cleanup ( struct ttm_buffer_object * bo , void * sync_obj , void * sync_obj_arg , bool evict , bool no_wait_reserve , bool no_wait_gpu , struct ttm_mem_reg * new_mem ) ; 
/*--ttm_bo_move_accel_cleanup--*/
int ttm_bo_mmap ( struct file * filp , struct vm_area_struct * vma , struct ttm_bo_device * bdev ) ; 
/*--ttm_bo_mmap--*/
int ttm_fbdev_mmap ( struct vm_area_struct * vma , struct ttm_buffer_object * bo ) ; 
/*--ttm_fbdev_mmap--*/
ssize_t ttm_bo_io ( struct ttm_bo_device * bdev , struct file * filp , const char * wbuf , char * rbuf , size_t count , loff_t * f_pos , bool write ) ; 
/*--ttm_bo_io--*/
ssize_t ttm_bo_fbdev_io ( struct ttm_buffer_object * bo , const char * wbuf , char * rbuf , size_t count , loff_t * f_pos , bool write ) ; 
/*--ttm_bo_fbdev_io--*/
struct kobject * ttm_get_kobj ( void ) ; 
/*--ttm_get_kobj--*/
void ttm_global_init ( void ) ; 
/*--ttm_global_init--*/
void ttm_global_release ( void ) ; 
/*--ttm_global_release--*/
int ttm_global_item_ref ( struct ttm_global_reference * ref ) ; 
/*--ttm_global_item_ref--*/
void ttm_global_item_unref ( struct ttm_global_reference * ref ) ; 
/*--ttm_global_item_unref--*/
int ttm_base_object_init ( struct ttm_object_file * tfile , struct ttm_base_object * base , bool shareable , enum ttm_object_type object_type , void ( * refcount_release ) ( struct ttm_base_object * * ) , void ( * ref_obj_release ) ( struct ttm_base_object * , enum ttm_ref_type ref_type ) ) ; 
/*--ttm_base_object_init--*/
void ttm_base_object_unref ( struct ttm_base_object * * p_base ) ; 
/*--ttm_base_object_unref--*/
struct ttm_base_object * ttm_base_object_lookup ( struct ttm_object_file * tfile , uint32_t key ) ; 
/*--ttm_base_object_lookup--*/
int ttm_ref_object_add ( struct ttm_object_file * tfile , struct ttm_base_object * base , enum ttm_ref_type ref_type , bool * existed ) ; 
/*--ttm_ref_object_add--*/
int ttm_ref_object_base_unref ( struct ttm_object_file * tfile , unsigned long key , enum ttm_ref_type ref_type ) ; 
/*--ttm_ref_object_base_unref--*/
void ttm_object_file_release ( struct ttm_object_file * * p_tfile ) ; 
/*--ttm_object_file_release--*/
struct ttm_object_file * ttm_object_file_init ( struct ttm_object_device * tdev , unsigned int hash_order ) ; 
/*--ttm_object_file_init--*/
struct ttm_object_device * ttm_object_device_init ( struct ttm_mem_global * mem_glob , unsigned int hash_order ) ; 
/*--ttm_object_device_init--*/
void ttm_object_device_release ( struct ttm_object_device * * p_tdev ) ; 
/*--ttm_object_device_release--*/
void ttm_lock_init ( struct ttm_lock * lock ) ; 
/*--ttm_lock_init--*/
void ttm_read_unlock ( struct ttm_lock * lock ) ; 
/*--ttm_read_unlock--*/
int ttm_read_lock ( struct ttm_lock * lock , bool interruptible ) ; 
/*--ttm_read_lock--*/
int ttm_read_trylock ( struct ttm_lock * lock , bool interruptible ) ; 
/*--ttm_read_trylock--*/
void ttm_write_unlock ( struct ttm_lock * lock ) ; 
/*--ttm_write_unlock--*/
int ttm_write_lock ( struct ttm_lock * lock , bool interruptible ) ; 
/*--ttm_write_lock--*/
void ttm_write_lock_downgrade ( struct ttm_lock * lock ) ; 
/*--ttm_write_lock_downgrade--*/
int ttm_vt_lock ( struct ttm_lock * lock , bool interruptible , struct ttm_object_file * tfile ) ; 
/*--ttm_vt_lock--*/
int ttm_vt_unlock ( struct ttm_lock * lock ) ; 
/*--ttm_vt_unlock--*/
void ttm_suspend_unlock ( struct ttm_lock * lock ) ; 
/*--ttm_suspend_unlock--*/
void ttm_suspend_lock ( struct ttm_lock * lock ) ; 
/*--ttm_suspend_lock--*/
void ttm_eu_backoff_reservation ( struct list_head * list ) ; 
/*--ttm_eu_backoff_reservation--*/
int ttm_eu_reserve_buffers ( struct list_head * list , uint32_t val_seq ) ; 
/*--ttm_eu_reserve_buffers--*/
void ttm_eu_fence_buffer_objects ( struct list_head * list , void * sync_obj ) ; 
/*--ttm_eu_fence_buffer_objects--*/
int ttm_get_pages ( struct list_head * pages , int flags , enum ttm_caching_state cstate , unsigned count ) ; 
/*--ttm_get_pages--*/
void ttm_put_pages ( struct list_head * pages , unsigned page_count , int flags , enum ttm_caching_state cstate ) ; 
/*--ttm_put_pages--*/
int ttm_page_alloc_init ( struct ttm_mem_global * glob , unsigned max_pages ) ; 
/*--ttm_page_alloc_init--*/
void ttm_page_alloc_fini ( ) ; 
/*--ttm_page_alloc_fini--*/
int ttm_page_alloc_debugfs ( struct seq_file * m , void * data ) ; 
/*--ttm_page_alloc_debugfs--*/
u32 via_get_vblank_counter ( struct drm_device * dev , int crtc ) ; 
/*--via_get_vblank_counter--*/
irqreturn_t via_driver_irq_handler ( int irq , void * arg ) ; 
/*--via_driver_irq_handler--*/
int via_enable_vblank ( struct drm_device * dev , int crtc ) ; 
/*--via_enable_vblank--*/
void via_disable_vblank ( struct drm_device * dev , int crtc ) ; 
/*--via_disable_vblank--*/
void via_driver_irq_preinstall ( struct drm_device * dev ) ; 
/*--via_driver_irq_preinstall--*/
int via_driver_irq_postinstall ( struct drm_device * dev ) ; 
/*--via_driver_irq_postinstall--*/
void via_driver_irq_uninstall ( struct drm_device * dev ) ; 
/*--via_driver_irq_uninstall--*/
int via_wait_irq ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_wait_irq--*/
int via_do_cleanup_map ( struct drm_device * dev ) ; 
/*--via_do_cleanup_map--*/
int via_map_init ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_map_init--*/
int via_driver_load ( struct drm_device * dev , unsigned long chipset ) ; 
/*--via_driver_load--*/
int via_driver_unload ( struct drm_device * dev ) ; 
/*--via_driver_unload--*/
int via_agp_init ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_agp_init--*/
int via_fb_init ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_fb_init--*/
int via_final_context ( struct drm_device * dev , int context ) ; 
/*--via_final_context--*/
void via_lastclose ( struct drm_device * dev ) ; 
/*--via_lastclose--*/
int via_mem_alloc ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_mem_alloc--*/
int via_mem_free ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_mem_free--*/
void via_reclaim_buffers_locked ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--via_reclaim_buffers_locked--*/
int via_dma_cleanup ( struct drm_device * dev ) ; 
/*--via_dma_cleanup--*/
int via_driver_dma_quiescent ( struct drm_device * dev ) ; 
/*--via_driver_dma_quiescent--*/
int via_verify_command_stream ( const uint32_t * buf , unsigned int size , struct drm_device * dev , int agp ) ; 
/*--via_verify_command_stream--*/
int via_parse_command_stream ( struct drm_device * dev , const uint32_t * buf , unsigned int size ) ; 
/*--via_parse_command_stream--*/
void via_init_command_verifier ( void ) ; 
/*--via_init_command_verifier--*/
void via_init_futex ( drm_via_private_t * dev_priv ) ; 
/*--via_init_futex--*/
void via_cleanup_futex ( drm_via_private_t * dev_priv ) ; 
/*--via_cleanup_futex--*/
void via_release_futex ( drm_via_private_t * dev_priv , int context ) ; 
/*--via_release_futex--*/
int via_decoder_futex ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_decoder_futex--*/
void via_dmablit_handler ( struct drm_device * dev , int engine , int from_irq ) ; 
/*--via_dmablit_handler--*/
void via_init_dmablit ( struct drm_device * dev ) ; 
/*--via_init_dmablit--*/
int via_dma_blit_sync ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_dma_blit_sync--*/
int via_dma_blit ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--via_dma_blit--*/
int drm_getmagic ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_getmagic--*/
int drm_authmagic ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_authmagic--*/
int drm_buffer_alloc ( struct drm_buffer * * buf , int size ) ; 
/*--drm_buffer_alloc--*/
int drm_buffer_copy_from_user ( struct drm_buffer * buf , void * user_data , int size ) ; 
/*--drm_buffer_copy_from_user--*/
void drm_buffer_free ( struct drm_buffer * buf ) ; 
/*--drm_buffer_free--*/
void * drm_buffer_read_object ( struct drm_buffer * buf , int objsize , void * stack_obj ) ; 
/*--drm_buffer_read_object--*/
resource_size_t drm_get_resource_start ( struct drm_device * dev , unsigned int resource ) ; 
/*--drm_get_resource_start--*/
resource_size_t drm_get_resource_len ( struct drm_device * dev , unsigned int resource ) ; 
/*--drm_get_resource_len--*/
int drm_addmap ( struct drm_device * dev , resource_size_t offset , unsigned int size , enum drm_map_type type , enum drm_map_flags flags , struct drm_local_map * * map_ptr ) ; 
/*--drm_addmap--*/
int drm_addmap_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_addmap_ioctl--*/
int drm_rmmap_locked ( struct drm_device * dev , struct drm_local_map * map ) ; 
/*--drm_rmmap_locked--*/
int drm_rmmap ( struct drm_device * dev , struct drm_local_map * map ) ; 
/*--drm_rmmap--*/
int drm_rmmap_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_rmmap_ioctl--*/
int drm_addbufs_agp ( struct drm_device * dev , struct drm_buf_desc * request ) ; 
/*--drm_addbufs_agp--*/
int drm_addbufs_pci ( struct drm_device * dev , struct drm_buf_desc * request ) ; 
/*--drm_addbufs_pci--*/
int drm_addbufs ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_addbufs--*/
int drm_infobufs ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_infobufs--*/
int drm_markbufs ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_markbufs--*/
int drm_freebufs ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_freebufs--*/
int drm_mapbufs ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mapbufs--*/
int drm_order ( unsigned long size ) ; 
/*--drm_order--*/
void drm_clflush_pages ( struct page * pages [ ] , unsigned long num_pages ) ; 
/*--drm_clflush_pages--*/
void drm_ctxbitmap_free ( struct drm_device * dev , int ctx_handle ) ; 
/*--drm_ctxbitmap_free--*/
int drm_ctxbitmap_init ( struct drm_device * dev ) ; 
/*--drm_ctxbitmap_init--*/
void drm_ctxbitmap_cleanup ( struct drm_device * dev ) ; 
/*--drm_ctxbitmap_cleanup--*/
int drm_getsareactx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_getsareactx--*/
int drm_setsareactx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_setsareactx--*/
int drm_resctx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_resctx--*/
int drm_addctx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_addctx--*/
int drm_modctx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_modctx--*/
int drm_getctx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_getctx--*/
int drm_switchctx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_switchctx--*/
int drm_newctx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_newctx--*/
int drm_rmctx ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_rmctx--*/
int drm_dma_setup ( struct drm_device * dev ) ; 
/*--drm_dma_setup--*/
void drm_dma_takedown ( struct drm_device * dev ) ; 
/*--drm_dma_takedown--*/
void drm_free_buffer ( struct drm_device * dev , struct drm_buf * buf ) ; 
/*--drm_free_buffer--*/
void drm_core_reclaim_buffers ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--drm_core_reclaim_buffers--*/
int drm_adddraw ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_adddraw--*/
int drm_rmdraw ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_rmdraw--*/
int drm_update_drawable_info ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_update_drawable_info--*/
struct drm_drawable_info * drm_get_drawable_info ( struct drm_device * dev , drm_drawable_t id ) ; 
/*--drm_get_drawable_info--*/
void drm_drawable_free_all ( struct drm_device * dev ) ; 
/*--drm_drawable_free_all--*/
int drm_lastclose ( struct drm_device * dev ) ; 
/*--drm_lastclose--*/
int drm_init ( struct drm_driver * driver ) ; 
/*--drm_init--*/
void drm_exit ( struct drm_driver * driver ) ; 
/*--drm_exit--*/
long drm_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--drm_ioctl--*/
struct drm_local_map * drm_getsarea ( struct drm_device * dev ) ; 
/*--drm_getsarea--*/
int drm_open ( struct inode * inode , struct file * filp ) ; 
/*--drm_open--*/
int drm_stub_open ( struct inode * inode , struct file * filp ) ; 
/*--drm_stub_open--*/
int drm_fasync ( int fd , struct file * filp , int on ) ; 
/*--drm_fasync--*/
int drm_release ( struct inode * inode , struct file * filp ) ; 
/*--drm_release--*/
ssize_t drm_read ( struct file * filp , char * buffer , size_t count , loff_t * offset ) ; 
/*--drm_read--*/
unsigned int drm_poll ( struct file * filp , struct poll_table_struct * wait ) ; 
/*--drm_poll--*/
int drm_gem_init ( struct drm_device * dev ) ; 
/*--drm_gem_init--*/
void drm_gem_destroy ( struct drm_device * dev ) ; 
/*--drm_gem_destroy--*/
int drm_gem_object_init ( struct drm_device * dev , struct drm_gem_object * obj , size_t size ) ; 
/*--drm_gem_object_init--*/
struct drm_gem_object * drm_gem_object_alloc ( struct drm_device * dev , size_t size ) ; 
/*--drm_gem_object_alloc--*/
int drm_gem_handle_create ( struct drm_file * file_priv , struct drm_gem_object * obj , u32 * handlep ) ; 
/*--drm_gem_handle_create--*/
struct drm_gem_object * drm_gem_object_lookup ( struct drm_device * dev , struct drm_file * filp , u32 handle ) ; 
/*--drm_gem_object_lookup--*/
int drm_gem_close_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_gem_close_ioctl--*/
int drm_gem_flink_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_gem_flink_ioctl--*/
int drm_gem_open_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_gem_open_ioctl--*/
void drm_gem_open ( struct drm_device * dev , struct drm_file * file_private ) ; 
/*--drm_gem_open--*/
void drm_gem_release ( struct drm_device * dev , struct drm_file * file_private ) ; 
/*--drm_gem_release--*/
void drm_gem_object_release ( struct drm_gem_object * obj ) ; 
/*--drm_gem_object_release--*/
void drm_gem_object_free ( struct kref * kref ) ; 
/*--drm_gem_object_free--*/
void drm_gem_object_handle_free ( struct kref * kref ) ; 
/*--drm_gem_object_handle_free--*/
void drm_gem_vm_open ( struct vm_area_struct * vma ) ; 
/*--drm_gem_vm_open--*/
void drm_gem_vm_close ( struct vm_area_struct * vma ) ; 
/*--drm_gem_vm_close--*/
int drm_gem_mmap ( struct file * filp , struct vm_area_struct * vma ) ; 
/*--drm_gem_mmap--*/
int drm_getunique ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_getunique--*/
int drm_setunique ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_setunique--*/
int drm_getmap ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_getmap--*/
int drm_getclient ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_getclient--*/
int drm_getstats ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_getstats--*/
int drm_setversion ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_setversion--*/
int drm_noop ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_noop--*/
int drm_irq_by_busid ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_irq_by_busid--*/
void drm_vblank_cleanup ( struct drm_device * dev ) ; 
/*--drm_vblank_cleanup--*/
int drm_vblank_init ( struct drm_device * dev , int num_crtcs ) ; 
/*--drm_vblank_init--*/
int drm_irq_install ( struct drm_device * dev ) ; 
/*--drm_irq_install--*/
int drm_irq_uninstall ( struct drm_device * dev ) ; 
/*--drm_irq_uninstall--*/
int drm_control ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_control--*/
u32 drm_vblank_count ( struct drm_device * dev , int crtc ) ; 
/*--drm_vblank_count--*/
int drm_vblank_get ( struct drm_device * dev , int crtc ) ; 
/*--drm_vblank_get--*/
void drm_vblank_put ( struct drm_device * dev , int crtc ) ; 
/*--drm_vblank_put--*/
void drm_vblank_off ( struct drm_device * dev , int crtc ) ; 
/*--drm_vblank_off--*/
void drm_vblank_pre_modeset ( struct drm_device * dev , int crtc ) ; 
/*--drm_vblank_pre_modeset--*/
void drm_vblank_post_modeset ( struct drm_device * dev , int crtc ) ; 
/*--drm_vblank_post_modeset--*/
int drm_modeset_ctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_modeset_ctl--*/
int drm_wait_vblank ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_wait_vblank--*/
void drm_handle_vblank_events ( struct drm_device * dev , int crtc ) ; 
/*--drm_handle_vblank_events--*/
void drm_handle_vblank ( struct drm_device * dev , int crtc ) ; 
/*--drm_handle_vblank--*/
int drm_lock ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_lock--*/
int drm_unlock ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_unlock--*/
int drm_lock_take ( struct drm_lock_data * lock_data , unsigned int context ) ; 
/*--drm_lock_take--*/
int drm_lock_free ( struct drm_lock_data * lock_data , unsigned int context ) ; 
/*--drm_lock_free--*/
void drm_idlelock_take ( struct drm_lock_data * lock_data ) ; 
/*--drm_idlelock_take--*/
void drm_idlelock_release ( struct drm_lock_data * lock_data ) ; 
/*--drm_idlelock_release--*/
int drm_i_have_hw_lock ( struct drm_device * dev , struct drm_file * file_priv ) ; 
/*--drm_i_have_hw_lock--*/
int drm_mem_info ( char * buf , char * * start , off_t offset , int len , int * eof , void * data ) ; 
/*--drm_mem_info--*/
struct agp_memory * drm_alloc_agp ( struct drm_device * dev , int pages , u32 type ) ; 
/*--drm_alloc_agp--*/
int drm_free_agp ( struct agp_memory * handle , int pages ) ; 
/*--drm_free_agp--*/
int drm_bind_agp ( struct agp_memory * handle , unsigned int start ) ; 
/*--drm_bind_agp--*/
int drm_unbind_agp ( struct agp_memory * handle ) ; 
/*--drm_unbind_agp--*/
void drm_core_ioremap ( struct drm_local_map * map , struct drm_device * dev ) ; 
/*--drm_core_ioremap--*/
void drm_core_ioremap_wc ( struct drm_local_map * map , struct drm_device * dev ) ; 
/*--drm_core_ioremap_wc--*/
void drm_core_ioremapfree ( struct drm_local_map * map , struct drm_device * dev ) ; 
/*--drm_core_ioremapfree--*/
int drm_proc_create_files ( struct drm_info_list * files , int count , struct proc_dir_entry * root , struct drm_minor * minor ) ; 
/*--drm_proc_create_files--*/
int drm_proc_init ( struct drm_minor * minor , int minor_id , struct proc_dir_entry * root ) ; 
/*--drm_proc_init--*/
int drm_proc_remove_files ( struct drm_info_list * files , int count , struct drm_minor * minor ) ; 
/*--drm_proc_remove_files--*/
int drm_proc_cleanup ( struct drm_minor * minor , struct proc_dir_entry * root ) ; 
/*--drm_proc_cleanup--*/
void drm_ut_debug_printk ( unsigned int request_level , const char * prefix , const char * function_name , const char * format , ... ) ; 
/*--drm_ut_debug_printk--*/
struct drm_master * drm_master_create ( struct drm_minor * minor ) ; 
/*--drm_master_create--*/
struct drm_master * drm_master_get ( struct drm_master * master ) ; 
/*--drm_master_get--*/
void drm_master_put ( struct drm_master * * master ) ; 
/*--drm_master_put--*/
int drm_setmaster_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_setmaster_ioctl--*/
int drm_dropmaster_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_dropmaster_ioctl--*/
int drm_get_dev ( struct pci_dev * pdev , const struct pci_device_id * ent , struct drm_driver * driver ) ; 
/*--drm_get_dev--*/
int drm_put_minor ( struct drm_minor * * minor_p ) ; 
/*--drm_put_minor--*/
void drm_put_dev ( struct drm_device * dev ) ; 
/*--drm_put_dev--*/
void drm_vm_open_locked ( struct vm_area_struct * vma ) ; 
/*--drm_vm_open_locked--*/
void drm_vm_close_locked ( struct vm_area_struct * vma ) ; 
/*--drm_vm_close_locked--*/
resource_size_t drm_core_get_map_ofs ( struct drm_local_map * map ) ; 
/*--drm_core_get_map_ofs--*/
resource_size_t drm_core_get_reg_ofs ( struct drm_device * dev ) ; 
/*--drm_core_get_reg_ofs--*/
int drm_mmap_locked ( struct file * filp , struct vm_area_struct * vma ) ; 
/*--drm_mmap_locked--*/
int drm_mmap ( struct file * filp , struct vm_area_struct * vma ) ; 
/*--drm_mmap--*/
int drm_agp_info ( struct drm_device * dev , struct drm_agp_info * info ) ; 
/*--drm_agp_info--*/
int drm_agp_info_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_agp_info_ioctl--*/
int drm_agp_acquire ( struct drm_device * dev ) ; 
/*--drm_agp_acquire--*/
int drm_agp_acquire_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_agp_acquire_ioctl--*/
int drm_agp_release ( struct drm_device * dev ) ; 
/*--drm_agp_release--*/
int drm_agp_release_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_agp_release_ioctl--*/
int drm_agp_enable ( struct drm_device * dev , struct drm_agp_mode mode ) ; 
/*--drm_agp_enable--*/
int drm_agp_enable_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_agp_enable_ioctl--*/
int drm_agp_alloc ( struct drm_device * dev , struct drm_agp_buffer * request ) ; 
/*--drm_agp_alloc--*/
int drm_agp_alloc_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_agp_alloc_ioctl--*/
int drm_agp_unbind ( struct drm_device * dev , struct drm_agp_binding * request ) ; 
/*--drm_agp_unbind--*/
int drm_agp_unbind_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_agp_unbind_ioctl--*/
int drm_agp_bind ( struct drm_device * dev , struct drm_agp_binding * request ) ; 
/*--drm_agp_bind--*/
int drm_agp_bind_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_agp_bind_ioctl--*/
int drm_agp_free ( struct drm_device * dev , struct drm_agp_buffer * request ) ; 
/*--drm_agp_free--*/
int drm_agp_free_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_agp_free_ioctl--*/
struct drm_agp_head * drm_agp_init ( struct drm_device * dev ) ; 
/*--drm_agp_init--*/
struct agp_memory * drm_agp_allocate_memory ( struct agp_bridge_data * bridge , size_t pages , u32 type ) ; 
/*--drm_agp_allocate_memory--*/
int drm_agp_free_memory ( struct agp_memory * handle ) ; 
/*--drm_agp_free_memory--*/
int drm_agp_bind_memory ( struct agp_memory * handle , off_t start ) ; 
/*--drm_agp_bind_memory--*/
int drm_agp_unbind_memory ( struct agp_memory * handle ) ; 
/*--drm_agp_unbind_memory--*/
struct agp_memory * drm_agp_bind_pages ( struct drm_device * dev , struct page * * pages , unsigned long num_pages , uint32_t gtt_offset , u32 type ) ; 
/*--drm_agp_bind_pages--*/
void drm_agp_chipset_flush ( struct drm_device * dev ) ; 
/*--drm_agp_chipset_flush--*/
void drm_sg_cleanup ( struct drm_sg_mem * entry ) ; 
/*--drm_sg_cleanup--*/
int drm_sg_alloc ( struct drm_device * dev , struct drm_scatter_gather * request ) ; 
/*--drm_sg_alloc--*/
int drm_sg_alloc_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_sg_alloc_ioctl--*/
int drm_sg_free ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_sg_free--*/
int drm_ati_pcigart_cleanup ( struct drm_device * dev , struct drm_ati_pcigart_info * gart_info ) ; 
/*--drm_ati_pcigart_cleanup--*/
int drm_ati_pcigart_init ( struct drm_device * dev , struct drm_ati_pcigart_info * gart_info ) ; 
/*--drm_ati_pcigart_init--*/
drm_dma_handle_t * drm_pci_alloc ( struct drm_device * dev , size_t size , size_t align ) ; 
/*--drm_pci_alloc--*/
void __drm_pci_free ( struct drm_device * dev , drm_dma_handle_t * dmah ) ; 
/*--__drm_pci_free--*/
void drm_pci_free ( struct drm_device * dev , drm_dma_handle_t * dmah ) ; 
/*--drm_pci_free--*/
struct class * drm_sysfs_create ( struct module * owner , char * name ) ; 
/*--drm_sysfs_create--*/
void drm_sysfs_destroy ( void ) ; 
/*--drm_sysfs_destroy--*/
int drm_sysfs_connector_add ( struct drm_connector * connector ) ; 
/*--drm_sysfs_connector_add--*/
void drm_sysfs_connector_remove ( struct drm_connector * connector ) ; 
/*--drm_sysfs_connector_remove--*/
void drm_sysfs_hotplug_event ( struct drm_device * dev ) ; 
/*--drm_sysfs_hotplug_event--*/
int drm_sysfs_device_add ( struct drm_minor * minor ) ; 
/*--drm_sysfs_device_add--*/
void drm_sysfs_device_remove ( struct drm_minor * minor ) ; 
/*--drm_sysfs_device_remove--*/
int drm_class_device_register ( struct device * dev ) ; 
/*--drm_class_device_register--*/
void drm_class_device_unregister ( struct device * dev ) ; 
/*--drm_class_device_unregister--*/
int drm_ht_create ( struct drm_open_hash * ht , unsigned int order ) ; 
/*--drm_ht_create--*/
void drm_ht_verbose_list ( struct drm_open_hash * ht , unsigned long key ) ; 
/*--drm_ht_verbose_list--*/
int drm_ht_insert_item ( struct drm_open_hash * ht , struct drm_hash_item * item ) ; 
/*--drm_ht_insert_item--*/
int drm_ht_just_insert_please ( struct drm_open_hash * ht , struct drm_hash_item * item , unsigned long seed , int bits , int shift , unsigned long add ) ; 
/*--drm_ht_just_insert_please--*/
int drm_ht_find_item ( struct drm_open_hash * ht , unsigned long key , struct drm_hash_item * * item ) ; 
/*--drm_ht_find_item--*/
int drm_ht_remove_key ( struct drm_open_hash * ht , unsigned long key ) ; 
/*--drm_ht_remove_key--*/
int drm_ht_remove_item ( struct drm_open_hash * ht , struct drm_hash_item * item ) ; 
/*--drm_ht_remove_item--*/
void drm_ht_remove ( struct drm_open_hash * ht ) ; 
/*--drm_ht_remove--*/
void drm_sman_takedown ( struct drm_sman * sman ) ; 
/*--drm_sman_takedown--*/
int drm_sman_init ( struct drm_sman * sman , unsigned int num_managers , unsigned int user_order , unsigned int owner_order ) ; 
/*--drm_sman_init--*/
int drm_sman_set_range ( struct drm_sman * sman , unsigned int manager , unsigned long start , unsigned long size ) ; 
/*--drm_sman_set_range--*/
int drm_sman_set_manager ( struct drm_sman * sman , unsigned int manager , struct drm_sman_mm * allocator ) ; 
/*--drm_sman_set_manager--*/
struct drm_memblock_item * drm_sman_alloc ( struct drm_sman * sman , unsigned int manager , unsigned long size , unsigned alignment , unsigned long owner ) ; 
/*--drm_sman_alloc--*/
int drm_sman_free_key ( struct drm_sman * sman , unsigned int key ) ; 
/*--drm_sman_free_key--*/
int drm_sman_owner_clean ( struct drm_sman * sman , unsigned long owner ) ; 
/*--drm_sman_owner_clean--*/
void drm_sman_owner_cleanup ( struct drm_sman * sman , unsigned long owner ) ; 
/*--drm_sman_owner_cleanup--*/
void drm_sman_cleanup ( struct drm_sman * sman ) ; 
/*--drm_sman_cleanup--*/
unsigned long drm_mm_tail_space ( struct drm_mm * mm ) ; 
/*--drm_mm_tail_space--*/
int drm_mm_remove_space_from_tail ( struct drm_mm * mm , unsigned long size ) ; 
/*--drm_mm_remove_space_from_tail--*/
int drm_mm_pre_get ( struct drm_mm * mm ) ; 
/*--drm_mm_pre_get--*/
int drm_mm_add_space_to_tail ( struct drm_mm * mm , unsigned long size , int atomic ) ; 
/*--drm_mm_add_space_to_tail--*/
struct drm_mm_node * drm_mm_get_block_generic ( struct drm_mm_node * node , unsigned long size , unsigned alignment , int atomic ) ; 
/*--drm_mm_get_block_generic--*/
struct drm_mm_node * drm_mm_get_block_range_generic ( struct drm_mm_node * node , unsigned long size , unsigned alignment , unsigned long start , unsigned long end , int atomic ) ; 
/*--drm_mm_get_block_range_generic--*/
void drm_mm_put_block ( struct drm_mm_node * cur ) ; 
/*--drm_mm_put_block--*/
struct drm_mm_node * drm_mm_search_free ( const struct drm_mm * mm , unsigned long size , unsigned alignment , int best_match ) ; 
/*--drm_mm_search_free--*/
struct drm_mm_node * drm_mm_search_free_in_range ( const struct drm_mm * mm , unsigned long size , unsigned alignment , unsigned long start , unsigned long end , int best_match ) ; 
/*--drm_mm_search_free_in_range--*/
int drm_mm_clean ( struct drm_mm * mm ) ; 
/*--drm_mm_clean--*/
int drm_mm_init ( struct drm_mm * mm , unsigned long start , unsigned long size ) ; 
/*--drm_mm_init--*/
void drm_mm_takedown ( struct drm_mm * mm ) ; 
/*--drm_mm_takedown--*/
void drm_mm_debug_table ( struct drm_mm * mm , const char * prefix ) ; 
/*--drm_mm_debug_table--*/
int drm_mm_dump_table ( struct seq_file * m , struct drm_mm * mm ) ; 
/*--drm_mm_dump_table--*/
char * drm_get_dpms_name ( int val ) ; 
/*--drm_get_dpms_name--*/
char * drm_get_dvi_i_select_name ( int val ) ; 
/*--drm_get_dvi_i_select_name--*/
char * drm_get_dvi_i_subconnector_name ( int val ) ; 
/*--drm_get_dvi_i_subconnector_name--*/
char * drm_get_tv_select_name ( int val ) ; 
/*--drm_get_tv_select_name--*/
char * drm_get_tv_subconnector_name ( int val ) ; 
/*--drm_get_tv_subconnector_name--*/
char * drm_get_dirty_info_name ( int val ) ; 
/*--drm_get_dirty_info_name--*/
char * drm_get_encoder_name ( struct drm_encoder * encoder ) ; 
/*--drm_get_encoder_name--*/
char * drm_get_connector_name ( struct drm_connector * connector ) ; 
/*--drm_get_connector_name--*/
char * drm_get_connector_status_name ( enum drm_connector_status status ) ; 
/*--drm_get_connector_status_name--*/
struct drm_mode_object * drm_mode_object_find ( struct drm_device * dev , uint32_t id , uint32_t type ) ; 
/*--drm_mode_object_find--*/
int drm_framebuffer_init ( struct drm_device * dev , struct drm_framebuffer * fb , const struct drm_framebuffer_funcs * funcs ) ; 
/*--drm_framebuffer_init--*/
void drm_framebuffer_cleanup ( struct drm_framebuffer * fb ) ; 
/*--drm_framebuffer_cleanup--*/
void drm_crtc_init ( struct drm_device * dev , struct drm_crtc * crtc , const struct drm_crtc_funcs * funcs ) ; 
/*--drm_crtc_init--*/
void drm_crtc_cleanup ( struct drm_crtc * crtc ) ; 
/*--drm_crtc_cleanup--*/
void drm_mode_probed_add ( struct drm_connector * connector , struct drm_display_mode * mode ) ; 
/*--drm_mode_probed_add--*/
void drm_mode_remove ( struct drm_connector * connector , struct drm_display_mode * mode ) ; 
/*--drm_mode_remove--*/
void drm_connector_init ( struct drm_device * dev , struct drm_connector * connector , const struct drm_connector_funcs * funcs , int connector_type ) ; 
/*--drm_connector_init--*/
void drm_connector_cleanup ( struct drm_connector * connector ) ; 
/*--drm_connector_cleanup--*/
void drm_encoder_init ( struct drm_device * dev , struct drm_encoder * encoder , const struct drm_encoder_funcs * funcs , int encoder_type ) ; 
/*--drm_encoder_init--*/
void drm_encoder_cleanup ( struct drm_encoder * encoder ) ; 
/*--drm_encoder_cleanup--*/
struct drm_display_mode * drm_mode_create ( struct drm_device * dev ) ; 
/*--drm_mode_create--*/
void drm_mode_destroy ( struct drm_device * dev , struct drm_display_mode * mode ) ; 
/*--drm_mode_destroy--*/
int drm_mode_create_dvi_i_properties ( struct drm_device * dev ) ; 
/*--drm_mode_create_dvi_i_properties--*/
int drm_mode_create_tv_properties ( struct drm_device * dev , int num_modes , char * modes [ ] ) ; 
/*--drm_mode_create_tv_properties--*/
int drm_mode_create_scaling_mode_property ( struct drm_device * dev ) ; 
/*--drm_mode_create_scaling_mode_property--*/
int drm_mode_create_dithering_property ( struct drm_device * dev ) ; 
/*--drm_mode_create_dithering_property--*/
int drm_mode_create_dirty_info_property ( struct drm_device * dev ) ; 
/*--drm_mode_create_dirty_info_property--*/
void drm_mode_config_init ( struct drm_device * dev ) ; 
/*--drm_mode_config_init--*/
int drm_mode_group_init ( struct drm_device * dev , struct drm_mode_group * group ) ; 
/*--drm_mode_group_init--*/
int drm_mode_group_init_legacy_group ( struct drm_device * dev , struct drm_mode_group * group ) ; 
/*--drm_mode_group_init_legacy_group--*/
void drm_mode_config_cleanup ( struct drm_device * dev ) ; 
/*--drm_mode_config_cleanup--*/
void drm_crtc_convert_to_umode ( struct drm_mode_modeinfo * out , struct drm_display_mode * in ) ; 
/*--drm_crtc_convert_to_umode--*/
void drm_crtc_convert_umode ( struct drm_display_mode * out , struct drm_mode_modeinfo * in ) ; 
/*--drm_crtc_convert_umode--*/
int drm_mode_getresources ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_getresources--*/
int drm_mode_getcrtc ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_getcrtc--*/
int drm_mode_getconnector ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_getconnector--*/
int drm_mode_getencoder ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_getencoder--*/
int drm_mode_setcrtc ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_setcrtc--*/
int drm_mode_cursor_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_cursor_ioctl--*/
int drm_mode_addfb ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_addfb--*/
int drm_mode_rmfb ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_rmfb--*/
int drm_mode_getfb ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_getfb--*/
int drm_mode_dirtyfb_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_dirtyfb_ioctl--*/
void drm_fb_release ( struct drm_file * priv ) ; 
/*--drm_fb_release--*/
int drm_mode_attachmode_crtc ( struct drm_device * dev , struct drm_crtc * crtc , struct drm_display_mode * mode ) ; 
/*--drm_mode_attachmode_crtc--*/
int drm_mode_detachmode_crtc ( struct drm_device * dev , struct drm_display_mode * mode ) ; 
/*--drm_mode_detachmode_crtc--*/
int drm_mode_attachmode_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_attachmode_ioctl--*/
int drm_mode_detachmode_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_detachmode_ioctl--*/
struct drm_property * drm_property_create ( struct drm_device * dev , int flags , const char * name , int num_values ) ; 
/*--drm_property_create--*/
int drm_property_add_enum ( struct drm_property * property , int index , uint64_t value , const char * name ) ; 
/*--drm_property_add_enum--*/
void drm_property_destroy ( struct drm_device * dev , struct drm_property * property ) ; 
/*--drm_property_destroy--*/
int drm_connector_attach_property ( struct drm_connector * connector , struct drm_property * property , uint64_t init_val ) ; 
/*--drm_connector_attach_property--*/
int drm_connector_property_set_value ( struct drm_connector * connector , struct drm_property * property , uint64_t value ) ; 
/*--drm_connector_property_set_value--*/
int drm_connector_property_get_value ( struct drm_connector * connector , struct drm_property * property , uint64_t * val ) ; 
/*--drm_connector_property_get_value--*/
int drm_mode_getproperty_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_getproperty_ioctl--*/
int drm_mode_getblob_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_getblob_ioctl--*/
int drm_mode_connector_update_edid_property ( struct drm_connector * connector , struct edid * edid ) ; 
/*--drm_mode_connector_update_edid_property--*/
int drm_mode_connector_property_set_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_connector_property_set_ioctl--*/
int drm_mode_connector_attach_encoder ( struct drm_connector * connector , struct drm_encoder * encoder ) ; 
/*--drm_mode_connector_attach_encoder--*/
void drm_mode_connector_detach_encoder ( struct drm_connector * connector , struct drm_encoder * encoder ) ; 
/*--drm_mode_connector_detach_encoder--*/
bool drm_mode_crtc_set_gamma_size ( struct drm_crtc * crtc , int gamma_size ) ; 
/*--drm_mode_crtc_set_gamma_size--*/
int drm_mode_gamma_set_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_gamma_set_ioctl--*/
int drm_mode_gamma_get_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_gamma_get_ioctl--*/
int drm_mode_page_flip_ioctl ( struct drm_device * dev , void * data , struct drm_file * file_priv ) ; 
/*--drm_mode_page_flip_ioctl--*/
void drm_mode_debug_printmodeline ( struct drm_display_mode * mode ) ; 
/*--drm_mode_debug_printmodeline--*/
struct drm_display_mode * drm_cvt_mode ( struct drm_device * dev , int hdisplay , int vdisplay , int vrefresh , bool reduced , bool interlaced , bool margins ) ; 
/*--drm_cvt_mode--*/
struct drm_display_mode * drm_gtf_mode_complex ( struct drm_device * dev , int hdisplay , int vdisplay , int vrefresh , bool interlaced , int margins , int GTF_M , int GTF_2C , int GTF_K , int GTF_2J ) ; 
/*--drm_gtf_mode_complex--*/
struct drm_display_mode * drm_gtf_mode ( struct drm_device * dev , int hdisplay , int vdisplay , int vrefresh , bool lace , int margins ) ; 
/*--drm_gtf_mode--*/
void drm_mode_set_name ( struct drm_display_mode * mode ) ; 
/*--drm_mode_set_name--*/
void drm_mode_list_concat ( struct list_head * head , struct list_head * new ) ; 
/*--drm_mode_list_concat--*/
int drm_mode_width ( struct drm_display_mode * mode ) ; 
/*--drm_mode_width--*/
int drm_mode_height ( struct drm_display_mode * mode ) ; 
/*--drm_mode_height--*/
int drm_mode_hsync ( struct drm_display_mode * mode ) ; 
/*--drm_mode_hsync--*/
int drm_mode_vrefresh ( struct drm_display_mode * mode ) ; 
/*--drm_mode_vrefresh--*/
void drm_mode_set_crtcinfo ( struct drm_display_mode * p , int adjust_flags ) ; 
/*--drm_mode_set_crtcinfo--*/
struct drm_display_mode * drm_mode_duplicate ( struct drm_device * dev , struct drm_display_mode * mode ) ; 
/*--drm_mode_duplicate--*/
bool drm_mode_equal ( struct drm_display_mode * mode1 , struct drm_display_mode * mode2 ) ; 
/*--drm_mode_equal--*/
void drm_mode_validate_size ( struct drm_device * dev , struct list_head * mode_list , int maxX , int maxY , int maxPitch ) ; 
/*--drm_mode_validate_size--*/
void drm_mode_validate_clocks ( struct drm_device * dev , struct list_head * mode_list , int * min , int * max , int n_ranges ) ; 
/*--drm_mode_validate_clocks--*/
void drm_mode_prune_invalid ( struct drm_device * dev , struct list_head * mode_list , bool verbose ) ; 
/*--drm_mode_prune_invalid--*/
void drm_mode_sort ( struct list_head * mode_list ) ; 
/*--drm_mode_sort--*/
void drm_mode_connector_list_update ( struct drm_connector * connector ) ; 
/*--drm_mode_connector_list_update--*/
bool drm_edid_is_valid ( struct edid * edid ) ; 
/*--drm_edid_is_valid--*/
struct edid * drm_get_edid ( struct drm_connector * connector , struct i2c_adapter * adapter ) ; 
/*--drm_get_edid--*/
struct drm_display_mode * drm_mode_find_dmt ( struct drm_device * dev , int hsize , int vsize , int fresh ) ; 
/*--drm_mode_find_dmt--*/
bool drm_detect_hdmi_monitor ( struct edid * edid ) ; 
/*--drm_detect_hdmi_monitor--*/
int drm_add_edid_modes ( struct drm_connector * connector , struct edid * edid ) ; 
/*--drm_add_edid_modes--*/
int drm_add_modes_noedid ( struct drm_connector * connector , int hdisplay , int vdisplay ) ; 
/*--drm_add_modes_noedid--*/
int drm_name_info ( struct seq_file * m , void * data ) ; 
/*--drm_name_info--*/
int drm_vm_info ( struct seq_file * m , void * data ) ; 
/*--drm_vm_info--*/
int drm_queues_info ( struct seq_file * m , void * data ) ; 
/*--drm_queues_info--*/
int drm_bufs_info ( struct seq_file * m , void * data ) ; 
/*--drm_bufs_info--*/
int drm_vblank_info ( struct seq_file * m , void * data ) ; 
/*--drm_vblank_info--*/
int drm_clients_info ( struct seq_file * m , void * data ) ; 
/*--drm_clients_info--*/
int drm_gem_one_name_info ( int id , void * ptr , void * data ) ; 
/*--drm_gem_one_name_info--*/
int drm_gem_name_info ( struct seq_file * m , void * data ) ; 
/*--drm_gem_name_info--*/
int drm_gem_object_info ( struct seq_file * m , void * data ) ; 
/*--drm_gem_object_info--*/
int drm_vma_info ( struct seq_file * m , void * data ) ; 
/*--drm_vma_info--*/
int drm_debugfs_create_files ( struct drm_info_list * files , int count , struct dentry * root , struct drm_minor * minor ) ; 
/*--drm_debugfs_create_files--*/
int drm_debugfs_init ( struct drm_minor * minor , int minor_id , struct dentry * root ) ; 
/*--drm_debugfs_init--*/
int drm_debugfs_remove_files ( struct drm_info_list * files , int count , struct drm_minor * minor ) ; 
/*--drm_debugfs_remove_files--*/
int drm_debugfs_cleanup ( struct drm_minor * minor ) ; 
/*--drm_debugfs_cleanup--*/
int drm_i2c_encoder_init ( struct drm_device * dev , struct drm_encoder_slave * encoder , struct i2c_adapter * adap , const struct i2c_board_info * info ) ; 
/*--drm_i2c_encoder_init--*/
void drm_i2c_encoder_destroy ( struct drm_encoder * drm_encoder ) ; 
/*--drm_i2c_encoder_destroy--*/
long drm_compat_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--drm_compat_ioctl--*/
int drm_fb_helper_single_add_all_connectors ( struct drm_fb_helper * fb_helper ) ; 
/*--drm_fb_helper_single_add_all_connectors--*/
bool drm_fb_helper_force_kernel_mode ( void ) ; 
/*--drm_fb_helper_force_kernel_mode--*/
int drm_fb_helper_panic ( struct notifier_block * n , unsigned long ununsed , void * panic_str ) ; 
/*--drm_fb_helper_panic--*/
void drm_fb_helper_restore ( void ) ; 
/*--drm_fb_helper_restore--*/
int drm_fb_helper_blank ( int blank , struct fb_info * info ) ; 
/*--drm_fb_helper_blank--*/
int drm_fb_helper_init ( struct drm_device * dev , struct drm_fb_helper * fb_helper , int crtc_count , int max_conn_count ) ; 
/*--drm_fb_helper_init--*/
void drm_fb_helper_fini ( struct drm_fb_helper * fb_helper ) ; 
/*--drm_fb_helper_fini--*/
int drm_fb_helper_setcmap ( struct fb_cmap * cmap , struct fb_info * info ) ; 
/*--drm_fb_helper_setcmap--*/
int drm_fb_helper_check_var ( struct fb_var_screeninfo * var , struct fb_info * info ) ; 
/*--drm_fb_helper_check_var--*/
int drm_fb_helper_set_par ( struct fb_info * info ) ; 
/*--drm_fb_helper_set_par--*/
int drm_fb_helper_pan_display ( struct fb_var_screeninfo * var , struct fb_info * info ) ; 
/*--drm_fb_helper_pan_display--*/
int drm_fb_helper_single_fb_probe ( struct drm_fb_helper * fb_helper , int preferred_bpp ) ; 
/*--drm_fb_helper_single_fb_probe--*/
void drm_fb_helper_fill_fix ( struct fb_info * info , uint32_t pitch , uint32_t depth ) ; 
/*--drm_fb_helper_fill_fix--*/
void drm_fb_helper_fill_var ( struct fb_info * info , struct drm_fb_helper * fb_helper , uint32_t fb_width , uint32_t fb_height ) ; 
/*--drm_fb_helper_fill_var--*/
bool drm_fb_helper_initial_config ( struct drm_fb_helper * fb_helper , int bpp_sel ) ; 
/*--drm_fb_helper_initial_config--*/
bool drm_fb_helper_hotplug_event ( struct drm_fb_helper * fb_helper ) ; 
/*--drm_fb_helper_hotplug_event--*/
int drm_helper_probe_single_connector_modes ( struct drm_connector * connector , uint32_t maxX , uint32_t maxY ) ; 
/*--drm_helper_probe_single_connector_modes--*/
bool drm_helper_encoder_in_use ( struct drm_encoder * encoder ) ; 
/*--drm_helper_encoder_in_use--*/
bool drm_helper_crtc_in_use ( struct drm_crtc * crtc ) ; 
/*--drm_helper_crtc_in_use--*/
void drm_helper_disable_unused_functions ( struct drm_device * dev ) ; 
/*--drm_helper_disable_unused_functions--*/
bool drm_crtc_helper_set_mode ( struct drm_crtc * crtc , struct drm_display_mode * mode , int x , int y , struct drm_framebuffer * old_fb ) ; 
/*--drm_crtc_helper_set_mode--*/
int drm_crtc_helper_set_config ( struct drm_mode_set * set ) ; 
/*--drm_crtc_helper_set_config--*/
void drm_helper_connector_dpms ( struct drm_connector * connector , int mode ) ; 
/*--drm_helper_connector_dpms--*/
int drm_helper_mode_fill_fb_struct ( struct drm_framebuffer * fb , struct drm_mode_fb_cmd * mode_cmd ) ; 
/*--drm_helper_mode_fill_fb_struct--*/
int drm_helper_resume_force_mode ( struct drm_device * dev ) ; 
/*--drm_helper_resume_force_mode--*/
void drm_kms_helper_poll_disable ( struct drm_device * dev ) ; 
/*--drm_kms_helper_poll_disable--*/
void drm_kms_helper_poll_enable ( struct drm_device * dev ) ; 
/*--drm_kms_helper_poll_enable--*/
void drm_kms_helper_poll_init ( struct drm_device * dev ) ; 
/*--drm_kms_helper_poll_init--*/
void drm_kms_helper_poll_fini ( struct drm_device * dev ) ; 
/*--drm_kms_helper_poll_fini--*/
void drm_helper_hpd_irq_event ( struct drm_device * dev ) ; 
/*--drm_helper_hpd_irq_event--*/
int i2c_dp_aux_add_bus ( struct i2c_adapter * adapter ) ; 
/*--i2c_dp_aux_add_bus--*/
int lgff_init ( struct hid_device * hid ) ; 
/*--lgff_init--*/
int lg2ff_init ( struct hid_device * hid ) ; 
/*--lg2ff_init--*/
struct hid_report * hid_register_report ( struct hid_device * device , unsigned type , unsigned id ) ; 
/*--hid_register_report--*/
int hid_parse_report ( struct hid_device * device , __u8 * start , unsigned size ) ; 
/*--hid_parse_report--*/
void hid_output_report ( struct hid_report * report , __u8 * data ) ; 
/*--hid_output_report--*/
int hid_set_field ( struct hid_field * field , unsigned offset , __s32 value ) ; 
/*--hid_set_field--*/
void hid_report_raw_event ( struct hid_device * hid , int type , u8 * data , int size , int interrupt ) ; 
/*--hid_report_raw_event--*/
int hid_input_report ( struct hid_device * hid , int type , u8 * data , int size , int interrupt ) ; 
/*--hid_input_report--*/
int hid_connect ( struct hid_device * hdev , unsigned int connect_mask ) ; 
/*--hid_connect--*/
void hid_disconnect ( struct hid_device * hdev ) ; 
/*--hid_disconnect--*/
int hid_add_device ( struct hid_device * hdev ) ; 
/*--hid_add_device--*/
struct hid_device * hid_allocate_device ( void ) ; 
/*--hid_allocate_device--*/
void hid_destroy_device ( struct hid_device * hdev ) ; 
/*--hid_destroy_device--*/
int __hid_register_driver ( struct hid_driver * hdrv , struct module * owner , const char * mod_name ) ; 
/*--__hid_register_driver--*/
void hid_unregister_driver ( struct hid_driver * hdrv ) ; 
/*--hid_unregister_driver--*/
int hid_check_keys_pressed ( struct hid_device * hid ) ; 
/*--hid_check_keys_pressed--*/
void hidinput_hid_event ( struct hid_device * hid , struct hid_field * field , struct hid_usage * usage , __s32 value ) ; 
/*--hidinput_hid_event--*/
void hidinput_report_event ( struct hid_device * hid , struct hid_report * report ) ; 
/*--hidinput_report_event--*/
int hidinput_find_field ( struct hid_device * hid , unsigned int type , unsigned int code , struct hid_field * * field ) ; 
/*--hidinput_find_field--*/
int hidinput_connect ( struct hid_device * hid , unsigned int force ) ; 
/*--hidinput_connect--*/
void hidinput_disconnect ( struct hid_device * hid ) ; 
/*--hidinput_disconnect--*/
char * hid_resolv_usage ( unsigned usage , struct seq_file * f ) ; 
/*--hid_resolv_usage--*/
void hid_dump_field ( struct hid_field * field , int n , struct seq_file * f ) ; 
/*--hid_dump_field--*/
void hid_dump_device ( struct hid_device * device , struct seq_file * f ) ; 
/*--hid_dump_device--*/
void hid_debug_event ( struct hid_device * hdev , char * buf ) ; 
/*--hid_debug_event--*/
void hid_dump_input ( struct hid_device * hdev , struct hid_usage * usage , __s32 value ) ; 
/*--hid_dump_input--*/
void hid_debug_register ( struct hid_device * hdev , const char * name ) ; 
/*--hid_debug_register--*/
void hid_debug_unregister ( struct hid_device * hdev ) ; 
/*--hid_debug_unregister--*/
void hid_debug_init ( void ) ; 
/*--hid_debug_init--*/
void hid_debug_exit ( void ) ; 
/*--hid_debug_exit--*/
void hidraw_report_event ( struct hid_device * hid , u8 * data , int len ) ; 
/*--hidraw_report_event--*/
int hidraw_connect ( struct hid_device * hid ) ; 
/*--hidraw_connect--*/
void hidraw_disconnect ( struct hid_device * hid ) ; 
/*--hidraw_disconnect--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) hidraw_init ( void ) ; 
/*--hidraw_init--*/
void hidraw_exit ( void ) ; 
/*--hidraw_exit--*/
void usbhid_submit_report ( struct hid_device * hid , struct hid_report * report , unsigned char dir ) ; 
/*--usbhid_submit_report--*/
int usbhid_wait_io ( struct hid_device * hid ) ; 
/*--usbhid_wait_io--*/
int usbhid_open ( struct hid_device * hid ) ; 
/*--usbhid_open--*/
void usbhid_close ( struct hid_device * hid ) ; 
/*--usbhid_close--*/
void usbhid_init_reports ( struct hid_device * hid ) ; 
/*--usbhid_init_reports--*/
void usbhid_set_leds ( struct hid_device * hid ) ; 
/*--usbhid_set_leds--*/
int usbhid_get_power ( struct hid_device * hid ) ; 
/*--usbhid_get_power--*/
void usbhid_put_power ( struct hid_device * hid ) ; 
/*--usbhid_put_power--*/
int usbhid_quirks_init ( char * * quirks_param ) ; 
/*--usbhid_quirks_init--*/
void usbhid_quirks_exit ( void ) ; 
/*--usbhid_quirks_exit--*/
u32 usbhid_lookup_quirk ( const u16 idVendor , const u16 idProduct ) ; 
/*--usbhid_lookup_quirk--*/
void hiddev_hid_event ( struct hid_device * hid , struct hid_field * field , struct hid_usage * usage , __s32 value ) ; 
/*--hiddev_hid_event--*/
void hiddev_report_event ( struct hid_device * hid , struct hid_report * report ) ; 
/*--hiddev_report_event--*/
int hiddev_connect ( struct hid_device * hid , unsigned int force ) ; 
/*--hiddev_connect--*/
void hiddev_disconnect ( struct hid_device * hid ) ; 
/*--hiddev_disconnect--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) hiddev_init ( void ) ; 
/*--hiddev_init--*/
void hiddev_exit ( void ) ; 
/*--hiddev_exit--*/
int hid_pidff_init ( struct hid_device * hid ) ; 
/*--hid_pidff_init--*/
int vid_from_reg ( int val , u8 vrm ) ; 
/*--vid_from_reg--*/
u8 vid_which_vrm ( void ) ; 
/*--vid_which_vrm--*/
void lis3lv02d_poweroff ( struct lis3lv02d * lis3 ) ; 
/*--lis3lv02d_poweroff--*/
void lis3lv02d_poweron ( struct lis3lv02d * lis3 ) ; 
/*--lis3lv02d_poweron--*/
int lis3lv02d_joystick_enable ( void ) ; 
/*--lis3lv02d_joystick_enable--*/
void lis3lv02d_joystick_disable ( void ) ; 
/*--lis3lv02d_joystick_disable--*/
int lis3lv02d_remove_fs ( struct lis3lv02d * lis3 ) ; 
/*--lis3lv02d_remove_fs--*/
int lis3lv02d_init_device ( struct lis3lv02d * dev ) ; 
/*--lis3lv02d_init_device--*/
int lis3lv02d_acpi_init ( struct lis3lv02d * lis3 ) ; 
/*--lis3lv02d_acpi_init--*/
int lis3lv02d_acpi_read ( struct lis3lv02d * lis3 , int reg , u8 * ret ) ; 
/*--lis3lv02d_acpi_read--*/
int lis3lv02d_acpi_write ( struct lis3lv02d * lis3 , int reg , u8 val ) ; 
/*--lis3lv02d_acpi_write--*/
int i2c_bit_add_bus ( struct i2c_adapter * adap ) ; 
/*--i2c_bit_add_bus--*/
int i2c_bit_add_numbered_bus ( struct i2c_adapter * adap ) ; 
/*--i2c_bit_add_numbered_bus--*/
int i2c_pcf_add_bus ( struct i2c_adapter * adap ) ; 
/*--i2c_pcf_add_bus--*/
int i2c_pca_add_bus ( struct i2c_adapter * adap ) ; 
/*--i2c_pca_add_bus--*/
int i2c_pca_add_numbered_bus ( struct i2c_adapter * adap ) ; 
/*--i2c_pca_add_numbered_bus--*/
void i2c_parport_irq ( void * data ) ; 
/*--i2c_parport_irq--*/
struct i2c_client * i2c_setup_smbus_alert ( struct i2c_adapter * adapter , struct i2c_smbus_alert_setup * setup ) ; 
/*--i2c_setup_smbus_alert--*/
int i2c_handle_smbus_alert ( struct i2c_client * ara ) ; 
/*--i2c_handle_smbus_alert--*/
int stats_open_generic ( struct inode * inode , struct file * fp ) ; 
/*--stats_open_generic--*/
void hpsb_set_packet_complete_task ( struct hpsb_packet * packet , void ( * routine ) ( void * ) , void * data ) ; 
/*--hpsb_set_packet_complete_task--*/
struct hpsb_packet * hpsb_alloc_packet ( size_t data_size ) ; 
/*--hpsb_alloc_packet--*/
void hpsb_free_packet ( struct hpsb_packet * packet ) ; 
/*--hpsb_free_packet--*/
int hpsb_reset_bus ( struct hpsb_host * host , int type ) ; 
/*--hpsb_reset_bus--*/
int hpsb_read_cycle_timer ( struct hpsb_host * host , u32 * cycle_timer , u64 * local_time ) ; 
/*--hpsb_read_cycle_timer--*/
int hpsb_bus_reset ( struct hpsb_host * host ) ; 
/*--hpsb_bus_reset--*/
void hpsb_selfid_received ( struct hpsb_host * host , quadlet_t sid ) ; 
/*--hpsb_selfid_received--*/
void hpsb_selfid_complete ( struct hpsb_host * host , int phyid , int isroot ) ; 
/*--hpsb_selfid_complete--*/
void hpsb_packet_sent ( struct hpsb_host * host , struct hpsb_packet * packet , int ackcode ) ; 
/*--hpsb_packet_sent--*/
int hpsb_send_phy_config ( struct hpsb_host * host , int rootid , int gapcnt ) ; 
/*--hpsb_send_phy_config--*/
int hpsb_send_packet ( struct hpsb_packet * packet ) ; 
/*--hpsb_send_packet--*/
int hpsb_send_packet_and_wait ( struct hpsb_packet * packet ) ; 
/*--hpsb_send_packet_and_wait--*/
void hpsb_packet_received ( struct hpsb_host * host , quadlet_t * data , size_t size , int write_acked ) ; 
/*--hpsb_packet_received--*/
void abort_timedouts ( unsigned long __opaque ) ; 
/*--abort_timedouts--*/
int hpsb_get_tlabel ( struct hpsb_packet * packet ) ; 
/*--hpsb_get_tlabel--*/
void hpsb_free_tlabel ( struct hpsb_packet * packet ) ; 
/*--hpsb_free_tlabel--*/
int hpsb_packet_success ( struct hpsb_packet * packet ) ; 
/*--hpsb_packet_success--*/
struct hpsb_packet * hpsb_make_readpacket ( struct hpsb_host * host , nodeid_t node , u64 addr , size_t length ) ; 
/*--hpsb_make_readpacket--*/
struct hpsb_packet * hpsb_make_writepacket ( struct hpsb_host * host , nodeid_t node , u64 addr , quadlet_t * buffer , size_t length ) ; 
/*--hpsb_make_writepacket--*/
struct hpsb_packet * hpsb_make_streampacket ( struct hpsb_host * host , u8 * buffer , int length , int channel , int tag , int sync ) ; 
/*--hpsb_make_streampacket--*/
struct hpsb_packet * hpsb_make_lockpacket ( struct hpsb_host * host , nodeid_t node , u64 addr , int extcode , quadlet_t * data , quadlet_t arg ) ; 
/*--hpsb_make_lockpacket--*/
struct hpsb_packet * hpsb_make_lock64packet ( struct hpsb_host * host , nodeid_t node , u64 addr , int extcode , octlet_t * data , octlet_t arg ) ; 
/*--hpsb_make_lock64packet--*/
struct hpsb_packet * hpsb_make_phypacket ( struct hpsb_host * host , quadlet_t data ) ; 
/*--hpsb_make_phypacket--*/
int hpsb_read ( struct hpsb_host * host , nodeid_t node , unsigned int generation , u64 addr , quadlet_t * buffer , size_t length ) ; 
/*--hpsb_read--*/
int hpsb_write ( struct hpsb_host * host , nodeid_t node , unsigned int generation , u64 addr , quadlet_t * buffer , size_t length ) ; 
/*--hpsb_write--*/
int hpsb_lock ( struct hpsb_host * host , nodeid_t node , unsigned int generation , u64 addr , int extcode , quadlet_t * data , quadlet_t arg ) ; 
/*--hpsb_lock--*/
struct hpsb_host * hpsb_alloc_host ( struct hpsb_host_driver * drv , size_t extra , struct device * dev ) ; 
/*--hpsb_alloc_host--*/
int hpsb_add_host ( struct hpsb_host * host ) ; 
/*--hpsb_add_host--*/
void hpsb_resume_host ( struct hpsb_host * host ) ; 
/*--hpsb_resume_host--*/
void hpsb_remove_host ( struct hpsb_host * host ) ; 
/*--hpsb_remove_host--*/
int hpsb_update_config_rom_image ( struct hpsb_host * host ) ; 
/*--hpsb_update_config_rom_image--*/
void * hpsb_get_hostinfo ( struct hpsb_highlevel * hl , struct hpsb_host * host ) ; 
/*--hpsb_get_hostinfo--*/
void * hpsb_create_hostinfo ( struct hpsb_highlevel * hl , struct hpsb_host * host , size_t data_size ) ; 
/*--hpsb_create_hostinfo--*/
int hpsb_set_hostinfo ( struct hpsb_highlevel * hl , struct hpsb_host * host , void * data ) ; 
/*--hpsb_set_hostinfo--*/
void hpsb_destroy_hostinfo ( struct hpsb_highlevel * hl , struct hpsb_host * host ) ; 
/*--hpsb_destroy_hostinfo--*/
void hpsb_set_hostinfo_key ( struct hpsb_highlevel * hl , struct hpsb_host * host , unsigned long key ) ; 
/*--hpsb_set_hostinfo_key--*/
void * hpsb_get_hostinfo_bykey ( struct hpsb_highlevel * hl , unsigned long key ) ; 
/*--hpsb_get_hostinfo_bykey--*/
void hpsb_register_highlevel ( struct hpsb_highlevel * hl ) ; 
/*--hpsb_register_highlevel--*/
void hpsb_unregister_highlevel ( struct hpsb_highlevel * hl ) ; 
/*--hpsb_unregister_highlevel--*/
u64 hpsb_allocate_and_register_addrspace ( struct hpsb_highlevel * hl , struct hpsb_host * host , const struct hpsb_address_ops * ops , u64 size , u64 alignment , u64 start , u64 end ) ; 
/*--hpsb_allocate_and_register_addrspace--*/
int hpsb_register_addrspace ( struct hpsb_highlevel * hl , struct hpsb_host * host , const struct hpsb_address_ops * ops , u64 start , u64 end ) ; 
/*--hpsb_register_addrspace--*/
int hpsb_unregister_addrspace ( struct hpsb_highlevel * hl , struct hpsb_host * host , u64 start ) ; 
/*--hpsb_unregister_addrspace--*/
void highlevel_add_host ( struct hpsb_host * host ) ; 
/*--highlevel_add_host--*/
void highlevel_remove_host ( struct hpsb_host * host ) ; 
/*--highlevel_remove_host--*/
void highlevel_host_reset ( struct hpsb_host * host ) ; 
/*--highlevel_host_reset--*/
void highlevel_fcp_request ( struct hpsb_host * host , int nodeid , int direction , void * data , size_t length ) ; 
/*--highlevel_fcp_request--*/
int highlevel_read ( struct hpsb_host * host , int nodeid , void * data , u64 addr , unsigned int length , u16 flags ) ; 
/*--highlevel_read--*/
int highlevel_write ( struct hpsb_host * host , int nodeid , int destid , void * data , u64 addr , unsigned int length , u16 flags ) ; 
/*--highlevel_write--*/
int highlevel_lock ( struct hpsb_host * host , int nodeid , quadlet_t * store , u64 addr , quadlet_t data , quadlet_t arg , int ext_tcode , u16 flags ) ; 
/*--highlevel_lock--*/
int highlevel_lock64 ( struct hpsb_host * host , int nodeid , octlet_t * store , u64 addr , octlet_t data , octlet_t arg , int ext_tcode , u16 flags ) ; 
/*--highlevel_lock64--*/
int hpsb_update_config_rom ( struct hpsb_host * host , const quadlet_t * new_rom , size_t buffersize , unsigned char rom_version ) ; 
/*--hpsb_update_config_rom--*/
int init_csr ( void ) ; 
/*--init_csr--*/
void cleanup_csr ( void ) ; 
/*--cleanup_csr--*/
int __hpsb_register_protocol ( struct hpsb_protocol_driver * drv , struct module * owner ) ; 
/*--__hpsb_register_protocol--*/
void hpsb_unregister_protocol ( struct hpsb_protocol_driver * driver ) ; 
/*--hpsb_unregister_protocol--*/
int nodemgr_for_each_host ( void * data , int ( * cb ) ( struct hpsb_host * , void * ) ) ; 
/*--nodemgr_for_each_host--*/
void hpsb_node_fill_packet ( struct node_entry * ne , struct hpsb_packet * packet ) ; 
/*--hpsb_node_fill_packet--*/
int hpsb_node_write ( struct node_entry * ne , u64 addr , quadlet_t * buffer , size_t length ) ; 
/*--hpsb_node_write--*/
int init_ieee1394_nodemgr ( void ) ; 
/*--init_ieee1394_nodemgr--*/
void cleanup_ieee1394_nodemgr ( void ) ; 
/*--cleanup_ieee1394_nodemgr--*/
void dma_prog_region_init ( struct dma_prog_region * prog ) ; 
/*--dma_prog_region_init--*/
int dma_prog_region_alloc ( struct dma_prog_region * prog , unsigned long n_bytes , struct pci_dev * dev ) ; 
/*--dma_prog_region_alloc--*/
void dma_prog_region_free ( struct dma_prog_region * prog ) ; 
/*--dma_prog_region_free--*/
void dma_region_init ( struct dma_region * dma ) ; 
/*--dma_region_init--*/
int dma_region_alloc ( struct dma_region * dma , unsigned long n_bytes , struct pci_dev * dev , int direction ) ; 
/*--dma_region_alloc--*/
void dma_region_free ( struct dma_region * dma ) ; 
/*--dma_region_free--*/
dma_addr_t dma_region_offset_to_bus ( struct dma_region * dma , unsigned long offset ) ; 
/*--dma_region_offset_to_bus--*/
void dma_region_sync_for_cpu ( struct dma_region * dma , unsigned long offset , unsigned long len ) ; 
/*--dma_region_sync_for_cpu--*/
void dma_region_sync_for_device ( struct dma_region * dma , unsigned long offset , unsigned long len ) ; 
/*--dma_region_sync_for_device--*/
int dma_region_mmap ( struct dma_region * dma , struct file * file , struct vm_area_struct * vma ) ; 
/*--dma_region_mmap--*/
void hpsb_iso_stop ( struct hpsb_iso * iso ) ; 
/*--hpsb_iso_stop--*/
void hpsb_iso_shutdown ( struct hpsb_iso * iso ) ; 
/*--hpsb_iso_shutdown--*/
int hpsb_iso_n_ready ( struct hpsb_iso * iso ) ; 
/*--hpsb_iso_n_ready--*/
struct hpsb_iso * hpsb_iso_xmit_init ( struct hpsb_host * host , unsigned int data_buf_size , unsigned int buf_packets , int channel , int speed , int irq_interval , void ( * callback ) ( struct hpsb_iso * ) ) ; 
/*--hpsb_iso_xmit_init--*/
struct hpsb_iso * hpsb_iso_recv_init ( struct hpsb_host * host , unsigned int data_buf_size , unsigned int buf_packets , int channel , int dma_mode , int irq_interval , void ( * callback ) ( struct hpsb_iso * ) ) ; 
/*--hpsb_iso_recv_init--*/
int hpsb_iso_recv_listen_channel ( struct hpsb_iso * iso , unsigned char channel ) ; 
/*--hpsb_iso_recv_listen_channel--*/
int hpsb_iso_recv_unlisten_channel ( struct hpsb_iso * iso , unsigned char channel ) ; 
/*--hpsb_iso_recv_unlisten_channel--*/
int hpsb_iso_recv_set_channel_mask ( struct hpsb_iso * iso , u64 mask ) ; 
/*--hpsb_iso_recv_set_channel_mask--*/
int hpsb_iso_recv_flush ( struct hpsb_iso * iso ) ; 
/*--hpsb_iso_recv_flush--*/
int hpsb_iso_xmit_start ( struct hpsb_iso * iso , int cycle , int prebuffer ) ; 
/*--hpsb_iso_xmit_start--*/
int hpsb_iso_recv_start ( struct hpsb_iso * iso , int cycle , int tag_mask , int sync ) ; 
/*--hpsb_iso_recv_start--*/
int hpsb_iso_xmit_queue_packet ( struct hpsb_iso * iso , u32 offset , u16 len , u8 tag , u8 sy ) ; 
/*--hpsb_iso_xmit_queue_packet--*/
int hpsb_iso_xmit_sync ( struct hpsb_iso * iso ) ; 
/*--hpsb_iso_xmit_sync--*/
void hpsb_iso_packet_sent ( struct hpsb_iso * iso , int cycle , int error ) ; 
/*--hpsb_iso_packet_sent--*/
void hpsb_iso_packet_received ( struct hpsb_iso * iso , u32 offset , u16 len , u16 total_len , u16 cycle , u8 channel , u8 tag , u8 sy ) ; 
/*--hpsb_iso_packet_received--*/
int hpsb_iso_recv_release_packets ( struct hpsb_iso * iso , unsigned int n_packets ) ; 
/*--hpsb_iso_recv_release_packets--*/
void hpsb_iso_wake ( struct hpsb_iso * iso ) ; 
/*--hpsb_iso_wake--*/
struct csr1212_csr * csr1212_create_csr ( struct csr1212_bus_ops * ops , size_t bus_info_size , void * private ) ; 
/*--csr1212_create_csr--*/
void csr1212_init_local_csr ( struct csr1212_csr * csr , const u32 * bus_info_data , int max_rom ) ; 
/*--csr1212_init_local_csr--*/
struct csr1212_keyval * csr1212_new_immediate ( u8 key , u32 value ) ; 
/*--csr1212_new_immediate--*/
struct csr1212_keyval * csr1212_new_directory ( u8 key ) ; 
/*--csr1212_new_directory--*/
void csr1212_associate_keyval ( struct csr1212_keyval * kv , struct csr1212_keyval * associate ) ; 
/*--csr1212_associate_keyval--*/
int csr1212_attach_keyval_to_directory ( struct csr1212_keyval * dir , struct csr1212_keyval * kv ) ; 
/*--csr1212_attach_keyval_to_directory--*/
struct csr1212_keyval * csr1212_new_string_descriptor_leaf ( const char * s ) ; 
/*--csr1212_new_string_descriptor_leaf--*/
void csr1212_detach_keyval_from_directory ( struct csr1212_keyval * dir , struct csr1212_keyval * kv ) ; 
/*--csr1212_detach_keyval_from_directory--*/
void csr1212_release_keyval ( struct csr1212_keyval * kv ) ; 
/*--csr1212_release_keyval--*/
void csr1212_destroy_csr ( struct csr1212_csr * csr ) ; 
/*--csr1212_destroy_csr--*/
int csr1212_generate_csr_image ( struct csr1212_csr * csr ) ; 
/*--csr1212_generate_csr_image--*/
int csr1212_read ( struct csr1212_csr * csr , u32 offset , void * buffer , u32 len ) ; 
/*--csr1212_read--*/
int csr1212_parse_keyval ( struct csr1212_keyval * kv , struct csr1212_csr_rom_cache * cache ) ; 
/*--csr1212_parse_keyval--*/
struct csr1212_keyval * csr1212_get_keyval ( struct csr1212_csr * csr , struct csr1212_keyval * kv ) ; 
/*--csr1212_get_keyval--*/
int csr1212_parse_csr ( struct csr1212_csr * csr ) ; 
/*--csr1212_parse_csr--*/
int hpsb_default_host_entry ( struct hpsb_host * host ) ; 
/*--hpsb_default_host_entry--*/
int hpsb_config_rom_ip1394_add ( struct hpsb_host * host ) ; 
/*--hpsb_config_rom_ip1394_add--*/
void hpsb_config_rom_ip1394_remove ( struct hpsb_host * host ) ; 
/*--hpsb_config_rom_ip1394_remove--*/
int hpsb_init_config_roms ( void ) ; 
/*--hpsb_init_config_roms--*/
void hpsb_cleanup_config_roms ( void ) ; 
/*--hpsb_cleanup_config_roms--*/
int ohci1394_stop_context ( struct ti_ohci * ohci , int reg , char * msg ) ; 
/*--ohci1394_stop_context--*/
void ohci1394_init_iso_tasklet ( struct ohci1394_iso_tasklet * tasklet , int type , void ( * func ) ( unsigned long ) , unsigned long data ) ; 
/*--ohci1394_init_iso_tasklet--*/
int ohci1394_register_iso_tasklet ( struct ti_ohci * ohci , struct ohci1394_iso_tasklet * tasklet ) ; 
/*--ohci1394_register_iso_tasklet--*/
void ohci1394_unregister_iso_tasklet ( struct ti_ohci * ohci , struct ohci1394_iso_tasklet * tasklet ) ; 
/*--ohci1394_unregister_iso_tasklet--*/
void rdma_addr_register_client ( struct rdma_addr_client * client ) ; 
/*--rdma_addr_register_client--*/
void rdma_addr_unregister_client ( struct rdma_addr_client * client ) ; 
/*--rdma_addr_unregister_client--*/
int rdma_copy_addr ( struct rdma_dev_addr * dev_addr , struct net_device * dev , const unsigned char * dst_dev_addr ) ; 
/*--rdma_copy_addr--*/
int rdma_translate_ip ( struct sockaddr * addr , struct rdma_dev_addr * dev_addr ) ; 
/*--rdma_translate_ip--*/
int rdma_resolve_ip ( struct rdma_addr_client * client , struct sockaddr * src_addr , struct sockaddr * dst_addr , struct rdma_dev_addr * addr , int timeout_ms , void ( * callback ) ( int status , struct sockaddr * src_addr , struct rdma_dev_addr * addr , void * context ) , void * context ) ; 
/*--rdma_resolve_ip--*/
void rdma_addr_cancel ( struct rdma_dev_addr * addr ) ; 
/*--rdma_addr_cancel--*/
struct ib_cm_id * ib_create_cm_id ( struct ib_device * device , ib_cm_handler cm_handler , void * context ) ; 
/*--ib_create_cm_id--*/
void ib_destroy_cm_id ( struct ib_cm_id * cm_id ) ; 
/*--ib_destroy_cm_id--*/
int ib_cm_listen ( struct ib_cm_id * cm_id , __be64 service_id , __be64 service_mask , struct ib_cm_compare_data * compare_data ) ; 
/*--ib_cm_listen--*/
int ib_send_cm_req ( struct ib_cm_id * cm_id , struct ib_cm_req_param * param ) ; 
/*--ib_send_cm_req--*/
int ib_send_cm_rep ( struct ib_cm_id * cm_id , struct ib_cm_rep_param * param ) ; 
/*--ib_send_cm_rep--*/
int ib_send_cm_rtu ( struct ib_cm_id * cm_id , const void * private_data , u8 private_data_len ) ; 
/*--ib_send_cm_rtu--*/
int ib_send_cm_dreq ( struct ib_cm_id * cm_id , const void * private_data , u8 private_data_len ) ; 
/*--ib_send_cm_dreq--*/
int ib_send_cm_drep ( struct ib_cm_id * cm_id , const void * private_data , u8 private_data_len ) ; 
/*--ib_send_cm_drep--*/
int ib_send_cm_rej ( struct ib_cm_id * cm_id , enum ib_cm_rej_reason reason , void * ari , u8 ari_length , const void * private_data , u8 private_data_len ) ; 
/*--ib_send_cm_rej--*/
int ib_send_cm_mra ( struct ib_cm_id * cm_id , u8 service_timeout , const void * private_data , u8 private_data_len ) ; 
/*--ib_send_cm_mra--*/
int ib_send_cm_lap ( struct ib_cm_id * cm_id , struct ib_sa_path_rec * alternate_path , const void * private_data , u8 private_data_len ) ; 
/*--ib_send_cm_lap--*/
int ib_send_cm_apr ( struct ib_cm_id * cm_id , enum ib_cm_apr_status status , void * info , u8 info_length , const void * private_data , u8 private_data_len ) ; 
/*--ib_send_cm_apr--*/
int ib_send_cm_sidr_req ( struct ib_cm_id * cm_id , struct ib_cm_sidr_req_param * param ) ; 
/*--ib_send_cm_sidr_req--*/
int ib_send_cm_sidr_rep ( struct ib_cm_id * cm_id , struct ib_cm_sidr_rep_param * param ) ; 
/*--ib_send_cm_sidr_rep--*/
int ib_cm_notify ( struct ib_cm_id * cm_id , enum ib_event_type event ) ; 
/*--ib_cm_notify--*/
int ib_cm_init_qp_attr ( struct ib_cm_id * cm_id , struct ib_qp_attr * qp_attr , int * qp_attr_mask ) ; 
/*--ib_cm_init_qp_attr--*/
void ib_pack ( const struct ib_field * desc , int desc_len , void * structure , void * buf ) ; 
/*--ib_pack--*/
void ib_unpack ( const struct ib_field * desc , int desc_len , void * buf , void * structure ) ; 
/*--ib_unpack--*/
void ib_ud_header_init ( int payload_bytes , int grh_present , int immediate_present , struct ib_ud_header * header ) ; 
/*--ib_ud_header_init--*/
int ib_ud_header_pack ( struct ib_ud_header * header , void * buf ) ; 
/*--ib_ud_header_pack--*/
int ib_ud_header_unpack ( void * buf , struct ib_ud_header * header ) ; 
/*--ib_ud_header_unpack--*/
int ib_rate_to_mult ( enum ib_rate rate ) ; 
/*--ib_rate_to_mult--*/
enum ib_rate mult_to_ib_rate ( int mult ) ; 
/*--mult_to_ib_rate--*/
enum rdma_transport_type rdma_node_get_transport ( enum rdma_node_type node_type ) ; 
/*--rdma_node_get_transport--*/
struct ib_pd * ib_alloc_pd ( struct ib_device * device ) ; 
/*--ib_alloc_pd--*/
int ib_dealloc_pd ( struct ib_pd * pd ) ; 
/*--ib_dealloc_pd--*/
struct ib_ah * ib_create_ah ( struct ib_pd * pd , struct ib_ah_attr * ah_attr ) ; 
/*--ib_create_ah--*/
int ib_init_ah_from_wc ( struct ib_device * device , u8 port_num , struct ib_wc * wc , struct ib_grh * grh , struct ib_ah_attr * ah_attr ) ; 
/*--ib_init_ah_from_wc--*/
struct ib_ah * ib_create_ah_from_wc ( struct ib_pd * pd , struct ib_wc * wc , struct ib_grh * grh , u8 port_num ) ; 
/*--ib_create_ah_from_wc--*/
int ib_modify_ah ( struct ib_ah * ah , struct ib_ah_attr * ah_attr ) ; 
/*--ib_modify_ah--*/
int ib_query_ah ( struct ib_ah * ah , struct ib_ah_attr * ah_attr ) ; 
/*--ib_query_ah--*/
int ib_destroy_ah ( struct ib_ah * ah ) ; 
/*--ib_destroy_ah--*/
struct ib_srq * ib_create_srq ( struct ib_pd * pd , struct ib_srq_init_attr * srq_init_attr ) ; 
/*--ib_create_srq--*/
int ib_modify_srq ( struct ib_srq * srq , struct ib_srq_attr * srq_attr , enum ib_srq_attr_mask srq_attr_mask ) ; 
/*--ib_modify_srq--*/
int ib_query_srq ( struct ib_srq * srq , struct ib_srq_attr * srq_attr ) ; 
/*--ib_query_srq--*/
int ib_destroy_srq ( struct ib_srq * srq ) ; 
/*--ib_destroy_srq--*/
struct ib_qp * ib_create_qp ( struct ib_pd * pd , struct ib_qp_init_attr * qp_init_attr ) ; 
/*--ib_create_qp--*/
int ib_modify_qp_is_ok ( enum ib_qp_state cur_state , enum ib_qp_state next_state , enum ib_qp_type type , enum ib_qp_attr_mask mask ) ; 
/*--ib_modify_qp_is_ok--*/
int ib_modify_qp ( struct ib_qp * qp , struct ib_qp_attr * qp_attr , int qp_attr_mask ) ; 
/*--ib_modify_qp--*/
int ib_query_qp ( struct ib_qp * qp , struct ib_qp_attr * qp_attr , int qp_attr_mask , struct ib_qp_init_attr * qp_init_attr ) ; 
/*--ib_query_qp--*/
int ib_destroy_qp ( struct ib_qp * qp ) ; 
/*--ib_destroy_qp--*/
struct ib_cq * ib_create_cq ( struct ib_device * device , ib_comp_handler comp_handler , void ( * event_handler ) ( struct ib_event * , void * ) , void * cq_context , int cqe , int comp_vector ) ; 
/*--ib_create_cq--*/
int ib_modify_cq ( struct ib_cq * cq , u16 cq_count , u16 cq_period ) ; 
/*--ib_modify_cq--*/
int ib_destroy_cq ( struct ib_cq * cq ) ; 
/*--ib_destroy_cq--*/
int ib_resize_cq ( struct ib_cq * cq , int cqe ) ; 
/*--ib_resize_cq--*/
struct ib_mr * ib_get_dma_mr ( struct ib_pd * pd , int mr_access_flags ) ; 
/*--ib_get_dma_mr--*/
struct ib_mr * ib_reg_phys_mr ( struct ib_pd * pd , struct ib_phys_buf * phys_buf_array , int num_phys_buf , int mr_access_flags , u64 * iova_start ) ; 
/*--ib_reg_phys_mr--*/
int ib_rereg_phys_mr ( struct ib_mr * mr , int mr_rereg_mask , struct ib_pd * pd , struct ib_phys_buf * phys_buf_array , int num_phys_buf , int mr_access_flags , u64 * iova_start ) ; 
/*--ib_rereg_phys_mr--*/
int ib_query_mr ( struct ib_mr * mr , struct ib_mr_attr * mr_attr ) ; 
/*--ib_query_mr--*/
int ib_dereg_mr ( struct ib_mr * mr ) ; 
/*--ib_dereg_mr--*/
struct ib_mr * ib_alloc_fast_reg_mr ( struct ib_pd * pd , int max_page_list_len ) ; 
/*--ib_alloc_fast_reg_mr--*/
struct ib_fast_reg_page_list * ib_alloc_fast_reg_page_list ( struct ib_device * device , int max_page_list_len ) ; 
/*--ib_alloc_fast_reg_page_list--*/
void ib_free_fast_reg_page_list ( struct ib_fast_reg_page_list * page_list ) ; 
/*--ib_free_fast_reg_page_list--*/
struct ib_mw * ib_alloc_mw ( struct ib_pd * pd ) ; 
/*--ib_alloc_mw--*/
int ib_dealloc_mw ( struct ib_mw * mw ) ; 
/*--ib_dealloc_mw--*/
struct ib_fmr * ib_alloc_fmr ( struct ib_pd * pd , int mr_access_flags , struct ib_fmr_attr * fmr_attr ) ; 
/*--ib_alloc_fmr--*/
int ib_unmap_fmr ( struct list_head * fmr_list ) ; 
/*--ib_unmap_fmr--*/
int ib_dealloc_fmr ( struct ib_fmr * fmr ) ; 
/*--ib_dealloc_fmr--*/
int ib_attach_mcast ( struct ib_qp * qp , union ib_gid * gid , u16 lid ) ; 
/*--ib_attach_mcast--*/
int ib_detach_mcast ( struct ib_qp * qp , union ib_gid * gid , u16 lid ) ; 
/*--ib_detach_mcast--*/
int ib_device_register_sysfs ( struct ib_device * device , int ( * port_callback ) ( struct ib_device * , u8 , struct kobject * ) ) ; 
/*--ib_device_register_sysfs--*/
void ib_device_unregister_sysfs ( struct ib_device * device ) ; 
/*--ib_device_unregister_sysfs--*/
int ib_sysfs_setup ( void ) ; 
/*--ib_sysfs_setup--*/
void ib_sysfs_cleanup ( void ) ; 
/*--ib_sysfs_cleanup--*/
struct ib_device * ib_alloc_device ( size_t size ) ; 
/*--ib_alloc_device--*/
void ib_dealloc_device ( struct ib_device * device ) ; 
/*--ib_dealloc_device--*/
int ib_register_device ( struct ib_device * device , int ( * port_callback ) ( struct ib_device * , u8 , struct kobject * ) ) ; 
/*--ib_register_device--*/
void ib_unregister_device ( struct ib_device * device ) ; 
/*--ib_unregister_device--*/
int ib_register_client ( struct ib_client * client ) ; 
/*--ib_register_client--*/
void ib_unregister_client ( struct ib_client * client ) ; 
/*--ib_unregister_client--*/
void * ib_get_client_data ( struct ib_device * device , struct ib_client * client ) ; 
/*--ib_get_client_data--*/
void ib_set_client_data ( struct ib_device * device , struct ib_client * client , void * data ) ; 
/*--ib_set_client_data--*/
int ib_register_event_handler ( struct ib_event_handler * event_handler ) ; 
/*--ib_register_event_handler--*/
int ib_unregister_event_handler ( struct ib_event_handler * event_handler ) ; 
/*--ib_unregister_event_handler--*/
void ib_dispatch_event ( struct ib_event * event ) ; 
/*--ib_dispatch_event--*/
int ib_query_device ( struct ib_device * device , struct ib_device_attr * device_attr ) ; 
/*--ib_query_device--*/
int ib_query_port ( struct ib_device * device , u8 port_num , struct ib_port_attr * port_attr ) ; 
/*--ib_query_port--*/
int ib_query_gid ( struct ib_device * device , u8 port_num , int index , union ib_gid * gid ) ; 
/*--ib_query_gid--*/
int ib_query_pkey ( struct ib_device * device , u8 port_num , u16 index , u16 * pkey ) ; 
/*--ib_query_pkey--*/
int ib_modify_device ( struct ib_device * device , int device_modify_mask , struct ib_device_modify * device_modify ) ; 
/*--ib_modify_device--*/
int ib_modify_port ( struct ib_device * device , u8 port_num , int port_modify_mask , struct ib_port_modify * port_modify ) ; 
/*--ib_modify_port--*/
int ib_find_gid ( struct ib_device * device , union ib_gid * gid , u8 * port_num , u16 * index ) ; 
/*--ib_find_gid--*/
int ib_find_pkey ( struct ib_device * device , u8 port_num , u16 pkey , u16 * index ) ; 
/*--ib_find_pkey--*/
struct ib_fmr_pool * ib_create_fmr_pool ( struct ib_pd * pd , struct ib_fmr_pool_param * params ) ; 
/*--ib_create_fmr_pool--*/
void ib_destroy_fmr_pool ( struct ib_fmr_pool * pool ) ; 
/*--ib_destroy_fmr_pool--*/
int ib_flush_fmr_pool ( struct ib_fmr_pool * pool ) ; 
/*--ib_flush_fmr_pool--*/
struct ib_pool_fmr * ib_fmr_pool_map_phys ( struct ib_fmr_pool * pool_handle , u64 * page_list , int list_len , u64 io_virtual_address ) ; 
/*--ib_fmr_pool_map_phys--*/
int ib_fmr_pool_unmap ( struct ib_pool_fmr * fmr ) ; 
/*--ib_fmr_pool_unmap--*/
int ib_get_cached_gid ( struct ib_device * device , u8 port_num , int index , union ib_gid * gid ) ; 
/*--ib_get_cached_gid--*/
int ib_find_cached_gid ( struct ib_device * device , union ib_gid * gid , u8 * port_num , u16 * index ) ; 
/*--ib_find_cached_gid--*/
int ib_get_cached_pkey ( struct ib_device * device , u8 port_num , int index , u16 * pkey ) ; 
/*--ib_get_cached_pkey--*/
int ib_find_cached_pkey ( struct ib_device * device , u8 port_num , u16 pkey , u16 * index ) ; 
/*--ib_find_cached_pkey--*/
int ib_get_cached_lmc ( struct ib_device * device , u8 port_num , u8 * lmc ) ; 
/*--ib_get_cached_lmc--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ib_cache_setup ( void ) ; 
/*--ib_cache_setup--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ib_cache_cleanup ( void ) ; 
/*--ib_cache_cleanup--*/
struct ib_umem * ib_umem_get ( struct ib_ucontext * context , unsigned long addr , size_t size , int access , int dmasync ) ; 
/*--ib_umem_get--*/
void ib_umem_release ( struct ib_umem * umem ) ; 
/*--ib_umem_release--*/
int ib_umem_page_count ( struct ib_umem * umem ) ; 
/*--ib_umem_page_count--*/
int ib_response_mad ( struct ib_mad * mad ) ; 
/*--ib_response_mad--*/
struct ib_mad_agent * ib_register_mad_agent ( struct ib_device * device , u8 port_num , enum ib_qp_type qp_type , struct ib_mad_reg_req * mad_reg_req , u8 rmpp_version , ib_mad_send_handler send_handler , ib_mad_recv_handler recv_handler , void * context ) ; 
/*--ib_register_mad_agent--*/
struct ib_mad_agent * ib_register_mad_snoop ( struct ib_device * device , u8 port_num , enum ib_qp_type qp_type , int mad_snoop_flags , ib_mad_snoop_handler snoop_handler , ib_mad_recv_handler recv_handler , void * context ) ; 
/*--ib_register_mad_snoop--*/
int ib_unregister_mad_agent ( struct ib_mad_agent * mad_agent ) ; 
/*--ib_unregister_mad_agent--*/
struct ib_mad_send_buf * ib_create_send_mad ( struct ib_mad_agent * mad_agent , u32 remote_qpn , u16 pkey_index , int rmpp_active , int hdr_len , int data_len , gfp_t gfp_mask ) ; 
/*--ib_create_send_mad--*/
int ib_get_mad_data_offset ( u8 mgmt_class ) ; 
/*--ib_get_mad_data_offset--*/
int ib_is_mad_class_rmpp ( u8 mgmt_class ) ; 
/*--ib_is_mad_class_rmpp--*/
void * ib_get_rmpp_segment ( struct ib_mad_send_buf * send_buf , int seg_num ) ; 
/*--ib_get_rmpp_segment--*/
void ib_free_send_mad ( struct ib_mad_send_buf * send_buf ) ; 
/*--ib_free_send_mad--*/
int ib_send_mad ( struct ib_mad_send_wr_private * mad_send_wr ) ; 
/*--ib_send_mad--*/
int ib_post_send_mad ( struct ib_mad_send_buf * send_buf , struct ib_mad_send_buf * * bad_send_buf ) ; 
/*--ib_post_send_mad--*/
void ib_free_recv_mad ( struct ib_mad_recv_wc * mad_recv_wc ) ; 
/*--ib_free_recv_mad--*/
struct ib_mad_agent * ib_redirect_mad_qp ( struct ib_qp * qp , u8 rmpp_version , ib_mad_send_handler send_handler , ib_mad_recv_handler recv_handler , void * context ) ; 
/*--ib_redirect_mad_qp--*/
int ib_process_mad_wc ( struct ib_mad_agent * mad_agent , struct ib_wc * wc ) ; 
/*--ib_process_mad_wc--*/
struct ib_mad_send_wr_private * ib_find_send_mad ( struct ib_mad_agent_private * mad_agent_priv , struct ib_mad_recv_wc * wc ) ; 
/*--ib_find_send_mad--*/
void ib_mark_mad_done ( struct ib_mad_send_wr_private * mad_send_wr ) ; 
/*--ib_mark_mad_done--*/
void ib_reset_mad_timeout ( struct ib_mad_send_wr_private * mad_send_wr , int timeout_ms ) ; 
/*--ib_reset_mad_timeout--*/
void ib_mad_complete_send_wr ( struct ib_mad_send_wr_private * mad_send_wr , struct ib_mad_send_wc * mad_send_wc ) ; 
/*--ib_mad_complete_send_wr--*/
int ib_modify_mad ( struct ib_mad_agent * mad_agent , struct ib_mad_send_buf * send_buf , u32 timeout_ms ) ; 
/*--ib_modify_mad--*/
void ib_cancel_mad ( struct ib_mad_agent * mad_agent , struct ib_mad_send_buf * send_buf ) ; 
/*--ib_cancel_mad--*/
enum smi_action smi_handle_dr_smp_send ( struct ib_smp * smp , u8 node_type , int port_num ) ; 
/*--smi_handle_dr_smp_send--*/
enum smi_action smi_handle_dr_smp_recv ( struct ib_smp * smp , u8 node_type , int port_num , int phys_port_cnt ) ; 
/*--smi_handle_dr_smp_recv--*/
enum smi_forward_action smi_check_forward_dr_smp ( struct ib_smp * smp ) ; 
/*--smi_check_forward_dr_smp--*/
int smi_get_fwd_port ( struct ib_smp * smp ) ; 
/*--smi_get_fwd_port--*/
void agent_send_response ( struct ib_mad * mad , struct ib_grh * grh , struct ib_wc * wc , struct ib_device * device , int port_num , int qpn ) ; 
/*--agent_send_response--*/
int ib_agent_port_open ( struct ib_device * device , int port_num ) ; 
/*--ib_agent_port_open--*/
int ib_agent_port_close ( struct ib_device * device , int port_num ) ; 
/*--ib_agent_port_close--*/
void ib_cancel_rmpp_recvs ( struct ib_mad_agent_private * agent ) ; 
/*--ib_cancel_rmpp_recvs--*/
void ib_rmpp_send_handler ( struct ib_mad_send_wc * mad_send_wc ) ; 
/*--ib_rmpp_send_handler--*/
struct ib_mad_recv_wc * ib_process_rmpp_recv_wc ( struct ib_mad_agent_private * agent , struct ib_mad_recv_wc * mad_recv_wc ) ; 
/*--ib_process_rmpp_recv_wc--*/
int ib_send_rmpp_mad ( struct ib_mad_send_wr_private * mad_send_wr ) ; 
/*--ib_send_rmpp_mad--*/
int ib_process_rmpp_send_wc ( struct ib_mad_send_wr_private * mad_send_wr , struct ib_mad_send_wc * mad_send_wc ) ; 
/*--ib_process_rmpp_send_wc--*/
int ib_retry_rmpp ( struct ib_mad_send_wr_private * mad_send_wr ) ; 
/*--ib_retry_rmpp--*/
void ib_sa_register_client ( struct ib_sa_client * client ) ; 
/*--ib_sa_register_client--*/
void ib_sa_unregister_client ( struct ib_sa_client * client ) ; 
/*--ib_sa_unregister_client--*/
void ib_sa_cancel_query ( int id , struct ib_sa_query * query ) ; 
/*--ib_sa_cancel_query--*/
int ib_init_ah_from_path ( struct ib_device * device , u8 port_num , struct ib_sa_path_rec * rec , struct ib_ah_attr * ah_attr ) ; 
/*--ib_init_ah_from_path--*/
void ib_sa_unpack_path ( void * attribute , struct ib_sa_path_rec * rec ) ; 
/*--ib_sa_unpack_path--*/
int ib_sa_path_rec_get ( struct ib_sa_client * client , struct ib_device * device , u8 port_num , struct ib_sa_path_rec * rec , ib_sa_comp_mask comp_mask , int timeout_ms , gfp_t gfp_mask , void ( * callback ) ( int status , struct ib_sa_path_rec * resp , void * context ) , void * context , struct ib_sa_query * * sa_query ) ; 
/*--ib_sa_path_rec_get--*/
int ib_sa_service_rec_query ( struct ib_sa_client * client , struct ib_device * device , u8 port_num , u8 method , struct ib_sa_service_rec * rec , ib_sa_comp_mask comp_mask , int timeout_ms , gfp_t gfp_mask , void ( * callback ) ( int status , struct ib_sa_service_rec * resp , void * context ) , void * context , struct ib_sa_query * * sa_query ) ; 
/*--ib_sa_service_rec_query--*/
int ib_sa_mcmember_rec_query ( struct ib_sa_client * client , struct ib_device * device , u8 port_num , u8 method , struct ib_sa_mcmember_rec * rec , ib_sa_comp_mask comp_mask , int timeout_ms , gfp_t gfp_mask , void ( * callback ) ( int status , struct ib_sa_mcmember_rec * resp , void * context ) , void * context , struct ib_sa_query * * sa_query ) ; 
/*--ib_sa_mcmember_rec_query--*/
struct ib_sa_multicast * ib_sa_join_multicast ( struct ib_sa_client * client , struct ib_device * device , u8 port_num , struct ib_sa_mcmember_rec * rec , ib_sa_comp_mask comp_mask , gfp_t gfp_mask , int ( * callback ) ( int status , struct ib_sa_multicast * multicast ) , void * context ) ; 
/*--ib_sa_join_multicast--*/
void ib_sa_free_multicast ( struct ib_sa_multicast * multicast ) ; 
/*--ib_sa_free_multicast--*/
int ib_sa_get_mcmember_rec ( struct ib_device * device , u8 port_num , union ib_gid * mgid , struct ib_sa_mcmember_rec * rec ) ; 
/*--ib_sa_get_mcmember_rec--*/
int ib_init_ah_from_mcmember ( struct ib_device * device , u8 port_num , struct ib_sa_mcmember_rec * rec , struct ib_ah_attr * ah_attr ) ; 
/*--ib_init_ah_from_mcmember--*/
int mcast_init ( void ) ; 
/*--mcast_init--*/
void mcast_cleanup ( void ) ; 
/*--mcast_cleanup--*/
void ib_uverbs_release_ucq ( struct ib_uverbs_file * file , struct ib_uverbs_event_file * ev_file , struct ib_ucq_object * uobj ) ; 
/*--ib_uverbs_release_ucq--*/
void ib_uverbs_release_uevent ( struct ib_uverbs_file * file , struct ib_uevent_object * uobj ) ; 
/*--ib_uverbs_release_uevent--*/
void ib_uverbs_comp_handler ( struct ib_cq * cq , void * cq_context ) ; 
/*--ib_uverbs_comp_handler--*/
void ib_uverbs_cq_event_handler ( struct ib_event * event , void * context_ptr ) ; 
/*--ib_uverbs_cq_event_handler--*/
void ib_uverbs_qp_event_handler ( struct ib_event * event , void * context_ptr ) ; 
/*--ib_uverbs_qp_event_handler--*/
void ib_uverbs_srq_event_handler ( struct ib_event * event , void * context_ptr ) ; 
/*--ib_uverbs_srq_event_handler--*/
void ib_uverbs_event_handler ( struct ib_event_handler * handler , struct ib_event * event ) ; 
/*--ib_uverbs_event_handler--*/
struct file * ib_uverbs_alloc_event_file ( struct ib_uverbs_file * uverbs_file , int is_async ) ; 
/*--ib_uverbs_alloc_event_file--*/
struct ib_uverbs_event_file * ib_uverbs_lookup_comp_file ( int fd ) ; 
/*--ib_uverbs_lookup_comp_file--*/
void idr_remove_uobj ( struct idr * idr , struct ib_uobject * uobj ) ; 
/*--idr_remove_uobj--*/
ssize_t ib_uverbs_get_context ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_get_context--*/
ssize_t ib_uverbs_query_device ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_query_device--*/
ssize_t ib_uverbs_query_port ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_query_port--*/
ssize_t ib_uverbs_alloc_pd ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_alloc_pd--*/
ssize_t ib_uverbs_dealloc_pd ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_dealloc_pd--*/
ssize_t ib_uverbs_reg_mr ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_reg_mr--*/
ssize_t ib_uverbs_dereg_mr ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_dereg_mr--*/
ssize_t ib_uverbs_create_comp_channel ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_create_comp_channel--*/
ssize_t ib_uverbs_create_cq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_create_cq--*/
ssize_t ib_uverbs_resize_cq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_resize_cq--*/
ssize_t ib_uverbs_poll_cq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_poll_cq--*/
ssize_t ib_uverbs_req_notify_cq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_req_notify_cq--*/
ssize_t ib_uverbs_destroy_cq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_destroy_cq--*/
ssize_t ib_uverbs_create_qp ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_create_qp--*/
ssize_t ib_uverbs_query_qp ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_query_qp--*/
ssize_t ib_uverbs_modify_qp ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_modify_qp--*/
ssize_t ib_uverbs_destroy_qp ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_destroy_qp--*/
ssize_t ib_uverbs_post_send ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_post_send--*/
ssize_t ib_uverbs_post_recv ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_post_recv--*/
ssize_t ib_uverbs_post_srq_recv ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_post_srq_recv--*/
ssize_t ib_uverbs_create_ah ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_create_ah--*/
ssize_t ib_uverbs_destroy_ah ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_destroy_ah--*/
ssize_t ib_uverbs_attach_mcast ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_attach_mcast--*/
ssize_t ib_uverbs_detach_mcast ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_detach_mcast--*/
ssize_t ib_uverbs_create_srq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_create_srq--*/
ssize_t ib_uverbs_modify_srq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_modify_srq--*/
ssize_t ib_uverbs_query_srq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_query_srq--*/
ssize_t ib_uverbs_destroy_srq ( struct ib_uverbs_file * file , const char * buf , int in_len , int out_len ) ; 
/*--ib_uverbs_destroy_srq--*/
void ib_copy_ah_attr_to_user ( struct ib_uverbs_ah_attr * dst , struct ib_ah_attr * src ) ; 
/*--ib_copy_ah_attr_to_user--*/
void ib_copy_qp_attr_to_user ( struct ib_uverbs_qp_attr * dst , struct ib_qp_attr * src ) ; 
/*--ib_copy_qp_attr_to_user--*/
void ib_copy_path_rec_to_user ( struct ib_user_path_rec * dst , struct ib_sa_path_rec * src ) ; 
/*--ib_copy_path_rec_to_user--*/
void ib_copy_path_rec_from_user ( struct ib_sa_path_rec * dst , struct ib_user_path_rec * src ) ; 
/*--ib_copy_path_rec_from_user--*/
struct iw_cm_id * iw_create_cm_id ( struct ib_device * device , iw_cm_handler cm_handler , void * context ) ; 
/*--iw_create_cm_id--*/
int iw_cm_disconnect ( struct iw_cm_id * cm_id , int abrupt ) ; 
/*--iw_cm_disconnect--*/
void iw_destroy_cm_id ( struct iw_cm_id * cm_id ) ; 
/*--iw_destroy_cm_id--*/
int iw_cm_listen ( struct iw_cm_id * cm_id , int backlog ) ; 
/*--iw_cm_listen--*/
int iw_cm_reject ( struct iw_cm_id * cm_id , const void * private_data , u8 private_data_len ) ; 
/*--iw_cm_reject--*/
int iw_cm_accept ( struct iw_cm_id * cm_id , struct iw_cm_conn_param * iw_param ) ; 
/*--iw_cm_accept--*/
int iw_cm_connect ( struct iw_cm_id * cm_id , struct iw_cm_conn_param * iw_param ) ; 
/*--iw_cm_connect--*/
int iw_cm_init_qp_attr ( struct iw_cm_id * cm_id , struct ib_qp_attr * qp_attr , int * qp_attr_mask ) ; 
/*--iw_cm_init_qp_attr--*/
struct rdma_cm_id * rdma_create_id ( rdma_cm_event_handler event_handler , void * context , enum rdma_port_space ps ) ; 
/*--rdma_create_id--*/
int rdma_create_qp ( struct rdma_cm_id * id , struct ib_pd * pd , struct ib_qp_init_attr * qp_init_attr ) ; 
/*--rdma_create_qp--*/
void rdma_destroy_qp ( struct rdma_cm_id * id ) ; 
/*--rdma_destroy_qp--*/
int rdma_init_qp_attr ( struct rdma_cm_id * id , struct ib_qp_attr * qp_attr , int * qp_attr_mask ) ; 
/*--rdma_init_qp_attr--*/
void rdma_destroy_id ( struct rdma_cm_id * id ) ; 
/*--rdma_destroy_id--*/
int rdma_listen ( struct rdma_cm_id * id , int backlog ) ; 
/*--rdma_listen--*/
void rdma_set_service_type ( struct rdma_cm_id * id , int tos ) ; 
/*--rdma_set_service_type--*/
int rdma_set_ib_paths ( struct rdma_cm_id * id , struct ib_sa_path_rec * path_rec , int num_paths ) ; 
/*--rdma_set_ib_paths--*/
int rdma_resolve_route ( struct rdma_cm_id * id , int timeout_ms ) ; 
/*--rdma_resolve_route--*/
int rdma_resolve_addr ( struct rdma_cm_id * id , struct sockaddr * src_addr , struct sockaddr * dst_addr , int timeout_ms ) ; 
/*--rdma_resolve_addr--*/
int rdma_bind_addr ( struct rdma_cm_id * id , struct sockaddr * addr ) ; 
/*--rdma_bind_addr--*/
int rdma_connect ( struct rdma_cm_id * id , struct rdma_conn_param * conn_param ) ; 
/*--rdma_connect--*/
int rdma_accept ( struct rdma_cm_id * id , struct rdma_conn_param * conn_param ) ; 
/*--rdma_accept--*/
int rdma_notify ( struct rdma_cm_id * id , enum ib_event_type event ) ; 
/*--rdma_notify--*/
int rdma_reject ( struct rdma_cm_id * id , const void * private_data , u8 private_data_len ) ; 
/*--rdma_reject--*/
int rdma_disconnect ( struct rdma_cm_id * id ) ; 
/*--rdma_disconnect--*/
int rdma_join_multicast ( struct rdma_cm_id * id , struct sockaddr * addr , void * context ) ; 
/*--rdma_join_multicast--*/
void rdma_leave_multicast ( struct rdma_cm_id * id , struct sockaddr * addr ) ; 
/*--rdma_leave_multicast--*/
struct ib_qp * c2_get_qp ( struct ib_device * device , int qpn ) ; 
/*--c2_get_qp--*/
int c2_register_device ( struct c2_dev * dev ) ; 
/*--c2_register_device--*/
void c2_unregister_device ( struct c2_dev * dev ) ; 
/*--c2_unregister_device--*/
int c2_add_addr ( struct c2_dev * c2dev , __be32 inaddr , __be32 inmask ) ; 
/*--c2_add_addr--*/
int c2_del_addr ( struct c2_dev * c2dev , __be32 inaddr , __be32 inmask ) ; 
/*--c2_del_addr--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) c2_rnic_init ( struct c2_dev * c2dev ) ; 
/*--c2_rnic_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) c2_rnic_term ( struct c2_dev * c2dev ) ; 
/*--c2_rnic_term--*/
int c2_init_mqsp_pool ( struct c2_dev * c2dev , gfp_t gfp_mask , struct sp_chunk * * root ) ; 
/*--c2_init_mqsp_pool--*/
void c2_free_mqsp_pool ( struct c2_dev * c2dev , struct sp_chunk * root ) ; 
/*--c2_free_mqsp_pool--*/
__be16 * c2_alloc_mqsp ( struct c2_dev * c2dev , struct sp_chunk * head , dma_addr_t * dma_addr , gfp_t gfp_mask ) ; 
/*--c2_alloc_mqsp--*/
void c2_free_mqsp ( __be16 * mqsp ) ; 
/*--c2_free_mqsp--*/
void * c2_mq_alloc ( struct c2_mq * q ) ; 
/*--c2_mq_alloc--*/
void c2_mq_produce ( struct c2_mq * q ) ; 
/*--c2_mq_produce--*/
void * c2_mq_consume ( struct c2_mq * q ) ; 
/*--c2_mq_consume--*/
void c2_mq_free ( struct c2_mq * q ) ; 
/*--c2_mq_free--*/
void c2_mq_lconsume ( struct c2_mq * q , u32 wqe_count ) ; 
/*--c2_mq_lconsume--*/
void c2_mq_req_init ( struct c2_mq * q , u32 index , u32 q_size , u32 msg_size , u8 * pool_start , u16 * peer , u32 type ) ; 
/*--c2_mq_req_init--*/
void c2_mq_rep_init ( struct c2_mq * q , u32 index , u32 q_size , u32 msg_size , u8 * pool_start , u16 * peer , u32 type ) ; 
/*--c2_mq_rep_init--*/
void c2_ae_event ( struct c2_dev * c2dev , u32 mq_index ) ; 
/*--c2_ae_event--*/
int vq_init ( struct c2_dev * c2dev ) ; 
/*--vq_init--*/
void vq_term ( struct c2_dev * c2dev ) ; 
/*--vq_term--*/
struct c2_vq_req * vq_req_alloc ( struct c2_dev * c2dev ) ; 
/*--vq_req_alloc--*/
void vq_req_free ( struct c2_dev * c2dev , struct c2_vq_req * r ) ; 
/*--vq_req_free--*/
void vq_req_get ( struct c2_dev * c2dev , struct c2_vq_req * r ) ; 
/*--vq_req_get--*/
void vq_req_put ( struct c2_dev * c2dev , struct c2_vq_req * r ) ; 
/*--vq_req_put--*/
void * vq_repbuf_alloc ( struct c2_dev * c2dev ) ; 
/*--vq_repbuf_alloc--*/
int vq_send_wr ( struct c2_dev * c2dev , union c2wr * wr ) ; 
/*--vq_send_wr--*/
int vq_wait_for_reply ( struct c2_dev * c2dev , struct c2_vq_req * req ) ; 
/*--vq_wait_for_reply--*/
void vq_repbuf_free ( struct c2_dev * c2dev , void * reply ) ; 
/*--vq_repbuf_free--*/
void c2_rnic_interrupt ( struct c2_dev * c2dev ) ; 
/*--c2_rnic_interrupt--*/
void c2_cq_event ( struct c2_dev * c2dev , u32 mq_index ) ; 
/*--c2_cq_event--*/
void c2_cq_clean ( struct c2_dev * c2dev , struct c2_qp * qp , u32 mq_index ) ; 
/*--c2_cq_clean--*/
int c2_poll_cq ( struct ib_cq * ibcq , int num_entries , struct ib_wc * entry ) ; 
/*--c2_poll_cq--*/
int c2_arm_cq ( struct ib_cq * ibcq , enum ib_cq_notify_flags notify_flags ) ; 
/*--c2_arm_cq--*/
int c2_init_cq ( struct c2_dev * c2dev , int entries , struct c2_ucontext * ctx , struct c2_cq * cq ) ; 
/*--c2_init_cq--*/
void c2_free_cq ( struct c2_dev * c2dev , struct c2_cq * cq ) ; 
/*--c2_free_cq--*/
void c2_set_qp_state ( struct c2_qp * qp , int c2_state ) ; 
/*--c2_set_qp_state--*/
int c2_qp_modify ( struct c2_dev * c2dev , struct c2_qp * qp , struct ib_qp_attr * attr , int attr_mask ) ; 
/*--c2_qp_modify--*/
int c2_qp_set_read_limits ( struct c2_dev * c2dev , struct c2_qp * qp , int ord , int ird ) ; 
/*--c2_qp_set_read_limits--*/
struct c2_qp * c2_find_qpn ( struct c2_dev * c2dev , int qpn ) ; 
/*--c2_find_qpn--*/
int c2_alloc_qp ( struct c2_dev * c2dev , struct c2_pd * pd , struct ib_qp_init_attr * qp_attrs , struct c2_qp * qp ) ; 
/*--c2_alloc_qp--*/
void c2_free_qp ( struct c2_dev * c2dev , struct c2_qp * qp ) ; 
/*--c2_free_qp--*/
int c2_post_send ( struct ib_qp * ibqp , struct ib_send_wr * ib_wr , struct ib_send_wr * * bad_wr ) ; 
/*--c2_post_send--*/
int c2_post_receive ( struct ib_qp * ibqp , struct ib_recv_wr * ib_wr , struct ib_recv_wr * * bad_wr ) ; 
/*--c2_post_receive--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) c2_init_qp_table ( struct c2_dev * c2dev ) ; 
/*--c2_init_qp_table--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) c2_cleanup_qp_table ( struct c2_dev * c2dev ) ; 
/*--c2_cleanup_qp_table--*/
int c2_llp_connect ( struct iw_cm_id * cm_id , struct iw_cm_conn_param * iw_param ) ; 
/*--c2_llp_connect--*/
int c2_llp_service_create ( struct iw_cm_id * cm_id , int backlog ) ; 
/*--c2_llp_service_create--*/
int c2_llp_service_destroy ( struct iw_cm_id * cm_id ) ; 
/*--c2_llp_service_destroy--*/
int c2_llp_accept ( struct iw_cm_id * cm_id , struct iw_cm_conn_param * iw_param ) ; 
/*--c2_llp_accept--*/
int c2_llp_reject ( struct iw_cm_id * cm_id , const void * pdata , u8 pdata_len ) ; 
/*--c2_llp_reject--*/
int c2_nsmr_register_phys_kern ( struct c2_dev * c2dev , u64 * addr_list , int page_size , int pbl_depth , u32 length , u32 offset , u64 * va , enum c2_acf acf , struct c2_mr * mr ) ; 
/*--c2_nsmr_register_phys_kern--*/
int c2_stag_dealloc ( struct c2_dev * c2dev , u32 stag_index ) ; 
/*--c2_stag_dealloc--*/
int c2_pd_alloc ( struct c2_dev * c2dev , int privileged , struct c2_pd * pd ) ; 
/*--c2_pd_alloc--*/
void c2_pd_free ( struct c2_dev * c2dev , struct c2_pd * pd ) ; 
/*--c2_pd_free--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) c2_init_pd_table ( struct c2_dev * c2dev ) ; 
/*--c2_init_pd_table--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) c2_cleanup_pd_table ( struct c2_dev * c2dev ) ; 
/*--c2_cleanup_pd_table--*/
int iwch_l2t_send ( struct t3cdev * tdev , struct sk_buff * skb , struct l2t_entry * l2e ) ; 
/*--iwch_l2t_send--*/
int iwch_cxgb3_ofld_send ( struct t3cdev * tdev , struct sk_buff * skb ) ; 
/*--iwch_cxgb3_ofld_send--*/
int iwch_quiesce_tid ( struct iwch_ep * ep ) ; 
/*--iwch_quiesce_tid--*/
int iwch_resume_tid ( struct iwch_ep * ep ) ; 
/*--iwch_resume_tid--*/
void __free_ep ( struct kref * kref ) ; 
/*--__free_ep--*/
int iwch_reject_cr ( struct iw_cm_id * cm_id , const void * pdata , u8 pdata_len ) ; 
/*--iwch_reject_cr--*/
int iwch_accept_cr ( struct iw_cm_id * cm_id , struct iw_cm_conn_param * conn_param ) ; 
/*--iwch_accept_cr--*/
int iwch_connect ( struct iw_cm_id * cm_id , struct iw_cm_conn_param * conn_param ) ; 
/*--iwch_connect--*/
int iwch_create_listen ( struct iw_cm_id * cm_id , int backlog ) ; 
/*--iwch_create_listen--*/
int iwch_destroy_listen ( struct iw_cm_id * cm_id ) ; 
/*--iwch_destroy_listen--*/
int iwch_ep_disconnect ( struct iwch_ep * ep , int abrupt , gfp_t gfp ) ; 
/*--iwch_ep_disconnect--*/
int iwch_ep_redirect ( void * ctx , struct dst_entry * old , struct dst_entry * new , struct l2t_entry * l2t ) ; 
/*--iwch_ep_redirect--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) iwch_cm_init ( void ) ; 
/*--iwch_cm_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) iwch_cm_term ( void ) ; 
/*--iwch_cm_term--*/
void iwch_ev_dispatch ( struct cxio_rdev * rdev_p , struct sk_buff * skb ) ; 
/*--iwch_ev_dispatch--*/
int iwch_poll_cq ( struct ib_cq * ibcq , int num_entries , struct ib_wc * wc ) ; 
/*--iwch_poll_cq--*/
int iwch_post_send ( struct ib_qp * ibqp , struct ib_send_wr * wr , struct ib_send_wr * * bad_wr ) ; 
/*--iwch_post_send--*/
int iwch_post_receive ( struct ib_qp * ibqp , struct ib_recv_wr * wr , struct ib_recv_wr * * bad_wr ) ; 
/*--iwch_post_receive--*/
int iwch_bind_mw ( struct ib_qp * qp , struct ib_mw * mw , struct ib_mw_bind * mw_bind ) ; 
/*--iwch_bind_mw--*/
int iwch_post_zb_read ( struct iwch_qp * qhp ) ; 
/*--iwch_post_zb_read--*/
int iwch_post_terminate ( struct iwch_qp * qhp , struct respQ_msg_t * rsp_msg ) ; 
/*--iwch_post_terminate--*/
u16 iwch_rqes_posted ( struct iwch_qp * qhp ) ; 
/*--iwch_rqes_posted--*/
int iwch_modify_qp ( struct iwch_dev * rhp , struct iwch_qp * qhp , enum iwch_qp_attr_mask mask , struct iwch_qp_attributes * attrs , int internal ) ; 
/*--iwch_modify_qp--*/
int iwch_quiesce_qps ( struct iwch_cq * chp ) ; 
/*--iwch_quiesce_qps--*/
int iwch_resume_qps ( struct iwch_cq * chp ) ; 
/*--iwch_resume_qps--*/
int iwch_register_mem ( struct iwch_dev * rhp , struct iwch_pd * php , struct iwch_mr * mhp , int shift ) ; 
/*--iwch_register_mem--*/
int iwch_reregister_mem ( struct iwch_dev * rhp , struct iwch_pd * php , struct iwch_mr * mhp , int shift , int npages ) ; 
/*--iwch_reregister_mem--*/
int iwch_alloc_pbl ( struct iwch_mr * mhp , int npages ) ; 
/*--iwch_alloc_pbl--*/
void iwch_free_pbl ( struct iwch_mr * mhp ) ; 
/*--iwch_free_pbl--*/
int iwch_write_pbl ( struct iwch_mr * mhp , __be64 * pages , int npages , int offset ) ; 
/*--iwch_write_pbl--*/
int build_phys_page_list ( struct ib_phys_buf * buffer_list , int num_phys_buf , u64 * iova_start , u64 * total_size , int * npages , int * shift , __be64 * * page_list ) ; 
/*--build_phys_page_list--*/
void iwch_qp_add_ref ( struct ib_qp * qp ) ; 
/*--iwch_qp_add_ref--*/
void iwch_qp_rem_ref ( struct ib_qp * qp ) ; 
/*--iwch_qp_rem_ref--*/
int iwch_register_device ( struct iwch_dev * dev ) ; 
/*--iwch_register_device--*/
void iwch_unregister_device ( struct iwch_dev * dev ) ; 
/*--iwch_unregister_device--*/
int cxio_hal_cq_op ( struct cxio_rdev * rdev_p , struct t3_cq * cq , enum t3_cq_opcode op , u32 credit ) ; 
/*--cxio_hal_cq_op--*/
int cxio_create_cq ( struct cxio_rdev * rdev_p , struct t3_cq * cq , int kernel ) ; 
/*--cxio_create_cq--*/
int cxio_resize_cq ( struct cxio_rdev * rdev_p , struct t3_cq * cq ) ; 
/*--cxio_resize_cq--*/
void cxio_release_ucontext ( struct cxio_rdev * rdev_p , struct cxio_ucontext * uctx ) ; 
/*--cxio_release_ucontext--*/
void cxio_init_ucontext ( struct cxio_rdev * rdev_p , struct cxio_ucontext * uctx ) ; 
/*--cxio_init_ucontext--*/
int cxio_create_qp ( struct cxio_rdev * rdev_p , u32 kernel_domain , struct t3_wq * wq , struct cxio_ucontext * uctx ) ; 
/*--cxio_create_qp--*/
int cxio_destroy_cq ( struct cxio_rdev * rdev_p , struct t3_cq * cq ) ; 
/*--cxio_destroy_cq--*/
int cxio_destroy_qp ( struct cxio_rdev * rdev_p , struct t3_wq * wq , struct cxio_ucontext * uctx ) ; 
/*--cxio_destroy_qp--*/
int cxio_flush_rq ( struct t3_wq * wq , struct t3_cq * cq , int count ) ; 
/*--cxio_flush_rq--*/
int cxio_flush_sq ( struct t3_wq * wq , struct t3_cq * cq , int count ) ; 
/*--cxio_flush_sq--*/
void cxio_flush_hw_cq ( struct t3_cq * cq ) ; 
/*--cxio_flush_hw_cq--*/
void cxio_count_scqes ( struct t3_cq * cq , struct t3_wq * wq , int * count ) ; 
/*--cxio_count_scqes--*/
void cxio_count_rcqes ( struct t3_cq * cq , struct t3_wq * wq , int * count ) ; 
/*--cxio_count_rcqes--*/
int cxio_write_pbl ( struct cxio_rdev * rdev_p , __be64 * pbl , u32 pbl_addr , u32 pbl_size ) ; 
/*--cxio_write_pbl--*/
int cxio_register_phys_mem ( struct cxio_rdev * rdev_p , u32 * stag , u32 pdid , enum tpt_mem_perm perm , u32 zbva , u64 to , u32 len , u8 page_size , u32 pbl_size , u32 pbl_addr ) ; 
/*--cxio_register_phys_mem--*/
int cxio_reregister_phys_mem ( struct cxio_rdev * rdev_p , u32 * stag , u32 pdid , enum tpt_mem_perm perm , u32 zbva , u64 to , u32 len , u8 page_size , u32 pbl_size , u32 pbl_addr ) ; 
/*--cxio_reregister_phys_mem--*/
int cxio_dereg_mem ( struct cxio_rdev * rdev_p , u32 stag , u32 pbl_size , u32 pbl_addr ) ; 
/*--cxio_dereg_mem--*/
int cxio_allocate_window ( struct cxio_rdev * rdev_p , u32 * stag , u32 pdid ) ; 
/*--cxio_allocate_window--*/
int cxio_deallocate_window ( struct cxio_rdev * rdev_p , u32 stag ) ; 
/*--cxio_deallocate_window--*/
int cxio_allocate_stag ( struct cxio_rdev * rdev_p , u32 * stag , u32 pdid , u32 pbl_size , u32 pbl_addr ) ; 
/*--cxio_allocate_stag--*/
int cxio_rdma_init ( struct cxio_rdev * rdev_p , struct t3_rdma_init_attr * attr ) ; 
/*--cxio_rdma_init--*/
void cxio_register_ev_cb ( cxio_hal_ev_callback_func_t ev_cb ) ; 
/*--cxio_register_ev_cb--*/
void cxio_unregister_ev_cb ( cxio_hal_ev_callback_func_t ev_cb ) ; 
/*--cxio_unregister_ev_cb--*/
int cxio_rdev_open ( struct cxio_rdev * rdev_p ) ; 
/*--cxio_rdev_open--*/
void cxio_rdev_close ( struct cxio_rdev * rdev_p ) ; 
/*--cxio_rdev_close--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) cxio_hal_init ( void ) ; 
/*--cxio_hal_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) cxio_hal_exit ( void ) ; 
/*--cxio_hal_exit--*/
int cxio_poll_cq ( struct t3_wq * wq , struct t3_cq * cq , struct t3_cqe * cqe , u8 * cqe_flushed , u64 * cookie , u32 * credit ) ; 
/*--cxio_poll_cq--*/
int cxio_hal_init_rhdl_resource ( u32 nr_rhdl ) ; 
/*--cxio_hal_init_rhdl_resource--*/
void cxio_hal_destroy_rhdl_resource ( void ) ; 
/*--cxio_hal_destroy_rhdl_resource--*/
int cxio_hal_init_resource ( struct cxio_rdev * rdev_p , u32 nr_tpt , u32 nr_pbl , u32 nr_rqt , u32 nr_qpid , u32 nr_cqid , u32 nr_pdid ) ; 
/*--cxio_hal_init_resource--*/
u32 cxio_hal_get_stag ( struct cxio_hal_resource * rscp ) ; 
/*--cxio_hal_get_stag--*/
void cxio_hal_put_stag ( struct cxio_hal_resource * rscp , u32 stag ) ; 
/*--cxio_hal_put_stag--*/
u32 cxio_hal_get_qpid ( struct cxio_hal_resource * rscp ) ; 
/*--cxio_hal_get_qpid--*/
void cxio_hal_put_qpid ( struct cxio_hal_resource * rscp , u32 qpid ) ; 
/*--cxio_hal_put_qpid--*/
u32 cxio_hal_get_cqid ( struct cxio_hal_resource * rscp ) ; 
/*--cxio_hal_get_cqid--*/
void cxio_hal_put_cqid ( struct cxio_hal_resource * rscp , u32 cqid ) ; 
/*--cxio_hal_put_cqid--*/
u32 cxio_hal_get_pdid ( struct cxio_hal_resource * rscp ) ; 
/*--cxio_hal_get_pdid--*/
void cxio_hal_put_pdid ( struct cxio_hal_resource * rscp , u32 pdid ) ; 
/*--cxio_hal_put_pdid--*/
void cxio_hal_destroy_resource ( struct cxio_hal_resource * rscp ) ; 
/*--cxio_hal_destroy_resource--*/
u32 cxio_hal_pblpool_alloc ( struct cxio_rdev * rdev_p , int size ) ; 
/*--cxio_hal_pblpool_alloc--*/
void cxio_hal_pblpool_free ( struct cxio_rdev * rdev_p , u32 addr , int size ) ; 
/*--cxio_hal_pblpool_free--*/
int cxio_hal_pblpool_create ( struct cxio_rdev * rdev_p ) ; 
/*--cxio_hal_pblpool_create--*/
void cxio_hal_pblpool_destroy ( struct cxio_rdev * rdev_p ) ; 
/*--cxio_hal_pblpool_destroy--*/
u32 cxio_hal_rqtpool_alloc ( struct cxio_rdev * rdev_p , int size ) ; 
/*--cxio_hal_rqtpool_alloc--*/
void cxio_hal_rqtpool_free ( struct cxio_rdev * rdev_p , u32 addr , int size ) ; 
/*--cxio_hal_rqtpool_free--*/
int cxio_hal_rqtpool_create ( struct cxio_rdev * rdev_p ) ; 
/*--cxio_hal_rqtpool_create--*/
void cxio_hal_rqtpool_destroy ( struct cxio_rdev * rdev_p ) ; 
/*--cxio_hal_rqtpool_destroy--*/
void ipath_cq_enter ( struct ipath_cq * cq , struct ib_wc * entry , int solicited ) ; 
/*--ipath_cq_enter--*/
int ipath_poll_cq ( struct ib_cq * ibcq , int num_entries , struct ib_wc * entry ) ; 
/*--ipath_poll_cq--*/
struct ib_cq * ipath_create_cq ( struct ib_device * ibdev , int entries , int comp_vector , struct ib_ucontext * context , struct ib_udata * udata ) ; 
/*--ipath_create_cq--*/
int ipath_destroy_cq ( struct ib_cq * ibcq ) ; 
/*--ipath_destroy_cq--*/
int ipath_req_notify_cq ( struct ib_cq * ibcq , enum ib_cq_notify_flags notify_flags ) ; 
/*--ipath_req_notify_cq--*/
int ipath_resize_cq ( struct ib_cq * ibcq , int cqe , struct ib_udata * udata ) ; 
/*--ipath_resize_cq--*/
int ipath_diag_add ( struct ipath_devdata * dd ) ; 
/*--ipath_diag_add--*/
void ipath_diag_remove ( struct ipath_devdata * dd ) ; 
/*--ipath_diag_remove--*/
const char * ipath_get_unit_name ( int unit ) ; 
/*--ipath_get_unit_name--*/
struct ipath_devdata * ipath_lookup ( int unit ) ; 
/*--ipath_lookup--*/
int ipath_count_units ( int * npresentp , int * nupp , int * maxportsp ) ; 
/*--ipath_count_units--*/
int __attribute__ ( ( weak ) ) ipath_enable_wc ( struct ipath_devdata * dd ) ; 
/*--ipath_enable_wc--*/
void __attribute__ ( ( weak ) ) ipath_disable_wc ( struct ipath_devdata * dd ) ; 
/*--ipath_disable_wc--*/
void ipath_disarm_piobufs ( struct ipath_devdata * dd , unsigned first , unsigned cnt ) ; 
/*--ipath_disarm_piobufs--*/
int ipath_wait_linkstate ( struct ipath_devdata * dd , u32 state , int msecs ) ; 
/*--ipath_wait_linkstate--*/
int ipath_decode_err ( struct ipath_devdata * dd , char * buf , size_t blen , ipath_err_t err ) ; 
/*--ipath_decode_err--*/
struct sk_buff * ipath_alloc_skb ( struct ipath_devdata * dd , gfp_t gfp_mask ) ; 
/*--ipath_alloc_skb--*/
void ipath_kreceive ( struct ipath_portdata * pd ) ; 
/*--ipath_kreceive--*/
int ipath_setrcvhdrsize ( struct ipath_devdata * dd , unsigned rhdrsize ) ; 
/*--ipath_setrcvhdrsize--*/
u32 * ipath_getpiobuf ( struct ipath_devdata * dd , u32 plen , u32 * pbufnum ) ; 
/*--ipath_getpiobuf--*/
void ipath_chg_pioavailkernel ( struct ipath_devdata * dd , unsigned start , unsigned len , int avail ) ; 
/*--ipath_chg_pioavailkernel--*/
int ipath_create_rcvhdrq ( struct ipath_devdata * dd , struct ipath_portdata * pd ) ; 
/*--ipath_create_rcvhdrq--*/
void ipath_cancel_sends ( struct ipath_devdata * dd , int restore_sendctrl ) ; 
/*--ipath_cancel_sends--*/
void ipath_force_pio_avail_update ( struct ipath_devdata * dd ) ; 
/*--ipath_force_pio_avail_update--*/
int ipath_set_linkstate ( struct ipath_devdata * dd , u8 newstate ) ; 
/*--ipath_set_linkstate--*/
int ipath_set_mtu ( struct ipath_devdata * dd , u16 arg ) ; 
/*--ipath_set_mtu--*/
int ipath_set_lid ( struct ipath_devdata * dd , u32 lid , u8 lmc ) ; 
/*--ipath_set_lid--*/
void ipath_write_kreg_port ( const struct ipath_devdata * dd , ipath_kreg regno , unsigned port , u64 value ) ; 
/*--ipath_write_kreg_port--*/
void ipath_set_led_override ( struct ipath_devdata * dd , unsigned int val ) ; 
/*--ipath_set_led_override--*/
void ipath_shutdown_device ( struct ipath_devdata * dd ) ; 
/*--ipath_shutdown_device--*/
void ipath_free_pddata ( struct ipath_devdata * dd , struct ipath_portdata * pd ) ; 
/*--ipath_free_pddata--*/
int ipath_reset_device ( int unit ) ; 
/*--ipath_reset_device--*/
void ipath_hol_down ( struct ipath_devdata * dd ) ; 
/*--ipath_hol_down--*/
void ipath_hol_up ( struct ipath_devdata * dd ) ; 
/*--ipath_hol_up--*/
void ipath_hol_event ( unsigned long opaque ) ; 
/*--ipath_hol_event--*/
int ipath_set_rx_pol_inv ( struct ipath_devdata * dd , u8 new_pol_inv ) ; 
/*--ipath_set_rx_pol_inv--*/
void ipath_enable_armlaunch ( struct ipath_devdata * dd ) ; 
/*--ipath_enable_armlaunch--*/
void ipath_disable_armlaunch ( struct ipath_devdata * dd ) ; 
/*--ipath_disable_armlaunch--*/
int ipath_eeprom_read ( struct ipath_devdata * dd , u8 eeprom_offset , void * buff , int len ) ; 
/*--ipath_eeprom_read--*/
int ipath_eeprom_write ( struct ipath_devdata * dd , u8 eeprom_offset , const void * buff , int len ) ; 
/*--ipath_eeprom_write--*/
void ipath_get_eeprom_info ( struct ipath_devdata * dd ) ; 
/*--ipath_get_eeprom_info--*/
int ipath_update_eeprom_log ( struct ipath_devdata * dd ) ; 
/*--ipath_update_eeprom_log--*/
void ipath_inc_eeprom_err ( struct ipath_devdata * dd , u32 eidx , u32 incr ) ; 
/*--ipath_inc_eeprom_err--*/
int ipath_tempsense_read ( struct ipath_devdata * dd , u8 regnum ) ; 
/*--ipath_tempsense_read--*/
int ipath_tempsense_write ( struct ipath_devdata * dd , u8 regnum , u8 data ) ; 
/*--ipath_tempsense_write--*/
int ipath_cdev_init ( int minor , char * name , const struct file_operations * fops , struct cdev * * cdevp , struct device * * devp ) ; 
/*--ipath_cdev_init--*/
void ipath_cdev_cleanup ( struct cdev * * cdevp , struct device * * devp ) ; 
/*--ipath_cdev_cleanup--*/
int ipath_user_add ( struct ipath_devdata * dd ) ; 
/*--ipath_user_add--*/
void ipath_user_remove ( struct ipath_devdata * dd ) ; 
/*--ipath_user_remove--*/
int ipathfs_add_device ( struct ipath_devdata * dd ) ; 
/*--ipathfs_add_device--*/
int ipathfs_remove_device ( struct ipath_devdata * dd ) ; 
/*--ipathfs_remove_device--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ipath_init_ipathfs ( void ) ; 
/*--ipath_init_ipathfs--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ipath_exit_ipathfs ( void ) ; 
/*--ipath_exit_ipathfs--*/
int ipath_init_chip ( struct ipath_devdata * dd , int reinit ) ; 
/*--ipath_init_chip--*/
void ipath_disarm_senderrbufs ( struct ipath_devdata * dd ) ; 
/*--ipath_disarm_senderrbufs--*/
void ipath_format_hwerrors ( u64 hwerrs , const struct ipath_hwerror_msgs * hwerrmsgs , size_t nhwerrmsgs , char * msg , size_t msgl ) ; 
/*--ipath_format_hwerrors--*/
void signal_ib_event ( struct ipath_devdata * dd , enum ib_event_type ev ) ; 
/*--signal_ib_event--*/
void ipath_clear_freeze ( struct ipath_devdata * dd ) ; 
/*--ipath_clear_freeze--*/
irqreturn_t ipath_intr ( int irq , void * data ) ; 
/*--ipath_intr--*/
int ipath_alloc_lkey ( struct ipath_lkey_table * rkt , struct ipath_mregion * mr ) ; 
/*--ipath_alloc_lkey--*/
void ipath_free_lkey ( struct ipath_lkey_table * rkt , u32 lkey ) ; 
/*--ipath_free_lkey--*/
int ipath_lkey_ok ( struct ipath_qp * qp , struct ipath_sge * isge , struct ib_sge * sge , int acc ) ; 
/*--ipath_lkey_ok--*/
int ipath_rkey_ok ( struct ipath_qp * qp , struct ipath_sge_state * ss , u32 len , u64 vaddr , u32 rkey , int acc ) ; 
/*--ipath_rkey_ok--*/
int ipath_process_mad ( struct ib_device * ibdev , int mad_flags , u8 port_num , struct ib_wc * in_wc , struct ib_grh * in_grh , struct ib_mad * in_mad , struct ib_mad * out_mad ) ; 
/*--ipath_process_mad--*/
void ipath_release_mmap_info ( struct kref * ref ) ; 
/*--ipath_release_mmap_info--*/
int ipath_mmap ( struct ib_ucontext * context , struct vm_area_struct * vma ) ; 
/*--ipath_mmap--*/
struct ipath_mmap_info * ipath_create_mmap_info ( struct ipath_ibdev * dev , u32 size , struct ib_ucontext * context , void * obj ) ; 
/*--ipath_create_mmap_info--*/
void ipath_update_mmap_info ( struct ipath_ibdev * dev , struct ipath_mmap_info * ip , u32 size , void * obj ) ; 
/*--ipath_update_mmap_info--*/
struct ib_mr * ipath_get_dma_mr ( struct ib_pd * pd , int acc ) ; 
/*--ipath_get_dma_mr--*/
struct ib_mr * ipath_reg_phys_mr ( struct ib_pd * pd , struct ib_phys_buf * buffer_list , int num_phys_buf , int acc , u64 * iova_start ) ; 
/*--ipath_reg_phys_mr--*/
struct ib_mr * ipath_reg_user_mr ( struct ib_pd * pd , u64 start , u64 length , u64 virt_addr , int mr_access_flags , struct ib_udata * udata ) ; 
/*--ipath_reg_user_mr--*/
int ipath_dereg_mr ( struct ib_mr * ibmr ) ; 
/*--ipath_dereg_mr--*/
struct ib_fmr * ipath_alloc_fmr ( struct ib_pd * pd , int mr_access_flags , struct ib_fmr_attr * fmr_attr ) ; 
/*--ipath_alloc_fmr--*/
int ipath_map_phys_fmr ( struct ib_fmr * ibfmr , u64 * page_list , int list_len , u64 iova ) ; 
/*--ipath_map_phys_fmr--*/
int ipath_unmap_fmr ( struct list_head * fmr_list ) ; 
/*--ipath_unmap_fmr--*/
int ipath_dealloc_fmr ( struct ib_fmr * ibfmr ) ; 
/*--ipath_dealloc_fmr--*/
unsigned ipath_free_all_qps ( struct ipath_qp_table * qpt ) ; 
/*--ipath_free_all_qps--*/
struct ipath_qp * ipath_lookup_qpn ( struct ipath_qp_table * qpt , u32 qpn ) ; 
/*--ipath_lookup_qpn--*/
int ipath_error_qp ( struct ipath_qp * qp , enum ib_wc_status err ) ; 
/*--ipath_error_qp--*/
int ipath_modify_qp ( struct ib_qp * ibqp , struct ib_qp_attr * attr , int attr_mask , struct ib_udata * udata ) ; 
/*--ipath_modify_qp--*/
int ipath_query_qp ( struct ib_qp * ibqp , struct ib_qp_attr * attr , int attr_mask , struct ib_qp_init_attr * init_attr ) ; 
/*--ipath_query_qp--*/
__be32 ipath_compute_aeth ( struct ipath_qp * qp ) ; 
/*--ipath_compute_aeth--*/
struct ib_qp * ipath_create_qp ( struct ib_pd * ibpd , struct ib_qp_init_attr * init_attr , struct ib_udata * udata ) ; 
/*--ipath_create_qp--*/
int ipath_destroy_qp ( struct ib_qp * ibqp ) ; 
/*--ipath_destroy_qp--*/
int ipath_init_qp_table ( struct ipath_ibdev * idev , int size ) ; 
/*--ipath_init_qp_table--*/
void ipath_get_credit ( struct ipath_qp * qp , u32 aeth ) ; 
/*--ipath_get_credit--*/
int ipath_make_rc_req ( struct ipath_qp * qp ) ; 
/*--ipath_make_rc_req--*/
void ipath_restart_rc ( struct ipath_qp * qp , u32 psn ) ; 
/*--ipath_restart_rc--*/
void ipath_rc_error ( struct ipath_qp * qp , enum ib_wc_status err ) ; 
/*--ipath_rc_error--*/
void ipath_rc_rcv ( struct ipath_ibdev * dev , struct ipath_ib_header * hdr , int has_grh , void * data , u32 tlen , struct ipath_qp * qp ) ; 
/*--ipath_rc_rcv--*/
void ipath_insert_rnr_queue ( struct ipath_qp * qp ) ; 
/*--ipath_insert_rnr_queue--*/
int ipath_init_sge ( struct ipath_qp * qp , struct ipath_rwqe * wqe , u32 * lengthp , struct ipath_sge_state * ss ) ; 
/*--ipath_init_sge--*/
int ipath_get_rwqe ( struct ipath_qp * qp , int wr_id_only ) ; 
/*--ipath_get_rwqe--*/
u32 ipath_make_grh ( struct ipath_ibdev * dev , struct ib_grh * hdr , struct ib_global_route * grh , u32 hwords , u32 nwords ) ; 
/*--ipath_make_grh--*/
void ipath_make_ruc_header ( struct ipath_ibdev * dev , struct ipath_qp * qp , struct ipath_other_headers * ohdr , u32 bth0 , u32 bth2 ) ; 
/*--ipath_make_ruc_header--*/
void ipath_do_send ( unsigned long data ) ; 
/*--ipath_do_send--*/
void ipath_send_complete ( struct ipath_qp * qp , struct ipath_swqe * wqe , enum ib_wc_status status ) ; 
/*--ipath_send_complete--*/
int ipath_sdma_make_progress ( struct ipath_devdata * dd ) ; 
/*--ipath_sdma_make_progress--*/
void ipath_sdma_intr ( struct ipath_devdata * dd ) ; 
/*--ipath_sdma_intr--*/
int setup_sdma ( struct ipath_devdata * dd ) ; 
/*--setup_sdma--*/
void teardown_sdma ( struct ipath_devdata * dd ) ; 
/*--teardown_sdma--*/
void ipath_restart_sdma ( struct ipath_devdata * dd ) ; 
/*--ipath_restart_sdma--*/
int ipath_sdma_verbs_send ( struct ipath_devdata * dd , struct ipath_sge_state * ss , u32 dwords , struct ipath_verbs_txreq * tx ) ; 
/*--ipath_sdma_verbs_send--*/
int ipath_post_srq_receive ( struct ib_srq * ibsrq , struct ib_recv_wr * wr , struct ib_recv_wr * * bad_wr ) ; 
/*--ipath_post_srq_receive--*/
struct ib_srq * ipath_create_srq ( struct ib_pd * ibpd , struct ib_srq_init_attr * srq_init_attr , struct ib_udata * udata ) ; 
/*--ipath_create_srq--*/
int ipath_modify_srq ( struct ib_srq * ibsrq , struct ib_srq_attr * attr , enum ib_srq_attr_mask attr_mask , struct ib_udata * udata ) ; 
/*--ipath_modify_srq--*/
int ipath_query_srq ( struct ib_srq * ibsrq , struct ib_srq_attr * attr ) ; 
/*--ipath_query_srq--*/
int ipath_destroy_srq ( struct ib_srq * ibsrq ) ; 
/*--ipath_destroy_srq--*/
u64 ipath_snap_cntr ( struct ipath_devdata * dd , ipath_creg creg ) ; 
/*--ipath_snap_cntr--*/
void ipath_get_faststats ( unsigned long opaque ) ; 
/*--ipath_get_faststats--*/
int ipath_parse_ushort ( const char * str , unsigned short * valp ) ; 
/*--ipath_parse_ushort--*/
int ipath_expose_reset ( struct device * dev ) ; 
/*--ipath_expose_reset--*/
int ipath_device_create_group ( struct device * dev , struct ipath_devdata * dd ) ; 
/*--ipath_device_create_group--*/
void ipath_device_remove_group ( struct device * dev , struct ipath_devdata * dd ) ; 
/*--ipath_device_remove_group--*/
int ipath_make_uc_req ( struct ipath_qp * qp ) ; 
/*--ipath_make_uc_req--*/
void ipath_uc_rcv ( struct ipath_ibdev * dev , struct ipath_ib_header * hdr , int has_grh , void * data , u32 tlen , struct ipath_qp * qp ) ; 
/*--ipath_uc_rcv--*/
int ipath_make_ud_req ( struct ipath_qp * qp ) ; 
/*--ipath_make_ud_req--*/
void ipath_ud_rcv ( struct ipath_ibdev * dev , struct ipath_ib_header * hdr , int has_grh , void * data , u32 tlen , struct ipath_qp * qp ) ; 
/*--ipath_ud_rcv--*/
dma_addr_t ipath_map_page ( struct pci_dev * hwdev , struct page * page , unsigned long offset , size_t size , int direction ) ; 
/*--ipath_map_page--*/
dma_addr_t ipath_map_single ( struct pci_dev * hwdev , void * ptr , size_t size , int direction ) ; 
/*--ipath_map_single--*/
int ipath_get_user_pages ( unsigned long start_page , size_t num_pages , struct page * * p ) ; 
/*--ipath_get_user_pages--*/
void ipath_release_user_pages ( struct page * * p , size_t num_pages ) ; 
/*--ipath_release_user_pages--*/
void ipath_release_user_pages_on_close ( struct page * * p , size_t num_pages ) ; 
/*--ipath_release_user_pages_on_close--*/
struct ipath_user_sdma_queue * ipath_user_sdma_queue_create ( struct device * dev , int unit , int port , int sport ) ; 
/*--ipath_user_sdma_queue_create--*/
void ipath_user_sdma_queue_destroy ( struct ipath_user_sdma_queue * pq ) ; 
/*--ipath_user_sdma_queue_destroy--*/
void ipath_user_sdma_queue_drain ( struct ipath_devdata * dd , struct ipath_user_sdma_queue * pq ) ; 
/*--ipath_user_sdma_queue_drain--*/
int ipath_user_sdma_writev ( struct ipath_devdata * dd , struct ipath_user_sdma_queue * pq , const struct iovec * iov , unsigned long dim ) ; 
/*--ipath_user_sdma_writev--*/
int ipath_user_sdma_make_progress ( struct ipath_devdata * dd , struct ipath_user_sdma_queue * pq ) ; 
/*--ipath_user_sdma_make_progress--*/
u32 ipath_user_sdma_complete_counter ( const struct ipath_user_sdma_queue * pq ) ; 
/*--ipath_user_sdma_complete_counter--*/
u32 ipath_user_sdma_inflight_counter ( struct ipath_user_sdma_queue * pq ) ; 
/*--ipath_user_sdma_inflight_counter--*/
struct ipath_mcast * ipath_mcast_find ( union ib_gid * mgid ) ; 
/*--ipath_mcast_find--*/
int ipath_multicast_attach ( struct ib_qp * ibqp , union ib_gid * gid , u16 lid ) ; 
/*--ipath_multicast_attach--*/
int ipath_multicast_detach ( struct ib_qp * ibqp , union ib_gid * gid , u16 lid ) ; 
/*--ipath_multicast_detach--*/
int ipath_mcast_tree_empty ( void ) ; 
/*--ipath_mcast_tree_empty--*/
void ipath_copy_sge ( struct ipath_sge_state * ss , void * data , u32 length ) ; 
/*--ipath_copy_sge--*/
void ipath_skip_sge ( struct ipath_sge_state * ss , u32 length ) ; 
/*--ipath_skip_sge--*/
void ipath_ib_rcv ( struct ipath_ibdev * dev , void * rhdr , void * data , u32 tlen ) ; 
/*--ipath_ib_rcv--*/
unsigned ipath_ib_rate_to_mult ( enum ib_rate rate ) ; 
/*--ipath_ib_rate_to_mult--*/
int ipath_verbs_send ( struct ipath_qp * qp , struct ipath_ib_header * hdr , u32 hdrwords , struct ipath_sge_state * ss , u32 len ) ; 
/*--ipath_verbs_send--*/
int ipath_snapshot_counters ( struct ipath_devdata * dd , u64 * swords , u64 * rwords , u64 * spkts , u64 * rpkts , u64 * xmit_wait ) ; 
/*--ipath_snapshot_counters--*/
int ipath_get_counters ( struct ipath_devdata * dd , struct ipath_verbs_counters * cntrs ) ; 
/*--ipath_get_counters--*/
int ipath_ib_piobufavail ( struct ipath_ibdev * dev ) ; 
/*--ipath_ib_piobufavail--*/
u32 ipath_get_cr_errpkey ( struct ipath_devdata * dd ) ; 
/*--ipath_get_cr_errpkey--*/
unsigned ipath_get_npkeys ( struct ipath_devdata * dd ) ; 
/*--ipath_get_npkeys--*/
unsigned ipath_get_pkey ( struct ipath_devdata * dd , unsigned index ) ; 
/*--ipath_get_pkey--*/
int ipath_register_ib_device ( struct ipath_devdata * dd ) ; 
/*--ipath_register_ib_device--*/
void ipath_unregister_ib_device ( struct ipath_ibdev * dev ) ; 
/*--ipath_unregister_ib_device--*/
void ipath_init_iba6110_funcs ( struct ipath_devdata * dd ) ; 
/*--ipath_init_iba6110_funcs--*/
int ipath_enable_wc ( struct ipath_devdata * dd ) ; 
void ipath_disable_wc ( struct ipath_devdata * dd ) ; 
int ipath_unordered_wc ( void ) ; 
/*--ipath_unordered_wc--*/
struct ib_ah * mlx4_ib_create_ah ( struct ib_pd * pd , struct ib_ah_attr * ah_attr ) ; 
/*--mlx4_ib_create_ah--*/
int mlx4_ib_query_ah ( struct ib_ah * ibah , struct ib_ah_attr * ah_attr ) ; 
/*--mlx4_ib_query_ah--*/
int mlx4_ib_destroy_ah ( struct ib_ah * ah ) ; 
/*--mlx4_ib_destroy_ah--*/
int mlx4_ib_modify_cq ( struct ib_cq * cq , u16 cq_count , u16 cq_period ) ; 
/*--mlx4_ib_modify_cq--*/
struct ib_cq * mlx4_ib_create_cq ( struct ib_device * ibdev , int entries , int vector , struct ib_ucontext * context , struct ib_udata * udata ) ; 
/*--mlx4_ib_create_cq--*/
int mlx4_ib_resize_cq ( struct ib_cq * ibcq , int entries , struct ib_udata * udata ) ; 
/*--mlx4_ib_resize_cq--*/
int mlx4_ib_destroy_cq ( struct ib_cq * cq ) ; 
/*--mlx4_ib_destroy_cq--*/
int mlx4_ib_poll_cq ( struct ib_cq * ibcq , int num_entries , struct ib_wc * wc ) ; 
/*--mlx4_ib_poll_cq--*/
int mlx4_ib_arm_cq ( struct ib_cq * ibcq , enum ib_cq_notify_flags flags ) ; 
/*--mlx4_ib_arm_cq--*/
void __mlx4_ib_cq_clean ( struct mlx4_ib_cq * cq , u32 qpn , struct mlx4_ib_srq * srq ) ; 
/*--__mlx4_ib_cq_clean--*/
void mlx4_ib_cq_clean ( struct mlx4_ib_cq * cq , u32 qpn , struct mlx4_ib_srq * srq ) ; 
/*--mlx4_ib_cq_clean--*/
int mlx4_ib_db_map_user ( struct mlx4_ib_ucontext * context , unsigned long virt , struct mlx4_db * db ) ; 
/*--mlx4_ib_db_map_user--*/
void mlx4_ib_db_unmap_user ( struct mlx4_ib_ucontext * context , struct mlx4_db * db ) ; 
/*--mlx4_ib_db_unmap_user--*/
int mlx4_MAD_IFC ( struct mlx4_ib_dev * dev , int ignore_mkey , int ignore_bkey , int port , struct ib_wc * in_wc , struct ib_grh * in_grh , void * in_mad , void * response_mad ) ; 
/*--mlx4_MAD_IFC--*/
int mlx4_ib_process_mad ( struct ib_device * ibdev , int mad_flags , u8 port_num , struct ib_wc * in_wc , struct ib_grh * in_grh , struct ib_mad * in_mad , struct ib_mad * out_mad ) ; 
/*--mlx4_ib_process_mad--*/
int mlx4_ib_mad_init ( struct mlx4_ib_dev * dev ) ; 
/*--mlx4_ib_mad_init--*/
void mlx4_ib_mad_cleanup ( struct mlx4_ib_dev * dev ) ; 
/*--mlx4_ib_mad_cleanup--*/
struct ib_mr * mlx4_ib_get_dma_mr ( struct ib_pd * pd , int acc ) ; 
/*--mlx4_ib_get_dma_mr--*/
int mlx4_ib_umem_write_mtt ( struct mlx4_ib_dev * dev , struct mlx4_mtt * mtt , struct ib_umem * umem ) ; 
/*--mlx4_ib_umem_write_mtt--*/
struct ib_mr * mlx4_ib_reg_user_mr ( struct ib_pd * pd , u64 start , u64 length , u64 virt_addr , int access_flags , struct ib_udata * udata ) ; 
/*--mlx4_ib_reg_user_mr--*/
int mlx4_ib_dereg_mr ( struct ib_mr * ibmr ) ; 
/*--mlx4_ib_dereg_mr--*/
struct ib_mr * mlx4_ib_alloc_fast_reg_mr ( struct ib_pd * pd , int max_page_list_len ) ; 
/*--mlx4_ib_alloc_fast_reg_mr--*/
struct ib_fast_reg_page_list * mlx4_ib_alloc_fast_reg_page_list ( struct ib_device * ibdev , int page_list_len ) ; 
/*--mlx4_ib_alloc_fast_reg_page_list--*/
void mlx4_ib_free_fast_reg_page_list ( struct ib_fast_reg_page_list * page_list ) ; 
/*--mlx4_ib_free_fast_reg_page_list--*/
struct ib_fmr * mlx4_ib_fmr_alloc ( struct ib_pd * pd , int acc , struct ib_fmr_attr * fmr_attr ) ; 
/*--mlx4_ib_fmr_alloc--*/
int mlx4_ib_map_phys_fmr ( struct ib_fmr * ibfmr , u64 * page_list , int npages , u64 iova ) ; 
/*--mlx4_ib_map_phys_fmr--*/
int mlx4_ib_unmap_fmr ( struct list_head * fmr_list ) ; 
/*--mlx4_ib_unmap_fmr--*/
int mlx4_ib_fmr_dealloc ( struct ib_fmr * ibfmr ) ; 
/*--mlx4_ib_fmr_dealloc--*/
struct ib_qp * mlx4_ib_create_qp ( struct ib_pd * pd , struct ib_qp_init_attr * init_attr , struct ib_udata * udata ) ; 
/*--mlx4_ib_create_qp--*/
int mlx4_ib_destroy_qp ( struct ib_qp * qp ) ; 
/*--mlx4_ib_destroy_qp--*/
int mlx4_ib_modify_qp ( struct ib_qp * ibqp , struct ib_qp_attr * attr , int attr_mask , struct ib_udata * udata ) ; 
/*--mlx4_ib_modify_qp--*/
int mlx4_ib_post_send ( struct ib_qp * ibqp , struct ib_send_wr * wr , struct ib_send_wr * * bad_wr ) ; 
/*--mlx4_ib_post_send--*/
int mlx4_ib_post_recv ( struct ib_qp * ibqp , struct ib_recv_wr * wr , struct ib_recv_wr * * bad_wr ) ; 
/*--mlx4_ib_post_recv--*/
int mlx4_ib_query_qp ( struct ib_qp * ibqp , struct ib_qp_attr * qp_attr , int qp_attr_mask , struct ib_qp_init_attr * qp_init_attr ) ; 
/*--mlx4_ib_query_qp--*/
struct ib_srq * mlx4_ib_create_srq ( struct ib_pd * pd , struct ib_srq_init_attr * init_attr , struct ib_udata * udata ) ; 
/*--mlx4_ib_create_srq--*/
int mlx4_ib_modify_srq ( struct ib_srq * ibsrq , struct ib_srq_attr * attr , enum ib_srq_attr_mask attr_mask , struct ib_udata * udata ) ; 
/*--mlx4_ib_modify_srq--*/
int mlx4_ib_query_srq ( struct ib_srq * ibsrq , struct ib_srq_attr * srq_attr ) ; 
/*--mlx4_ib_query_srq--*/
int mlx4_ib_destroy_srq ( struct ib_srq * srq ) ; 
/*--mlx4_ib_destroy_srq--*/
void mlx4_ib_free_srq_wqe ( struct mlx4_ib_srq * srq , int wqe_index ) ; 
/*--mlx4_ib_free_srq_wqe--*/
int mlx4_ib_post_srq_recv ( struct ib_srq * ibsrq , struct ib_recv_wr * wr , struct ib_recv_wr * * bad_wr ) ; 
/*--mlx4_ib_post_srq_recv--*/
int __mthca_restart_one ( struct pci_dev * pdev ) ; 
/*--__mthca_restart_one--*/
void mthca_cmd_event ( struct mthca_dev * dev , u16 token , u8 status , u64 out_param ) ; 
/*--mthca_cmd_event--*/
int mthca_cmd_init ( struct mthca_dev * dev ) ; 
/*--mthca_cmd_init--*/
void mthca_cmd_cleanup ( struct mthca_dev * dev ) ; 
/*--mthca_cmd_cleanup--*/
int mthca_cmd_use_events ( struct mthca_dev * dev ) ; 
/*--mthca_cmd_use_events--*/
void mthca_cmd_use_polling ( struct mthca_dev * dev ) ; 
/*--mthca_cmd_use_polling--*/
struct mthca_mailbox * mthca_alloc_mailbox ( struct mthca_dev * dev , gfp_t gfp_mask ) ; 
/*--mthca_alloc_mailbox--*/
void mthca_free_mailbox ( struct mthca_dev * dev , struct mthca_mailbox * mailbox ) ; 
/*--mthca_free_mailbox--*/
int mthca_SYS_EN ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_SYS_EN--*/
int mthca_SYS_DIS ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_SYS_DIS--*/
int mthca_MAP_FA ( struct mthca_dev * dev , struct mthca_icm * icm , u8 * status ) ; 
/*--mthca_MAP_FA--*/
int mthca_UNMAP_FA ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_UNMAP_FA--*/
int mthca_RUN_FW ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_RUN_FW--*/
int mthca_QUERY_FW ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_QUERY_FW--*/
int mthca_ENABLE_LAM ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_ENABLE_LAM--*/
int mthca_DISABLE_LAM ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_DISABLE_LAM--*/
int mthca_QUERY_DDR ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_QUERY_DDR--*/
int mthca_QUERY_DEV_LIM ( struct mthca_dev * dev , struct mthca_dev_lim * dev_lim , u8 * status ) ; 
/*--mthca_QUERY_DEV_LIM--*/
int mthca_QUERY_ADAPTER ( struct mthca_dev * dev , struct mthca_adapter * adapter , u8 * status ) ; 
/*--mthca_QUERY_ADAPTER--*/
int mthca_INIT_HCA ( struct mthca_dev * dev , struct mthca_init_hca_param * param , u8 * status ) ; 
/*--mthca_INIT_HCA--*/
int mthca_INIT_IB ( struct mthca_dev * dev , struct mthca_init_ib_param * param , int port , u8 * status ) ; 
/*--mthca_INIT_IB--*/
int mthca_CLOSE_IB ( struct mthca_dev * dev , int port , u8 * status ) ; 
/*--mthca_CLOSE_IB--*/
int mthca_CLOSE_HCA ( struct mthca_dev * dev , int panic , u8 * status ) ; 
/*--mthca_CLOSE_HCA--*/
int mthca_SET_IB ( struct mthca_dev * dev , struct mthca_set_ib_param * param , int port , u8 * status ) ; 
/*--mthca_SET_IB--*/
int mthca_MAP_ICM ( struct mthca_dev * dev , struct mthca_icm * icm , u64 virt , u8 * status ) ; 
/*--mthca_MAP_ICM--*/
int mthca_MAP_ICM_page ( struct mthca_dev * dev , u64 dma_addr , u64 virt , u8 * status ) ; 
/*--mthca_MAP_ICM_page--*/
int mthca_UNMAP_ICM ( struct mthca_dev * dev , u64 virt , u32 page_count , u8 * status ) ; 
/*--mthca_UNMAP_ICM--*/
int mthca_MAP_ICM_AUX ( struct mthca_dev * dev , struct mthca_icm * icm , u8 * status ) ; 
/*--mthca_MAP_ICM_AUX--*/
int mthca_UNMAP_ICM_AUX ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_UNMAP_ICM_AUX--*/
int mthca_SET_ICM_SIZE ( struct mthca_dev * dev , u64 icm_size , u64 * aux_pages , u8 * status ) ; 
/*--mthca_SET_ICM_SIZE--*/
int mthca_SW2HW_MPT ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int mpt_index , u8 * status ) ; 
/*--mthca_SW2HW_MPT--*/
int mthca_HW2SW_MPT ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int mpt_index , u8 * status ) ; 
/*--mthca_HW2SW_MPT--*/
int mthca_WRITE_MTT ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int num_mtt , u8 * status ) ; 
/*--mthca_WRITE_MTT--*/
int mthca_SYNC_TPT ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_SYNC_TPT--*/
int mthca_MAP_EQ ( struct mthca_dev * dev , u64 event_mask , int unmap , int eq_num , u8 * status ) ; 
/*--mthca_MAP_EQ--*/
int mthca_SW2HW_EQ ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int eq_num , u8 * status ) ; 
/*--mthca_SW2HW_EQ--*/
int mthca_HW2SW_EQ ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int eq_num , u8 * status ) ; 
/*--mthca_HW2SW_EQ--*/
int mthca_SW2HW_CQ ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int cq_num , u8 * status ) ; 
/*--mthca_SW2HW_CQ--*/
int mthca_HW2SW_CQ ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int cq_num , u8 * status ) ; 
/*--mthca_HW2SW_CQ--*/
int mthca_RESIZE_CQ ( struct mthca_dev * dev , int cq_num , u32 lkey , u8 log_size , u8 * status ) ; 
/*--mthca_RESIZE_CQ--*/
int mthca_SW2HW_SRQ ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int srq_num , u8 * status ) ; 
/*--mthca_SW2HW_SRQ--*/
int mthca_HW2SW_SRQ ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , int srq_num , u8 * status ) ; 
/*--mthca_HW2SW_SRQ--*/
int mthca_QUERY_SRQ ( struct mthca_dev * dev , u32 num , struct mthca_mailbox * mailbox , u8 * status ) ; 
/*--mthca_QUERY_SRQ--*/
int mthca_ARM_SRQ ( struct mthca_dev * dev , int srq_num , int limit , u8 * status ) ; 
/*--mthca_ARM_SRQ--*/
int mthca_MODIFY_QP ( struct mthca_dev * dev , enum ib_qp_state cur , enum ib_qp_state next , u32 num , int is_ee , struct mthca_mailbox * mailbox , u32 optmask , u8 * status ) ; 
/*--mthca_MODIFY_QP--*/
int mthca_QUERY_QP ( struct mthca_dev * dev , u32 num , int is_ee , struct mthca_mailbox * mailbox , u8 * status ) ; 
/*--mthca_QUERY_QP--*/
int mthca_CONF_SPECIAL_QP ( struct mthca_dev * dev , int type , u32 qpn , u8 * status ) ; 
/*--mthca_CONF_SPECIAL_QP--*/
int mthca_MAD_IFC ( struct mthca_dev * dev , int ignore_mkey , int ignore_bkey , int port , struct ib_wc * in_wc , struct ib_grh * in_grh , void * in_mad , void * response_mad , u8 * status ) ; 
/*--mthca_MAD_IFC--*/
int mthca_READ_MGM ( struct mthca_dev * dev , int index , struct mthca_mailbox * mailbox , u8 * status ) ; 
/*--mthca_READ_MGM--*/
int mthca_WRITE_MGM ( struct mthca_dev * dev , int index , struct mthca_mailbox * mailbox , u8 * status ) ; 
/*--mthca_WRITE_MGM--*/
int mthca_MGID_HASH ( struct mthca_dev * dev , struct mthca_mailbox * mailbox , u16 * hash , u8 * status ) ; 
/*--mthca_MGID_HASH--*/
int mthca_NOP ( struct mthca_dev * dev , u8 * status ) ; 
/*--mthca_NOP--*/
s64 mthca_make_profile ( struct mthca_dev * dev , struct mthca_profile * request , struct mthca_dev_lim * dev_lim , struct mthca_init_hca_param * init_hca ) ; 
/*--mthca_make_profile--*/
int mthca_reset ( struct mthca_dev * mdev ) ; 
/*--mthca_reset--*/
u32 mthca_alloc ( struct mthca_alloc * alloc ) ; 
/*--mthca_alloc--*/
void mthca_free ( struct mthca_alloc * alloc , u32 obj ) ; 
/*--mthca_free--*/
int mthca_alloc_init ( struct mthca_alloc * alloc , u32 num , u32 mask , u32 reserved ) ; 
/*--mthca_alloc_init--*/
void mthca_alloc_cleanup ( struct mthca_alloc * alloc ) ; 
/*--mthca_alloc_cleanup--*/
void * mthca_array_get ( struct mthca_array * array , int index ) ; 
/*--mthca_array_get--*/
int mthca_array_set ( struct mthca_array * array , int index , void * value ) ; 
/*--mthca_array_set--*/
void mthca_array_clear ( struct mthca_array * array , int index ) ; 
/*--mthca_array_clear--*/
int mthca_array_init ( struct mthca_array * array , int nent ) ; 
/*--mthca_array_init--*/
void mthca_array_cleanup ( struct mthca_array * array , int nent ) ; 
/*--mthca_array_cleanup--*/
int mthca_buf_alloc ( struct mthca_dev * dev , int size , int max_direct , union mthca_buf * buf , int * is_direct , struct mthca_pd * pd , int hca_write , struct mthca_mr * mr ) ; 
/*--mthca_buf_alloc--*/
void mthca_buf_free ( struct mthca_dev * dev , int size , union mthca_buf * buf , int is_direct , struct mthca_mr * mr ) ; 
/*--mthca_buf_free--*/
int mthca_map_eq_icm ( struct mthca_dev * dev , u64 icm_virt ) ; 
/*--mthca_map_eq_icm--*/
void mthca_unmap_eq_icm ( struct mthca_dev * dev ) ; 
/*--mthca_unmap_eq_icm--*/
int mthca_init_eq_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_eq_table--*/
void mthca_cleanup_eq_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_eq_table--*/
int mthca_pd_alloc ( struct mthca_dev * dev , int privileged , struct mthca_pd * pd ) ; 
/*--mthca_pd_alloc--*/
void mthca_pd_free ( struct mthca_dev * dev , struct mthca_pd * pd ) ; 
/*--mthca_pd_free--*/
int mthca_init_pd_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_pd_table--*/
void mthca_cleanup_pd_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_pd_table--*/
void mthca_cq_completion ( struct mthca_dev * dev , u32 cqn ) ; 
/*--mthca_cq_completion--*/
void mthca_cq_event ( struct mthca_dev * dev , u32 cqn , enum ib_event_type event_type ) ; 
/*--mthca_cq_event--*/
void mthca_cq_clean ( struct mthca_dev * dev , struct mthca_cq * cq , u32 qpn , struct mthca_srq * srq ) ; 
/*--mthca_cq_clean--*/
void mthca_cq_resize_copy_cqes ( struct mthca_cq * cq ) ; 
/*--mthca_cq_resize_copy_cqes--*/
int mthca_alloc_cq_buf ( struct mthca_dev * dev , struct mthca_cq_buf * buf , int nent ) ; 
/*--mthca_alloc_cq_buf--*/
void mthca_free_cq_buf ( struct mthca_dev * dev , struct mthca_cq_buf * buf , int cqe ) ; 
/*--mthca_free_cq_buf--*/
int mthca_poll_cq ( struct ib_cq * ibcq , int num_entries , struct ib_wc * entry ) ; 
/*--mthca_poll_cq--*/
int mthca_tavor_arm_cq ( struct ib_cq * cq , enum ib_cq_notify_flags flags ) ; 
/*--mthca_tavor_arm_cq--*/
int mthca_arbel_arm_cq ( struct ib_cq * ibcq , enum ib_cq_notify_flags flags ) ; 
/*--mthca_arbel_arm_cq--*/
int mthca_init_cq ( struct mthca_dev * dev , int nent , struct mthca_ucontext * ctx , u32 pdn , struct mthca_cq * cq ) ; 
/*--mthca_init_cq--*/
void mthca_free_cq ( struct mthca_dev * dev , struct mthca_cq * cq ) ; 
/*--mthca_free_cq--*/
int mthca_init_cq_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_cq_table--*/
void mthca_cleanup_cq_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_cq_table--*/
struct mthca_mtt * mthca_alloc_mtt ( struct mthca_dev * dev , int size ) ; 
/*--mthca_alloc_mtt--*/
void mthca_free_mtt ( struct mthca_dev * dev , struct mthca_mtt * mtt ) ; 
/*--mthca_free_mtt--*/
int mthca_write_mtt_size ( struct mthca_dev * dev ) ; 
/*--mthca_write_mtt_size--*/
int mthca_write_mtt ( struct mthca_dev * dev , struct mthca_mtt * mtt , int start_index , u64 * buffer_list , int list_len ) ; 
/*--mthca_write_mtt--*/
int mthca_mr_alloc ( struct mthca_dev * dev , u32 pd , int buffer_size_shift , u64 iova , u64 total_size , u32 access , struct mthca_mr * mr ) ; 
/*--mthca_mr_alloc--*/
int mthca_mr_alloc_notrans ( struct mthca_dev * dev , u32 pd , u32 access , struct mthca_mr * mr ) ; 
/*--mthca_mr_alloc_notrans--*/
int mthca_mr_alloc_phys ( struct mthca_dev * dev , u32 pd , u64 * buffer_list , int buffer_size_shift , int list_len , u64 iova , u64 total_size , u32 access , struct mthca_mr * mr ) ; 
/*--mthca_mr_alloc_phys--*/
void mthca_free_mr ( struct mthca_dev * dev , struct mthca_mr * mr ) ; 
/*--mthca_free_mr--*/
int mthca_fmr_alloc ( struct mthca_dev * dev , u32 pd , u32 access , struct mthca_fmr * mr ) ; 
/*--mthca_fmr_alloc--*/
int mthca_free_fmr ( struct mthca_dev * dev , struct mthca_fmr * fmr ) ; 
/*--mthca_free_fmr--*/
int mthca_tavor_map_phys_fmr ( struct ib_fmr * ibfmr , u64 * page_list , int list_len , u64 iova ) ; 
/*--mthca_tavor_map_phys_fmr--*/
int mthca_arbel_map_phys_fmr ( struct ib_fmr * ibfmr , u64 * page_list , int list_len , u64 iova ) ; 
/*--mthca_arbel_map_phys_fmr--*/
void mthca_tavor_fmr_unmap ( struct mthca_dev * dev , struct mthca_fmr * fmr ) ; 
/*--mthca_tavor_fmr_unmap--*/
void mthca_arbel_fmr_unmap ( struct mthca_dev * dev , struct mthca_fmr * fmr ) ; 
/*--mthca_arbel_fmr_unmap--*/
int mthca_init_mr_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_mr_table--*/
void mthca_cleanup_mr_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_mr_table--*/
void mthca_qp_event ( struct mthca_dev * dev , u32 qpn , enum ib_event_type event_type ) ; 
/*--mthca_qp_event--*/
int mthca_query_qp ( struct ib_qp * ibqp , struct ib_qp_attr * qp_attr , int qp_attr_mask , struct ib_qp_init_attr * qp_init_attr ) ; 
/*--mthca_query_qp--*/
int mthca_modify_qp ( struct ib_qp * ibqp , struct ib_qp_attr * attr , int attr_mask , struct ib_udata * udata ) ; 
/*--mthca_modify_qp--*/
int mthca_alloc_qp ( struct mthca_dev * dev , struct mthca_pd * pd , struct mthca_cq * send_cq , struct mthca_cq * recv_cq , enum ib_qp_type type , enum ib_sig_type send_policy , struct ib_qp_cap * cap , struct mthca_qp * qp ) ; 
/*--mthca_alloc_qp--*/
int mthca_alloc_sqp ( struct mthca_dev * dev , struct mthca_pd * pd , struct mthca_cq * send_cq , struct mthca_cq * recv_cq , enum ib_sig_type send_policy , struct ib_qp_cap * cap , int qpn , int port , struct mthca_sqp * sqp ) ; 
/*--mthca_alloc_sqp--*/
void mthca_free_qp ( struct mthca_dev * dev , struct mthca_qp * qp ) ; 
/*--mthca_free_qp--*/
int mthca_tavor_post_send ( struct ib_qp * ibqp , struct ib_send_wr * wr , struct ib_send_wr * * bad_wr ) ; 
/*--mthca_tavor_post_send--*/
int mthca_tavor_post_receive ( struct ib_qp * ibqp , struct ib_recv_wr * wr , struct ib_recv_wr * * bad_wr ) ; 
/*--mthca_tavor_post_receive--*/
int mthca_arbel_post_send ( struct ib_qp * ibqp , struct ib_send_wr * wr , struct ib_send_wr * * bad_wr ) ; 
/*--mthca_arbel_post_send--*/
int mthca_arbel_post_receive ( struct ib_qp * ibqp , struct ib_recv_wr * wr , struct ib_recv_wr * * bad_wr ) ; 
/*--mthca_arbel_post_receive--*/
void mthca_free_err_wqe ( struct mthca_dev * dev , struct mthca_qp * qp , int is_send , int index , int * dbd , __be32 * new_wqe ) ; 
/*--mthca_free_err_wqe--*/
int mthca_init_qp_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_qp_table--*/
void mthca_cleanup_qp_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_qp_table--*/
enum ib_rate mthca_rate_to_ib ( struct mthca_dev * dev , u8 mthca_rate , u8 port ) ; 
/*--mthca_rate_to_ib--*/
u8 mthca_get_rate ( struct mthca_dev * dev , int static_rate , u8 port ) ; 
/*--mthca_get_rate--*/
int mthca_create_ah ( struct mthca_dev * dev , struct mthca_pd * pd , struct ib_ah_attr * ah_attr , struct mthca_ah * ah ) ; 
/*--mthca_create_ah--*/
int mthca_destroy_ah ( struct mthca_dev * dev , struct mthca_ah * ah ) ; 
/*--mthca_destroy_ah--*/
int mthca_ah_grh_present ( struct mthca_ah * ah ) ; 
/*--mthca_ah_grh_present--*/
int mthca_read_ah ( struct mthca_dev * dev , struct mthca_ah * ah , struct ib_ud_header * header ) ; 
/*--mthca_read_ah--*/
int mthca_ah_query ( struct ib_ah * ibah , struct ib_ah_attr * attr ) ; 
/*--mthca_ah_query--*/
int mthca_init_av_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_av_table--*/
void mthca_cleanup_av_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_av_table--*/
int mthca_multicast_attach ( struct ib_qp * ibqp , union ib_gid * gid , u16 lid ) ; 
/*--mthca_multicast_attach--*/
int mthca_multicast_detach ( struct ib_qp * ibqp , union ib_gid * gid , u16 lid ) ; 
/*--mthca_multicast_detach--*/
int mthca_init_mcg_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_mcg_table--*/
void mthca_cleanup_mcg_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_mcg_table--*/
int mthca_process_mad ( struct ib_device * ibdev , int mad_flags , u8 port_num , struct ib_wc * in_wc , struct ib_grh * in_grh , struct ib_mad * in_mad , struct ib_mad * out_mad ) ; 
/*--mthca_process_mad--*/
int mthca_create_agents ( struct mthca_dev * dev ) ; 
/*--mthca_create_agents--*/
void mthca_free_agents ( struct mthca_dev * dev ) ; 
/*--mthca_free_agents--*/
int mthca_register_device ( struct mthca_dev * dev ) ; 
/*--mthca_register_device--*/
void mthca_unregister_device ( struct mthca_dev * dev ) ; 
/*--mthca_unregister_device--*/
void mthca_free_icm ( struct mthca_dev * dev , struct mthca_icm * icm , int coherent ) ; 
/*--mthca_free_icm--*/
struct mthca_icm * mthca_alloc_icm ( struct mthca_dev * dev , int npages , gfp_t gfp_mask , int coherent ) ; 
/*--mthca_alloc_icm--*/
int mthca_table_get ( struct mthca_dev * dev , struct mthca_icm_table * table , int obj ) ; 
/*--mthca_table_get--*/
void mthca_table_put ( struct mthca_dev * dev , struct mthca_icm_table * table , int obj ) ; 
/*--mthca_table_put--*/
void * mthca_table_find ( struct mthca_icm_table * table , int obj , dma_addr_t * dma_handle ) ; 
/*--mthca_table_find--*/
int mthca_table_get_range ( struct mthca_dev * dev , struct mthca_icm_table * table , int start , int end ) ; 
/*--mthca_table_get_range--*/
void mthca_table_put_range ( struct mthca_dev * dev , struct mthca_icm_table * table , int start , int end ) ; 
/*--mthca_table_put_range--*/
struct mthca_icm_table * mthca_alloc_icm_table ( struct mthca_dev * dev , u64 virt , int obj_size , int nobj , int reserved , int use_lowmem , int use_coherent ) ; 
/*--mthca_alloc_icm_table--*/
void mthca_free_icm_table ( struct mthca_dev * dev , struct mthca_icm_table * table ) ; 
/*--mthca_free_icm_table--*/
int mthca_map_user_db ( struct mthca_dev * dev , struct mthca_uar * uar , struct mthca_user_db_table * db_tab , int index , u64 uaddr ) ; 
/*--mthca_map_user_db--*/
void mthca_unmap_user_db ( struct mthca_dev * dev , struct mthca_uar * uar , struct mthca_user_db_table * db_tab , int index ) ; 
/*--mthca_unmap_user_db--*/
struct mthca_user_db_table * mthca_init_user_db_tab ( struct mthca_dev * dev ) ; 
/*--mthca_init_user_db_tab--*/
void mthca_cleanup_user_db_tab ( struct mthca_dev * dev , struct mthca_uar * uar , struct mthca_user_db_table * db_tab ) ; 
/*--mthca_cleanup_user_db_tab--*/
int mthca_alloc_db ( struct mthca_dev * dev , enum mthca_db_type type , u32 qn , __be32 * * db ) ; 
/*--mthca_alloc_db--*/
void mthca_free_db ( struct mthca_dev * dev , int type , int db_index ) ; 
/*--mthca_free_db--*/
int mthca_init_db_tab ( struct mthca_dev * dev ) ; 
/*--mthca_init_db_tab--*/
void mthca_cleanup_db_tab ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_db_tab--*/
int mthca_uar_alloc ( struct mthca_dev * dev , struct mthca_uar * uar ) ; 
/*--mthca_uar_alloc--*/
void mthca_uar_free ( struct mthca_dev * dev , struct mthca_uar * uar ) ; 
/*--mthca_uar_free--*/
int mthca_init_uar_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_uar_table--*/
void mthca_cleanup_uar_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_uar_table--*/
int mthca_alloc_srq ( struct mthca_dev * dev , struct mthca_pd * pd , struct ib_srq_attr * attr , struct mthca_srq * srq ) ; 
/*--mthca_alloc_srq--*/
void mthca_free_srq ( struct mthca_dev * dev , struct mthca_srq * srq ) ; 
/*--mthca_free_srq--*/
int mthca_modify_srq ( struct ib_srq * ibsrq , struct ib_srq_attr * attr , enum ib_srq_attr_mask attr_mask , struct ib_udata * udata ) ; 
/*--mthca_modify_srq--*/
int mthca_query_srq ( struct ib_srq * ibsrq , struct ib_srq_attr * srq_attr ) ; 
/*--mthca_query_srq--*/
void mthca_srq_event ( struct mthca_dev * dev , u32 srqn , enum ib_event_type event_type ) ; 
/*--mthca_srq_event--*/
void mthca_free_srq_wqe ( struct mthca_srq * srq , u32 wqe_addr ) ; 
/*--mthca_free_srq_wqe--*/
int mthca_tavor_post_srq_recv ( struct ib_srq * ibsrq , struct ib_recv_wr * wr , struct ib_recv_wr * * bad_wr ) ; 
/*--mthca_tavor_post_srq_recv--*/
int mthca_arbel_post_srq_recv ( struct ib_srq * ibsrq , struct ib_recv_wr * wr , struct ib_recv_wr * * bad_wr ) ; 
/*--mthca_arbel_post_srq_recv--*/
int mthca_max_srq_sge ( struct mthca_dev * dev ) ; 
/*--mthca_max_srq_sge--*/
int mthca_init_srq_table ( struct mthca_dev * dev ) ; 
/*--mthca_init_srq_table--*/
void mthca_cleanup_srq_table ( struct mthca_dev * dev ) ; 
/*--mthca_cleanup_srq_table--*/
void mthca_start_catas_poll ( struct mthca_dev * dev ) ; 
/*--mthca_start_catas_poll--*/
void mthca_stop_catas_poll ( struct mthca_dev * dev ) ; 
/*--mthca_stop_catas_poll--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) mthca_catas_init ( void ) ; 
/*--mthca_catas_init--*/
void mthca_catas_cleanup ( void ) ; 
/*--mthca_catas_cleanup--*/
int ipoib_open ( struct net_device * dev ) ; 
/*--ipoib_open--*/
struct ipoib_path_iter * ipoib_path_iter_init ( struct net_device * dev ) ; 
/*--ipoib_path_iter_init--*/
int ipoib_path_iter_next ( struct ipoib_path_iter * iter ) ; 
/*--ipoib_path_iter_next--*/
void ipoib_path_iter_read ( struct ipoib_path_iter * iter , struct ipoib_path * path ) ; 
/*--ipoib_path_iter_read--*/
void ipoib_mark_paths_invalid ( struct net_device * dev ) ; 
/*--ipoib_mark_paths_invalid--*/
void ipoib_flush_paths ( struct net_device * dev ) ; 
/*--ipoib_flush_paths--*/
struct ipoib_neigh * ipoib_neigh_alloc ( struct neighbour * neighbour , struct net_device * dev ) ; 
/*--ipoib_neigh_alloc--*/
void ipoib_neigh_free ( struct net_device * dev , struct ipoib_neigh * neigh ) ; 
/*--ipoib_neigh_free--*/
int ipoib_dev_init ( struct net_device * dev , struct ib_device * ca , int port ) ; 
/*--ipoib_dev_init--*/
void ipoib_dev_cleanup ( struct net_device * dev ) ; 
/*--ipoib_dev_cleanup--*/
struct ipoib_dev_priv * ipoib_intf_alloc ( const char * name ) ; 
/*--ipoib_intf_alloc--*/
int ipoib_add_umcast_attr ( struct net_device * dev ) ; 
/*--ipoib_add_umcast_attr--*/
int ipoib_add_pkey_attr ( struct net_device * dev ) ; 
/*--ipoib_add_pkey_attr--*/
int ipoib_set_dev_features ( struct ipoib_dev_priv * priv , struct ib_device * hca ) ; 
/*--ipoib_set_dev_features--*/
struct ipoib_ah * ipoib_create_ah ( struct net_device * dev , struct ib_pd * pd , struct ib_ah_attr * attr ) ; 
/*--ipoib_create_ah--*/
void ipoib_free_ah ( struct kref * kref ) ; 
/*--ipoib_free_ah--*/
int ipoib_poll ( struct napi_struct * napi , int budget ) ; 
/*--ipoib_poll--*/
void ipoib_ib_completion ( struct ib_cq * cq , void * dev_ptr ) ; 
/*--ipoib_ib_completion--*/
void ipoib_send_comp_handler ( struct ib_cq * cq , void * dev_ptr ) ; 
/*--ipoib_send_comp_handler--*/
void ipoib_send ( struct net_device * dev , struct sk_buff * skb , struct ipoib_ah * address , u32 qpn ) ; 
/*--ipoib_send--*/
void ipoib_reap_ah ( struct work_struct * work ) ; 
/*--ipoib_reap_ah--*/
int ipoib_ib_dev_open ( struct net_device * dev ) ; 
/*--ipoib_ib_dev_open--*/
int ipoib_ib_dev_up ( struct net_device * dev ) ; 
/*--ipoib_ib_dev_up--*/
int ipoib_ib_dev_down ( struct net_device * dev , int flush ) ; 
/*--ipoib_ib_dev_down--*/
void ipoib_drain_cq ( struct net_device * dev ) ; 
/*--ipoib_drain_cq--*/
int ipoib_ib_dev_stop ( struct net_device * dev , int flush ) ; 
/*--ipoib_ib_dev_stop--*/
int ipoib_ib_dev_init ( struct net_device * dev , struct ib_device * ca , int port ) ; 
/*--ipoib_ib_dev_init--*/
void ipoib_ib_dev_flush_light ( struct work_struct * work ) ; 
/*--ipoib_ib_dev_flush_light--*/
void ipoib_ib_dev_flush_normal ( struct work_struct * work ) ; 
/*--ipoib_ib_dev_flush_normal--*/
void ipoib_ib_dev_flush_heavy ( struct work_struct * work ) ; 
/*--ipoib_ib_dev_flush_heavy--*/
void ipoib_ib_dev_cleanup ( struct net_device * dev ) ; 
/*--ipoib_ib_dev_cleanup--*/
void ipoib_pkey_poll ( struct work_struct * work ) ; 
/*--ipoib_pkey_poll--*/
int ipoib_pkey_dev_delay_open ( struct net_device * dev ) ; 
/*--ipoib_pkey_dev_delay_open--*/
void ipoib_mcast_carrier_on_task ( struct work_struct * work ) ; 
/*--ipoib_mcast_carrier_on_task--*/
void ipoib_mcast_join_task ( struct work_struct * work ) ; 
/*--ipoib_mcast_join_task--*/
int ipoib_mcast_start_thread ( struct net_device * dev ) ; 
/*--ipoib_mcast_start_thread--*/
int ipoib_mcast_stop_thread ( struct net_device * dev , int flush ) ; 
/*--ipoib_mcast_stop_thread--*/
void ipoib_mcast_send ( struct net_device * dev , void * mgid , struct sk_buff * skb ) ; 
/*--ipoib_mcast_send--*/
void ipoib_mcast_dev_flush ( struct net_device * dev ) ; 
/*--ipoib_mcast_dev_flush--*/
void ipoib_mcast_restart_task ( struct work_struct * work ) ; 
/*--ipoib_mcast_restart_task--*/
struct ipoib_mcast_iter * ipoib_mcast_iter_init ( struct net_device * dev ) ; 
/*--ipoib_mcast_iter_init--*/
int ipoib_mcast_iter_next ( struct ipoib_mcast_iter * iter ) ; 
/*--ipoib_mcast_iter_next--*/
void ipoib_mcast_iter_read ( struct ipoib_mcast_iter * iter , union ib_gid * mgid , unsigned long * created , unsigned int * queuelen , unsigned int * complete , unsigned int * send_only ) ; 
/*--ipoib_mcast_iter_read--*/
int ipoib_mcast_attach ( struct net_device * dev , u16 mlid , union ib_gid * mgid , int set_qkey ) ; 
/*--ipoib_mcast_attach--*/
int ipoib_init_qp ( struct net_device * dev ) ; 
/*--ipoib_init_qp--*/
int ipoib_transport_dev_init ( struct net_device * dev , struct ib_device * ca ) ; 
/*--ipoib_transport_dev_init--*/
void ipoib_transport_dev_cleanup ( struct net_device * dev ) ; 
/*--ipoib_transport_dev_cleanup--*/
void ipoib_event ( struct ib_event_handler * handler , struct ib_event * record ) ; 
/*--ipoib_event--*/
int ipoib_vlan_add ( struct net_device * pdev , unsigned short pkey ) ; 
/*--ipoib_vlan_add--*/
int ipoib_vlan_delete ( struct net_device * pdev , unsigned short pkey ) ; 
/*--ipoib_vlan_delete--*/
void ipoib_set_ethtool_ops ( struct net_device * dev ) ; 
/*--ipoib_set_ethtool_ops--*/
void ipoib_cm_handle_rx_wc ( struct net_device * dev , struct ib_wc * wc ) ; 
/*--ipoib_cm_handle_rx_wc--*/
void ipoib_cm_send ( struct net_device * dev , struct sk_buff * skb , struct ipoib_cm_tx * tx ) ; 
/*--ipoib_cm_send--*/
void ipoib_cm_handle_tx_wc ( struct net_device * dev , struct ib_wc * wc ) ; 
/*--ipoib_cm_handle_tx_wc--*/
int ipoib_cm_dev_open ( struct net_device * dev ) ; 
/*--ipoib_cm_dev_open--*/
void ipoib_cm_dev_stop ( struct net_device * dev ) ; 
/*--ipoib_cm_dev_stop--*/
struct ipoib_cm_tx * ipoib_cm_create_tx ( struct net_device * dev , struct ipoib_path * path , struct ipoib_neigh * neigh ) ; 
/*--ipoib_cm_create_tx--*/
void ipoib_cm_destroy_tx ( struct ipoib_cm_tx * tx ) ; 
/*--ipoib_cm_destroy_tx--*/
void ipoib_cm_skb_too_long ( struct net_device * dev , struct sk_buff * skb , unsigned int mtu ) ; 
/*--ipoib_cm_skb_too_long--*/
int ipoib_cm_add_mode_attr ( struct net_device * dev ) ; 
/*--ipoib_cm_add_mode_attr--*/
int ipoib_cm_dev_init ( struct net_device * dev ) ; 
/*--ipoib_cm_dev_init--*/
void ipoib_cm_dev_cleanup ( struct net_device * dev ) ; 
/*--ipoib_cm_dev_cleanup--*/
void ipoib_create_debug_files ( struct net_device * dev ) ; 
/*--ipoib_create_debug_files--*/
void ipoib_delete_debug_files ( struct net_device * dev ) ; 
/*--ipoib_delete_debug_files--*/
int ipoib_register_debugfs ( void ) ; 
/*--ipoib_register_debugfs--*/
void ipoib_unregister_debugfs ( void ) ; 
/*--ipoib_unregister_debugfs--*/
void iser_conn_get ( struct iser_conn * ib_conn ) ; 
/*--iser_conn_get--*/
int iser_conn_put ( struct iser_conn * ib_conn , int can_destroy_id ) ; 
/*--iser_conn_put--*/
void iser_conn_terminate ( struct iser_conn * ib_conn ) ; 
/*--iser_conn_terminate--*/
void iser_conn_init ( struct iser_conn * ib_conn ) ; 
/*--iser_conn_init--*/
int iser_connect ( struct iser_conn * ib_conn , struct sockaddr_in * src_addr , struct sockaddr_in * dst_addr , int non_blocking ) ; 
/*--iser_connect--*/
int iser_reg_page_vec ( struct iser_conn * ib_conn , struct iser_page_vec * page_vec , struct iser_mem_reg * mem_reg ) ; 
/*--iser_reg_page_vec--*/
void iser_unreg_mem ( struct iser_mem_reg * reg ) ; 
/*--iser_unreg_mem--*/
int iser_post_recvl ( struct iser_conn * ib_conn ) ; 
/*--iser_post_recvl--*/
int iser_post_recvm ( struct iser_conn * ib_conn , int count ) ; 
/*--iser_post_recvm--*/
int iser_post_send ( struct iser_conn * ib_conn , struct iser_tx_desc * tx_desc ) ; 
/*--iser_post_send--*/
int iser_alloc_rx_descriptors ( struct iser_conn * ib_conn ) ; 
/*--iser_alloc_rx_descriptors--*/
void iser_free_rx_descriptors ( struct iser_conn * ib_conn ) ; 
/*--iser_free_rx_descriptors--*/
int iser_conn_set_full_featured_mode ( struct iscsi_conn * conn ) ; 
/*--iser_conn_set_full_featured_mode--*/
int iser_send_command ( struct iscsi_conn * conn , struct iscsi_task * task ) ; 
/*--iser_send_command--*/
int iser_send_data_out ( struct iscsi_conn * conn , struct iscsi_task * task , struct iscsi_data * hdr ) ; 
/*--iser_send_data_out--*/
int iser_send_control ( struct iscsi_conn * conn , struct iscsi_task * task ) ; 
/*--iser_send_control--*/
void iser_rcv_completion ( struct iser_rx_desc * rx_desc , unsigned long rx_xfer_len , struct iser_conn * ib_conn ) ; 
/*--iser_rcv_completion--*/
void iser_snd_completion ( struct iser_tx_desc * tx_desc , struct iser_conn * ib_conn ) ; 
/*--iser_snd_completion--*/
void iser_task_rdma_init ( struct iscsi_iser_task * iser_task ) ; 
/*--iser_task_rdma_init--*/
void iser_task_rdma_finalize ( struct iscsi_iser_task * iser_task ) ; 
/*--iser_task_rdma_finalize--*/
void iser_finalize_rdma_unaligned_sg ( struct iscsi_iser_task * iser_task , enum iser_data_dir cmd_dir ) ; 
/*--iser_finalize_rdma_unaligned_sg--*/
int iser_dma_map_task_data ( struct iscsi_iser_task * iser_task , struct iser_data_buf * data , enum iser_data_dir iser_dir , enum dma_data_direction dma_dir ) ; 
/*--iser_dma_map_task_data--*/
void iser_dma_unmap_task_data ( struct iscsi_iser_task * iser_task ) ; 
/*--iser_dma_unmap_task_data--*/
int iser_reg_rdma_mem ( struct iscsi_iser_task * iser_task , enum iser_data_dir cmd_dir ) ; 
/*--iser_reg_rdma_mem--*/
void iscsi_iser_recv ( struct iscsi_conn * conn , struct iscsi_hdr * hdr , char * rx_data , int rx_data_len ) ; 
/*--iscsi_iser_recv--*/
int iser_initialize_task_headers ( struct iscsi_task * task , struct iser_tx_desc * tx_desc ) ; 
/*--iser_initialize_task_headers--*/
int iforce_upload_periodic ( struct iforce * iforce , struct ff_effect * effect , struct ff_effect * old ) ; 
/*--iforce_upload_periodic--*/
int iforce_upload_constant ( struct iforce * iforce , struct ff_effect * effect , struct ff_effect * old ) ; 
/*--iforce_upload_constant--*/
int iforce_upload_condition ( struct iforce * iforce , struct ff_effect * effect , struct ff_effect * old ) ; 
/*--iforce_upload_condition--*/
int iforce_init_device ( struct iforce * iforce ) ; 
/*--iforce_init_device--*/
void iforce_dump_packet ( char * msg , u16 cmd , unsigned char * data ) ; 
/*--iforce_dump_packet--*/
int iforce_send_packet ( struct iforce * iforce , u16 cmd , unsigned char * data ) ; 
/*--iforce_send_packet--*/
int iforce_control_playback ( struct iforce * iforce , u16 id , unsigned int value ) ; 
/*--iforce_control_playback--*/
void iforce_process_packet ( struct iforce * iforce , u16 cmd , unsigned char * data ) ; 
/*--iforce_process_packet--*/
int iforce_get_id_packet ( struct iforce * iforce , char * packet ) ; 
/*--iforce_get_id_packet--*/
void iforce_serial_xmit ( struct iforce * iforce ) ; 
/*--iforce_serial_xmit--*/
void iforce_usb_xmit ( struct iforce * iforce ) ; 
/*--iforce_usb_xmit--*/
void psmouse_queue_work ( struct psmouse * psmouse , struct delayed_work * work , unsigned long delay ) ; 
/*--psmouse_queue_work--*/
void psmouse_set_state ( struct psmouse * psmouse , enum psmouse_state new_state ) ; 
/*--psmouse_set_state--*/
int psmouse_sliced_command ( struct psmouse * psmouse , unsigned char command ) ; 
/*--psmouse_sliced_command--*/
int psmouse_reset ( struct psmouse * psmouse ) ; 
/*--psmouse_reset--*/
void psmouse_set_resolution ( struct psmouse * psmouse , unsigned int resolution ) ; 
/*--psmouse_set_resolution--*/
ssize_t psmouse_attr_show_helper ( struct device * dev , struct device_attribute * devattr , char * buf ) ; 
/*--psmouse_attr_show_helper--*/
ssize_t psmouse_attr_set_helper ( struct device * dev , struct device_attribute * devattr , const char * buf , size_t count ) ; 
/*--psmouse_attr_set_helper--*/
int synaptics_detect ( struct psmouse * psmouse , bool set_properties ) ; 
/*--synaptics_detect--*/
void synaptics_reset ( struct psmouse * psmouse ) ; 
/*--synaptics_reset--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) synaptics_module_init ( void ) ; 
/*--synaptics_module_init--*/
int synaptics_init ( struct psmouse * psmouse ) ; 
/*--synaptics_init--*/
bool synaptics_supported ( void ) ; 
/*--synaptics_supported--*/
int alps_init ( struct psmouse * psmouse ) ; 
/*--alps_init--*/
int alps_detect ( struct psmouse * psmouse , bool set_properties ) ; 
/*--alps_detect--*/
int elantech_detect ( struct psmouse * psmouse , bool set_properties ) ; 
/*--elantech_detect--*/
int elantech_init ( struct psmouse * psmouse ) ; 
/*--elantech_init--*/
int ps2pp_init ( struct psmouse * psmouse , bool set_properties ) ; 
/*--ps2pp_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) lifebook_module_init ( void ) ; 
/*--lifebook_module_init--*/
int lifebook_detect ( struct psmouse * psmouse , bool set_properties ) ; 
/*--lifebook_detect--*/
int lifebook_init ( struct psmouse * psmouse ) ; 
/*--lifebook_init--*/
int fsp_detect ( struct psmouse * psmouse , bool set_properties ) ; 
/*--fsp_detect--*/
int fsp_init ( struct psmouse * psmouse ) ; 
/*--fsp_init--*/
int trackpoint_detect ( struct psmouse * psmouse , bool set_properties ) ; 
/*--trackpoint_detect--*/
void wacom_wac_irq ( struct wacom_wac * wacom_wac , size_t len ) ; 
/*--wacom_wac_irq--*/
void wacom_setup_input_capabilities ( struct input_dev * input_dev , struct wacom_wac * wacom_wac ) ; 
/*--wacom_setup_input_capabilities--*/
int wm97xx_reg_read ( struct wm97xx * wm , u16 reg ) ; 
/*--wm97xx_reg_read--*/
void wm97xx_reg_write ( struct wm97xx * wm , u16 reg , u16 val ) ; 
/*--wm97xx_reg_write--*/
int wm97xx_read_aux_adc ( struct wm97xx * wm , u16 adcsel ) ; 
/*--wm97xx_read_aux_adc--*/
enum wm97xx_gpio_status wm97xx_get_gpio ( struct wm97xx * wm , u32 gpio ) ; 
/*--wm97xx_get_gpio--*/
void wm97xx_set_gpio ( struct wm97xx * wm , u32 gpio , enum wm97xx_gpio_status status ) ; 
/*--wm97xx_set_gpio--*/
void wm97xx_config_gpio ( struct wm97xx * wm , u32 gpio , enum wm97xx_gpio_dir dir , enum wm97xx_gpio_pol pol , enum wm97xx_gpio_sticky sticky , enum wm97xx_gpio_wake wake ) ; 
/*--wm97xx_config_gpio--*/
void wm97xx_set_suspend_mode ( struct wm97xx * wm , u16 mode ) ; 
/*--wm97xx_set_suspend_mode--*/
int wm97xx_register_mach_ops ( struct wm97xx * wm , struct wm97xx_mach_ops * mach_ops ) ; 
/*--wm97xx_register_mach_ops--*/
void wm97xx_unregister_mach_ops ( struct wm97xx * wm ) ; 
/*--wm97xx_unregister_mach_ops--*/
int input_ff_create_memless ( struct input_dev * dev , void * data , int ( * play_effect ) ( struct input_dev * , void * , struct ff_effect * ) ) ; 
/*--input_ff_create_memless--*/
struct input_polled_dev * input_allocate_polled_device ( void ) ; 
/*--input_allocate_polled_device--*/
void input_free_polled_device ( struct input_polled_dev * dev ) ; 
/*--input_free_polled_device--*/
int input_register_polled_device ( struct input_polled_dev * dev ) ; 
/*--input_register_polled_device--*/
void input_unregister_polled_device ( struct input_polled_dev * dev ) ; 
/*--input_unregister_polled_device--*/
struct key_entry * sparse_keymap_entry_from_scancode ( struct input_dev * dev , unsigned int code ) ; 
/*--sparse_keymap_entry_from_scancode--*/
struct key_entry * sparse_keymap_entry_from_keycode ( struct input_dev * dev , unsigned int keycode ) ; 
/*--sparse_keymap_entry_from_keycode--*/
int sparse_keymap_setup ( struct input_dev * dev , const struct key_entry * keymap , int ( * setup ) ( struct input_dev * , struct key_entry * ) ) ; 
/*--sparse_keymap_setup--*/
void sparse_keymap_free ( struct input_dev * dev ) ; 
/*--sparse_keymap_free--*/
void sparse_keymap_report_entry ( struct input_dev * dev , const struct key_entry * ke , unsigned int value , bool autorelease ) ; 
/*--sparse_keymap_report_entry--*/
bool sparse_keymap_report_event ( struct input_dev * dev , unsigned int code , unsigned int value , bool autorelease ) ; 
/*--sparse_keymap_report_event--*/
void gameport_start_polling ( struct gameport * gameport ) ; 
/*--gameport_start_polling--*/
void gameport_stop_polling ( struct gameport * gameport ) ; 
/*--gameport_stop_polling--*/
void gameport_set_phys ( struct gameport * gameport , const char * fmt , ... ) ; 
/*--gameport_set_phys--*/
void __gameport_register_port ( struct gameport * gameport , struct module * owner ) ; 
/*--__gameport_register_port--*/
void gameport_unregister_port ( struct gameport * gameport ) ; 
/*--gameport_unregister_port--*/
int __gameport_register_driver ( struct gameport_driver * drv , struct module * owner , const char * mod_name ) ; 
/*--__gameport_register_driver--*/
void gameport_unregister_driver ( struct gameport_driver * drv ) ; 
/*--gameport_unregister_driver--*/
int gameport_open ( struct gameport * gameport , struct gameport_driver * drv , int mode ) ; 
/*--gameport_open--*/
void gameport_close ( struct gameport * gameport ) ; 
/*--gameport_close--*/
int register_capictr_notifier ( struct notifier_block * nb ) ; 
/*--register_capictr_notifier--*/
int unregister_capictr_notifier ( struct notifier_block * nb ) ; 
/*--unregister_capictr_notifier--*/
void capi_ctr_handle_message ( struct capi_ctr * ctr , u16 appl , struct sk_buff * skb ) ; 
/*--capi_ctr_handle_message--*/
void capi_ctr_ready ( struct capi_ctr * ctr ) ; 
/*--capi_ctr_ready--*/
void capi_ctr_down ( struct capi_ctr * ctr ) ; 
/*--capi_ctr_down--*/
void capi_ctr_suspend_output ( struct capi_ctr * ctr ) ; 
/*--capi_ctr_suspend_output--*/
void capi_ctr_resume_output ( struct capi_ctr * ctr ) ; 
/*--capi_ctr_resume_output--*/
int attach_capi_ctr ( struct capi_ctr * ctr ) ; 
/*--attach_capi_ctr--*/
int detach_capi_ctr ( struct capi_ctr * ctr ) ; 
/*--detach_capi_ctr--*/
void register_capi_driver ( struct capi_driver * driver ) ; 
/*--register_capi_driver--*/
void unregister_capi_driver ( struct capi_driver * driver ) ; 
/*--unregister_capi_driver--*/
u16 capi20_isinstalled ( void ) ; 
/*--capi20_isinstalled--*/
u16 capi20_register ( struct capi20_appl * ap ) ; 
/*--capi20_register--*/
u16 capi20_release ( struct capi20_appl * ap ) ; 
/*--capi20_release--*/
u16 capi20_put_message ( struct capi20_appl * ap , struct sk_buff * skb ) ; 
/*--capi20_put_message--*/
u16 capi20_get_manufacturer ( u32 contr , u8 * buf ) ; 
/*--capi20_get_manufacturer--*/
u16 capi20_get_version ( u32 contr , struct capi_version * verp ) ; 
/*--capi20_get_version--*/
u16 capi20_get_serial ( u32 contr , u8 * serial ) ; 
/*--capi20_get_serial--*/
u16 capi20_get_profile ( u32 contr , struct capi_profile * profp ) ; 
/*--capi20_get_profile--*/
int capi20_manufacturer ( unsigned int cmd , void * data ) ; 
/*--capi20_manufacturer--*/
char * capi_info2str ( u16 reason ) ; 
/*--capi_info2str--*/
unsigned capi_cmsg2message ( _cmsg * cmsg , u8 * msg ) ; 
/*--capi_cmsg2message--*/
unsigned capi_message2cmsg ( _cmsg * cmsg , u8 * msg ) ; 
/*--capi_message2cmsg--*/
unsigned capi_cmsg_header ( _cmsg * cmsg , u16 _ApplId , u8 _Command , u8 _Subcommand , u16 _Messagenumber , u32 _Controller ) ; 
/*--capi_cmsg_header--*/
char * capi_cmd2str ( u8 cmd , u8 subcmd ) ; 
/*--capi_cmd2str--*/
void cdebbuf_free ( _cdebbuf * cdb ) ; 
/*--cdebbuf_free--*/
_cdebbuf * capi_message2str ( u8 * msg ) ; 
/*--capi_message2str--*/
_cdebbuf * capi_cmsg2str ( _cmsg * cmsg ) ; 
/*--capi_cmsg2str--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) cdebug_init ( void ) ; 
/*--cdebug_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) cdebug_exit ( void ) ; 
/*--cdebug_exit--*/
void capilib_new_ncci ( struct list_head * head , u16 applid , u32 ncci , u32 winsize ) ; 
/*--capilib_new_ncci--*/
void capilib_free_ncci ( struct list_head * head , u16 applid , u32 ncci ) ; 
/*--capilib_free_ncci--*/
void capilib_release_appl ( struct list_head * head , u16 applid ) ; 
/*--capilib_release_appl--*/
void capilib_release ( struct list_head * head ) ; 
/*--capilib_release--*/
u16 capilib_data_b3_req ( struct list_head * head , u16 applid , u32 ncci , u16 msgid ) ; 
/*--capilib_data_b3_req--*/
void capilib_data_b3_conf ( struct list_head * head , u16 applid , u32 ncci , u16 msgid ) ; 
/*--capilib_data_b3_conf--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) kcapi_proc_init ( void ) ; 
/*--kcapi_proc_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) kcapi_proc_exit ( void ) ; 
/*--kcapi_proc_exit--*/
struct dentry * capifs_new_ncci ( unsigned int number , dev_t device ) ; 
/*--capifs_new_ncci--*/
void capifs_free_ncci ( struct dentry * dentry ) ; 
/*--capifs_free_ncci--*/
int cf_command ( int drvid , int mode , u_char proc , char * msn , u_char service , char * fwd_nr , ulong * procid ) ; 
/*--cf_command--*/
int deflect_extern_action ( u_char cmd , ulong callid , char * to_nr ) ; 
/*--deflect_extern_action--*/
int insertrule ( int idx , divert_rule * newrule ) ; 
/*--insertrule--*/
int deleterule ( int idx ) ; 
/*--deleterule--*/
divert_rule * getruleptr ( int idx ) ; 
/*--getruleptr--*/
void deleteprocs ( void ) ; 
/*--deleteprocs--*/
int ll_callback ( isdn_ctrl * ic ) ; 
/*--ll_callback--*/
void put_info_buffer ( char * cp ) ; 
/*--put_info_buffer--*/
int divert_dev_init ( void ) ; 
/*--divert_dev_init--*/
int divert_dev_deinit ( void ) ; 
/*--divert_dev_deinit--*/
void gigaset_isowbuf_init ( struct isowbuf_t * iwb , unsigned char idle ) ; 
/*--gigaset_isowbuf_init--*/
int gigaset_isowbuf_getbytes ( struct isowbuf_t * iwb , int size ) ; 
/*--gigaset_isowbuf_getbytes--*/
int gigaset_isoc_buildframe ( struct bc_state * bcs , unsigned char * in , int len ) ; 
/*--gigaset_isoc_buildframe--*/
void gigaset_isoc_receive ( unsigned char * src , unsigned count , struct bc_state * bcs ) ; 
/*--gigaset_isoc_receive--*/
void gigaset_isoc_input ( struct inbuf_t * inbuf ) ; 
/*--gigaset_isoc_input--*/
int gigaset_isoc_send_skb ( struct bc_state * bcs , struct sk_buff * skb ) ; 
/*--gigaset_isoc_send_skb--*/
void gigaset_dbg_buffer ( enum debuglevel level , const unsigned char * msg , size_t len , const unsigned char * buf ) ; 
/*--gigaset_dbg_buffer--*/
int gigaset_enterconfigmode ( struct cardstate * cs ) ; 
/*--gigaset_enterconfigmode--*/
int gigaset_get_channel ( struct bc_state * bcs ) ; 
/*--gigaset_get_channel--*/
struct bc_state * gigaset_get_free_channel ( struct cardstate * cs ) ; 
/*--gigaset_get_free_channel--*/
void gigaset_free_channel ( struct bc_state * bcs ) ; 
/*--gigaset_free_channel--*/
int gigaset_get_channels ( struct cardstate * cs ) ; 
/*--gigaset_get_channels--*/
void gigaset_free_channels ( struct cardstate * cs ) ; 
/*--gigaset_free_channels--*/
void gigaset_block_channels ( struct cardstate * cs ) ; 
/*--gigaset_block_channels--*/
struct event_t * gigaset_add_event ( struct cardstate * cs , struct at_state_t * at_state , int type , void * ptr , int parameter , void * arg ) ; 
/*--gigaset_add_event--*/
void gigaset_freecs ( struct cardstate * cs ) ; 
/*--gigaset_freecs--*/
void gigaset_at_init ( struct at_state_t * at_state , struct bc_state * bcs , struct cardstate * cs , int cid ) ; 
/*--gigaset_at_init--*/
int gigaset_fill_inbuf ( struct inbuf_t * inbuf , const unsigned char * src , unsigned numbytes ) ; 
/*--gigaset_fill_inbuf--*/
struct cardstate * gigaset_initcs ( struct gigaset_driver * drv , int channels , int onechannel , int ignoreframes , int cidmode , const char * modulename ) ; 
/*--gigaset_initcs--*/
void gigaset_bcs_reinit ( struct bc_state * bcs ) ; 
/*--gigaset_bcs_reinit--*/
int gigaset_start ( struct cardstate * cs ) ; 
/*--gigaset_start--*/
int gigaset_shutdown ( struct cardstate * cs ) ; 
/*--gigaset_shutdown--*/
void gigaset_stop ( struct cardstate * cs ) ; 
/*--gigaset_stop--*/
struct cardstate * gigaset_get_cs_by_id ( int id ) ; 
/*--gigaset_get_cs_by_id--*/
void gigaset_debugdrivers ( void ) ; 
/*--gigaset_debugdrivers--*/
struct cardstate * gigaset_get_cs_by_tty ( struct tty_struct * tty ) ; 
/*--gigaset_get_cs_by_tty--*/
void gigaset_freedriver ( struct gigaset_driver * drv ) ; 
/*--gigaset_freedriver--*/
struct gigaset_driver * gigaset_initdriver ( unsigned minor , unsigned minors , const char * procname , const char * devname , const struct gigaset_ops * ops , struct module * owner ) ; 
/*--gigaset_initdriver--*/
void gigaset_blockdriver ( struct gigaset_driver * drv ) ; 
/*--gigaset_blockdriver--*/
void gigaset_if_init ( struct cardstate * cs ) ; 
/*--gigaset_if_init--*/
void gigaset_if_free ( struct cardstate * cs ) ; 
/*--gigaset_if_free--*/
void gigaset_if_receive ( struct cardstate * cs , unsigned char * buffer , size_t len ) ; 
/*--gigaset_if_receive--*/
void gigaset_if_initdriver ( struct gigaset_driver * drv , const char * procname , const char * devname ) ; 
/*--gigaset_if_initdriver--*/
void gigaset_if_freedriver ( struct gigaset_driver * drv ) ; 
/*--gigaset_if_freedriver--*/
void gigaset_free_dev_sysfs ( struct cardstate * cs ) ; 
/*--gigaset_free_dev_sysfs--*/
void gigaset_init_dev_sysfs ( struct cardstate * cs ) ; 
/*--gigaset_init_dev_sysfs--*/
void gigaset_handle_modem_response ( struct cardstate * cs ) ; 
/*--gigaset_handle_modem_response--*/
void gigaset_handle_event ( unsigned long data ) ; 
/*--gigaset_handle_event--*/
void gigaset_m10x_input ( struct inbuf_t * inbuf ) ; 
/*--gigaset_m10x_input--*/
int gigaset_m10x_send_skb ( struct bc_state * bcs , struct sk_buff * skb ) ; 
/*--gigaset_m10x_send_skb--*/
void gigaset_skb_sent ( struct bc_state * bcs , struct sk_buff * skb ) ; 
/*--gigaset_skb_sent--*/
void gigaset_skb_rcvd ( struct bc_state * bcs , struct sk_buff * skb ) ; 
/*--gigaset_skb_rcvd--*/
void gigaset_isdn_rcv_err ( struct bc_state * bcs ) ; 
/*--gigaset_isdn_rcv_err--*/
int gigaset_isdn_icall ( struct at_state_t * at_state ) ; 
/*--gigaset_isdn_icall--*/
void gigaset_isdn_connD ( struct bc_state * bcs ) ; 
/*--gigaset_isdn_connD--*/
void gigaset_isdn_hupD ( struct bc_state * bcs ) ; 
/*--gigaset_isdn_hupD--*/
void gigaset_isdn_connB ( struct bc_state * bcs ) ; 
/*--gigaset_isdn_connB--*/
void gigaset_isdn_hupB ( struct bc_state * bcs ) ; 
/*--gigaset_isdn_hupB--*/
void gigaset_isdn_start ( struct cardstate * cs ) ; 
/*--gigaset_isdn_start--*/
void gigaset_isdn_stop ( struct cardstate * cs ) ; 
/*--gigaset_isdn_stop--*/
int gigaset_isdn_regdev ( struct cardstate * cs , const char * isdnid ) ; 
/*--gigaset_isdn_regdev--*/
void gigaset_isdn_unregdev ( struct cardstate * cs ) ; 
/*--gigaset_isdn_unregdev--*/
void gigaset_isdn_regdrv ( void ) ; 
/*--gigaset_isdn_regdrv--*/
void gigaset_isdn_unregdrv ( void ) ; 
/*--gigaset_isdn_unregdrv--*/
avmcard * b1_alloc_card ( int nr_controllers ) ; 
/*--b1_alloc_card--*/
void b1_free_card ( avmcard * card ) ; 
/*--b1_free_card--*/
int b1_detect ( unsigned int base , enum avmcardtype cardtype ) ; 
/*--b1_detect--*/
void b1_getrevision ( avmcard * card ) ; 
/*--b1_getrevision--*/
int b1_load_t4file ( avmcard * card , capiloaddatapart * t4file ) ; 
/*--b1_load_t4file--*/
int b1_load_config ( avmcard * card , capiloaddatapart * config ) ; 
/*--b1_load_config--*/
int b1_loaded ( avmcard * card ) ; 
/*--b1_loaded--*/
int b1_load_firmware ( struct capi_ctr * ctrl , capiloaddata * data ) ; 
/*--b1_load_firmware--*/
void b1_reset_ctr ( struct capi_ctr * ctrl ) ; 
/*--b1_reset_ctr--*/
void b1_register_appl ( struct capi_ctr * ctrl , u16 appl , capi_register_params * rp ) ; 
/*--b1_register_appl--*/
void b1_release_appl ( struct capi_ctr * ctrl , u16 appl ) ; 
/*--b1_release_appl--*/
u16 b1_send_message ( struct capi_ctr * ctrl , struct sk_buff * skb ) ; 
/*--b1_send_message--*/
void b1_parse_version ( avmctrl_info * cinfo ) ; 
/*--b1_parse_version--*/
irqreturn_t b1_interrupt ( int interrupt , void * devptr ) ; 
/*--b1_interrupt--*/
avmcard_dmainfo * avmcard_dma_alloc ( char * name , struct pci_dev * pdev , long rsize , long ssize ) ; 
/*--avmcard_dma_alloc--*/
void avmcard_dma_free ( avmcard_dmainfo * p ) ; 
/*--avmcard_dma_free--*/
void b1dma_reset ( avmcard * card ) ; 
/*--b1dma_reset--*/
int t1pci_detect ( avmcard * card ) ; 
/*--t1pci_detect--*/
int b1pciv4_detect ( avmcard * card ) ; 
/*--b1pciv4_detect--*/
irqreturn_t b1dma_interrupt ( int interrupt , void * devptr ) ; 
/*--b1dma_interrupt--*/
int b1dma_load_firmware ( struct capi_ctr * ctrl , capiloaddata * data ) ; 
/*--b1dma_load_firmware--*/
void b1dma_reset_ctr ( struct capi_ctr * ctrl ) ; 
/*--b1dma_reset_ctr--*/
void b1dma_register_appl ( struct capi_ctr * ctrl , u16 appl , capi_register_params * rp ) ; 
/*--b1dma_register_appl--*/
void b1dma_release_appl ( struct capi_ctr * ctrl , u16 appl ) ; 
/*--b1dma_release_appl--*/
u16 b1dma_send_message ( struct capi_ctr * ctrl , struct sk_buff * skb ) ; 
/*--b1dma_send_message--*/
int b1pcmcia_addcard_b1 ( unsigned int port , unsigned irq ) ; 
/*--b1pcmcia_addcard_b1--*/
int b1pcmcia_addcard_m1 ( unsigned int port , unsigned irq ) ; 
/*--b1pcmcia_addcard_m1--*/
int b1pcmcia_addcard_m2 ( unsigned int port , unsigned irq ) ; 
/*--b1pcmcia_addcard_m2--*/
int b1pcmcia_delcard ( unsigned int port , unsigned irq ) ; 
/*--b1pcmcia_delcard--*/
int diva_os_get_context_size ( void ) ; 
/*--diva_os_get_context_size--*/
void diva_os_wakeup_read ( void * os_context ) ; 
/*--diva_os_wakeup_read--*/
void diva_os_wakeup_close ( void * os_context ) ; 
/*--diva_os_wakeup_close--*/
void diva_um_idi_start_wdog ( void * entity ) ; 
/*--diva_um_idi_start_wdog--*/
void diva_um_idi_stop_wdog ( void * entity ) ; 
/*--diva_um_idi_stop_wdog--*/
void myDbgPrint_LOG ( char * format , ... ) ; 
/*--myDbgPrint_LOG--*/
void myDbgPrint_FTL ( char * format , ... ) ; 
/*--myDbgPrint_FTL--*/
void myDbgPrint_ERR ( char * format , ... ) ; 
/*--myDbgPrint_ERR--*/
void myDbgPrint_TRC ( char * format , ... ) ; 
/*--myDbgPrint_TRC--*/
void myDbgPrint_MXLOG ( char * format , ... ) ; 
/*--myDbgPrint_MXLOG--*/
void myDbgPrint_FTL_MXLOG ( char * format , ... ) ; 
/*--myDbgPrint_FTL_MXLOG--*/
void myDbgPrint_EVL ( long msgID , ... ) ; 
/*--myDbgPrint_EVL--*/
void myDbgPrint_REG ( char * format , ... ) ; 
/*--myDbgPrint_REG--*/
void myDbgPrint_MEM ( char * format , ... ) ; 
/*--myDbgPrint_MEM--*/
void myDbgPrint_SPL ( char * format , ... ) ; 
/*--myDbgPrint_SPL--*/
void myDbgPrint_IRP ( char * format , ... ) ; 
/*--myDbgPrint_IRP--*/
void myDbgPrint_TIM ( char * format , ... ) ; 
/*--myDbgPrint_TIM--*/
void myDbgPrint_BLK ( char * format , ... ) ; 
/*--myDbgPrint_BLK--*/
void myDbgPrint_TAPI ( char * format , ... ) ; 
/*--myDbgPrint_TAPI--*/
void myDbgPrint_NDIS ( char * format , ... ) ; 
/*--myDbgPrint_NDIS--*/
void myDbgPrint_CONN ( char * format , ... ) ; 
/*--myDbgPrint_CONN--*/
void myDbgPrint_STAT ( char * format , ... ) ; 
/*--myDbgPrint_STAT--*/
void myDbgPrint_SEND ( char * format , ... ) ; 
/*--myDbgPrint_SEND--*/
void myDbgPrint_RECV ( char * format , ... ) ; 
/*--myDbgPrint_RECV--*/
void myDbgPrint_PRV0 ( char * format , ... ) ; 
/*--myDbgPrint_PRV0--*/
void myDbgPrint_PRV1 ( char * format , ... ) ; 
/*--myDbgPrint_PRV1--*/
void myDbgPrint_PRV2 ( char * format , ... ) ; 
/*--myDbgPrint_PRV2--*/
void myDbgPrint_PRV3 ( char * format , ... ) ; 
/*--myDbgPrint_PRV3--*/
int DbgRegister ( char * drvName , char * drvTag , unsigned long dbgMask ) ; 
/*--DbgRegister--*/
void DbgSetLevel ( unsigned long dbgMask ) ; 
/*--DbgSetLevel--*/
void DbgDeregister ( void ) ; 
/*--DbgDeregister--*/
void xdi_dbg_xlog ( char * x , ... ) ; 
/*--xdi_dbg_xlog--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) idifunc_init ( void ) ; 
/*--idifunc_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) idifunc_finit ( void ) ; 
/*--idifunc_finit--*/
int diva_user_mode_idi_init ( void ) ; 
/*--diva_user_mode_idi_init--*/
void diva_user_mode_idi_remove_adapter ( int adapter_nr ) ; 
/*--diva_user_mode_idi_remove_adapter--*/
void diva_user_mode_idi_finit ( void ) ; 
/*--diva_user_mode_idi_finit--*/
int diva_user_mode_idi_create_adapter ( const DESCRIPTOR * d , int adapter_nr ) ; 
/*--diva_user_mode_idi_create_adapter--*/
void * divas_um_idi_create_entity ( u32 adapter_nr , void * file ) ; 
/*--divas_um_idi_create_entity--*/
int divas_um_idi_delete_entity ( int adapter_nr , void * entity ) ; 
/*--divas_um_idi_delete_entity--*/
int diva_um_idi_read ( void * entity , void * os_handle , void * dst , int max_length , divas_um_idi_copy_to_user_fn_t cp_fn ) ; 
/*--diva_um_idi_read--*/
int diva_um_idi_write ( void * entity , void * os_handle , const void * src , int length , divas_um_idi_copy_from_user_fn_t cp_fn ) ; 
/*--diva_um_idi_write--*/
int diva_user_mode_idi_ind_ready ( void * entity , void * os_handle ) ; 
/*--diva_user_mode_idi_ind_ready--*/
void * diva_um_id_get_os_context ( void * entity ) ; 
/*--diva_um_id_get_os_context--*/
int divas_um_idi_entity_assigned ( void * entity ) ; 
/*--divas_um_idi_entity_assigned--*/
int divas_um_idi_entity_start_remove ( void * entity ) ; 
/*--divas_um_idi_entity_start_remove--*/
int diva_data_q_init ( diva_um_idi_data_queue_t * q , int max_length , int max_segments ) ; 
/*--diva_data_q_init--*/
int diva_data_q_finit ( diva_um_idi_data_queue_t * q ) ; 
/*--diva_data_q_finit--*/
int diva_data_q_get_max_length ( const diva_um_idi_data_queue_t * q ) ; 
/*--diva_data_q_get_max_length--*/
void * diva_data_q_get_segment4write ( diva_um_idi_data_queue_t * q ) ; 
/*--diva_data_q_get_segment4write--*/
void diva_data_q_ack_segment4write ( diva_um_idi_data_queue_t * q , int length ) ; 
/*--diva_data_q_ack_segment4write--*/
const void * diva_data_q_get_segment4read ( const diva_um_idi_data_queue_t * q ) ; 
/*--diva_data_q_get_segment4read--*/
int diva_data_q_get_segment_length ( const diva_um_idi_data_queue_t * q ) ; 
/*--diva_data_q_get_segment_length--*/
void diva_data_q_ack_segment4read ( diva_um_idi_data_queue_t * q ) ; 
/*--diva_data_q_ack_segment4read--*/
int diva_os_copy_to_user ( void * os_handle , void * dst , const void * src , int length ) ; 
/*--diva_os_copy_to_user--*/
int diva_os_copy_from_user ( void * os_handle , void * dst , const void * src , int length ) ; 
/*--diva_os_copy_from_user--*/
void diva_os_get_time ( u32 * sec , u32 * usec ) ; 
/*--diva_os_get_time--*/
void diva_maint_wakeup_read ( void ) ; 
/*--diva_maint_wakeup_read--*/
int maint_read_write ( void * buf , int count ) ; 
/*--maint_read_write--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) mntfunc_init ( int * buffer_length , void * * buffer , unsigned long diva_dbg_mem ) ; 
/*--mntfunc_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) mntfunc_finit ( void ) ; 
/*--mntfunc_finit--*/
int diva_maint_init ( u8 * base , unsigned long length , int do_init ) ; 
/*--diva_maint_init--*/
void * diva_maint_finit ( void ) ; 
/*--diva_maint_finit--*/
u32 diva_dbg_q_length ( void ) ; 
/*--diva_dbg_q_length--*/
diva_dbg_entry_head_t * diva_maint_get_message ( u16 * size , diva_os_spin_lock_magic_t * old_irql ) ; 
/*--diva_maint_get_message--*/
void diva_maint_ack_message ( int do_release , diva_os_spin_lock_magic_t * old_irql ) ; 
/*--diva_maint_ack_message--*/
void diva_maint_prtComp ( char * format , ... ) ; 
/*--diva_maint_prtComp--*/
int diva_get_driver_info ( u32 id , u8 * data , int data_length ) ; 
/*--diva_get_driver_info--*/
int diva_get_driver_dbg_mask ( u32 id , u8 * data ) ; 
/*--diva_get_driver_dbg_mask--*/
int diva_set_driver_dbg_mask ( u32 id , u32 mask ) ; 
/*--diva_set_driver_dbg_mask--*/
void diva_mnt_add_xdi_adapter ( const DESCRIPTOR * d ) ; 
/*--diva_mnt_add_xdi_adapter--*/
void diva_mnt_remove_xdi_adapter ( const DESCRIPTOR * d ) ; 
/*--diva_mnt_remove_xdi_adapter--*/
void * SuperTraceOpenAdapter ( int AdapterNumber ) ; 
/*--SuperTraceOpenAdapter--*/
int SuperTraceCloseAdapter ( void * AdapterHandle ) ; 
/*--SuperTraceCloseAdapter--*/
int SuperTraceReadRequest ( void * AdapterHandle , const char * name , u8 * data ) ; 
/*--SuperTraceReadRequest--*/
int SuperTraceGetNumberOfChannels ( void * AdapterHandle ) ; 
/*--SuperTraceGetNumberOfChannels--*/
int SuperTraceASSIGN ( void * AdapterHandle , u8 * data ) ; 
/*--SuperTraceASSIGN--*/
int SuperTraceREMOVE ( void * AdapterHandle ) ; 
/*--SuperTraceREMOVE--*/
int SuperTraceTraceOnRequest ( void * hAdapter , const char * name , u8 * data ) ; 
/*--SuperTraceTraceOnRequest--*/
int SuperTraceWriteVar ( void * AdapterHandle , u8 * data , const char * name , void * var , u8 type , u8 var_length ) ; 
/*--SuperTraceWriteVar--*/
int SuperTraceExecuteRequest ( void * AdapterHandle , const char * name , u8 * data ) ; 
/*--SuperTraceExecuteRequest--*/
void diva_mnt_internal_dprintf ( u32 drv_id , u32 type , char * fmt , ... ) ; 
/*--diva_mnt_internal_dprintf--*/
int diva_mnt_shutdown_xdi_adapters ( void ) ; 
/*--diva_mnt_shutdown_xdi_adapters--*/
int diva_set_trace_filter ( int filter_length , const char * filter ) ; 
/*--diva_set_trace_filter--*/
int diva_get_trace_filter ( int max_length , char * filter ) ; 
/*--diva_get_trace_filter--*/
diva_strace_library_interface_t * DivaSTraceLibraryCreateInstance ( int Adapter , const diva_trace_library_user_interface_t * user_proc , u8 * pmem ) ; 
/*--DivaSTraceLibraryCreateInstance--*/
u32 DivaSTraceGetMemotyRequirement ( int channels ) ; 
/*--DivaSTraceGetMemotyRequirement--*/
diva_os_message_buffer_s * diva_os_alloc_message_buffer ( unsigned long size , void * * data_buf ) ; 
/*--diva_os_alloc_message_buffer--*/
void diva_os_free_message_buffer ( diva_os_message_buffer_s * dmb ) ; 
/*--diva_os_free_message_buffer--*/
void diva_os_set_controller_struct ( struct capi_ctr * ctrl ) ; 
/*--diva_os_set_controller_struct--*/
u8 MapController ( u8 Controller ) ; 
/*--MapController--*/
u8 UnMapController ( u8 MappedController ) ; 
/*--UnMapController--*/
void * TransmitBufferSet ( APPL * appl , u32 ref ) ; 
/*--TransmitBufferSet--*/
void * TransmitBufferGet ( APPL * appl , void * p ) ; 
/*--TransmitBufferGet--*/
void TransmitBufferFree ( APPL * appl , void * p ) ; 
/*--TransmitBufferFree--*/
void * ReceiveBufferGet ( APPL * appl , int Num ) ; 
/*--ReceiveBufferGet--*/
void api_remove_complete ( void ) ; 
/*--api_remove_complete--*/
void sendf ( APPL * appl , u16 command , u32 Id , u16 Number , u8 * format , ... ) ; 
/*--sendf--*/
int fax_head_line_time ( char * buffer ) ; 
/*--fax_head_line_time--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) init_capifunc ( void ) ; 
/*--init_capifunc--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) finit_capifunc ( void ) ; 
/*--finit_capifunc--*/
u16 api_put ( APPL * appl , CAPI_MSG * msg ) ; 
/*--api_put--*/
u16 api_remove_start ( void ) ; 
/*--api_remove_start--*/
void callback ( ENTITY * e ) ; 
/*--callback--*/
void AutomaticLaw ( DIVA_CAPI_ADAPTER * a ) ; 
/*--AutomaticLaw--*/
u16 CapiRelease ( u16 Id ) ; 
/*--CapiRelease--*/
u16 CapiRegister ( u16 id ) ; 
/*--CapiRegister--*/
void capidtmf_recv_enable ( t_capidtmf_state * p_state , u16 min_digit_duration , u16 min_gap_duration ) ; 
/*--capidtmf_recv_enable--*/
void capidtmf_recv_disable ( t_capidtmf_state * p_state ) ; 
/*--capidtmf_recv_disable--*/
u16 capidtmf_recv_indication ( t_capidtmf_state * p_state , u8 * buffer ) ; 
/*--capidtmf_recv_indication--*/
void capidtmf_recv_block ( t_capidtmf_state * p_state , u8 * buffer , u16 length ) ; 
/*--capidtmf_recv_block--*/
void capidtmf_init ( t_capidtmf_state * p_state , u8 ulaw ) ; 
/*--capidtmf_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) diddfunc_init ( void ) ; 
/*--diddfunc_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) diddfunc_finit ( void ) ; 
/*--diddfunc_finit--*/
void diva_didd_load_time_init ( void ) ; 
/*--diva_didd_load_time_init--*/
void diva_didd_load_time_finit ( void ) ; 
/*--diva_didd_load_time_finit--*/
void DIVA_DIDD_Read ( void * buffer , int length ) ; 
/*--DIVA_DIDD_Read--*/
void diva_log_info ( unsigned char * format , ... ) ; 
/*--diva_log_info--*/
void divas_get_version ( char * p ) ; 
/*--divas_get_version--*/
u8 diva_os_get_pci_bus ( void * pci_dev_handle ) ; 
/*--diva_os_get_pci_bus--*/
u8 diva_os_get_pci_func ( void * pci_dev_handle ) ; 
/*--diva_os_get_pci_func--*/
unsigned long divasa_get_pci_irq ( unsigned char bus , unsigned char func , void * pci_dev_handle ) ; 
/*--divasa_get_pci_irq--*/
unsigned long divasa_get_pci_bar ( unsigned char bus , unsigned char func , int bar , void * pci_dev_handle ) ; 
/*--divasa_get_pci_bar--*/
void PCIwrite ( u8 bus , u8 func , int offset , void * data , int length , void * pci_dev_handle ) ; 
/*--PCIwrite--*/
void PCIread ( u8 bus , u8 func , int offset , void * data , int length , void * pci_dev_handle ) ; 
/*--PCIread--*/
void diva_init_dma_map ( void * hdev , struct _diva_dma_map_entry * * ppmap , int nentries ) ; 
/*--diva_init_dma_map--*/
void diva_free_dma_map ( void * hdev , struct _diva_dma_map_entry * pmap ) ; 
/*--diva_free_dma_map--*/
int diva_os_register_io_port ( void * adapter , int on , unsigned long port , unsigned long length , const char * name , int id ) ; 
/*--diva_os_register_io_port--*/
void * divasa_remap_pci_bar ( diva_os_xdi_adapter_t * a , int id , unsigned long bar , unsigned long area_length ) ; 
/*--divasa_remap_pci_bar--*/
void divasa_unmap_pci_bar ( void * bar ) ; 
/*--divasa_unmap_pci_bar--*/
int diva_os_register_irq ( void * context , u8 irq , const char * name ) ; 
/*--diva_os_register_irq--*/
void diva_os_remove_irq ( void * context , u8 irq ) ; 
/*--diva_os_remove_irq--*/
int diva_os_initialize_soft_isr ( diva_os_soft_isr_t * psoft_isr , diva_os_soft_isr_callback_t callback , void * callback_context ) ; 
/*--diva_os_initialize_soft_isr--*/
int diva_os_schedule_soft_isr ( diva_os_soft_isr_t * psoft_isr ) ; 
/*--diva_os_schedule_soft_isr--*/
int diva_os_cancel_soft_isr ( diva_os_soft_isr_t * psoft_isr ) ; 
/*--diva_os_cancel_soft_isr--*/
void diva_os_remove_soft_isr ( diva_os_soft_isr_t * psoft_isr ) ; 
/*--diva_os_remove_soft_isr--*/
void diva_get_vserial_number ( PISDN_ADAPTER IoAdapter , char * buf ) ; 
/*--diva_get_vserial_number--*/
void diva_xdi_didd_register_adapter ( int card ) ; 
/*--diva_xdi_didd_register_adapter--*/
void diva_xdi_didd_remove_adapter ( int card ) ; 
/*--diva_xdi_didd_remove_adapter--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) divasfunc_init ( int dbgmask ) ; 
/*--divasfunc_init--*/
void divasfunc_exit ( void ) ; 
/*--divasfunc_exit--*/
void pr_out ( ADAPTER * a ) ; 
/*--pr_out--*/
u8 pr_dpc ( ADAPTER * a ) ; 
/*--pr_dpc--*/
u8 scom_test_int ( ADAPTER * a ) ; 
/*--scom_test_int--*/
void scom_clear_int ( ADAPTER * a ) ; 
/*--scom_clear_int--*/
void dump_xlog_buffer ( PISDN_ADAPTER IoAdapter , Xdesc * xlogDesc ) ; 
/*--dump_xlog_buffer--*/
void dump_trap_frame ( PISDN_ADAPTER IoAdapter , u8 * exceptionFrame ) ; 
/*--dump_trap_frame--*/
void request ( PISDN_ADAPTER IoAdapter , ENTITY * e ) ; 
/*--request--*/
void DIDpcRoutine ( struct _diva_os_soft_isr * psoft_isr , void * Context ) ; 
/*--DIDpcRoutine--*/
u8 mem_in ( ADAPTER * a , void * addr ) ; 
/*--mem_in--*/
u16 mem_inw ( ADAPTER * a , void * addr ) ; 
/*--mem_inw--*/
void mem_in_dw ( ADAPTER * a , void * addr , u32 * data , int dwords ) ; 
/*--mem_in_dw--*/
void mem_in_buffer ( ADAPTER * a , void * addr , void * buffer , u16 length ) ; 
/*--mem_in_buffer--*/
void mem_look_ahead ( ADAPTER * a , PBUFFER * RBuffer , ENTITY * e ) ; 
/*--mem_look_ahead--*/
void mem_out ( ADAPTER * a , void * addr , u8 data ) ; 
/*--mem_out--*/
void mem_outw ( ADAPTER * a , void * addr , u16 data ) ; 
/*--mem_outw--*/
void mem_out_dw ( ADAPTER * a , void * addr , const u32 * data , int dwords ) ; 
/*--mem_out_dw--*/
void mem_out_buffer ( ADAPTER * a , void * addr , void * buffer , u16 length ) ; 
/*--mem_out_buffer--*/
void mem_inc ( ADAPTER * a , void * addr ) ; 
/*--mem_inc--*/
u8 io_in ( ADAPTER * a , void * adr ) ; 
/*--io_in--*/
u16 io_inw ( ADAPTER * a , void * adr ) ; 
/*--io_inw--*/
void io_in_buffer ( ADAPTER * a , void * adr , void * buffer , u16 len ) ; 
/*--io_in_buffer--*/
void io_look_ahead ( ADAPTER * a , PBUFFER * RBuffer , ENTITY * e ) ; 
/*--io_look_ahead--*/
void io_out ( ADAPTER * a , void * adr , u8 data ) ; 
/*--io_out--*/
void io_outw ( ADAPTER * a , void * adr , u16 data ) ; 
/*--io_outw--*/
void io_out_buffer ( ADAPTER * a , void * adr , void * buffer , u16 len ) ; 
/*--io_out_buffer--*/
void io_inc ( ADAPTER * a , void * adr ) ; 
/*--io_inc--*/
void free_entity ( ADAPTER * a , u8 e_no ) ; 
/*--free_entity--*/
void assign_queue ( ADAPTER * a , u8 e_no , u16 ref ) ; 
/*--assign_queue--*/
u8 get_assign ( ADAPTER * a , u16 ref ) ; 
/*--get_assign--*/
void req_queue ( ADAPTER * a , u8 e_no ) ; 
/*--req_queue--*/
u8 look_req ( ADAPTER * a ) ; 
/*--look_req--*/
void next_req ( ADAPTER * a ) ; 
/*--next_req--*/
ENTITY * entity_ptr ( ADAPTER * a , u8 e_no ) ; 
/*--entity_ptr--*/
void * PTR_X ( ADAPTER * a , ENTITY * e ) ; 
/*--PTR_X--*/
void * PTR_R ( ADAPTER * a , ENTITY * e ) ; 
/*--PTR_R--*/
void * PTR_P ( ADAPTER * a , ENTITY * e , void * P ) ; 
/*--PTR_P--*/
void CALLBACK ( ADAPTER * a , ENTITY * e ) ; 
/*--CALLBACK--*/
void diva_xdi_provide_istream_info ( ADAPTER * a , diva_xdi_stream_interface_t * pi ) ; 
/*--diva_xdi_provide_istream_info--*/
int diva_istream_write ( void * context , int Id , void * data , int length , int final , u8 usr1 , u8 usr2 ) ; 
/*--diva_istream_write--*/
int diva_istream_read ( void * context , int Id , void * data , int max_length , int * final , u8 * usr1 , u8 * usr2 ) ; 
/*--diva_istream_read--*/
void pr_stream ( ADAPTER * a ) ; 
/*--pr_stream--*/
void * diva_driver_add_card ( void * pdev , unsigned long CardOrdinal ) ; 
/*--diva_driver_add_card--*/
int divasa_xdi_driver_entry ( void ) ; 
/*--divasa_xdi_driver_entry--*/
void diva_driver_remove_card ( void * pdiva ) ; 
/*--diva_driver_remove_card--*/
void divasa_xdi_driver_unload ( void ) ; 
/*--divasa_xdi_driver_unload--*/
void * diva_xdi_open_adapter ( void * os_handle , const void * src , int length , divas_xdi_copy_from_user_fn_t cp_fn ) ; 
/*--diva_xdi_open_adapter--*/
void diva_xdi_close_adapter ( void * adapter , void * os_handle ) ; 
/*--diva_xdi_close_adapter--*/
int diva_xdi_write ( void * adapter , void * os_handle , const void * src , int length , divas_xdi_copy_from_user_fn_t cp_fn ) ; 
/*--diva_xdi_write--*/
int diva_xdi_read ( void * adapter , void * os_handle , void * dst , int max_length , divas_xdi_copy_to_user_fn_t cp_fn ) ; 
/*--diva_xdi_read--*/
irqreturn_t diva_os_irq_wrapper ( int irq , void * context ) ; 
/*--diva_os_irq_wrapper--*/
void diva_xdi_display_adapter_features ( int card ) ; 
/*--diva_xdi_display_adapter_features--*/
void diva_add_slave_adapter ( diva_os_xdi_adapter_t * a ) ; 
/*--diva_add_slave_adapter--*/
int diva_card_read_xlog ( diva_os_xdi_adapter_t * a ) ; 
/*--diva_card_read_xlog--*/
void xdiFreeFile ( void * handle ) ; 
/*--xdiFreeFile--*/
int create_divas_proc ( void ) ; 
/*--create_divas_proc--*/
void remove_divas_proc ( void ) ; 
/*--remove_divas_proc--*/
int create_adapter_proc ( diva_os_xdi_adapter_t * a ) ; 
/*--create_adapter_proc--*/
void remove_adapter_proc ( diva_os_xdi_adapter_t * a ) ; 
/*--remove_adapter_proc--*/
struct _diva_dma_map_entry * diva_alloc_dma_map ( void * os_context , int nentries ) ; 
/*--diva_alloc_dma_map--*/
void diva_free_dma_mapping ( struct _diva_dma_map_entry * pmap ) ; 
/*--diva_free_dma_mapping--*/
void diva_init_dma_map_entry ( struct _diva_dma_map_entry * pmap , int nr , void * virt , u32 phys , void * addr_handle ) ; 
/*--diva_init_dma_map_entry--*/
int diva_alloc_dma_map_entry ( struct _diva_dma_map_entry * pmap ) ; 
/*--diva_alloc_dma_map_entry--*/
void diva_free_dma_map_entry ( struct _diva_dma_map_entry * pmap , int nr ) ; 
/*--diva_free_dma_map_entry--*/
void diva_get_dma_map_entry ( struct _diva_dma_map_entry * pmap , int nr , void * * pvirt , u32 * pphys ) ; 
/*--diva_get_dma_map_entry--*/
void * diva_get_entry_handle ( struct _diva_dma_map_entry * pmap , int nr ) ; 
/*--diva_get_entry_handle--*/
int diva_bri_init_card ( diva_os_xdi_adapter_t * a ) ; 
/*--diva_bri_init_card--*/
void diva_os_prepare_maestra_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--diva_os_prepare_maestra_functions--*/
void prepare_maestra_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--prepare_maestra_functions--*/
int diva_4bri_init_card ( diva_os_xdi_adapter_t * a ) ; 
/*--diva_4bri_init_card--*/
void * xdiLoadFile ( char * FileName , u32 * FileLength , unsigned long lim ) ; 
/*--xdiLoadFile--*/
void diva_os_set_qBri_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--diva_os_set_qBri_functions--*/
void diva_os_set_qBri2_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--diva_os_set_qBri2_functions--*/
void start_qBri_hardware ( PISDN_ADAPTER IoAdapter ) ; 
/*--start_qBri_hardware--*/
int qBri_FPGA_download ( PISDN_ADAPTER IoAdapter ) ; 
/*--qBri_FPGA_download--*/
void prepare_qBri_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--prepare_qBri_functions--*/
void prepare_qBri2_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--prepare_qBri2_functions--*/
int diva_pri_init_card ( diva_os_xdi_adapter_t * a ) ; 
/*--diva_pri_init_card--*/
void diva_os_prepare_pri2_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--diva_os_prepare_pri2_functions--*/
void diva_os_prepare_pri_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--diva_os_prepare_pri_functions--*/
void prepare_pri_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--prepare_pri_functions--*/
void prepare_pri2_functions ( PISDN_ADAPTER IoAdapter ) ; 
/*--prepare_pri2_functions--*/
void write_ctrl ( struct bchannel * bch , int which ) ; 
/*--write_ctrl--*/
void clear_pending_hdlc_ints ( struct fritzcard * fc ) ; 
/*--clear_pending_hdlc_ints--*/
int setup_fritz ( struct fritzcard * fc ) ; 
/*--setup_fritz--*/
void initW6692 ( struct w6692_hw * card ) ; 
/*--initW6692--*/
void isac_empty_fifo ( struct isac_hw * isac , int count ) ; 
/*--isac_empty_fifo--*/
irqreturn_t mISDNisac_irq ( struct isac_hw * isac , u8 val ) ; 
/*--mISDNisac_irq--*/
int mISDNisac_init ( struct isac_hw * isac , void * hw ) ; 
/*--mISDNisac_init--*/
irqreturn_t mISDNipac_irq ( struct ipac_hw * ipac , int maxloop ) ; 
/*--mISDNipac_irq--*/
u32 mISDNipac_init ( struct ipac_hw * ipac , void * hw ) ; 
/*--mISDNipac_init--*/
void mISDNisar_irq ( struct isar_hw * isar ) ; 
/*--mISDNisar_irq--*/
u32 mISDNisar_init ( struct isar_hw * isar , void * hw ) ; 
/*--mISDNisar_init--*/
char * HiSax_getrev ( const char * revision ) ; 
/*--HiSax_getrev--*/
int jiftime ( char * s , long mark ) ; 
/*--jiftime--*/
void VHiSax_putstatus ( struct IsdnCardState * cs , char * head , char * fmt , va_list args ) ; 
/*--VHiSax_putstatus--*/
void HiSax_putstatus ( struct IsdnCardState * cs , char * head , char * fmt , ... ) ; 
/*--HiSax_putstatus--*/
int ll_run ( struct IsdnCardState * cs , int addfeatures ) ; 
/*--ll_run--*/
void HiSax_closecard ( int cardnr ) ; 
/*--HiSax_closecard--*/
void HiSax_reportcard ( int cardnr , int sel ) ; 
/*--HiSax_reportcard--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) hisax_init_pcmcia ( void * pcm_iob , int * busy_flag , struct IsdnCard * card ) ; 
/*--hisax_init_pcmcia--*/
int hisax_register ( struct hisax_d_if * hisax_d_if , struct hisax_b_if * b_if [ ] , char * name , int protocol ) ; 
/*--hisax_register--*/
void hisax_unregister ( struct hisax_d_if * hisax_d_if ) ; 
/*--hisax_unregister--*/
void debugl1 ( struct IsdnCardState * cs , char * fmt , ... ) ; 
/*--debugl1--*/
void DChannel_proc_xmt ( struct IsdnCardState * cs ) ; 
/*--DChannel_proc_xmt--*/
void DChannel_proc_rcv ( struct IsdnCardState * cs ) ; 
/*--DChannel_proc_rcv--*/
void BChannel_bh ( struct work_struct * work ) ; 
/*--BChannel_bh--*/
void HiSax_addlist ( struct IsdnCardState * cs , struct PStack * st ) ; 
/*--HiSax_addlist--*/
void HiSax_rmlist ( struct IsdnCardState * cs , struct PStack * st ) ; 
/*--HiSax_rmlist--*/
void init_bcstate ( struct IsdnCardState * cs , int bc ) ; 
/*--init_bcstate--*/
void Logl2Frame ( struct IsdnCardState * cs , struct sk_buff * skb , char * buf , int dir ) ; 
/*--Logl2Frame--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) Isdnl1New ( void ) ; 
/*--Isdnl1New--*/
void Isdnl1Free ( void ) ; 
/*--Isdnl1Free--*/
void l1_msg ( struct IsdnCardState * cs , int pr , void * arg ) ; 
/*--l1_msg--*/
void l1_msg_b ( struct PStack * st , int pr , void * arg ) ; 
/*--l1_msg_b--*/
void setstack_HiSax ( struct PStack * st , struct IsdnCardState * cs ) ; 
/*--setstack_HiSax--*/
void setstack_l1_B ( struct PStack * st ) ; 
/*--setstack_l1_B--*/
void setstack_tei ( struct PStack * st ) ; 
/*--setstack_tei--*/
void init_tei ( struct IsdnCardState * cs , int protocol ) ; 
/*--init_tei--*/
void release_tei ( struct IsdnCardState * cs ) ; 
/*--release_tei--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) TeiNew ( void ) ; 
/*--TeiNew--*/
void TeiFree ( void ) ; 
/*--TeiFree--*/
void releasestack_isdnl2 ( struct PStack * st ) ; 
/*--releasestack_isdnl2--*/
void setstack_isdnl2 ( struct PStack * st , char * debug_id ) ; 
/*--setstack_isdnl2--*/
void setstack_transl2 ( struct PStack * st ) ; 
/*--setstack_transl2--*/
void releasestack_transl2 ( struct PStack * st ) ; 
/*--releasestack_transl2--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) Isdnl2New ( void ) ; 
/*--Isdnl2New--*/
void Isdnl2Free ( void ) ; 
/*--Isdnl2Free--*/
u_char * findie ( u_char * p , int size , u_char ie , int wanted_set ) ; 
/*--findie--*/
int getcallref ( u_char * p ) ; 
/*--getcallref--*/
int newcallref ( void ) ; 
/*--newcallref--*/
void newl3state ( struct l3_process * pc , int state ) ; 
/*--newl3state--*/
void L3InitTimer ( struct l3_process * pc , struct L3Timer * t ) ; 
/*--L3InitTimer--*/
void L3DelTimer ( struct L3Timer * t ) ; 
/*--L3DelTimer--*/
int L3AddTimer ( struct L3Timer * t , int millisec , int event ) ; 
/*--L3AddTimer--*/
void StopAllL3Timer ( struct l3_process * pc ) ; 
/*--StopAllL3Timer--*/
struct sk_buff * l3_alloc_skb ( int len ) ; 
/*--l3_alloc_skb--*/
struct l3_process * getl3proc ( struct PStack * st , int cr ) ; 
/*--getl3proc--*/
struct l3_process * new_l3_process ( struct PStack * st , int cr ) ; 
/*--new_l3_process--*/
void release_l3_process ( struct l3_process * p ) ; 
/*--release_l3_process--*/
void setstack_l3dc ( struct PStack * st , struct Channel * chanp ) ; 
/*--setstack_l3dc--*/
void releasestack_isdnl3 ( struct PStack * st ) ; 
/*--releasestack_isdnl3--*/
void setstack_l3bc ( struct PStack * st , struct Channel * chanp ) ; 
/*--setstack_l3bc--*/
void l3_msg ( struct PStack * st , int pr , void * arg ) ; 
/*--l3_msg--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) Isdnl3New ( void ) ; 
/*--Isdnl3New--*/
void Isdnl3Free ( void ) ; 
/*--Isdnl3Free--*/
void setstack_manager ( struct PStack * st ) ; 
/*--setstack_manager--*/
void iecpy ( u_char * dest , u_char * iestart , int ieoffset ) ; 
/*--iecpy--*/
int QuickHex ( char * txt , u_char * p , int cnt ) ; 
/*--QuickHex--*/
void LogFrame ( struct IsdnCardState * cs , u_char * buf , int size ) ; 
/*--LogFrame--*/
void dlogframe ( struct IsdnCardState * cs , struct sk_buff * skb , int dir ) ; 
/*--dlogframe--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) CallcNew ( void ) ; 
/*--CallcNew--*/
void CallcFree ( void ) ; 
/*--CallcFree--*/
int CallcNewChan ( struct IsdnCardState * csta ) ; 
/*--CallcNewChan--*/
void CallcFreeChan ( struct IsdnCardState * csta ) ; 
/*--CallcFreeChan--*/
void lli_writewakeup ( struct PStack * st , int len ) ; 
/*--lli_writewakeup--*/
int HiSax_command ( isdn_ctrl * ic ) ; 
/*--HiSax_command--*/
int HiSax_writebuf_skb ( int id , int chan , int ack , struct sk_buff * skb ) ; 
/*--HiSax_writebuf_skb--*/
int FsmNew ( struct Fsm * fsm , struct FsmNode * fnlist , int fncount ) ; 
/*--FsmNew--*/
void FsmFree ( struct Fsm * fsm ) ; 
/*--FsmFree--*/
int FsmEvent ( struct FsmInst * fi , int event , void * arg ) ; 
/*--FsmEvent--*/
void FsmChangeState ( struct FsmInst * fi , int newstate ) ; 
/*--FsmChangeState--*/
void FsmInitTimer ( struct FsmInst * fi , struct FsmTimer * ft ) ; 
/*--FsmInitTimer--*/
void FsmDelTimer ( struct FsmTimer * ft , int where ) ; 
/*--FsmDelTimer--*/
int FsmAddTimer ( struct FsmTimer * ft , int millisec , int event , void * arg , int where ) ; 
/*--FsmAddTimer--*/
void FsmRestartTimer ( struct FsmTimer * ft , int millisec , int event , void * arg , int where ) ; 
/*--FsmRestartTimer--*/
void setstack_dss1 ( struct PStack * st ) ; 
/*--setstack_dss1--*/
void setstack_ni1 ( struct PStack * st ) ; 
/*--setstack_ni1--*/
void setstack_1tr6 ( struct PStack * st ) ; 
/*--setstack_1tr6--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_teles3 ( struct IsdnCard * card ) ; 
/*--setup_teles3--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ISACVersion ( struct IsdnCardState * cs , char * s ) ; 
/*--ISACVersion--*/
void isac_interrupt ( struct IsdnCardState * cs , u_char val ) ; 
/*--isac_interrupt--*/
void initisac ( struct IsdnCardState * cs ) ; 
/*--initisac--*/
void clear_pending_isac_ints ( struct IsdnCardState * cs ) ; 
/*--clear_pending_isac_ints--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_isac ( struct IsdnCardState * cs ) ; 
/*--setup_isac--*/
int arcofi_fsm ( struct IsdnCardState * cs , int event , void * data ) ; 
/*--arcofi_fsm--*/
void clear_arcofi ( struct IsdnCardState * cs ) ; 
/*--clear_arcofi--*/
void init_arcofi ( struct IsdnCardState * cs ) ; 
/*--init_arcofi--*/
int HscxVersion ( struct IsdnCardState * cs , char * s ) ; 
/*--HscxVersion--*/
void modehscx ( struct BCState * bcs , int mode , int bc ) ; 
/*--modehscx--*/
void hscx_l2l1 ( struct PStack * st , int pr , void * arg ) ; 
/*--hscx_l2l1--*/
int open_hscxstate ( struct IsdnCardState * cs , struct BCState * bcs ) ; 
/*--open_hscxstate--*/
void clear_pending_hscx_ints ( struct IsdnCardState * cs ) ; 
/*--clear_pending_hscx_ints--*/
void inithscx ( struct IsdnCardState * cs ) ; 
/*--inithscx--*/
void inithscxisac ( struct IsdnCardState * cs , int part ) ; 
/*--inithscxisac--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_telespci ( struct IsdnCard * card ) ; 
/*--setup_telespci--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_s0box ( struct IsdnCard * card ) ; 
/*--setup_s0box--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_avm_a1_pcmcia ( struct IsdnCard * card ) ; 
/*--setup_avm_a1_pcmcia--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_avm_pcipnp ( struct IsdnCard * card ) ; 
/*--setup_avm_pcipnp--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_elsa ( struct IsdnCard * card ) ; 
/*--setup_elsa--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_diva ( struct IsdnCard * card ) ; 
/*--setup_diva--*/
void interrupt_ipacx ( struct IsdnCardState * cs ) ; 
/*--interrupt_ipacx--*/
void init_ipacx ( struct IsdnCardState * cs , int part ) ; 
/*--init_ipacx--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_sedlbauer ( struct IsdnCard * card ) ; 
/*--setup_sedlbauer--*/
int ISARVersion ( struct IsdnCardState * cs , char * s ) ; 
/*--ISARVersion--*/
void isar_fill_fifo ( struct BCState * bcs ) ; 
/*--isar_fill_fifo--*/
void isar_int_main ( struct IsdnCardState * cs ) ; 
/*--isar_int_main--*/
int isar_auxcmd ( struct IsdnCardState * cs , isdn_ctrl * ic ) ; 
/*--isar_auxcmd--*/
void initisar ( struct IsdnCardState * cs ) ; 
/*--initisar--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_netjet_s ( struct IsdnCard * card ) ; 
/*--setup_netjet_s--*/
u_char NETjet_ReadIC ( struct IsdnCardState * cs , u_char offset ) ; 
/*--NETjet_ReadIC--*/
void NETjet_WriteIC ( struct IsdnCardState * cs , u_char offset , u_char value ) ; 
/*--NETjet_WriteIC--*/
void NETjet_ReadICfifo ( struct IsdnCardState * cs , u_char * data , int size ) ; 
/*--NETjet_ReadICfifo--*/
void NETjet_WriteICfifo ( struct IsdnCardState * cs , u_char * data , int size ) ; 
/*--NETjet_WriteICfifo--*/
void read_tiger ( struct IsdnCardState * cs ) ; 
/*--read_tiger--*/
void netjet_fill_dma ( struct BCState * bcs ) ; 
/*--netjet_fill_dma--*/
void write_tiger ( struct IsdnCardState * cs ) ; 
/*--write_tiger--*/
void inittiger ( struct IsdnCardState * cs ) ; 
/*--inittiger--*/
void release_io_netjet ( struct IsdnCardState * cs ) ; 
/*--release_io_netjet--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_netjet_u ( struct IsdnCard * card ) ; 
/*--setup_netjet_u--*/
void ICCVersion ( struct IsdnCardState * cs , char * s ) ; 
/*--ICCVersion--*/
void icc_interrupt ( struct IsdnCardState * cs , u_char val ) ; 
/*--icc_interrupt--*/
void initicc ( struct IsdnCardState * cs ) ; 
/*--initicc--*/
void clear_pending_icc_ints ( struct IsdnCardState * cs ) ; 
/*--clear_pending_icc_ints--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_icc ( struct IsdnCardState * cs ) ; 
/*--setup_icc--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_hfcpci ( struct IsdnCard * card ) ; 
/*--setup_hfcpci--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_hfcsx ( struct IsdnCard * card ) ; 
/*--setup_hfcsx--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_niccy ( struct IsdnCard * card ) ; 
/*--setup_niccy--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_bkm_a4t ( struct IsdnCard * card ) ; 
/*--setup_bkm_a4t--*/
int JadeVersion ( struct IsdnCardState * cs , char * s ) ; 
/*--JadeVersion--*/
void clear_pending_jade_ints ( struct IsdnCardState * cs ) ; 
/*--clear_pending_jade_ints--*/
void initjade ( struct IsdnCardState * cs ) ; 
/*--initjade--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_sct_quadro ( struct IsdnCard * card ) ; 
/*--setup_sct_quadro--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_gazel ( struct IsdnCard * card ) ; 
/*--setup_gazel--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_w6692 ( struct IsdnCard * card ) ; 
/*--setup_w6692--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_enternow_pci ( struct IsdnCard * card ) ; 
/*--setup_enternow_pci--*/
void Amd7930_interrupt ( struct IsdnCardState * cs , unsigned char irflags ) ; 
/*--Amd7930_interrupt--*/
void Amd7930_init ( struct IsdnCardState * cs ) ; 
/*--Amd7930_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) setup_Amd7930 ( struct IsdnCardState * cs ) ; 
/*--setup_Amd7930--*/
void st5481_usb_device_ctrl_msg ( struct st5481_adapter * adapter , u8 request , u16 value , ctrl_complete_t complete , void * context ) ; 
/*--st5481_usb_device_ctrl_msg--*/
void st5481_usb_pipe_reset ( struct st5481_adapter * adapter , u_char pipe , ctrl_complete_t complete , void * context ) ; 
/*--st5481_usb_pipe_reset--*/
void st5481_ph_command ( struct st5481_adapter * adapter , unsigned int command ) ; 
/*--st5481_ph_command--*/
int st5481_setup_usb ( struct st5481_adapter * adapter ) ; 
/*--st5481_setup_usb--*/
void st5481_release_usb ( struct st5481_adapter * adapter ) ; 
/*--st5481_release_usb--*/
void st5481_start ( struct st5481_adapter * adapter ) ; 
/*--st5481_start--*/
void st5481_stop ( struct st5481_adapter * adapter ) ; 
/*--st5481_stop--*/
int st5481_setup_isocpipes ( struct urb * urb [ 2 ] , struct usb_device * dev , unsigned int pipe , int num_packets , int packet_size , int buf_size , usb_complete_t complete , void * context ) ; 
/*--st5481_setup_isocpipes--*/
void st5481_release_isocpipes ( struct urb * urb [ 2 ] ) ; 
/*--st5481_release_isocpipes--*/
int st5481_setup_in ( struct st5481_in * in ) ; 
/*--st5481_setup_in--*/
void st5481_release_in ( struct st5481_in * in ) ; 
/*--st5481_release_in--*/
void st5481_in_mode ( struct st5481_in * in , int mode ) ; 
/*--st5481_in_mode--*/
void st5481_d_l2l1 ( struct hisax_if * hisax_d_if , int pr , void * arg ) ; 
/*--st5481_d_l2l1--*/
int st5481_setup_d ( struct st5481_adapter * adapter ) ; 
/*--st5481_setup_d--*/
void st5481_release_d ( struct st5481_adapter * adapter ) ; 
/*--st5481_release_d--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) st5481_d_init ( void ) ; 
/*--st5481_d_init--*/
void st5481_d_exit ( void ) ; 
/*--st5481_d_exit--*/
int st5481_setup_b ( struct st5481_bcs * bcs ) ; 
/*--st5481_setup_b--*/
void st5481_release_b ( struct st5481_bcs * bcs ) ; 
/*--st5481_release_b--*/
void st5481_b_l2l1 ( struct hisax_if * ifc , int pr , void * arg ) ; 
/*--st5481_b_l2l1--*/
void isac_irq ( struct isac * isac ) ; 
/*--isac_irq--*/
void isacsx_irq ( struct isac * isac ) ; 
/*--isacsx_irq--*/
void isac_init ( struct isac * isac ) ; 
/*--isac_init--*/
void isac_setup ( struct isac * isac ) ; 
/*--isac_setup--*/
void isacsx_setup ( struct isac * isac ) ; 
/*--isacsx_setup--*/
void isac_d_l2l1 ( struct hisax_if * hisax_d_if , int pr , void * arg ) ; 
/*--isac_d_l2l1--*/
int hysdn_procconf_init ( void ) ; 
/*--hysdn_procconf_init--*/
void hysdn_procconf_release ( void ) ; 
/*--hysdn_procconf_release--*/
void hysdn_card_errlog ( hysdn_card * card , tErrLogEntry * logp , int maxsize ) ; 
/*--hysdn_card_errlog--*/
void hysdn_addlog ( hysdn_card * card , char * fmt , ... ) ; 
/*--hysdn_addlog--*/
int hysdn_proclog_init ( hysdn_card * card ) ; 
/*--hysdn_proclog_init--*/
void hysdn_proclog_release ( hysdn_card * card ) ; 
/*--hysdn_proclog_release--*/
int ergo_inithardware ( hysdn_card * card ) ; 
/*--ergo_inithardware--*/
int pof_write_buffer ( hysdn_card * card , int datlen ) ; 
/*--pof_write_buffer--*/
int pof_write_open ( hysdn_card * card , unsigned char * * bufp ) ; 
/*--pof_write_open--*/
int pof_write_close ( hysdn_card * card ) ; 
/*--pof_write_close--*/
int EvalSysrTokData ( hysdn_card * card , unsigned char * cp , int len ) ; 
/*--EvalSysrTokData--*/
int hysdn_sched_rx ( hysdn_card * card , unsigned char * buf , unsigned short len , unsigned short chan ) ; 
/*--hysdn_sched_rx--*/
int hysdn_sched_tx ( hysdn_card * card , unsigned char * buf , unsigned short volatile * len , unsigned short volatile * chan , unsigned short maxlen ) ; 
/*--hysdn_sched_tx--*/
int hysdn_tx_cfgline ( hysdn_card * card , unsigned char * line , unsigned short chan ) ; 
/*--hysdn_tx_cfgline--*/
void hysdn_tx_netack ( hysdn_card * card ) ; 
/*--hysdn_tx_netack--*/
void hysdn_rx_netpkt ( hysdn_card * card , unsigned char * buf , unsigned short len ) ; 
/*--hysdn_rx_netpkt--*/
struct sk_buff * hysdn_tx_netget ( hysdn_card * card ) ; 
/*--hysdn_tx_netget--*/
int hysdn_net_create ( hysdn_card * card ) ; 
/*--hysdn_net_create--*/
int hysdn_net_release ( hysdn_card * card ) ; 
/*--hysdn_net_release--*/
char * hysdn_net_getname ( hysdn_card * card ) ; 
/*--hysdn_net_getname--*/
char * hysdn_getrev ( const char * revision ) ; 
/*--hysdn_getrev--*/
int hycapi_capi_release ( hysdn_card * card ) ; 
/*--hycapi_capi_release--*/
int hycapi_capi_stop ( hysdn_card * card ) ; 
/*--hycapi_capi_stop--*/
void hycapi_rx_capipkt ( hysdn_card * card , unsigned char * buf , unsigned short len ) ; 
/*--hycapi_rx_capipkt--*/
void hycapi_tx_capiack ( hysdn_card * card ) ; 
/*--hycapi_tx_capiack--*/
struct sk_buff * hycapi_tx_capiget ( hysdn_card * card ) ; 
/*--hycapi_tx_capiget--*/
int hycapi_init ( void ) ; 
/*--hycapi_init--*/
void hycapi_cleanup ( void ) ; 
/*--hycapi_cleanup--*/
int hycapi_capi_create ( hysdn_card * card ) ; 
/*--hycapi_capi_create--*/
void isdn_net_autohup ( void ) ; 
/*--isdn_net_autohup--*/
int isdn_net_stat_callback ( int idx , isdn_ctrl * c ) ; 
/*--isdn_net_stat_callback--*/
void isdn_net_dial ( void ) ; 
/*--isdn_net_dial--*/
void isdn_net_hangup ( struct net_device * d ) ; 
/*--isdn_net_hangup--*/
void isdn_net_write_super ( isdn_net_local * lp , struct sk_buff * skb ) ; 
/*--isdn_net_write_super--*/
void isdn_net_writebuf_skb ( isdn_net_local * lp , struct sk_buff * skb ) ; 
/*--isdn_net_writebuf_skb--*/
int isdn_net_rcv_skb ( int idx , struct sk_buff * skb ) ; 
/*--isdn_net_rcv_skb--*/
int isdn_net_find_icall ( int di , int ch , int idx , setup_parm * setup ) ; 
/*--isdn_net_find_icall--*/
isdn_net_dev * isdn_net_findif ( char * name ) ; 
/*--isdn_net_findif--*/
int isdn_net_dial_req ( isdn_net_local * lp ) ; 
/*--isdn_net_dial_req--*/
int isdn_net_force_dial ( char * name ) ; 
/*--isdn_net_force_dial--*/
char * isdn_net_new ( char * name , struct net_device * master ) ; 
/*--isdn_net_new--*/
char * isdn_net_newslave ( char * parm ) ; 
/*--isdn_net_newslave--*/
int isdn_net_setcfg ( isdn_net_ioctl_cfg * cfg ) ; 
/*--isdn_net_setcfg--*/
int isdn_net_getcfg ( isdn_net_ioctl_cfg * cfg ) ; 
/*--isdn_net_getcfg--*/
int isdn_net_addphone ( isdn_net_ioctl_phone * phone ) ; 
/*--isdn_net_addphone--*/
int isdn_net_getphones ( isdn_net_ioctl_phone * phone , char * phones ) ; 
/*--isdn_net_getphones--*/
int isdn_net_getpeer ( isdn_net_ioctl_phone * phone , isdn_net_ioctl_phone * peer ) ; 
/*--isdn_net_getpeer--*/
int isdn_net_delphone ( isdn_net_ioctl_phone * phone ) ; 
/*--isdn_net_delphone--*/
int isdn_net_force_hangup ( char * name ) ; 
/*--isdn_net_force_hangup--*/
int isdn_net_rm ( char * name ) ; 
/*--isdn_net_rm--*/
int isdn_net_rmall ( void ) ; 
/*--isdn_net_rmall--*/
void isdn_tty_readmodem ( void ) ; 
/*--isdn_tty_readmodem--*/
int isdn_tty_rcv_skb ( int i , int di , int channel , struct sk_buff * skb ) ; 
/*--isdn_tty_rcv_skb--*/
void isdn_tty_modem_hup ( modem_info * info , int local ) ; 
/*--isdn_tty_modem_hup--*/
int isdn_tty_capi_facility ( capi_msg * cm ) ; 
/*--isdn_tty_capi_facility--*/
int isdn_tty_modem_init ( void ) ; 
/*--isdn_tty_modem_init--*/
void isdn_tty_exit ( void ) ; 
/*--isdn_tty_exit--*/
int isdn_tty_find_icall ( int di , int ch , setup_parm * setup ) ; 
/*--isdn_tty_find_icall--*/
int isdn_tty_stat_callback ( int i , isdn_ctrl * c ) ; 
/*--isdn_tty_stat_callback--*/
void isdn_tty_at_cout ( char * msg , modem_info * info ) ; 
/*--isdn_tty_at_cout--*/
void isdn_tty_modem_escape ( void ) ; 
/*--isdn_tty_modem_escape--*/
void isdn_tty_modem_ring ( void ) ; 
/*--isdn_tty_modem_ring--*/
void isdn_tty_modem_xmit ( void ) ; 
/*--isdn_tty_modem_xmit--*/
void isdn_tty_carrier_timeout ( void ) ; 
/*--isdn_tty_carrier_timeout--*/
void isdn_v110_close ( isdn_v110_stream * v ) ; 
/*--isdn_v110_close--*/
struct sk_buff * isdn_v110_decode ( isdn_v110_stream * v , struct sk_buff * skb ) ; 
/*--isdn_v110_decode--*/
struct sk_buff * isdn_v110_encode ( isdn_v110_stream * v , struct sk_buff * skb ) ; 
/*--isdn_v110_encode--*/
int isdn_v110_stat_callback ( int idx , isdn_ctrl * c ) ; 
/*--isdn_v110_stat_callback--*/
void isdn_lock_drivers ( void ) ; 
/*--isdn_lock_drivers--*/
void isdn_unlock_drivers ( void ) ; 
/*--isdn_unlock_drivers--*/
int isdn_msncmp ( const char * msn1 , const char * msn2 ) ; 
/*--isdn_msncmp--*/
int isdn_dc2minor ( int di , int ch ) ; 
/*--isdn_dc2minor--*/
void isdn_timer_ctrl ( int tf , int onoff ) ; 
/*--isdn_timer_ctrl--*/
int isdn_command ( isdn_ctrl * cmd ) ; 
/*--isdn_command--*/
void isdn_all_eaz ( int di , int ch ) ; 
/*--isdn_all_eaz--*/
int isdn_getnum ( char * * p ) ; 
/*--isdn_getnum--*/
int isdn_readbchan ( int di , int channel , u_char * buf , u_char * fp , int len , wait_queue_head_t * sleep ) ; 
/*--isdn_readbchan--*/
int isdn_readbchan_tty ( int di , int channel , struct tty_struct * tty , int cisco_hack ) ; 
/*--isdn_readbchan_tty--*/
void isdn_info_update ( void ) ; 
/*--isdn_info_update--*/
char * isdn_map_eaz2msn ( char * msn , int di ) ; 
/*--isdn_map_eaz2msn--*/
int isdn_get_free_channel ( int usage , int l2_proto , int l3_proto , int pre_dev , int pre_chan , char * msn ) ; 
/*--isdn_get_free_channel--*/
void isdn_free_channel ( int di , int ch , int usage ) ; 
/*--isdn_free_channel--*/
void isdn_unexclusive_channel ( int di , int ch ) ; 
/*--isdn_unexclusive_channel--*/
int isdn_writebuf_skb_stub ( int drvidx , int chan , int ack , struct sk_buff * skb ) ; 
/*--isdn_writebuf_skb_stub--*/
int isdn_register_divert ( isdn_divert_if * i_div ) ; 
/*--isdn_register_divert--*/
int register_isdn ( isdn_if * i ) ; 
/*--register_isdn--*/
int isdn_ppp_free ( isdn_net_local * lp ) ; 
/*--isdn_ppp_free--*/
int isdn_ppp_bind ( isdn_net_local * lp ) ; 
/*--isdn_ppp_bind--*/
void isdn_ppp_wakeup_daemon ( isdn_net_local * lp ) ; 
/*--isdn_ppp_wakeup_daemon--*/
int isdn_ppp_open ( int min , struct file * file ) ; 
/*--isdn_ppp_open--*/
void isdn_ppp_release ( int min , struct file * file ) ; 
/*--isdn_ppp_release--*/
int isdn_ppp_ioctl ( int min , struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--isdn_ppp_ioctl--*/
unsigned int isdn_ppp_poll ( struct file * file , poll_table * wait ) ; 
/*--isdn_ppp_poll--*/
int isdn_ppp_read ( int min , struct file * file , char * buf , int count ) ; 
/*--isdn_ppp_read--*/
int isdn_ppp_write ( int min , struct file * file , const char * buf , int count ) ; 
/*--isdn_ppp_write--*/
int isdn_ppp_init ( void ) ; 
/*--isdn_ppp_init--*/
void isdn_ppp_cleanup ( void ) ; 
/*--isdn_ppp_cleanup--*/
void isdn_ppp_receive ( isdn_net_dev * net_dev , isdn_net_local * lp , struct sk_buff * skb ) ; 
/*--isdn_ppp_receive--*/
int isdn_ppp_xmit ( struct sk_buff * skb , struct net_device * netdev ) ; 
/*--isdn_ppp_xmit--*/
int isdn_ppp_autodial_filter ( struct sk_buff * skb , isdn_net_local * lp ) ; 
/*--isdn_ppp_autodial_filter--*/
struct sk_buff * isdn_ppp_mp_discard ( ippp_bundle * mp , struct sk_buff * from , struct sk_buff * to ) ; 
/*--isdn_ppp_mp_discard--*/
void isdn_ppp_mp_reassembly ( isdn_net_dev * net_dev , isdn_net_local * lp , struct sk_buff * from , struct sk_buff * to ) ; 
/*--isdn_ppp_mp_reassembly--*/
int isdn_ppp_dev_ioctl ( struct net_device * dev , struct ifreq * ifr , int cmd ) ; 
/*--isdn_ppp_dev_ioctl--*/
int isdn_ppp_dial_slave ( char * name ) ; 
/*--isdn_ppp_dial_slave--*/
int isdn_ppp_hangup_slave ( char * name ) ; 
/*--isdn_ppp_hangup_slave--*/
int isdn_ppp_register_compressor ( struct isdn_ppp_compressor * ipc ) ; 
/*--isdn_ppp_register_compressor--*/
int isdn_ppp_unregister_compressor ( struct isdn_ppp_compressor * ipc ) ; 
/*--isdn_ppp_unregister_compressor--*/
struct concap_proto * isdn_concap_new ( int encap ) ; 
/*--isdn_concap_new--*/
struct concap_proto * isdn_x25iface_proto_new ( void ) ; 
/*--isdn_x25iface_proto_new--*/
void isdn_audio_ulaw2alaw ( unsigned char * buff , unsigned long len ) ; 
/*--isdn_audio_ulaw2alaw--*/
void isdn_audio_alaw2ulaw ( unsigned char * buff , unsigned long len ) ; 
/*--isdn_audio_alaw2ulaw--*/
adpcm_state * isdn_audio_adpcm_init ( adpcm_state * s , int nbits ) ; 
/*--isdn_audio_adpcm_init--*/
dtmf_state * isdn_audio_dtmf_init ( dtmf_state * s ) ; 
/*--isdn_audio_dtmf_init--*/
int isdn_audio_adpcm2xlaw ( adpcm_state * s , int fmt , unsigned char * in , unsigned char * out , int len ) ; 
/*--isdn_audio_adpcm2xlaw--*/
int isdn_audio_xlaw2adpcm ( adpcm_state * s , int fmt , unsigned char * in , unsigned char * out , int len ) ; 
/*--isdn_audio_xlaw2adpcm--*/
void isdn_audio_eval_dtmf ( modem_info * info ) ; 
/*--isdn_audio_eval_dtmf--*/
void isdn_audio_calc_dtmf ( modem_info * info , unsigned char * buf , int len , int fmt ) ; 
/*--isdn_audio_calc_dtmf--*/
silence_state * isdn_audio_silence_init ( silence_state * s ) ; 
/*--isdn_audio_silence_init--*/
void isdn_audio_calc_silence ( modem_info * info , unsigned char * buf , int len , int fmt ) ; 
/*--isdn_audio_calc_silence--*/
void isdn_audio_put_dle_code ( modem_info * info , u_char code ) ; 
/*--isdn_audio_put_dle_code--*/
void isdn_audio_eval_silence ( modem_info * info ) ; 
/*--isdn_audio_eval_silence--*/
int isdn_tty_fax_command ( modem_info * info , isdn_ctrl * c ) ; 
/*--isdn_tty_fax_command--*/
void isdn_tty_fax_bitorder ( modem_info * info , struct sk_buff * skb ) ; 
/*--isdn_tty_fax_bitorder--*/
int isdn_tty_cmd_PLUSF_FAX ( char * * p , modem_info * info ) ; 
/*--isdn_tty_cmd_PLUSF_FAX--*/
void isdnhdlc_rcv_init ( struct isdnhdlc_vars * hdlc , u32 features ) ; 
/*--isdnhdlc_rcv_init--*/
void isdnhdlc_out_init ( struct isdnhdlc_vars * hdlc , u32 features ) ; 
/*--isdnhdlc_out_init--*/
int isdnhdlc_decode ( struct isdnhdlc_vars * hdlc , const u8 * src , int slen , int * count , u8 * dst , int dsize ) ; 
/*--isdnhdlc_decode--*/
int isdnhdlc_encode ( struct isdnhdlc_vars * hdlc , const u8 * src , u16 slen , int * count , u8 * dst , int dsize ) ; 
/*--isdnhdlc_encode--*/
int l1oip_law_to_4bit ( u8 * data , int len , u8 * result , u32 * state ) ; 
/*--l1oip_law_to_4bit--*/
int l1oip_4bit_to_law ( u8 * data , int len , u8 * result ) ; 
/*--l1oip_4bit_to_law--*/
int l1oip_alaw_to_ulaw ( u8 * data , int len , u8 * result ) ; 
/*--l1oip_alaw_to_ulaw--*/
int l1oip_ulaw_to_alaw ( u8 * data , int len , u8 * result ) ; 
/*--l1oip_ulaw_to_alaw--*/
void l1oip_4bit_free ( void ) ; 
/*--l1oip_4bit_free--*/
int l1oip_4bit_alloc ( int ulaw ) ; 
/*--l1oip_4bit_alloc--*/
struct mISDNdevice * get_mdevice ( u_int id ) ; 
/*--get_mdevice--*/
int get_mdevice_count ( void ) ; 
/*--get_mdevice_count--*/
int mISDN_register_device ( struct mISDNdevice * dev , struct device * parent , char * name ) ; 
/*--mISDN_register_device--*/
void mISDN_unregister_device ( struct mISDNdevice * dev ) ; 
/*--mISDN_unregister_device--*/
u_int get_all_Bprotocols ( void ) ; 
/*--get_all_Bprotocols--*/
struct Bprotocol * get_Bprotocol4mask ( u_int m ) ; 
/*--get_Bprotocol4mask--*/
struct Bprotocol * get_Bprotocol4id ( u_int id ) ; 
/*--get_Bprotocol4id--*/
int mISDN_register_Bprotocol ( struct Bprotocol * bp ) ; 
/*--mISDN_register_Bprotocol--*/
void mISDN_unregister_Bprotocol ( struct Bprotocol * bp ) ; 
/*--mISDN_unregister_Bprotocol--*/
void mISDN_FsmNew ( struct Fsm * fsm , struct FsmNode * fnlist , int fncount ) ; 
/*--mISDN_FsmNew--*/
void mISDN_FsmFree ( struct Fsm * fsm ) ; 
/*--mISDN_FsmFree--*/
int mISDN_FsmEvent ( struct FsmInst * fi , int event , void * arg ) ; 
/*--mISDN_FsmEvent--*/
void mISDN_FsmChangeState ( struct FsmInst * fi , int newstate ) ; 
/*--mISDN_FsmChangeState--*/
void mISDN_FsmInitTimer ( struct FsmInst * fi , struct FsmTimer * ft ) ; 
/*--mISDN_FsmInitTimer--*/
void mISDN_FsmDelTimer ( struct FsmTimer * ft , int where ) ; 
/*--mISDN_FsmDelTimer--*/
int mISDN_FsmAddTimer ( struct FsmTimer * ft , int millisec , int event , void * arg , int where ) ; 
/*--mISDN_FsmAddTimer--*/
void mISDN_FsmRestartTimer ( struct FsmTimer * ft , int millisec , int event , void * arg , int where ) ; 
/*--mISDN_FsmRestartTimer--*/
int misdn_sock_init ( u_int * deb ) ; 
/*--misdn_sock_init--*/
void misdn_sock_cleanup ( void ) ; 
/*--misdn_sock_cleanup--*/
void mISDN_init_clock ( u_int * dp ) ; 
/*--mISDN_init_clock--*/
struct mISDNclock * mISDN_register_clock ( char * name , int pri , clockctl_func_t * ctl , void * priv ) ; 
/*--mISDN_register_clock--*/
void mISDN_unregister_clock ( struct mISDNclock * iclock ) ; 
/*--mISDN_unregister_clock--*/
void mISDN_clock_update ( struct mISDNclock * iclock , int samples , struct timeval * tv ) ; 
/*--mISDN_clock_update--*/
unsigned short mISDN_clock_get ( void ) ; 
/*--mISDN_clock_get--*/
int mISDN_initdchannel ( struct dchannel * ch , int maxlen , void * phf ) ; 
/*--mISDN_initdchannel--*/
int mISDN_initbchannel ( struct bchannel * ch , int maxlen ) ; 
/*--mISDN_initbchannel--*/
int mISDN_freedchannel ( struct dchannel * ch ) ; 
/*--mISDN_freedchannel--*/
void mISDN_clear_bchannel ( struct bchannel * ch ) ; 
/*--mISDN_clear_bchannel--*/
int mISDN_freebchannel ( struct bchannel * ch ) ; 
/*--mISDN_freebchannel--*/
void recv_Dchannel ( struct dchannel * dch ) ; 
/*--recv_Dchannel--*/
void recv_Echannel ( struct dchannel * ech , struct dchannel * dch ) ; 
/*--recv_Echannel--*/
void recv_Bchannel ( struct bchannel * bch , unsigned int id ) ; 
/*--recv_Bchannel--*/
void recv_Dchannel_skb ( struct dchannel * dch , struct sk_buff * skb ) ; 
/*--recv_Dchannel_skb--*/
void recv_Bchannel_skb ( struct bchannel * bch , struct sk_buff * skb ) ; 
/*--recv_Bchannel_skb--*/
int get_next_dframe ( struct dchannel * dch ) ; 
/*--get_next_dframe--*/
void confirm_Bsend ( struct bchannel * bch ) ; 
/*--confirm_Bsend--*/
int get_next_bframe ( struct bchannel * bch ) ; 
/*--get_next_bframe--*/
void queue_ch_frame ( struct mISDNchannel * ch , u_int pr , int id , struct sk_buff * skb ) ; 
/*--queue_ch_frame--*/
int dchannel_senddata ( struct dchannel * ch , struct sk_buff * skb ) ; 
/*--dchannel_senddata--*/
int bchannel_senddata ( struct bchannel * ch , struct sk_buff * skb ) ; 
/*--bchannel_senddata--*/
void set_channel_address ( struct mISDNchannel * ch , u_int sapi , u_int tei ) ; 
/*--set_channel_address--*/
void __add_layer2 ( struct mISDNchannel * ch , struct mISDNstack * st ) ; 
/*--__add_layer2--*/
void add_layer2 ( struct mISDNchannel * ch , struct mISDNstack * st ) ; 
/*--add_layer2--*/
int create_stack ( struct mISDNdevice * dev ) ; 
/*--create_stack--*/
int connect_layer1 ( struct mISDNdevice * dev , struct mISDNchannel * ch , u_int protocol , struct sockaddr_mISDN * adr ) ; 
/*--connect_layer1--*/
int connect_Bstack ( struct mISDNdevice * dev , struct mISDNchannel * ch , u_int protocol , struct sockaddr_mISDN * adr ) ; 
/*--connect_Bstack--*/
int create_l2entity ( struct mISDNdevice * dev , struct mISDNchannel * ch , u_int protocol , struct sockaddr_mISDN * adr ) ; 
/*--create_l2entity--*/
void delete_channel ( struct mISDNchannel * ch ) ; 
/*--delete_channel--*/
void delete_stack ( struct mISDNdevice * dev ) ; 
/*--delete_stack--*/
void mISDN_initstack ( u_int * dp ) ; 
/*--mISDN_initstack--*/
int l1_event ( struct layer1 * l1 , u_int event ) ; 
/*--l1_event--*/
int create_l1 ( struct dchannel * dch , dchannel_l1callback * dcb ) ; 
/*--create_l1--*/
int l1_init ( u_int * deb ) ; 
/*--l1_init--*/
void l1_cleanup ( void ) ; 
/*--l1_cleanup--*/
int tei_l2 ( struct layer2 * l2 , u_int cmd , u_long arg ) ; 
/*--tei_l2--*/
struct layer2 * create_l2 ( struct mISDNchannel * ch , u_int protocol , u_long options , int tei , int sapi ) ; 
/*--create_l2--*/
int Isdnl2_Init ( u_int * deb ) ; 
/*--Isdnl2_Init--*/
void Isdnl2_cleanup ( void ) ; 
/*--Isdnl2_cleanup--*/
int l2_tei ( struct layer2 * l2 , u_int cmd , u_long arg ) ; 
/*--l2_tei--*/
void TEIrelease ( struct layer2 * l2 ) ; 
/*--TEIrelease--*/
void delete_teimanager ( struct mISDNchannel * ch ) ; 
/*--delete_teimanager--*/
int create_teimanager ( struct mISDNdevice * dev ) ; 
/*--create_teimanager--*/
int TEIInit ( u_int * deb ) ; 
/*--TEIInit--*/
void TEIFree ( void ) ; 
/*--TEIFree--*/
int mISDN_inittimer ( u_int * deb ) ; 
/*--mISDN_inittimer--*/
void mISDN_timer_cleanup ( void ) ; 
/*--mISDN_timer_cleanup--*/
void dsp_cmx_debug ( struct dsp * dsp ) ; 
/*--dsp_cmx_debug--*/
int dsp_cmx_del_conf_member ( struct dsp * dsp ) ; 
/*--dsp_cmx_del_conf_member--*/
int dsp_cmx_del_conf ( struct dsp_conf * conf ) ; 
/*--dsp_cmx_del_conf--*/
void dsp_cmx_hardware ( struct dsp_conf * conf , struct dsp * dsp ) ; 
/*--dsp_cmx_hardware--*/
int dsp_cmx_conf ( struct dsp * dsp , u32 conf_id ) ; 
/*--dsp_cmx_conf--*/
void dsp_cmx_receive ( struct dsp * dsp , struct sk_buff * skb ) ; 
/*--dsp_cmx_receive--*/
void dsp_cmx_send ( void * arg ) ; 
/*--dsp_cmx_send--*/
void dsp_cmx_transmit ( struct dsp * dsp , struct sk_buff * skb ) ; 
/*--dsp_cmx_transmit--*/
void dsp_cmx_hdlc ( struct dsp * dsp , struct sk_buff * skb ) ; 
/*--dsp_cmx_hdlc--*/
void dsp_audio_generate_ulaw_samples ( void ) ; 
/*--dsp_audio_generate_ulaw_samples--*/
void dsp_tone_copy ( struct dsp * dsp , u8 * data , int len ) ; 
/*--dsp_tone_copy--*/
void dsp_tone_timeout ( void * arg ) ; 
/*--dsp_tone_timeout--*/
int dsp_tone ( struct dsp * dsp , int tone ) ; 
/*--dsp_tone--*/
void dsp_dtmf_goertzel_init ( struct dsp * dsp ) ; 
/*--dsp_dtmf_goertzel_init--*/
void dsp_dtmf_hardware ( struct dsp * dsp ) ; 
/*--dsp_dtmf_hardware--*/
u8 * dsp_dtmf_goertzel_decode ( struct dsp * dsp , u8 * data , int len , int fmt ) ; 
/*--dsp_dtmf_goertzel_decode--*/
void dsp_audio_generate_law_tables ( void ) ; 
/*--dsp_audio_generate_law_tables--*/
void dsp_audio_generate_s2law_table ( void ) ; 
/*--dsp_audio_generate_s2law_table--*/
void dsp_audio_generate_seven ( void ) ; 
/*--dsp_audio_generate_seven--*/
void dsp_audio_generate_mix_table ( void ) ; 
/*--dsp_audio_generate_mix_table--*/
void dsp_audio_generate_volume_changes ( void ) ; 
/*--dsp_audio_generate_volume_changes--*/
void dsp_change_volume ( struct sk_buff * skb , int volume ) ; 
/*--dsp_change_volume--*/
void dsp_bf_encrypt ( struct dsp * dsp , u8 * data , int len ) ; 
/*--dsp_bf_encrypt--*/
void dsp_bf_decrypt ( struct dsp * dsp , u8 * data , int len ) ; 
/*--dsp_bf_decrypt--*/
int dsp_bf_init ( struct dsp * dsp , const u8 * key , uint keylen ) ; 
/*--dsp_bf_init--*/
void dsp_bf_cleanup ( struct dsp * dsp ) ; 
/*--dsp_bf_cleanup--*/
int mISDN_dsp_element_register ( struct mISDN_dsp_element * elem ) ; 
/*--mISDN_dsp_element_register--*/
void mISDN_dsp_element_unregister ( struct mISDN_dsp_element * elem ) ; 
/*--mISDN_dsp_element_unregister--*/
int dsp_pipeline_module_init ( void ) ; 
/*--dsp_pipeline_module_init--*/
void dsp_pipeline_module_exit ( void ) ; 
/*--dsp_pipeline_module_exit--*/
int dsp_pipeline_init ( struct dsp_pipeline * pipeline ) ; 
/*--dsp_pipeline_init--*/
void dsp_pipeline_destroy ( struct dsp_pipeline * pipeline ) ; 
/*--dsp_pipeline_destroy--*/
int dsp_pipeline_build ( struct dsp_pipeline * pipeline , const char * cfg ) ; 
/*--dsp_pipeline_build--*/
void dsp_pipeline_process_tx ( struct dsp_pipeline * pipeline , u8 * data , int len ) ; 
/*--dsp_pipeline_process_tx--*/
void dsp_pipeline_process_rx ( struct dsp_pipeline * pipeline , u8 * data , int len , unsigned int txlen ) ; 
/*--dsp_pipeline_process_rx--*/
void dsp_hwec_enable ( struct dsp * dsp , const char * arg ) ; 
/*--dsp_hwec_enable--*/
void dsp_hwec_disable ( struct dsp * dsp ) ; 
/*--dsp_hwec_disable--*/
int dsp_hwec_init ( void ) ; 
/*--dsp_hwec_init--*/
void dsp_hwec_exit ( void ) ; 
/*--dsp_hwec_exit--*/
void led_classdev_suspend ( struct led_classdev * led_cdev ) ; 
/*--led_classdev_suspend--*/
void led_classdev_resume ( struct led_classdev * led_cdev ) ; 
/*--led_classdev_resume--*/
int led_classdev_register ( struct device * parent , struct led_classdev * led_cdev ) ; 
/*--led_classdev_register--*/
void led_classdev_unregister ( struct led_classdev * led_cdev ) ; 
/*--led_classdev_unregister--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) raid6_select_algo ( void ) ; 
/*--raid6_select_algo--*/
void raid6_2data_recov ( int disks , size_t bytes , int faila , int failb , void * * ptrs ) ; 
/*--raid6_2data_recov--*/
void raid6_datap_recov ( int disks , size_t bytes , int faila , void * * ptrs ) ; 
/*--raid6_datap_recov--*/
int ir_input_init ( struct input_dev * dev , struct ir_input_state * ir , const u64 ir_type ) ; 
/*--ir_input_init--*/
void ir_input_nokey ( struct input_dev * dev , struct ir_input_state * ir ) ; 
/*--ir_input_nokey--*/
void ir_input_keydown ( struct input_dev * dev , struct ir_input_state * ir , u32 ir_key ) ; 
/*--ir_input_keydown--*/
u32 ir_extract_bits ( u32 data , u32 mask ) ; 
/*--ir_extract_bits--*/
int ir_dump_samples ( u32 * samples , int count ) ; 
/*--ir_dump_samples--*/
int ir_decode_pulsedistance ( u32 * samples , int count , int low , int high ) ; 
/*--ir_decode_pulsedistance--*/
int ir_decode_biphase ( u32 * samples , int count , int low , int high ) ; 
/*--ir_decode_biphase--*/
u32 ir_rc5_decode ( unsigned int code ) ; 
/*--ir_rc5_decode--*/
void ir_rc5_timer_end ( unsigned long data ) ; 
/*--ir_rc5_timer_end--*/
void ir_rc5_timer_keyup ( unsigned long data ) ; 
/*--ir_rc5_timer_keyup--*/
u32 ir_g_keycode_from_table ( struct input_dev * dev , u32 scancode ) ; 
/*--ir_g_keycode_from_table--*/
void ir_repeat ( struct input_dev * dev ) ; 
/*--ir_repeat--*/
void ir_keydown ( struct input_dev * dev , int scancode , u8 toggle ) ; 
/*--ir_keydown--*/
int __ir_input_register ( struct input_dev * input_dev , const struct ir_scancode_table * rc_tab , const struct ir_dev_props * props , const char * driver_name ) ; 
/*--__ir_input_register--*/
void ir_input_unregister ( struct input_dev * input_dev ) ; 
/*--ir_input_unregister--*/
int ir_register_class ( struct input_dev * input_dev ) ; 
/*--ir_register_class--*/
void ir_unregister_class ( struct input_dev * input_dev ) ; 
/*--ir_unregister_class--*/
int ir_raw_event_register ( struct input_dev * input_dev ) ; 
/*--ir_raw_event_register--*/
void ir_raw_event_unregister ( struct input_dev * input_dev ) ; 
/*--ir_raw_event_unregister--*/
int ir_raw_event_store ( struct input_dev * input_dev , struct ir_raw_event * ev ) ; 
/*--ir_raw_event_store--*/
int ir_raw_event_store_edge ( struct input_dev * input_dev , enum raw_event_type type ) ; 
/*--ir_raw_event_store_edge--*/
void ir_raw_event_handle ( struct input_dev * input_dev ) ; 
/*--ir_raw_event_handle--*/
int ir_raw_handler_register ( struct ir_raw_handler * ir_raw_handler ) ; 
/*--ir_raw_handler_register--*/
void ir_raw_handler_unregister ( struct ir_raw_handler * ir_raw_handler ) ; 
/*--ir_raw_handler_unregister--*/
void ir_raw_init ( void ) ; 
/*--ir_raw_init--*/
struct ir_scancode_table * get_rc_map ( const char * name ) ; 
/*--get_rc_map--*/
int ir_register_map ( struct rc_keymap * map ) ; 
/*--ir_register_map--*/
void ir_unregister_map ( struct rc_keymap * map ) ; 
/*--ir_unregister_map--*/
struct dvb_frontend * xc2028_attach ( struct dvb_frontend * fe , struct xc2028_config * cfg ) ; 
/*--xc2028_attach--*/
struct dvb_frontend * simple_tuner_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c_adap , u8 i2c_addr , unsigned int type ) ; 
/*--simple_tuner_attach--*/
struct dvb_frontend * microtune_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c_adap , u8 i2c_addr ) ; 
/*--microtune_attach--*/
struct dvb_frontend * tda829x_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c_adap , u8 i2c_addr , struct tda829x_config * cfg ) ; 
/*--tda829x_attach--*/
int tda829x_probe ( struct i2c_adapter * i2c_adap , u8 i2c_addr ) ; 
/*--tda829x_probe--*/
int tea5767_autodetection ( struct i2c_adapter * i2c_adap , u8 i2c_addr ) ; 
/*--tea5767_autodetection--*/
struct dvb_frontend * tea5767_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c_adap , u8 i2c_addr ) ; 
/*--tea5767_attach--*/
int tea5761_autodetection ( struct i2c_adapter * i2c_adap , u8 i2c_addr ) ; 
/*--tea5761_autodetection--*/
struct dvb_frontend * tea5761_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c_adap , u8 i2c_addr ) ; 
/*--tea5761_attach--*/
struct dvb_frontend * tda9887_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c_adap , u8 i2c_addr ) ; 
/*--tda9887_attach--*/
struct dvb_frontend * tda827x_attach ( struct dvb_frontend * fe , int addr , struct i2c_adapter * i2c , struct tda827x_config * cfg ) ; 
/*--tda827x_attach--*/
int tda18271_lookup_thermometer ( struct dvb_frontend * fe ) ; 
/*--tda18271_lookup_thermometer--*/
int tda18271_lookup_cid_target ( struct dvb_frontend * fe , u32 * freq , u8 * cid_target , u16 * count_limit ) ; 
/*--tda18271_lookup_cid_target--*/
int tda18271_lookup_rf_band ( struct dvb_frontend * fe , u32 * freq , u8 * rf_band ) ; 
/*--tda18271_lookup_rf_band--*/
int tda18271_lookup_pll_map ( struct dvb_frontend * fe , enum tda18271_map_type map_type , u32 * freq , u8 * post_div , u8 * div ) ; 
/*--tda18271_lookup_pll_map--*/
int tda18271_lookup_map ( struct dvb_frontend * fe , enum tda18271_map_type map_type , u32 * freq , u8 * val ) ; 
/*--tda18271_lookup_map--*/
int tda18271_assign_map_layout ( struct dvb_frontend * fe ) ; 
/*--tda18271_assign_map_layout--*/
int tda18271_read_regs ( struct dvb_frontend * fe ) ; 
/*--tda18271_read_regs--*/
int tda18271_read_extended ( struct dvb_frontend * fe ) ; 
/*--tda18271_read_extended--*/
int tda18271_write_regs ( struct dvb_frontend * fe , int idx , int len ) ; 
/*--tda18271_write_regs--*/
int tda18271_charge_pump_source ( struct dvb_frontend * fe , enum tda18271_pll pll , int force ) ; 
/*--tda18271_charge_pump_source--*/
int tda18271_init_regs ( struct dvb_frontend * fe ) ; 
/*--tda18271_init_regs--*/
int tda18271_set_standby_mode ( struct dvb_frontend * fe , int sm , int sm_lt , int sm_xt ) ; 
/*--tda18271_set_standby_mode--*/
int tda18271_calc_main_pll ( struct dvb_frontend * fe , u32 freq ) ; 
/*--tda18271_calc_main_pll--*/
int tda18271_calc_cal_pll ( struct dvb_frontend * fe , u32 freq ) ; 
/*--tda18271_calc_cal_pll--*/
int tda18271_calc_bp_filter ( struct dvb_frontend * fe , u32 * freq ) ; 
/*--tda18271_calc_bp_filter--*/
int tda18271_calc_km ( struct dvb_frontend * fe , u32 * freq ) ; 
/*--tda18271_calc_km--*/
int tda18271_calc_rf_band ( struct dvb_frontend * fe , u32 * freq ) ; 
/*--tda18271_calc_rf_band--*/
int tda18271_calc_gain_taper ( struct dvb_frontend * fe , u32 * freq ) ; 
/*--tda18271_calc_gain_taper--*/
int tda18271_calc_ir_measure ( struct dvb_frontend * fe , u32 * freq ) ; 
/*--tda18271_calc_ir_measure--*/
int tda18271_calc_rf_cal ( struct dvb_frontend * fe , u32 * freq ) ; 
/*--tda18271_calc_rf_cal--*/
struct dvb_frontend * tda18271_attach ( struct dvb_frontend * fe , u8 addr , struct i2c_adapter * i2c , struct tda18271_config * cfg ) ; 
/*--tda18271_attach--*/
struct dvb_frontend * xc5000_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct xc5000_config * cfg ) ; 
/*--xc5000_attach--*/
struct dvb_frontend * mt2060_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct mt2060_config * cfg , u16 if1 ) ; 
/*--mt2060_attach--*/
struct dvb_frontend * mt2266_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct mt2266_config * cfg ) ; 
/*--mt2266_attach--*/
struct dvb_frontend * qt1010_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct qt1010_config * cfg ) ; 
/*--qt1010_attach--*/
struct dvb_frontend * mt2131_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct mt2131_config * cfg , u16 if1 ) ; 
/*--mt2131_attach--*/
struct dvb_frontend * mxl5005s_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct mxl5005s_config * config ) ; 
/*--mxl5005s_attach--*/
struct dvb_frontend * mxl5007t_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , u8 addr , struct mxl5007t_config * cfg ) ; 
/*--mxl5007t_attach--*/
struct dvb_frontend * mc44s803_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct mc44s803_config * cfg ) ; 
/*--mc44s803_attach--*/
int fixpt_div32 ( u32 dividend , u32 divisor , u32 * quotient , u32 * fraction ) ; 
/*--fixpt_div32--*/
struct dvb_frontend * max2165_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct max2165_config * cfg ) ; 
/*--max2165_attach--*/
int saa7146_i2c_adapter_prepare ( struct saa7146_dev * dev , struct i2c_adapter * i2c_adapter , u32 bitrate ) ; 
/*--saa7146_i2c_adapter_prepare--*/
void saa7146_setgpio ( struct saa7146_dev * dev , int port , u32 data ) ; 
/*--saa7146_setgpio--*/
int saa7146_wait_for_debi_done ( struct saa7146_dev * dev , int nobusyloop ) ; 
/*--saa7146_wait_for_debi_done--*/
void * saa7146_vmalloc_build_pgtable ( struct pci_dev * pci , long length , struct saa7146_pgtable * pt ) ; 
/*--saa7146_vmalloc_build_pgtable--*/
void saa7146_vfree_destroy_pgtable ( struct pci_dev * pci , void * mem , struct saa7146_pgtable * pt ) ; 
/*--saa7146_vfree_destroy_pgtable--*/
void saa7146_pgtable_free ( struct pci_dev * pci , struct saa7146_pgtable * pt ) ; 
/*--saa7146_pgtable_free--*/
int saa7146_pgtable_alloc ( struct pci_dev * pci , struct saa7146_pgtable * pt ) ; 
/*--saa7146_pgtable_alloc--*/
int saa7146_pgtable_build_single ( struct pci_dev * pci , struct saa7146_pgtable * pt , struct scatterlist * list , int sglen ) ; 
/*--saa7146_pgtable_build_single--*/
int saa7146_register_extension ( struct saa7146_extension * ext ) ; 
/*--saa7146_register_extension--*/
int saa7146_unregister_extension ( struct saa7146_extension * ext ) ; 
/*--saa7146_unregister_extension--*/
int saa7146_res_get ( struct saa7146_fh * fh , unsigned int bit ) ; 
/*--saa7146_res_get--*/
void saa7146_res_free ( struct saa7146_fh * fh , unsigned int bits ) ; 
/*--saa7146_res_free--*/
void saa7146_dma_free ( struct saa7146_dev * dev , struct videobuf_queue * q , struct saa7146_buf * buf ) ; 
/*--saa7146_dma_free--*/
int saa7146_buffer_queue ( struct saa7146_dev * dev , struct saa7146_dmaqueue * q , struct saa7146_buf * buf ) ; 
/*--saa7146_buffer_queue--*/
void saa7146_buffer_finish ( struct saa7146_dev * dev , struct saa7146_dmaqueue * q , int state ) ; 
/*--saa7146_buffer_finish--*/
void saa7146_buffer_next ( struct saa7146_dev * dev , struct saa7146_dmaqueue * q , int vbi ) ; 
/*--saa7146_buffer_next--*/
void saa7146_buffer_timeout ( unsigned long data ) ; 
/*--saa7146_buffer_timeout--*/
int saa7146_vv_init ( struct saa7146_dev * dev , struct saa7146_ext_vv * ext_vv ) ; 
/*--saa7146_vv_init--*/
int saa7146_vv_release ( struct saa7146_dev * dev ) ; 
/*--saa7146_vv_release--*/
int saa7146_register_device ( struct video_device * * vid , struct saa7146_dev * dev , char * name , int type ) ; 
/*--saa7146_register_device--*/
int saa7146_unregister_device ( struct video_device * * vid , struct saa7146_dev * dev ) ; 
/*--saa7146_unregister_device--*/
struct saa7146_format * format_by_fourcc ( struct saa7146_dev * dev , int fourcc ) ; 
/*--format_by_fourcc--*/
int saa7146_start_preview ( struct saa7146_fh * fh ) ; 
/*--saa7146_start_preview--*/
int saa7146_stop_preview ( struct saa7146_fh * fh ) ; 
/*--saa7146_stop_preview--*/
void saa7146_set_hps_source_and_sync ( struct saa7146_dev * dev , int source , int sync ) ; 
/*--saa7146_set_hps_source_and_sync--*/
int saa7146_enable_overlay ( struct saa7146_fh * fh ) ; 
/*--saa7146_enable_overlay--*/
void saa7146_disable_overlay ( struct saa7146_fh * fh ) ; 
/*--saa7146_disable_overlay--*/
void saa7146_write_out_dma ( struct saa7146_dev * dev , int which , struct saa7146_video_dma * vdma ) ; 
/*--saa7146_write_out_dma--*/
void saa7146_set_capture ( struct saa7146_dev * dev , struct saa7146_buf * buf , struct saa7146_buf * next ) ; 
/*--saa7146_set_capture--*/
void flexcop_pass_dmx_data ( struct flexcop_device * fc , u8 * buf , u32 len ) ; 
/*--flexcop_pass_dmx_data--*/
void flexcop_pass_dmx_packets ( struct flexcop_device * fc , u8 * buf , u32 no ) ; 
/*--flexcop_pass_dmx_packets--*/
void flexcop_reset_block_300 ( struct flexcop_device * fc ) ; 
/*--flexcop_reset_block_300--*/
struct flexcop_device * flexcop_device_kmalloc ( size_t bus_specific_len ) ; 
/*--flexcop_device_kmalloc--*/
void flexcop_device_kfree ( struct flexcop_device * fc ) ; 
/*--flexcop_device_kfree--*/
int flexcop_device_initialize ( struct flexcop_device * fc ) ; 
/*--flexcop_device_initialize--*/
void flexcop_device_exit ( struct flexcop_device * fc ) ; 
/*--flexcop_device_exit--*/
int flexcop_frontend_init ( struct flexcop_device * fc ) ; 
/*--flexcop_frontend_init--*/
void flexcop_frontend_exit ( struct flexcop_device * fc ) ; 
/*--flexcop_frontend_exit--*/
int flexcop_i2c_request ( struct flexcop_i2c_adapter * i2c , flexcop_access_op_t op , u8 chipaddr , u8 addr , u8 * buf , u16 len ) ; 
/*--flexcop_i2c_request--*/
int flexcop_i2c_init ( struct flexcop_device * fc ) ; 
/*--flexcop_i2c_init--*/
void flexcop_i2c_exit ( struct flexcop_device * fc ) ; 
/*--flexcop_i2c_exit--*/
int flexcop_sram_init ( struct flexcop_device * fc ) ; 
/*--flexcop_sram_init--*/
int flexcop_sram_set_dest ( struct flexcop_device * fc , flexcop_sram_dest_t dest , flexcop_sram_dest_target_t target ) ; 
/*--flexcop_sram_set_dest--*/
void flexcop_wan_set_speed ( struct flexcop_device * fc , flexcop_wan_speed_t s ) ; 
/*--flexcop_wan_set_speed--*/
void flexcop_sram_ctrl ( struct flexcop_device * fc , int usb_wan , int sramdma , int maximumfill ) ; 
/*--flexcop_sram_ctrl--*/
int flexcop_eeprom_check_mac_addr ( struct flexcop_device * fc , int extended ) ; 
/*--flexcop_eeprom_check_mac_addr--*/
void flexcop_determine_revision ( struct flexcop_device * fc ) ; 
/*--flexcop_determine_revision--*/
void flexcop_device_name ( struct flexcop_device * fc , const char * prefix , const char * suffix ) ; 
/*--flexcop_device_name--*/
void flexcop_dump_reg ( struct flexcop_device * fc , flexcop_ibi_register reg , int num ) ; 
/*--flexcop_dump_reg--*/
void flexcop_smc_ctrl ( struct flexcop_device * fc , int onoff ) ; 
/*--flexcop_smc_ctrl--*/
void flexcop_set_mac_filter ( struct flexcop_device * fc , u8 mac [ 6 ] ) ; 
/*--flexcop_set_mac_filter--*/
void flexcop_mac_filter_ctrl ( struct flexcop_device * fc , int onoff ) ; 
/*--flexcop_mac_filter_ctrl--*/
int flexcop_pid_feed_control ( struct flexcop_device * fc , struct dvb_demux_feed * dvbdmxfeed , int onoff ) ; 
/*--flexcop_pid_feed_control--*/
void flexcop_hw_filter_init ( struct flexcop_device * fc ) ; 
/*--flexcop_hw_filter_init--*/
int flexcop_dma_allocate ( struct pci_dev * pdev , struct flexcop_dma * dma , u32 size ) ; 
/*--flexcop_dma_allocate--*/
void flexcop_dma_free ( struct flexcop_dma * dma ) ; 
/*--flexcop_dma_free--*/
int flexcop_dma_config ( struct flexcop_device * fc , struct flexcop_dma * dma , flexcop_dma_index_t dma_idx ) ; 
/*--flexcop_dma_config--*/
int flexcop_dma_xfer_control ( struct flexcop_device * fc , flexcop_dma_index_t dma_idx , flexcop_dma_addr_index_t index , int onoff ) ; 
/*--flexcop_dma_xfer_control--*/
int flexcop_dma_control_size_irq ( struct flexcop_device * fc , flexcop_dma_index_t no , int onoff ) ; 
/*--flexcop_dma_control_size_irq--*/
int flexcop_dma_control_timer_irq ( struct flexcop_device * fc , flexcop_dma_index_t no , int onoff ) ; 
/*--flexcop_dma_control_timer_irq--*/
int flexcop_dma_config_timer ( struct flexcop_device * fc , flexcop_dma_index_t dma_idx , u8 cycles ) ; 
/*--flexcop_dma_config_timer--*/
void bt878_start ( struct bt878 * bt , u32 controlreg , u32 op_sync_orin , u32 irq_err_ignore ) ; 
/*--bt878_start--*/
void bt878_stop ( struct bt878 * bt ) ; 
/*--bt878_stop--*/
int bt878_device_control ( struct bt878 * bt , unsigned int cmd , union dst_gpio_packet * mp ) ; 
/*--bt878_device_control--*/
int rdc_reset_state ( struct dst_state * state ) ; 
/*--rdc_reset_state--*/
int dst_pio_disable ( struct dst_state * state ) ; 
/*--dst_pio_disable--*/
int dst_wait_dst_ready ( struct dst_state * state , u8 delay_mode ) ; 
/*--dst_wait_dst_ready--*/
int dst_error_recovery ( struct dst_state * state ) ; 
/*--dst_error_recovery--*/
int dst_error_bailout ( struct dst_state * state ) ; 
/*--dst_error_bailout--*/
int dst_comm_init ( struct dst_state * state ) ; 
/*--dst_comm_init--*/
int write_dst ( struct dst_state * state , u8 * data , u8 len ) ; 
/*--write_dst--*/
int read_dst ( struct dst_state * state , u8 * ret , u8 len ) ; 
/*--read_dst--*/
u8 dst_check_sum ( u8 * buf , u32 len ) ; 
/*--dst_check_sum--*/
struct dst_state * dst_attach ( struct dst_state * state , struct dvb_adapter * dvb_adapter ) ; 
/*--dst_attach--*/
struct dvb_device * dst_ca_attach ( struct dst_state * dst , struct dvb_adapter * dvb_adapter ) ; 
/*--dst_ca_attach--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) dm1105_ir_init ( struct dm1105_dev * dm1105 ) ; 
/*--dm1105_ir_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) dm1105_ir_exit ( struct dm1105_dev * dm1105 ) ; 
/*--dm1105_ir_exit--*/
int dvb_generic_open ( struct inode * inode , struct file * file ) ; 
/*--dvb_generic_open--*/
int dvb_generic_release ( struct inode * inode , struct file * file ) ; 
/*--dvb_generic_release--*/
long dvb_generic_ioctl ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--dvb_generic_ioctl--*/
int dvb_register_device ( struct dvb_adapter * adap , struct dvb_device * * pdvbdev , const struct dvb_device * template , void * priv , int type ) ; 
/*--dvb_register_device--*/
void dvb_unregister_device ( struct dvb_device * dvbdev ) ; 
/*--dvb_unregister_device--*/
int dvb_register_adapter ( struct dvb_adapter * adap , const char * name , struct module * module , struct device * device , short * adapter_nums ) ; 
/*--dvb_register_adapter--*/
int dvb_unregister_adapter ( struct dvb_adapter * adap ) ; 
/*--dvb_unregister_adapter--*/
int dvb_usercopy ( struct file * file , unsigned int cmd , unsigned long arg , int ( * func ) ( struct file * file , unsigned int cmd , void * arg ) ) ; 
/*--dvb_usercopy--*/
int dvb_dmxdev_init ( struct dmxdev * dmxdev , struct dvb_adapter * dvb_adapter ) ; 
/*--dvb_dmxdev_init--*/
void dvb_dmxdev_release ( struct dmxdev * dmxdev ) ; 
/*--dvb_dmxdev_release--*/
void dvb_dmx_swfilter_packets ( struct dvb_demux * demux , const u8 * buf , size_t count ) ; 
/*--dvb_dmx_swfilter_packets--*/
void dvb_dmx_swfilter ( struct dvb_demux * demux , const u8 * buf , size_t count ) ; 
/*--dvb_dmx_swfilter--*/
void dvb_dmx_swfilter_204 ( struct dvb_demux * demux , const u8 * buf , size_t count ) ; 
/*--dvb_dmx_swfilter_204--*/
int dvb_dmx_init ( struct dvb_demux * dvbdemux ) ; 
/*--dvb_dmx_init--*/
void dvb_dmx_release ( struct dvb_demux * dvbdemux ) ; 
/*--dvb_dmx_release--*/
int dvb_filter_get_ac3info ( u8 * mbuf , int count , struct dvb_audio_info * ai , int pr ) ; 
/*--dvb_filter_get_ac3info--*/
void dvb_filter_pes2ts_init ( struct dvb_filter_pes2ts * p2ts , unsigned short pid , dvb_filter_pes2ts_cb_t * cb , void * priv ) ; 
/*--dvb_filter_pes2ts_init--*/
int dvb_filter_pes2ts ( struct dvb_filter_pes2ts * p2ts , unsigned char * pes , int len , int payload_start ) ; 
/*--dvb_filter_pes2ts--*/
void dvb_ca_en50221_camchange_irq ( struct dvb_ca_en50221 * pubca , int slot , int change_type ) ; 
/*--dvb_ca_en50221_camchange_irq--*/
void dvb_ca_en50221_camready_irq ( struct dvb_ca_en50221 * pubca , int slot ) ; 
/*--dvb_ca_en50221_camready_irq--*/
void dvb_ca_en50221_frda_irq ( struct dvb_ca_en50221 * pubca , int slot ) ; 
/*--dvb_ca_en50221_frda_irq--*/
int dvb_ca_en50221_init ( struct dvb_adapter * dvb_adapter , struct dvb_ca_en50221 * pubca , int flags , int slot_count ) ; 
/*--dvb_ca_en50221_init--*/
void dvb_ca_en50221_release ( struct dvb_ca_en50221 * pubca ) ; 
/*--dvb_ca_en50221_release--*/
void dvb_frontend_reinitialise ( struct dvb_frontend * fe ) ; 
/*--dvb_frontend_reinitialise--*/
s32 timeval_usec_diff ( struct timeval lasttime , struct timeval curtime ) ; 
/*--timeval_usec_diff--*/
void dvb_frontend_sleep_until ( struct timeval * waketime , u32 add_usec ) ; 
/*--dvb_frontend_sleep_until--*/
int dvb_register_frontend ( struct dvb_adapter * dvb , struct dvb_frontend * fe ) ; 
/*--dvb_register_frontend--*/
int dvb_unregister_frontend ( struct dvb_frontend * fe ) ; 
/*--dvb_unregister_frontend--*/
void dvb_frontend_detach ( struct dvb_frontend * fe ) ; 
/*--dvb_frontend_detach--*/
void dvb_net_release ( struct dvb_net * dvbnet ) ; 
/*--dvb_net_release--*/
int dvb_net_init ( struct dvb_adapter * adap , struct dvb_net * dvbnet , struct dmx_demux * dmx ) ; 
/*--dvb_net_init--*/
void dvb_ringbuffer_init ( struct dvb_ringbuffer * rbuf , void * data , size_t len ) ; 
/*--dvb_ringbuffer_init--*/
int dvb_ringbuffer_empty ( struct dvb_ringbuffer * rbuf ) ; 
/*--dvb_ringbuffer_empty--*/
ssize_t dvb_ringbuffer_free ( struct dvb_ringbuffer * rbuf ) ; 
/*--dvb_ringbuffer_free--*/
ssize_t dvb_ringbuffer_avail ( struct dvb_ringbuffer * rbuf ) ; 
/*--dvb_ringbuffer_avail--*/
void dvb_ringbuffer_flush ( struct dvb_ringbuffer * rbuf ) ; 
/*--dvb_ringbuffer_flush--*/
void dvb_ringbuffer_reset ( struct dvb_ringbuffer * rbuf ) ; 
/*--dvb_ringbuffer_reset--*/
void dvb_ringbuffer_flush_spinlock_wakeup ( struct dvb_ringbuffer * rbuf ) ; 
/*--dvb_ringbuffer_flush_spinlock_wakeup--*/
ssize_t dvb_ringbuffer_read_user ( struct dvb_ringbuffer * rbuf , u8 * buf , size_t len ) ; 
/*--dvb_ringbuffer_read_user--*/
void dvb_ringbuffer_read ( struct dvb_ringbuffer * rbuf , u8 * buf , size_t len ) ; 
/*--dvb_ringbuffer_read--*/
ssize_t dvb_ringbuffer_write ( struct dvb_ringbuffer * rbuf , const u8 * buf , size_t len ) ; 
/*--dvb_ringbuffer_write--*/
ssize_t dvb_ringbuffer_pkt_write ( struct dvb_ringbuffer * rbuf , u8 * buf , size_t len ) ; 
/*--dvb_ringbuffer_pkt_write--*/
ssize_t dvb_ringbuffer_pkt_read_user ( struct dvb_ringbuffer * rbuf , size_t idx , int offset , u8 * buf , size_t len ) ; 
/*--dvb_ringbuffer_pkt_read_user--*/
ssize_t dvb_ringbuffer_pkt_read ( struct dvb_ringbuffer * rbuf , size_t idx , int offset , u8 * buf , size_t len ) ; 
/*--dvb_ringbuffer_pkt_read--*/
void dvb_ringbuffer_pkt_dispose ( struct dvb_ringbuffer * rbuf , size_t idx ) ; 
/*--dvb_ringbuffer_pkt_dispose--*/
ssize_t dvb_ringbuffer_pkt_next ( struct dvb_ringbuffer * rbuf , size_t idx , size_t * pktlen ) ; 
/*--dvb_ringbuffer_pkt_next--*/
unsigned int intlog2 ( u32 value ) ; 
/*--intlog2--*/
unsigned int intlog10 ( u32 value ) ; 
/*--intlog10--*/
int af9005_rc_decode ( struct dvb_usb_device * d , u8 * data , int len , u32 * event , int * state ) ; 
/*--af9005_rc_decode--*/
int af9005_read_ofdm_register ( struct dvb_usb_device * d , u16 reg , u8 * value ) ; 
/*--af9005_read_ofdm_register--*/
int af9005_read_ofdm_registers ( struct dvb_usb_device * d , u16 reg , u8 * values , int len ) ; 
/*--af9005_read_ofdm_registers--*/
int af9005_write_ofdm_register ( struct dvb_usb_device * d , u16 reg , u8 value ) ; 
/*--af9005_write_ofdm_register--*/
int af9005_write_ofdm_registers ( struct dvb_usb_device * d , u16 reg , u8 * values , int len ) ; 
/*--af9005_write_ofdm_registers--*/
int af9005_read_register_bits ( struct dvb_usb_device * d , u16 reg , u8 pos , u8 len , u8 * value ) ; 
/*--af9005_read_register_bits--*/
int af9005_write_register_bits ( struct dvb_usb_device * d , u16 reg , u8 pos , u8 len , u8 value ) ; 
/*--af9005_write_register_bits--*/
int af9005_write_tuner_registers ( struct dvb_usb_device * d , u16 reg , u8 * values , int len ) ; 
/*--af9005_write_tuner_registers--*/
int af9005_read_tuner_registers ( struct dvb_usb_device * d , u16 reg , u8 addr , u8 * values , int len ) ; 
/*--af9005_read_tuner_registers--*/
int af9005_send_command ( struct dvb_usb_device * d , u8 command , u8 * wbuf , int wlen , u8 * rbuf , int rlen ) ; 
/*--af9005_send_command--*/
int af9005_read_eeprom ( struct dvb_usb_device * d , u8 address , u8 * values , int len ) ; 
/*--af9005_read_eeprom--*/
int af9005_led_control ( struct dvb_usb_device * d , int onoff ) ; 
/*--af9005_led_control--*/
struct dvb_frontend * af9005_fe_attach ( struct dvb_usb_device * d ) ; 
/*--af9005_fe_attach--*/
struct dvb_frontend * cinergyt2_fe_attach ( struct dvb_usb_device * d ) ; 
/*--cinergyt2_fe_attach--*/
int dib0700_get_version ( struct dvb_usb_device * d , u32 * hwversion , u32 * romversion , u32 * ramversion , u32 * fwtype ) ; 
/*--dib0700_get_version--*/
int dib0700_ctrl_rd ( struct dvb_usb_device * d , u8 * tx , u8 txlen , u8 * rx , u8 rxlen ) ; 
/*--dib0700_ctrl_rd--*/
int dib0700_set_gpio ( struct dvb_usb_device * d , enum dib07x0_gpios gpio , u8 gpio_dir , u8 gpio_val ) ; 
/*--dib0700_set_gpio--*/
int dib0700_identify_state ( struct usb_device * udev , struct dvb_usb_device_properties * props , struct dvb_usb_device_description * * desc , int * cold ) ; 
/*--dib0700_identify_state--*/
int dib0700_ctrl_clock ( struct dvb_usb_device * d , u32 clk_MHz , u8 clock_out_gp3 ) ; 
/*--dib0700_ctrl_clock--*/
int dib0700_download_firmware ( struct usb_device * udev , const struct firmware * fw ) ; 
/*--dib0700_download_firmware--*/
int dib0700_streaming_ctrl ( struct dvb_usb_adapter * adap , int onoff ) ; 
/*--dib0700_streaming_ctrl--*/
int dib0700_rc_setup ( struct dvb_usb_device * d ) ; 
/*--dib0700_rc_setup--*/
int dibusb_streaming_ctrl ( struct dvb_usb_adapter * adap , int onoff ) ; 
/*--dibusb_streaming_ctrl--*/
int dibusb_pid_filter ( struct dvb_usb_adapter * adap , int index , u16 pid , int onoff ) ; 
/*--dibusb_pid_filter--*/
int dibusb_pid_filter_ctrl ( struct dvb_usb_adapter * adap , int onoff ) ; 
/*--dibusb_pid_filter_ctrl--*/
int dibusb_power_ctrl ( struct dvb_usb_device * d , int onoff ) ; 
/*--dibusb_power_ctrl--*/
int dibusb2_0_streaming_ctrl ( struct dvb_usb_adapter * adap , int onoff ) ; 
/*--dibusb2_0_streaming_ctrl--*/
int dibusb2_0_power_ctrl ( struct dvb_usb_device * d , int onoff ) ; 
/*--dibusb2_0_power_ctrl--*/
int dibusb_read_eeprom_byte ( struct dvb_usb_device * d , u8 offs , u8 * val ) ; 
/*--dibusb_read_eeprom_byte--*/
int dibusb_dib3000mc_frontend_attach ( struct dvb_usb_adapter * adap ) ; 
/*--dibusb_dib3000mc_frontend_attach--*/
int dibusb_dib3000mc_tuner_attach ( struct dvb_usb_adapter * adap ) ; 
/*--dibusb_dib3000mc_tuner_attach--*/
int dibusb_rc_query ( struct dvb_usb_device * d , u32 * event , int * state ) ; 
/*--dibusb_rc_query--*/
struct dvb_frontend * dtt200u_fe_attach ( struct dvb_usb_device * d ) ; 
/*--dtt200u_fe_attach--*/
struct dvb_frontend * jdvbt90502_attach ( struct dvb_usb_device * d ) ; 
/*--jdvbt90502_attach--*/
int gp8psk_usb_in_op ( struct dvb_usb_device * d , u8 req , u16 value , u16 index , u8 * b , int blen ) ; 
/*--gp8psk_usb_in_op--*/
int gp8psk_usb_out_op ( struct dvb_usb_device * d , u8 req , u16 value , u16 index , u8 * b , int blen ) ; 
/*--gp8psk_usb_out_op--*/
int gp8psk_bcm4500_reload ( struct dvb_usb_device * d ) ; 
/*--gp8psk_bcm4500_reload--*/
struct dvb_frontend * gp8psk_fe_attach ( struct dvb_usb_device * d ) ; 
/*--gp8psk_fe_attach--*/
int vp702x_usb_in_op ( struct dvb_usb_device * d , u8 req , u16 value , u16 index , u8 * b , int blen ) ; 
/*--vp702x_usb_in_op--*/
int vp702x_usb_inout_op ( struct dvb_usb_device * d , u8 * o , int olen , u8 * i , int ilen , int msec ) ; 
/*--vp702x_usb_inout_op--*/
struct dvb_frontend * vp702x_fe_attach ( struct dvb_usb_device * d ) ; 
/*--vp702x_fe_attach--*/
int vp7045_usb_op ( struct dvb_usb_device * d , u8 cmd , u8 * out , int outlen , u8 * in , int inlen , int msec ) ; 
/*--vp7045_usb_op--*/
u8 vp7045_read_reg ( struct dvb_usb_device * d , u8 reg ) ; 
/*--vp7045_read_reg--*/
struct dvb_frontend * vp7045_fe_attach ( struct dvb_usb_device * d ) ; 
/*--vp7045_fe_attach--*/
int usb_cypress_load_firmware ( struct usb_device * udev , const struct firmware * fw , int type ) ; 
/*--usb_cypress_load_firmware--*/
int dvb_usb_download_firmware ( struct usb_device * udev , struct dvb_usb_device_properties * props ) ; 
/*--dvb_usb_download_firmware--*/
int dvb_usb_get_hexline ( const struct firmware * fw , struct hexline * hx , int * pos ) ; 
/*--dvb_usb_get_hexline--*/
int dvb_usb_device_power_ctrl ( struct dvb_usb_device * d , int onoff ) ; 
/*--dvb_usb_device_power_ctrl--*/
int dvb_usb_device_init ( struct usb_interface * intf , struct dvb_usb_device_properties * props , struct module * owner , struct dvb_usb_device * * du , short * adapter_nums ) ; 
/*--dvb_usb_device_init--*/
void dvb_usb_device_exit ( struct usb_interface * intf ) ; 
/*--dvb_usb_device_exit--*/
int dvb_usb_generic_rw ( struct dvb_usb_device * d , u8 * wbuf , u16 wlen , u8 * rbuf , u16 rlen , int delay_ms ) ; 
/*--dvb_usb_generic_rw--*/
int dvb_usb_generic_write ( struct dvb_usb_device * d , u8 * buf , u16 len ) ; 
/*--dvb_usb_generic_write--*/
int dvb_usb_adapter_stream_init ( struct dvb_usb_adapter * adap ) ; 
/*--dvb_usb_adapter_stream_init--*/
int dvb_usb_adapter_stream_exit ( struct dvb_usb_adapter * adap ) ; 
/*--dvb_usb_adapter_stream_exit--*/
int dvb_usb_i2c_init ( struct dvb_usb_device * d ) ; 
/*--dvb_usb_i2c_init--*/
int dvb_usb_i2c_exit ( struct dvb_usb_device * d ) ; 
/*--dvb_usb_i2c_exit--*/
int dvb_usb_adapter_dvb_init ( struct dvb_usb_adapter * adap , short * adapter_nums ) ; 
/*--dvb_usb_adapter_dvb_init--*/
int dvb_usb_adapter_dvb_exit ( struct dvb_usb_adapter * adap ) ; 
/*--dvb_usb_adapter_dvb_exit--*/
int dvb_usb_adapter_frontend_init ( struct dvb_usb_adapter * adap ) ; 
/*--dvb_usb_adapter_frontend_init--*/
int dvb_usb_adapter_frontend_exit ( struct dvb_usb_adapter * adap ) ; 
/*--dvb_usb_adapter_frontend_exit--*/
int dvb_usb_remote_init ( struct dvb_usb_device * d ) ; 
/*--dvb_usb_remote_init--*/
int dvb_usb_remote_exit ( struct dvb_usb_device * d ) ; 
/*--dvb_usb_remote_exit--*/
int dvb_usb_nec_rc_key_to_event ( struct dvb_usb_device * d , u8 keybuf [ 5 ] , u32 * event , int * state ) ; 
/*--dvb_usb_nec_rc_key_to_event--*/
int usb_urb_kill ( struct usb_data_stream * stream ) ; 
/*--usb_urb_kill--*/
int usb_urb_submit ( struct usb_data_stream * stream ) ; 
/*--usb_urb_submit--*/
int usb_urb_init ( struct usb_data_stream * stream , struct usb_data_stream_properties * props ) ; 
/*--usb_urb_init--*/
int usb_urb_exit ( struct usb_data_stream * stream ) ; 
/*--usb_urb_exit--*/
int avc_recv ( struct firedtv * fdtv , void * data , size_t length ) ; 
/*--avc_recv--*/
int avc_tuner_dsd ( struct firedtv * fdtv , struct dvb_frontend_parameters * params ) ; 
/*--avc_tuner_dsd--*/
int avc_tuner_set_pids ( struct firedtv * fdtv , unsigned char pidc , u16 pid [ ] ) ; 
/*--avc_tuner_set_pids--*/
int avc_tuner_get_ts ( struct firedtv * fdtv ) ; 
/*--avc_tuner_get_ts--*/
int avc_identify_subunit ( struct firedtv * fdtv ) ; 
/*--avc_identify_subunit--*/
int avc_tuner_status ( struct firedtv * fdtv , struct firedtv_tuner_status * stat ) ; 
/*--avc_tuner_status--*/
int avc_lnb_control ( struct firedtv * fdtv , char voltage , char burst , char conttone , char nrdiseq , struct dvb_diseqc_master_cmd * diseqcmd ) ; 
/*--avc_lnb_control--*/
int avc_register_remote_control ( struct firedtv * fdtv ) ; 
/*--avc_register_remote_control--*/
void avc_remote_ctrl_work ( struct work_struct * work ) ; 
/*--avc_remote_ctrl_work--*/
int avc_ca_app_info ( struct firedtv * fdtv , char * app_info , unsigned int * len ) ; 
/*--avc_ca_app_info--*/
int avc_ca_info ( struct firedtv * fdtv , char * app_info , unsigned int * len ) ; 
/*--avc_ca_info--*/
int avc_ca_reset ( struct firedtv * fdtv ) ; 
/*--avc_ca_reset--*/
int avc_ca_pmt ( struct firedtv * fdtv , char * msg , int length ) ; 
/*--avc_ca_pmt--*/
int avc_ca_get_time_date ( struct firedtv * fdtv , int * interval ) ; 
/*--avc_ca_get_time_date--*/
int avc_ca_enter_menu ( struct firedtv * fdtv ) ; 
/*--avc_ca_enter_menu--*/
int avc_ca_get_mmi ( struct firedtv * fdtv , char * mmi_object , unsigned int * len ) ; 
/*--avc_ca_get_mmi--*/
int cmp_establish_pp_connection ( struct firedtv * fdtv , int plug , int channel ) ; 
/*--cmp_establish_pp_connection--*/
void cmp_break_pp_connection ( struct firedtv * fdtv , int plug , int channel ) ; 
/*--cmp_break_pp_connection--*/
int fdtv_ca_register ( struct firedtv * fdtv ) ; 
/*--fdtv_ca_register--*/
void fdtv_ca_release ( struct firedtv * fdtv ) ; 
/*--fdtv_ca_release--*/
int fdtv_start_feed ( struct dvb_demux_feed * dvbdmxfeed ) ; 
/*--fdtv_start_feed--*/
int fdtv_stop_feed ( struct dvb_demux_feed * dvbdmxfeed ) ; 
/*--fdtv_stop_feed--*/
int fdtv_dvb_register ( struct firedtv * fdtv ) ; 
/*--fdtv_dvb_register--*/
void fdtv_dvb_unregister ( struct firedtv * fdtv ) ; 
/*--fdtv_dvb_unregister--*/
struct firedtv * fdtv_alloc ( struct device * dev , const struct firedtv_backend * backend , const char * name , size_t name_len ) ; 
/*--fdtv_alloc--*/
void fdtv_frontend_init ( struct firedtv * fdtv ) ; 
/*--fdtv_frontend_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) fdtv_fw_init ( void ) ; 
/*--fdtv_fw_init--*/
void fdtv_fw_exit ( void ) ; 
/*--fdtv_fw_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) fdtv_1394_init ( void ) ; 
/*--fdtv_1394_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) fdtv_1394_exit ( void ) ; 
/*--fdtv_1394_exit--*/
int fdtv_register_rc ( struct firedtv * fdtv , struct device * dev ) ; 
/*--fdtv_register_rc--*/
void fdtv_unregister_rc ( struct firedtv * fdtv ) ; 
/*--fdtv_unregister_rc--*/
void fdtv_handle_rc ( struct firedtv * fdtv , unsigned int code ) ; 
/*--fdtv_handle_rc--*/
struct dvb_frontend * dvb_pll_attach ( struct dvb_frontend * fe , int pll_addr , struct i2c_adapter * i2c , unsigned int pll_desc_id ) ; 
/*--dvb_pll_attach--*/
struct dvb_frontend * stv0299_attach ( const struct stv0299_config * config , struct i2c_adapter * i2c ) ; 
/*--stv0299_attach--*/
int au8522_writereg ( struct au8522_state * state , u16 reg , u8 data ) ; 
/*--au8522_writereg--*/
u8 au8522_readreg ( struct au8522_state * state , u16 reg ) ; 
/*--au8522_readreg--*/
int au8522_init ( struct dvb_frontend * fe ) ; 
/*--au8522_init--*/
int au8522_sleep ( struct dvb_frontend * fe ) ; 
/*--au8522_sleep--*/
int au8522_get_state ( struct au8522_state * * state , struct i2c_adapter * i2c , u8 client_address ) ; 
/*--au8522_get_state--*/
void au8522_release_state ( struct au8522_state * state ) ; 
/*--au8522_release_state--*/
struct dvb_frontend * au8522_attach ( const struct au8522_config * config , struct i2c_adapter * i2c ) ; 
/*--au8522_attach--*/
int stb0899_read_reg ( struct stb0899_state * state , unsigned int reg ) ; 
/*--stb0899_read_reg--*/
u32 _stb0899_read_s2reg ( struct stb0899_state * state , u32 stb0899_i2cdev , u32 stb0899_base_addr , u16 stb0899_reg_offset ) ; 
/*--_stb0899_read_s2reg--*/
int stb0899_write_s2reg ( struct stb0899_state * state , u32 stb0899_i2cdev , u32 stb0899_base_addr , u16 stb0899_reg_offset , u32 stb0899_data ) ; 
/*--stb0899_write_s2reg--*/
int stb0899_read_regs ( struct stb0899_state * state , unsigned int reg , u8 * buf , u32 count ) ; 
/*--stb0899_read_regs--*/
int stb0899_write_regs ( struct stb0899_state * state , unsigned int reg , u8 * data , u32 count ) ; 
/*--stb0899_write_regs--*/
int stb0899_write_reg ( struct stb0899_state * state , unsigned int reg , u8 data ) ; 
/*--stb0899_write_reg--*/
int stb0899_i2c_gate_ctrl ( struct dvb_frontend * fe , int enable ) ; 
/*--stb0899_i2c_gate_ctrl--*/
int stb0899_get_dev_id ( struct stb0899_state * state ) ; 
/*--stb0899_get_dev_id--*/
struct dvb_frontend * stb0899_attach ( struct stb0899_config * config , struct i2c_adapter * i2c ) ; 
/*--stb0899_attach--*/
long stb0899_carr_width ( struct stb0899_state * state ) ; 
/*--stb0899_carr_width--*/
enum stb0899_status stb0899_dvbs_algo ( struct stb0899_state * state ) ; 
/*--stb0899_dvbs_algo--*/
enum stb0899_status stb0899_dvbs2_algo ( struct stb0899_state * state ) ; 
/*--stb0899_dvbs2_algo--*/
s32 ge2comp ( s32 a , s32 width ) ; 
/*--ge2comp--*/
void stv0900_write_reg ( struct stv0900_internal * intp , u16 reg_addr , u8 reg_data ) ; 
/*--stv0900_write_reg--*/
u8 stv0900_read_reg ( struct stv0900_internal * intp , u16 reg ) ; 
/*--stv0900_read_reg--*/
void stv0900_write_bits ( struct stv0900_internal * intp , u32 label , u8 val ) ; 
/*--stv0900_write_bits--*/
u8 stv0900_get_bits ( struct stv0900_internal * intp , u32 label ) ; 
/*--stv0900_get_bits--*/
void stv0900_set_tuner ( struct dvb_frontend * fe , u32 frequency , u32 bandwidth ) ; 
/*--stv0900_set_tuner--*/
void stv0900_set_bandwidth ( struct dvb_frontend * fe , u32 bandwidth ) ; 
/*--stv0900_set_bandwidth--*/
u32 stv0900_get_freq_auto ( struct stv0900_internal * intp , int demod ) ; 
/*--stv0900_get_freq_auto--*/
void stv0900_set_tuner_auto ( struct stv0900_internal * intp , u32 Frequency , u32 Bandwidth , int demod ) ; 
/*--stv0900_set_tuner_auto--*/
int stv0900_get_demod_lock ( struct stv0900_internal * intp , enum fe_stv0900_demod_num demod , s32 time_out ) ; 
/*--stv0900_get_demod_lock--*/
void stv0900_stop_all_s2_modcod ( struct stv0900_internal * intp , enum fe_stv0900_demod_num demod ) ; 
/*--stv0900_stop_all_s2_modcod--*/
void stv0900_activate_s2_modcod ( struct stv0900_internal * intp , enum fe_stv0900_demod_num demod ) ; 
/*--stv0900_activate_s2_modcod--*/
void stv0900_activate_s2_modcod_single ( struct stv0900_internal * intp , enum fe_stv0900_demod_num demod ) ; 
/*--stv0900_activate_s2_modcod_single--*/
void stv0900_start_search ( struct stv0900_internal * intp , enum fe_stv0900_demod_num demod ) ; 
/*--stv0900_start_search--*/
u8 stv0900_get_optim_carr_loop ( s32 srate , enum fe_stv0900_modcode modcode , s32 pilot , u8 chip_id ) ; 
/*--stv0900_get_optim_carr_loop--*/
u8 stv0900_get_optim_short_carr_loop ( s32 srate , enum fe_stv0900_modulation modulation , u8 chip_id ) ; 
/*--stv0900_get_optim_short_carr_loop--*/
struct dvb_frontend * stv0900_attach ( const struct stv0900_config * config , struct i2c_adapter * i2c , int demod ) ; 
/*--stv0900_attach--*/
s32 shiftx ( s32 x , int demod , s32 shift ) ; 
/*--shiftx--*/
int stv0900_check_signal_presence ( struct stv0900_internal * intp , enum fe_stv0900_demod_num demod ) ; 
/*--stv0900_check_signal_presence--*/
enum fe_stv0900_tracking_standard stv0900_get_standard ( struct dvb_frontend * fe , enum fe_stv0900_demod_num demod ) ; 
/*--stv0900_get_standard--*/
enum fe_stv0900_signal_type stv0900_algo ( struct dvb_frontend * fe ) ; 
/*--stv0900_algo--*/
struct dvb_frontend * stb6100_attach ( struct dvb_frontend * fe , struct stb6100_config * config , struct i2c_adapter * i2c ) ; 
/*--stb6100_attach--*/
struct dvb_frontend * sp8870_attach ( const struct sp8870_config * config , struct i2c_adapter * i2c ) ; 
/*--sp8870_attach--*/
struct dvb_frontend * cx22700_attach ( const struct cx22700_config * config , struct i2c_adapter * i2c ) ; 
/*--cx22700_attach--*/
struct dvb_frontend * cx24110_attach ( const struct cx24110_config * config , struct i2c_adapter * i2c ) ; 
/*--cx24110_attach--*/
struct dvb_frontend * tda8083_attach ( const struct tda8083_config * config , struct i2c_adapter * i2c ) ; 
/*--tda8083_attach--*/
struct dvb_frontend * l64781_attach ( const struct l64781_config * config , struct i2c_adapter * i2c ) ; 
/*--l64781_attach--*/
struct dvb_frontend * dib3000mb_attach ( const struct dib3000_config * config , struct i2c_adapter * i2c , struct dib_fe_xfer_ops * xfer_ops ) ; 
/*--dib3000mb_attach--*/
struct i2c_adapter * dib3000mc_get_tuner_i2c_master ( struct dvb_frontend * demod , int gating ) ; 
/*--dib3000mc_get_tuner_i2c_master--*/
int dib3000mc_pid_control ( struct dvb_frontend * fe , int index , int pid , int onoff ) ; 
/*--dib3000mc_pid_control--*/
int dib3000mc_pid_parse ( struct dvb_frontend * fe , int onoff ) ; 
/*--dib3000mc_pid_parse--*/
void dib3000mc_set_config ( struct dvb_frontend * fe , struct dib3000mc_config * cfg ) ; 
/*--dib3000mc_set_config--*/
int dib3000mc_i2c_enumeration ( struct i2c_adapter * i2c , int no_of_demods , u8 default_addr , struct dib3000mc_config cfg [ ] ) ; 
/*--dib3000mc_i2c_enumeration--*/
struct dvb_frontend * dib3000mc_attach ( struct i2c_adapter * i2c_adap , u8 i2c_addr , struct dib3000mc_config * cfg ) ; 
/*--dib3000mc_attach--*/
struct i2c_adapter * dibx000_get_i2c_adapter ( struct dibx000_i2c_master * mst , enum dibx000_i2c_interface intf , int gating ) ; 
/*--dibx000_get_i2c_adapter--*/
void dibx000_reset_i2c_master ( struct dibx000_i2c_master * mst ) ; 
/*--dibx000_reset_i2c_master--*/
int dibx000_init_i2c_master ( struct dibx000_i2c_master * mst , u16 device_rev , struct i2c_adapter * i2c_adap , u8 i2c_addr ) ; 
/*--dibx000_init_i2c_master--*/
void dibx000_exit_i2c_master ( struct dibx000_i2c_master * mst ) ; 
/*--dibx000_exit_i2c_master--*/
u32 systime ( void ) ; 
/*--systime--*/
struct i2c_adapter * dib7000m_get_i2c_master ( struct dvb_frontend * demod , enum dibx000_i2c_interface intf , int gating ) ; 
/*--dib7000m_get_i2c_master--*/
struct dvb_frontend * dib7000m_attach ( struct i2c_adapter * i2c_adap , u8 i2c_addr , struct dib7000m_config * cfg ) ; 
/*--dib7000m_attach--*/
int dib7000p_set_wbd_ref ( struct dvb_frontend * demod , u16 value ) ; 
/*--dib7000p_set_wbd_ref--*/
int dib7000p_set_gpio ( struct dvb_frontend * demod , u8 num , u8 dir , u8 val ) ; 
/*--dib7000p_set_gpio--*/
int dib7000pc_detection ( struct i2c_adapter * i2c_adap ) ; 
/*--dib7000pc_detection--*/
struct i2c_adapter * dib7000p_get_i2c_master ( struct dvb_frontend * demod , enum dibx000_i2c_interface intf , int gating ) ; 
/*--dib7000p_get_i2c_master--*/
int dib7000p_pid_filter_ctrl ( struct dvb_frontend * fe , u8 onoff ) ; 
/*--dib7000p_pid_filter_ctrl--*/
int dib7000p_pid_filter ( struct dvb_frontend * fe , u8 id , u16 pid , u8 onoff ) ; 
/*--dib7000p_pid_filter--*/
int dib7000p_i2c_enumeration ( struct i2c_adapter * i2c , int no_of_demods , u8 default_addr , struct dib7000p_config cfg [ ] ) ; 
/*--dib7000p_i2c_enumeration--*/
struct dvb_frontend * dib7000p_attach ( struct i2c_adapter * i2c_adap , u8 i2c_addr , struct dib7000p_config * cfg ) ; 
/*--dib7000p_attach--*/
int dib8000_set_wbd_ref ( struct dvb_frontend * fe , u16 value ) ; 
/*--dib8000_set_wbd_ref--*/
int dib8000_set_gpio ( struct dvb_frontend * fe , u8 num , u8 dir , u8 val ) ; 
/*--dib8000_set_gpio--*/
void dib8000_pwm_agc_reset ( struct dvb_frontend * fe ) ; 
/*--dib8000_pwm_agc_reset--*/
int32_t dib8000_get_adc_power ( struct dvb_frontend * fe , uint8_t mode ) ; 
/*--dib8000_get_adc_power--*/
enum frontend_tune_state dib8000_get_tune_state ( struct dvb_frontend * fe ) ; 
/*--dib8000_get_tune_state--*/
int dib8000_set_tune_state ( struct dvb_frontend * fe , enum frontend_tune_state tune_state ) ; 
/*--dib8000_set_tune_state--*/
int dib8000_i2c_enumeration ( struct i2c_adapter * host , int no_of_demods , u8 default_addr , u8 first_addr ) ; 
/*--dib8000_i2c_enumeration--*/
struct i2c_adapter * dib8000_get_i2c_master ( struct dvb_frontend * fe , enum dibx000_i2c_interface intf , int gating ) ; 
/*--dib8000_get_i2c_master--*/
int dib8000_pid_filter_ctrl ( struct dvb_frontend * fe , u8 onoff ) ; 
/*--dib8000_pid_filter_ctrl--*/
int dib8000_pid_filter ( struct dvb_frontend * fe , u8 id , u16 pid , u8 onoff ) ; 
/*--dib8000_pid_filter--*/
struct dvb_frontend * dib8000_attach ( struct i2c_adapter * i2c_adap , u8 i2c_addr , struct dib8000_config * cfg ) ; 
/*--dib8000_attach--*/
struct dvb_frontend * mt312_attach ( const struct mt312_config * config , struct i2c_adapter * i2c ) ; 
/*--mt312_attach--*/
struct dvb_frontend * ves1820_attach ( const struct ves1820_config * config , struct i2c_adapter * i2c , u8 pwm ) ; 
/*--ves1820_attach--*/
struct dvb_frontend * ves1x93_attach ( const struct ves1x93_config * config , struct i2c_adapter * i2c ) ; 
/*--ves1x93_attach--*/
struct dvb_frontend * tda10045_attach ( const struct tda1004x_config * config , struct i2c_adapter * i2c ) ; 
/*--tda10045_attach--*/
struct dvb_frontend * tda10046_attach ( const struct tda1004x_config * config , struct i2c_adapter * i2c ) ; 
/*--tda10046_attach--*/
struct dvb_frontend * sp887x_attach ( const struct sp887x_config * config , struct i2c_adapter * i2c ) ; 
/*--sp887x_attach--*/
struct dvb_frontend * nxt6000_attach ( const struct nxt6000_config * config , struct i2c_adapter * i2c ) ; 
/*--nxt6000_attach--*/
struct dvb_frontend * mt352_attach ( const struct mt352_config * config , struct i2c_adapter * i2c ) ; 
/*--mt352_attach--*/
struct dvb_frontend * zl10036_attach ( struct dvb_frontend * fe , const struct zl10036_config * config , struct i2c_adapter * i2c ) ; 
/*--zl10036_attach--*/
struct dvb_frontend * zl10039_attach ( struct dvb_frontend * fe , u8 i2c_addr , struct i2c_adapter * i2c ) ; 
/*--zl10039_attach--*/
struct dvb_frontend * zl10353_attach ( const struct zl10353_config * config , struct i2c_adapter * i2c ) ; 
/*--zl10353_attach--*/
struct dvb_frontend * cx22702_attach ( const struct cx22702_config * config , struct i2c_adapter * i2c ) ; 
/*--cx22702_attach--*/
struct dvb_frontend * tda10021_attach ( const struct tda1002x_config * config , struct i2c_adapter * i2c , u8 pwm ) ; 
/*--tda10021_attach--*/
struct dvb_frontend * tda10023_attach ( const struct tda10023_config * config , struct i2c_adapter * i2c , u8 pwm ) ; 
/*--tda10023_attach--*/
struct dvb_frontend * stv0297_attach ( const struct stv0297_config * config , struct i2c_adapter * i2c ) ; 
/*--stv0297_attach--*/
struct dvb_frontend * nxt200x_attach ( const struct nxt200x_config * config , struct i2c_adapter * i2c ) ; 
/*--nxt200x_attach--*/
struct dvb_frontend * or51211_attach ( const struct or51211_config * config , struct i2c_adapter * i2c ) ; 
/*--or51211_attach--*/
struct dvb_frontend * or51132_attach ( const struct or51132_config * config , struct i2c_adapter * i2c ) ; 
/*--or51132_attach--*/
struct dvb_frontend * bcm3510_attach ( const struct bcm3510_config * config , struct i2c_adapter * i2c ) ; 
/*--bcm3510_attach--*/
struct i2c_adapter * s5h1420_get_tuner_i2c_adapter ( struct dvb_frontend * fe ) ; 
/*--s5h1420_get_tuner_i2c_adapter--*/
struct dvb_frontend * s5h1420_attach ( const struct s5h1420_config * config , struct i2c_adapter * i2c ) ; 
/*--s5h1420_attach--*/
struct dvb_frontend * lgdt330x_attach ( const struct lgdt330x_config * config , struct i2c_adapter * i2c ) ; 
/*--lgdt330x_attach--*/
struct dvb_frontend * lgdt3305_attach ( const struct lgdt3305_config * config , struct i2c_adapter * i2c_adap ) ; 
/*--lgdt3305_attach--*/
struct i2c_adapter * cx24123_get_tuner_i2c_adapter ( struct dvb_frontend * fe ) ; 
/*--cx24123_get_tuner_i2c_adapter--*/
struct dvb_frontend * cx24123_attach ( const struct cx24123_config * config , struct i2c_adapter * i2c ) ; 
/*--cx24123_attach--*/
struct dvb_frontend * lnbh24_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , u8 override_set , u8 override_clear , u8 i2c_addr ) ; 
/*--lnbh24_attach--*/
struct dvb_frontend * lnbp21_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , u8 override_set , u8 override_clear ) ; 
/*--lnbp21_attach--*/
struct dvb_frontend * isl6405_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , u8 i2c_addr , u8 override_set , u8 override_clear ) ; 
/*--isl6405_attach--*/
struct dvb_frontend * isl6421_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , u8 i2c_addr , u8 override_set , u8 override_clear ) ; 
/*--isl6421_attach--*/
struct dvb_frontend * tda10086_attach ( const struct tda10086_config * config , struct i2c_adapter * i2c ) ; 
/*--tda10086_attach--*/
struct dvb_frontend * tda826x_attach ( struct dvb_frontend * fe , int addr , struct i2c_adapter * i2c , int has_loopthrough ) ; 
/*--tda826x_attach--*/
struct dvb_frontend * tda8261_attach ( struct dvb_frontend * fe , const struct tda8261_config * config , struct i2c_adapter * i2c ) ; 
/*--tda8261_attach--*/
void dib0070_ctrl_agc_filter ( struct dvb_frontend * fe , u8 open ) ; 
/*--dib0070_ctrl_agc_filter--*/
u8 dib0070_get_rf_output ( struct dvb_frontend * fe ) ; 
/*--dib0070_get_rf_output--*/
int dib0070_set_rf_output ( struct dvb_frontend * fe , u8 no ) ; 
/*--dib0070_set_rf_output--*/
u16 dib0070_wbd_offset ( struct dvb_frontend * fe ) ; 
/*--dib0070_wbd_offset--*/
struct dvb_frontend * dib0070_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct dib0070_config * cfg ) ; 
/*--dib0070_attach--*/
void dib0090_dcc_freq ( struct dvb_frontend * fe , u8 fast ) ; 
/*--dib0090_dcc_freq--*/
void dib0090_pwm_gain_reset ( struct dvb_frontend * fe ) ; 
/*--dib0090_pwm_gain_reset--*/
int dib0090_gain_control ( struct dvb_frontend * fe ) ; 
/*--dib0090_gain_control--*/
void dib0090_get_current_gain ( struct dvb_frontend * fe , u16 * rf , u16 * bb , u16 * rf_gain_limit , u16 * rflt ) ; 
/*--dib0090_get_current_gain--*/
u16 dib0090_get_wbd_offset ( struct dvb_frontend * tuner ) ; 
/*--dib0090_get_wbd_offset--*/
enum frontend_tune_state dib0090_get_tune_state ( struct dvb_frontend * fe ) ; 
/*--dib0090_get_tune_state--*/
int dib0090_set_tune_state ( struct dvb_frontend * fe , enum frontend_tune_state tune_state ) ; 
/*--dib0090_set_tune_state--*/
struct dvb_frontend * dib0090_register ( struct dvb_frontend * fe , struct i2c_adapter * i2c , const struct dib0090_config * config ) ; 
/*--dib0090_register--*/
struct dvb_frontend * tua6100_attach ( struct dvb_frontend * fe , int addr , struct i2c_adapter * i2c ) ; 
/*--tua6100_attach--*/
struct dvb_frontend * s5h1409_attach ( const struct s5h1409_config * config , struct i2c_adapter * i2c ) ; 
/*--s5h1409_attach--*/
struct dvb_frontend * itd1000_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , struct itd1000_config * cfg ) ; 
/*--itd1000_attach--*/
struct dvb_frontend * tda10048_attach ( const struct tda10048_config * config , struct i2c_adapter * i2c ) ; 
/*--tda10048_attach--*/
void cx24113_agc_callback ( struct dvb_frontend * fe ) ; 
/*--cx24113_agc_callback--*/
struct dvb_frontend * cx24113_attach ( struct dvb_frontend * fe , const struct cx24113_config * config , struct i2c_adapter * i2c ) ; 
/*--cx24113_attach--*/
struct dvb_frontend * s5h1411_attach ( const struct s5h1411_config * config , struct i2c_adapter * i2c ) ; 
/*--s5h1411_attach--*/
struct dvb_frontend * lgs8gxx_attach ( const struct lgs8gxx_config * config , struct i2c_adapter * i2c ) ; 
/*--lgs8gxx_attach--*/
struct dvb_frontend * atbm8830_attach ( const struct atbm8830_config * config , struct i2c_adapter * i2c ) ; 
/*--atbm8830_attach--*/
struct dvb_frontend * af9013_attach ( const struct af9013_config * config , struct i2c_adapter * i2c ) ; 
/*--af9013_attach--*/
struct dvb_frontend * cx24116_attach ( const struct cx24116_config * config , struct i2c_adapter * i2c ) ; 
/*--cx24116_attach--*/
struct dvb_frontend * si21xx_attach ( const struct si21xx_config * config , struct i2c_adapter * i2c ) ; 
/*--si21xx_attach--*/
struct dvb_frontend * stv0288_attach ( const struct stv0288_config * config , struct i2c_adapter * i2c ) ; 
/*--stv0288_attach--*/
struct dvb_frontend * stb6000_attach ( struct dvb_frontend * fe , int addr , struct i2c_adapter * i2c ) ; 
/*--stb6000_attach--*/
struct dvb_frontend * stv6110_attach ( struct dvb_frontend * fe , const struct stv6110_config * config , struct i2c_adapter * i2c ) ; 
/*--stv6110_attach--*/
struct dvb_frontend * stv090x_attach ( const struct stv090x_config * config , struct i2c_adapter * i2c , enum stv090x_demodulator demod ) ; 
/*--stv090x_attach--*/
struct stv6110x_devctl * stv6110x_attach ( struct dvb_frontend * fe , const struct stv6110x_config * config , struct i2c_adapter * i2c ) ; 
/*--stv6110x_attach--*/
struct dvb_frontend * isl6423_attach ( struct dvb_frontend * fe , struct i2c_adapter * i2c , const struct isl6423_config * config ) ; 
/*--isl6423_attach--*/
struct dvb_frontend * ds3000_attach ( const struct ds3000_config * config , struct i2c_adapter * i2c ) ; 
/*--ds3000_attach--*/
int va1j5jf8007s_prepare ( struct dvb_frontend * fe ) ; 
/*--va1j5jf8007s_prepare--*/
struct dvb_frontend * va1j5jf8007s_attach ( const struct va1j5jf8007s_config * config , struct i2c_adapter * adap ) ; 
/*--va1j5jf8007s_attach--*/
int va1j5jf8007t_prepare ( struct dvb_frontend * fe ) ; 
/*--va1j5jf8007t_prepare--*/
struct dvb_frontend * va1j5jf8007t_attach ( const struct va1j5jf8007t_config * config , struct i2c_adapter * adap ) ; 
/*--va1j5jf8007t_attach--*/
void smscore_set_board_id ( struct smscore_device_t * core , int id ) ; 
/*--smscore_set_board_id--*/
int smscore_led_state ( struct smscore_device_t * core , int led ) ; 
/*--smscore_led_state--*/
int smscore_get_board_id ( struct smscore_device_t * core ) ; 
/*--smscore_get_board_id--*/
int smscore_registry_getmode ( char * devpath ) ; 
/*--smscore_registry_getmode--*/
void smscore_registry_setmode ( char * devpath , int mode ) ; 
/*--smscore_registry_setmode--*/
int smscore_register_hotplug ( hotplug_t hotplug ) ; 
/*--smscore_register_hotplug--*/
void smscore_unregister_hotplug ( hotplug_t hotplug ) ; 
/*--smscore_unregister_hotplug--*/
int smscore_register_device ( struct smsdevice_params_t * params , struct smscore_device_t * * coredev ) ; 
/*--smscore_register_device--*/
int smscore_start_device ( struct smscore_device_t * coredev ) ; 
/*--smscore_start_device--*/
void smscore_unregister_device ( struct smscore_device_t * coredev ) ; 
/*--smscore_unregister_device--*/
int smscore_set_device_mode ( struct smscore_device_t * coredev , int mode ) ; 
/*--smscore_set_device_mode--*/
int smscore_get_device_mode ( struct smscore_device_t * coredev ) ; 
/*--smscore_get_device_mode--*/
void smscore_onresponse ( struct smscore_device_t * coredev , struct smscore_buffer_t * cb ) ; 
/*--smscore_onresponse--*/
struct smscore_buffer_t * smscore_getbuffer ( struct smscore_device_t * coredev ) ; 
/*--smscore_getbuffer--*/
void smscore_putbuffer ( struct smscore_device_t * coredev , struct smscore_buffer_t * cb ) ; 
/*--smscore_putbuffer--*/
int smscore_register_client ( struct smscore_device_t * coredev , struct smsclient_params_t * params , struct smscore_client_t * * client ) ; 
/*--smscore_register_client--*/
void smscore_unregister_client ( struct smscore_client_t * client ) ; 
/*--smscore_unregister_client--*/
int smsclient_sendrequest ( struct smscore_client_t * client , void * buffer , size_t size ) ; 
/*--smsclient_sendrequest--*/
int smscore_configure_gpio ( struct smscore_device_t * coredev , u32 pin , struct smscore_config_gpio * pinconfig ) ; 
/*--smscore_configure_gpio--*/
int smscore_set_gpio ( struct smscore_device_t * coredev , u32 pin , int level ) ; 
/*--smscore_set_gpio--*/
int smscore_gpio_configure ( struct smscore_device_t * coredev , u8 PinNum , struct smscore_gpio_config * pGpioConfig ) ; 
/*--smscore_gpio_configure--*/
int smscore_gpio_set_level ( struct smscore_device_t * coredev , u8 PinNum , u8 NewLevel ) ; 
/*--smscore_gpio_set_level--*/
int smscore_gpio_get_level ( struct smscore_device_t * coredev , u8 PinNum , u8 * level ) ; 
/*--smscore_gpio_get_level--*/
struct sms_board * sms_get_board ( unsigned id ) ; 
/*--sms_get_board--*/
int sms_board_event ( struct smscore_device_t * coredev , enum SMS_BOARD_EVENTS gevent ) ; 
/*--sms_board_event--*/
int sms_board_setup ( struct smscore_device_t * coredev ) ; 
/*--sms_board_setup--*/
int sms_board_power ( struct smscore_device_t * coredev , int onoff ) ; 
/*--sms_board_power--*/
int sms_board_led_feedback ( struct smscore_device_t * coredev , int led ) ; 
/*--sms_board_led_feedback--*/
int sms_board_lna_control ( struct smscore_device_t * coredev , int onoff ) ; 
/*--sms_board_lna_control--*/
int sms_board_load_modules ( int id ) ; 
/*--sms_board_load_modules--*/
void smsendian_handle_tx_message ( void * buffer ) ; 
/*--smsendian_handle_tx_message--*/
void smsendian_handle_rx_message ( void * buffer ) ; 
/*--smsendian_handle_rx_message--*/
void smsendian_handle_message_header ( void * msg ) ; 
/*--smsendian_handle_message_header--*/
void sms_ir_event ( struct smscore_device_t * coredev , const char * buf , int len ) ; 
/*--sms_ir_event--*/
int sms_ir_init ( struct smscore_device_t * coredev ) ; 
/*--sms_ir_init--*/
void sms_ir_exit ( struct smscore_device_t * coredev ) ; 
/*--sms_ir_exit--*/
int ttpci_eeprom_parse_mac ( struct i2c_adapter * adapter , u8 * proposed_mac ) ; 
/*--ttpci_eeprom_parse_mac--*/
int ttpci_budget_debiread ( struct budget * budget , u32 config , int addr , int count , int uselocks , int nobusyloop ) ; 
/*--ttpci_budget_debiread--*/
int ttpci_budget_debiwrite ( struct budget * budget , u32 config , int addr , int count , u32 value , int uselocks , int nobusyloop ) ; 
/*--ttpci_budget_debiwrite--*/
int ttpci_budget_init ( struct budget * budget , struct saa7146_dev * dev , struct saa7146_pci_extension_data * info , struct module * owner , short * adapter_nums ) ; 
/*--ttpci_budget_init--*/
void ttpci_budget_init_hooks ( struct budget * budget ) ; 
/*--ttpci_budget_init_hooks--*/
int ttpci_budget_deinit ( struct budget * budget ) ; 
/*--ttpci_budget_deinit--*/
void ttpci_budget_irq10_handler ( struct saa7146_dev * dev , u32 * isr ) ; 
/*--ttpci_budget_irq10_handler--*/
void ttpci_budget_set_video_port ( struct saa7146_dev * dev , int video_port ) ; 
/*--ttpci_budget_set_video_port--*/
int av7110_debiwrite ( struct av7110 * av7110 , u32 config , int addr , u32 val , int count ) ; 
/*--av7110_debiwrite--*/
u32 av7110_debiread ( struct av7110 * av7110 , u32 config , int addr , int count ) ; 
/*--av7110_debiread--*/
int av7110_bootarm ( struct av7110 * av7110 ) ; 
/*--av7110_bootarm--*/
int av7110_wait_msgstate ( struct av7110 * av7110 , u16 flags ) ; 
/*--av7110_wait_msgstate--*/
int av7110_fw_cmd ( struct av7110 * av7110 , int type , int com , int num , ... ) ; 
/*--av7110_fw_cmd--*/
int av7110_fw_request ( struct av7110 * av7110 , u16 * request_buf , int request_buf_len , u16 * reply_buf , int reply_buf_len ) ; 
/*--av7110_fw_request--*/
int av7110_firmversion ( struct av7110 * av7110 ) ; 
/*--av7110_firmversion--*/
int av7110_diseqc_send ( struct av7110 * av7110 , int len , u8 * msg , unsigned long burst ) ; 
/*--av7110_diseqc_send--*/
int av7110_osd_cmd ( struct av7110 * av7110 , osd_cmd_t * dc ) ; 
/*--av7110_osd_cmd--*/
int av7110_osd_capability ( struct av7110 * av7110 , osd_cap_t * cap ) ; 
/*--av7110_osd_capability--*/
int msp_writereg ( struct av7110 * av7110 , u8 dev , u16 reg , u16 val ) ; 
/*--msp_writereg--*/
int av7110_init_analog_module ( struct av7110 * av7110 ) ; 
/*--av7110_init_analog_module--*/
int av7110_init_v4l ( struct av7110 * av7110 ) ; 
/*--av7110_init_v4l--*/
int av7110_exit_v4l ( struct av7110 * av7110 ) ; 
/*--av7110_exit_v4l--*/
int av7110_record_cb ( struct dvb_filter_pes2ts * p2t , u8 * buf , size_t len ) ; 
/*--av7110_record_cb--*/
int av7110_av_start_record ( struct av7110 * av7110 , int av , struct dvb_demux_feed * dvbdmxfeed ) ; 
/*--av7110_av_start_record--*/
int av7110_av_start_play ( struct av7110 * av7110 , int av ) ; 
/*--av7110_av_start_play--*/
int av7110_av_stop ( struct av7110 * av7110 , int av ) ; 
/*--av7110_av_stop--*/
int av7110_pes_play ( void * dest , struct dvb_ringbuffer * buf , int dlen ) ; 
/*--av7110_pes_play--*/
int av7110_set_volume ( struct av7110 * av7110 , int volleft , int volright ) ; 
/*--av7110_set_volume--*/
int av7110_set_vidmode ( struct av7110 * av7110 , enum av7110_video_mode mode ) ; 
/*--av7110_set_vidmode--*/
void av7110_p2t_init ( struct av7110_p2t * p , struct dvb_demux_feed * feed ) ; 
/*--av7110_p2t_init--*/
void av7110_p2t_write ( u8 const * buf , long int length , u16 pid , struct av7110_p2t * p ) ; 
/*--av7110_p2t_write--*/
int av7110_write_to_decoder ( struct dvb_demux_feed * feed , const u8 * buf , size_t len ) ; 
/*--av7110_write_to_decoder--*/
void dvb_video_add_event ( struct av7110 * av7110 , struct video_event * event ) ; 
/*--dvb_video_add_event--*/
int av7110_av_register ( struct av7110 * av7110 ) ; 
/*--av7110_av_register--*/
void av7110_av_unregister ( struct av7110 * av7110 ) ; 
/*--av7110_av_unregister--*/
int av7110_av_init ( struct av7110 * av7110 ) ; 
/*--av7110_av_init--*/
void av7110_av_exit ( struct av7110 * av7110 ) ; 
/*--av7110_av_exit--*/
void CI_handle ( struct av7110 * av7110 , u8 * data , u16 len ) ; 
/*--CI_handle--*/
void ci_get_data ( struct dvb_ringbuffer * cibuf , u8 * data , int len ) ; 
/*--ci_get_data--*/
int av7110_ca_register ( struct av7110 * av7110 ) ; 
/*--av7110_ca_register--*/
void av7110_ca_unregister ( struct av7110 * av7110 ) ; 
/*--av7110_ca_unregister--*/
int av7110_ca_init ( struct av7110 * av7110 ) ; 
/*--av7110_ca_init--*/
void av7110_ca_exit ( struct av7110 * av7110 ) ; 
/*--av7110_ca_exit--*/
int ChangePIDs ( struct av7110 * av7110 , u16 vpid , u16 apid , u16 ttpid , u16 subpid , u16 pcrpid ) ; 
/*--ChangePIDs--*/
int i2c_writereg ( struct av7110 * av7110 , u8 id , u8 reg , u8 val ) ; 
/*--i2c_writereg--*/
u8 i2c_readreg ( struct av7110 * av7110 , u8 id , u8 reg ) ; 
/*--i2c_readreg--*/
void av7110_ipack_reset ( struct ipack * p ) ; 
/*--av7110_ipack_reset--*/
int av7110_ipack_init ( struct ipack * p , int size , void ( * func ) ( u8 * buf , int size , void * priv ) ) ; 
/*--av7110_ipack_init--*/
void av7110_ipack_free ( struct ipack * p ) ; 
/*--av7110_ipack_free--*/
void av7110_ipack_flush ( struct ipack * p ) ; 
/*--av7110_ipack_flush--*/
int av7110_ipack_instant_repack ( const u8 * buf , int count , struct ipack * p ) ; 
/*--av7110_ipack_instant_repack--*/
int av7110_check_ir_config ( struct av7110 * av7110 , int force ) ; 
/*--av7110_check_ir_config--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) av7110_ir_init ( struct av7110 * av7110 ) ; 
/*--av7110_ir_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) av7110_ir_exit ( struct av7110 * av7110 ) ; 
/*--av7110_ir_exit--*/
struct dvb_frontend * ttusbdecfe_dvbt_attach ( const struct ttusbdecfe_config * config ) ; 
/*--ttusbdecfe_dvbt_attach--*/
struct dvb_frontend * ttusbdecfe_dvbs_attach ( const struct ttusbdecfe_config * config ) ; 
/*--ttusbdecfe_dvbs_attach--*/
int si470x_get_register ( struct si470x_device * radio , int regnr ) ; 
/*--si470x_get_register--*/
int si470x_set_register ( struct si470x_device * radio , int regnr ) ; 
/*--si470x_set_register--*/
int si470x_disconnect_check ( struct si470x_device * radio ) ; 
/*--si470x_disconnect_check--*/
int si470x_fops_open ( struct file * file ) ; 
/*--si470x_fops_open--*/
int si470x_fops_release ( struct file * file ) ; 
/*--si470x_fops_release--*/
int si470x_vidioc_querycap ( struct file * file , void * priv , struct v4l2_capability * capability ) ; 
/*--si470x_vidioc_querycap--*/
int si470x_set_freq ( struct si470x_device * radio , unsigned int freq ) ; 
/*--si470x_set_freq--*/
int si470x_start ( struct si470x_device * radio ) ; 
/*--si470x_start--*/
int si470x_stop ( struct si470x_device * radio ) ; 
/*--si470x_stop--*/
int si470x_rds_on ( struct si470x_device * radio ) ; 
/*--si470x_rds_on--*/
long si4713_ioctl ( struct v4l2_subdev * sd , unsigned int cmd , void * arg ) ; 
/*--si4713_ioctl--*/
int tea5764_i2c_read ( struct tea5764_device * radio ) ; 
/*--tea5764_i2c_read--*/
int tea5764_i2c_write ( struct tea5764_device * radio ) ; 
/*--tea5764_i2c_write--*/
int msp_reset ( struct i2c_client * client ) ; 
/*--msp_reset--*/
int msp_read_dem ( struct i2c_client * client , int addr ) ; 
/*--msp_read_dem--*/
int msp_read_dsp ( struct i2c_client * client , int addr ) ; 
/*--msp_read_dsp--*/
int msp_write_dem ( struct i2c_client * client , int addr , int val ) ; 
/*--msp_write_dem--*/
int msp_write_dsp ( struct i2c_client * client , int addr , int val ) ; 
/*--msp_write_dsp--*/
void msp_set_scart ( struct i2c_client * client , int in , int out ) ; 
/*--msp_set_scart--*/
void msp_set_audio ( struct i2c_client * client ) ; 
/*--msp_set_audio--*/
int msp_sleep ( struct msp_state * state , int timeout ) ; 
/*--msp_sleep--*/
const char * msp_standard_std_name ( int std ) ; 
/*--msp_standard_std_name--*/
void msp3400c_set_carrier ( struct i2c_client * client , int cdo1 , int cdo2 ) ; 
/*--msp3400c_set_carrier--*/
void msp3400c_set_mode ( struct i2c_client * client , int mode ) ; 
/*--msp3400c_set_mode--*/
int msp3400c_thread ( void * data ) ; 
/*--msp3400c_thread--*/
int msp3410d_thread ( void * data ) ; 
/*--msp3410d_thread--*/
int msp34xxg_thread ( void * data ) ; 
/*--msp34xxg_thread--*/
void msp_set_audmode ( struct i2c_client * client ) ; 
/*--msp_set_audmode--*/
int msp_detect_stereo ( struct i2c_client * client ) ; 
/*--msp_detect_stereo--*/
int stk_camera_write_reg ( struct stk_camera * dev , u16 index , u8 value ) ; 
/*--stk_camera_write_reg--*/
int stk_camera_read_reg ( struct stk_camera * dev , u16 index , int * value ) ; 
/*--stk_camera_read_reg--*/
int stk_sensor_sleep ( struct stk_camera * dev ) ; 
/*--stk_sensor_sleep--*/
int stk_sensor_wakeup ( struct stk_camera * dev ) ; 
/*--stk_sensor_wakeup--*/
int stk_sensor_init ( struct stk_camera * dev ) ; 
/*--stk_sensor_init--*/
int stk_sensor_configure ( struct stk_camera * dev ) ; 
/*--stk_sensor_configure--*/
int stk_sensor_set_brightness ( struct stk_camera * dev , int br ) ; 
/*--stk_sensor_set_brightness--*/
struct video_device * video_device_alloc ( void ) ; 
/*--video_device_alloc--*/
void video_device_release ( struct video_device * vdev ) ; 
/*--video_device_release--*/
void video_device_release_empty ( struct video_device * vdev ) ; 
/*--video_device_release_empty--*/
struct video_device * video_devdata ( struct file * file ) ; 
/*--video_devdata--*/
int video_register_device ( struct video_device * vdev , int type , int nr ) ; 
/*--video_register_device--*/
int video_register_device_no_warn ( struct video_device * vdev , int type , int nr ) ; 
/*--video_register_device_no_warn--*/
void video_unregister_device ( struct video_device * vdev ) ; 
/*--video_unregister_device--*/
const char * v4l2_norm_to_name ( v4l2_std_id id ) ; 
/*--v4l2_norm_to_name--*/
void v4l2_video_std_frame_period ( int id , struct v4l2_fract * frameperiod ) ; 
/*--v4l2_video_std_frame_period--*/
int v4l2_video_std_construct ( struct v4l2_standard * vs , int id , const char * name ) ; 
/*--v4l2_video_std_construct--*/
void v4l_printk_ioctl ( unsigned int cmd ) ; 
/*--v4l_printk_ioctl--*/
long video_usercopy ( struct file * file , unsigned int cmd , unsigned long arg , v4l2_kioctl func ) ; 
/*--video_usercopy--*/
long video_ioctl2 ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--video_ioctl2--*/
int v4l2_device_register ( struct device * dev , struct v4l2_device * v4l2_dev ) ; 
/*--v4l2_device_register--*/
int v4l2_device_set_name ( struct v4l2_device * v4l2_dev , const char * basename , atomic_t * instance ) ; 
/*--v4l2_device_set_name--*/
void v4l2_device_disconnect ( struct v4l2_device * v4l2_dev ) ; 
/*--v4l2_device_disconnect--*/
void v4l2_device_unregister ( struct v4l2_device * v4l2_dev ) ; 
/*--v4l2_device_unregister--*/
int v4l2_device_register_subdev ( struct v4l2_device * v4l2_dev , struct v4l2_subdev * sd ) ; 
/*--v4l2_device_register_subdev--*/
void v4l2_device_unregister_subdev ( struct v4l2_subdev * sd ) ; 
/*--v4l2_device_unregister_subdev--*/
int v4l2_fh_init ( struct v4l2_fh * fh , struct video_device * vdev ) ; 
/*--v4l2_fh_init--*/
void v4l2_fh_add ( struct v4l2_fh * fh ) ; 
/*--v4l2_fh_add--*/
void v4l2_fh_del ( struct v4l2_fh * fh ) ; 
/*--v4l2_fh_del--*/
void v4l2_fh_exit ( struct v4l2_fh * fh ) ; 
/*--v4l2_fh_exit--*/
int v4l2_event_init ( struct v4l2_fh * fh ) ; 
/*--v4l2_event_init--*/
int v4l2_event_alloc ( struct v4l2_fh * fh , unsigned int n ) ; 
/*--v4l2_event_alloc--*/
void v4l2_event_free ( struct v4l2_fh * fh ) ; 
/*--v4l2_event_free--*/
int v4l2_event_dequeue ( struct v4l2_fh * fh , struct v4l2_event * event , int nonblocking ) ; 
/*--v4l2_event_dequeue--*/
void v4l2_event_queue ( struct video_device * vdev , const struct v4l2_event * ev ) ; 
/*--v4l2_event_queue--*/
int v4l2_event_pending ( struct v4l2_fh * fh ) ; 
/*--v4l2_event_pending--*/
int v4l2_event_subscribe ( struct v4l2_fh * fh , struct v4l2_event_subscription * sub ) ; 
/*--v4l2_event_subscribe--*/
int v4l2_event_unsubscribe ( struct v4l2_fh * fh , struct v4l2_event_subscription * sub ) ; 
/*--v4l2_event_unsubscribe--*/
void v4l2_int_device_try_attach_all ( void ) ; 
/*--v4l2_int_device_try_attach_all--*/
int v4l2_int_device_register ( struct v4l2_int_device * d ) ; 
/*--v4l2_int_device_register--*/
void v4l2_int_device_unregister ( struct v4l2_int_device * d ) ; 
/*--v4l2_int_device_unregister--*/
int v4l2_int_ioctl_0 ( struct v4l2_int_device * d , int cmd ) ; 
/*--v4l2_int_ioctl_0--*/
int v4l2_int_ioctl_1 ( struct v4l2_int_device * d , int cmd , void * arg ) ; 
/*--v4l2_int_ioctl_1--*/
long v4l2_compat_ioctl32 ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--v4l2_compat_ioctl32--*/
void v4l2_prio_init ( struct v4l2_prio_state * global ) ; 
/*--v4l2_prio_init--*/
int v4l2_prio_change ( struct v4l2_prio_state * global , enum v4l2_priority * local , enum v4l2_priority new ) ; 
/*--v4l2_prio_change--*/
void v4l2_prio_open ( struct v4l2_prio_state * global , enum v4l2_priority * local ) ; 
/*--v4l2_prio_open--*/
void v4l2_prio_close ( struct v4l2_prio_state * global , enum v4l2_priority local ) ; 
/*--v4l2_prio_close--*/
enum v4l2_priority v4l2_prio_max ( struct v4l2_prio_state * global ) ; 
/*--v4l2_prio_max--*/
int v4l2_prio_check ( struct v4l2_prio_state * global , enum v4l2_priority local ) ; 
/*--v4l2_prio_check--*/
int v4l2_ctrl_check ( struct v4l2_ext_control * ctrl , struct v4l2_queryctrl * qctrl , const char * * menu_items ) ; 
/*--v4l2_ctrl_check--*/
const char * * v4l2_ctrl_get_menu ( u32 id ) ; 
/*--v4l2_ctrl_get_menu--*/
const char * v4l2_ctrl_get_name ( u32 id ) ; 
/*--v4l2_ctrl_get_name--*/
int v4l2_ctrl_query_fill ( struct v4l2_queryctrl * qctrl , s32 min , s32 max , s32 step , s32 def ) ; 
/*--v4l2_ctrl_query_fill--*/
int v4l2_ctrl_query_menu ( struct v4l2_querymenu * qmenu , struct v4l2_queryctrl * qctrl , const char * * menu_items ) ; 
/*--v4l2_ctrl_query_menu--*/
int v4l2_ctrl_query_menu_valid_items ( struct v4l2_querymenu * qmenu , const u32 * ids ) ; 
/*--v4l2_ctrl_query_menu_valid_items--*/
u32 v4l2_ctrl_next ( const u32 * const * ctrl_classes , u32 id ) ; 
/*--v4l2_ctrl_next--*/
int v4l2_chip_match_host ( const struct v4l2_dbg_match * match ) ; 
/*--v4l2_chip_match_host--*/
int v4l2_chip_match_i2c_client ( struct i2c_client * c , const struct v4l2_dbg_match * match ) ; 
/*--v4l2_chip_match_i2c_client--*/
int v4l2_chip_ident_i2c_client ( struct i2c_client * c , struct v4l2_dbg_chip_ident * chip , u32 ident , u32 revision ) ; 
/*--v4l2_chip_ident_i2c_client--*/
void v4l2_i2c_subdev_init ( struct v4l2_subdev * sd , struct i2c_client * client , const struct v4l2_subdev_ops * ops ) ; 
/*--v4l2_i2c_subdev_init--*/
struct v4l2_subdev * v4l2_i2c_new_subdev_board ( struct v4l2_device * v4l2_dev , struct i2c_adapter * adapter , const char * module_name , struct i2c_board_info * info , const unsigned short * probe_addrs ) ; 
/*--v4l2_i2c_new_subdev_board--*/
struct v4l2_subdev * v4l2_i2c_new_subdev_cfg ( struct v4l2_device * v4l2_dev , struct i2c_adapter * adapter , const char * module_name , const char * client_type , int irq , void * platform_data , u8 addr , const unsigned short * probe_addrs ) ; 
/*--v4l2_i2c_new_subdev_cfg--*/
unsigned short v4l2_i2c_subdev_addr ( struct v4l2_subdev * sd ) ; 
/*--v4l2_i2c_subdev_addr--*/
const unsigned short * v4l2_i2c_tuner_addrs ( enum v4l2_i2c_tuner_type type ) ; 
/*--v4l2_i2c_tuner_addrs--*/
void v4l2_spi_subdev_init ( struct v4l2_subdev * sd , struct spi_device * spi , const struct v4l2_subdev_ops * ops ) ; 
/*--v4l2_spi_subdev_init--*/
struct v4l2_subdev * v4l2_spi_new_subdev ( struct v4l2_device * v4l2_dev , struct spi_master * master , struct spi_board_info * info ) ; 
/*--v4l2_spi_new_subdev--*/
void v4l_bound_align_image ( u32 * w , unsigned int wmin , unsigned int wmax , unsigned int walign , u32 * h , unsigned int hmin , unsigned int hmax , unsigned int halign , unsigned int salign ) ; 
/*--v4l_bound_align_image--*/
int v4l_fill_dv_preset_info ( u32 preset , struct v4l2_dv_enum_preset * info ) ; 
/*--v4l_fill_dv_preset_info--*/
long v4l_compat_translate_ioctl ( struct file * file , int cmd , void * arg , v4l2_kioctl drv ) ; 
/*--v4l_compat_translate_ioctl--*/
void tveeprom_hauppauge_analog ( struct i2c_client * c , struct tveeprom * tvee , unsigned char * eeprom_data ) ; 
/*--tveeprom_hauppauge_analog--*/
int tveeprom_read ( struct i2c_client * c , unsigned char * eedata , int len ) ; 
/*--tveeprom_read--*/
struct cam_data * cpia_register_camera ( struct cpia_camera_ops * ops , void * lowlevel ) ; 
/*--cpia_register_camera--*/
void cpia_unregister_camera ( struct cam_data * cam ) ; 
/*--cpia_unregister_camera--*/
struct videobuf_buffer * videobuf_alloc ( struct videobuf_queue * q ) ; 
/*--videobuf_alloc--*/
int videobuf_waiton ( struct videobuf_buffer * vb , int non_blocking , int intr ) ; 
/*--videobuf_waiton--*/
int videobuf_iolock ( struct videobuf_queue * q , struct videobuf_buffer * vb , struct v4l2_framebuffer * fbuf ) ; 
/*--videobuf_iolock--*/
void * videobuf_queue_to_vaddr ( struct videobuf_queue * q , struct videobuf_buffer * buf ) ; 
/*--videobuf_queue_to_vaddr--*/
void videobuf_queue_core_init ( struct videobuf_queue * q , const struct videobuf_queue_ops * ops , struct device * dev , spinlock_t * irqlock , enum v4l2_buf_type type , enum v4l2_field field , unsigned int msize , void * priv , struct videobuf_qtype_ops * int_ops ) ; 
/*--videobuf_queue_core_init--*/
int videobuf_queue_is_busy ( struct videobuf_queue * q ) ; 
/*--videobuf_queue_is_busy--*/
void videobuf_queue_cancel ( struct videobuf_queue * q ) ; 
/*--videobuf_queue_cancel--*/
enum v4l2_field videobuf_next_field ( struct videobuf_queue * q ) ; 
/*--videobuf_next_field--*/
int videobuf_mmap_free ( struct videobuf_queue * q ) ; 
/*--videobuf_mmap_free--*/
int __videobuf_mmap_setup ( struct videobuf_queue * q , unsigned int bcount , unsigned int bsize , enum v4l2_memory memory ) ; 
/*--__videobuf_mmap_setup--*/
int videobuf_mmap_setup ( struct videobuf_queue * q , unsigned int bcount , unsigned int bsize , enum v4l2_memory memory ) ; 
/*--videobuf_mmap_setup--*/
int videobuf_reqbufs ( struct videobuf_queue * q , struct v4l2_requestbuffers * req ) ; 
/*--videobuf_reqbufs--*/
int videobuf_querybuf ( struct videobuf_queue * q , struct v4l2_buffer * b ) ; 
/*--videobuf_querybuf--*/
int videobuf_qbuf ( struct videobuf_queue * q , struct v4l2_buffer * b ) ; 
/*--videobuf_qbuf--*/
int videobuf_dqbuf ( struct videobuf_queue * q , struct v4l2_buffer * b , int nonblocking ) ; 
/*--videobuf_dqbuf--*/
int videobuf_streamon ( struct videobuf_queue * q ) ; 
/*--videobuf_streamon--*/
int videobuf_streamoff ( struct videobuf_queue * q ) ; 
/*--videobuf_streamoff--*/
ssize_t videobuf_read_one ( struct videobuf_queue * q , char * data , size_t count , loff_t * ppos , int nonblocking ) ; 
/*--videobuf_read_one--*/
int videobuf_read_start ( struct videobuf_queue * q ) ; 
/*--videobuf_read_start--*/
void videobuf_read_stop ( struct videobuf_queue * q ) ; 
/*--videobuf_read_stop--*/
void videobuf_stop ( struct videobuf_queue * q ) ; 
/*--videobuf_stop--*/
ssize_t videobuf_read_stream ( struct videobuf_queue * q , char * data , size_t count , loff_t * ppos , int vbihack , int nonblocking ) ; 
/*--videobuf_read_stream--*/
unsigned int videobuf_poll_stream ( struct file * file , struct videobuf_queue * q , poll_table * wait ) ; 
/*--videobuf_poll_stream--*/
int videobuf_mmap_mapper ( struct videobuf_queue * q , struct vm_area_struct * vma ) ; 
/*--videobuf_mmap_mapper--*/
int videobuf_cgmbuf ( struct videobuf_queue * q , struct video_mbuf * mbuf , int count ) ; 
/*--videobuf_cgmbuf--*/
struct scatterlist * videobuf_vmalloc_to_sg ( unsigned char * virt , int nr_pages ) ; 
/*--videobuf_vmalloc_to_sg--*/
struct scatterlist * videobuf_pages_to_sg ( struct page * * pages , int nr_pages , int offset ) ; 
/*--videobuf_pages_to_sg--*/
struct videobuf_dmabuf * videobuf_to_dma ( struct videobuf_buffer * buf ) ; 
/*--videobuf_to_dma--*/
void videobuf_dma_init ( struct videobuf_dmabuf * dma ) ; 
/*--videobuf_dma_init--*/
int videobuf_dma_init_user ( struct videobuf_dmabuf * dma , int direction , unsigned long data , unsigned long size ) ; 
/*--videobuf_dma_init_user--*/
int videobuf_dma_init_kernel ( struct videobuf_dmabuf * dma , int direction , int nr_pages ) ; 
/*--videobuf_dma_init_kernel--*/
int videobuf_dma_init_overlay ( struct videobuf_dmabuf * dma , int direction , dma_addr_t addr , int nr_pages ) ; 
/*--videobuf_dma_init_overlay--*/
int videobuf_dma_map ( struct videobuf_queue * q , struct videobuf_dmabuf * dma ) ; 
/*--videobuf_dma_map--*/
int videobuf_dma_unmap ( struct videobuf_queue * q , struct videobuf_dmabuf * dma ) ; 
/*--videobuf_dma_unmap--*/
int videobuf_dma_free ( struct videobuf_dmabuf * dma ) ; 
/*--videobuf_dma_free--*/
int videobuf_sg_dma_map ( struct device * dev , struct videobuf_dmabuf * dma ) ; 
/*--videobuf_sg_dma_map--*/
int videobuf_sg_dma_unmap ( struct device * dev , struct videobuf_dmabuf * dma ) ; 
/*--videobuf_sg_dma_unmap--*/
void * videobuf_sg_alloc ( size_t size ) ; 
/*--videobuf_sg_alloc--*/
void videobuf_queue_sg_init ( struct videobuf_queue * q , const struct videobuf_queue_ops * ops , struct device * dev , spinlock_t * irqlock , enum v4l2_buf_type type , enum v4l2_field field , unsigned int msize , void * priv ) ; 
/*--videobuf_queue_sg_init--*/
void videobuf_queue_vmalloc_init ( struct videobuf_queue * q , const struct videobuf_queue_ops * ops , struct device * dev , spinlock_t * irqlock , enum v4l2_buf_type type , enum v4l2_field field , unsigned int msize , void * priv ) ; 
/*--videobuf_queue_vmalloc_init--*/
void * videobuf_to_vmalloc ( struct videobuf_buffer * buf ) ; 
/*--videobuf_to_vmalloc--*/
void videobuf_vmalloc_free ( struct videobuf_buffer * buf ) ; 
/*--videobuf_vmalloc_free--*/
int videobuf_dvb_register_bus ( struct videobuf_dvb_frontends * f , struct module * module , void * adapter_priv , struct device * device , short * adapter_nr , int mfe_shared , int ( * fe_ioctl_override ) ( struct dvb_frontend * , unsigned int , void * , unsigned int ) ) ; 
/*--videobuf_dvb_register_bus--*/
void videobuf_dvb_unregister_bus ( struct videobuf_dvb_frontends * f ) ; 
/*--videobuf_dvb_unregister_bus--*/
struct videobuf_dvb_frontend * videobuf_dvb_get_frontend ( struct videobuf_dvb_frontends * f , int id ) ; 
/*--videobuf_dvb_get_frontend--*/
int videobuf_dvb_find_frontend ( struct videobuf_dvb_frontends * f , struct dvb_frontend * p ) ; 
/*--videobuf_dvb_find_frontend--*/
struct videobuf_dvb_frontend * videobuf_dvb_alloc_frontend ( struct videobuf_dvb_frontends * f , int id ) ; 
/*--videobuf_dvb_alloc_frontend--*/
void videobuf_dvb_dealloc_frontends ( struct videobuf_dvb_frontends * f ) ; 
/*--videobuf_dvb_dealloc_frontends--*/
void btcx_riscmem_free ( struct pci_dev * pci , struct btcx_riscmem * risc ) ; 
/*--btcx_riscmem_free--*/
int btcx_riscmem_alloc ( struct pci_dev * pci , struct btcx_riscmem * risc , unsigned int size ) ; 
/*--btcx_riscmem_alloc--*/
int btcx_screen_clips ( int swidth , int sheight , struct v4l2_rect * win , struct v4l2_clip * clips , unsigned int n ) ; 
/*--btcx_screen_clips--*/
int btcx_align ( struct v4l2_rect * win , struct v4l2_clip * clips , unsigned int n , int mask ) ; 
/*--btcx_align--*/
void btcx_sort_clips ( struct v4l2_clip * clips , unsigned int nclips ) ; 
/*--btcx_sort_clips--*/
void btcx_calc_skips ( int line , int width , int * maxy , struct btcx_skiplist * skips , unsigned int * nskips , const struct v4l2_clip * clips , unsigned int nclips ) ; 
/*--btcx_calc_skips--*/
int cx2341x_ctrl_query ( const struct cx2341x_mpeg_params * params , struct v4l2_queryctrl * qctrl ) ; 
/*--cx2341x_ctrl_query--*/
const char * * cx2341x_ctrl_get_menu ( const struct cx2341x_mpeg_params * p , u32 id ) ; 
/*--cx2341x_ctrl_get_menu--*/
int cx2341x_ext_ctrls ( struct cx2341x_mpeg_params * params , int busy , struct v4l2_ext_controls * ctrls , unsigned int cmd ) ; 
/*--cx2341x_ext_ctrls--*/
void cx2341x_fill_defaults ( struct cx2341x_mpeg_params * p ) ; 
/*--cx2341x_fill_defaults--*/
int cx2341x_update ( void * priv , cx2341x_mbox_func func , const struct cx2341x_mpeg_params * old , const struct cx2341x_mpeg_params * new ) ; 
/*--cx2341x_update--*/
void cx2341x_log_status ( const struct cx2341x_mpeg_params * p , const char * prefix ) ; 
/*--cx2341x_log_status--*/
const struct soc_camera_format_xlate * soc_camera_xlate_by_fourcc ( struct soc_camera_device * icd , unsigned int fourcc ) ; 
/*--soc_camera_xlate_by_fourcc--*/
unsigned long soc_camera_apply_sensor_flags ( struct soc_camera_link * icl , unsigned long flags ) ; 
/*--soc_camera_apply_sensor_flags--*/
int soc_camera_host_register ( struct soc_camera_host * ici ) ; 
/*--soc_camera_host_register--*/
void soc_camera_host_unregister ( struct soc_camera_host * ici ) ; 
/*--soc_camera_host_unregister--*/
s32 soc_mbus_bytes_per_line ( u32 width , const struct soc_mbus_pixelfmt * mf ) ; 
/*--soc_mbus_bytes_per_line--*/
const struct soc_mbus_pixelfmt * soc_mbus_get_fmtdesc ( enum v4l2_mbus_pixelcode code ) ; 
/*--soc_mbus_get_fmtdesc--*/
u32 au0828_readreg ( struct au0828_dev * dev , u16 reg ) ; 
/*--au0828_readreg--*/
u32 au0828_writereg ( struct au0828_dev * dev , u16 reg , u32 val ) ; 
/*--au0828_writereg--*/
int au0828_i2c_register ( struct au0828_dev * dev ) ; 
/*--au0828_i2c_register--*/
int au0828_i2c_unregister ( struct au0828_dev * dev ) ; 
/*--au0828_i2c_unregister--*/
void hvr950q_cs5340_audio ( void * priv , int enable ) ; 
/*--hvr950q_cs5340_audio--*/
int au0828_tuner_callback ( void * priv , int component , int command , int arg ) ; 
/*--au0828_tuner_callback--*/
void au0828_card_setup ( struct au0828_dev * dev ) ; 
/*--au0828_card_setup--*/
void au0828_gpio_setup ( struct au0828_dev * dev ) ; 
/*--au0828_gpio_setup--*/
void au0828_dvb_unregister ( struct au0828_dev * dev ) ; 
/*--au0828_dvb_unregister--*/
int au0828_dvb_register ( struct au0828_dev * dev ) ; 
/*--au0828_dvb_register--*/
void au0828_uninit_isoc ( struct au0828_dev * dev ) ; 
/*--au0828_uninit_isoc--*/
int au0828_init_isoc ( struct au0828_dev * dev , int max_packets , int num_bufs , int max_pkt_size , int ( * isoc_copy ) ( struct au0828_dev * dev , struct urb * urb ) ) ; 
/*--au0828_init_isoc--*/
int au0828_analog_stream_enable ( struct au0828_dev * d ) ; 
/*--au0828_analog_stream_enable--*/
int au0828_analog_stream_disable ( struct au0828_dev * d ) ; 
/*--au0828_analog_stream_disable--*/
void au0828_analog_stream_reset ( struct au0828_dev * dev ) ; 
/*--au0828_analog_stream_reset--*/
void au0828_analog_unregister ( struct au0828_dev * dev ) ; 
/*--au0828_analog_unregister--*/
int au0828_analog_register ( struct au0828_dev * dev , struct usb_interface * interface ) ; 
/*--au0828_analog_register--*/
void bttv_gpio_tracking ( struct bttv * btv , char * comment ) ; 
/*--bttv_gpio_tracking--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) bttv_idcard ( struct bttv * btv ) ; 
/*--bttv_idcard--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) bttv_init_card1 ( struct bttv * btv ) ; 
/*--bttv_init_card1--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) bttv_init_card2 ( struct bttv * btv ) ; 
/*--bttv_init_card2--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) bttv_init_tuner ( struct bttv * btv ) ; 
/*--bttv_init_tuner--*/
u32 bttv_tda9880_setnorm ( struct bttv * btv , u32 gpiobits ) ; 
/*--bttv_tda9880_setnorm--*/
void tea5757_set_freq ( struct bttv * btv , unsigned short freq ) ; 
/*--tea5757_set_freq--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) bttv_check_chipset ( void ) ; 
/*--bttv_check_chipset--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) bttv_handle_chipset ( struct bttv * btv ) ; 
/*--bttv_handle_chipset--*/
struct pci_dev * bttv_get_pcidev ( unsigned int card ) ; 
/*--bttv_get_pcidev--*/
int bttv_gpio_enable ( unsigned int card , unsigned long mask , unsigned long data ) ; 
/*--bttv_gpio_enable--*/
int bttv_read_gpio ( unsigned int card , unsigned long * data ) ; 
/*--bttv_read_gpio--*/
int bttv_write_gpio ( unsigned int card , unsigned long mask , unsigned long data ) ; 
/*--bttv_write_gpio--*/
int bttv_risc_packed ( struct bttv * btv , struct btcx_riscmem * risc , struct scatterlist * sglist , unsigned int offset , unsigned int bpl , unsigned int padding , unsigned int skip_lines , unsigned int store_lines ) ; 
/*--bttv_risc_packed--*/
void bttv_set_dma ( struct bttv * btv , int override ) ; 
/*--bttv_set_dma--*/
int bttv_risc_init_main ( struct bttv * btv ) ; 
/*--bttv_risc_init_main--*/
int bttv_risc_hook ( struct bttv * btv , int slot , struct btcx_riscmem * risc , int irqflags ) ; 
/*--bttv_risc_hook--*/
void bttv_dma_free ( struct videobuf_queue * q , struct bttv * btv , struct bttv_buffer * buf ) ; 
/*--bttv_dma_free--*/
int bttv_buffer_activate_vbi ( struct bttv * btv , struct bttv_buffer * vbi ) ; 
/*--bttv_buffer_activate_vbi--*/
int bttv_buffer_activate_video ( struct bttv * btv , struct bttv_buffer_set * set ) ; 
/*--bttv_buffer_activate_video--*/
int bttv_buffer_risc ( struct bttv * btv , struct bttv_buffer * buf ) ; 
/*--bttv_buffer_risc--*/
int bttv_overlay_risc ( struct bttv * btv , struct bttv_overlay * ov , const struct bttv_format * fmt , struct bttv_buffer * buf ) ; 
/*--bttv_overlay_risc--*/
int bttv_try_fmt_vbi_cap ( struct file * file , void * f , struct v4l2_format * frt ) ; 
/*--bttv_try_fmt_vbi_cap--*/
int bttv_s_fmt_vbi_cap ( struct file * file , void * f , struct v4l2_format * frt ) ; 
/*--bttv_s_fmt_vbi_cap--*/
int bttv_g_fmt_vbi_cap ( struct file * file , void * f , struct v4l2_format * frt ) ; 
/*--bttv_g_fmt_vbi_cap--*/
void bttv_vbi_fmt_reset ( struct bttv_vbi_fmt * f , unsigned int norm ) ; 
/*--bttv_vbi_fmt_reset--*/
int bttv_I2CRead ( struct bttv * btv , unsigned char addr , char * probe_for ) ; 
/*--bttv_I2CRead--*/
int bttv_I2CWrite ( struct bttv * btv , unsigned char addr , unsigned char b1 , unsigned char b2 , int both ) ; 
/*--bttv_I2CWrite--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) bttv_readee ( struct bttv * btv , unsigned char * eedata , int addr ) ; 
/*--bttv_readee--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) init_bttv_i2c ( struct bttv * btv ) ; 
/*--init_bttv_i2c--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) init_bttv_i2c_ir ( struct bttv * btv ) ; 
/*--init_bttv_i2c_ir--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) fini_bttv_i2c ( struct bttv * btv ) ; 
/*--fini_bttv_i2c--*/
int bttv_sub_add_device ( struct bttv_core * core , char * name ) ; 
/*--bttv_sub_add_device--*/
int bttv_sub_del_devices ( struct bttv_core * core ) ; 
/*--bttv_sub_del_devices--*/
int bttv_sub_register ( struct bttv_sub_driver * sub , char * wanted ) ; 
/*--bttv_sub_register--*/
int bttv_sub_unregister ( struct bttv_sub_driver * sub ) ; 
/*--bttv_sub_unregister--*/
void bttv_gpio_inout ( struct bttv_core * core , u32 mask , u32 outbits ) ; 
/*--bttv_gpio_inout--*/
u32 bttv_gpio_read ( struct bttv_core * core ) ; 
/*--bttv_gpio_read--*/
void bttv_gpio_write ( struct bttv_core * core , u32 value ) ; 
/*--bttv_gpio_write--*/
void bttv_gpio_bits ( struct bttv_core * core , u32 mask , u32 bits ) ; 
/*--bttv_gpio_bits--*/
void bttv_input_irq ( struct bttv * btv ) ; 
/*--bttv_input_irq--*/
int bttv_input_init ( struct bttv * btv ) ; 
/*--bttv_input_init--*/
void bttv_input_fini ( struct bttv * btv ) ; 
/*--bttv_input_fini--*/
void winview_volume ( struct bttv * btv , __u16 volume ) ; 
/*--winview_volume--*/
void gvbctv3pci_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--gvbctv3pci_audio--*/
void gvbctv5pci_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--gvbctv5pci_audio--*/
void avermedia_tvphone_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--avermedia_tvphone_audio--*/
void avermedia_tv_stereo_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--avermedia_tv_stereo_audio--*/
void lt9415_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--lt9415_audio--*/
void terratv_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--terratv_audio--*/
void winfast2000_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--winfast2000_audio--*/
void pvbt878p9b_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--pvbt878p9b_audio--*/
void fv2000s_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--fv2000s_audio--*/
void windvr_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--windvr_audio--*/
void adtvk503_audio ( struct bttv * btv , struct v4l2_tuner * t , int set ) ; 
/*--adtvk503_audio--*/
int cpia2_register_camera ( struct camera_data * cam ) ; 
/*--cpia2_register_camera--*/
void cpia2_unregister_camera ( struct camera_data * cam ) ; 
/*--cpia2_unregister_camera--*/
int cpia2_usb_change_streaming_alternate ( struct camera_data * cam , unsigned int alt ) ; 
/*--cpia2_usb_change_streaming_alternate--*/
int cpia2_usb_transfer_cmd ( struct camera_data * cam , void * registers , u8 request , u8 start , u8 count , u8 direction ) ; 
/*--cpia2_usb_transfer_cmd--*/
int cpia2_usb_stream_start ( struct camera_data * cam , unsigned int alternate ) ; 
/*--cpia2_usb_stream_start--*/
int cpia2_usb_stream_pause ( struct camera_data * cam ) ; 
/*--cpia2_usb_stream_pause--*/
int cpia2_usb_stream_resume ( struct camera_data * cam ) ; 
/*--cpia2_usb_stream_resume--*/
int cpia2_usb_stream_stop ( struct camera_data * cam ) ; 
/*--cpia2_usb_stream_stop--*/
int cpia2_usb_init ( void ) ; 
/*--cpia2_usb_init--*/
void cpia2_usb_cleanup ( void ) ; 
/*--cpia2_usb_cleanup--*/
int cpia2_do_command ( struct camera_data * cam , u32 command , u8 direction , u8 param ) ; 
/*--cpia2_do_command--*/
int cpia2_send_command ( struct camera_data * cam , struct cpia2_command * cmd ) ; 
/*--cpia2_send_command--*/
int cpia2_reset_camera ( struct camera_data * cam ) ; 
/*--cpia2_reset_camera--*/
int cpia2_set_low_power ( struct camera_data * cam ) ; 
/*--cpia2_set_low_power--*/
int cpia2_match_video_size ( int width , int height ) ; 
/*--cpia2_match_video_size--*/
void cpia2_save_camera_state ( struct camera_data * cam ) ; 
/*--cpia2_save_camera_state--*/
void cpia2_set_color_params ( struct camera_data * cam ) ; 
/*--cpia2_set_color_params--*/
int cpia2_set_flicker_mode ( struct camera_data * cam , int mode ) ; 
/*--cpia2_set_flicker_mode--*/
void cpia2_set_property_flip ( struct camera_data * cam , int prop_val ) ; 
/*--cpia2_set_property_flip--*/
void cpia2_set_property_mirror ( struct camera_data * cam , int prop_val ) ; 
/*--cpia2_set_property_mirror--*/
int cpia2_set_target_kb ( struct camera_data * cam , unsigned char value ) ; 
/*--cpia2_set_target_kb--*/
int cpia2_set_gpio ( struct camera_data * cam , unsigned char setting ) ; 
/*--cpia2_set_gpio--*/
int cpia2_set_fps ( struct camera_data * cam , int framerate ) ; 
/*--cpia2_set_fps--*/
void cpia2_set_brightness ( struct camera_data * cam , unsigned char value ) ; 
/*--cpia2_set_brightness--*/
void cpia2_set_contrast ( struct camera_data * cam , unsigned char value ) ; 
/*--cpia2_set_contrast--*/
void cpia2_set_saturation ( struct camera_data * cam , unsigned char value ) ; 
/*--cpia2_set_saturation--*/
void cpia2_set_format ( struct camera_data * cam ) ; 
/*--cpia2_set_format--*/
void cpia2_dbg_dump_registers ( struct camera_data * cam ) ; 
/*--cpia2_dbg_dump_registers--*/
struct camera_data * cpia2_init_camera_struct ( void ) ; 
/*--cpia2_init_camera_struct--*/
int cpia2_init_camera ( struct camera_data * cam ) ; 
/*--cpia2_init_camera--*/
int cpia2_allocate_buffers ( struct camera_data * cam ) ; 
/*--cpia2_allocate_buffers--*/
void cpia2_free_buffers ( struct camera_data * cam ) ; 
/*--cpia2_free_buffers--*/
long cpia2_read ( struct camera_data * cam , char * buf , unsigned long count , int noblock ) ; 
/*--cpia2_read--*/
unsigned int cpia2_poll ( struct camera_data * cam , struct file * filp , poll_table * wait ) ; 
/*--cpia2_poll--*/
int cpia2_remap_buffer ( struct camera_data * cam , struct vm_area_struct * vma ) ; 
/*--cpia2_remap_buffer--*/
int cx18_msleep_timeout ( unsigned int msecs , int intr ) ; 
/*--cx18_msleep_timeout--*/
void cx18_read_eeprom ( struct cx18 * cx , struct tveeprom * tv ) ; 
/*--cx18_read_eeprom--*/
int cx18_init_on_first_open ( struct cx18 * cx ) ; 
/*--cx18_init_on_first_open--*/
const struct cx18_card * cx18_get_card ( u16 index ) ; 
/*--cx18_get_card--*/
int cx18_get_input ( struct cx18 * cx , u16 index , struct v4l2_input * input ) ; 
/*--cx18_get_input--*/
int cx18_get_audio_input ( struct cx18 * cx , u16 index , struct v4l2_audio * audio ) ; 
/*--cx18_get_audio_input--*/
int cx18_i2c_register ( struct cx18 * cx , unsigned idx ) ; 
/*--cx18_i2c_register--*/
struct v4l2_subdev * cx18_find_hw ( struct cx18 * cx , u32 hw ) ; 
/*--cx18_find_hw--*/
int init_cx18_i2c ( struct cx18 * cx ) ; 
/*--init_cx18_i2c--*/
void exit_cx18_i2c ( struct cx18 * cx ) ; 
/*--exit_cx18_i2c--*/
void cx18_halt_firmware ( struct cx18 * cx ) ; 
/*--cx18_halt_firmware--*/
void cx18_init_power ( struct cx18 * cx , int lowpwr ) ; 
/*--cx18_init_power--*/
void cx18_init_memory ( struct cx18 * cx ) ; 
/*--cx18_init_memory--*/
int cx18_firmware_init ( struct cx18 * cx ) ; 
/*--cx18_firmware_init--*/
void cx18_gpio_init ( struct cx18 * cx ) ; 
/*--cx18_gpio_init--*/
int cx18_gpio_register ( struct cx18 * cx , u32 hw ) ; 
/*--cx18_gpio_register--*/
void cx18_reset_ir_gpio ( void * data ) ; 
/*--cx18_reset_ir_gpio--*/
int cx18_reset_tuner_gpio ( void * dev , int component , int cmd , int value ) ; 
/*--cx18_reset_tuner_gpio--*/
void cx18_buf_swap ( struct cx18_buffer * buf ) ; 
/*--cx18_buf_swap--*/
void _cx18_mdl_swap ( struct cx18_mdl * mdl ) ; 
/*--_cx18_mdl_swap--*/
void cx18_queue_init ( struct cx18_queue * q ) ; 
/*--cx18_queue_init--*/
struct cx18_queue * _cx18_enqueue ( struct cx18_stream * s , struct cx18_mdl * mdl , struct cx18_queue * q , int to_front ) ; 
/*--_cx18_enqueue--*/
struct cx18_mdl * cx18_dequeue ( struct cx18_stream * s , struct cx18_queue * q ) ; 
/*--cx18_dequeue--*/
struct cx18_mdl * cx18_queue_get_mdl ( struct cx18_stream * s , u32 id , u32 bytesused ) ; 
/*--cx18_queue_get_mdl--*/
void cx18_flush_queues ( struct cx18_stream * s ) ; 
/*--cx18_flush_queues--*/
void cx18_unload_queues ( struct cx18_stream * s ) ; 
/*--cx18_unload_queues--*/
void cx18_load_queues ( struct cx18_stream * s ) ; 
/*--cx18_load_queues--*/
void _cx18_mdl_sync_for_device ( struct cx18_stream * s , struct cx18_mdl * mdl ) ; 
/*--_cx18_mdl_sync_for_device--*/
int cx18_stream_alloc ( struct cx18_stream * s ) ; 
/*--cx18_stream_alloc--*/
void cx18_stream_free ( struct cx18_stream * s ) ; 
/*--cx18_stream_free--*/
int cx18_streams_setup ( struct cx18 * cx ) ; 
/*--cx18_streams_setup--*/
int cx18_streams_register ( struct cx18 * cx ) ; 
/*--cx18_streams_register--*/
void cx18_streams_cleanup ( struct cx18 * cx , int unregister ) ; 
/*--cx18_streams_cleanup--*/
void cx18_stream_rotate_idx_mdls ( struct cx18 * cx ) ; 
/*--cx18_stream_rotate_idx_mdls--*/
void cx18_out_work_handler ( struct work_struct * work ) ; 
/*--cx18_out_work_handler--*/
int cx18_start_v4l2_encode_stream ( struct cx18_stream * s ) ; 
/*--cx18_start_v4l2_encode_stream--*/
void cx18_stop_all_captures ( struct cx18 * cx ) ; 
/*--cx18_stop_all_captures--*/
int cx18_stop_v4l2_encode_stream ( struct cx18_stream * s , int gop_end ) ; 
/*--cx18_stop_v4l2_encode_stream--*/
u32 cx18_find_handle ( struct cx18 * cx ) ; 
/*--cx18_find_handle--*/
struct cx18_stream * cx18_handle_to_stream ( struct cx18 * cx , u32 handle ) ; 
/*--cx18_handle_to_stream--*/
int cx18_claim_stream ( struct cx18_open_id * id , int type ) ; 
/*--cx18_claim_stream--*/
void cx18_release_stream ( struct cx18_stream * s ) ; 
/*--cx18_release_stream--*/
int cx18_start_capture ( struct cx18_open_id * id ) ; 
/*--cx18_start_capture--*/
ssize_t cx18_v4l2_read ( struct file * filp , char * buf , size_t count , loff_t * pos ) ; 
/*--cx18_v4l2_read--*/
unsigned int cx18_v4l2_enc_poll ( struct file * filp , poll_table * wait ) ; 
/*--cx18_v4l2_enc_poll--*/
void cx18_stop_capture ( struct cx18_open_id * id , int gop_end ) ; 
/*--cx18_stop_capture--*/
int cx18_v4l2_close ( struct file * filp ) ; 
/*--cx18_v4l2_close--*/
int cx18_v4l2_open ( struct file * filp ) ; 
/*--cx18_v4l2_open--*/
void cx18_mute ( struct cx18 * cx ) ; 
/*--cx18_mute--*/
void cx18_unmute ( struct cx18 * cx ) ; 
/*--cx18_unmute--*/
u16 cx18_service2vbi ( int type ) ; 
/*--cx18_service2vbi--*/
void cx18_expand_service_set ( struct v4l2_sliced_vbi_format * fmt , int is_pal ) ; 
/*--cx18_expand_service_set--*/
u16 cx18_get_service_set ( struct v4l2_sliced_vbi_format * fmt ) ; 
/*--cx18_get_service_set--*/
int cx18_s_input ( struct file * file , void * fh , unsigned int inp ) ; 
/*--cx18_s_input--*/
int cx18_s_frequency ( struct file * file , void * fh , struct v4l2_frequency * vf ) ; 
/*--cx18_s_frequency--*/
int cx18_s_std ( struct file * file , void * fh , v4l2_std_id * std ) ; 
/*--cx18_s_std--*/
long cx18_v4l2_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--cx18_v4l2_ioctl--*/
void cx18_set_funcs ( struct video_device * vdev ) ; 
/*--cx18_set_funcs--*/
int cx18_queryctrl ( struct file * file , void * fh , struct v4l2_queryctrl * qctrl ) ; 
/*--cx18_queryctrl--*/
int cx18_querymenu ( struct file * file , void * fh , struct v4l2_querymenu * qmenu ) ; 
/*--cx18_querymenu--*/
int cx18_g_ext_ctrls ( struct file * file , void * fh , struct v4l2_ext_controls * c ) ; 
/*--cx18_g_ext_ctrls--*/
int cx18_s_ext_ctrls ( struct file * file , void * fh , struct v4l2_ext_controls * c ) ; 
/*--cx18_s_ext_ctrls--*/
int cx18_try_ext_ctrls ( struct file * file , void * fh , struct v4l2_ext_controls * c ) ; 
/*--cx18_try_ext_ctrls--*/
void cx18_in_work_handler ( struct work_struct * work ) ; 
/*--cx18_in_work_handler--*/
void cx18_api_epu_cmd_irq ( struct cx18 * cx , int rpu ) ; 
/*--cx18_api_epu_cmd_irq--*/
int cx18_api ( struct cx18 * cx , u32 cmd , int args , u32 data [ ] ) ; 
/*--cx18_api--*/
int cx18_api_func ( void * priv , u32 cmd , int in , int out , u32 data [ 16 ] ) ; 
/*--cx18_api_func--*/
int cx18_vapi_result ( struct cx18 * cx , u32 data [ 6 ] , u32 cmd , int args , ... ) ; 
/*--cx18_vapi_result--*/
int cx18_vapi ( struct cx18 * cx , u32 cmd , int args , ... ) ; 
/*--cx18_vapi--*/
void cx18_process_vbi_data ( struct cx18 * cx , struct cx18_mdl * mdl , int streamtype ) ; 
/*--cx18_process_vbi_data--*/
int cx18_audio_set_io ( struct cx18 * cx ) ; 
/*--cx18_audio_set_io--*/
void cx18_video_set_io ( struct cx18 * cx ) ; 
/*--cx18_video_set_io--*/
irqreturn_t cx18_irq_handler ( int irq , void * dev_id ) ; 
/*--cx18_irq_handler--*/
int cx18_av_write ( struct cx18 * cx , u16 addr , u8 value ) ; 
/*--cx18_av_write--*/
int cx18_av_write_expect ( struct cx18 * cx , u16 addr , u8 value , u8 eval , u8 mask ) ; 
/*--cx18_av_write_expect--*/
int cx18_av_write4 ( struct cx18 * cx , u16 addr , u32 value ) ; 
/*--cx18_av_write4--*/
int cx18_av_write4_expect ( struct cx18 * cx , u16 addr , u32 value , u32 eval , u32 mask ) ; 
/*--cx18_av_write4_expect--*/
int cx18_av_write4_noretry ( struct cx18 * cx , u16 addr , u32 value ) ; 
/*--cx18_av_write4_noretry--*/
u8 cx18_av_read ( struct cx18 * cx , u16 addr ) ; 
/*--cx18_av_read--*/
u32 cx18_av_read4 ( struct cx18 * cx , u16 addr ) ; 
/*--cx18_av_read4--*/
int cx18_av_and_or ( struct cx18 * cx , u16 addr , unsigned and_mask , u8 or_value ) ; 
/*--cx18_av_and_or--*/
int cx18_av_and_or4 ( struct cx18 * cx , u16 addr , u32 and_mask , u32 or_value ) ; 
/*--cx18_av_and_or4--*/
void cx18_av_std_setup ( struct cx18 * cx ) ; 
/*--cx18_av_std_setup--*/
int cx18_av_probe ( struct cx18 * cx ) ; 
/*--cx18_av_probe--*/
void cx18_av_audio_set_path ( struct cx18 * cx ) ; 
/*--cx18_av_audio_set_path--*/
int cx18_av_s_clock_freq ( struct v4l2_subdev * sd , u32 freq ) ; 
/*--cx18_av_s_clock_freq--*/
int cx18_av_audio_g_ctrl ( struct cx18 * cx , struct v4l2_control * ctrl ) ; 
/*--cx18_av_audio_g_ctrl--*/
int cx18_av_audio_s_ctrl ( struct cx18 * cx , struct v4l2_control * ctrl ) ; 
/*--cx18_av_audio_s_ctrl--*/
int cx18_av_loadfw ( struct cx18 * cx ) ; 
/*--cx18_av_loadfw--*/
int cx18_av_g_sliced_fmt ( struct v4l2_subdev * sd , struct v4l2_sliced_vbi_format * svbi ) ; 
/*--cx18_av_g_sliced_fmt--*/
int cx18_av_s_raw_fmt ( struct v4l2_subdev * sd , struct v4l2_vbi_format * fmt ) ; 
/*--cx18_av_s_raw_fmt--*/
int cx18_av_s_sliced_fmt ( struct v4l2_subdev * sd , struct v4l2_sliced_vbi_format * svbi ) ; 
/*--cx18_av_s_sliced_fmt--*/
int cx18_av_decode_vbi_line ( struct v4l2_subdev * sd , struct v4l2_decode_vbi_line * vbi ) ; 
/*--cx18_av_decode_vbi_line--*/
void cx18_init_scb ( struct cx18 * cx ) ; 
/*--cx18_init_scb--*/
int cx18_dvb_register ( struct cx18_stream * stream ) ; 
/*--cx18_dvb_register--*/
void cx18_dvb_unregister ( struct cx18_stream * stream ) ; 
/*--cx18_dvb_unregister--*/
void cx18_memset_io ( struct cx18 * cx , void * addr , int val , size_t count ) ; 
/*--cx18_memset_io--*/
void cx18_sw1_irq_enable ( struct cx18 * cx , u32 val ) ; 
/*--cx18_sw1_irq_enable--*/
void cx18_sw1_irq_disable ( struct cx18 * cx , u32 val ) ; 
/*--cx18_sw1_irq_disable--*/
void cx18_sw2_irq_enable ( struct cx18 * cx , u32 val ) ; 
/*--cx18_sw2_irq_enable--*/
void cx18_sw2_irq_disable ( struct cx18 * cx , u32 val ) ; 
/*--cx18_sw2_irq_disable--*/
void cx18_sw2_irq_disable_cpu ( struct cx18 * cx , u32 val ) ; 
/*--cx18_sw2_irq_disable_cpu--*/
void cx18_setup_page ( struct cx18 * cx , u32 addr ) ; 
/*--cx18_setup_page--*/
u8 cx231xx_find_boundary_SAV_EAV ( u8 * p_buffer , u8 * partial_buf , u32 * p_bytes_used ) ; 
/*--cx231xx_find_boundary_SAV_EAV--*/
u8 cx231xx_find_next_SAV_EAV ( u8 * p_buffer , u32 buffer_size , u32 * p_bytes_used ) ; 
/*--cx231xx_find_next_SAV_EAV--*/
u32 cx231xx_get_video_line ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q , u8 sav_eav , u8 * p_buffer , u32 buffer_size ) ; 
/*--cx231xx_get_video_line--*/
u32 cx231xx_copy_video_line ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q , u8 * p_line , u32 length , int field_number ) ; 
/*--cx231xx_copy_video_line--*/
void cx231xx_reset_video_buffer ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q ) ; 
/*--cx231xx_reset_video_buffer--*/
int cx231xx_do_copy ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q , u8 * p_buffer , u32 bytes_to_copy ) ; 
/*--cx231xx_do_copy--*/
void cx231xx_swab ( u16 * from , u16 * to , u16 len ) ; 
/*--cx231xx_swab--*/
u8 cx231xx_is_buffer_done ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q ) ; 
/*--cx231xx_is_buffer_done--*/
void video_mux ( struct cx231xx * dev , int index ) ; 
/*--video_mux--*/
void cx231xx_release_analog_resources ( struct cx231xx * dev ) ; 
/*--cx231xx_release_analog_resources--*/
int cx231xx_register_analog_devices ( struct cx231xx * dev ) ; 
/*--cx231xx_register_analog_devices--*/
int cx231xx_i2c_send_bytes ( struct i2c_adapter * i2c_adap , const struct i2c_msg * msg ) ; 
/*--cx231xx_i2c_send_bytes--*/
void cx231xx_do_i2c_scan ( struct cx231xx * dev , struct i2c_client * c ) ; 
/*--cx231xx_do_i2c_scan--*/
int cx231xx_i2c_register ( struct cx231xx_i2c * bus ) ; 
/*--cx231xx_i2c_register--*/
int cx231xx_i2c_unregister ( struct cx231xx_i2c * bus ) ; 
/*--cx231xx_i2c_unregister--*/
int cx231xx_tuner_callback ( void * ptr , int component , int command , int arg ) ; 
/*--cx231xx_tuner_callback--*/
void cx231xx_pre_card_setup ( struct cx231xx * dev ) ; 
/*--cx231xx_pre_card_setup--*/
void cx231xx_register_i2c_ir ( struct cx231xx * dev ) ; 
/*--cx231xx_register_i2c_ir--*/
void cx231xx_card_setup ( struct cx231xx * dev ) ; 
/*--cx231xx_card_setup--*/
int cx231xx_config ( struct cx231xx * dev ) ; 
/*--cx231xx_config--*/
void cx231xx_config_i2c ( struct cx231xx * dev ) ; 
/*--cx231xx_config_i2c--*/
void cx231xx_release_resources ( struct cx231xx * dev ) ; 
/*--cx231xx_release_resources--*/
void cx231xx_remove_from_devlist ( struct cx231xx * dev ) ; 
/*--cx231xx_remove_from_devlist--*/
void cx231xx_add_into_devlist ( struct cx231xx * dev ) ; 
/*--cx231xx_add_into_devlist--*/
int cx231xx_register_extension ( struct cx231xx_ops * ops ) ; 
/*--cx231xx_register_extension--*/
void cx231xx_unregister_extension ( struct cx231xx_ops * ops ) ; 
/*--cx231xx_unregister_extension--*/
void cx231xx_init_extension ( struct cx231xx * dev ) ; 
/*--cx231xx_init_extension--*/
void cx231xx_close_extension ( struct cx231xx * dev ) ; 
/*--cx231xx_close_extension--*/
int cx231xx_send_usb_command ( struct cx231xx_i2c * i2c_bus , struct cx231xx_i2c_xfer_data * req_data ) ; 
/*--cx231xx_send_usb_command--*/
int cx231xx_read_ctrl_reg ( struct cx231xx * dev , u8 req , u16 reg , char * buf , int len ) ; 
/*--cx231xx_read_ctrl_reg--*/
int cx231xx_send_vendor_cmd ( struct cx231xx * dev , struct VENDOR_REQUEST_IN * ven_req ) ; 
/*--cx231xx_send_vendor_cmd--*/
int cx231xx_write_ctrl_reg ( struct cx231xx * dev , u8 req , u16 reg , char * buf , int len ) ; 
/*--cx231xx_write_ctrl_reg--*/
int cx231xx_set_video_alternate ( struct cx231xx * dev ) ; 
/*--cx231xx_set_video_alternate--*/
int cx231xx_set_alt_setting ( struct cx231xx * dev , u8 index , u8 alt ) ; 
/*--cx231xx_set_alt_setting--*/
int cx231xx_gpio_set ( struct cx231xx * dev , struct cx231xx_reg_seq * gpio ) ; 
/*--cx231xx_gpio_set--*/
int cx231xx_set_mode ( struct cx231xx * dev , enum cx231xx_mode set_mode ) ; 
/*--cx231xx_set_mode--*/
void cx231xx_uninit_isoc ( struct cx231xx * dev ) ; 
/*--cx231xx_uninit_isoc--*/
int cx231xx_init_isoc ( struct cx231xx * dev , int max_packets , int num_bufs , int max_pkt_size , int ( * isoc_copy ) ( struct cx231xx * dev , struct urb * urb ) ) ; 
/*--cx231xx_init_isoc--*/
int cx231xx_dev_init ( struct cx231xx * dev ) ; 
/*--cx231xx_dev_init--*/
void cx231xx_dev_uninit ( struct cx231xx * dev ) ; 
/*--cx231xx_dev_uninit--*/
int cx231xx_send_gpio_cmd ( struct cx231xx * dev , u32 gpio_bit , u8 * gpio_val , u8 len , u8 request , u8 direction ) ; 
/*--cx231xx_send_gpio_cmd--*/
int cx231xx_mode_register ( struct cx231xx * dev , u16 address , u32 mode ) ; 
/*--cx231xx_mode_register--*/
int cx231xx_read_i2c_data ( struct cx231xx * dev , u8 dev_addr , u16 saddr , u8 saddr_len , u32 * data , u8 data_len ) ; 
/*--cx231xx_read_i2c_data--*/
int cx231xx_write_i2c_data ( struct cx231xx * dev , u8 dev_addr , u16 saddr , u8 saddr_len , u32 data , u8 data_len ) ; 
/*--cx231xx_write_i2c_data--*/
int cx231xx_reg_mask_write ( struct cx231xx * dev , u8 dev_addr , u8 size , u16 register_address , u8 bit_start , u8 bit_end , u32 value ) ; 
/*--cx231xx_reg_mask_write--*/
int cx231xx_read_modify_write_i2c_dword ( struct cx231xx * dev , u8 dev_addr , u16 saddr , u32 mask , u32 value ) ; 
/*--cx231xx_read_modify_write_i2c_dword--*/
u32 cx231xx_set_field ( u32 field_mask , u32 data ) ; 
/*--cx231xx_set_field--*/
int cx231xx_afe_init_super_block ( struct cx231xx * dev , u32 ref_count ) ; 
/*--cx231xx_afe_init_super_block--*/
int cx231xx_afe_init_channels ( struct cx231xx * dev ) ; 
/*--cx231xx_afe_init_channels--*/
int cx231xx_afe_setup_AFE_for_baseband ( struct cx231xx * dev ) ; 
/*--cx231xx_afe_setup_AFE_for_baseband--*/
int cx231xx_afe_set_input_mux ( struct cx231xx * dev , u32 input_mux ) ; 
/*--cx231xx_afe_set_input_mux--*/
int cx231xx_afe_set_mode ( struct cx231xx * dev , enum AFE_MODE mode ) ; 
/*--cx231xx_afe_set_mode--*/
int cx231xx_afe_update_power_control ( struct cx231xx * dev , enum AV_MODE avmode ) ; 
/*--cx231xx_afe_update_power_control--*/
int cx231xx_afe_adjust_ref_count ( struct cx231xx * dev , u32 video_input ) ; 
/*--cx231xx_afe_adjust_ref_count--*/
int cx231xx_set_video_input_mux ( struct cx231xx * dev , u8 input ) ; 
/*--cx231xx_set_video_input_mux--*/
int cx231xx_set_decoder_video_input ( struct cx231xx * dev , u8 pin_type , u8 input ) ; 
/*--cx231xx_set_decoder_video_input--*/
int cx231xx_do_mode_ctrl_overrides ( struct cx231xx * dev ) ; 
/*--cx231xx_do_mode_ctrl_overrides--*/
int cx231xx_set_audio_input ( struct cx231xx * dev , u8 input ) ; 
/*--cx231xx_set_audio_input--*/
int cx231xx_set_audio_decoder_input ( struct cx231xx * dev , enum AUDIO_INPUT audio_input ) ; 
/*--cx231xx_set_audio_decoder_input--*/
int cx231xx_resolution_set ( struct cx231xx * dev ) ; 
/*--cx231xx_resolution_set--*/
int cx231xx_init_ctrl_pin_status ( struct cx231xx * dev ) ; 
/*--cx231xx_init_ctrl_pin_status--*/
int cx231xx_set_agc_analog_digital_mux_select ( struct cx231xx * dev , u8 analog_or_digital ) ; 
/*--cx231xx_set_agc_analog_digital_mux_select--*/
int cx231xx_enable_i2c_for_tuner ( struct cx231xx * dev , u8 I2CIndex ) ; 
/*--cx231xx_enable_i2c_for_tuner--*/
int cx231xx_dif_configure_C2HH_for_low_IF ( struct cx231xx * dev , u32 mode , u32 function_mode , u32 standard ) ; 
/*--cx231xx_dif_configure_C2HH_for_low_IF--*/
int cx231xx_dif_set_standard ( struct cx231xx * dev , u32 standard ) ; 
/*--cx231xx_dif_set_standard--*/
int cx231xx_tuner_pre_channel_change ( struct cx231xx * dev ) ; 
/*--cx231xx_tuner_pre_channel_change--*/
int cx231xx_tuner_post_channel_change ( struct cx231xx * dev ) ; 
/*--cx231xx_tuner_post_channel_change--*/
int cx231xx_i2s_blk_initialize ( struct cx231xx * dev ) ; 
/*--cx231xx_i2s_blk_initialize--*/
int cx231xx_i2s_blk_update_power_control ( struct cx231xx * dev , enum AV_MODE avmode ) ; 
/*--cx231xx_i2s_blk_update_power_control--*/
int cx231xx_i2s_blk_set_audio_input ( struct cx231xx * dev , u8 audio_input ) ; 
/*--cx231xx_i2s_blk_set_audio_input--*/
int cx231xx_set_power_mode ( struct cx231xx * dev , enum AV_MODE mode ) ; 
/*--cx231xx_set_power_mode--*/
int cx231xx_power_suspend ( struct cx231xx * dev ) ; 
/*--cx231xx_power_suspend--*/
int cx231xx_start_stream ( struct cx231xx * dev , u32 ep_mask ) ; 
/*--cx231xx_start_stream--*/
int cx231xx_stop_stream ( struct cx231xx * dev , u32 ep_mask ) ; 
/*--cx231xx_stop_stream--*/
int cx231xx_initialize_stream_xfer ( struct cx231xx * dev , u32 media_type ) ; 
/*--cx231xx_initialize_stream_xfer--*/
int cx231xx_capture_start ( struct cx231xx * dev , int start , u8 media_type ) ; 
/*--cx231xx_capture_start--*/
int cx231xx_set_gpio_bit ( struct cx231xx * dev , u32 gpio_bit , u8 * gpio_val ) ; 
/*--cx231xx_set_gpio_bit--*/
int cx231xx_get_gpio_bit ( struct cx231xx * dev , u32 gpio_bit , u8 * gpio_val ) ; 
/*--cx231xx_get_gpio_bit--*/
int cx231xx_set_gpio_direction ( struct cx231xx * dev , int pin_number , int pin_value ) ; 
/*--cx231xx_set_gpio_direction--*/
int cx231xx_set_gpio_value ( struct cx231xx * dev , int pin_number , int pin_value ) ; 
/*--cx231xx_set_gpio_value--*/
int cx231xx_gpio_i2c_start ( struct cx231xx * dev ) ; 
/*--cx231xx_gpio_i2c_start--*/
int cx231xx_gpio_i2c_end ( struct cx231xx * dev ) ; 
/*--cx231xx_gpio_i2c_end--*/
int cx231xx_gpio_i2c_write_byte ( struct cx231xx * dev , u8 data ) ; 
/*--cx231xx_gpio_i2c_write_byte--*/
int cx231xx_gpio_i2c_read_byte ( struct cx231xx * dev , u8 * buf ) ; 
/*--cx231xx_gpio_i2c_read_byte--*/
int cx231xx_gpio_i2c_read_ack ( struct cx231xx * dev ) ; 
/*--cx231xx_gpio_i2c_read_ack--*/
int cx231xx_gpio_i2c_write_ack ( struct cx231xx * dev ) ; 
/*--cx231xx_gpio_i2c_write_ack--*/
int cx231xx_gpio_i2c_write_nak ( struct cx231xx * dev ) ; 
/*--cx231xx_gpio_i2c_write_nak--*/
int cx231xx_gpio_i2c_read ( struct cx231xx * dev , u8 dev_addr , u8 * buf , u8 len ) ; 
/*--cx231xx_gpio_i2c_read--*/
int cx231xx_gpio_i2c_write ( struct cx231xx * dev , u8 dev_addr , u8 * buf , u8 len ) ; 
/*--cx231xx_gpio_i2c_write--*/
u32 initialize_cx231xx ( struct cx231xx * dev ) ; 
/*--initialize_cx231xx--*/
void cx231xx_uninit_vbi_isoc ( struct cx231xx * dev ) ; 
/*--cx231xx_uninit_vbi_isoc--*/
int cx231xx_init_vbi_isoc ( struct cx231xx * dev , int max_packets , int num_bufs , int max_pkt_size , int ( * isoc_copy ) ( struct cx231xx * dev , struct urb * urb ) ) ; 
/*--cx231xx_init_vbi_isoc--*/
u32 cx231xx_get_vbi_line ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q , u8 sav_eav , u8 * p_buffer , u32 buffer_size ) ; 
/*--cx231xx_get_vbi_line--*/
u32 cx231xx_copy_vbi_line ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q , u8 * p_line , u32 length , int field_number ) ; 
/*--cx231xx_copy_vbi_line--*/
void cx231xx_reset_vbi_buffer ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q ) ; 
/*--cx231xx_reset_vbi_buffer--*/
int cx231xx_do_vbi_copy ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q , u8 * p_buffer , u32 bytes_to_copy ) ; 
/*--cx231xx_do_vbi_copy--*/
u8 cx231xx_is_vbi_buffer_done ( struct cx231xx * dev , struct cx231xx_dmaqueue * dma_q ) ; 
/*--cx231xx_is_vbi_buffer_done--*/
int cx231xx_set_analog_freq ( struct cx231xx * dev , u32 freq ) ; 
/*--cx231xx_set_analog_freq--*/
int cx231xx_reset_analog_tuner ( struct cx231xx * dev ) ; 
/*--cx231xx_reset_analog_tuner--*/
void cx23885_card_list ( struct cx23885_dev * dev ) ; 
/*--cx23885_card_list--*/
int cx23885_tuner_callback ( void * priv , int component , int command , int arg ) ; 
/*--cx23885_tuner_callback--*/
void cx23885_gpio_setup ( struct cx23885_dev * dev ) ; 
/*--cx23885_gpio_setup--*/
int cx23885_ir_init ( struct cx23885_dev * dev ) ; 
/*--cx23885_ir_init--*/
void cx23885_ir_fini ( struct cx23885_dev * dev ) ; 
/*--cx23885_ir_fini--*/
void cx23885_ir_pci_int_enable ( struct cx23885_dev * dev ) ; 
/*--cx23885_ir_pci_int_enable--*/
void cx23885_card_setup ( struct cx23885_dev * dev ) ; 
/*--cx23885_card_setup--*/
int cx23885_video_irq ( struct cx23885_dev * dev , u32 status ) ; 
/*--cx23885_video_irq--*/
void cx23885_video_unregister ( struct cx23885_dev * dev ) ; 
/*--cx23885_video_unregister--*/
int cx23885_video_register ( struct cx23885_dev * dev ) ; 
/*--cx23885_video_register--*/
int cx23885_vbi_fmt ( struct file * file , void * priv , struct v4l2_format * f ) ; 
/*--cx23885_vbi_fmt--*/
void cx23885_vbi_timeout ( unsigned long data ) ; 
/*--cx23885_vbi_timeout--*/
void cx23885_wakeup ( struct cx23885_tsport * port , struct cx23885_dmaqueue * q , u32 count ) ; 
/*--cx23885_wakeup--*/
int cx23885_sram_channel_setup ( struct cx23885_dev * dev , struct sram_channel * ch , unsigned int bpl , u32 risc ) ; 
/*--cx23885_sram_channel_setup--*/
void cx23885_sram_channel_dump ( struct cx23885_dev * dev , struct sram_channel * ch ) ; 
/*--cx23885_sram_channel_dump--*/
struct v4l2_subdev * cx23885_find_hw ( struct cx23885_dev * dev , u32 hw ) ; 
/*--cx23885_find_hw--*/
int cx23885_risc_buffer ( struct pci_dev * pci , struct btcx_riscmem * risc , struct scatterlist * sglist , unsigned int top_offset , unsigned int bottom_offset , unsigned int bpl , unsigned int padding , unsigned int lines ) ; 
/*--cx23885_risc_buffer--*/
int cx23885_risc_stopper ( struct pci_dev * pci , struct btcx_riscmem * risc , u32 reg , u32 mask , u32 value ) ; 
/*--cx23885_risc_stopper--*/
void cx23885_free_buffer ( struct videobuf_queue * q , struct cx23885_buffer * buf ) ; 
/*--cx23885_free_buffer--*/
int cx23885_restart_queue ( struct cx23885_tsport * port , struct cx23885_dmaqueue * q ) ; 
/*--cx23885_restart_queue--*/
int cx23885_buf_prepare ( struct videobuf_queue * q , struct cx23885_tsport * port , struct cx23885_buffer * buf , enum v4l2_field field ) ; 
/*--cx23885_buf_prepare--*/
void cx23885_buf_queue ( struct cx23885_tsport * port , struct cx23885_buffer * buf ) ; 
/*--cx23885_buf_queue--*/
void cx23885_cancel_buffers ( struct cx23885_tsport * port ) ; 
/*--cx23885_cancel_buffers--*/
int cx23885_irq_417 ( struct cx23885_dev * dev , u32 status ) ; 
/*--cx23885_irq_417--*/
void cx23885_gpio_set ( struct cx23885_dev * dev , u32 mask ) ; 
/*--cx23885_gpio_set--*/
void cx23885_gpio_clear ( struct cx23885_dev * dev , u32 mask ) ; 
/*--cx23885_gpio_clear--*/
u32 cx23885_gpio_get ( struct cx23885_dev * dev , u32 mask ) ; 
/*--cx23885_gpio_get--*/
void cx23885_gpio_enable ( struct cx23885_dev * dev , u32 mask , int asoutput ) ; 
/*--cx23885_gpio_enable--*/
int cx23885_i2c_register ( struct cx23885_i2c * bus ) ; 
/*--cx23885_i2c_register--*/
int cx23885_i2c_unregister ( struct cx23885_i2c * bus ) ; 
/*--cx23885_i2c_unregister--*/
void cx23885_av_clk ( struct cx23885_dev * dev , int enable ) ; 
/*--cx23885_av_clk--*/
int cx23885_dvb_register ( struct cx23885_tsport * port ) ; 
/*--cx23885_dvb_register--*/
int cx23885_dvb_unregister ( struct cx23885_tsport * port ) ; 
/*--cx23885_dvb_unregister--*/
void cx23885_mc417_init ( struct cx23885_dev * dev ) ; 
/*--cx23885_mc417_init--*/
int mc417_register_write ( struct cx23885_dev * dev , u16 address , u32 value ) ; 
/*--mc417_register_write--*/
int mc417_register_read ( struct cx23885_dev * dev , u16 address , u32 * value ) ; 
/*--mc417_register_read--*/
int mc417_memory_write ( struct cx23885_dev * dev , u32 address , u32 value ) ; 
/*--mc417_memory_write--*/
int mc417_memory_read ( struct cx23885_dev * dev , u32 address , u32 * value ) ; 
/*--mc417_memory_read--*/
void mc417_gpio_set ( struct cx23885_dev * dev , u32 mask ) ; 
/*--mc417_gpio_set--*/
void mc417_gpio_clear ( struct cx23885_dev * dev , u32 mask ) ; 
/*--mc417_gpio_clear--*/
void mc417_gpio_enable ( struct cx23885_dev * dev , u32 mask , int asoutput ) ; 
/*--mc417_gpio_enable--*/
void cx23885_417_check_encoder ( struct cx23885_dev * dev ) ; 
/*--cx23885_417_check_encoder--*/
void cx23885_417_unregister ( struct cx23885_dev * dev ) ; 
/*--cx23885_417_unregister--*/
int cx23885_417_register ( struct cx23885_dev * dev ) ; 
/*--cx23885_417_register--*/
int cx23885_g_chip_ident ( struct file * file , void * fh , struct v4l2_dbg_chip_ident * chip ) ; 
/*--cx23885_g_chip_ident--*/
void cx23885_ir_rx_work_handler ( struct work_struct * work ) ; 
/*--cx23885_ir_rx_work_handler--*/
void cx23885_ir_tx_work_handler ( struct work_struct * work ) ; 
/*--cx23885_ir_tx_work_handler--*/
void cx23885_ir_rx_v4l2_dev_notify ( struct v4l2_subdev * sd , u32 events ) ; 
/*--cx23885_ir_rx_v4l2_dev_notify--*/
void cx23885_ir_tx_v4l2_dev_notify ( struct v4l2_subdev * sd , u32 events ) ; 
/*--cx23885_ir_tx_v4l2_dev_notify--*/
void cx23885_input_rx_work_handler ( struct cx23885_dev * dev , u32 events ) ; 
/*--cx23885_input_rx_work_handler--*/
int cx23885_input_init ( struct cx23885_dev * dev ) ; 
/*--cx23885_input_init--*/
void cx23885_input_fini ( struct cx23885_dev * dev ) ; 
/*--cx23885_input_fini--*/
int cx23888_ir_probe ( struct cx23885_dev * dev ) ; 
/*--cx23888_ir_probe--*/
int cx23888_ir_remove ( struct cx23885_dev * dev ) ; 
/*--cx23888_ir_remove--*/
void netup_initialize ( struct cx23885_dev * dev ) ; 
/*--netup_initialize--*/
int netup_read_i2c ( struct i2c_adapter * i2c_adap , u8 addr , u8 reg , u8 * buf , int len ) ; 
/*--netup_read_i2c--*/
int netup_write_i2c ( struct i2c_adapter * i2c_adap , u8 addr , u8 reg , u8 * buf , int len ) ; 
/*--netup_write_i2c--*/
int netup_ci_get_mem ( struct cx23885_dev * dev ) ; 
/*--netup_ci_get_mem--*/
int netup_ci_op_cam ( struct dvb_ca_en50221 * en50221 , int slot , u8 flag , u8 read , int addr , u8 data ) ; 
/*--netup_ci_op_cam--*/
int netup_ci_read_attribute_mem ( struct dvb_ca_en50221 * en50221 , int slot , int addr ) ; 
/*--netup_ci_read_attribute_mem--*/
int netup_ci_write_attribute_mem ( struct dvb_ca_en50221 * en50221 , int slot , int addr , u8 data ) ; 
/*--netup_ci_write_attribute_mem--*/
int netup_ci_read_cam_ctl ( struct dvb_ca_en50221 * en50221 , int slot , u8 addr ) ; 
/*--netup_ci_read_cam_ctl--*/
int netup_ci_write_cam_ctl ( struct dvb_ca_en50221 * en50221 , int slot , u8 addr , u8 data ) ; 
/*--netup_ci_write_cam_ctl--*/
int netup_ci_slot_reset ( struct dvb_ca_en50221 * en50221 , int slot ) ; 
/*--netup_ci_slot_reset--*/
int netup_ci_slot_shutdown ( struct dvb_ca_en50221 * en50221 , int slot ) ; 
/*--netup_ci_slot_shutdown--*/
int netup_ci_set_irq ( struct dvb_ca_en50221 * en50221 , u8 irq_mode ) ; 
/*--netup_ci_set_irq--*/
int netup_ci_slot_ts_ctl ( struct dvb_ca_en50221 * en50221 , int slot ) ; 
/*--netup_ci_slot_ts_ctl--*/
int netup_ci_slot_status ( struct cx23885_dev * dev , u32 pci_status ) ; 
/*--netup_ci_slot_status--*/
int netup_poll_ci_slot_status ( struct dvb_ca_en50221 * en50221 , int slot , int open ) ; 
/*--netup_poll_ci_slot_status--*/
int netup_ci_init ( struct cx23885_tsport * port ) ; 
/*--netup_ci_init--*/
void netup_ci_exit ( struct cx23885_tsport * port ) ; 
/*--netup_ci_exit--*/
int netup_eeprom_read ( struct i2c_adapter * i2c_adap , u8 addr ) ; 
/*--netup_eeprom_read--*/
int netup_eeprom_write ( struct i2c_adapter * i2c_adap , u8 addr , u8 data ) ; 
/*--netup_eeprom_write--*/
void netup_get_card_info ( struct i2c_adapter * i2c_adap , struct netup_card_info * cinfo ) ; 
/*--netup_get_card_info--*/
int f300_set_voltage ( struct dvb_frontend * fe , fe_sec_voltage_t voltage ) ; 
/*--f300_set_voltage--*/
int cx25840_write ( struct i2c_client * client , u16 addr , u8 value ) ; 
/*--cx25840_write--*/
int cx25840_write4 ( struct i2c_client * client , u16 addr , u32 value ) ; 
/*--cx25840_write4--*/
u8 cx25840_read ( struct i2c_client * client , u16 addr ) ; 
/*--cx25840_read--*/
u32 cx25840_read4 ( struct i2c_client * client , u16 addr ) ; 
/*--cx25840_read4--*/
int cx25840_and_or ( struct i2c_client * client , u16 addr , unsigned and_mask , u8 or_value ) ; 
/*--cx25840_and_or--*/
void cx25840_std_setup ( struct i2c_client * client ) ; 
/*--cx25840_std_setup--*/
void cx25840_audio_set_path ( struct i2c_client * client ) ; 
/*--cx25840_audio_set_path--*/
int cx25840_s_clock_freq ( struct v4l2_subdev * sd , u32 freq ) ; 
/*--cx25840_s_clock_freq--*/
int cx25840_audio_g_ctrl ( struct v4l2_subdev * sd , struct v4l2_control * ctrl ) ; 
/*--cx25840_audio_g_ctrl--*/
int cx25840_audio_s_ctrl ( struct v4l2_subdev * sd , struct v4l2_control * ctrl ) ; 
/*--cx25840_audio_s_ctrl--*/
int cx25840_loadfw ( struct i2c_client * client ) ; 
/*--cx25840_loadfw--*/
int cx25840_g_sliced_fmt ( struct v4l2_subdev * sd , struct v4l2_sliced_vbi_format * svbi ) ; 
/*--cx25840_g_sliced_fmt--*/
int cx25840_s_raw_fmt ( struct v4l2_subdev * sd , struct v4l2_vbi_format * fmt ) ; 
/*--cx25840_s_raw_fmt--*/
int cx25840_s_sliced_fmt ( struct v4l2_subdev * sd , struct v4l2_sliced_vbi_format * svbi ) ; 
/*--cx25840_s_sliced_fmt--*/
int cx25840_decode_vbi_line ( struct v4l2_subdev * sd , struct v4l2_decode_vbi_line * vbi ) ; 
/*--cx25840_decode_vbi_line--*/
int cx8800_ctrl_query ( struct cx88_core * core , struct v4l2_queryctrl * qctrl ) ; 
/*--cx8800_ctrl_query--*/
int cx88_video_mux ( struct cx88_core * core , unsigned int input ) ; 
/*--cx88_video_mux--*/
int cx88_get_control ( struct cx88_core * core , struct v4l2_control * ctl ) ; 
/*--cx88_get_control--*/
int cx88_set_control ( struct cx88_core * core , struct v4l2_control * ctl ) ; 
/*--cx88_set_control--*/
int cx88_enum_input ( struct cx88_core * core , struct v4l2_input * i ) ; 
/*--cx88_enum_input--*/
int cx88_set_freq ( struct cx88_core * core , struct v4l2_frequency * f ) ; 
/*--cx88_set_freq--*/
int cx8800_vbi_fmt ( struct file * file , void * priv , struct v4l2_format * f ) ; 
/*--cx8800_vbi_fmt--*/
int cx8800_stop_vbi_dma ( struct cx8800_dev * dev ) ; 
/*--cx8800_stop_vbi_dma--*/
int cx8800_restart_vbi_queue ( struct cx8800_dev * dev , struct cx88_dmaqueue * q ) ; 
/*--cx8800_restart_vbi_queue--*/
void cx8800_vbi_timeout ( unsigned long data ) ; 
/*--cx8800_vbi_timeout--*/
int cx8802_buf_prepare ( struct videobuf_queue * q , struct cx8802_dev * dev , struct cx88_buffer * buf , enum v4l2_field field ) ; 
/*--cx8802_buf_prepare--*/
void cx8802_buf_queue ( struct cx8802_dev * dev , struct cx88_buffer * buf ) ; 
/*--cx8802_buf_queue--*/
void cx8802_cancel_buffers ( struct cx8802_dev * dev ) ; 
/*--cx8802_cancel_buffers--*/
struct cx8802_driver * cx8802_get_driver ( struct cx8802_dev * dev , enum cx88_board_type btype ) ; 
/*--cx8802_get_driver--*/
int cx8802_register_driver ( struct cx8802_driver * drv ) ; 
/*--cx8802_register_driver--*/
int cx8802_unregister_driver ( struct cx8802_driver * drv ) ; 
/*--cx8802_unregister_driver--*/
int cx88_tuner_callback ( void * priv , int component , int command , int arg ) ; 
/*--cx88_tuner_callback--*/
void cx88_setup_xc3028 ( struct cx88_core * core , struct xc2028_ctrl * ctl ) ; 
/*--cx88_setup_xc3028--*/
int cx88_get_resources ( const struct cx88_core * core , struct pci_dev * pci ) ; 
/*--cx88_get_resources--*/
struct cx88_core * cx88_core_create ( struct pci_dev * pci , int nr ) ; 
/*--cx88_core_create--*/
int cx88_risc_buffer ( struct pci_dev * pci , struct btcx_riscmem * risc , struct scatterlist * sglist , unsigned int top_offset , unsigned int bottom_offset , unsigned int bpl , unsigned int padding , unsigned int lines ) ; 
/*--cx88_risc_buffer--*/
int cx88_risc_databuffer ( struct pci_dev * pci , struct btcx_riscmem * risc , struct scatterlist * sglist , unsigned int bpl , unsigned int lines , unsigned int lpi ) ; 
/*--cx88_risc_databuffer--*/
int cx88_risc_stopper ( struct pci_dev * pci , struct btcx_riscmem * risc , u32 reg , u32 mask , u32 value ) ; 
/*--cx88_risc_stopper--*/
void cx88_free_buffer ( struct videobuf_queue * q , struct cx88_buffer * buf ) ; 
/*--cx88_free_buffer--*/
int cx88_sram_channel_setup ( struct cx88_core * core , struct sram_channel * ch , unsigned int bpl , u32 risc ) ; 
/*--cx88_sram_channel_setup--*/
void cx88_sram_channel_dump ( struct cx88_core * core , struct sram_channel * ch ) ; 
/*--cx88_sram_channel_dump--*/
void cx88_print_irqbits ( char * name , char * tag , char * * strings , int len , u32 bits , u32 mask ) ; 
/*--cx88_print_irqbits--*/
int cx88_core_irq ( struct cx88_core * core , u32 status ) ; 
/*--cx88_core_irq--*/
void cx88_wakeup ( struct cx88_core * core , struct cx88_dmaqueue * q , u32 count ) ; 
/*--cx88_wakeup--*/
void cx88_shutdown ( struct cx88_core * core ) ; 
/*--cx88_shutdown--*/
int cx88_reset ( struct cx88_core * core ) ; 
/*--cx88_reset--*/
int cx88_set_scale ( struct cx88_core * core , unsigned int width , unsigned int height , enum v4l2_field field ) ; 
/*--cx88_set_scale--*/
int cx88_start_audio_dma ( struct cx88_core * core ) ; 
/*--cx88_start_audio_dma--*/
int cx88_stop_audio_dma ( struct cx88_core * core ) ; 
/*--cx88_stop_audio_dma--*/
int cx88_set_tvnorm ( struct cx88_core * core , v4l2_std_id norm ) ; 
/*--cx88_set_tvnorm--*/
struct video_device * cx88_vdev_init ( struct cx88_core * core , struct pci_dev * pci , struct video_device * template , char * type ) ; 
/*--cx88_vdev_init--*/
struct cx88_core * cx88_core_get ( struct pci_dev * pci ) ; 
/*--cx88_core_get--*/
void cx88_core_put ( struct cx88_core * core , struct pci_dev * pci ) ; 
/*--cx88_core_put--*/
int cx88_i2c_init ( struct cx88_core * core , struct pci_dev * pci ) ; 
/*--cx88_i2c_init--*/
void cx88_set_tvaudio ( struct cx88_core * core ) ; 
/*--cx88_set_tvaudio--*/
void cx88_newstation ( struct cx88_core * core ) ; 
/*--cx88_newstation--*/
void cx88_get_stereo ( struct cx88_core * core , struct v4l2_tuner * t ) ; 
/*--cx88_get_stereo--*/
void cx88_set_stereo ( struct cx88_core * core , u32 mode , int manual ) ; 
/*--cx88_set_stereo--*/
int cx88_audio_thread ( void * data ) ; 
/*--cx88_audio_thread--*/
s32 cx88_dsp_detect_stereo_sap ( struct cx88_core * core ) ; 
/*--cx88_dsp_detect_stereo_sap--*/
int cx88_ir_start ( struct cx88_core * core ) ; 
/*--cx88_ir_start--*/
void cx88_ir_stop ( struct cx88_core * core ) ; 
/*--cx88_ir_stop--*/
int cx88_ir_init ( struct cx88_core * core , struct pci_dev * pci ) ; 
/*--cx88_ir_init--*/
int cx88_ir_fini ( struct cx88_core * core ) ; 
/*--cx88_ir_fini--*/
void cx88_ir_irq ( struct cx88_core * core ) ; 
/*--cx88_ir_irq--*/
int vp3054_i2c_probe ( struct cx8802_dev * dev ) ; 
/*--vp3054_i2c_probe--*/
void vp3054_i2c_remove ( struct cx8802_dev * dev ) ; 
/*--vp3054_i2c_remove--*/
void em28xx_release_analog_resources ( struct em28xx * dev ) ; 
/*--em28xx_release_analog_resources--*/
int em28xx_register_analog_devices ( struct em28xx * dev ) ; 
/*--em28xx_register_analog_devices--*/
void em28xx_do_i2c_scan ( struct em28xx * dev ) ; 
/*--em28xx_do_i2c_scan--*/
int em28xx_i2c_register ( struct em28xx * dev ) ; 
/*--em28xx_i2c_register--*/
int em28xx_i2c_unregister ( struct em28xx * dev ) ; 
/*--em28xx_i2c_unregister--*/
int em28xx_tuner_callback ( void * ptr , int component , int command , int arg ) ; 
/*--em28xx_tuner_callback--*/
void em28xx_pre_card_setup ( struct em28xx * dev ) ; 
/*--em28xx_pre_card_setup--*/
void em28xx_register_i2c_ir ( struct em28xx * dev ) ; 
/*--em28xx_register_i2c_ir--*/
void em28xx_card_setup ( struct em28xx * dev ) ; 
/*--em28xx_card_setup--*/
void em28xx_release_resources ( struct em28xx * dev ) ; 
/*--em28xx_release_resources--*/
int em28xx_read_reg_req_len ( struct em28xx * dev , u8 req , u16 reg , char * buf , int len ) ; 
/*--em28xx_read_reg_req_len--*/
int em28xx_read_reg_req ( struct em28xx * dev , u8 req , u16 reg ) ; 
/*--em28xx_read_reg_req--*/
int em28xx_read_reg ( struct em28xx * dev , u16 reg ) ; 
/*--em28xx_read_reg--*/
int em28xx_write_regs_req ( struct em28xx * dev , u8 req , u16 reg , char * buf , int len ) ; 
/*--em28xx_write_regs_req--*/
int em28xx_write_regs ( struct em28xx * dev , u16 reg , char * buf , int len ) ; 
/*--em28xx_write_regs--*/
int em28xx_write_reg ( struct em28xx * dev , u16 reg , u8 val ) ; 
/*--em28xx_write_reg--*/
int em28xx_write_reg_bits ( struct em28xx * dev , u16 reg , u8 val , u8 bitmask ) ; 
/*--em28xx_write_reg_bits--*/
int em28xx_read_ac97 ( struct em28xx * dev , u8 reg ) ; 
/*--em28xx_read_ac97--*/
int em28xx_write_ac97 ( struct em28xx * dev , u8 reg , u16 val ) ; 
/*--em28xx_write_ac97--*/
int em28xx_audio_analog_set ( struct em28xx * dev ) ; 
/*--em28xx_audio_analog_set--*/
int em28xx_audio_setup ( struct em28xx * dev ) ; 
/*--em28xx_audio_setup--*/
int em28xx_colorlevels_set_default ( struct em28xx * dev ) ; 
/*--em28xx_colorlevels_set_default--*/
int em28xx_capture_start ( struct em28xx * dev , int start ) ; 
/*--em28xx_capture_start--*/
int em28xx_vbi_supported ( struct em28xx * dev ) ; 
/*--em28xx_vbi_supported--*/
int em28xx_set_outfmt ( struct em28xx * dev ) ; 
/*--em28xx_set_outfmt--*/
int em28xx_resolution_set ( struct em28xx * dev ) ; 
/*--em28xx_resolution_set--*/
int em28xx_set_alternate ( struct em28xx * dev ) ; 
/*--em28xx_set_alternate--*/
int em28xx_gpio_set ( struct em28xx * dev , struct em28xx_reg_seq * gpio ) ; 
/*--em28xx_gpio_set--*/
int em28xx_set_mode ( struct em28xx * dev , enum em28xx_mode set_mode ) ; 
/*--em28xx_set_mode--*/
void em28xx_uninit_isoc ( struct em28xx * dev ) ; 
/*--em28xx_uninit_isoc--*/
int em28xx_init_isoc ( struct em28xx * dev , int max_packets , int num_bufs , int max_pkt_size , int ( * isoc_copy ) ( struct em28xx * dev , struct urb * urb ) ) ; 
/*--em28xx_init_isoc--*/
int em28xx_isoc_dvb_max_packetsize ( struct em28xx * dev ) ; 
/*--em28xx_isoc_dvb_max_packetsize--*/
void em28xx_wake_i2c ( struct em28xx * dev ) ; 
/*--em28xx_wake_i2c--*/
void em28xx_remove_from_devlist ( struct em28xx * dev ) ; 
/*--em28xx_remove_from_devlist--*/
void em28xx_add_into_devlist ( struct em28xx * dev ) ; 
/*--em28xx_add_into_devlist--*/
int em28xx_register_extension ( struct em28xx_ops * ops ) ; 
/*--em28xx_register_extension--*/
void em28xx_unregister_extension ( struct em28xx_ops * ops ) ; 
/*--em28xx_unregister_extension--*/
void em28xx_init_extension ( struct em28xx * dev ) ; 
/*--em28xx_init_extension--*/
void em28xx_close_extension ( struct em28xx * dev ) ; 
/*--em28xx_close_extension--*/
int em28xx_get_key_terratec ( struct IR_i2c * ir , u32 * ir_key , u32 * ir_raw ) ; 
/*--em28xx_get_key_terratec--*/
int em28xx_get_key_em_haup ( struct IR_i2c * ir , u32 * ir_key , u32 * ir_raw ) ; 
/*--em28xx_get_key_em_haup--*/
int em28xx_get_key_pinnacle_usb_grey ( struct IR_i2c * ir , u32 * ir_key , u32 * ir_raw ) ; 
/*--em28xx_get_key_pinnacle_usb_grey--*/
int em28xx_get_key_winfast_usbii_deluxe ( struct IR_i2c * ir , u32 * ir_key , u32 * ir_raw ) ; 
/*--em28xx_get_key_winfast_usbii_deluxe--*/
int em28xx_ir_change_protocol ( void * priv , u64 ir_type ) ; 
/*--em28xx_ir_change_protocol--*/
int em28xx_ir_init ( struct em28xx * dev ) ; 
/*--em28xx_ir_init--*/
int em28xx_ir_fini ( struct em28xx * dev ) ; 
/*--em28xx_ir_fini--*/
void em28xx_register_snapshot_button ( struct em28xx * dev ) ; 
/*--em28xx_register_snapshot_button--*/
void em28xx_deregister_snapshot_button ( struct em28xx * dev ) ; 
/*--em28xx_deregister_snapshot_button--*/
struct et61x251_device * et61x251_match_id ( struct et61x251_device * cam , const struct usb_device_id * id ) ; 
/*--et61x251_match_id--*/
void et61x251_attach_sensor ( struct et61x251_device * cam , const struct et61x251_sensor * sensor ) ; 
/*--et61x251_attach_sensor--*/
int et61x251_write_reg ( struct et61x251_device * cam , u8 value , u16 index ) ; 
/*--et61x251_write_reg--*/
int et61x251_i2c_raw_write ( struct et61x251_device * cam , u8 n , u8 data1 , u8 data2 , u8 data3 , u8 data4 , u8 data5 , u8 data6 , u8 data7 , u8 data8 , u8 address ) ; 
/*--et61x251_i2c_raw_write--*/
int et61x251_probe_tas5130d1b ( struct et61x251_device * cam ) ; 
/*--et61x251_probe_tas5130d1b--*/
struct gspca_frame * gspca_get_i_frame ( struct gspca_dev * gspca_dev ) ; 
/*--gspca_get_i_frame--*/
void gspca_frame_add ( struct gspca_dev * gspca_dev , enum gspca_packet_type packet_type , const u8 * data , int len ) ; 
/*--gspca_frame_add--*/
int gspca_dev_probe ( struct usb_interface * intf , const struct usb_device_id * id , const struct sd_desc * sd_desc , int dev_size , struct module * module ) ; 
/*--gspca_dev_probe--*/
void gspca_disconnect ( struct usb_interface * intf ) ; 
/*--gspca_disconnect--*/
int gspca_suspend ( struct usb_interface * intf , pm_message_t message ) ; 
/*--gspca_suspend--*/
int gspca_resume ( struct usb_interface * intf ) ; 
/*--gspca_resume--*/
int gspca_auto_gain_n_exposure ( struct gspca_dev * gspca_dev , int avg_lum , int desired_avg_lum , int deadzone , int gain_knee , int exposure_knee ) ; 
/*--gspca_auto_gain_n_exposure--*/
; int gl860_RTx ( struct gspca_dev * gspca_dev , unsigned char pref , u32 req , u16 val , u16 index , s32 len , void * pdata ) ; 
/*--gl860_RTx--*/
int fetch_validx ( struct gspca_dev * gspca_dev , struct validx * tbl , int len ) ; 
/*--fetch_validx--*/
int keep_on_fetching_validx ( struct gspca_dev * gspca_dev , struct validx * tbl , int len , int n ) ; 
/*--keep_on_fetching_validx--*/
void fetch_idxdata ( struct gspca_dev * gspca_dev , struct idxdata * tbl , int len ) ; 
/*--fetch_idxdata--*/
void mi1320_init_settings ( struct gspca_dev * gspca_dev ) ; 
/*--mi1320_init_settings--*/
void ov2640_init_settings ( struct gspca_dev * gspca_dev ) ; 
/*--ov2640_init_settings--*/
void ov9655_init_settings ( struct gspca_dev * gspca_dev ) ; 
/*--ov9655_init_settings--*/
void mi2020_init_settings ( struct gspca_dev * gspca_dev ) ; 
/*--mi2020_init_settings--*/
int m5602_read_bridge ( struct sd * sd , const u8 address , u8 * i2c_data ) ; 
/*--m5602_read_bridge--*/
int m5602_write_bridge ( struct sd * sd , const u8 address , const u8 i2c_data ) ; 
/*--m5602_write_bridge--*/
int m5602_read_sensor ( struct sd * sd , const u8 address , u8 * i2c_data , const u8 len ) ; 
/*--m5602_read_sensor--*/
int m5602_write_sensor ( struct sd * sd , const u8 address , u8 * i2c_data , const u8 len ) ; 
/*--m5602_write_sensor--*/
int ov9650_probe ( struct sd * sd ) ; 
/*--ov9650_probe--*/
int ov9650_init ( struct sd * sd ) ; 
/*--ov9650_init--*/
int ov9650_start ( struct sd * sd ) ; 
/*--ov9650_start--*/
int ov9650_stop ( struct sd * sd ) ; 
/*--ov9650_stop--*/
void ov9650_disconnect ( struct sd * sd ) ; 
/*--ov9650_disconnect--*/
int ov7660_probe ( struct sd * sd ) ; 
/*--ov7660_probe--*/
int ov7660_init ( struct sd * sd ) ; 
/*--ov7660_init--*/
int ov7660_start ( struct sd * sd ) ; 
/*--ov7660_start--*/
int ov7660_stop ( struct sd * sd ) ; 
/*--ov7660_stop--*/
void ov7660_disconnect ( struct sd * sd ) ; 
/*--ov7660_disconnect--*/
int mt9m111_probe ( struct sd * sd ) ; 
/*--mt9m111_probe--*/
int mt9m111_init ( struct sd * sd ) ; 
/*--mt9m111_init--*/
int mt9m111_start ( struct sd * sd ) ; 
/*--mt9m111_start--*/
void mt9m111_disconnect ( struct sd * sd ) ; 
/*--mt9m111_disconnect--*/
int po1030_probe ( struct sd * sd ) ; 
/*--po1030_probe--*/
int po1030_init ( struct sd * sd ) ; 
/*--po1030_init--*/
int po1030_start ( struct sd * sd ) ; 
/*--po1030_start--*/
void po1030_disconnect ( struct sd * sd ) ; 
/*--po1030_disconnect--*/
int s5k83a_probe ( struct sd * sd ) ; 
/*--s5k83a_probe--*/
int s5k83a_init ( struct sd * sd ) ; 
/*--s5k83a_init--*/
int s5k83a_start ( struct sd * sd ) ; 
/*--s5k83a_start--*/
int s5k83a_stop ( struct sd * sd ) ; 
/*--s5k83a_stop--*/
void s5k83a_disconnect ( struct sd * sd ) ; 
/*--s5k83a_disconnect--*/
int s5k4aa_probe ( struct sd * sd ) ; 
/*--s5k4aa_probe--*/
int s5k4aa_start ( struct sd * sd ) ; 
/*--s5k4aa_start--*/
int s5k4aa_init ( struct sd * sd ) ; 
/*--s5k4aa_init--*/
void s5k4aa_disconnect ( struct sd * sd ) ; 
/*--s5k4aa_disconnect--*/
int stv06xx_write_bridge ( struct sd * sd , u16 address , u16 i2c_data ) ; 
/*--stv06xx_write_bridge--*/
int stv06xx_read_bridge ( struct sd * sd , u16 address , u8 * i2c_data ) ; 
/*--stv06xx_read_bridge--*/
int stv06xx_write_sensor ( struct sd * sd , u8 address , u16 value ) ; 
/*--stv06xx_write_sensor--*/
int stv06xx_write_sensor_bytes ( struct sd * sd , const u8 * data , u8 len ) ; 
/*--stv06xx_write_sensor_bytes--*/
int stv06xx_write_sensor_words ( struct sd * sd , const u16 * data , u8 len ) ; 
/*--stv06xx_write_sensor_words--*/
int stv06xx_read_sensor ( struct sd * sd , const u8 address , u16 * value ) ; 
/*--stv06xx_read_sensor--*/
int hdpvr_config_call ( struct hdpvr_device * dev , uint value , u8 valbuf ) ; 
/*--hdpvr_config_call--*/
struct hdpvr_video_info * get_video_info ( struct hdpvr_device * dev ) ; 
/*--get_video_info--*/
int get_input_lines_info ( struct hdpvr_device * dev ) ; 
/*--get_input_lines_info--*/
int hdpvr_set_bitrate ( struct hdpvr_device * dev ) ; 
/*--hdpvr_set_bitrate--*/
int hdpvr_set_audio ( struct hdpvr_device * dev , u8 input , enum v4l2_mpeg_audio_encoding codec ) ; 
/*--hdpvr_set_audio--*/
int hdpvr_set_options ( struct hdpvr_device * dev ) ; 
/*--hdpvr_set_options--*/
void hdpvr_delete ( struct hdpvr_device * dev ) ; 
/*--hdpvr_delete--*/
int hdpvr_cancel_queue ( struct hdpvr_device * dev ) ; 
/*--hdpvr_cancel_queue--*/
int hdpvr_free_buffers ( struct hdpvr_device * dev ) ; 
/*--hdpvr_free_buffers--*/
int hdpvr_alloc_buffers ( struct hdpvr_device * dev , uint count ) ; 
/*--hdpvr_alloc_buffers--*/
int hdpvr_register_videodev ( struct hdpvr_device * dev , struct device * parent , int devnum ) ; 
/*--hdpvr_register_videodev--*/
int hdpvr_register_i2c_adapter ( struct hdpvr_device * dev ) ; 
/*--hdpvr_register_i2c_adapter--*/
void ivtv_audio_set_io ( struct ivtv * itv ) ; 
/*--ivtv_audio_set_io--*/
void ivtv_video_set_io ( struct ivtv * itv ) ; 
/*--ivtv_video_set_io--*/
const struct ivtv_card * ivtv_get_card ( u16 index ) ; 
/*--ivtv_get_card--*/
int ivtv_get_input ( struct ivtv * itv , u16 index , struct v4l2_input * input ) ; 
/*--ivtv_get_input--*/
int ivtv_get_output ( struct ivtv * itv , u16 index , struct v4l2_output * output ) ; 
/*--ivtv_get_output--*/
int ivtv_get_audio_input ( struct ivtv * itv , u16 index , struct v4l2_audio * audio ) ; 
/*--ivtv_get_audio_input--*/
int ivtv_get_audio_output ( struct ivtv * itv , u16 index , struct v4l2_audioout * aud_output ) ; 
/*--ivtv_get_audio_output--*/
int ivtv_queryctrl ( struct file * file , void * fh , struct v4l2_queryctrl * qctrl ) ; 
/*--ivtv_queryctrl--*/
int ivtv_querymenu ( struct file * file , void * fh , struct v4l2_querymenu * qmenu ) ; 
/*--ivtv_querymenu--*/
int ivtv_g_ext_ctrls ( struct file * file , void * fh , struct v4l2_ext_controls * c ) ; 
/*--ivtv_g_ext_ctrls--*/
int ivtv_s_ext_ctrls ( struct file * file , void * fh , struct v4l2_ext_controls * c ) ; 
/*--ivtv_s_ext_ctrls--*/
int ivtv_try_ext_ctrls ( struct file * file , void * fh , struct v4l2_ext_controls * c ) ; 
/*--ivtv_try_ext_ctrls--*/
void ivtv_clear_irq_mask ( struct ivtv * itv , u32 mask ) ; 
/*--ivtv_clear_irq_mask--*/
void ivtv_set_irq_mask ( struct ivtv * itv , u32 mask ) ; 
/*--ivtv_set_irq_mask--*/
int ivtv_set_output_mode ( struct ivtv * itv , int mode ) ; 
/*--ivtv_set_output_mode--*/
struct ivtv_stream * ivtv_get_output_stream ( struct ivtv * itv ) ; 
/*--ivtv_get_output_stream--*/
int ivtv_waitq ( wait_queue_head_t * waitq ) ; 
/*--ivtv_waitq--*/
int ivtv_msleep_timeout ( unsigned int msecs , int intr ) ; 
/*--ivtv_msleep_timeout--*/
void ivtv_read_eeprom ( struct ivtv * itv , struct tveeprom * tv ) ; 
/*--ivtv_read_eeprom--*/
int ivtv_init_on_first_open ( struct ivtv * itv ) ; 
/*--ivtv_init_on_first_open--*/
void ivtv_release_stream ( struct ivtv_stream * s ) ; 
/*--ivtv_release_stream--*/
int ivtv_start_capture ( struct ivtv_open_id * id ) ; 
/*--ivtv_start_capture--*/
ssize_t ivtv_v4l2_read ( struct file * filp , char * buf , size_t count , loff_t * pos ) ; 
/*--ivtv_v4l2_read--*/
int ivtv_start_decoding ( struct ivtv_open_id * id , int speed ) ; 
/*--ivtv_start_decoding--*/
ssize_t ivtv_v4l2_write ( struct file * filp , const char * user_buf , size_t count , loff_t * pos ) ; 
/*--ivtv_v4l2_write--*/
unsigned int ivtv_v4l2_dec_poll ( struct file * filp , poll_table * wait ) ; 
/*--ivtv_v4l2_dec_poll--*/
unsigned int ivtv_v4l2_enc_poll ( struct file * filp , poll_table * wait ) ; 
/*--ivtv_v4l2_enc_poll--*/
void ivtv_stop_capture ( struct ivtv_open_id * id , int gop_end ) ; 
/*--ivtv_stop_capture--*/
int ivtv_v4l2_close ( struct file * filp ) ; 
/*--ivtv_v4l2_close--*/
int ivtv_v4l2_open ( struct file * filp ) ; 
/*--ivtv_v4l2_open--*/
void ivtv_mute ( struct ivtv * itv ) ; 
/*--ivtv_mute--*/
void ivtv_unmute ( struct ivtv * itv ) ; 
/*--ivtv_unmute--*/
void ivtv_halt_firmware ( struct ivtv * itv ) ; 
/*--ivtv_halt_firmware--*/
void ivtv_firmware_versions ( struct ivtv * itv ) ; 
/*--ivtv_firmware_versions--*/
int ivtv_firmware_init ( struct ivtv * itv ) ; 
/*--ivtv_firmware_init--*/
void ivtv_init_mpeg_decoder ( struct ivtv * itv ) ; 
/*--ivtv_init_mpeg_decoder--*/
void ivtv_reset_ir_gpio ( struct ivtv * itv ) ; 
/*--ivtv_reset_ir_gpio--*/
int ivtv_reset_tuner_gpio ( void * dev , int component , int cmd , int value ) ; 
/*--ivtv_reset_tuner_gpio--*/
int ivtv_gpio_init ( struct ivtv * itv ) ; 
/*--ivtv_gpio_init--*/
struct i2c_client * ivtv_i2c_new_ir_legacy ( struct ivtv * itv ) ; 
/*--ivtv_i2c_new_ir_legacy--*/
int ivtv_i2c_register ( struct ivtv * itv , unsigned idx ) ; 
/*--ivtv_i2c_register--*/
struct v4l2_subdev * ivtv_find_hw ( struct ivtv * itv , u32 hw ) ; 
/*--ivtv_find_hw--*/
int init_ivtv_i2c ( struct ivtv * itv ) ; 
/*--init_ivtv_i2c--*/
void exit_ivtv_i2c ( struct ivtv * itv ) ; 
/*--exit_ivtv_i2c--*/
u16 ivtv_service2vbi ( int type ) ; 
/*--ivtv_service2vbi--*/
void ivtv_expand_service_set ( struct v4l2_sliced_vbi_format * fmt , int is_pal ) ; 
/*--ivtv_expand_service_set--*/
u16 ivtv_get_service_set ( struct v4l2_sliced_vbi_format * fmt ) ; 
/*--ivtv_get_service_set--*/
void ivtv_set_osd_alpha ( struct ivtv * itv ) ; 
/*--ivtv_set_osd_alpha--*/
int ivtv_set_speed ( struct ivtv * itv , int speed ) ; 
/*--ivtv_set_speed--*/
int ivtv_s_input ( struct file * file , void * fh , unsigned int inp ) ; 
/*--ivtv_s_input--*/
int ivtv_s_frequency ( struct file * file , void * fh , struct v4l2_frequency * vf ) ; 
/*--ivtv_s_frequency--*/
int ivtv_s_std ( struct file * file , void * fh , v4l2_std_id * std ) ; 
/*--ivtv_s_std--*/
long ivtv_v4l2_ioctl ( struct file * filp , unsigned int cmd , unsigned long arg ) ; 
/*--ivtv_v4l2_ioctl--*/
void ivtv_set_funcs ( struct video_device * vdev ) ; 
/*--ivtv_set_funcs--*/
void ivtv_irq_work_handler ( struct work_struct * work ) ; 
/*--ivtv_irq_work_handler--*/
void ivtv_dma_stream_dec_prepare ( struct ivtv_stream * s , u32 offset , int lock ) ; 
/*--ivtv_dma_stream_dec_prepare--*/
irqreturn_t ivtv_irq_handler ( int irq , void * dev_id ) ; 
/*--ivtv_irq_handler--*/
void ivtv_unfinished_dma ( unsigned long arg ) ; 
/*--ivtv_unfinished_dma--*/
int ivtv_api ( struct ivtv * itv , int cmd , int args , u32 data [ ] ) ; 
/*--ivtv_api--*/
int ivtv_api_func ( void * priv , u32 cmd , int in , int out , u32 data [ 16 ] ) ; 
/*--ivtv_api_func--*/
int ivtv_vapi_result ( struct ivtv * itv , u32 data [ 16 ] , int cmd , int args , ... ) ; 
/*--ivtv_vapi_result--*/
int ivtv_vapi ( struct ivtv * itv , int cmd , int args , ... ) ; 
/*--ivtv_vapi--*/
void ivtv_api_get_data ( struct ivtv_mailbox_data * mbdata , int mb , int argc , u32 data [ ] ) ; 
/*--ivtv_api_get_data--*/
int ivtv_buf_copy_from_user ( struct ivtv_stream * s , struct ivtv_buffer * buf , const char * src , int copybytes ) ; 
/*--ivtv_buf_copy_from_user--*/
void ivtv_buf_swap ( struct ivtv_buffer * buf ) ; 
/*--ivtv_buf_swap--*/
void ivtv_queue_init ( struct ivtv_queue * q ) ; 
/*--ivtv_queue_init--*/
void ivtv_enqueue ( struct ivtv_stream * s , struct ivtv_buffer * buf , struct ivtv_queue * q ) ; 
/*--ivtv_enqueue--*/
struct ivtv_buffer * ivtv_dequeue ( struct ivtv_stream * s , struct ivtv_queue * q ) ; 
/*--ivtv_dequeue--*/
int ivtv_queue_move ( struct ivtv_stream * s , struct ivtv_queue * from , struct ivtv_queue * steal , struct ivtv_queue * to , int needed_bytes ) ; 
/*--ivtv_queue_move--*/
void ivtv_flush_queues ( struct ivtv_stream * s ) ; 
/*--ivtv_flush_queues--*/
int ivtv_stream_alloc ( struct ivtv_stream * s ) ; 
/*--ivtv_stream_alloc--*/
void ivtv_stream_free ( struct ivtv_stream * s ) ; 
/*--ivtv_stream_free--*/
int ivtv_streams_setup ( struct ivtv * itv ) ; 
/*--ivtv_streams_setup--*/
int ivtv_streams_register ( struct ivtv * itv ) ; 
/*--ivtv_streams_register--*/
void ivtv_streams_cleanup ( struct ivtv * itv , int unregister ) ; 
/*--ivtv_streams_cleanup--*/
int ivtv_start_v4l2_encode_stream ( struct ivtv_stream * s ) ; 
/*--ivtv_start_v4l2_encode_stream--*/
int ivtv_start_v4l2_decode_stream ( struct ivtv_stream * s , int gop_offset ) ; 
/*--ivtv_start_v4l2_decode_stream--*/
void ivtv_stop_all_captures ( struct ivtv * itv ) ; 
/*--ivtv_stop_all_captures--*/
int ivtv_stop_v4l2_encode_stream ( struct ivtv_stream * s , int gop_end ) ; 
/*--ivtv_stop_v4l2_encode_stream--*/
int ivtv_stop_v4l2_decode_stream ( struct ivtv_stream * s , int flags , u64 pts ) ; 
/*--ivtv_stop_v4l2_decode_stream--*/
int ivtv_passthrough_mode ( struct ivtv * itv , int enable ) ; 
/*--ivtv_passthrough_mode--*/
void ivtv_udma_get_page_info ( struct ivtv_dma_page_info * dma_page , unsigned long first , unsigned long size ) ; 
/*--ivtv_udma_get_page_info--*/
int ivtv_udma_fill_sg_list ( struct ivtv_user_dma * dma , struct ivtv_dma_page_info * dma_page , int map_offset ) ; 
/*--ivtv_udma_fill_sg_list--*/
void ivtv_udma_fill_sg_array ( struct ivtv_user_dma * dma , u32 buffer_offset , u32 buffer_offset_2 , u32 split ) ; 
/*--ivtv_udma_fill_sg_array--*/
void ivtv_udma_alloc ( struct ivtv * itv ) ; 
/*--ivtv_udma_alloc--*/
int ivtv_udma_setup ( struct ivtv * itv , unsigned long ivtv_dest_addr , void * userbuf , int size_in_bytes ) ; 
/*--ivtv_udma_setup--*/
void ivtv_udma_unmap ( struct ivtv * itv ) ; 
/*--ivtv_udma_unmap--*/
void ivtv_udma_free ( struct ivtv * itv ) ; 
/*--ivtv_udma_free--*/
void ivtv_udma_start ( struct ivtv * itv ) ; 
/*--ivtv_udma_start--*/
void ivtv_udma_prepare ( struct ivtv * itv ) ; 
/*--ivtv_udma_prepare--*/
void ivtv_write_vbi ( struct ivtv * itv , const struct v4l2_sliced_vbi_data * sliced , size_t cnt ) ; 
/*--ivtv_write_vbi--*/
void ivtv_process_vbi_data ( struct ivtv * itv , struct ivtv_buffer * buf , u64 pts_stamp , int streamtype ) ; 
/*--ivtv_process_vbi_data--*/
void ivtv_disable_cc ( struct ivtv * itv ) ; 
/*--ivtv_disable_cc--*/
void ivtv_vbi_work_handler ( struct ivtv * itv ) ; 
/*--ivtv_vbi_work_handler--*/
int ivtv_yuv_filter_check ( struct ivtv * itv ) ; 
/*--ivtv_yuv_filter_check--*/
void ivtv_yuv_work_handler ( struct ivtv * itv ) ; 
/*--ivtv_yuv_work_handler--*/
void ivtv_yuv_frame_complete ( struct ivtv * itv ) ; 
/*--ivtv_yuv_frame_complete--*/
void ivtv_yuv_setup_stream_frame ( struct ivtv * itv ) ; 
/*--ivtv_yuv_setup_stream_frame--*/
int ivtv_yuv_udma_stream_frame ( struct ivtv * itv , void * src ) ; 
/*--ivtv_yuv_udma_stream_frame--*/
int ivtv_yuv_prep_frame ( struct ivtv * itv , struct ivtv_dma_frame * args ) ; 
/*--ivtv_yuv_prep_frame--*/
void ivtv_yuv_close ( struct ivtv * itv ) ; 
/*--ivtv_yuv_close--*/
int ov_write_regvals ( struct i2c_client * c , struct ovcamchip_regvals * rvals ) ; 
/*--ov_write_regvals--*/
int ov_write_mask ( struct i2c_client * c , unsigned char reg , unsigned char value , unsigned char mask ) ; 
/*--ov_write_mask--*/
void pvr2_i2c_core_init ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_i2c_core_init--*/
void pvr2_i2c_core_done ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_i2c_core_done--*/
void pvr2_msp3400_subdev_update ( struct pvr2_hdw * hdw , struct v4l2_subdev * sd ) ; 
/*--pvr2_msp3400_subdev_update--*/
int pvr2_encoder_adjust ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_encoder_adjust--*/
int pvr2_encoder_configure ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_encoder_configure--*/
int pvr2_encoder_start ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_encoder_start--*/
int pvr2_encoder_stop ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_encoder_stop--*/
void pvr2_saa7115_subdev_update ( struct pvr2_hdw * hdw , struct v4l2_subdev * sd ) ; 
/*--pvr2_saa7115_subdev_update--*/
int pvr2_eeprom_analyze ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_eeprom_analyze--*/
const char * pvr2_config_get_name ( enum pvr2_config cfg ) ; 
/*--pvr2_config_get_name--*/
struct usb_device * pvr2_hdw_get_dev ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_dev--*/
unsigned long pvr2_hdw_get_sn ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_sn--*/
const char * pvr2_hdw_get_bus_info ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_bus_info--*/
const char * pvr2_hdw_get_device_identifier ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_device_identifier--*/
unsigned long pvr2_hdw_get_cur_freq ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_cur_freq--*/
int pvr2_hdw_get_unit_number ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_unit_number--*/
int pvr2_upload_firmware2 ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_upload_firmware2--*/
int pvr2_hdw_get_state ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_state--*/
int pvr2_hdw_untrip ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_untrip--*/
int pvr2_hdw_get_streaming ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_streaming--*/
int pvr2_hdw_set_streaming ( struct pvr2_hdw * hdw , int enable_flag ) ; 
/*--pvr2_hdw_set_streaming--*/
int pvr2_hdw_set_stream_type ( struct pvr2_hdw * hdw , enum pvr2_config config ) ; 
/*--pvr2_hdw_set_stream_type--*/
int pvr2_hdw_initialize ( struct pvr2_hdw * hdw , void ( * callback_func ) ( void * ) , void * callback_data ) ; 
/*--pvr2_hdw_initialize--*/
struct pvr2_hdw * pvr2_hdw_create ( struct usb_interface * intf , const struct usb_device_id * devid ) ; 
/*--pvr2_hdw_create--*/
void pvr2_hdw_destroy ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_destroy--*/
int pvr2_hdw_dev_ok ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_dev_ok--*/
void pvr2_hdw_disconnect ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_disconnect--*/
int pvr2_hdw_get_stdenum_value ( struct pvr2_hdw * hdw , struct v4l2_standard * std , unsigned int idx ) ; 
/*--pvr2_hdw_get_stdenum_value--*/
unsigned int pvr2_hdw_get_ctrl_count ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_ctrl_count--*/
struct pvr2_ctrl * pvr2_hdw_get_ctrl_by_index ( struct pvr2_hdw * hdw , unsigned int idx ) ; 
/*--pvr2_hdw_get_ctrl_by_index--*/
struct pvr2_ctrl * pvr2_hdw_get_ctrl_by_id ( struct pvr2_hdw * hdw , unsigned int ctl_id ) ; 
/*--pvr2_hdw_get_ctrl_by_id--*/
struct pvr2_ctrl * pvr2_hdw_get_ctrl_v4l ( struct pvr2_hdw * hdw , unsigned int ctl_id ) ; 
/*--pvr2_hdw_get_ctrl_v4l--*/
struct pvr2_ctrl * pvr2_hdw_get_ctrl_nextv4l ( struct pvr2_hdw * hdw , unsigned int ctl_id ) ; 
/*--pvr2_hdw_get_ctrl_nextv4l--*/
int pvr2_hdw_commit_ctl ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_commit_ctl--*/
const char * pvr2_hdw_get_driver_name ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_driver_name--*/
const char * pvr2_hdw_get_desc ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_desc--*/
const char * pvr2_hdw_get_type ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_type--*/
int pvr2_hdw_is_hsm ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_is_hsm--*/
void pvr2_hdw_execute_tuner_poll ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_execute_tuner_poll--*/
int pvr2_hdw_get_cropcap ( struct pvr2_hdw * hdw , struct v4l2_cropcap * pp ) ; 
/*--pvr2_hdw_get_cropcap--*/
int pvr2_hdw_get_tuner_status ( struct pvr2_hdw * hdw , struct v4l2_tuner * vtp ) ; 
/*--pvr2_hdw_get_tuner_status--*/
struct pvr2_stream * pvr2_hdw_get_video_stream ( struct pvr2_hdw * hp ) ; 
/*--pvr2_hdw_get_video_stream--*/
void pvr2_hdw_trigger_module_log ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_trigger_module_log--*/
void pvr2_hdw_cpufw_set_enabled ( struct pvr2_hdw * hdw , int mode , int enable_flag ) ; 
/*--pvr2_hdw_cpufw_set_enabled--*/
int pvr2_hdw_cpufw_get_enabled ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_cpufw_get_enabled--*/
int pvr2_hdw_cpufw_get ( struct pvr2_hdw * hdw , unsigned int offs , char * buf , unsigned int cnt ) ; 
/*--pvr2_hdw_cpufw_get--*/
int pvr2_hdw_v4l_get_minor_number ( struct pvr2_hdw * hdw , enum pvr2_v4l_type index ) ; 
/*--pvr2_hdw_v4l_get_minor_number--*/
void pvr2_hdw_v4l_store_minor_number ( struct pvr2_hdw * hdw , enum pvr2_v4l_type index , int v ) ; 
/*--pvr2_hdw_v4l_store_minor_number--*/
int pvr2_send_request ( struct pvr2_hdw * hdw , void * write_data , unsigned int write_len , void * read_data , unsigned int read_len ) ; 
/*--pvr2_send_request--*/
int pvr2_write_register ( struct pvr2_hdw * hdw , u16 reg , u32 data ) ; 
/*--pvr2_write_register--*/
void pvr2_hdw_render_useless ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_render_useless--*/
void pvr2_hdw_device_reset ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_device_reset--*/
void pvr2_hdw_cpureset_assert ( struct pvr2_hdw * hdw , int val ) ; 
/*--pvr2_hdw_cpureset_assert--*/
int pvr2_hdw_cmd_deep_reset ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_cmd_deep_reset--*/
int pvr2_hdw_cmd_powerup ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_cmd_powerup--*/
int pvr2_hdw_cmd_powerdown ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_cmd_powerdown--*/
int pvr2_hdw_cmd_decoder_reset ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_cmd_decoder_reset--*/
unsigned int pvr2_hdw_state_report ( struct pvr2_hdw * hdw , char * buf , unsigned int acnt ) ; 
/*--pvr2_hdw_state_report--*/
int pvr2_hdw_gpio_get_dir ( struct pvr2_hdw * hdw , u32 * dp ) ; 
/*--pvr2_hdw_gpio_get_dir--*/
int pvr2_hdw_gpio_get_out ( struct pvr2_hdw * hdw , u32 * dp ) ; 
/*--pvr2_hdw_gpio_get_out--*/
int pvr2_hdw_gpio_get_in ( struct pvr2_hdw * hdw , u32 * dp ) ; 
/*--pvr2_hdw_gpio_get_in--*/
int pvr2_hdw_gpio_chg_dir ( struct pvr2_hdw * hdw , u32 msk , u32 val ) ; 
/*--pvr2_hdw_gpio_chg_dir--*/
int pvr2_hdw_gpio_chg_out ( struct pvr2_hdw * hdw , u32 msk , u32 val ) ; 
/*--pvr2_hdw_gpio_chg_out--*/
void pvr2_hdw_status_poll ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_status_poll--*/
unsigned int pvr2_hdw_get_input_available ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_input_available--*/
unsigned int pvr2_hdw_get_input_allowed ( struct pvr2_hdw * hdw ) ; 
/*--pvr2_hdw_get_input_allowed--*/
int pvr2_hdw_set_input_allowed ( struct pvr2_hdw * hdw , unsigned int change_mask , unsigned int change_val ) ; 
/*--pvr2_hdw_set_input_allowed--*/
int pvr2_hdw_register_access ( struct pvr2_hdw * hdw , struct v4l2_dbg_match * match , u64 reg_id , int setFl , u64 * val_ptr ) ; 
/*--pvr2_hdw_register_access--*/
struct pvr2_v4l2 * pvr2_v4l2_create ( struct pvr2_context * mnp ) ; 
/*--pvr2_v4l2_create--*/
int pvr2_ctrl_set_value ( struct pvr2_ctrl * cptr , int val ) ; 
/*--pvr2_ctrl_set_value--*/
int pvr2_ctrl_set_mask_value ( struct pvr2_ctrl * cptr , int mask , int val ) ; 
/*--pvr2_ctrl_set_mask_value--*/
int pvr2_ctrl_get_value ( struct pvr2_ctrl * cptr , int * valptr ) ; 
/*--pvr2_ctrl_get_value--*/
enum pvr2_ctl_type pvr2_ctrl_get_type ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_type--*/
int pvr2_ctrl_get_max ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_max--*/
int pvr2_ctrl_get_min ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_min--*/
int pvr2_ctrl_get_def ( struct pvr2_ctrl * cptr , int * valptr ) ; 
/*--pvr2_ctrl_get_def--*/
int pvr2_ctrl_get_cnt ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_cnt--*/
int pvr2_ctrl_get_mask ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_mask--*/
const char * pvr2_ctrl_get_name ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_name--*/
const char * pvr2_ctrl_get_desc ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_desc--*/
int pvr2_ctrl_get_valname ( struct pvr2_ctrl * cptr , int val , char * bptr , unsigned int bmax , unsigned int * blen ) ; 
/*--pvr2_ctrl_get_valname--*/
int pvr2_ctrl_get_v4lid ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_v4lid--*/
unsigned int pvr2_ctrl_get_v4lflags ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_get_v4lflags--*/
int pvr2_ctrl_is_writable ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_is_writable--*/
int pvr2_ctrl_has_custom_symbols ( struct pvr2_ctrl * cptr ) ; 
/*--pvr2_ctrl_has_custom_symbols--*/
int pvr2_ctrl_custom_value_to_sym ( struct pvr2_ctrl * cptr , int mask , int val , char * buf , unsigned int maxlen , unsigned int * len ) ; 
/*--pvr2_ctrl_custom_value_to_sym--*/
int pvr2_ctrl_custom_sym_to_value ( struct pvr2_ctrl * cptr , const char * buf , unsigned int len , int * maskptr , int * valptr ) ; 
/*--pvr2_ctrl_custom_sym_to_value--*/
int pvr2_ctrl_sym_to_value ( struct pvr2_ctrl * cptr , const char * ptr , unsigned int len , int * maskptr , int * valptr ) ; 
/*--pvr2_ctrl_sym_to_value--*/
int pvr2_ctrl_value_to_sym_internal ( struct pvr2_ctrl * cptr , int mask , int val , char * buf , unsigned int maxlen , unsigned int * len ) ; 
/*--pvr2_ctrl_value_to_sym_internal--*/
int pvr2_ctrl_value_to_sym ( struct pvr2_ctrl * cptr , int mask , int val , char * buf , unsigned int maxlen , unsigned int * len ) ; 
/*--pvr2_ctrl_value_to_sym--*/
int pvr2_std_str_to_id ( v4l2_std_id * idPtr , const char * bufPtr , unsigned int bufSize ) ; 
/*--pvr2_std_str_to_id--*/
unsigned int pvr2_std_id_to_str ( char * bufPtr , unsigned int bufSize , v4l2_std_id id ) ; 
/*--pvr2_std_id_to_str--*/
struct v4l2_standard * pvr2_std_create_enum ( unsigned int * countptr , v4l2_std_id id ) ; 
/*--pvr2_std_create_enum--*/
v4l2_std_id pvr2_std_get_usable ( void ) ; 
/*--pvr2_std_get_usable--*/
int pvr2_context_global_init ( void ) ; 
/*--pvr2_context_global_init--*/
void pvr2_context_global_done ( void ) ; 
/*--pvr2_context_global_done--*/
struct pvr2_context * pvr2_context_create ( struct usb_interface * intf , const struct usb_device_id * devid , void ( * setup_func ) ( struct pvr2_context * ) ) ; 
/*--pvr2_context_create--*/
void pvr2_context_disconnect ( struct pvr2_context * mp ) ; 
/*--pvr2_context_disconnect--*/
void pvr2_channel_init ( struct pvr2_channel * cp , struct pvr2_context * mp ) ; 
/*--pvr2_channel_init--*/
void pvr2_channel_done ( struct pvr2_channel * cp ) ; 
/*--pvr2_channel_done--*/
int pvr2_channel_limit_inputs ( struct pvr2_channel * cp , unsigned int cmsk ) ; 
/*--pvr2_channel_limit_inputs--*/
unsigned int pvr2_channel_get_limited_inputs ( struct pvr2_channel * cp ) ; 
/*--pvr2_channel_get_limited_inputs--*/
int pvr2_channel_claim_stream ( struct pvr2_channel * cp , struct pvr2_context_stream * sp ) ; 
/*--pvr2_channel_claim_stream--*/
struct pvr2_ioread * pvr2_channel_create_mpeg_stream ( struct pvr2_context_stream * sp ) ; 
/*--pvr2_channel_create_mpeg_stream--*/
struct pvr2_stream * pvr2_stream_create ( void ) ; 
/*--pvr2_stream_create--*/
void pvr2_stream_destroy ( struct pvr2_stream * sp ) ; 
/*--pvr2_stream_destroy--*/
void pvr2_stream_setup ( struct pvr2_stream * sp , struct usb_device * dev , int endpoint , unsigned int tolerance ) ; 
/*--pvr2_stream_setup--*/
void pvr2_stream_set_callback ( struct pvr2_stream * sp , pvr2_stream_callback func , void * data ) ; 
/*--pvr2_stream_set_callback--*/
void pvr2_stream_get_stats ( struct pvr2_stream * sp , struct pvr2_stream_stats * stats , int zero_counts ) ; 
/*--pvr2_stream_get_stats--*/
int pvr2_stream_get_buffer_count ( struct pvr2_stream * sp ) ; 
/*--pvr2_stream_get_buffer_count--*/
int pvr2_stream_set_buffer_count ( struct pvr2_stream * sp , unsigned int cnt ) ; 
/*--pvr2_stream_set_buffer_count--*/
struct pvr2_buffer * pvr2_stream_get_idle_buffer ( struct pvr2_stream * sp ) ; 
/*--pvr2_stream_get_idle_buffer--*/
struct pvr2_buffer * pvr2_stream_get_ready_buffer ( struct pvr2_stream * sp ) ; 
/*--pvr2_stream_get_ready_buffer--*/
struct pvr2_buffer * pvr2_stream_get_buffer ( struct pvr2_stream * sp , int id ) ; 
/*--pvr2_stream_get_buffer--*/
int pvr2_stream_get_ready_count ( struct pvr2_stream * sp ) ; 
/*--pvr2_stream_get_ready_count--*/
void pvr2_stream_kill ( struct pvr2_stream * sp ) ; 
/*--pvr2_stream_kill--*/
int pvr2_buffer_queue ( struct pvr2_buffer * bp ) ; 
/*--pvr2_buffer_queue--*/
int pvr2_buffer_set_buffer ( struct pvr2_buffer * bp , void * ptr , unsigned int cnt ) ; 
/*--pvr2_buffer_set_buffer--*/
unsigned int pvr2_buffer_get_count ( struct pvr2_buffer * bp ) ; 
/*--pvr2_buffer_get_count--*/
int pvr2_buffer_get_status ( struct pvr2_buffer * bp ) ; 
/*--pvr2_buffer_get_status--*/
int pvr2_buffer_get_id ( struct pvr2_buffer * bp ) ; 
/*--pvr2_buffer_get_id--*/
struct pvr2_ioread * pvr2_ioread_create ( void ) ; 
/*--pvr2_ioread_create--*/
void pvr2_ioread_destroy ( struct pvr2_ioread * cp ) ; 
/*--pvr2_ioread_destroy--*/
void pvr2_ioread_set_sync_key ( struct pvr2_ioread * cp , const char * sync_key_ptr , unsigned int sync_key_len ) ; 
/*--pvr2_ioread_set_sync_key--*/
struct pvr2_stream * pvr2_ioread_get_stream ( struct pvr2_ioread * cp ) ; 
/*--pvr2_ioread_get_stream--*/
int pvr2_ioread_setup ( struct pvr2_ioread * cp , struct pvr2_stream * sp ) ; 
/*--pvr2_ioread_setup--*/
int pvr2_ioread_set_enabled ( struct pvr2_ioread * cp , int fl ) ; 
/*--pvr2_ioread_set_enabled--*/
int pvr2_ioread_avail ( struct pvr2_ioread * cp ) ; 
/*--pvr2_ioread_avail--*/
int pvr2_ioread_read ( struct pvr2_ioread * cp , void * buf , unsigned int cnt ) ; 
/*--pvr2_ioread_read--*/
void pvr2_cx25840_subdev_update ( struct pvr2_hdw * hdw , struct v4l2_subdev * sd ) ; 
/*--pvr2_cx25840_subdev_update--*/
void pvr2_wm8775_subdev_update ( struct pvr2_hdw * hdw , struct v4l2_subdev * sd ) ; 
/*--pvr2_wm8775_subdev_update--*/
void pvr2_cs53l32a_subdev_update ( struct pvr2_hdw * hdw , struct v4l2_subdev * sd ) ; 
/*--pvr2_cs53l32a_subdev_update--*/
struct pvr2_dvb_adapter * pvr2_dvb_create ( struct pvr2_context * pvr ) ; 
/*--pvr2_dvb_create--*/
struct pvr2_sysfs * pvr2_sysfs_create ( struct pvr2_context * mp , struct pvr2_sysfs_class * class_ptr ) ; 
/*--pvr2_sysfs_create--*/
struct pvr2_sysfs_class * pvr2_sysfs_class_create ( void ) ; 
/*--pvr2_sysfs_class_create--*/
void pvr2_sysfs_class_destroy ( struct pvr2_sysfs_class * clp ) ; 
/*--pvr2_sysfs_class_destroy--*/
int pwc_handle_frame ( struct pwc_device * pdev ) ; 
/*--pwc_handle_frame--*/
void pwc_next_image ( struct pwc_device * pdev ) ; 
/*--pwc_next_image--*/
int pwc_isoc_init ( struct pwc_device * pdev ) ; 
/*--pwc_isoc_init--*/
void pwc_isoc_cleanup ( struct pwc_device * pdev ) ; 
/*--pwc_isoc_cleanup--*/
int pwc_try_video_mode ( struct pwc_device * pdev , int width , int height , int new_fps , int new_compression , int new_snapshot ) ; 
/*--pwc_try_video_mode--*/
int pwc_decode_size ( struct pwc_device * pdev , int width , int height ) ; 
/*--pwc_decode_size--*/
void pwc_construct ( struct pwc_device * pdev ) ; 
/*--pwc_construct--*/
int pwc_set_video_mode ( struct pwc_device * pdev , int width , int height , int frames , int compression , int snapshot ) ; 
/*--pwc_set_video_mode--*/
unsigned int pwc_get_fps ( struct pwc_device * pdev , unsigned int index , unsigned int size ) ; 
/*--pwc_get_fps--*/
int pwc_get_brightness ( struct pwc_device * pdev ) ; 
/*--pwc_get_brightness--*/
int pwc_set_brightness ( struct pwc_device * pdev , int value ) ; 
/*--pwc_set_brightness--*/
int pwc_get_contrast ( struct pwc_device * pdev ) ; 
/*--pwc_get_contrast--*/
int pwc_set_contrast ( struct pwc_device * pdev , int value ) ; 
/*--pwc_set_contrast--*/
int pwc_get_gamma ( struct pwc_device * pdev ) ; 
/*--pwc_get_gamma--*/
int pwc_set_gamma ( struct pwc_device * pdev , int value ) ; 
/*--pwc_set_gamma--*/
int pwc_get_saturation ( struct pwc_device * pdev , int * value ) ; 
/*--pwc_get_saturation--*/
int pwc_set_saturation ( struct pwc_device * pdev , int value ) ; 
/*--pwc_set_saturation--*/
int pwc_set_agc ( struct pwc_device * pdev , int mode , int value ) ; 
/*--pwc_set_agc--*/
int pwc_get_agc ( struct pwc_device * pdev , int * value ) ; 
/*--pwc_get_agc--*/
int pwc_set_shutter_speed ( struct pwc_device * pdev , int mode , int value ) ; 
/*--pwc_set_shutter_speed--*/
int pwc_get_shutter_speed ( struct pwc_device * pdev , int * value ) ; 
/*--pwc_get_shutter_speed--*/
int pwc_camera_power ( struct pwc_device * pdev , int power ) ; 
/*--pwc_camera_power--*/
int pwc_restore_user ( struct pwc_device * pdev ) ; 
/*--pwc_restore_user--*/
int pwc_save_user ( struct pwc_device * pdev ) ; 
/*--pwc_save_user--*/
int pwc_restore_factory ( struct pwc_device * pdev ) ; 
/*--pwc_restore_factory--*/
int pwc_set_awb ( struct pwc_device * pdev , int mode ) ; 
/*--pwc_set_awb--*/
int pwc_get_awb ( struct pwc_device * pdev ) ; 
/*--pwc_get_awb--*/
int pwc_set_red_gain ( struct pwc_device * pdev , int value ) ; 
/*--pwc_set_red_gain--*/
int pwc_get_red_gain ( struct pwc_device * pdev , int * value ) ; 
/*--pwc_get_red_gain--*/
int pwc_set_blue_gain ( struct pwc_device * pdev , int value ) ; 
/*--pwc_set_blue_gain--*/
int pwc_get_blue_gain ( struct pwc_device * pdev , int * value ) ; 
/*--pwc_get_blue_gain--*/
int pwc_set_leds ( struct pwc_device * pdev , int on_value , int off_value ) ; 
/*--pwc_set_leds--*/
int pwc_set_contour ( struct pwc_device * pdev , int contour ) ; 
/*--pwc_set_contour--*/
int pwc_get_contour ( struct pwc_device * pdev , int * contour ) ; 
/*--pwc_get_contour--*/
int pwc_set_backlight ( struct pwc_device * pdev , int backlight ) ; 
/*--pwc_set_backlight--*/
int pwc_get_backlight ( struct pwc_device * pdev , int * backlight ) ; 
/*--pwc_get_backlight--*/
int pwc_set_colour_mode ( struct pwc_device * pdev , int colour ) ; 
/*--pwc_set_colour_mode--*/
int pwc_get_colour_mode ( struct pwc_device * pdev , int * colour ) ; 
/*--pwc_get_colour_mode--*/
int pwc_set_flicker ( struct pwc_device * pdev , int flicker ) ; 
/*--pwc_set_flicker--*/
int pwc_get_flicker ( struct pwc_device * pdev , int * flicker ) ; 
/*--pwc_get_flicker--*/
int pwc_set_dynamic_noise ( struct pwc_device * pdev , int noise ) ; 
/*--pwc_set_dynamic_noise--*/
int pwc_get_dynamic_noise ( struct pwc_device * pdev , int * noise ) ; 
/*--pwc_get_dynamic_noise--*/
int pwc_mpt_reset ( struct pwc_device * pdev , int flags ) ; 
/*--pwc_mpt_reset--*/
int pwc_mpt_set_angle ( struct pwc_device * pdev , int pan , int tilt ) ; 
/*--pwc_mpt_set_angle--*/
int pwc_get_cmos_sensor ( struct pwc_device * pdev , int * sensor ) ; 
/*--pwc_get_cmos_sensor--*/
long pwc_ioctl ( struct pwc_device * pdev , unsigned int cmd , void * arg ) ; 
/*--pwc_ioctl--*/
long pwc_video_do_ioctl ( struct file * file , unsigned int cmd , void * arg ) ; 
/*--pwc_video_do_ioctl--*/
int pwc_decompress ( struct pwc_device * pdev ) ; 
/*--pwc_decompress--*/
void pwc_dec1_init ( int type , int release , void * buffer , void * table ) ; 
/*--pwc_dec1_init--*/
void pwc_dec1_exit ( void ) ; 
/*--pwc_dec1_exit--*/
int pwc_dec1_alloc ( struct pwc_device * pwc ) ; 
/*--pwc_dec1_alloc--*/
int pwc_dec23_init ( struct pwc_device * pwc , int type , unsigned char * cmd ) ; 
/*--pwc_dec23_init--*/
void pwc_dec23_decompress ( const struct pwc_device * pwc , const void * src , void * dst , int flags ) ; 
/*--pwc_dec23_decompress--*/
void pwc_dec23_exit ( void ) ; 
/*--pwc_dec23_exit--*/
int pwc_dec23_alloc ( struct pwc_device * pwc ) ; 
/*--pwc_dec23_alloc--*/
int saa7134_tuner_callback ( void * priv , int component , int command , int arg ) ; 
/*--saa7134_tuner_callback--*/
int saa7134_board_init1 ( struct saa7134_dev * dev ) ; 
/*--saa7134_board_init1--*/
int saa7134_board_init2 ( struct saa7134_dev * dev ) ; 
/*--saa7134_board_init2--*/
void saa7134_track_gpio ( struct saa7134_dev * dev , char * msg ) ; 
/*--saa7134_track_gpio--*/
void saa7134_set_gpio ( struct saa7134_dev * dev , int bit_no , int value ) ; 
/*--saa7134_set_gpio--*/
int saa7134_buffer_count ( unsigned int size , unsigned int count ) ; 
/*--saa7134_buffer_count--*/
int saa7134_buffer_startpage ( struct saa7134_buf * buf ) ; 
/*--saa7134_buffer_startpage--*/
unsigned long saa7134_buffer_base ( struct saa7134_buf * buf ) ; 
/*--saa7134_buffer_base--*/
int saa7134_pgtable_alloc ( struct pci_dev * pci , struct saa7134_pgtable * pt ) ; 
/*--saa7134_pgtable_alloc--*/
int saa7134_pgtable_build ( struct pci_dev * pci , struct saa7134_pgtable * pt , struct scatterlist * list , unsigned int length , unsigned int startpage ) ; 
/*--saa7134_pgtable_build--*/
void saa7134_pgtable_free ( struct pci_dev * pci , struct saa7134_pgtable * pt ) ; 
/*--saa7134_pgtable_free--*/
void saa7134_dma_free ( struct videobuf_queue * q , struct saa7134_buf * buf ) ; 
/*--saa7134_dma_free--*/
int saa7134_buffer_queue ( struct saa7134_dev * dev , struct saa7134_dmaqueue * q , struct saa7134_buf * buf ) ; 
/*--saa7134_buffer_queue--*/
void saa7134_buffer_finish ( struct saa7134_dev * dev , struct saa7134_dmaqueue * q , unsigned int state ) ; 
/*--saa7134_buffer_finish--*/
void saa7134_buffer_next ( struct saa7134_dev * dev , struct saa7134_dmaqueue * q ) ; 
/*--saa7134_buffer_next--*/
void saa7134_buffer_timeout ( unsigned long data ) ; 
/*--saa7134_buffer_timeout--*/
int saa7134_set_dmabits ( struct saa7134_dev * dev ) ; 
/*--saa7134_set_dmabits--*/
int saa7134_ts_register ( struct saa7134_mpeg_ops * ops ) ; 
/*--saa7134_ts_register--*/
void saa7134_ts_unregister ( struct saa7134_mpeg_ops * ops ) ; 
/*--saa7134_ts_unregister--*/
int saa7134_i2c_register ( struct saa7134_dev * dev ) ; 
/*--saa7134_i2c_register--*/
int saa7134_i2c_unregister ( struct saa7134_dev * dev ) ; 
/*--saa7134_i2c_unregister--*/
int saa7134_ts_init_hw ( struct saa7134_dev * dev ) ; 
/*--saa7134_ts_init_hw--*/
int saa7134_ts_init1 ( struct saa7134_dev * dev ) ; 
/*--saa7134_ts_init1--*/
int saa7134_ts_stop ( struct saa7134_dev * dev ) ; 
/*--saa7134_ts_stop--*/
int saa7134_ts_start ( struct saa7134_dev * dev ) ; 
/*--saa7134_ts_start--*/
int saa7134_ts_fini ( struct saa7134_dev * dev ) ; 
/*--saa7134_ts_fini--*/
void saa7134_irq_ts_done ( struct saa7134_dev * dev , unsigned long status ) ; 
/*--saa7134_irq_ts_done--*/
int saa_dsp_writel ( struct saa7134_dev * dev , int reg , u32 value ) ; 
/*--saa_dsp_writel--*/
void saa7134_enable_i2s ( struct saa7134_dev * dev ) ; 
/*--saa7134_enable_i2s--*/
int saa7134_tvaudio_rx2mode ( u32 rx ) ; 
/*--saa7134_tvaudio_rx2mode--*/
void saa7134_tvaudio_setmute ( struct saa7134_dev * dev ) ; 
/*--saa7134_tvaudio_setmute--*/
void saa7134_tvaudio_setinput ( struct saa7134_dev * dev , struct saa7134_input * in ) ; 
/*--saa7134_tvaudio_setinput--*/
void saa7134_tvaudio_setvolume ( struct saa7134_dev * dev , int level ) ; 
/*--saa7134_tvaudio_setvolume--*/
int saa7134_tvaudio_getstereo ( struct saa7134_dev * dev ) ; 
/*--saa7134_tvaudio_getstereo--*/
void saa7134_tvaudio_init ( struct saa7134_dev * dev ) ; 
/*--saa7134_tvaudio_init--*/
int saa7134_tvaudio_init2 ( struct saa7134_dev * dev ) ; 
/*--saa7134_tvaudio_init2--*/
int saa7134_tvaudio_fini ( struct saa7134_dev * dev ) ; 
/*--saa7134_tvaudio_fini--*/
int saa7134_tvaudio_do_scan ( struct saa7134_dev * dev ) ; 
/*--saa7134_tvaudio_do_scan--*/
int saa7134_vbi_init1 ( struct saa7134_dev * dev ) ; 
/*--saa7134_vbi_init1--*/
int saa7134_vbi_fini ( struct saa7134_dev * dev ) ; 
/*--saa7134_vbi_fini--*/
void saa7134_irq_vbi_done ( struct saa7134_dev * dev , unsigned long status ) ; 
/*--saa7134_irq_vbi_done--*/
void saa7134_set_tvnorm_hw ( struct saa7134_dev * dev ) ; 
/*--saa7134_set_tvnorm_hw--*/
int saa7134_g_ctrl_internal ( struct saa7134_dev * dev , struct saa7134_fh * fh , struct v4l2_control * c ) ; 
/*--saa7134_g_ctrl_internal--*/
int saa7134_s_ctrl_internal ( struct saa7134_dev * dev , struct saa7134_fh * fh , struct v4l2_control * c ) ; 
/*--saa7134_s_ctrl_internal--*/
int saa7134_queryctrl ( struct file * file , void * priv , struct v4l2_queryctrl * c ) ; 
/*--saa7134_queryctrl--*/
int saa7134_s_std_internal ( struct saa7134_dev * dev , struct saa7134_fh * fh , v4l2_std_id * id ) ; 
/*--saa7134_s_std_internal--*/
int saa7134_video_init1 ( struct saa7134_dev * dev ) ; 
/*--saa7134_video_init1--*/
int saa7134_videoport_init ( struct saa7134_dev * dev ) ; 
/*--saa7134_videoport_init--*/
int saa7134_video_init2 ( struct saa7134_dev * dev ) ; 
/*--saa7134_video_init2--*/
void saa7134_irq_video_signalchange ( struct saa7134_dev * dev ) ; 
/*--saa7134_irq_video_signalchange--*/
void saa7134_irq_video_done ( struct saa7134_dev * dev , unsigned long status ) ; 
/*--saa7134_irq_video_done--*/
void saa7134_input_irq ( struct saa7134_dev * dev ) ; 
/*--saa7134_input_irq--*/
void ir_raw_decode_timer_end ( unsigned long data ) ; 
/*--ir_raw_decode_timer_end--*/
int saa7134_ir_start ( struct saa7134_dev * dev ) ; 
/*--saa7134_ir_start--*/
void saa7134_ir_stop ( struct saa7134_dev * dev ) ; 
/*--saa7134_ir_stop--*/
int saa7134_ir_change_protocol ( void * priv , u64 ir_type ) ; 
/*--saa7134_ir_change_protocol--*/
int saa7134_input_init1 ( struct saa7134_dev * dev ) ; 
/*--saa7134_input_init1--*/
void saa7134_input_fini ( struct saa7134_dev * dev ) ; 
/*--saa7134_input_fini--*/
void saa7134_probe_i2c_ir ( struct saa7134_dev * dev ) ; 
/*--saa7134_probe_i2c_ir--*/
void saa7164_card_list ( struct saa7164_dev * dev ) ; 
/*--saa7164_card_list--*/
void saa7164_gpio_setup ( struct saa7164_dev * dev ) ; 
/*--saa7164_gpio_setup--*/
void saa7164_card_setup ( struct saa7164_dev * dev ) ; 
/*--saa7164_card_setup--*/
int saa7164_i2caddr_to_unitid ( struct saa7164_i2c * bus , int addr ) ; 
/*--saa7164_i2caddr_to_unitid--*/
int saa7164_i2caddr_to_reglen ( struct saa7164_i2c * bus , int addr ) ; 
/*--saa7164_i2caddr_to_reglen--*/
char * saa7164_unitid_name ( struct saa7164_dev * dev , u8 unitid ) ; 
/*--saa7164_unitid_name--*/
void saa7164_getfirmwarestatus ( struct saa7164_dev * dev ) ; 
/*--saa7164_getfirmwarestatus--*/
u32 saa7164_getcurrentfirmwareversion ( struct saa7164_dev * dev ) ; 
/*--saa7164_getcurrentfirmwareversion--*/
void saa7164_dumphex16 ( struct saa7164_dev * dev , u8 * buf , int len ) ; 
/*--saa7164_dumphex16--*/
void saa7164_dumpregs ( struct saa7164_dev * dev , u32 addr ) ; 
/*--saa7164_dumpregs--*/
void saa7164_call_i2c_clients ( struct saa7164_i2c * bus , unsigned int cmd , void * arg ) ; 
/*--saa7164_call_i2c_clients--*/
int saa7164_i2c_register ( struct saa7164_i2c * bus ) ; 
/*--saa7164_i2c_register--*/
int saa7164_i2c_unregister ( struct saa7164_i2c * bus ) ; 
/*--saa7164_i2c_unregister--*/
int saa7164_dvb_unregister ( struct saa7164_tsport * port ) ; 
/*--saa7164_dvb_unregister--*/
int saa7164_dvb_register ( struct saa7164_tsport * port ) ; 
/*--saa7164_dvb_register--*/
int saa7164_dl_wait_ack ( struct saa7164_dev * dev , u32 reg ) ; 
/*--saa7164_dl_wait_ack--*/
int saa7164_dl_wait_clr ( struct saa7164_dev * dev , u32 reg ) ; 
/*--saa7164_dl_wait_clr--*/
int saa7164_downloadimage ( struct saa7164_dev * dev , u8 * src , u32 srcsize , u32 dlflags , u8 * dst , u32 dstsize ) ; 
/*--saa7164_downloadimage--*/
int saa7164_downloadfirmware ( struct saa7164_dev * dev ) ; 
/*--saa7164_downloadfirmware--*/
int saa7164_bus_setup ( struct saa7164_dev * dev ) ; 
/*--saa7164_bus_setup--*/
void saa7164_bus_dump ( struct saa7164_dev * dev ) ; 
/*--saa7164_bus_dump--*/
void saa7164_bus_dumpmsg ( struct saa7164_dev * dev , tmComResInfo_t * m , void * buf ) ; 
/*--saa7164_bus_dumpmsg--*/
int saa7164_bus_set ( struct saa7164_dev * dev , tmComResInfo_t * msg , void * buf ) ; 
/*--saa7164_bus_set--*/
int saa7164_bus_get ( struct saa7164_dev * dev , tmComResInfo_t * msg , void * buf , int peekonly ) ; 
/*--saa7164_bus_get--*/
int saa7164_cmd_alloc_seqno ( struct saa7164_dev * dev ) ; 
/*--saa7164_cmd_alloc_seqno--*/
void saa7164_cmd_free_seqno ( struct saa7164_dev * dev , u8 seqno ) ; 
/*--saa7164_cmd_free_seqno--*/
void saa7164_cmd_timeout_seqno ( struct saa7164_dev * dev , u8 seqno ) ; 
/*--saa7164_cmd_timeout_seqno--*/
u32 saa7164_cmd_timeout_get ( struct saa7164_dev * dev , u8 seqno ) ; 
/*--saa7164_cmd_timeout_get--*/
int saa7164_irq_dequeue ( struct saa7164_dev * dev ) ; 
/*--saa7164_irq_dequeue--*/
int saa7164_cmd_dequeue ( struct saa7164_dev * dev ) ; 
/*--saa7164_cmd_dequeue--*/
int saa7164_cmd_set ( struct saa7164_dev * dev , tmComResInfo_t * msg , void * buf ) ; 
/*--saa7164_cmd_set--*/
int saa7164_cmd_wait ( struct saa7164_dev * dev , u8 seqno ) ; 
/*--saa7164_cmd_wait--*/
void saa7164_cmd_signal ( struct saa7164_dev * dev , u8 seqno ) ; 
/*--saa7164_cmd_signal--*/
int saa7164_cmd_send ( struct saa7164_dev * dev , u8 id , tmComResCmd_t command , u16 controlselector , u16 size , void * buf ) ; 
/*--saa7164_cmd_send--*/
int saa7164_api_transition_port ( struct saa7164_tsport * port , u8 mode ) ; 
/*--saa7164_api_transition_port--*/
int saa7164_api_get_fw_version ( struct saa7164_dev * dev , u32 * version ) ; 
/*--saa7164_api_get_fw_version--*/
int saa7164_api_read_eeprom ( struct saa7164_dev * dev , u8 * buf , int buflen ) ; 
/*--saa7164_api_read_eeprom--*/
int saa7164_api_configure_port_mpeg2ts ( struct saa7164_dev * dev , struct saa7164_tsport * port , tmComResTSFormatDescrHeader_t * tsfmt ) ; 
/*--saa7164_api_configure_port_mpeg2ts--*/
int saa7164_api_dump_subdevs ( struct saa7164_dev * dev , u8 * buf , int len ) ; 
/*--saa7164_api_dump_subdevs--*/
int saa7164_api_enum_subdevs ( struct saa7164_dev * dev ) ; 
/*--saa7164_api_enum_subdevs--*/
int saa7164_api_i2c_read ( struct saa7164_i2c * bus , u8 addr , u32 reglen , u8 * reg , u32 datalen , u8 * data ) ; 
/*--saa7164_api_i2c_read--*/
int saa7164_api_i2c_write ( struct saa7164_i2c * bus , u8 addr , u32 datalen , u8 * data ) ; 
/*--saa7164_api_i2c_write--*/
int saa7164_api_modify_gpio ( struct saa7164_dev * dev , u8 unitid , u8 pin , u8 state ) ; 
/*--saa7164_api_modify_gpio--*/
int saa7164_api_set_gpiobit ( struct saa7164_dev * dev , u8 unitid , u8 pin ) ; 
/*--saa7164_api_set_gpiobit--*/
int saa7164_api_clear_gpiobit ( struct saa7164_dev * dev , u8 unitid , u8 pin ) ; 
/*--saa7164_api_clear_gpiobit--*/
struct saa7164_buffer * saa7164_buffer_alloc ( struct saa7164_tsport * port , u32 len ) ; 
/*--saa7164_buffer_alloc--*/
int saa7164_buffer_dealloc ( struct saa7164_tsport * port , struct saa7164_buffer * buf ) ; 
/*--saa7164_buffer_dealloc--*/
struct sn9c102_device * sn9c102_match_id ( struct sn9c102_device * cam , const struct usb_device_id * id ) ; 
/*--sn9c102_match_id--*/
void sn9c102_attach_sensor ( struct sn9c102_device * cam , const struct sn9c102_sensor * sensor ) ; 
/*--sn9c102_attach_sensor--*/
enum sn9c102_bridge sn9c102_get_bridge ( struct sn9c102_device * cam ) ; 
/*--sn9c102_get_bridge--*/
struct sn9c102_sensor * sn9c102_get_sensor ( struct sn9c102_device * cam ) ; 
/*--sn9c102_get_sensor--*/
int sn9c102_write_regs ( struct sn9c102_device * cam , const u8 valreg [ ] [ 2 ] , int count ) ; 
/*--sn9c102_write_regs--*/
int sn9c102_write_reg ( struct sn9c102_device * cam , u8 value , u16 index ) ; 
/*--sn9c102_write_reg--*/
int sn9c102_read_reg ( struct sn9c102_device * cam , u16 index ) ; 
/*--sn9c102_read_reg--*/
int sn9c102_pread_reg ( struct sn9c102_device * cam , u16 index ) ; 
/*--sn9c102_pread_reg--*/
int sn9c102_i2c_try_raw_read ( struct sn9c102_device * cam , const struct sn9c102_sensor * sensor , u8 data0 , u8 data1 , u8 n , u8 buffer [ ] ) ; 
/*--sn9c102_i2c_try_raw_read--*/
int sn9c102_i2c_try_raw_write ( struct sn9c102_device * cam , const struct sn9c102_sensor * sensor , u8 n , u8 data0 , u8 data1 , u8 data2 , u8 data3 , u8 data4 , u8 data5 ) ; 
/*--sn9c102_i2c_try_raw_write--*/
int sn9c102_i2c_try_read ( struct sn9c102_device * cam , const struct sn9c102_sensor * sensor , u8 address ) ; 
/*--sn9c102_i2c_try_read--*/
int sn9c102_i2c_read ( struct sn9c102_device * cam , u8 address ) ; 
/*--sn9c102_i2c_read--*/
int sn9c102_i2c_write ( struct sn9c102_device * cam , u8 address , u8 value ) ; 
/*--sn9c102_i2c_write--*/
int sn9c102_probe_hv7131d ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_hv7131d--*/
int sn9c102_probe_hv7131r ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_hv7131r--*/
int sn9c102_probe_mi0343 ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_mi0343--*/
int sn9c102_probe_mi0360 ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_mi0360--*/
int sn9c102_probe_mt9v111 ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_mt9v111--*/
int sn9c102_probe_ov7630 ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_ov7630--*/
int sn9c102_probe_ov7660 ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_ov7660--*/
int sn9c102_probe_pas106b ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_pas106b--*/
int sn9c102_probe_pas202bcb ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_pas202bcb--*/
int sn9c102_probe_tas5110c1b ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_tas5110c1b--*/
int sn9c102_probe_tas5110d ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_tas5110d--*/
int sn9c102_probe_tas5130d1b ( struct sn9c102_device * cam ) ; 
/*--sn9c102_probe_tas5130d1b--*/
int RingQueue_Dequeue ( struct RingQueue * rq , unsigned char * dst , int len ) ; 
/*--RingQueue_Dequeue--*/
int RingQueue_Enqueue ( struct RingQueue * rq , const unsigned char * cdata , int n ) ; 
/*--RingQueue_Enqueue--*/
void RingQueue_WakeUpInterruptible ( struct RingQueue * rq ) ; 
/*--RingQueue_WakeUpInterruptible--*/
void RingQueue_Flush ( struct RingQueue * rq ) ; 
/*--RingQueue_Flush--*/
void usbvideo_TestPattern ( struct uvd * uvd , int fullframe , int pmode ) ; 
/*--usbvideo_TestPattern--*/
int usbvideo_register ( struct usbvideo * * pCams , const int num_cams , const int num_extra , const char * driverName , const struct usbvideo_cb * cbTbl , struct module * md , const struct usb_device_id * id_table ) ; 
/*--usbvideo_register--*/
void usbvideo_Deregister ( struct usbvideo * * pCams ) ; 
/*--usbvideo_Deregister--*/
struct uvd * usbvideo_AllocateDevice ( struct usbvideo * cams ) ; 
/*--usbvideo_AllocateDevice--*/
int usbvideo_RegisterVideoDevice ( struct uvd * uvd ) ; 
/*--usbvideo_RegisterVideoDevice--*/
void usbvideo_DeinterlaceFrame ( struct uvd * uvd , struct usbvideo_frame * frame ) ; 
/*--usbvideo_DeinterlaceFrame--*/
int usbvision_scratch_alloc ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_scratch_alloc--*/
void usbvision_scratch_free ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_scratch_free--*/
int usbvision_decompress_alloc ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_decompress_alloc--*/
void usbvision_decompress_free ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_decompress_free--*/
int usbvision_read_reg ( struct usb_usbvision * usbvision , unsigned char reg ) ; 
/*--usbvision_read_reg--*/
int usbvision_write_reg ( struct usb_usbvision * usbvision , unsigned char reg , unsigned char value ) ; 
/*--usbvision_write_reg--*/
int usbvision_power_off ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_power_off--*/
int usbvision_set_output ( struct usb_usbvision * usbvision , int width , int height ) ; 
/*--usbvision_set_output--*/
int usbvision_frames_alloc ( struct usb_usbvision * usbvision , int number_of_frames ) ; 
/*--usbvision_frames_alloc--*/
void usbvision_frames_free ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_frames_free--*/
void usbvision_empty_framequeues ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_empty_framequeues--*/
int usbvision_stream_interrupt ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_stream_interrupt--*/
int usbvision_set_input ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_set_input--*/
int usbvision_power_on ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_power_on--*/
void usbvision_init_powerOffTimer ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_init_powerOffTimer--*/
void usbvision_set_powerOffTimer ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_set_powerOffTimer--*/
void usbvision_reset_powerOffTimer ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_reset_powerOffTimer--*/
int usbvision_begin_streaming ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_begin_streaming--*/
int usbvision_restart_isoc ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_restart_isoc--*/
int usbvision_audio_off ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_audio_off--*/
int usbvision_set_audio ( struct usb_usbvision * usbvision , int AudioChannel ) ; 
/*--usbvision_set_audio--*/
int usbvision_setup ( struct usb_usbvision * usbvision , int format ) ; 
/*--usbvision_setup--*/
int usbvision_set_alternate ( struct usb_usbvision * dev ) ; 
/*--usbvision_set_alternate--*/
int usbvision_init_isoc ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_init_isoc--*/
void usbvision_stop_isoc ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_stop_isoc--*/
int usbvision_muxsel ( struct usb_usbvision * usbvision , int channel ) ; 
/*--usbvision_muxsel--*/
int usbvision_i2c_register ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_i2c_register--*/
int usbvision_i2c_unregister ( struct usb_usbvision * usbvision ) ; 
/*--usbvision_i2c_unregister--*/
struct usb_host_endpoint * uvc_find_endpoint ( struct usb_host_interface * alts , __u8 epaddr ) ; 
/*--uvc_find_endpoint--*/
void uvc_simplify_fraction ( uint32_t * numerator , uint32_t * denominator , unsigned int n_terms , unsigned int threshold ) ; 
/*--uvc_simplify_fraction--*/
uint32_t uvc_fraction_to_interval ( uint32_t numerator , uint32_t denominator ) ; 
/*--uvc_fraction_to_interval--*/
void uvc_queue_init ( struct uvc_video_queue * queue , enum v4l2_buf_type type ) ; 
/*--uvc_queue_init--*/
int uvc_alloc_buffers ( struct uvc_video_queue * queue , unsigned int nbuffers , unsigned int buflength ) ; 
/*--uvc_alloc_buffers--*/
int uvc_free_buffers ( struct uvc_video_queue * queue ) ; 
/*--uvc_free_buffers--*/
int uvc_queue_allocated ( struct uvc_video_queue * queue ) ; 
/*--uvc_queue_allocated--*/
int uvc_query_buffer ( struct uvc_video_queue * queue , struct v4l2_buffer * v4l2_buf ) ; 
/*--uvc_query_buffer--*/
int uvc_queue_buffer ( struct uvc_video_queue * queue , struct v4l2_buffer * v4l2_buf ) ; 
/*--uvc_queue_buffer--*/
int uvc_dequeue_buffer ( struct uvc_video_queue * queue , struct v4l2_buffer * v4l2_buf , int nonblocking ) ; 
/*--uvc_dequeue_buffer--*/
unsigned int uvc_queue_poll ( struct uvc_video_queue * queue , struct file * file , poll_table * wait ) ; 
/*--uvc_queue_poll--*/
int uvc_queue_enable ( struct uvc_video_queue * queue , int enable ) ; 
/*--uvc_queue_enable--*/
void uvc_queue_cancel ( struct uvc_video_queue * queue , int disconnect ) ; 
/*--uvc_queue_cancel--*/
struct uvc_buffer * uvc_queue_next_buffer ( struct uvc_video_queue * queue , struct uvc_buffer * buf ) ; 
/*--uvc_queue_next_buffer--*/
int uvc_query_ctrl ( struct uvc_device * dev , __u8 query , __u8 unit , __u8 intfnum , __u8 cs , void * data , __u16 size ) ; 
/*--uvc_query_ctrl--*/
int uvc_probe_video ( struct uvc_streaming * stream , struct uvc_streaming_control * probe ) ; 
/*--uvc_probe_video--*/
int uvc_commit_video ( struct uvc_streaming * stream , struct uvc_streaming_control * probe ) ; 
/*--uvc_commit_video--*/
int uvc_video_suspend ( struct uvc_streaming * stream ) ; 
/*--uvc_video_suspend--*/
int uvc_video_resume ( struct uvc_streaming * stream ) ; 
/*--uvc_video_resume--*/
int uvc_video_init ( struct uvc_streaming * stream ) ; 
/*--uvc_video_init--*/
int uvc_video_enable ( struct uvc_streaming * stream , int enable ) ; 
/*--uvc_video_enable--*/
struct uvc_control * uvc_find_control ( struct uvc_video_chain * chain , __u32 v4l2_id , struct uvc_control_mapping * * mapping ) ; 
/*--uvc_find_control--*/
int uvc_query_v4l2_ctrl ( struct uvc_video_chain * chain , struct v4l2_queryctrl * v4l2_ctrl ) ; 
/*--uvc_query_v4l2_ctrl--*/
int uvc_ctrl_begin ( struct uvc_video_chain * chain ) ; 
/*--uvc_ctrl_begin--*/
int __uvc_ctrl_commit ( struct uvc_video_chain * chain , int rollback ) ; 
/*--__uvc_ctrl_commit--*/
int uvc_ctrl_get ( struct uvc_video_chain * chain , struct v4l2_ext_control * xctrl ) ; 
/*--uvc_ctrl_get--*/
int uvc_ctrl_set ( struct uvc_video_chain * chain , struct v4l2_ext_control * xctrl ) ; 
/*--uvc_ctrl_set--*/
int uvc_xu_ctrl_query ( struct uvc_video_chain * chain , struct uvc_xu_control * xctrl , int set ) ; 
/*--uvc_xu_ctrl_query--*/
int uvc_ctrl_resume_device ( struct uvc_device * dev ) ; 
/*--uvc_ctrl_resume_device--*/
int uvc_ctrl_add_info ( struct uvc_control_info * info ) ; 
/*--uvc_ctrl_add_info--*/
int uvc_ctrl_add_mapping ( struct uvc_control_mapping * mapping ) ; 
/*--uvc_ctrl_add_mapping--*/
int uvc_ctrl_init_device ( struct uvc_device * dev ) ; 
/*--uvc_ctrl_init_device--*/
void uvc_ctrl_cleanup_device ( struct uvc_device * dev ) ; 
/*--uvc_ctrl_cleanup_device--*/
void uvc_ctrl_init ( void ) ; 
/*--uvc_ctrl_init--*/
int uvc_status_init ( struct uvc_device * dev ) ; 
/*--uvc_status_init--*/
void uvc_status_cleanup ( struct uvc_device * dev ) ; 
/*--uvc_status_cleanup--*/
int uvc_status_start ( struct uvc_device * dev ) ; 
/*--uvc_status_start--*/
void uvc_status_stop ( struct uvc_device * dev ) ; 
/*--uvc_status_stop--*/
int uvc_status_suspend ( struct uvc_device * dev ) ; 
/*--uvc_status_suspend--*/
int uvc_status_resume ( struct uvc_device * dev ) ; 
/*--uvc_status_resume--*/
void uvc_video_decode_isight ( struct urb * urb , struct uvc_streaming * stream , struct uvc_buffer * buf ) ; 
/*--uvc_video_decode_isight--*/
struct zc0301_device * zc0301_match_id ( struct zc0301_device * cam , const struct usb_device_id * id ) ; 
/*--zc0301_match_id--*/
void zc0301_attach_sensor ( struct zc0301_device * cam , struct zc0301_sensor * sensor ) ; 
/*--zc0301_attach_sensor--*/
int zc0301_write_reg ( struct zc0301_device * cam , u16 index , u16 value ) ; 
/*--zc0301_write_reg--*/
int zc0301_read_reg ( struct zc0301_device * cam , u16 index ) ; 
/*--zc0301_read_reg--*/
int zc0301_i2c_read ( struct zc0301_device * cam , u16 address , u8 length ) ; 
/*--zc0301_i2c_read--*/
int zc0301_i2c_write ( struct zc0301_device * cam , u16 address , u16 value ) ; 
/*--zc0301_i2c_write--*/
int zc0301_probe_pb0330 ( struct zc0301_device * cam ) ; 
/*--zc0301_probe_pb0330--*/
int zc0301_probe_pas202bcb ( struct zc0301_device * cam ) ; 
/*--zc0301_probe_pas202bcb--*/
int zoran_proc_init ( struct zoran * zr ) ; 
/*--zoran_proc_init--*/
void zoran_proc_cleanup ( struct zoran * zr ) ; 
/*--zoran_proc_cleanup--*/
void GPIO ( struct zoran * zr , int bit , unsigned int value ) ; 
/*--GPIO--*/
int post_office_wait ( struct zoran * zr ) ; 
/*--post_office_wait--*/
int post_office_write ( struct zoran * zr , unsigned int guest , unsigned int reg , unsigned int value ) ; 
/*--post_office_write--*/
int post_office_read ( struct zoran * zr , unsigned int guest , unsigned int reg ) ; 
/*--post_office_read--*/
void detect_guest_activity ( struct zoran * zr ) ; 
/*--detect_guest_activity--*/
void jpeg_codec_sleep ( struct zoran * zr , int sleep ) ; 
/*--jpeg_codec_sleep--*/
int jpeg_codec_reset ( struct zoran * zr ) ; 
/*--jpeg_codec_reset--*/
void zr36057_overlay ( struct zoran * zr , int on ) ; 
/*--zr36057_overlay--*/
void write_overlay_mask ( struct zoran_fh * fh , struct v4l2_clip * vp , int count ) ; 
/*--write_overlay_mask--*/
void zr36057_set_memgrab ( struct zoran * zr , int mode ) ; 
/*--zr36057_set_memgrab--*/
int wait_grab_pending ( struct zoran * zr ) ; 
/*--wait_grab_pending--*/
void print_interrupts ( struct zoran * zr ) ; 
/*--print_interrupts--*/
void clear_interrupt_counters ( struct zoran * zr ) ; 
/*--clear_interrupt_counters--*/
void jpeg_start ( struct zoran * zr ) ; 
/*--jpeg_start--*/
void zr36057_enable_jpg ( struct zoran * zr , enum zoran_codec_mode mode ) ; 
/*--zr36057_enable_jpg--*/
void zoran_feed_stat_com ( struct zoran * zr ) ; 
/*--zoran_feed_stat_com--*/
irqreturn_t zoran_irq ( int irq , void * dev_id ) ; 
/*--zoran_irq--*/
void zoran_set_pci_master ( struct zoran * zr , int set_master ) ; 
/*--zoran_set_pci_master--*/
void zoran_init_hardware ( struct zoran * zr ) ; 
/*--zoran_init_hardware--*/
void zr36057_restart ( struct zoran * zr ) ; 
/*--zr36057_restart--*/
void zr36016_write ( struct videocodec * codec , u16 reg , u32 val ) ; 
/*--zr36016_write--*/
int zoran_check_jpg_settings ( struct zoran * zr , struct zoran_jpg_settings * settings , int try ) ; 
/*--zoran_check_jpg_settings--*/
void zoran_open_init_params ( struct zoran * zr ) ; 
/*--zoran_open_init_params--*/
void zoran_vdev_release ( struct video_device * vdev ) ; 
/*--zoran_vdev_release--*/
struct videocodec * videocodec_attach ( struct videocodec_master * master ) ; 
/*--videocodec_attach--*/
int videocodec_detach ( struct videocodec * codec ) ; 
/*--videocodec_detach--*/
int videocodec_register ( const struct videocodec * codec ) ; 
/*--videocodec_register--*/
int videocodec_unregister ( const struct videocodec * codec ) ; 
/*--videocodec_unregister--*/
void memstick_detect_change ( struct memstick_host * host ) ; 
/*--memstick_detect_change--*/
int memstick_next_req ( struct memstick_host * host , struct memstick_request * * mrq ) ; 
/*--memstick_next_req--*/
void memstick_new_req ( struct memstick_host * host ) ; 
/*--memstick_new_req--*/
void memstick_init_req_sg ( struct memstick_request * mrq , unsigned char tpc , const struct scatterlist * sg ) ; 
/*--memstick_init_req_sg--*/
void memstick_init_req ( struct memstick_request * mrq , unsigned char tpc , const void * buf , size_t length ) ; 
/*--memstick_init_req--*/
int memstick_set_rw_addr ( struct memstick_dev * card ) ; 
/*--memstick_set_rw_addr--*/
struct memstick_host * memstick_alloc_host ( unsigned int extra , struct device * dev ) ; 
/*--memstick_alloc_host--*/
int memstick_add_host ( struct memstick_host * host ) ; 
/*--memstick_add_host--*/
void memstick_remove_host ( struct memstick_host * host ) ; 
/*--memstick_remove_host--*/
void memstick_free_host ( struct memstick_host * host ) ; 
/*--memstick_free_host--*/
void memstick_suspend_host ( struct memstick_host * host ) ; 
/*--memstick_suspend_host--*/
void memstick_resume_host ( struct memstick_host * host ) ; 
/*--memstick_resume_host--*/
int memstick_register_driver ( struct memstick_driver * drv ) ; 
/*--memstick_register_driver--*/
void memstick_unregister_driver ( struct memstick_driver * drv ) ; 
/*--memstick_unregister_driver--*/
u8 mpt_register ( MPT_CALLBACK cbfunc , MPT_DRIVER_CLASS dclass ) ; 
/*--mpt_register--*/
void mpt_deregister ( u8 cb_idx ) ; 
/*--mpt_deregister--*/
int mpt_event_register ( u8 cb_idx , MPT_EVHANDLER ev_cbfunc ) ; 
/*--mpt_event_register--*/
void mpt_event_deregister ( u8 cb_idx ) ; 
/*--mpt_event_deregister--*/
int mpt_reset_register ( u8 cb_idx , MPT_RESETHANDLER reset_func ) ; 
/*--mpt_reset_register--*/
void mpt_reset_deregister ( u8 cb_idx ) ; 
/*--mpt_reset_deregister--*/
int mpt_device_driver_register ( struct mpt_pci_driver * dd_cbfunc , u8 cb_idx ) ; 
/*--mpt_device_driver_register--*/
void mpt_device_driver_deregister ( u8 cb_idx ) ; 
/*--mpt_device_driver_deregister--*/
MPT_FRAME_HDR * mpt_get_msg_frame ( u8 cb_idx , MPT_ADAPTER * ioc ) ; 
/*--mpt_get_msg_frame--*/
void mpt_put_msg_frame ( u8 cb_idx , MPT_ADAPTER * ioc , MPT_FRAME_HDR * mf ) ; 
/*--mpt_put_msg_frame--*/
void mpt_put_msg_frame_hi_pri ( u8 cb_idx , MPT_ADAPTER * ioc , MPT_FRAME_HDR * mf ) ; 
/*--mpt_put_msg_frame_hi_pri--*/
void mpt_free_msg_frame ( MPT_ADAPTER * ioc , MPT_FRAME_HDR * mf ) ; 
/*--mpt_free_msg_frame--*/
int mpt_send_handshake_request ( u8 cb_idx , MPT_ADAPTER * ioc , int reqBytes , u32 * req , int sleepFlag ) ; 
/*--mpt_send_handshake_request--*/
int mpt_verify_adapter ( int iocid , MPT_ADAPTER * * iocpp ) ; 
/*--mpt_verify_adapter--*/
int mpt_attach ( struct pci_dev * pdev , const struct pci_device_id * id ) ; 
/*--mpt_attach--*/
void mpt_detach ( struct pci_dev * pdev ) ; 
/*--mpt_detach--*/
int mpt_suspend ( struct pci_dev * pdev , pm_message_t state ) ; 
/*--mpt_suspend--*/
int mpt_resume ( struct pci_dev * pdev ) ; 
/*--mpt_resume--*/
u32 mpt_GetIocState ( MPT_ADAPTER * ioc , int cooked ) ; 
/*--mpt_GetIocState--*/
int mpt_alloc_fw_memory ( MPT_ADAPTER * ioc , int size ) ; 
/*--mpt_alloc_fw_memory--*/
void mpt_free_fw_memory ( MPT_ADAPTER * ioc ) ; 
/*--mpt_free_fw_memory--*/
int mptbase_sas_persist_operation ( MPT_ADAPTER * ioc , u8 persist_opcode ) ; 
/*--mptbase_sas_persist_operation--*/
int mpt_raid_phys_disk_pg0 ( MPT_ADAPTER * ioc , u8 phys_disk_num , RaidPhysDiskPage0_t * phys_disk ) ; 
/*--mpt_raid_phys_disk_pg0--*/
int mpt_raid_phys_disk_get_num_paths ( MPT_ADAPTER * ioc , u8 phys_disk_num ) ; 
/*--mpt_raid_phys_disk_get_num_paths--*/
int mpt_raid_phys_disk_pg1 ( MPT_ADAPTER * ioc , u8 phys_disk_num , RaidPhysDiskPage1_t * phys_disk ) ; 
/*--mpt_raid_phys_disk_pg1--*/
int mpt_findImVolumes ( MPT_ADAPTER * ioc ) ; 
/*--mpt_findImVolumes--*/
int mpt_config ( MPT_ADAPTER * ioc , CONFIGPARMS * pCfg ) ; 
/*--mpt_config--*/
void mpt_print_ioc_summary ( MPT_ADAPTER * ioc , char * buffer , int * size , int len , int showlan ) ; 
/*--mpt_print_ioc_summary--*/
int mpt_set_taskmgmt_in_progress_flag ( MPT_ADAPTER * ioc ) ; 
/*--mpt_set_taskmgmt_in_progress_flag--*/
void mpt_clear_taskmgmt_in_progress_flag ( MPT_ADAPTER * ioc ) ; 
/*--mpt_clear_taskmgmt_in_progress_flag--*/
void mpt_halt_firmware ( MPT_ADAPTER * ioc ) ; 
/*--mpt_halt_firmware--*/
int mpt_SoftResetHandler ( MPT_ADAPTER * ioc , int sleepFlag ) ; 
/*--mpt_SoftResetHandler--*/
int mpt_Soft_Hard_ResetHandler ( MPT_ADAPTER * ioc , int sleepFlag ) ; 
/*--mpt_Soft_Hard_ResetHandler--*/
int mpt_HardResetHandler ( MPT_ADAPTER * ioc , int sleepFlag ) ; 
/*--mpt_HardResetHandler--*/
int mptscsih_io_done ( MPT_ADAPTER * ioc , MPT_FRAME_HDR * mf , MPT_FRAME_HDR * mr ) ; 
/*--mptscsih_io_done--*/
void mptscsih_remove ( struct pci_dev * pdev ) ; 
/*--mptscsih_remove--*/
void mptscsih_shutdown ( struct pci_dev * pdev ) ; 
/*--mptscsih_shutdown--*/
int mptscsih_suspend ( struct pci_dev * pdev , pm_message_t state ) ; 
/*--mptscsih_suspend--*/
int mptscsih_resume ( struct pci_dev * pdev ) ; 
/*--mptscsih_resume--*/
const char * mptscsih_info ( struct Scsi_Host * SChost ) ; 
/*--mptscsih_info--*/
int mptscsih_proc_info ( struct Scsi_Host * host , char * buffer , char * * start , off_t offset , int length , int func ) ; 
/*--mptscsih_proc_info--*/
int mptscsih_qcmd ( struct scsi_cmnd * SCpnt , void ( * done ) ( struct scsi_cmnd * ) ) ; 
/*--mptscsih_qcmd--*/
int mptscsih_IssueTaskMgmt ( MPT_SCSI_HOST * hd , u8 type , u8 channel , u8 id , int lun , int ctx2abort , ulong timeout ) ; 
/*--mptscsih_IssueTaskMgmt--*/
int mptscsih_abort ( struct scsi_cmnd * SCpnt ) ; 
/*--mptscsih_abort--*/
int mptscsih_dev_reset ( struct scsi_cmnd * SCpnt ) ; 
/*--mptscsih_dev_reset--*/
int mptscsih_bus_reset ( struct scsi_cmnd * SCpnt ) ; 
/*--mptscsih_bus_reset--*/
int mptscsih_host_reset ( struct scsi_cmnd * SCpnt ) ; 
/*--mptscsih_host_reset--*/
void mptscsih_taskmgmt_response_code ( MPT_ADAPTER * ioc , u8 response_code ) ; 
/*--mptscsih_taskmgmt_response_code--*/
int mptscsih_taskmgmt_complete ( MPT_ADAPTER * ioc , MPT_FRAME_HDR * mf , MPT_FRAME_HDR * mr ) ; 
/*--mptscsih_taskmgmt_complete--*/
int mptscsih_bios_param ( struct scsi_device * sdev , struct block_device * bdev , sector_t capacity , int geom [ ] ) ; 
/*--mptscsih_bios_param--*/
int mptscsih_is_phys_disk ( MPT_ADAPTER * ioc , u8 channel , u8 id ) ; 
/*--mptscsih_is_phys_disk--*/
u8 mptscsih_raid_id_to_num ( MPT_ADAPTER * ioc , u8 channel , u8 id ) ; 
/*--mptscsih_raid_id_to_num--*/
void mptscsih_slave_destroy ( struct scsi_device * sdev ) ; 
/*--mptscsih_slave_destroy--*/
int mptscsih_change_queue_depth ( struct scsi_device * sdev , int qdepth , int reason ) ; 
/*--mptscsih_change_queue_depth--*/
int mptscsih_slave_configure ( struct scsi_device * sdev ) ; 
/*--mptscsih_slave_configure--*/
struct scsi_cmnd * mptscsih_get_scsi_lookup ( MPT_ADAPTER * ioc , int i ) ; 
/*--mptscsih_get_scsi_lookup--*/
int mptscsih_ioc_reset ( MPT_ADAPTER * ioc , int reset_phase ) ; 
/*--mptscsih_ioc_reset--*/
int mptscsih_event_process ( MPT_ADAPTER * ioc , EventNotificationReply_t * pEvReply ) ; 
/*--mptscsih_event_process--*/
int mptscsih_scandv_complete ( MPT_ADAPTER * ioc , MPT_FRAME_HDR * req , MPT_FRAME_HDR * reply ) ; 
/*--mptscsih_scandv_complete--*/
int mptscsih_quiesce_raid ( MPT_SCSI_HOST * hd , int quiesce , u8 channel , u8 id ) ; 
/*--mptscsih_quiesce_raid--*/
struct mptsas_phyinfo * mptsas_refreshing_device_handles ( MPT_ADAPTER * ioc , struct mptsas_devinfo * sas_device ) ; 
/*--mptsas_refreshing_device_handles--*/
struct mptsas_portinfo * mptsas_expander_add ( MPT_ADAPTER * ioc , u16 handle ) ; 
/*--mptsas_expander_add--*/
void mptsas_shutdown ( struct pci_dev * pdev ) ; 
/*--mptsas_shutdown--*/
struct i2o_message * i2o_msg_get_wait ( struct i2o_controller * c , int wait ) ; 
/*--i2o_msg_get_wait--*/
u32 i2o_cntxt_list_add ( struct i2o_controller * c , void * ptr ) ; 
/*--i2o_cntxt_list_add--*/
u32 i2o_cntxt_list_remove ( struct i2o_controller * c , void * ptr ) ; 
/*--i2o_cntxt_list_remove--*/
void * i2o_cntxt_list_get ( struct i2o_controller * c , u32 context ) ; 
/*--i2o_cntxt_list_get--*/
u32 i2o_cntxt_list_get_ptr ( struct i2o_controller * c , void * ptr ) ; 
/*--i2o_cntxt_list_get_ptr--*/
struct i2o_controller * i2o_find_iop ( int unit ) ; 
/*--i2o_find_iop--*/
struct i2o_device * i2o_iop_find_device ( struct i2o_controller * c , u16 tid ) ; 
/*--i2o_iop_find_device--*/
void i2o_iop_remove ( struct i2o_controller * c ) ; 
/*--i2o_iop_remove--*/
int i2o_status_get ( struct i2o_controller * c ) ; 
/*--i2o_status_get--*/
struct i2o_controller * i2o_iop_alloc ( void ) ; 
/*--i2o_iop_alloc--*/
int i2o_iop_add ( struct i2o_controller * c ) ; 
/*--i2o_iop_add--*/
int i2o_event_register ( struct i2o_device * dev , struct i2o_driver * drv , int tcntxt , u32 evt_mask ) ; 
/*--i2o_event_register--*/
int i2o_driver_register ( struct i2o_driver * drv ) ; 
/*--i2o_driver_register--*/
void i2o_driver_unregister ( struct i2o_driver * drv ) ; 
/*--i2o_driver_unregister--*/
int i2o_driver_dispatch ( struct i2o_controller * c , u32 m ) ; 
/*--i2o_driver_dispatch--*/
void i2o_driver_notify_controller_add_all ( struct i2o_controller * c ) ; 
/*--i2o_driver_notify_controller_add_all--*/
void i2o_driver_notify_controller_remove_all ( struct i2o_controller * c ) ; 
/*--i2o_driver_notify_controller_remove_all--*/
void i2o_driver_notify_device_add_all ( struct i2o_device * i2o_dev ) ; 
/*--i2o_driver_notify_device_add_all--*/
void i2o_driver_notify_device_remove_all ( struct i2o_device * i2o_dev ) ; 
/*--i2o_driver_notify_device_remove_all--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) i2o_driver_init ( void ) ; 
/*--i2o_driver_init--*/
void i2o_driver_exit ( void ) ; 
/*--i2o_driver_exit--*/
int i2o_device_claim ( struct i2o_device * dev ) ; 
/*--i2o_device_claim--*/
int i2o_device_claim_release ( struct i2o_device * dev ) ; 
/*--i2o_device_claim_release--*/
void i2o_device_remove ( struct i2o_device * i2o_dev ) ; 
/*--i2o_device_remove--*/
int i2o_device_parse_lct ( struct i2o_controller * c ) ; 
/*--i2o_device_parse_lct--*/
int i2o_parm_issue ( struct i2o_device * i2o_dev , int cmd , void * oplist , int oplen , void * reslist , int reslen ) ; 
/*--i2o_parm_issue--*/
int i2o_parm_field_get ( struct i2o_device * i2o_dev , int group , int field , void * buf , int buflen ) ; 
/*--i2o_parm_field_get--*/
int i2o_parm_table_get ( struct i2o_device * dev , int oper , int group , int fieldcount , void * ibuf , int ibuflen , void * resblk , int reslen ) ; 
/*--i2o_parm_table_get--*/
void i2o_report_status ( const char * severity , const char * str , struct i2o_message * m ) ; 
/*--i2o_report_status--*/
void i2o_dump_message ( struct i2o_message * m ) ; 
/*--i2o_dump_message--*/
void i2o_debug_state ( struct i2o_controller * c ) ; 
/*--i2o_debug_state--*/
void i2o_dump_hrt ( struct i2o_controller * c ) ; 
/*--i2o_dump_hrt--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) i2o_pci_init ( void ) ; 
/*--i2o_pci_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) i2o_pci_exit ( void ) ; 
/*--i2o_pci_exit--*/
int i2o_msg_post_wait_mem ( struct i2o_controller * c , struct i2o_message * msg , unsigned long timeout , struct i2o_dma * dma ) ; 
/*--i2o_msg_post_wait_mem--*/
int i2o_exec_lct_get ( struct i2o_controller * c ) ; 
/*--i2o_exec_lct_get--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) i2o_exec_init ( void ) ; 
/*--i2o_exec_init--*/
void i2o_exec_exit ( void ) ; 
/*--i2o_exec_exit--*/
u16 i2o_sg_tablesize ( struct i2o_controller * c , u16 body_size ) ; 
/*--i2o_sg_tablesize--*/
dma_addr_t i2o_dma_map_single ( struct i2o_controller * c , void * ptr , size_t size , enum dma_data_direction direction , u32 * * sg_ptr ) ; 
/*--i2o_dma_map_single--*/
int i2o_dma_map_sg ( struct i2o_controller * c , struct scatterlist * sg , int sg_count , enum dma_data_direction direction , u32 * * sg_ptr ) ; 
/*--i2o_dma_map_sg--*/
int i2o_dma_alloc ( struct device * dev , struct i2o_dma * addr , size_t len ) ; 
/*--i2o_dma_alloc--*/
void i2o_dma_free ( struct device * dev , struct i2o_dma * addr ) ; 
/*--i2o_dma_free--*/
int i2o_dma_realloc ( struct device * dev , struct i2o_dma * addr , size_t len ) ; 
/*--i2o_dma_realloc--*/
int i2o_pool_alloc ( struct i2o_pool * pool , const char * name , size_t size , int min_nr ) ; 
/*--i2o_pool_alloc--*/
void i2o_pool_free ( struct i2o_pool * pool ) ; 
/*--i2o_pool_free--*/
int sm501_misc_control ( struct device * dev , unsigned long set , unsigned long clear ) ; 
/*--sm501_misc_control--*/
unsigned long sm501_modify_reg ( struct device * dev , unsigned long reg , unsigned long set , unsigned long clear ) ; 
/*--sm501_modify_reg--*/
int sm501_unit_power ( struct device * dev , unsigned int unit , unsigned int to ) ; 
/*--sm501_unit_power--*/
unsigned long sm501_set_clock ( struct device * dev , int clksrc , unsigned long req_freq ) ; 
/*--sm501_set_clock--*/
unsigned long sm501_find_clock ( struct device * dev , int clksrc , unsigned long req_freq ) ; 
/*--sm501_find_clock--*/
void pasic3_write_register ( struct device * dev , u32 reg , u8 val ) ; 
/*--pasic3_write_register--*/
u8 pasic3_read_register ( struct device * dev , u32 reg ) ; 
/*--pasic3_read_register--*/
u16 wm8400_reg_read ( struct wm8400 * wm8400 , u8 reg ) ; 
/*--wm8400_reg_read--*/
int wm8400_block_read ( struct wm8400 * wm8400 , u8 reg , int count , u16 * data ) ; 
/*--wm8400_block_read--*/
int wm8400_set_bits ( struct wm8400 * wm8400 , u8 reg , u16 mask , u16 val ) ; 
/*--wm8400_set_bits--*/
void wm8400_reset_codec_reg_cache ( struct wm8400 * wm8400 ) ; 
/*--wm8400_reset_codec_reg_cache--*/
int tps65010_set_vbus_draw ( unsigned mA ) ; 
/*--tps65010_set_vbus_draw--*/
int tps65010_set_gpio_out_value ( unsigned gpio , unsigned value ) ; 
/*--tps65010_set_gpio_out_value--*/
int tps65010_set_led ( unsigned led , unsigned mode ) ; 
/*--tps65010_set_led--*/
int tps65010_set_vib ( unsigned value ) ; 
/*--tps65010_set_vib--*/
int tps65010_set_low_pwr ( unsigned mode ) ; 
/*--tps65010_set_low_pwr--*/
int tps65010_config_vregs1 ( unsigned value ) ; 
/*--tps65010_config_vregs1--*/
int tps65010_config_vdcdc2 ( unsigned value ) ; 
/*--tps65010_config_vdcdc2--*/
int tps65013_set_low_pwr ( unsigned mode ) ; 
/*--tps65013_set_low_pwr--*/
void mc13783_lock ( struct mc13783 * mc13783 ) ; 
/*--mc13783_lock--*/
void mc13783_unlock ( struct mc13783 * mc13783 ) ; 
/*--mc13783_unlock--*/
int mc13783_reg_read ( struct mc13783 * mc13783 , unsigned int offset , u32 * val ) ; 
/*--mc13783_reg_read--*/
int mc13783_reg_write ( struct mc13783 * mc13783 , unsigned int offset , u32 val ) ; 
/*--mc13783_reg_write--*/
int mc13783_reg_rmw ( struct mc13783 * mc13783 , unsigned int offset , u32 mask , u32 val ) ; 
/*--mc13783_reg_rmw--*/
int mc13783_irq_mask ( struct mc13783 * mc13783 , int irq ) ; 
/*--mc13783_irq_mask--*/
int mc13783_irq_unmask ( struct mc13783 * mc13783 , int irq ) ; 
/*--mc13783_irq_unmask--*/
int mc13783_irq_status ( struct mc13783 * mc13783 , int irq , int * enabled , int * pending ) ; 
/*--mc13783_irq_status--*/
int mc13783_irq_ack ( struct mc13783 * mc13783 , int irq ) ; 
/*--mc13783_irq_ack--*/
int mc13783_irq_request_nounmask ( struct mc13783 * mc13783 , int irq , irq_handler_t handler , const char * name , void * dev ) ; 
/*--mc13783_irq_request_nounmask--*/
int mc13783_irq_request ( struct mc13783 * mc13783 , int irq , irq_handler_t handler , const char * name , void * dev ) ; 
/*--mc13783_irq_request--*/
int mc13783_irq_free ( struct mc13783 * mc13783 , int irq , void * dev ) ; 
/*--mc13783_irq_free--*/
int mc13783_adc_do_conversion ( struct mc13783 * mc13783 , unsigned int mode , unsigned int channel , unsigned int * sample ) ; 
/*--mc13783_adc_do_conversion--*/
unsigned int ucb1400_adc_read ( struct snd_ac97 * ac97 , u16 adc_channel , int adcsync ) ; 
/*--ucb1400_adc_read--*/
int pcf50633_read_block ( struct pcf50633 * pcf , u8 reg , int nr_regs , u8 * data ) ; 
/*--pcf50633_read_block--*/
int pcf50633_write_block ( struct pcf50633 * pcf , u8 reg , int nr_regs , u8 * data ) ; 
/*--pcf50633_write_block--*/
u8 pcf50633_reg_read ( struct pcf50633 * pcf , u8 reg ) ; 
/*--pcf50633_reg_read--*/
int pcf50633_reg_write ( struct pcf50633 * pcf , u8 reg , u8 val ) ; 
/*--pcf50633_reg_write--*/
int pcf50633_reg_set_bit_mask ( struct pcf50633 * pcf , u8 reg , u8 mask , u8 val ) ; 
/*--pcf50633_reg_set_bit_mask--*/
int pcf50633_reg_clear_bits ( struct pcf50633 * pcf , u8 reg , u8 val ) ; 
/*--pcf50633_reg_clear_bits--*/
int pcf50633_register_irq ( struct pcf50633 * pcf , int irq , void ( * handler ) ( int , void * ) , void * data ) ; 
/*--pcf50633_register_irq--*/
int pcf50633_free_irq ( struct pcf50633 * pcf , int irq ) ; 
/*--pcf50633_free_irq--*/
int pcf50633_irq_mask ( struct pcf50633 * pcf , int irq ) ; 
/*--pcf50633_irq_mask--*/
int pcf50633_irq_unmask ( struct pcf50633 * pcf , int irq ) ; 
/*--pcf50633_irq_unmask--*/
int pcf50633_irq_mask_get ( struct pcf50633 * pcf , int irq ) ; 
/*--pcf50633_irq_mask_get--*/
int pcf50633_irq_suspend ( struct pcf50633 * pcf ) ; 
/*--pcf50633_irq_suspend--*/
int pcf50633_irq_resume ( struct pcf50633 * pcf ) ; 
/*--pcf50633_irq_resume--*/
int pcf50633_irq_init ( struct pcf50633 * pcf , int irq ) ; 
/*--pcf50633_irq_init--*/
void pcf50633_irq_free ( struct pcf50633 * pcf ) ; 
/*--pcf50633_irq_free--*/
int pcf50633_adc_sync_read ( struct pcf50633 * pcf , int mux , int avg ) ; 
/*--pcf50633_adc_sync_read--*/
int pcf50633_adc_async_read ( struct pcf50633 * pcf , int mux , int avg , void ( * callback ) ( struct pcf50633 * , void * , int ) , void * callback_param ) ; 
/*--pcf50633_adc_async_read--*/
int pcf50633_gpio_set ( struct pcf50633 * pcf , int gpio , u8 val ) ; 
/*--pcf50633_gpio_set--*/
u8 pcf50633_gpio_get ( struct pcf50633 * pcf , int gpio ) ; 
/*--pcf50633_gpio_get--*/
int pcf50633_gpio_invert_set ( struct pcf50633 * pcf , int gpio , int invert ) ; 
/*--pcf50633_gpio_invert_set--*/
int pcf50633_gpio_invert_get ( struct pcf50633 * pcf , int gpio ) ; 
/*--pcf50633_gpio_invert_get--*/
int pcf50633_gpio_power_supply_set ( struct pcf50633 * pcf , int gpio , int regulator , int on ) ; 
/*--pcf50633_gpio_power_supply_set--*/
struct c2port_device * c2port_device_register ( char * name , struct c2port_ops * ops , void * devdata ) ; 
/*--c2port_device_register--*/
void c2port_device_unregister ( struct c2port_device * c2dev ) ; 
/*--c2port_device_unregister--*/
void cb710_pci_update_config_reg ( struct pci_dev * pdev , int reg , uint32_t mask , uint32_t xor ) ; 
/*--cb710_pci_update_config_reg--*/
void cb710_set_irq_handler ( struct cb710_slot * slot , cb710_irq_handler_t handler ) ; 
/*--cb710_set_irq_handler--*/
uint32_t cb710_sg_dwiter_read_next_block ( struct sg_mapping_iter * miter ) ; 
/*--cb710_sg_dwiter_read_next_block--*/
void cb710_sg_dwiter_write_next_block ( struct sg_mapping_iter * miter , uint32_t data ) ; 
/*--cb710_sg_dwiter_write_next_block--*/
void eeprom_93cx6_read ( struct eeprom_93cx6 * eeprom , const u8 word , u16 * data ) ; 
/*--eeprom_93cx6_read--*/
void eeprom_93cx6_multiread ( struct eeprom_93cx6 * eeprom , const u8 word , __le16 * data , const u16 words ) ; 
/*--eeprom_93cx6_multiread--*/
int ibmasmfs_register ( void ) ; 
/*--ibmasmfs_register--*/
void ibmasmfs_unregister ( void ) ; 
/*--ibmasmfs_unregister--*/
void ibmasmfs_add_sp ( struct service_processor * sp ) ; 
/*--ibmasmfs_add_sp--*/
void ibmasm_receive_event ( struct service_processor * sp , void * data , unsigned int data_size ) ; 
/*--ibmasm_receive_event--*/
int ibmasm_get_next_event ( struct service_processor * sp , struct event_reader * reader ) ; 
/*--ibmasm_get_next_event--*/
void ibmasm_cancel_next_event ( struct event_reader * reader ) ; 
/*--ibmasm_cancel_next_event--*/
void ibmasm_event_reader_register ( struct service_processor * sp , struct event_reader * reader ) ; 
/*--ibmasm_event_reader_register--*/
void ibmasm_event_reader_unregister ( struct service_processor * sp , struct event_reader * reader ) ; 
/*--ibmasm_event_reader_unregister--*/
int ibmasm_event_buffer_init ( struct service_processor * sp ) ; 
/*--ibmasm_event_buffer_init--*/
void ibmasm_event_buffer_exit ( struct service_processor * sp ) ; 
/*--ibmasm_event_buffer_exit--*/
struct command * ibmasm_new_command ( struct service_processor * sp , size_t buffer_size ) ; 
/*--ibmasm_new_command--*/
void ibmasm_free_command ( struct kref * kref ) ; 
/*--ibmasm_free_command--*/
void ibmasm_exec_command ( struct service_processor * sp , struct command * cmd ) ; 
/*--ibmasm_exec_command--*/
void ibmasm_wait_for_response ( struct command * cmd , int timeout ) ; 
/*--ibmasm_wait_for_response--*/
void ibmasm_receive_command_response ( struct service_processor * sp , void * response , size_t size ) ; 
/*--ibmasm_receive_command_response--*/
void ibmasm_handle_mouse_interrupt ( struct service_processor * sp ) ; 
/*--ibmasm_handle_mouse_interrupt--*/
int ibmasm_init_remote_input_dev ( struct service_processor * sp ) ; 
/*--ibmasm_init_remote_input_dev--*/
void ibmasm_free_remote_input_dev ( struct service_processor * sp ) ; 
/*--ibmasm_free_remote_input_dev--*/
void ibmasm_register_panic_notifier ( void ) ; 
/*--ibmasm_register_panic_notifier--*/
void ibmasm_unregister_panic_notifier ( void ) ; 
/*--ibmasm_unregister_panic_notifier--*/
int ibmasm_heartbeat_init ( struct service_processor * sp ) ; 
/*--ibmasm_heartbeat_init--*/
void ibmasm_heartbeat_exit ( struct service_processor * sp ) ; 
/*--ibmasm_heartbeat_exit--*/
void ibmasm_receive_heartbeat ( struct service_processor * sp , void * message , size_t size ) ; 
/*--ibmasm_receive_heartbeat--*/
void ibmasm_init_reverse_heartbeat ( struct service_processor * sp , struct reverse_heartbeat * rhb ) ; 
/*--ibmasm_init_reverse_heartbeat--*/
int ibmasm_start_reverse_heartbeat ( struct service_processor * sp , struct reverse_heartbeat * rhb ) ; 
/*--ibmasm_start_reverse_heartbeat--*/
void ibmasm_stop_reverse_heartbeat ( struct reverse_heartbeat * rhb ) ; 
/*--ibmasm_stop_reverse_heartbeat--*/
void ibmasm_receive_message ( struct service_processor * sp , void * message , int message_size ) ; 
/*--ibmasm_receive_message--*/
int ibmasm_send_driver_vpd ( struct service_processor * sp ) ; 
/*--ibmasm_send_driver_vpd--*/
int ibmasm_send_os_state ( struct service_processor * sp , int os_state ) ; 
/*--ibmasm_send_os_state--*/
int ibmasm_send_i2o_message ( struct service_processor * sp ) ; 
/*--ibmasm_send_i2o_message--*/
irqreturn_t ibmasm_interrupt_handler ( int irq , void * dev_id ) ; 
/*--ibmasm_interrupt_handler--*/
void ibmasm_register_uart ( struct service_processor * sp ) ; 
/*--ibmasm_register_uart--*/
void ibmasm_unregister_uart ( struct service_processor * sp ) ; 
/*--ibmasm_unregister_uart--*/
int iwmct_tx ( struct iwmct_priv * priv , void * src , int count ) ; 
/*--iwmct_tx--*/
int iwmct_send_hcmd ( struct iwmct_priv * priv , u8 * cmd , u16 len ) ; 
/*--iwmct_send_hcmd--*/
void iwmct_dbg_init_params ( struct iwmct_priv * priv ) ; 
/*--iwmct_dbg_init_params--*/
int iwmct_fw_load ( struct iwmct_priv * priv ) ; 
/*--iwmct_fw_load--*/
struct tifm_adapter * tifm_alloc_adapter ( unsigned int num_sockets , struct device * dev ) ; 
/*--tifm_alloc_adapter--*/
int tifm_add_adapter ( struct tifm_adapter * fm ) ; 
/*--tifm_add_adapter--*/
void tifm_remove_adapter ( struct tifm_adapter * fm ) ; 
/*--tifm_remove_adapter--*/
void tifm_free_adapter ( struct tifm_adapter * fm ) ; 
/*--tifm_free_adapter--*/
void tifm_free_device ( struct device * dev ) ; 
/*--tifm_free_device--*/
struct tifm_dev * tifm_alloc_device ( struct tifm_adapter * fm , unsigned int id , unsigned char type ) ; 
/*--tifm_alloc_device--*/
void tifm_eject ( struct tifm_dev * sock ) ; 
/*--tifm_eject--*/
int tifm_has_ms_pif ( struct tifm_dev * sock ) ; 
/*--tifm_has_ms_pif--*/
int tifm_map_sg ( struct tifm_dev * sock , struct scatterlist * sg , int nents , int direction ) ; 
/*--tifm_map_sg--*/
void tifm_unmap_sg ( struct tifm_dev * sock , struct scatterlist * sg , int nents , int direction ) ; 
/*--tifm_unmap_sg--*/
void tifm_queue_work ( struct work_struct * work ) ; 
/*--tifm_queue_work--*/
int tifm_register_driver ( struct tifm_driver * drv ) ; 
/*--tifm_register_driver--*/
void tifm_unregister_driver ( struct tifm_driver * drv ) ; 
/*--tifm_unregister_driver--*/
int ioc4_register_submodule ( struct ioc4_submodule * is ) ; 
/*--ioc4_register_submodule--*/
void ioc4_unregister_submodule ( struct ioc4_submodule * is ) ; 
/*--ioc4_unregister_submodule--*/
struct enclosure_device * enclosure_find ( struct device * dev , struct enclosure_device * start ) ; 
/*--enclosure_find--*/
int enclosure_for_each_device ( int ( * fn ) ( struct enclosure_device * , void * ) , void * data ) ; 
/*--enclosure_for_each_device--*/
struct enclosure_device * enclosure_register ( struct device * dev , const char * name , int components , struct enclosure_component_callbacks * cb ) ; 
/*--enclosure_register--*/
void enclosure_unregister ( struct enclosure_device * edev ) ; 
/*--enclosure_unregister--*/
struct enclosure_component * enclosure_component_register ( struct enclosure_device * edev , unsigned int number , enum enclosure_component_type type , const char * name ) ; 
/*--enclosure_component_register--*/
int enclosure_add_device ( struct enclosure_device * edev , int component , struct device * dev ) ; 
/*--enclosure_add_device--*/
int enclosure_remove_device ( struct enclosure_device * edev , struct device * dev ) ; 
/*--enclosure_remove_device--*/
int mmc_init_queue ( struct mmc_queue * mq , struct mmc_card * card , spinlock_t * lock ) ; 
/*--mmc_init_queue--*/
void mmc_cleanup_queue ( struct mmc_queue * mq ) ; 
/*--mmc_cleanup_queue--*/
void mmc_queue_suspend ( struct mmc_queue * mq ) ; 
/*--mmc_queue_suspend--*/
void mmc_queue_resume ( struct mmc_queue * mq ) ; 
/*--mmc_queue_resume--*/
unsigned int mmc_queue_map_sg ( struct mmc_queue * mq ) ; 
/*--mmc_queue_map_sg--*/
void mmc_queue_bounce_pre ( struct mmc_queue * mq ) ; 
/*--mmc_queue_bounce_pre--*/
void mmc_queue_bounce_post ( struct mmc_queue * mq ) ; 
/*--mmc_queue_bounce_post--*/
int sdhci_suspend_host ( struct sdhci_host * host , pm_message_t state ) ; 
/*--sdhci_suspend_host--*/
int sdhci_resume_host ( struct sdhci_host * host ) ; 
/*--sdhci_resume_host--*/
struct sdhci_host * sdhci_alloc_host ( struct device * dev , size_t priv_size ) ; 
/*--sdhci_alloc_host--*/
int sdhci_add_host ( struct sdhci_host * host ) ; 
/*--sdhci_add_host--*/
void sdhci_remove_host ( struct sdhci_host * host , int dead ) ; 
/*--sdhci_remove_host--*/
void sdhci_free_host ( struct sdhci_host * host ) ; 
/*--sdhci_free_host--*/
void register_mtd_chip_driver ( struct mtd_chip_driver * drv ) ; 
/*--register_mtd_chip_driver--*/
void unregister_mtd_chip_driver ( struct mtd_chip_driver * drv ) ; 
/*--unregister_mtd_chip_driver--*/
struct mtd_info * do_map_probe ( const char * name , struct map_info * map ) ; 
/*--do_map_probe--*/
void map_destroy ( struct mtd_info * mtd ) ; 
/*--map_destroy--*/
struct mtd_info * cfi_probe ( struct map_info * map ) ; 
/*--cfi_probe--*/
int cfi_qry_present ( struct map_info * map , __u32 base , struct cfi_private * cfi ) ; 
/*--cfi_qry_present--*/
int cfi_qry_mode_on ( uint32_t base , struct map_info * map , struct cfi_private * cfi ) ; 
/*--cfi_qry_mode_on--*/
void cfi_qry_mode_off ( uint32_t base , struct map_info * map , struct cfi_private * cfi ) ; 
/*--cfi_qry_mode_off--*/
struct cfi_extquery * cfi_read_pri ( struct map_info * map , __u16 adr , __u16 size , const char * name ) ; 
/*--cfi_read_pri--*/
void cfi_fixup ( struct mtd_info * mtd , struct cfi_fixup * fixups ) ; 
/*--cfi_fixup--*/
int cfi_varsize_frob ( struct mtd_info * mtd , varsize_frob_t frob , loff_t ofs , size_t len , void * thunk ) ; 
/*--cfi_varsize_frob--*/
struct mtd_info * cfi_cmdset_0020 ( struct map_info * map , int primary ) ; 
/*--cfi_cmdset_0020--*/
struct mtd_info * cfi_cmdset_0002 ( struct map_info * map , int primary ) ; 
/*--cfi_cmdset_0002--*/
struct mtd_info * cfi_cmdset_0001 ( struct map_info * map , int primary ) ; 
/*--cfi_cmdset_0001--*/
struct mtd_info * mtd_do_chip_probe ( struct map_info * map , struct chip_probe * cp ) ; 
/*--mtd_do_chip_probe--*/
void DoC2k_init ( struct mtd_info * mtd ) ; 
/*--DoC2k_init--*/
void DoCMil_init ( struct mtd_info * mtd ) ; 
/*--DoCMil_init--*/
int doc_erase ( struct mtd_info * mtd , struct erase_info * instr ) ; 
/*--doc_erase--*/
void DoCMilPlus_init ( struct mtd_info * mtd ) ; 
/*--DoCMilPlus_init--*/
int doc_decode_ecc ( unsigned char sector [ 512 ] , unsigned char ecc1 [ 6 ] ) ; 
/*--doc_decode_ecc--*/
int mtdram_init_device ( struct mtd_info * mtd , void * mapped_address , unsigned long size , char * name ) ; 
/*--mtdram_init_device--*/
struct mtd_info * lpddr_probe ( struct map_info * map ) ; 
/*--lpddr_probe--*/
struct mtd_info * lpddr_cmdset ( struct map_info * map ) ; 
/*--lpddr_cmdset--*/
int do_write_buffer ( struct map_info * map , struct flchip * chip , unsigned long adr , const struct kvec * * pvec , unsigned long * pvec_seek , int len ) ; 
/*--do_write_buffer--*/
int do_erase_oneblock ( struct mtd_info * mtd , loff_t adr ) ; 
/*--do_erase_oneblock--*/
int do_xxlock ( struct mtd_info * mtd , loff_t adr , uint32_t len , int thunk ) ; 
/*--do_xxlock--*/
int word_program ( struct map_info * map , loff_t adr , uint32_t curval ) ; 
/*--word_program--*/
void simple_map_init ( struct map_info * map ) ; 
/*--simple_map_init--*/
void nand_wait_ready ( struct mtd_info * mtd ) ; 
/*--nand_wait_ready--*/
int nand_unlock ( struct mtd_info * mtd , loff_t ofs , uint64_t len ) ; 
/*--nand_unlock--*/
int nand_lock ( struct mtd_info * mtd , loff_t ofs , uint64_t len ) ; 
/*--nand_lock--*/
int nand_erase_nand ( struct mtd_info * mtd , struct erase_info * instr , int allowbbt ) ; 
/*--nand_erase_nand--*/
int nand_scan_ident ( struct mtd_info * mtd , int maxchips , struct nand_flash_dev * table ) ; 
/*--nand_scan_ident--*/
int nand_scan_tail ( struct mtd_info * mtd ) ; 
/*--nand_scan_tail--*/
int nand_scan ( struct mtd_info * mtd , int maxchips ) ; 
/*--nand_scan--*/
void nand_release ( struct mtd_info * mtd ) ; 
/*--nand_release--*/
int nand_scan_bbt ( struct mtd_info * mtd , struct nand_bbt_descr * bd ) ; 
/*--nand_scan_bbt--*/
int nand_update_bbt ( struct mtd_info * mtd , loff_t offs ) ; 
/*--nand_update_bbt--*/
int nand_default_bbt ( struct mtd_info * mtd ) ; 
/*--nand_default_bbt--*/
int nand_isbad_bbt ( struct mtd_info * mtd , loff_t offs , int allowbbt ) ; 
/*--nand_isbad_bbt--*/
void __nand_calculate_ecc ( const unsigned char * buf , unsigned int eccsize , unsigned char * code ) ; 
/*--__nand_calculate_ecc--*/
int nand_calculate_ecc ( struct mtd_info * mtd , const unsigned char * buf , unsigned char * code ) ; 
/*--nand_calculate_ecc--*/
int __nand_correct_data ( unsigned char * buf , unsigned char * read_ecc , unsigned char * calc_ecc , unsigned int eccsize ) ; 
/*--__nand_correct_data--*/
int nand_correct_data ( struct mtd_info * mtd , unsigned char * buf , unsigned char * read_ecc , unsigned char * calc_ecc ) ; 
/*--nand_correct_data--*/
int do_read_error ( struct nandsim * ns , int num ) ; 
/*--do_read_error--*/
void do_bit_flips ( struct nandsim * ns , int num ) ; 
/*--do_bit_flips--*/
loff_t onenand_addr ( struct onenand_chip * this , int block ) ; 
/*--onenand_addr--*/
int flexonenand_region ( struct mtd_info * mtd , loff_t addr ) ; 
/*--flexonenand_region--*/
int onenand_bbt_read_oob ( struct mtd_info * mtd , loff_t from , struct mtd_oob_ops * ops ) ; 
/*--onenand_bbt_read_oob--*/
int flexonenand_set_boundary ( struct mtd_info * mtd , int die , int boundary , int lock ) ; 
/*--flexonenand_set_boundary--*/
int onenand_scan ( struct mtd_info * mtd , int maxchips ) ; 
/*--onenand_scan--*/
void onenand_release ( struct mtd_info * mtd ) ; 
/*--onenand_release--*/
int onenand_scan_bbt ( struct mtd_info * mtd , struct nand_bbt_descr * bd ) ; 
/*--onenand_scan_bbt--*/
int onenand_default_bbt ( struct mtd_info * mtd ) ; 
/*--onenand_default_bbt--*/
int ubi_change_vtbl_record ( struct ubi_device * ubi , int idx , struct ubi_vtbl_record * vtbl_rec ) ; 
/*--ubi_change_vtbl_record--*/
int ubi_vtbl_rename_volumes ( struct ubi_device * ubi , struct list_head * rename_list ) ; 
/*--ubi_vtbl_rename_volumes--*/
int ubi_read_volume_table ( struct ubi_device * ubi , struct ubi_scan_info * si ) ; 
/*--ubi_read_volume_table--*/
int ubi_create_volume ( struct ubi_device * ubi , struct ubi_mkvol_req * req ) ; 
/*--ubi_create_volume--*/
int ubi_remove_volume ( struct ubi_volume_desc * desc , int no_vtbl ) ; 
/*--ubi_remove_volume--*/
int ubi_resize_volume ( struct ubi_volume_desc * desc , int reserved_pebs ) ; 
/*--ubi_resize_volume--*/
int ubi_rename_volumes ( struct ubi_device * ubi , struct list_head * rename_list ) ; 
/*--ubi_rename_volumes--*/
int ubi_add_volume ( struct ubi_device * ubi , struct ubi_volume * vol ) ; 
/*--ubi_add_volume--*/
void ubi_free_volume ( struct ubi_device * ubi , struct ubi_volume * vol ) ; 
/*--ubi_free_volume--*/
int ubi_start_update ( struct ubi_device * ubi , struct ubi_volume * vol , long long bytes ) ; 
/*--ubi_start_update--*/
int ubi_start_leb_change ( struct ubi_device * ubi , struct ubi_volume * vol , const struct ubi_leb_change_req * req ) ; 
/*--ubi_start_leb_change--*/
int ubi_more_update_data ( struct ubi_device * ubi , struct ubi_volume * vol , const void * buf , int count ) ; 
/*--ubi_more_update_data--*/
int ubi_more_leb_change_data ( struct ubi_device * ubi , struct ubi_volume * vol , const void * buf , int count ) ; 
/*--ubi_more_leb_change_data--*/
int ubi_volume_notify ( struct ubi_device * ubi , struct ubi_volume * vol , int ntype ) ; 
/*--ubi_volume_notify--*/
int ubi_notify_all ( struct ubi_device * ubi , int ntype , struct notifier_block * nb ) ; 
/*--ubi_notify_all--*/
int ubi_enumerate_volumes ( struct notifier_block * nb ) ; 
/*--ubi_enumerate_volumes--*/
struct ubi_device * ubi_get_device ( int ubi_num ) ; 
/*--ubi_get_device--*/
void ubi_put_device ( struct ubi_device * ubi ) ; 
/*--ubi_put_device--*/
struct ubi_device * ubi_get_by_major ( int major ) ; 
/*--ubi_get_by_major--*/
int ubi_major2num ( int major ) ; 
/*--ubi_major2num--*/
int ubi_attach_mtd_dev ( struct mtd_info * mtd , int ubi_num , int vid_hdr_offset ) ; 
/*--ubi_attach_mtd_dev--*/
int ubi_detach_mtd_dev ( int ubi_num , int anyway ) ; 
/*--ubi_detach_mtd_dev--*/
void ubi_do_get_device_info ( struct ubi_device * ubi , struct ubi_device_info * di ) ; 
/*--ubi_do_get_device_info--*/
int ubi_get_device_info ( int ubi_num , struct ubi_device_info * di ) ; 
/*--ubi_get_device_info--*/
void ubi_do_get_volume_info ( struct ubi_device * ubi , struct ubi_volume * vol , struct ubi_volume_info * vi ) ; 
/*--ubi_do_get_volume_info--*/
void ubi_get_volume_info ( struct ubi_volume_desc * desc , struct ubi_volume_info * vi ) ; 
/*--ubi_get_volume_info--*/
struct ubi_volume_desc * ubi_open_volume ( int ubi_num , int vol_id , int mode ) ; 
/*--ubi_open_volume--*/
struct ubi_volume_desc * ubi_open_volume_nm ( int ubi_num , const char * name , int mode ) ; 
/*--ubi_open_volume_nm--*/
struct ubi_volume_desc * ubi_open_volume_path ( const char * pathname , int mode ) ; 
/*--ubi_open_volume_path--*/
void ubi_close_volume ( struct ubi_volume_desc * desc ) ; 
/*--ubi_close_volume--*/
int ubi_leb_read ( struct ubi_volume_desc * desc , int lnum , char * buf , int offset , int len , int check ) ; 
/*--ubi_leb_read--*/
int ubi_leb_write ( struct ubi_volume_desc * desc , int lnum , const void * buf , int offset , int len , int dtype ) ; 
/*--ubi_leb_write--*/
int ubi_leb_change ( struct ubi_volume_desc * desc , int lnum , const void * buf , int len , int dtype ) ; 
/*--ubi_leb_change--*/
int ubi_leb_erase ( struct ubi_volume_desc * desc , int lnum ) ; 
/*--ubi_leb_erase--*/
int ubi_leb_unmap ( struct ubi_volume_desc * desc , int lnum ) ; 
/*--ubi_leb_unmap--*/
int ubi_leb_map ( struct ubi_volume_desc * desc , int lnum , int dtype ) ; 
/*--ubi_leb_map--*/
int ubi_is_mapped ( struct ubi_volume_desc * desc , int lnum ) ; 
/*--ubi_is_mapped--*/
int ubi_sync ( int ubi_num ) ; 
/*--ubi_sync--*/
int ubi_register_volume_notifier ( struct notifier_block * nb , int ignore_existing ) ; 
/*--ubi_register_volume_notifier--*/
int ubi_unregister_volume_notifier ( struct notifier_block * nb ) ; 
/*--ubi_unregister_volume_notifier--*/
int ubi_eba_unmap_leb ( struct ubi_device * ubi , struct ubi_volume * vol , int lnum ) ; 
/*--ubi_eba_unmap_leb--*/
int ubi_eba_read_leb ( struct ubi_device * ubi , struct ubi_volume * vol , int lnum , void * buf , int offset , int len , int check ) ; 
/*--ubi_eba_read_leb--*/
int ubi_eba_write_leb ( struct ubi_device * ubi , struct ubi_volume * vol , int lnum , const void * buf , int offset , int len , int dtype ) ; 
/*--ubi_eba_write_leb--*/
int ubi_eba_write_leb_st ( struct ubi_device * ubi , struct ubi_volume * vol , int lnum , const void * buf , int len , int dtype , int used_ebs ) ; 
/*--ubi_eba_write_leb_st--*/
int ubi_eba_atomic_leb_change ( struct ubi_device * ubi , struct ubi_volume * vol , int lnum , const void * buf , int len , int dtype ) ; 
/*--ubi_eba_atomic_leb_change--*/
int ubi_eba_copy_leb ( struct ubi_device * ubi , int from , int to , struct ubi_vid_hdr * vid_hdr ) ; 
/*--ubi_eba_copy_leb--*/
int ubi_eba_init_scan ( struct ubi_device * ubi , struct ubi_scan_info * si ) ; 
/*--ubi_eba_init_scan--*/
int ubi_io_read ( const struct ubi_device * ubi , void * buf , int pnum , int offset , int len ) ; 
/*--ubi_io_read--*/
int ubi_io_write ( struct ubi_device * ubi , const void * buf , int pnum , int offset , int len ) ; 
/*--ubi_io_write--*/
int ubi_io_sync_erase ( struct ubi_device * ubi , int pnum , int torture ) ; 
/*--ubi_io_sync_erase--*/
int ubi_io_is_bad ( const struct ubi_device * ubi , int pnum ) ; 
/*--ubi_io_is_bad--*/
int ubi_io_mark_bad ( const struct ubi_device * ubi , int pnum ) ; 
/*--ubi_io_mark_bad--*/
int ubi_io_read_ec_hdr ( struct ubi_device * ubi , int pnum , struct ubi_ec_hdr * ec_hdr , int verbose ) ; 
/*--ubi_io_read_ec_hdr--*/
int ubi_io_write_ec_hdr ( struct ubi_device * ubi , int pnum , struct ubi_ec_hdr * ec_hdr ) ; 
/*--ubi_io_write_ec_hdr--*/
int ubi_io_read_vid_hdr ( struct ubi_device * ubi , int pnum , struct ubi_vid_hdr * vid_hdr , int verbose ) ; 
/*--ubi_io_read_vid_hdr--*/
int ubi_io_write_vid_hdr ( struct ubi_device * ubi , int pnum , struct ubi_vid_hdr * vid_hdr ) ; 
/*--ubi_io_write_vid_hdr--*/
int ubi_wl_get_peb ( struct ubi_device * ubi , int dtype ) ; 
/*--ubi_wl_get_peb--*/
int ubi_wl_put_peb ( struct ubi_device * ubi , int pnum , int torture ) ; 
/*--ubi_wl_put_peb--*/
int ubi_wl_scrub_peb ( struct ubi_device * ubi , int pnum ) ; 
/*--ubi_wl_scrub_peb--*/
int ubi_wl_flush ( struct ubi_device * ubi ) ; 
/*--ubi_wl_flush--*/
int ubi_thread ( void * u ) ; 
/*--ubi_thread--*/
int ubi_wl_init_scan ( struct ubi_device * ubi , struct ubi_scan_info * si ) ; 
/*--ubi_wl_init_scan--*/
void ubi_wl_close ( struct ubi_device * ubi ) ; 
/*--ubi_wl_close--*/
int ubi_scan_add_used ( struct ubi_device * ubi , struct ubi_scan_info * si , int pnum , int ec , const struct ubi_vid_hdr * vid_hdr , int bitflips ) ; 
/*--ubi_scan_add_used--*/
struct ubi_scan_volume * ubi_scan_find_sv ( const struct ubi_scan_info * si , int vol_id ) ; 
/*--ubi_scan_find_sv--*/
struct ubi_scan_leb * ubi_scan_find_seb ( const struct ubi_scan_volume * sv , int lnum ) ; 
/*--ubi_scan_find_seb--*/
void ubi_scan_rm_volume ( struct ubi_scan_info * si , struct ubi_scan_volume * sv ) ; 
/*--ubi_scan_rm_volume--*/
int ubi_scan_erase_peb ( struct ubi_device * ubi , const struct ubi_scan_info * si , int pnum , int ec ) ; 
/*--ubi_scan_erase_peb--*/
struct ubi_scan_leb * ubi_scan_get_free_peb ( struct ubi_device * ubi , struct ubi_scan_info * si ) ; 
/*--ubi_scan_get_free_peb--*/
struct ubi_scan_info * ubi_scan ( struct ubi_device * ubi ) ; 
/*--ubi_scan--*/
void ubi_scan_destroy_si ( struct ubi_scan_info * si ) ; 
/*--ubi_scan_destroy_si--*/
int ubi_calc_data_len ( const struct ubi_device * ubi , const void * buf , int length ) ; 
/*--ubi_calc_data_len--*/
int ubi_check_volume ( struct ubi_device * ubi , int vol_id ) ; 
/*--ubi_check_volume--*/
void ubi_calculate_reserved ( struct ubi_device * ubi ) ; 
/*--ubi_calculate_reserved--*/
int inftl_read_oob ( struct mtd_info * mtd , loff_t offs , size_t len , size_t * retlen , uint8_t * buf ) ; 
/*--inftl_read_oob--*/
int inftl_write_oob ( struct mtd_info * mtd , loff_t offs , size_t len , size_t * retlen , uint8_t * buf ) ; 
/*--inftl_write_oob--*/
int INFTL_formatblock ( struct INFTLrecord * inftl , int block ) ; 
/*--INFTL_formatblock--*/
void INFTL_dumptables ( struct INFTLrecord * s ) ; 
/*--INFTL_dumptables--*/
void INFTL_dumpVUchains ( struct INFTLrecord * s ) ; 
/*--INFTL_dumpVUchains--*/
int INFTL_mount ( struct INFTLrecord * s ) ; 
/*--INFTL_mount--*/
struct mtd_info * __mtd_next_device ( int i ) ; 
/*--__mtd_next_device--*/
int add_mtd_device ( struct mtd_info * mtd ) ; 
/*--add_mtd_device--*/
int del_mtd_device ( struct mtd_info * mtd ) ; 
/*--del_mtd_device--*/
void register_mtd_user ( struct mtd_notifier * new ) ; 
/*--register_mtd_user--*/
int unregister_mtd_user ( struct mtd_notifier * old ) ; 
/*--unregister_mtd_user--*/
struct mtd_info * get_mtd_device ( struct mtd_info * mtd , int num ) ; 
/*--get_mtd_device--*/
int __get_mtd_device ( struct mtd_info * mtd ) ; 
/*--__get_mtd_device--*/
struct mtd_info * get_mtd_device_nm ( const char * name ) ; 
/*--get_mtd_device_nm--*/
void put_mtd_device ( struct mtd_info * mtd ) ; 
/*--put_mtd_device--*/
void __put_mtd_device ( struct mtd_info * mtd ) ; 
/*--__put_mtd_device--*/
int default_mtd_writev ( struct mtd_info * mtd , const struct kvec * vecs , unsigned long count , loff_t to , size_t * retlen ) ; 
/*--default_mtd_writev--*/
int get_sb_mtd ( struct file_system_type * fs_type , int flags , const char * dev_name , void * data , int ( * fill_super ) ( struct super_block * , void * , int ) , struct vfsmount * mnt ) ; 
/*--get_sb_mtd--*/
void kill_mtd_super ( struct super_block * sb ) ; 
/*--kill_mtd_super--*/
void mtd_erase_callback ( struct erase_info * instr ) ; 
/*--mtd_erase_callback--*/
int del_mtd_partitions ( struct mtd_info * master ) ; 
/*--del_mtd_partitions--*/
int add_mtd_partitions ( struct mtd_info * master , const struct mtd_partition * parts , int nbparts ) ; 
/*--add_mtd_partitions--*/
int register_mtd_parser ( struct mtd_part_parser * p ) ; 
/*--register_mtd_parser--*/
int deregister_mtd_parser ( struct mtd_part_parser * p ) ; 
/*--deregister_mtd_parser--*/
int parse_mtd_partitions ( struct mtd_info * master , const char * * types , struct mtd_partition * * pparts , unsigned long origin ) ; 
/*--parse_mtd_partitions--*/
int nftl_read_oob ( struct mtd_info * mtd , loff_t offs , size_t len , size_t * retlen , uint8_t * buf ) ; 
/*--nftl_read_oob--*/
int nftl_write_oob ( struct mtd_info * mtd , loff_t offs , size_t len , size_t * retlen , uint8_t * buf ) ; 
/*--nftl_write_oob--*/
int NFTL_formatblock ( struct NFTLrecord * nftl , int block ) ; 
/*--NFTL_formatblock--*/
int NFTL_mount ( struct NFTLrecord * s ) ; 
/*--NFTL_mount--*/
struct mtd_info * mtd_concat_create ( struct mtd_info * subdev [ ] , int num_devs , const char * name ) ; 
/*--mtd_concat_create--*/
void mtd_concat_destroy ( struct mtd_info * mtd ) ; 
/*--mtd_concat_destroy--*/
void blktrans_dev_release ( struct kref * kref ) ; 
/*--blktrans_dev_release--*/
void blktrans_dev_put ( struct mtd_blktrans_dev * dev ) ; 
/*--blktrans_dev_put--*/
int add_mtd_blktrans_dev ( struct mtd_blktrans_dev * new ) ; 
/*--add_mtd_blktrans_dev--*/
int del_mtd_blktrans_dev ( struct mtd_blktrans_dev * old ) ; 
/*--del_mtd_blktrans_dev--*/
int register_mtd_blktrans ( struct mtd_blktrans_ops * tr ) ; 
/*--register_mtd_blktrans--*/
int deregister_mtd_blktrans ( struct mtd_blktrans_ops * tr ) ; 
/*--deregister_mtd_blktrans--*/
; void arcnet_unregister_proto ( struct ArcProto * proto ) ; 
/*--arcnet_unregister_proto--*/
struct net_device * alloc_arcdev ( const char * name ) ; 
/*--alloc_arcdev--*/
int arcnet_open ( struct net_device * dev ) ; 
/*--arcnet_open--*/
int arcnet_close ( struct net_device * dev ) ; 
/*--arcnet_close--*/
netdev_tx_t arcnet_send_packet ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--arcnet_send_packet--*/
void arcnet_timeout ( struct net_device * dev ) ; 
/*--arcnet_timeout--*/
irqreturn_t arcnet_interrupt ( int irq , void * dev_id ) ; 
/*--arcnet_interrupt--*/
int com20020_check ( struct net_device * dev ) ; 
/*--com20020_check--*/
int com20020_found ( struct net_device * dev , int shared ) ; 
/*--com20020_found--*/
void atl1c_reinit_locked ( struct atl1c_adapter * adapter ) ; 
/*--atl1c_reinit_locked--*/
int atl1c_up ( struct atl1c_adapter * adapter ) ; 
/*--atl1c_up--*/
void atl1c_down ( struct atl1c_adapter * adapter ) ; 
/*--atl1c_down--*/
int atl1c_check_eeprom_exist ( struct atl1c_hw * hw ) ; 
/*--atl1c_check_eeprom_exist--*/
void atl1c_hw_set_mac_addr ( struct atl1c_hw * hw ) ; 
/*--atl1c_hw_set_mac_addr--*/
bool atl1c_read_eeprom ( struct atl1c_hw * hw , u32 offset , u32 * p_value ) ; 
/*--atl1c_read_eeprom--*/
int atl1c_read_mac_addr ( struct atl1c_hw * hw ) ; 
/*--atl1c_read_mac_addr--*/
u32 atl1c_hash_mc_addr ( struct atl1c_hw * hw , u8 * mc_addr ) ; 
/*--atl1c_hash_mc_addr--*/
void atl1c_hash_set ( struct atl1c_hw * hw , u32 hash_value ) ; 
/*--atl1c_hash_set--*/
int atl1c_read_phy_reg ( struct atl1c_hw * hw , u16 reg_addr , u16 * phy_data ) ; 
/*--atl1c_read_phy_reg--*/
int atl1c_write_phy_reg ( struct atl1c_hw * hw , u32 reg_addr , u16 phy_data ) ; 
/*--atl1c_write_phy_reg--*/
void atl1c_phy_disable ( struct atl1c_hw * hw ) ; 
/*--atl1c_phy_disable--*/
int atl1c_phy_reset ( struct atl1c_hw * hw ) ; 
/*--atl1c_phy_reset--*/
int atl1c_phy_init ( struct atl1c_hw * hw ) ; 
/*--atl1c_phy_init--*/
int atl1c_get_speed_and_duplex ( struct atl1c_hw * hw , u16 * speed , u16 * duplex ) ; 
/*--atl1c_get_speed_and_duplex--*/
int atl1c_restart_autoneg ( struct atl1c_hw * hw ) ; 
/*--atl1c_restart_autoneg--*/
void atl1c_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--atl1c_set_ethtool_ops--*/
void atl1e_reinit_locked ( struct atl1e_adapter * adapter ) ; 
/*--atl1e_reinit_locked--*/
int atl1e_up ( struct atl1e_adapter * adapter ) ; 
/*--atl1e_up--*/
void atl1e_down ( struct atl1e_adapter * adapter ) ; 
/*--atl1e_down--*/
int atl1e_check_eeprom_exist ( struct atl1e_hw * hw ) ; 
/*--atl1e_check_eeprom_exist--*/
void atl1e_hw_set_mac_addr ( struct atl1e_hw * hw ) ; 
/*--atl1e_hw_set_mac_addr--*/
bool atl1e_write_eeprom ( struct atl1e_hw * hw , u32 offset , u32 value ) ; 
/*--atl1e_write_eeprom--*/
bool atl1e_read_eeprom ( struct atl1e_hw * hw , u32 offset , u32 * p_value ) ; 
/*--atl1e_read_eeprom--*/
void atl1e_force_ps ( struct atl1e_hw * hw ) ; 
/*--atl1e_force_ps--*/
int atl1e_read_mac_addr ( struct atl1e_hw * hw ) ; 
/*--atl1e_read_mac_addr--*/
u32 atl1e_hash_mc_addr ( struct atl1e_hw * hw , u8 * mc_addr ) ; 
/*--atl1e_hash_mc_addr--*/
void atl1e_hash_set ( struct atl1e_hw * hw , u32 hash_value ) ; 
/*--atl1e_hash_set--*/
int atl1e_read_phy_reg ( struct atl1e_hw * hw , u16 reg_addr , u16 * phy_data ) ; 
/*--atl1e_read_phy_reg--*/
int atl1e_write_phy_reg ( struct atl1e_hw * hw , u32 reg_addr , u16 phy_data ) ; 
/*--atl1e_write_phy_reg--*/
int atl1e_phy_commit ( struct atl1e_hw * hw ) ; 
/*--atl1e_phy_commit--*/
int atl1e_phy_init ( struct atl1e_hw * hw ) ; 
/*--atl1e_phy_init--*/
int atl1e_reset_hw ( struct atl1e_hw * hw ) ; 
/*--atl1e_reset_hw--*/
int atl1e_init_hw ( struct atl1e_hw * hw ) ; 
/*--atl1e_init_hw--*/
int atl1e_get_speed_and_duplex ( struct atl1e_hw * hw , u16 * speed , u16 * duplex ) ; 
/*--atl1e_get_speed_and_duplex--*/
int atl1e_restart_autoneg ( struct atl1e_hw * hw ) ; 
/*--atl1e_restart_autoneg--*/
void atl1e_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--atl1e_set_ethtool_ops--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) atl1e_check_options ( struct atl1e_adapter * adapter ) ; 
/*--atl1e_check_options--*/
s32 atl1_read_phy_reg ( struct atl1_hw * hw , u16 reg_addr , u16 * phy_data ) ; 
/*--atl1_read_phy_reg--*/
u32 atl1_hash_mc_addr ( struct atl1_hw * hw , u8 * mc_addr ) ; 
/*--atl1_hash_mc_addr--*/
void atl1_hash_set ( struct atl1_hw * hw , u32 hash_value ) ; 
/*--atl1_hash_set--*/
void atl1_set_mac_addr ( struct atl1_hw * hw ) ; 
/*--atl1_set_mac_addr--*/
void be_cq_notify ( struct be_adapter * adapter , u16 qid , bool arm , u16 num_popped ) ; 
/*--be_cq_notify--*/
void netdev_stats_update ( struct be_adapter * adapter ) ; 
/*--netdev_stats_update--*/
void be_link_status_update ( struct be_adapter * adapter , bool link_up ) ; 
/*--be_link_status_update--*/
int be_poll_rx ( struct napi_struct * napi , int budget ) ; 
/*--be_poll_rx--*/
int be_load_fw ( struct be_adapter * adapter , u8 * func ) ; 
/*--be_load_fw--*/
void be_async_mcc_enable ( struct be_adapter * adapter ) ; 
/*--be_async_mcc_enable--*/
void be_async_mcc_disable ( struct be_adapter * adapter ) ; 
/*--be_async_mcc_disable--*/
int be_process_mcc ( struct be_adapter * adapter , int * status ) ; 
/*--be_process_mcc--*/
int be_cmd_POST ( struct be_adapter * adapter ) ; 
/*--be_cmd_POST--*/
int be_cmd_fw_init ( struct be_adapter * adapter ) ; 
/*--be_cmd_fw_init--*/
int be_cmd_fw_clean ( struct be_adapter * adapter ) ; 
/*--be_cmd_fw_clean--*/
int be_cmd_eq_create ( struct be_adapter * adapter , struct be_queue_info * eq , int eq_delay ) ; 
/*--be_cmd_eq_create--*/
int be_cmd_mac_addr_query ( struct be_adapter * adapter , u8 * mac_addr , u8 type , bool permanent , u32 if_handle ) ; 
/*--be_cmd_mac_addr_query--*/
int be_cmd_pmac_add ( struct be_adapter * adapter , u8 * mac_addr , u32 if_id , u32 * pmac_id ) ; 
/*--be_cmd_pmac_add--*/
int be_cmd_pmac_del ( struct be_adapter * adapter , u32 if_id , u32 pmac_id ) ; 
/*--be_cmd_pmac_del--*/
int be_cmd_cq_create ( struct be_adapter * adapter , struct be_queue_info * cq , struct be_queue_info * eq , bool sol_evts , bool no_delay , int coalesce_wm ) ; 
/*--be_cmd_cq_create--*/
int be_cmd_mccq_create ( struct be_adapter * adapter , struct be_queue_info * mccq , struct be_queue_info * cq ) ; 
/*--be_cmd_mccq_create--*/
int be_cmd_txq_create ( struct be_adapter * adapter , struct be_queue_info * txq , struct be_queue_info * cq ) ; 
/*--be_cmd_txq_create--*/
int be_cmd_rxq_create ( struct be_adapter * adapter , struct be_queue_info * rxq , u16 cq_id , u16 frag_size , u16 max_frame_size , u32 if_id , u32 rss ) ; 
/*--be_cmd_rxq_create--*/
int be_cmd_q_destroy ( struct be_adapter * adapter , struct be_queue_info * q , int queue_type ) ; 
/*--be_cmd_q_destroy--*/
int be_cmd_if_create ( struct be_adapter * adapter , u32 cap_flags , u32 en_flags , u8 * mac , bool pmac_invalid , u32 * if_handle , u32 * pmac_id , u32 domain ) ; 
/*--be_cmd_if_create--*/
int be_cmd_if_destroy ( struct be_adapter * adapter , u32 interface_id ) ; 
/*--be_cmd_if_destroy--*/
int be_cmd_get_stats ( struct be_adapter * adapter , struct be_dma_mem * nonemb_cmd ) ; 
/*--be_cmd_get_stats--*/
int be_cmd_link_status_query ( struct be_adapter * adapter , bool * link_up , u8 * mac_speed , u16 * link_speed ) ; 
/*--be_cmd_link_status_query--*/
int be_cmd_get_fw_ver ( struct be_adapter * adapter , char * fw_ver ) ; 
/*--be_cmd_get_fw_ver--*/
int be_cmd_modify_eqd ( struct be_adapter * adapter , u32 eq_id , u32 eqd ) ; 
/*--be_cmd_modify_eqd--*/
int be_cmd_vlan_config ( struct be_adapter * adapter , u32 if_id , u16 * vtag_array , u32 num , bool untagged , bool promiscuous ) ; 
/*--be_cmd_vlan_config--*/
int be_cmd_promiscuous_config ( struct be_adapter * adapter , u8 port_num , bool en ) ; 
/*--be_cmd_promiscuous_config--*/
int be_cmd_multicast_set ( struct be_adapter * adapter , u32 if_id , struct net_device * netdev , struct be_dma_mem * mem ) ; 
/*--be_cmd_multicast_set--*/
int be_cmd_set_flow_control ( struct be_adapter * adapter , u32 tx_fc , u32 rx_fc ) ; 
/*--be_cmd_set_flow_control--*/
int be_cmd_get_flow_control ( struct be_adapter * adapter , u32 * tx_fc , u32 * rx_fc ) ; 
/*--be_cmd_get_flow_control--*/
int be_cmd_query_fw_cfg ( struct be_adapter * adapter , u32 * port_num , u32 * cap ) ; 
/*--be_cmd_query_fw_cfg--*/
int be_cmd_reset_function ( struct be_adapter * adapter ) ; 
/*--be_cmd_reset_function--*/
int be_cmd_set_beacon_state ( struct be_adapter * adapter , u8 port_num , u8 bcn , u8 sts , u8 state ) ; 
/*--be_cmd_set_beacon_state--*/
int be_cmd_get_beacon_state ( struct be_adapter * adapter , u8 port_num , u32 * state ) ; 
/*--be_cmd_get_beacon_state--*/
int be_cmd_read_port_type ( struct be_adapter * adapter , u32 port , u8 * connector ) ; 
/*--be_cmd_read_port_type--*/
int be_cmd_write_flashrom ( struct be_adapter * adapter , struct be_dma_mem * cmd , u32 flash_type , u32 flash_opcode , u32 buf_size ) ; 
/*--be_cmd_write_flashrom--*/
int be_cmd_get_flash_crc ( struct be_adapter * adapter , u8 * flashed_crc , int offset ) ; 
/*--be_cmd_get_flash_crc--*/
int be_cmd_enable_magic_wol ( struct be_adapter * adapter , u8 * mac , struct be_dma_mem * nonemb_cmd ) ; 
/*--be_cmd_enable_magic_wol--*/
int be_cmd_set_loopback ( struct be_adapter * adapter , u8 port_num , u8 loopback_type , u8 enable ) ; 
/*--be_cmd_set_loopback--*/
int be_cmd_loopback_test ( struct be_adapter * adapter , u32 port_num , u32 loopback_type , u32 pkt_size , u32 num_pkts , u64 pattern ) ; 
/*--be_cmd_loopback_test--*/
int be_cmd_ddr_dma_test ( struct be_adapter * adapter , u64 pattern , u32 byte_cnt , struct be_dma_mem * cmd ) ; 
/*--be_cmd_ddr_dma_test--*/
int be_cmd_get_seeprom_data ( struct be_adapter * adapter , struct be_dma_mem * nonemb_cmd ) ; 
/*--be_cmd_get_seeprom_data--*/
struct vlan_entry * bond_next_vlan ( struct bonding * bond , struct vlan_entry * curr ) ; 
/*--bond_next_vlan--*/
int bond_dev_queue_xmit ( struct bonding * bond , struct sk_buff * skb , struct net_device * slave_dev ) ; 
/*--bond_dev_queue_xmit--*/
void bond_change_active_slave ( struct bonding * bond , struct slave * new_active ) ; 
/*--bond_change_active_slave--*/
void bond_select_active_slave ( struct bonding * bond ) ; 
/*--bond_select_active_slave--*/
int bond_enslave ( struct net_device * bond_dev , struct net_device * slave_dev ) ; 
/*--bond_enslave--*/
int bond_release ( struct net_device * bond_dev , struct net_device * slave_dev ) ; 
/*--bond_release--*/
int bond_release_and_destroy ( struct net_device * bond_dev , struct net_device * slave_dev ) ; 
/*--bond_release_and_destroy--*/
void bond_mii_monitor ( struct work_struct * work ) ; 
/*--bond_mii_monitor--*/
void bond_loadbalance_arp_mon ( struct work_struct * work ) ; 
/*--bond_loadbalance_arp_mon--*/
void bond_activebackup_arp_mon ( struct work_struct * work ) ; 
/*--bond_activebackup_arp_mon--*/
void bond_register_arp ( struct bonding * bond ) ; 
/*--bond_register_arp--*/
void bond_unregister_arp ( struct bonding * bond ) ; 
/*--bond_unregister_arp--*/
void bond_set_mode_ops ( struct bonding * bond , int mode ) ; 
/*--bond_set_mode_ops--*/
int bond_parse_parm ( const char * buf , const struct bond_parm_tbl * tbl ) ; 
/*--bond_parse_parm--*/
int bond_create ( struct net * net , const char * name ) ; 
/*--bond_create--*/
void bond_3ad_initiate_agg_selection ( struct bonding * bond , int timeout ) ; 
/*--bond_3ad_initiate_agg_selection--*/
void bond_3ad_initialize ( struct bonding * bond , u16 tick_resolution , int lacp_fast ) ; 
/*--bond_3ad_initialize--*/
int bond_3ad_bind_slave ( struct slave * slave ) ; 
/*--bond_3ad_bind_slave--*/
void bond_3ad_unbind_slave ( struct slave * slave ) ; 
/*--bond_3ad_unbind_slave--*/
void bond_3ad_state_machine_handler ( struct work_struct * work ) ; 
/*--bond_3ad_state_machine_handler--*/
void bond_3ad_adapter_speed_changed ( struct slave * slave ) ; 
/*--bond_3ad_adapter_speed_changed--*/
void bond_3ad_adapter_duplex_changed ( struct slave * slave ) ; 
/*--bond_3ad_adapter_duplex_changed--*/
void bond_3ad_handle_link_change ( struct slave * slave , char link ) ; 
/*--bond_3ad_handle_link_change--*/
int bond_3ad_set_carrier ( struct bonding * bond ) ; 
/*--bond_3ad_set_carrier--*/
int bond_3ad_get_active_agg_info ( struct bonding * bond , struct ad_info * ad_info ) ; 
/*--bond_3ad_get_active_agg_info--*/
int bond_3ad_xmit_xor ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--bond_3ad_xmit_xor--*/
int bond_3ad_lacpdu_recv ( struct sk_buff * skb , struct net_device * dev , struct packet_type * ptype , struct net_device * orig_dev ) ; 
/*--bond_3ad_lacpdu_recv--*/
int bond_alb_initialize ( struct bonding * bond , int rlb_enabled ) ; 
/*--bond_alb_initialize--*/
void bond_alb_deinitialize ( struct bonding * bond ) ; 
/*--bond_alb_deinitialize--*/
int bond_alb_xmit ( struct sk_buff * skb , struct net_device * bond_dev ) ; 
/*--bond_alb_xmit--*/
void bond_alb_monitor ( struct work_struct * work ) ; 
/*--bond_alb_monitor--*/
int bond_alb_init_slave ( struct bonding * bond , struct slave * slave ) ; 
/*--bond_alb_init_slave--*/
void bond_alb_deinit_slave ( struct bonding * bond , struct slave * slave ) ; 
/*--bond_alb_deinit_slave--*/
void bond_alb_handle_link_change ( struct bonding * bond , struct slave * slave , char link ) ; 
/*--bond_alb_handle_link_change--*/
void bond_alb_handle_active_change ( struct bonding * bond , struct slave * new_slave ) ; 
/*--bond_alb_handle_active_change--*/
int bond_alb_set_mac_address ( struct net_device * bond_dev , void * addr ) ; 
/*--bond_alb_set_mac_address--*/
void bond_alb_clear_vlan ( struct bonding * bond , unsigned short vlan_id ) ; 
/*--bond_alb_clear_vlan--*/
int bond_create_slave_symlinks ( struct net_device * master , struct net_device * slave ) ; 
/*--bond_create_slave_symlinks--*/
void bond_destroy_slave_symlinks ( struct net_device * master , struct net_device * slave ) ; 
/*--bond_destroy_slave_symlinks--*/
int bond_create_sysfs ( void ) ; 
/*--bond_create_sysfs--*/
void bond_destroy_sysfs ( void ) ; 
/*--bond_destroy_sysfs--*/
void bond_prepare_sysfs_group ( struct bonding * bond ) ; 
/*--bond_prepare_sysfs_group--*/
void bond_send_unsolicited_na ( struct bonding * bond ) ; 
/*--bond_send_unsolicited_na--*/
void bond_register_ipv6_notifier ( void ) ; 
/*--bond_register_ipv6_notifier--*/
void bond_unregister_ipv6_notifier ( void ) ; 
/*--bond_unregister_ipv6_notifier--*/
irqreturn_t sja1000_interrupt ( int irq , void * dev_id ) ; 
/*--sja1000_interrupt--*/
struct net_device * alloc_sja1000dev ( int sizeof_priv ) ; 
/*--alloc_sja1000dev--*/
void free_sja1000dev ( struct net_device * dev ) ; 
/*--free_sja1000dev--*/
int register_sja1000dev ( struct net_device * dev ) ; 
/*--register_sja1000dev--*/
void unregister_sja1000dev ( struct net_device * dev ) ; 
/*--unregister_sja1000dev--*/
int can_get_bittiming ( struct net_device * dev , struct can_bittiming * bt ) ; 
/*--can_get_bittiming--*/
void can_put_echo_skb ( struct sk_buff * skb , struct net_device * dev , unsigned int idx ) ; 
/*--can_put_echo_skb--*/
void can_get_echo_skb ( struct net_device * dev , unsigned int idx ) ; 
/*--can_get_echo_skb--*/
void can_free_echo_skb ( struct net_device * dev , unsigned int idx ) ; 
/*--can_free_echo_skb--*/
void can_restart ( unsigned long data ) ; 
/*--can_restart--*/
int can_restart_now ( struct net_device * dev ) ; 
/*--can_restart_now--*/
void can_bus_off ( struct net_device * dev ) ; 
/*--can_bus_off--*/
struct sk_buff * alloc_can_skb ( struct net_device * dev , struct can_frame * * cf ) ; 
/*--alloc_can_skb--*/
struct sk_buff * alloc_can_err_skb ( struct net_device * dev , struct can_frame * * cf ) ; 
/*--alloc_can_err_skb--*/
struct net_device * alloc_candev ( int sizeof_priv , unsigned int echo_skb_max ) ; 
/*--alloc_candev--*/
void free_candev ( struct net_device * dev ) ; 
/*--free_candev--*/
int open_candev ( struct net_device * dev ) ; 
/*--open_candev--*/
void close_candev ( struct net_device * dev ) ; 
/*--close_candev--*/
int register_candev ( struct net_device * dev ) ; 
/*--register_candev--*/
void unregister_candev ( struct net_device * dev ) ; 
/*--unregister_candev--*/
void t1_link_negotiated ( struct adapter * adapter , int port_id , int link_stat , int speed , int duplex , int pause ) ; 
/*--t1_link_negotiated--*/
void t1_elmer0_ext_intr ( struct adapter * adapter ) ; 
/*--t1_elmer0_ext_intr--*/
void t1_fatal_err ( struct adapter * adapter ) ; 
/*--t1_fatal_err--*/
void t1_espi_intr_enable ( struct peespi * espi ) ; 
/*--t1_espi_intr_enable--*/
void t1_espi_intr_clear ( struct peespi * espi ) ; 
/*--t1_espi_intr_clear--*/
void t1_espi_intr_disable ( struct peespi * espi ) ; 
/*--t1_espi_intr_disable--*/
int t1_espi_intr_handler ( struct peespi * espi ) ; 
/*--t1_espi_intr_handler--*/
const struct espi_intr_counts * t1_espi_get_intr_counts ( struct peespi * espi ) ; 
/*--t1_espi_get_intr_counts--*/
int t1_espi_init ( struct peespi * espi , int mac_type , int nports ) ; 
/*--t1_espi_init--*/
void t1_espi_destroy ( struct peespi * espi ) ; 
/*--t1_espi_destroy--*/
struct peespi * t1_espi_create ( adapter_t * adapter ) ; 
/*--t1_espi_create--*/
u32 t1_espi_get_mon ( adapter_t * adapter , u32 addr , u8 wait ) ; 
/*--t1_espi_get_mon--*/
int t1_espi_get_mon_t204 ( adapter_t * adapter , u32 * valp , u8 wait ) ; 
/*--t1_espi_get_mon_t204--*/
void t1_tp_destroy ( struct petp * tp ) ; 
/*--t1_tp_destroy--*/
struct petp * __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) t1_tp_create ( adapter_t * adapter , struct tp_params * p ) ; 
/*--t1_tp_create--*/
void t1_tp_intr_enable ( struct petp * tp ) ; 
/*--t1_tp_intr_enable--*/
void t1_tp_intr_disable ( struct petp * tp ) ; 
/*--t1_tp_intr_disable--*/
void t1_tp_intr_clear ( struct petp * tp ) ; 
/*--t1_tp_intr_clear--*/
int t1_tp_intr_handler ( struct petp * tp ) ; 
/*--t1_tp_intr_handler--*/
void t1_tp_set_ip_checksum_offload ( struct petp * tp , int enable ) ; 
/*--t1_tp_set_ip_checksum_offload--*/
void t1_tp_set_udp_checksum_offload ( struct petp * tp , int enable ) ; 
/*--t1_tp_set_udp_checksum_offload--*/
void t1_tp_set_tcp_checksum_offload ( struct petp * tp , int enable ) ; 
/*--t1_tp_set_tcp_checksum_offload--*/
int t1_tp_reset ( struct petp * tp , struct tp_params * p , unsigned int tp_clk ) ; 
/*--t1_tp_reset--*/
unsigned int t1_sched_update_parms ( struct sge * sge , unsigned int port , unsigned int mtu , unsigned int speed ) ; 
/*--t1_sched_update_parms--*/
void t1_set_vlan_accel ( struct adapter * adapter , int on_off ) ; 
/*--t1_set_vlan_accel--*/
void t1_sge_destroy ( struct sge * sge ) ; 
/*--t1_sge_destroy--*/
void t1_sge_intr_disable ( struct sge * sge ) ; 
/*--t1_sge_intr_disable--*/
void t1_sge_intr_enable ( struct sge * sge ) ; 
/*--t1_sge_intr_enable--*/
void t1_sge_intr_clear ( struct sge * sge ) ; 
/*--t1_sge_intr_clear--*/
int t1_sge_intr_error_handler ( struct sge * sge ) ; 
/*--t1_sge_intr_error_handler--*/
const struct sge_intr_counts * t1_sge_get_intr_counts ( const struct sge * sge ) ; 
/*--t1_sge_get_intr_counts--*/
void t1_sge_get_port_stats ( const struct sge * sge , int port , struct sge_port_stats * ss ) ; 
/*--t1_sge_get_port_stats--*/
int t1_poll ( struct napi_struct * napi , int budget ) ; 
/*--t1_poll--*/
irqreturn_t t1_interrupt ( int irq , void * data ) ; 
/*--t1_interrupt--*/
netdev_tx_t t1_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--t1_start_xmit--*/
int t1_sge_set_coalesce_params ( struct sge * sge , struct sge_params * p ) ; 
/*--t1_sge_set_coalesce_params--*/
int t1_sge_configure ( struct sge * sge , struct sge_params * p ) ; 
/*--t1_sge_configure--*/
void t1_sge_stop ( struct sge * sge ) ; 
/*--t1_sge_stop--*/
void t1_sge_start ( struct sge * sge ) ; 
/*--t1_sge_start--*/
struct sge * __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) t1_sge_create ( struct adapter * adapter , struct sge_params * p ) ; 
/*--t1_sge_create--*/
int __t1_tpi_write ( adapter_t * adapter , u32 addr , u32 value ) ; 
/*--__t1_tpi_write--*/
int t1_tpi_write ( adapter_t * adapter , u32 addr , u32 value ) ; 
/*--t1_tpi_write--*/
int __t1_tpi_read ( adapter_t * adapter , u32 addr , u32 * valp ) ; 
/*--__t1_tpi_read--*/
int t1_tpi_read ( adapter_t * adapter , u32 addr , u32 * valp ) ; 
/*--t1_tpi_read--*/
void t1_link_changed ( adapter_t * adapter , int port_id ) ; 
/*--t1_link_changed--*/
const struct board_info * t1_get_board_info ( unsigned int board_id ) ; 
/*--t1_get_board_info--*/
int t1_seeprom_read ( adapter_t * adapter , u32 addr , __le32 * data ) ; 
/*--t1_seeprom_read--*/
int t1_link_start ( struct cphy * phy , struct cmac * mac , struct link_config * lc ) ; 
/*--t1_link_start--*/
int t1_elmer0_ext_intr_handler ( adapter_t * adapter ) ; 
/*--t1_elmer0_ext_intr_handler--*/
void t1_interrupts_enable ( adapter_t * adapter ) ; 
/*--t1_interrupts_enable--*/
void t1_interrupts_disable ( adapter_t * adapter ) ; 
/*--t1_interrupts_disable--*/
void t1_interrupts_clear ( adapter_t * adapter ) ; 
/*--t1_interrupts_clear--*/
int t1_slow_intr_handler ( adapter_t * adapter ) ; 
/*--t1_slow_intr_handler--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) t1_get_board_rev ( adapter_t * adapter , const struct board_info * bi , struct adapter_params * p ) ; 
/*--t1_get_board_rev--*/
int t1_init_hw_modules ( adapter_t * adapter ) ; 
/*--t1_init_hw_modules--*/
void t1_free_sw_modules ( adapter_t * adapter ) ; 
/*--t1_free_sw_modules--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) t1_init_sw_modules ( adapter_t * adapter , const struct board_info * bi ) ; 
/*--t1_init_sw_modules--*/
void t3_os_link_fault ( struct adapter * adap , int port_id , int state ) ; 
/*--t3_os_link_fault--*/
void t3_os_link_changed ( struct adapter * adapter , int port_id , int link_stat , int speed , int duplex , int pause ) ; 
/*--t3_os_link_changed--*/
void t3_os_phymod_changed ( struct adapter * adap , int port_id ) ; 
/*--t3_os_phymod_changed--*/
int t3_get_edc_fw ( struct cphy * phy , int edc_idx , int size ) ; 
/*--t3_get_edc_fw--*/
void t3_os_ext_intr_handler ( struct adapter * adapter ) ; 
/*--t3_os_ext_intr_handler--*/
void t3_os_link_fault_handler ( struct adapter * adapter , int port_id ) ; 
/*--t3_os_link_fault_handler--*/
void t3_fatal_err ( struct adapter * adapter ) ; 
/*--t3_fatal_err--*/
int t3_ael1002_phy_prep ( struct cphy * phy , struct adapter * adapter , int phy_addr , const struct mdio_ops * mdio_ops ) ; 
/*--t3_ael1002_phy_prep--*/
int t3_ael1006_phy_prep ( struct cphy * phy , struct adapter * adapter , int phy_addr , const struct mdio_ops * mdio_ops ) ; 
/*--t3_ael1006_phy_prep--*/
int t3_ael2005_phy_prep ( struct cphy * phy , struct adapter * adapter , int phy_addr , const struct mdio_ops * mdio_ops ) ; 
/*--t3_ael2005_phy_prep--*/
int t3_ael2020_phy_prep ( struct cphy * phy , struct adapter * adapter , int phy_addr , const struct mdio_ops * mdio_ops ) ; 
/*--t3_ael2020_phy_prep--*/
int t3_qt2045_phy_prep ( struct cphy * phy , struct adapter * adapter , int phy_addr , const struct mdio_ops * mdio_ops ) ; 
/*--t3_qt2045_phy_prep--*/
int t3_xaui_direct_phy_prep ( struct cphy * phy , struct adapter * adapter , int phy_addr , const struct mdio_ops * mdio_ops ) ; 
/*--t3_xaui_direct_phy_prep--*/
int t3_vsc8211_phy_prep ( struct cphy * phy , struct adapter * adapter , int phy_addr , const struct mdio_ops * mdio_ops ) ; 
/*--t3_vsc8211_phy_prep--*/
int t3_wait_op_done_val ( struct adapter * adapter , int reg , u32 mask , int polarity , int attempts , int delay , u32 * valp ) ; 
/*--t3_wait_op_done_val--*/
void t3_write_regs ( struct adapter * adapter , const struct addr_val_pair * p , int n , unsigned int offset ) ; 
/*--t3_write_regs--*/
void t3_set_reg_field ( struct adapter * adapter , unsigned int addr , u32 mask , u32 val ) ; 
/*--t3_set_reg_field--*/
int t3_mc7_bd_read ( struct mc7 * mc7 , unsigned int start , unsigned int n , u64 * buf ) ; 
/*--t3_mc7_bd_read--*/
int t3_mdio_change_bits ( struct cphy * phy , int mmd , int reg , unsigned int clear , unsigned int set ) ; 
/*--t3_mdio_change_bits--*/
int t3_phy_reset ( struct cphy * phy , int mmd , int wait ) ; 
/*--t3_phy_reset--*/
int t3_phy_advertise ( struct cphy * phy , unsigned int advert ) ; 
/*--t3_phy_advertise--*/
int t3_phy_advertise_fiber ( struct cphy * phy , unsigned int advert ) ; 
/*--t3_phy_advertise_fiber--*/
int t3_set_phy_speed_duplex ( struct cphy * phy , int speed , int duplex ) ; 
/*--t3_set_phy_speed_duplex--*/
int t3_phy_lasi_intr_enable ( struct cphy * phy ) ; 
/*--t3_phy_lasi_intr_enable--*/
int t3_phy_lasi_intr_disable ( struct cphy * phy ) ; 
/*--t3_phy_lasi_intr_disable--*/
int t3_phy_lasi_intr_clear ( struct cphy * phy ) ; 
/*--t3_phy_lasi_intr_clear--*/
int t3_phy_lasi_intr_handler ( struct cphy * phy ) ; 
/*--t3_phy_lasi_intr_handler--*/
const struct adapter_info * t3_get_adapter_info ( unsigned int id ) ; 
/*--t3_get_adapter_info--*/
int t3_seeprom_read ( struct adapter * adapter , u32 addr , __le32 * data ) ; 
/*--t3_seeprom_read--*/
int t3_seeprom_write ( struct adapter * adapter , u32 addr , __le32 data ) ; 
/*--t3_seeprom_write--*/
int t3_seeprom_wp ( struct adapter * adapter , int enable ) ; 
/*--t3_seeprom_wp--*/
int t3_read_flash ( struct adapter * adapter , unsigned int addr , unsigned int nwords , u32 * data , int byte_oriented ) ; 
/*--t3_read_flash--*/
int t3_get_tp_version ( struct adapter * adapter , u32 * vers ) ; 
/*--t3_get_tp_version--*/
int t3_check_tpsram_version ( struct adapter * adapter ) ; 
/*--t3_check_tpsram_version--*/
int t3_check_tpsram ( struct adapter * adapter , const u8 * tp_sram , unsigned int size ) ; 
/*--t3_check_tpsram--*/
int t3_get_fw_version ( struct adapter * adapter , u32 * vers ) ; 
/*--t3_get_fw_version--*/
int t3_check_fw_version ( struct adapter * adapter ) ; 
/*--t3_check_fw_version--*/
int t3_load_fw ( struct adapter * adapter , const u8 * fw_data , unsigned int size ) ; 
/*--t3_load_fw--*/
int t3_cim_ctl_blk_read ( struct adapter * adap , unsigned int addr , unsigned int n , unsigned int * valp ) ; 
/*--t3_cim_ctl_blk_read--*/
void t3_link_changed ( struct adapter * adapter , int port_id ) ; 
/*--t3_link_changed--*/
void t3_link_fault ( struct adapter * adapter , int port_id ) ; 
/*--t3_link_fault--*/
int t3_link_start ( struct cphy * phy , struct cmac * mac , struct link_config * lc ) ; 
/*--t3_link_start--*/
void t3_set_vlan_accel ( struct adapter * adapter , unsigned int ports , int on ) ; 
/*--t3_set_vlan_accel--*/
int t3_phy_intr_handler ( struct adapter * adapter ) ; 
/*--t3_phy_intr_handler--*/
int t3_slow_intr_handler ( struct adapter * adapter ) ; 
/*--t3_slow_intr_handler--*/
void t3_intr_enable ( struct adapter * adapter ) ; 
/*--t3_intr_enable--*/
void t3_intr_disable ( struct adapter * adapter ) ; 
/*--t3_intr_disable--*/
void t3_intr_clear ( struct adapter * adapter ) ; 
/*--t3_intr_clear--*/
void t3_xgm_intr_enable ( struct adapter * adapter , int idx ) ; 
/*--t3_xgm_intr_enable--*/
void t3_xgm_intr_disable ( struct adapter * adapter , int idx ) ; 
/*--t3_xgm_intr_disable--*/
void t3_port_intr_enable ( struct adapter * adapter , int idx ) ; 
/*--t3_port_intr_enable--*/
void t3_port_intr_disable ( struct adapter * adapter , int idx ) ; 
/*--t3_port_intr_disable--*/
void t3_port_intr_clear ( struct adapter * adapter , int idx ) ; 
/*--t3_port_intr_clear--*/
int t3_sge_init_ecntxt ( struct adapter * adapter , unsigned int id , int gts_enable , enum sge_context_type type , int respq , u64 base_addr , unsigned int size , unsigned int token , int gen , unsigned int cidx ) ; 
/*--t3_sge_init_ecntxt--*/
int t3_sge_init_flcntxt ( struct adapter * adapter , unsigned int id , int gts_enable , u64 base_addr , unsigned int size , unsigned int bsize , unsigned int cong_thres , int gen , unsigned int cidx ) ; 
/*--t3_sge_init_flcntxt--*/
int t3_sge_init_rspcntxt ( struct adapter * adapter , unsigned int id , int irq_vec_idx , u64 base_addr , unsigned int size , unsigned int fl_thres , int gen , unsigned int cidx ) ; 
/*--t3_sge_init_rspcntxt--*/
int t3_sge_init_cqcntxt ( struct adapter * adapter , unsigned int id , u64 base_addr , unsigned int size , int rspq , int ovfl_mode , unsigned int credits , unsigned int credit_thres ) ; 
/*--t3_sge_init_cqcntxt--*/
int t3_sge_enable_ecntxt ( struct adapter * adapter , unsigned int id , int enable ) ; 
/*--t3_sge_enable_ecntxt--*/
int t3_sge_disable_fl ( struct adapter * adapter , unsigned int id ) ; 
/*--t3_sge_disable_fl--*/
int t3_sge_disable_rspcntxt ( struct adapter * adapter , unsigned int id ) ; 
/*--t3_sge_disable_rspcntxt--*/
int t3_sge_disable_cqcntxt ( struct adapter * adapter , unsigned int id ) ; 
/*--t3_sge_disable_cqcntxt--*/
int t3_sge_cqcntxt_op ( struct adapter * adapter , unsigned int id , unsigned int op , unsigned int credits ) ; 
/*--t3_sge_cqcntxt_op--*/
int t3_sge_read_ecntxt ( struct adapter * adapter , unsigned int id , u32 data [ 4 ] ) ; 
/*--t3_sge_read_ecntxt--*/
int t3_sge_read_cq ( struct adapter * adapter , unsigned int id , u32 data [ 4 ] ) ; 
/*--t3_sge_read_cq--*/
int t3_sge_read_fl ( struct adapter * adapter , unsigned int id , u32 data [ 4 ] ) ; 
/*--t3_sge_read_fl--*/
int t3_sge_read_rspq ( struct adapter * adapter , unsigned int id , u32 data [ 4 ] ) ; 
/*--t3_sge_read_rspq--*/
void t3_config_rss ( struct adapter * adapter , unsigned int rss_config , const u8 * cpus , const u16 * rspq ) ; 
/*--t3_config_rss--*/
int t3_read_rss ( struct adapter * adapter , u8 * lkup , u16 * map ) ; 
/*--t3_read_rss--*/
void t3_tp_set_offload_mode ( struct adapter * adap , int enable ) ; 
/*--t3_tp_set_offload_mode--*/
int t3_tp_set_coalescing_size ( struct adapter * adap , unsigned int size , int psh ) ; 
/*--t3_tp_set_coalescing_size--*/
void t3_tp_set_max_rxsize ( struct adapter * adap , unsigned int size ) ; 
/*--t3_tp_set_max_rxsize--*/
void t3_load_mtus ( struct adapter * adap , unsigned short mtus [ NMTUS ] , unsigned short alpha [ NCCTRL_WIN ] , unsigned short beta [ NCCTRL_WIN ] , unsigned short mtu_cap ) ; 
/*--t3_load_mtus--*/
void t3_read_hw_mtus ( struct adapter * adap , unsigned short mtus [ NMTUS ] ) ; 
/*--t3_read_hw_mtus--*/
void t3_get_cong_cntl_tab ( struct adapter * adap , unsigned short incr [ NMTUS ] [ NCCTRL_WIN ] ) ; 
/*--t3_get_cong_cntl_tab--*/
void t3_tp_get_mib_stats ( struct adapter * adap , struct tp_mib_stats * tps ) ; 
/*--t3_tp_get_mib_stats--*/
int t3_set_proto_sram ( struct adapter * adap , const u8 * data ) ; 
/*--t3_set_proto_sram--*/
void t3_config_trace_filter ( struct adapter * adapter , const struct trace_params * tp , int filter_index , int invert , int enable ) ; 
/*--t3_config_trace_filter--*/
int t3_config_sched ( struct adapter * adap , unsigned int kbps , int sched ) ; 
/*--t3_config_sched--*/
int t3_mps_set_active_ports ( struct adapter * adap , unsigned int port_mask ) ; 
/*--t3_mps_set_active_ports--*/
int t3_init_hw ( struct adapter * adapter , u32 fw_params ) ; 
/*--t3_init_hw--*/
void mac_prep ( struct cmac * mac , struct adapter * adapter , int index ) ; 
/*--mac_prep--*/
void early_hw_init ( struct adapter * adapter , const struct adapter_info * ai ) ; 
/*--early_hw_init--*/
int t3_reset_adapter ( struct adapter * adapter ) ; 
/*--t3_reset_adapter--*/
int t3_prep_adapter ( struct adapter * adapter , const struct adapter_info * ai , int reset ) ; 
/*--t3_prep_adapter--*/
void t3_led_ready ( struct adapter * adapter ) ; 
/*--t3_led_ready--*/
int t3_replay_prep_adapter ( struct adapter * adapter ) ; 
/*--t3_replay_prep_adapter--*/
int t3_mc5_init ( struct mc5 * mc5 , unsigned int nservers , unsigned int nfilters , unsigned int nroutes ) ; 
/*--t3_mc5_init--*/
int t3_read_mc5_range ( const struct mc5 * mc5 , unsigned int start , unsigned int n , u32 * buf ) ; 
/*--t3_read_mc5_range--*/
void t3_mc5_intr_handler ( struct mc5 * mc5 ) ; 
/*--t3_mc5_intr_handler--*/
void t3_mc5_prep ( struct adapter * adapter , struct mc5 * mc5 , int mode ) ; 
/*--t3_mc5_prep--*/
void t3b_pcs_reset ( struct cmac * mac ) ; 
/*--t3b_pcs_reset--*/
int t3_mac_reset ( struct cmac * mac ) ; 
/*--t3_mac_reset--*/
int t3_mac_set_address ( struct cmac * mac , unsigned int idx , u8 addr [ 6 ] ) ; 
/*--t3_mac_set_address--*/
int t3_mac_set_num_ucast ( struct cmac * mac , int n ) ; 
/*--t3_mac_set_num_ucast--*/
void t3_mac_disable_exact_filters ( struct cmac * mac ) ; 
/*--t3_mac_disable_exact_filters--*/
void t3_mac_enable_exact_filters ( struct cmac * mac ) ; 
/*--t3_mac_enable_exact_filters--*/
int t3_mac_set_rx_mode ( struct cmac * mac , struct net_device * dev ) ; 
/*--t3_mac_set_rx_mode--*/
int t3_mac_set_mtu ( struct cmac * mac , unsigned int mtu ) ; 
/*--t3_mac_set_mtu--*/
int t3_mac_set_speed_duplex_fc ( struct cmac * mac , int speed , int duplex , int fc ) ; 
/*--t3_mac_set_speed_duplex_fc--*/
int t3_mac_enable ( struct cmac * mac , int which ) ; 
/*--t3_mac_enable--*/
int t3_mac_disable ( struct cmac * mac , int which ) ; 
/*--t3_mac_disable--*/
int t3b2_mac_watchdog_task ( struct cmac * mac ) ; 
/*--t3b2_mac_watchdog_task--*/
const struct mac_stats * t3_mac_update_stats ( struct cmac * mac ) ; 
/*--t3_mac_update_stats--*/
netdev_tx_t t3_eth_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--t3_eth_xmit--*/
int t3_mgmt_tx ( struct adapter * adap , struct sk_buff * skb ) ; 
/*--t3_mgmt_tx--*/
int t3_offload_tx ( struct t3cdev * tdev , struct sk_buff * skb ) ; 
/*--t3_offload_tx--*/
irqreturn_t t3_sge_intr_msix ( int irq , void * cookie ) ; 
/*--t3_sge_intr_msix--*/
irq_handler_t t3_intr_handler ( struct adapter * adap , int polling ) ; 
/*--t3_intr_handler--*/
void t3_sge_err_intr_handler ( struct adapter * adapter ) ; 
/*--t3_sge_err_intr_handler--*/
void t3_update_qset_coalesce ( struct sge_qset * qs , const struct qset_params * p ) ; 
/*--t3_update_qset_coalesce--*/
int t3_sge_alloc_qset ( struct adapter * adapter , unsigned int id , int nports , int irq_vec_idx , const struct qset_params * p , int ntxq , struct net_device * dev , struct netdev_queue * netdevq ) ; 
/*--t3_sge_alloc_qset--*/
void t3_start_sge_timers ( struct adapter * adap ) ; 
/*--t3_start_sge_timers--*/
void t3_stop_sge_timers ( struct adapter * adap ) ; 
/*--t3_stop_sge_timers--*/
void t3_free_sge_resources ( struct adapter * adap ) ; 
/*--t3_free_sge_resources--*/
void t3_sge_start ( struct adapter * adap ) ; 
/*--t3_sge_start--*/
void t3_sge_stop ( struct adapter * adap ) ; 
/*--t3_sge_stop--*/
void t3_sge_init ( struct adapter * adap , struct sge_params * p ) ; 
/*--t3_sge_init--*/
void t3_sge_prep ( struct adapter * adap , struct sge_params * p ) ; 
/*--t3_sge_prep--*/
int t3_get_desc ( const struct sge_qset * qs , unsigned int qnum , unsigned int idx , unsigned char * data ) ; 
/*--t3_get_desc--*/
int t3_l2t_send_slow ( struct t3cdev * dev , struct sk_buff * skb , struct l2t_entry * e ) ; 
/*--t3_l2t_send_slow--*/
void t3_l2t_send_event ( struct t3cdev * dev , struct l2t_entry * e ) ; 
/*--t3_l2t_send_event--*/
void t3_l2e_free ( struct l2t_data * d , struct l2t_entry * e ) ; 
/*--t3_l2e_free--*/
struct l2t_entry * t3_l2t_get ( struct t3cdev * cdev , struct neighbour * neigh , struct net_device * dev ) ; 
/*--t3_l2t_get--*/
void t3_l2t_update ( struct t3cdev * dev , struct neighbour * neigh ) ; 
/*--t3_l2t_update--*/
struct l2t_data * t3_init_l2t ( unsigned int l2t_capacity ) ; 
/*--t3_init_l2t--*/
void t3_free_l2t ( struct l2t_data * d ) ; 
/*--t3_free_l2t--*/
void cxgb3_register_client ( struct cxgb3_client * client ) ; 
/*--cxgb3_register_client--*/
void cxgb3_unregister_client ( struct cxgb3_client * client ) ; 
/*--cxgb3_unregister_client--*/
void cxgb3_add_clients ( struct t3cdev * tdev ) ; 
/*--cxgb3_add_clients--*/
void cxgb3_remove_clients ( struct t3cdev * tdev ) ; 
/*--cxgb3_remove_clients--*/
void cxgb3_event_notify ( struct t3cdev * tdev , u32 event , u32 port ) ; 
/*--cxgb3_event_notify--*/
void cxgb3_set_dummy_ops ( struct t3cdev * dev ) ; 
/*--cxgb3_set_dummy_ops--*/
void * cxgb3_free_atid ( struct t3cdev * tdev , int atid ) ; 
/*--cxgb3_free_atid--*/
void cxgb3_free_stid ( struct t3cdev * tdev , int stid ) ; 
/*--cxgb3_free_stid--*/
void cxgb3_insert_tid ( struct t3cdev * tdev , struct cxgb3_client * client , void * ctx , unsigned int tid ) ; 
/*--cxgb3_insert_tid--*/
void cxgb3_queue_tid_release ( struct t3cdev * tdev , unsigned int tid ) ; 
/*--cxgb3_queue_tid_release--*/
void cxgb3_remove_tid ( struct t3cdev * tdev , void * ctx , unsigned int tid ) ; 
/*--cxgb3_remove_tid--*/
int cxgb3_alloc_atid ( struct t3cdev * tdev , struct cxgb3_client * client , void * ctx ) ; 
/*--cxgb3_alloc_atid--*/
int cxgb3_alloc_stid ( struct t3cdev * tdev , struct cxgb3_client * client , void * ctx ) ; 
/*--cxgb3_alloc_stid--*/
struct t3cdev * dev2t3cdev ( struct net_device * dev ) ; 
/*--dev2t3cdev--*/
void t3_register_cpl_handler ( unsigned int opcode , cpl_handler_func h ) ; 
/*--t3_register_cpl_handler--*/
int process_rx ( struct t3cdev * dev , struct sk_buff * * skbs , int n ) ; 
/*--process_rx--*/
int cxgb3_ofld_send ( struct t3cdev * dev , struct sk_buff * skb ) ; 
/*--cxgb3_ofld_send--*/
void cxgb_neigh_update ( struct neighbour * neigh ) ; 
/*--cxgb_neigh_update--*/
void cxgb_redirect ( struct dst_entry * old , struct dst_entry * new ) ; 
/*--cxgb_redirect--*/
void * cxgb_alloc_mem ( unsigned long size ) ; 
/*--cxgb_alloc_mem--*/
void cxgb_free_mem ( void * addr ) ; 
/*--cxgb_free_mem--*/
int cxgb3_offload_activate ( struct adapter * adapter ) ; 
/*--cxgb3_offload_activate--*/
void cxgb3_offload_deactivate ( struct adapter * adapter ) ; 
/*--cxgb3_offload_deactivate--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) cxgb3_adapter_ofld ( struct adapter * adapter ) ; 
/*--cxgb3_adapter_ofld--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) cxgb3_adapter_unofld ( struct adapter * adapter ) ; 
/*--cxgb3_adapter_unofld--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) cxgb3_offload_init ( void ) ; 
/*--cxgb3_offload_init--*/
int t3_aq100x_phy_prep ( struct cphy * phy , struct adapter * adapter , int phy_addr , const struct mdio_ops * mdio_ops ) ; 
/*--t3_aq100x_phy_prep--*/
struct net_device * e1000_get_hw_dev ( struct e1000_hw * hw ) ; 
/*--e1000_get_hw_dev--*/
int e1000_up ( struct e1000_adapter * adapter ) ; 
/*--e1000_up--*/
void e1000_power_up_phy ( struct e1000_adapter * adapter ) ; 
/*--e1000_power_up_phy--*/
void e1000_down ( struct e1000_adapter * adapter ) ; 
/*--e1000_down--*/
void e1000_reinit_locked ( struct e1000_adapter * adapter ) ; 
/*--e1000_reinit_locked--*/
void e1000_reset ( struct e1000_adapter * adapter ) ; 
/*--e1000_reset--*/
int e1000_setup_all_tx_resources ( struct e1000_adapter * adapter ) ; 
/*--e1000_setup_all_tx_resources--*/
int e1000_setup_all_rx_resources ( struct e1000_adapter * adapter ) ; 
/*--e1000_setup_all_rx_resources--*/
void e1000_free_all_tx_resources ( struct e1000_adapter * adapter ) ; 
/*--e1000_free_all_tx_resources--*/
void e1000_free_all_rx_resources ( struct e1000_adapter * adapter ) ; 
/*--e1000_free_all_rx_resources--*/
bool e1000_has_link ( struct e1000_adapter * adapter ) ; 
/*--e1000_has_link--*/
void e1000_update_stats ( struct e1000_adapter * adapter ) ; 
/*--e1000_update_stats--*/
void e1000_pci_set_mwi ( struct e1000_hw * hw ) ; 
/*--e1000_pci_set_mwi--*/
void e1000_pci_clear_mwi ( struct e1000_hw * hw ) ; 
/*--e1000_pci_clear_mwi--*/
int e1000_pcix_get_mmrbc ( struct e1000_hw * hw ) ; 
/*--e1000_pcix_get_mmrbc--*/
void e1000_pcix_set_mmrbc ( struct e1000_hw * hw , int mmrbc ) ; 
/*--e1000_pcix_set_mmrbc--*/
void e1000_io_write ( struct e1000_hw * hw , unsigned long port , u32 value ) ; 
/*--e1000_io_write--*/
int e1000_set_spd_dplx ( struct e1000_adapter * adapter , u16 spddplx ) ; 
/*--e1000_set_spd_dplx--*/
s32 e1000_set_mac_type ( struct e1000_hw * hw ) ; 
/*--e1000_set_mac_type--*/
void e1000_set_media_type ( struct e1000_hw * hw ) ; 
/*--e1000_set_media_type--*/
s32 e1000_reset_hw ( struct e1000_hw * hw ) ; 
/*--e1000_reset_hw--*/
s32 e1000_init_hw ( struct e1000_hw * hw ) ; 
/*--e1000_init_hw--*/
s32 e1000_setup_link ( struct e1000_hw * hw ) ; 
/*--e1000_setup_link--*/
s32 e1000_phy_setup_autoneg ( struct e1000_hw * hw ) ; 
/*--e1000_phy_setup_autoneg--*/
void e1000_config_collision_dist ( struct e1000_hw * hw ) ; 
/*--e1000_config_collision_dist--*/
s32 e1000_force_mac_fc ( struct e1000_hw * hw ) ; 
/*--e1000_force_mac_fc--*/
s32 e1000_check_for_link ( struct e1000_hw * hw ) ; 
/*--e1000_check_for_link--*/
s32 e1000_get_speed_and_duplex ( struct e1000_hw * hw , u16 * speed , u16 * duplex ) ; 
/*--e1000_get_speed_and_duplex--*/
s32 e1000_read_phy_reg ( struct e1000_hw * hw , u32 reg_addr , u16 * phy_data ) ; 
/*--e1000_read_phy_reg--*/
s32 e1000_write_phy_reg ( struct e1000_hw * hw , u32 reg_addr , u16 phy_data ) ; 
/*--e1000_write_phy_reg--*/
s32 e1000_phy_hw_reset ( struct e1000_hw * hw ) ; 
/*--e1000_phy_hw_reset--*/
s32 e1000_phy_reset ( struct e1000_hw * hw ) ; 
/*--e1000_phy_reset--*/
s32 e1000_phy_get_info ( struct e1000_hw * hw , struct e1000_phy_info * phy_info ) ; 
/*--e1000_phy_get_info--*/
s32 e1000_validate_mdi_setting ( struct e1000_hw * hw ) ; 
/*--e1000_validate_mdi_setting--*/
s32 e1000_init_eeprom_params ( struct e1000_hw * hw ) ; 
/*--e1000_init_eeprom_params--*/
s32 e1000_read_eeprom ( struct e1000_hw * hw , u16 offset , u16 words , u16 * data ) ; 
/*--e1000_read_eeprom--*/
s32 e1000_validate_eeprom_checksum ( struct e1000_hw * hw ) ; 
/*--e1000_validate_eeprom_checksum--*/
s32 e1000_update_eeprom_checksum ( struct e1000_hw * hw ) ; 
/*--e1000_update_eeprom_checksum--*/
s32 e1000_write_eeprom ( struct e1000_hw * hw , u16 offset , u16 words , u16 * data ) ; 
/*--e1000_write_eeprom--*/
s32 e1000_read_mac_addr ( struct e1000_hw * hw ) ; 
/*--e1000_read_mac_addr--*/
u32 e1000_hash_mc_addr ( struct e1000_hw * hw , u8 * mc_addr ) ; 
/*--e1000_hash_mc_addr--*/
void e1000_rar_set ( struct e1000_hw * hw , u8 * addr , u32 index ) ; 
/*--e1000_rar_set--*/
void e1000_write_vfta ( struct e1000_hw * hw , u32 offset , u32 value ) ; 
/*--e1000_write_vfta--*/
s32 e1000_setup_led ( struct e1000_hw * hw ) ; 
/*--e1000_setup_led--*/
s32 e1000_cleanup_led ( struct e1000_hw * hw ) ; 
/*--e1000_cleanup_led--*/
s32 e1000_led_on ( struct e1000_hw * hw ) ; 
/*--e1000_led_on--*/
s32 e1000_led_off ( struct e1000_hw * hw ) ; 
/*--e1000_led_off--*/
void e1000_reset_adaptive ( struct e1000_hw * hw ) ; 
/*--e1000_reset_adaptive--*/
void e1000_update_adaptive ( struct e1000_hw * hw ) ; 
/*--e1000_update_adaptive--*/
void e1000_tbi_adjust_stats ( struct e1000_hw * hw , struct e1000_hw_stats * stats , u32 frame_len , u8 * mac_addr ) ; 
/*--e1000_tbi_adjust_stats--*/
void e1000_get_bus_info ( struct e1000_hw * hw ) ; 
/*--e1000_get_bus_info--*/
u32 e1000_enable_mng_pass_thru ( struct e1000_hw * hw ) ; 
/*--e1000_enable_mng_pass_thru--*/
void e1000_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--e1000_set_ethtool_ops--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) e1000_check_options ( struct e1000_adapter * adapter ) ; 
/*--e1000_check_options--*/
bool e1000e_get_laa_state_82571 ( struct e1000_hw * hw ) ; 
/*--e1000e_get_laa_state_82571--*/
void e1000e_set_laa_state_82571 ( struct e1000_hw * hw , bool state ) ; 
/*--e1000e_set_laa_state_82571--*/
s32 e1000_configure_k1_ich8lan ( struct e1000_hw * hw , bool k1_enable ) ; 
/*--e1000_configure_k1_ich8lan--*/
void e1000e_write_protect_nvm_ich8lan ( struct e1000_hw * hw ) ; 
/*--e1000e_write_protect_nvm_ich8lan--*/
void e1000e_set_kmrn_lock_loss_workaround_ich8lan ( struct e1000_hw * hw , bool state ) ; 
/*--e1000e_set_kmrn_lock_loss_workaround_ich8lan--*/
void e1000e_igp3_phy_powerdown_workaround_ich8lan ( struct e1000_hw * hw ) ; 
/*--e1000e_igp3_phy_powerdown_workaround_ich8lan--*/
void e1000e_gig_downshift_workaround_ich8lan ( struct e1000_hw * hw ) ; 
/*--e1000e_gig_downshift_workaround_ich8lan--*/
void e1000e_disable_gig_wol_ich8lan ( struct e1000_hw * hw ) ; 
/*--e1000e_disable_gig_wol_ich8lan--*/
s32 e1000e_get_bus_info_pcie ( struct e1000_hw * hw ) ; 
/*--e1000e_get_bus_info_pcie--*/
void e1000_set_lan_id_multi_port_pcie ( struct e1000_hw * hw ) ; 
/*--e1000_set_lan_id_multi_port_pcie--*/
void e1000_set_lan_id_single_port ( struct e1000_hw * hw ) ; 
/*--e1000_set_lan_id_single_port--*/
void e1000_clear_vfta_generic ( struct e1000_hw * hw ) ; 
/*--e1000_clear_vfta_generic--*/
void e1000_write_vfta_generic ( struct e1000_hw * hw , u32 offset , u32 value ) ; 
/*--e1000_write_vfta_generic--*/
void e1000e_init_rx_addrs ( struct e1000_hw * hw , u16 rar_count ) ; 
/*--e1000e_init_rx_addrs--*/
s32 e1000_check_alt_mac_addr_generic ( struct e1000_hw * hw ) ; 
/*--e1000_check_alt_mac_addr_generic--*/
void e1000e_rar_set ( struct e1000_hw * hw , u8 * addr , u32 index ) ; 
/*--e1000e_rar_set--*/
void e1000e_update_mc_addr_list_generic ( struct e1000_hw * hw , u8 * mc_addr_list , u32 mc_addr_count ) ; 
/*--e1000e_update_mc_addr_list_generic--*/
void e1000e_clear_hw_cntrs_base ( struct e1000_hw * hw ) ; 
/*--e1000e_clear_hw_cntrs_base--*/
s32 e1000e_check_for_copper_link ( struct e1000_hw * hw ) ; 
/*--e1000e_check_for_copper_link--*/
s32 e1000e_check_for_fiber_link ( struct e1000_hw * hw ) ; 
/*--e1000e_check_for_fiber_link--*/
s32 e1000e_check_for_serdes_link ( struct e1000_hw * hw ) ; 
/*--e1000e_check_for_serdes_link--*/
s32 e1000e_setup_link ( struct e1000_hw * hw ) ; 
/*--e1000e_setup_link--*/
s32 e1000e_setup_fiber_serdes_link ( struct e1000_hw * hw ) ; 
/*--e1000e_setup_fiber_serdes_link--*/
void e1000e_config_collision_dist ( struct e1000_hw * hw ) ; 
/*--e1000e_config_collision_dist--*/
s32 e1000e_set_fc_watermarks ( struct e1000_hw * hw ) ; 
/*--e1000e_set_fc_watermarks--*/
s32 e1000e_force_mac_fc ( struct e1000_hw * hw ) ; 
/*--e1000e_force_mac_fc--*/
s32 e1000e_config_fc_after_link_up ( struct e1000_hw * hw ) ; 
/*--e1000e_config_fc_after_link_up--*/
s32 e1000e_get_speed_and_duplex_copper ( struct e1000_hw * hw , u16 * speed , u16 * duplex ) ; 
/*--e1000e_get_speed_and_duplex_copper--*/
s32 e1000e_get_speed_and_duplex_fiber_serdes ( struct e1000_hw * hw , u16 * speed , u16 * duplex ) ; 
/*--e1000e_get_speed_and_duplex_fiber_serdes--*/
s32 e1000e_get_hw_semaphore ( struct e1000_hw * hw ) ; 
/*--e1000e_get_hw_semaphore--*/
void e1000e_put_hw_semaphore ( struct e1000_hw * hw ) ; 
/*--e1000e_put_hw_semaphore--*/
s32 e1000e_get_auto_rd_done ( struct e1000_hw * hw ) ; 
/*--e1000e_get_auto_rd_done--*/
s32 e1000e_valid_led_default ( struct e1000_hw * hw , u16 * data ) ; 
/*--e1000e_valid_led_default--*/
s32 e1000e_id_led_init ( struct e1000_hw * hw ) ; 
/*--e1000e_id_led_init--*/
s32 e1000e_setup_led_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_setup_led_generic--*/
s32 e1000e_cleanup_led_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_cleanup_led_generic--*/
s32 e1000e_blink_led ( struct e1000_hw * hw ) ; 
/*--e1000e_blink_led--*/
s32 e1000e_led_on_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_led_on_generic--*/
s32 e1000e_led_off_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_led_off_generic--*/
void e1000e_set_pcie_no_snoop ( struct e1000_hw * hw , u32 no_snoop ) ; 
/*--e1000e_set_pcie_no_snoop--*/
s32 e1000e_disable_pcie_master ( struct e1000_hw * hw ) ; 
/*--e1000e_disable_pcie_master--*/
void e1000e_reset_adaptive ( struct e1000_hw * hw ) ; 
/*--e1000e_reset_adaptive--*/
void e1000e_update_adaptive ( struct e1000_hw * hw ) ; 
/*--e1000e_update_adaptive--*/
s32 e1000e_poll_eerd_eewr_done ( struct e1000_hw * hw , int ee_reg ) ; 
/*--e1000e_poll_eerd_eewr_done--*/
s32 e1000e_acquire_nvm ( struct e1000_hw * hw ) ; 
/*--e1000e_acquire_nvm--*/
void e1000e_release_nvm ( struct e1000_hw * hw ) ; 
/*--e1000e_release_nvm--*/
s32 e1000e_read_nvm_eerd ( struct e1000_hw * hw , u16 offset , u16 words , u16 * data ) ; 
/*--e1000e_read_nvm_eerd--*/
s32 e1000e_write_nvm_spi ( struct e1000_hw * hw , u16 offset , u16 words , u16 * data ) ; 
/*--e1000e_write_nvm_spi--*/
s32 e1000_read_mac_addr_generic ( struct e1000_hw * hw ) ; 
/*--e1000_read_mac_addr_generic--*/
s32 e1000e_validate_nvm_checksum_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_validate_nvm_checksum_generic--*/
s32 e1000e_update_nvm_checksum_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_update_nvm_checksum_generic--*/
void e1000e_reload_nvm ( struct e1000_hw * hw ) ; 
/*--e1000e_reload_nvm--*/
bool e1000e_check_mng_mode_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_check_mng_mode_generic--*/
bool e1000e_enable_tx_pkt_filtering ( struct e1000_hw * hw ) ; 
/*--e1000e_enable_tx_pkt_filtering--*/
s32 e1000e_mng_write_dhcp_info ( struct e1000_hw * hw , u8 * buffer , u16 length ) ; 
/*--e1000e_mng_write_dhcp_info--*/
bool e1000e_enable_mng_pass_thru ( struct e1000_hw * hw ) ; 
/*--e1000e_enable_mng_pass_thru--*/
s32 e1000e_read_pba_num ( struct e1000_hw * hw , u32 * pba_num ) ; 
/*--e1000e_read_pba_num--*/
s32 e1000e_check_reset_block_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_check_reset_block_generic--*/
s32 e1000e_get_phy_id ( struct e1000_hw * hw ) ; 
/*--e1000e_get_phy_id--*/
s32 e1000e_phy_reset_dsp ( struct e1000_hw * hw ) ; 
/*--e1000e_phy_reset_dsp--*/
s32 e1000e_read_phy_reg_mdic ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000e_read_phy_reg_mdic--*/
s32 e1000e_write_phy_reg_mdic ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000e_write_phy_reg_mdic--*/
s32 e1000e_read_phy_reg_m88 ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000e_read_phy_reg_m88--*/
s32 e1000e_write_phy_reg_m88 ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000e_write_phy_reg_m88--*/
s32 e1000e_read_phy_reg_igp ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000e_read_phy_reg_igp--*/
s32 e1000e_read_phy_reg_igp_locked ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000e_read_phy_reg_igp_locked--*/
s32 e1000e_write_phy_reg_igp ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000e_write_phy_reg_igp--*/
s32 e1000e_write_phy_reg_igp_locked ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000e_write_phy_reg_igp_locked--*/
s32 e1000e_read_kmrn_reg ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000e_read_kmrn_reg--*/
s32 e1000e_read_kmrn_reg_locked ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000e_read_kmrn_reg_locked--*/
s32 e1000e_write_kmrn_reg ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000e_write_kmrn_reg--*/
s32 e1000e_write_kmrn_reg_locked ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000e_write_kmrn_reg_locked--*/
s32 e1000_copper_link_setup_82577 ( struct e1000_hw * hw ) ; 
/*--e1000_copper_link_setup_82577--*/
s32 e1000e_copper_link_setup_m88 ( struct e1000_hw * hw ) ; 
/*--e1000e_copper_link_setup_m88--*/
s32 e1000e_copper_link_setup_igp ( struct e1000_hw * hw ) ; 
/*--e1000e_copper_link_setup_igp--*/
s32 e1000e_setup_copper_link ( struct e1000_hw * hw ) ; 
/*--e1000e_setup_copper_link--*/
s32 e1000e_phy_force_speed_duplex_igp ( struct e1000_hw * hw ) ; 
/*--e1000e_phy_force_speed_duplex_igp--*/
s32 e1000e_phy_force_speed_duplex_m88 ( struct e1000_hw * hw ) ; 
/*--e1000e_phy_force_speed_duplex_m88--*/
s32 e1000_phy_force_speed_duplex_ife ( struct e1000_hw * hw ) ; 
/*--e1000_phy_force_speed_duplex_ife--*/
void e1000e_phy_force_speed_duplex_setup ( struct e1000_hw * hw , u16 * phy_ctrl ) ; 
/*--e1000e_phy_force_speed_duplex_setup--*/
s32 e1000e_set_d3_lplu_state ( struct e1000_hw * hw , bool active ) ; 
/*--e1000e_set_d3_lplu_state--*/
s32 e1000e_check_downshift ( struct e1000_hw * hw ) ; 
/*--e1000e_check_downshift--*/
s32 e1000_check_polarity_m88 ( struct e1000_hw * hw ) ; 
/*--e1000_check_polarity_m88--*/
s32 e1000_check_polarity_igp ( struct e1000_hw * hw ) ; 
/*--e1000_check_polarity_igp--*/
s32 e1000_check_polarity_ife ( struct e1000_hw * hw ) ; 
/*--e1000_check_polarity_ife--*/
s32 e1000e_phy_has_link_generic ( struct e1000_hw * hw , u32 iterations , u32 usec_interval , bool * success ) ; 
/*--e1000e_phy_has_link_generic--*/
s32 e1000e_get_cable_length_m88 ( struct e1000_hw * hw ) ; 
/*--e1000e_get_cable_length_m88--*/
s32 e1000e_get_cable_length_igp_2 ( struct e1000_hw * hw ) ; 
/*--e1000e_get_cable_length_igp_2--*/
s32 e1000e_get_phy_info_m88 ( struct e1000_hw * hw ) ; 
/*--e1000e_get_phy_info_m88--*/
s32 e1000e_get_phy_info_igp ( struct e1000_hw * hw ) ; 
/*--e1000e_get_phy_info_igp--*/
s32 e1000_get_phy_info_ife ( struct e1000_hw * hw ) ; 
/*--e1000_get_phy_info_ife--*/
s32 e1000e_phy_sw_reset ( struct e1000_hw * hw ) ; 
/*--e1000e_phy_sw_reset--*/
s32 e1000e_phy_hw_reset_generic ( struct e1000_hw * hw ) ; 
/*--e1000e_phy_hw_reset_generic--*/
s32 e1000e_get_cfg_done ( struct e1000_hw * hw ) ; 
/*--e1000e_get_cfg_done--*/
s32 e1000e_phy_init_script_igp3 ( struct e1000_hw * hw ) ; 
/*--e1000e_phy_init_script_igp3--*/
enum e1000_phy_type e1000e_get_phy_type_from_id ( u32 phy_id ) ; 
/*--e1000e_get_phy_type_from_id--*/
s32 e1000e_determine_phy_address ( struct e1000_hw * hw ) ; 
/*--e1000e_determine_phy_address--*/
s32 e1000e_write_phy_reg_bm ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000e_write_phy_reg_bm--*/
s32 e1000e_read_phy_reg_bm ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000e_read_phy_reg_bm--*/
s32 e1000e_read_phy_reg_bm2 ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000e_read_phy_reg_bm2--*/
s32 e1000e_write_phy_reg_bm2 ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000e_write_phy_reg_bm2--*/
void e1000_power_up_phy_copper ( struct e1000_hw * hw ) ; 
/*--e1000_power_up_phy_copper--*/
void e1000_power_down_phy_copper ( struct e1000_hw * hw ) ; 
/*--e1000_power_down_phy_copper--*/
s32 e1000e_commit_phy ( struct e1000_hw * hw ) ; 
/*--e1000e_commit_phy--*/
s32 e1000_read_phy_reg_hv ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000_read_phy_reg_hv--*/
s32 e1000_read_phy_reg_hv_locked ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--e1000_read_phy_reg_hv_locked--*/
s32 e1000_write_phy_reg_hv ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000_write_phy_reg_hv--*/
s32 e1000_write_phy_reg_hv_locked ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--e1000_write_phy_reg_hv_locked--*/
s32 e1000_link_stall_workaround_hv ( struct e1000_hw * hw ) ; 
/*--e1000_link_stall_workaround_hv--*/
s32 e1000_check_polarity_82577 ( struct e1000_hw * hw ) ; 
/*--e1000_check_polarity_82577--*/
s32 e1000_phy_force_speed_duplex_82577 ( struct e1000_hw * hw ) ; 
/*--e1000_phy_force_speed_duplex_82577--*/
s32 e1000_get_phy_info_82577 ( struct e1000_hw * hw ) ; 
/*--e1000_get_phy_info_82577--*/
s32 e1000_get_cable_length_82577 ( struct e1000_hw * hw ) ; 
/*--e1000_get_cable_length_82577--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) e1000e_check_options ( struct e1000_adapter * adapter ) ; 
/*--e1000e_check_options--*/
void e1000e_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--e1000e_set_ethtool_ops--*/
void e1000e_reset_interrupt_capability ( struct e1000_adapter * adapter ) ; 
/*--e1000e_reset_interrupt_capability--*/
void e1000e_set_interrupt_capability ( struct e1000_adapter * adapter ) ; 
/*--e1000e_set_interrupt_capability--*/
int e1000e_setup_tx_resources ( struct e1000_adapter * adapter ) ; 
/*--e1000e_setup_tx_resources--*/
int e1000e_setup_rx_resources ( struct e1000_adapter * adapter ) ; 
/*--e1000e_setup_rx_resources--*/
void e1000e_free_tx_resources ( struct e1000_adapter * adapter ) ; 
/*--e1000e_free_tx_resources--*/
void e1000e_free_rx_resources ( struct e1000_adapter * adapter ) ; 
/*--e1000e_free_rx_resources--*/
void e1000e_power_up_phy ( struct e1000_adapter * adapter ) ; 
/*--e1000e_power_up_phy--*/
void e1000e_reset ( struct e1000_adapter * adapter ) ; 
/*--e1000e_reset--*/
int e1000e_up ( struct e1000_adapter * adapter ) ; 
/*--e1000e_up--*/
void e1000e_down ( struct e1000_adapter * adapter ) ; 
/*--e1000e_down--*/
void e1000e_reinit_locked ( struct e1000_adapter * adapter ) ; 
/*--e1000e_reinit_locked--*/
void e1000e_update_stats ( struct e1000_adapter * adapter ) ; 
/*--e1000e_update_stats--*/
bool e1000e_has_link ( struct e1000_adapter * adapter ) ; 
/*--e1000e_has_link--*/
void e1000e_disable_aspm ( struct pci_dev * pdev , u16 state ) ; 
/*--e1000e_disable_aspm--*/
void enic_dev_deinit ( struct enic * enic ) ; 
/*--enic_dev_deinit--*/
int enic_dev_init ( struct enic * enic ) ; 
/*--enic_dev_init--*/
void vnic_cq_free ( struct vnic_cq * cq ) ; 
/*--vnic_cq_free--*/
int vnic_cq_alloc ( struct vnic_dev * vdev , struct vnic_cq * cq , unsigned int index , unsigned int desc_count , unsigned int desc_size ) ; 
/*--vnic_cq_alloc--*/
void vnic_cq_init ( struct vnic_cq * cq , unsigned int flow_control_enable , unsigned int color_enable , unsigned int cq_head , unsigned int cq_tail , unsigned int cq_tail_color , unsigned int interrupt_enable , unsigned int cq_entry_enable , unsigned int cq_message_enable , unsigned int interrupt_offset , u64 cq_message_addr ) ; 
/*--vnic_cq_init--*/
void vnic_cq_clean ( struct vnic_cq * cq ) ; 
/*--vnic_cq_clean--*/
void vnic_intr_free ( struct vnic_intr * intr ) ; 
/*--vnic_intr_free--*/
int vnic_intr_alloc ( struct vnic_dev * vdev , struct vnic_intr * intr , unsigned int index ) ; 
/*--vnic_intr_alloc--*/
void vnic_intr_init ( struct vnic_intr * intr , unsigned int coalescing_timer , unsigned int coalescing_type , unsigned int mask_on_assertion ) ; 
/*--vnic_intr_init--*/
void vnic_intr_coalescing_timer_set ( struct vnic_intr * intr , unsigned int coalescing_timer ) ; 
/*--vnic_intr_coalescing_timer_set--*/
void vnic_intr_clean ( struct vnic_intr * intr ) ; 
/*--vnic_intr_clean--*/
void vnic_intr_raise ( struct vnic_intr * intr ) ; 
/*--vnic_intr_raise--*/
void vnic_wq_free ( struct vnic_wq * wq ) ; 
/*--vnic_wq_free--*/
int vnic_wq_alloc ( struct vnic_dev * vdev , struct vnic_wq * wq , unsigned int index , unsigned int desc_count , unsigned int desc_size ) ; 
/*--vnic_wq_alloc--*/
void vnic_wq_init_start ( struct vnic_wq * wq , unsigned int cq_index , unsigned int fetch_index , unsigned int posted_index , unsigned int error_interrupt_enable , unsigned int error_interrupt_offset ) ; 
/*--vnic_wq_init_start--*/
void vnic_wq_init ( struct vnic_wq * wq , unsigned int cq_index , unsigned int error_interrupt_enable , unsigned int error_interrupt_offset ) ; 
/*--vnic_wq_init--*/
unsigned int vnic_wq_error_status ( struct vnic_wq * wq ) ; 
/*--vnic_wq_error_status--*/
void vnic_wq_enable ( struct vnic_wq * wq ) ; 
/*--vnic_wq_enable--*/
int vnic_wq_disable ( struct vnic_wq * wq ) ; 
/*--vnic_wq_disable--*/
void vnic_wq_clean ( struct vnic_wq * wq , void ( * buf_clean ) ( struct vnic_wq * wq , struct vnic_wq_buf * buf ) ) ; 
/*--vnic_wq_clean--*/
int enic_get_vnic_config ( struct enic * enic ) ; 
/*--enic_get_vnic_config--*/
void enic_add_multicast_addr ( struct enic * enic , u8 * addr ) ; 
/*--enic_add_multicast_addr--*/
void enic_del_multicast_addr ( struct enic * enic , u8 * addr ) ; 
/*--enic_del_multicast_addr--*/
void enic_add_vlan ( struct enic * enic , u16 vlanid ) ; 
/*--enic_add_vlan--*/
void enic_del_vlan ( struct enic * enic , u16 vlanid ) ; 
/*--enic_del_vlan--*/
int enic_set_nic_cfg ( struct enic * enic , u8 rss_default_cpu , u8 rss_hash_type , u8 rss_hash_bits , u8 rss_base_cpu , u8 rss_enable , u8 tso_ipid_split_en , u8 ig_vlan_strip_en ) ; 
/*--enic_set_nic_cfg--*/
int enic_set_rss_key ( struct enic * enic , dma_addr_t key_pa , u64 len ) ; 
/*--enic_set_rss_key--*/
int enic_set_rss_cpu ( struct enic * enic , dma_addr_t cpu_pa , u64 len ) ; 
/*--enic_set_rss_cpu--*/
void enic_free_vnic_resources ( struct enic * enic ) ; 
/*--enic_free_vnic_resources--*/
void enic_get_res_counts ( struct enic * enic ) ; 
/*--enic_get_res_counts--*/
void enic_init_vnic_resources ( struct enic * enic ) ; 
/*--enic_init_vnic_resources--*/
int enic_alloc_vnic_resources ( struct enic * enic ) ; 
/*--enic_alloc_vnic_resources--*/
void * vnic_dev_priv ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_priv--*/
unsigned int vnic_dev_get_res_count ( struct vnic_dev * vdev , enum vnic_res_type type ) ; 
/*--vnic_dev_get_res_count--*/
void * vnic_dev_get_res ( struct vnic_dev * vdev , enum vnic_res_type type , unsigned int index ) ; 
/*--vnic_dev_get_res--*/
dma_addr_t vnic_dev_get_res_bus_addr ( struct vnic_dev * vdev , enum vnic_res_type type , unsigned int index ) ; 
/*--vnic_dev_get_res_bus_addr--*/
unsigned int vnic_dev_desc_ring_size ( struct vnic_dev_ring * ring , unsigned int desc_count , unsigned int desc_size ) ; 
/*--vnic_dev_desc_ring_size--*/
void vnic_dev_clear_desc_ring ( struct vnic_dev_ring * ring ) ; 
/*--vnic_dev_clear_desc_ring--*/
int vnic_dev_alloc_desc_ring ( struct vnic_dev * vdev , struct vnic_dev_ring * ring , unsigned int desc_count , unsigned int desc_size ) ; 
/*--vnic_dev_alloc_desc_ring--*/
void vnic_dev_free_desc_ring ( struct vnic_dev * vdev , struct vnic_dev_ring * ring ) ; 
/*--vnic_dev_free_desc_ring--*/
int vnic_dev_cmd ( struct vnic_dev * vdev , enum vnic_devcmd_cmd cmd , u64 * a0 , u64 * a1 , int wait ) ; 
/*--vnic_dev_cmd--*/
int vnic_dev_fw_info ( struct vnic_dev * vdev , struct vnic_devcmd_fw_info * * fw_info ) ; 
/*--vnic_dev_fw_info--*/
int vnic_dev_hw_version ( struct vnic_dev * vdev , enum vnic_dev_hw_version * hw_ver ) ; 
/*--vnic_dev_hw_version--*/
int vnic_dev_spec ( struct vnic_dev * vdev , unsigned int offset , unsigned int size , void * value ) ; 
/*--vnic_dev_spec--*/
int vnic_dev_stats_clear ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_stats_clear--*/
int vnic_dev_stats_dump ( struct vnic_dev * vdev , struct vnic_stats * * stats ) ; 
/*--vnic_dev_stats_dump--*/
int vnic_dev_close ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_close--*/
int vnic_dev_enable ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_enable--*/
int vnic_dev_disable ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_disable--*/
int vnic_dev_open ( struct vnic_dev * vdev , int arg ) ; 
/*--vnic_dev_open--*/
int vnic_dev_open_done ( struct vnic_dev * vdev , int * done ) ; 
/*--vnic_dev_open_done--*/
int vnic_dev_soft_reset ( struct vnic_dev * vdev , int arg ) ; 
/*--vnic_dev_soft_reset--*/
int vnic_dev_soft_reset_done ( struct vnic_dev * vdev , int * done ) ; 
/*--vnic_dev_soft_reset_done--*/
int vnic_dev_hang_notify ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_hang_notify--*/
int vnic_dev_mac_addr ( struct vnic_dev * vdev , u8 * mac_addr ) ; 
/*--vnic_dev_mac_addr--*/
void vnic_dev_packet_filter ( struct vnic_dev * vdev , int directed , int multicast , int broadcast , int promisc , int allmulti ) ; 
/*--vnic_dev_packet_filter--*/
int vnic_dev_add_addr ( struct vnic_dev * vdev , u8 * addr ) ; 
/*--vnic_dev_add_addr--*/
int vnic_dev_del_addr ( struct vnic_dev * vdev , u8 * addr ) ; 
/*--vnic_dev_del_addr--*/
int vnic_dev_raise_intr ( struct vnic_dev * vdev , u16 intr ) ; 
/*--vnic_dev_raise_intr--*/
int vnic_dev_notify_setcmd ( struct vnic_dev * vdev , void * notify_addr , dma_addr_t notify_pa , u16 intr ) ; 
/*--vnic_dev_notify_setcmd--*/
int vnic_dev_notify_set ( struct vnic_dev * vdev , u16 intr ) ; 
/*--vnic_dev_notify_set--*/
void vnic_dev_notify_unsetcmd ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_notify_unsetcmd--*/
void vnic_dev_notify_unset ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_notify_unset--*/
int vnic_dev_init ( struct vnic_dev * vdev , int arg ) ; 
/*--vnic_dev_init--*/
int vnic_dev_init_done ( struct vnic_dev * vdev , int * done , int * err ) ; 
/*--vnic_dev_init_done--*/
int vnic_dev_init_prov ( struct vnic_dev * vdev , u8 * buf , u32 len ) ; 
/*--vnic_dev_init_prov--*/
int vnic_dev_deinit ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_deinit--*/
int vnic_dev_link_status ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_link_status--*/
u32 vnic_dev_port_speed ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_port_speed--*/
u32 vnic_dev_msg_lvl ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_msg_lvl--*/
u32 vnic_dev_mtu ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_mtu--*/
u32 vnic_dev_link_down_cnt ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_link_down_cnt--*/
u32 vnic_dev_notify_status ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_notify_status--*/
void vnic_dev_set_intr_mode ( struct vnic_dev * vdev , enum vnic_dev_intr_mode intr_mode ) ; 
/*--vnic_dev_set_intr_mode--*/
enum vnic_dev_intr_mode vnic_dev_get_intr_mode ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_get_intr_mode--*/
void vnic_dev_unregister ( struct vnic_dev * vdev ) ; 
/*--vnic_dev_unregister--*/
struct vnic_dev * vnic_dev_register ( struct vnic_dev * vdev , void * priv , struct pci_dev * pdev , struct vnic_dev_bar * bar , unsigned int num_bars ) ; 
/*--vnic_dev_register--*/
void vnic_rq_free ( struct vnic_rq * rq ) ; 
/*--vnic_rq_free--*/
int vnic_rq_alloc ( struct vnic_dev * vdev , struct vnic_rq * rq , unsigned int index , unsigned int desc_count , unsigned int desc_size ) ; 
/*--vnic_rq_alloc--*/
void vnic_rq_init_start ( struct vnic_rq * rq , unsigned int cq_index , unsigned int fetch_index , unsigned int posted_index , unsigned int error_interrupt_enable , unsigned int error_interrupt_offset ) ; 
/*--vnic_rq_init_start--*/
void vnic_rq_init ( struct vnic_rq * rq , unsigned int cq_index , unsigned int error_interrupt_enable , unsigned int error_interrupt_offset ) ; 
/*--vnic_rq_init--*/
unsigned int vnic_rq_error_status ( struct vnic_rq * rq ) ; 
/*--vnic_rq_error_status--*/
void vnic_rq_enable ( struct vnic_rq * rq ) ; 
/*--vnic_rq_enable--*/
int vnic_rq_disable ( struct vnic_rq * rq ) ; 
/*--vnic_rq_disable--*/
void vnic_rq_clean ( struct vnic_rq * rq , void ( * buf_clean ) ( struct vnic_rq * rq , struct vnic_rq_buf * buf ) ) ; 
/*--vnic_rq_clean--*/
struct vic_provinfo * vic_provinfo_alloc ( gfp_t flags , u8 * oui , u8 type ) ; 
/*--vic_provinfo_alloc--*/
void vic_provinfo_free ( struct vic_provinfo * vp ) ; 
/*--vic_provinfo_free--*/
int vic_provinfo_add_tlv ( struct vic_provinfo * vp , u16 type , u16 length , void * value ) ; 
/*--vic_provinfo_add_tlv--*/
size_t vic_provinfo_size ( struct vic_provinfo * vp ) ; 
/*--vic_provinfo_size--*/
void hdlcdrv_receiver ( struct net_device * dev , struct hdlcdrv_state * s ) ; 
/*--hdlcdrv_receiver--*/
void hdlcdrv_transmitter ( struct net_device * dev , struct hdlcdrv_state * s ) ; 
/*--hdlcdrv_transmitter--*/
void hdlcdrv_arbitrate ( struct net_device * dev , struct hdlcdrv_state * s ) ; 
/*--hdlcdrv_arbitrate--*/
struct net_device * hdlcdrv_register ( const struct hdlcdrv_ops * ops , unsigned int privsize , const char * ifname , unsigned int baseaddr , unsigned int irq , unsigned int dma ) ; 
/*--hdlcdrv_register--*/
void hdlcdrv_unregister ( struct net_device * dev ) ; 
/*--hdlcdrv_unregister--*/
struct net_device * igb_get_hw_dev ( struct e1000_hw * hw ) ; 
/*--igb_get_hw_dev--*/
void igb_power_up_link ( struct igb_adapter * adapter ) ; 
/*--igb_power_up_link--*/
int igb_up ( struct igb_adapter * adapter ) ; 
/*--igb_up--*/
void igb_down ( struct igb_adapter * adapter ) ; 
/*--igb_down--*/
void igb_reinit_locked ( struct igb_adapter * adapter ) ; 
/*--igb_reinit_locked--*/
void igb_reset ( struct igb_adapter * adapter ) ; 
/*--igb_reset--*/
int igb_setup_tx_resources ( struct igb_ring * tx_ring ) ; 
/*--igb_setup_tx_resources--*/
void igb_setup_tctl ( struct igb_adapter * adapter ) ; 
/*--igb_setup_tctl--*/
void igb_configure_tx_ring ( struct igb_adapter * adapter , struct igb_ring * ring ) ; 
/*--igb_configure_tx_ring--*/
int igb_setup_rx_resources ( struct igb_ring * rx_ring ) ; 
/*--igb_setup_rx_resources--*/
void igb_setup_rctl ( struct igb_adapter * adapter ) ; 
/*--igb_setup_rctl--*/
void igb_configure_rx_ring ( struct igb_adapter * adapter , struct igb_ring * ring ) ; 
/*--igb_configure_rx_ring--*/
void igb_free_tx_resources ( struct igb_ring * tx_ring ) ; 
/*--igb_free_tx_resources--*/
void igb_unmap_and_free_tx_resource ( struct igb_ring * tx_ring , struct igb_buffer * buffer_info ) ; 
/*--igb_unmap_and_free_tx_resource--*/
void igb_free_rx_resources ( struct igb_ring * rx_ring ) ; 
/*--igb_free_rx_resources--*/
bool igb_has_link ( struct igb_adapter * adapter ) ; 
/*--igb_has_link--*/
netdev_tx_t igb_xmit_frame_ring_adv ( struct sk_buff * skb , struct igb_ring * tx_ring ) ; 
/*--igb_xmit_frame_ring_adv--*/
void igb_update_stats ( struct igb_adapter * adapter ) ; 
/*--igb_update_stats--*/
void igb_alloc_rx_buffers_adv ( struct igb_ring * rx_ring , int cleaned_count ) ; 
/*--igb_alloc_rx_buffers_adv--*/
s32 igb_read_pcie_cap_reg ( struct e1000_hw * hw , u32 reg , u16 * value ) ; 
/*--igb_read_pcie_cap_reg--*/
s32 igb_write_pcie_cap_reg ( struct e1000_hw * hw , u32 reg , u16 * value ) ; 
/*--igb_write_pcie_cap_reg--*/
int igb_set_spd_dplx ( struct igb_adapter * adapter , u16 spddplx ) ; 
/*--igb_set_spd_dplx--*/
void igb_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--igb_set_ethtool_ops--*/
void igb_power_up_serdes_link_82575 ( struct e1000_hw * hw ) ; 
/*--igb_power_up_serdes_link_82575--*/
void igb_shutdown_serdes_link_82575 ( struct e1000_hw * hw ) ; 
/*--igb_shutdown_serdes_link_82575--*/
void igb_power_down_phy_copper_82575 ( struct e1000_hw * hw ) ; 
/*--igb_power_down_phy_copper_82575--*/
void igb_rx_fifo_flush_82575 ( struct e1000_hw * hw ) ; 
/*--igb_rx_fifo_flush_82575--*/
void igb_vmdq_set_loopback_pf ( struct e1000_hw * hw , bool enable ) ; 
/*--igb_vmdq_set_loopback_pf--*/
void igb_vmdq_set_replication_pf ( struct e1000_hw * hw , bool enable ) ; 
/*--igb_vmdq_set_replication_pf--*/
u16 igb_rxpbs_adjust_82580 ( u32 data ) ; 
/*--igb_rxpbs_adjust_82580--*/
s32 igb_get_bus_info_pcie ( struct e1000_hw * hw ) ; 
/*--igb_get_bus_info_pcie--*/
void igb_clear_vfta ( struct e1000_hw * hw ) ; 
/*--igb_clear_vfta--*/
void igb_init_rx_addrs ( struct e1000_hw * hw , u16 rar_count ) ; 
/*--igb_init_rx_addrs--*/
s32 igb_vfta_set ( struct e1000_hw * hw , u32 vid , bool add ) ; 
/*--igb_vfta_set--*/
s32 igb_check_alt_mac_addr ( struct e1000_hw * hw ) ; 
/*--igb_check_alt_mac_addr--*/
void igb_rar_set ( struct e1000_hw * hw , u8 * addr , u32 index ) ; 
/*--igb_rar_set--*/
void igb_mta_set ( struct e1000_hw * hw , u32 hash_value ) ; 
/*--igb_mta_set--*/
void igb_update_mc_addr_list ( struct e1000_hw * hw , u8 * mc_addr_list , u32 mc_addr_count ) ; 
/*--igb_update_mc_addr_list--*/
void igb_clear_hw_cntrs_base ( struct e1000_hw * hw ) ; 
/*--igb_clear_hw_cntrs_base--*/
s32 igb_check_for_copper_link ( struct e1000_hw * hw ) ; 
/*--igb_check_for_copper_link--*/
s32 igb_setup_link ( struct e1000_hw * hw ) ; 
/*--igb_setup_link--*/
void igb_config_collision_dist ( struct e1000_hw * hw ) ; 
/*--igb_config_collision_dist--*/
s32 igb_force_mac_fc ( struct e1000_hw * hw ) ; 
/*--igb_force_mac_fc--*/
s32 igb_config_fc_after_link_up ( struct e1000_hw * hw ) ; 
/*--igb_config_fc_after_link_up--*/
s32 igb_get_speed_and_duplex_copper ( struct e1000_hw * hw , u16 * speed , u16 * duplex ) ; 
/*--igb_get_speed_and_duplex_copper--*/
s32 igb_get_hw_semaphore ( struct e1000_hw * hw ) ; 
/*--igb_get_hw_semaphore--*/
void igb_put_hw_semaphore ( struct e1000_hw * hw ) ; 
/*--igb_put_hw_semaphore--*/
s32 igb_get_auto_rd_done ( struct e1000_hw * hw ) ; 
/*--igb_get_auto_rd_done--*/
s32 igb_id_led_init ( struct e1000_hw * hw ) ; 
/*--igb_id_led_init--*/
s32 igb_cleanup_led ( struct e1000_hw * hw ) ; 
/*--igb_cleanup_led--*/
s32 igb_blink_led ( struct e1000_hw * hw ) ; 
/*--igb_blink_led--*/
s32 igb_led_off ( struct e1000_hw * hw ) ; 
/*--igb_led_off--*/
s32 igb_disable_pcie_master ( struct e1000_hw * hw ) ; 
/*--igb_disable_pcie_master--*/
s32 igb_validate_mdi_setting ( struct e1000_hw * hw ) ; 
/*--igb_validate_mdi_setting--*/
s32 igb_write_8bit_ctrl_reg ( struct e1000_hw * hw , u32 reg , u32 offset , u8 data ) ; 
/*--igb_write_8bit_ctrl_reg--*/
bool igb_enable_mng_pass_thru ( struct e1000_hw * hw ) ; 
/*--igb_enable_mng_pass_thru--*/
s32 igb_acquire_nvm ( struct e1000_hw * hw ) ; 
/*--igb_acquire_nvm--*/
void igb_release_nvm ( struct e1000_hw * hw ) ; 
/*--igb_release_nvm--*/
s32 igb_read_nvm_eerd ( struct e1000_hw * hw , u16 offset , u16 words , u16 * data ) ; 
/*--igb_read_nvm_eerd--*/
s32 igb_write_nvm_spi ( struct e1000_hw * hw , u16 offset , u16 words , u16 * data ) ; 
/*--igb_write_nvm_spi--*/
s32 igb_read_part_num ( struct e1000_hw * hw , u32 * part_num ) ; 
/*--igb_read_part_num--*/
s32 igb_read_mac_addr ( struct e1000_hw * hw ) ; 
/*--igb_read_mac_addr--*/
s32 igb_validate_nvm_checksum ( struct e1000_hw * hw ) ; 
/*--igb_validate_nvm_checksum--*/
s32 igb_update_nvm_checksum ( struct e1000_hw * hw ) ; 
/*--igb_update_nvm_checksum--*/
s32 igb_check_reset_block ( struct e1000_hw * hw ) ; 
/*--igb_check_reset_block--*/
s32 igb_get_phy_id ( struct e1000_hw * hw ) ; 
/*--igb_get_phy_id--*/
s32 igb_read_phy_reg_mdic ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--igb_read_phy_reg_mdic--*/
s32 igb_write_phy_reg_mdic ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--igb_write_phy_reg_mdic--*/
s32 igb_read_phy_reg_i2c ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--igb_read_phy_reg_i2c--*/
s32 igb_write_phy_reg_i2c ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--igb_write_phy_reg_i2c--*/
s32 igb_read_phy_reg_igp ( struct e1000_hw * hw , u32 offset , u16 * data ) ; 
/*--igb_read_phy_reg_igp--*/
s32 igb_write_phy_reg_igp ( struct e1000_hw * hw , u32 offset , u16 data ) ; 
/*--igb_write_phy_reg_igp--*/
s32 igb_copper_link_setup_82580 ( struct e1000_hw * hw ) ; 
/*--igb_copper_link_setup_82580--*/
s32 igb_copper_link_setup_m88 ( struct e1000_hw * hw ) ; 
/*--igb_copper_link_setup_m88--*/
s32 igb_copper_link_setup_igp ( struct e1000_hw * hw ) ; 
/*--igb_copper_link_setup_igp--*/
s32 igb_setup_copper_link ( struct e1000_hw * hw ) ; 
/*--igb_setup_copper_link--*/
s32 igb_phy_force_speed_duplex_igp ( struct e1000_hw * hw ) ; 
/*--igb_phy_force_speed_duplex_igp--*/
s32 igb_phy_force_speed_duplex_m88 ( struct e1000_hw * hw ) ; 
/*--igb_phy_force_speed_duplex_m88--*/
s32 igb_set_d3_lplu_state ( struct e1000_hw * hw , bool active ) ; 
/*--igb_set_d3_lplu_state--*/
s32 igb_check_downshift ( struct e1000_hw * hw ) ; 
/*--igb_check_downshift--*/
s32 igb_phy_has_link ( struct e1000_hw * hw , u32 iterations , u32 usec_interval , bool * success ) ; 
/*--igb_phy_has_link--*/
s32 igb_get_cable_length_m88 ( struct e1000_hw * hw ) ; 
/*--igb_get_cable_length_m88--*/
s32 igb_get_cable_length_igp_2 ( struct e1000_hw * hw ) ; 
/*--igb_get_cable_length_igp_2--*/
s32 igb_get_phy_info_m88 ( struct e1000_hw * hw ) ; 
/*--igb_get_phy_info_m88--*/
s32 igb_get_phy_info_igp ( struct e1000_hw * hw ) ; 
/*--igb_get_phy_info_igp--*/
s32 igb_phy_sw_reset ( struct e1000_hw * hw ) ; 
/*--igb_phy_sw_reset--*/
s32 igb_phy_hw_reset ( struct e1000_hw * hw ) ; 
/*--igb_phy_hw_reset--*/
s32 igb_phy_init_script_igp3 ( struct e1000_hw * hw ) ; 
/*--igb_phy_init_script_igp3--*/
void igb_power_up_phy_copper ( struct e1000_hw * hw ) ; 
/*--igb_power_up_phy_copper--*/
void igb_power_down_phy_copper ( struct e1000_hw * hw ) ; 
/*--igb_power_down_phy_copper--*/
s32 igb_phy_force_speed_duplex_82580 ( struct e1000_hw * hw ) ; 
/*--igb_phy_force_speed_duplex_82580--*/
s32 igb_get_phy_info_82580 ( struct e1000_hw * hw ) ; 
/*--igb_get_phy_info_82580--*/
s32 igb_get_cable_length_82580 ( struct e1000_hw * hw ) ; 
/*--igb_get_cable_length_82580--*/
s32 igb_read_mbx ( struct e1000_hw * hw , u32 * msg , u16 size , u16 mbx_id ) ; 
/*--igb_read_mbx--*/
s32 igb_write_mbx ( struct e1000_hw * hw , u32 * msg , u16 size , u16 mbx_id ) ; 
/*--igb_write_mbx--*/
s32 igb_check_for_msg ( struct e1000_hw * hw , u16 mbx_id ) ; 
/*--igb_check_for_msg--*/
s32 igb_check_for_ack ( struct e1000_hw * hw , u16 mbx_id ) ; 
/*--igb_check_for_ack--*/
s32 igb_check_for_rst ( struct e1000_hw * hw , u16 mbx_id ) ; 
/*--igb_check_for_rst--*/
s32 igb_init_mbx_params_pf ( struct e1000_hw * hw ) ; 
/*--igb_init_mbx_params_pf--*/
void e1000_init_function_pointers_vf ( struct e1000_hw * hw ) ; 
/*--e1000_init_function_pointers_vf--*/
void e1000_update_mc_addr_list_vf ( struct e1000_hw * hw , u8 * mc_addr_list , u32 mc_addr_count , u32 rar_used_count , u32 rar_count ) ; 
/*--e1000_update_mc_addr_list_vf--*/
void e1000_rlpml_set_vf ( struct e1000_hw * hw , u16 max_size ) ; 
/*--e1000_rlpml_set_vf--*/
s32 e1000_init_mbx_params_vf ( struct e1000_hw * hw ) ; 
/*--e1000_init_mbx_params_vf--*/
void igbvf_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--igbvf_set_ethtool_ops--*/
int igbvf_setup_tx_resources ( struct igbvf_adapter * adapter , struct igbvf_ring * tx_ring ) ; 
/*--igbvf_setup_tx_resources--*/
int igbvf_setup_rx_resources ( struct igbvf_adapter * adapter , struct igbvf_ring * rx_ring ) ; 
/*--igbvf_setup_rx_resources--*/
void igbvf_free_tx_resources ( struct igbvf_ring * tx_ring ) ; 
/*--igbvf_free_tx_resources--*/
void igbvf_free_rx_resources ( struct igbvf_ring * rx_ring ) ; 
/*--igbvf_free_rx_resources--*/
int igbvf_up ( struct igbvf_adapter * adapter ) ; 
/*--igbvf_up--*/
void igbvf_down ( struct igbvf_adapter * adapter ) ; 
/*--igbvf_down--*/
void igbvf_reinit_locked ( struct igbvf_adapter * adapter ) ; 
/*--igbvf_reinit_locked--*/
void igbvf_update_stats ( struct igbvf_adapter * adapter ) ; 
/*--igbvf_update_stats--*/
int sirdev_schedule_request ( struct sir_dev * dev , int initial_state , unsigned param ) ; 
/*--sirdev_schedule_request--*/
void sirdev_enable_rx ( struct sir_dev * dev ) ; 
/*--sirdev_enable_rx--*/
int sirdev_set_dongle ( struct sir_dev * dev , IRDA_DONGLE type ) ; 
/*--sirdev_set_dongle--*/
int sirdev_raw_write ( struct sir_dev * dev , const char * buf , int len ) ; 
/*--sirdev_raw_write--*/
int sirdev_raw_read ( struct sir_dev * dev , char * buf , int len ) ; 
/*--sirdev_raw_read--*/
int sirdev_set_dtr_rts ( struct sir_dev * dev , int dtr , int rts ) ; 
/*--sirdev_set_dtr_rts--*/
void sirdev_write_complete ( struct sir_dev * dev ) ; 
/*--sirdev_write_complete--*/
int sirdev_receive ( struct sir_dev * dev , const unsigned char * cp , size_t count ) ; 
/*--sirdev_receive--*/
struct sir_dev * sirdev_get_instance ( const struct sir_driver * drv , const char * name ) ; 
/*--sirdev_get_instance--*/
int sirdev_put_instance ( struct sir_dev * dev ) ; 
/*--sirdev_put_instance--*/
int irda_register_dongle ( struct dongle_driver * new ) ; 
/*--irda_register_dongle--*/
int irda_unregister_dongle ( struct dongle_driver * drv ) ; 
/*--irda_unregister_dongle--*/
int sirdev_get_dongle ( struct sir_dev * dev , IRDA_DONGLE type ) ; 
/*--sirdev_get_dongle--*/
int sirdev_put_dongle ( struct sir_dev * dev ) ; 
/*--sirdev_put_dongle--*/
int ixgb_up ( struct ixgb_adapter * adapter ) ; 
/*--ixgb_up--*/
void ixgb_down ( struct ixgb_adapter * adapter , bool kill_watchdog ) ; 
/*--ixgb_down--*/
void ixgb_reset ( struct ixgb_adapter * adapter ) ; 
/*--ixgb_reset--*/
int ixgb_setup_tx_resources ( struct ixgb_adapter * adapter ) ; 
/*--ixgb_setup_tx_resources--*/
int ixgb_setup_rx_resources ( struct ixgb_adapter * adapter ) ; 
/*--ixgb_setup_rx_resources--*/
void ixgb_free_tx_resources ( struct ixgb_adapter * adapter ) ; 
/*--ixgb_free_tx_resources--*/
void ixgb_free_rx_resources ( struct ixgb_adapter * adapter ) ; 
/*--ixgb_free_rx_resources--*/
void ixgb_update_stats ( struct ixgb_adapter * adapter ) ; 
/*--ixgb_update_stats--*/
bool ixgb_adapter_stop ( struct ixgb_hw * hw ) ; 
/*--ixgb_adapter_stop--*/
bool ixgb_init_hw ( struct ixgb_hw * hw ) ; 
/*--ixgb_init_hw--*/
void ixgb_mc_addr_list_update ( struct ixgb_hw * hw , u8 * mc_addr_list , u32 mc_addr_count , u32 pad ) ; 
/*--ixgb_mc_addr_list_update--*/
void ixgb_rar_set ( struct ixgb_hw * hw , u8 * addr , u32 index ) ; 
/*--ixgb_rar_set--*/
void ixgb_write_vfta ( struct ixgb_hw * hw , u32 offset , u32 value ) ; 
/*--ixgb_write_vfta--*/
void ixgb_check_for_link ( struct ixgb_hw * hw ) ; 
/*--ixgb_check_for_link--*/
bool ixgb_check_for_bad_link ( struct ixgb_hw * hw ) ; 
/*--ixgb_check_for_bad_link--*/
void ixgb_led_on ( struct ixgb_hw * hw ) ; 
/*--ixgb_led_on--*/
void ixgb_led_off ( struct ixgb_hw * hw ) ; 
/*--ixgb_led_off--*/
bool ixgb_validate_eeprom_checksum ( struct ixgb_hw * hw ) ; 
/*--ixgb_validate_eeprom_checksum--*/
void ixgb_update_eeprom_checksum ( struct ixgb_hw * hw ) ; 
/*--ixgb_update_eeprom_checksum--*/
void ixgb_write_eeprom ( struct ixgb_hw * hw , u16 offset , u16 data ) ; 
/*--ixgb_write_eeprom--*/
u16 ixgb_read_eeprom ( struct ixgb_hw * hw , u16 offset ) ; 
/*--ixgb_read_eeprom--*/
bool ixgb_get_eeprom_data ( struct ixgb_hw * hw ) ; 
/*--ixgb_get_eeprom_data--*/
__le16 ixgb_get_eeprom_word ( struct ixgb_hw * hw , u16 index ) ; 
/*--ixgb_get_eeprom_word--*/
void ixgb_get_ee_mac_addr ( struct ixgb_hw * hw , u8 * mac_addr ) ; 
/*--ixgb_get_ee_mac_addr--*/
u32 ixgb_get_ee_pba_number ( struct ixgb_hw * hw ) ; 
/*--ixgb_get_ee_pba_number--*/
u16 ixgb_get_ee_device_id ( struct ixgb_hw * hw ) ; 
/*--ixgb_get_ee_device_id--*/
void ixgb_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--ixgb_set_ethtool_ops--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ixgb_check_options ( struct ixgb_adapter * adapter ) ; 
/*--ixgb_check_options--*/
void ixgbe_write_eitr ( struct ixgbe_q_vector * q_vector ) ; 
/*--ixgbe_write_eitr--*/
void ixgbe_set_rx_mode ( struct net_device * netdev ) ; 
/*--ixgbe_set_rx_mode--*/
void ixgbe_reinit_locked ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_reinit_locked--*/
int ixgbe_up ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_up--*/
void ixgbe_reset ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_reset--*/
void ixgbe_down ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_down--*/
int ixgbe_init_interrupt_scheme ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_init_interrupt_scheme--*/
void ixgbe_clear_interrupt_scheme ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_clear_interrupt_scheme--*/
int ixgbe_setup_tx_resources ( struct ixgbe_adapter * adapter , struct ixgbe_ring * tx_ring ) ; 
/*--ixgbe_setup_tx_resources--*/
int ixgbe_setup_rx_resources ( struct ixgbe_adapter * adapter , struct ixgbe_ring * rx_ring ) ; 
/*--ixgbe_setup_rx_resources--*/
void ixgbe_free_tx_resources ( struct ixgbe_adapter * adapter , struct ixgbe_ring * tx_ring ) ; 
/*--ixgbe_free_tx_resources--*/
void ixgbe_free_rx_resources ( struct ixgbe_adapter * adapter , struct ixgbe_ring * rx_ring ) ; 
/*--ixgbe_free_rx_resources--*/
void ixgbe_update_stats ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_update_stats--*/
s32 ixgbe_start_hw_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_start_hw_generic--*/
s32 ixgbe_init_hw_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_init_hw_generic--*/
s32 ixgbe_clear_hw_cntrs_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_clear_hw_cntrs_generic--*/
s32 ixgbe_read_pba_num_generic ( struct ixgbe_hw * hw , u32 * pba_num ) ; 
/*--ixgbe_read_pba_num_generic--*/
s32 ixgbe_get_mac_addr_generic ( struct ixgbe_hw * hw , u8 * mac_addr ) ; 
/*--ixgbe_get_mac_addr_generic--*/
s32 ixgbe_get_bus_info_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_get_bus_info_generic--*/
void ixgbe_set_lan_id_multi_port_pcie ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_set_lan_id_multi_port_pcie--*/
s32 ixgbe_stop_adapter_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_stop_adapter_generic--*/
s32 ixgbe_led_on_generic ( struct ixgbe_hw * hw , u32 index ) ; 
/*--ixgbe_led_on_generic--*/
s32 ixgbe_led_off_generic ( struct ixgbe_hw * hw , u32 index ) ; 
/*--ixgbe_led_off_generic--*/
s32 ixgbe_init_eeprom_params_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_init_eeprom_params_generic--*/
s32 ixgbe_write_eeprom_generic ( struct ixgbe_hw * hw , u16 offset , u16 data ) ; 
/*--ixgbe_write_eeprom_generic--*/
s32 ixgbe_read_eeprom_bit_bang_generic ( struct ixgbe_hw * hw , u16 offset , u16 * data ) ; 
/*--ixgbe_read_eeprom_bit_bang_generic--*/
s32 ixgbe_read_eerd_generic ( struct ixgbe_hw * hw , u16 offset , u16 * data ) ; 
/*--ixgbe_read_eerd_generic--*/
s32 ixgbe_poll_eerd_eewr_done ( struct ixgbe_hw * hw , u32 ee_reg ) ; 
/*--ixgbe_poll_eerd_eewr_done--*/
s32 ixgbe_validate_eeprom_checksum_generic ( struct ixgbe_hw * hw , u16 * checksum_val ) ; 
/*--ixgbe_validate_eeprom_checksum_generic--*/
s32 ixgbe_update_eeprom_checksum_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_update_eeprom_checksum_generic--*/
s32 ixgbe_validate_mac_addr ( u8 * mac_addr ) ; 
/*--ixgbe_validate_mac_addr--*/
s32 ixgbe_set_rar_generic ( struct ixgbe_hw * hw , u32 index , u8 * addr , u32 vmdq , u32 enable_addr ) ; 
/*--ixgbe_set_rar_generic--*/
s32 ixgbe_clear_rar_generic ( struct ixgbe_hw * hw , u32 index ) ; 
/*--ixgbe_clear_rar_generic--*/
s32 ixgbe_init_rx_addrs_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_init_rx_addrs_generic--*/
s32 ixgbe_update_uc_addr_list_generic ( struct ixgbe_hw * hw , struct net_device * netdev ) ; 
/*--ixgbe_update_uc_addr_list_generic--*/
s32 ixgbe_update_mc_addr_list_generic ( struct ixgbe_hw * hw , struct net_device * netdev ) ; 
/*--ixgbe_update_mc_addr_list_generic--*/
s32 ixgbe_enable_mc_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_enable_mc_generic--*/
s32 ixgbe_disable_mc_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_disable_mc_generic--*/
s32 ixgbe_fc_enable_generic ( struct ixgbe_hw * hw , s32 packetbuf_num ) ; 
/*--ixgbe_fc_enable_generic--*/
s32 ixgbe_fc_autoneg ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_fc_autoneg--*/
s32 ixgbe_disable_pcie_master ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_disable_pcie_master--*/
s32 ixgbe_acquire_swfw_sync ( struct ixgbe_hw * hw , u16 mask ) ; 
/*--ixgbe_acquire_swfw_sync--*/
void ixgbe_release_swfw_sync ( struct ixgbe_hw * hw , u16 mask ) ; 
/*--ixgbe_release_swfw_sync--*/
s32 ixgbe_enable_rx_dma_generic ( struct ixgbe_hw * hw , u32 regval ) ; 
/*--ixgbe_enable_rx_dma_generic--*/
s32 ixgbe_blink_led_start_generic ( struct ixgbe_hw * hw , u32 index ) ; 
/*--ixgbe_blink_led_start_generic--*/
s32 ixgbe_blink_led_stop_generic ( struct ixgbe_hw * hw , u32 index ) ; 
/*--ixgbe_blink_led_stop_generic--*/
s32 ixgbe_get_san_mac_addr_generic ( struct ixgbe_hw * hw , u8 * san_mac_addr ) ; 
/*--ixgbe_get_san_mac_addr_generic--*/
u32 ixgbe_get_pcie_msix_count_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_get_pcie_msix_count_generic--*/
s32 ixgbe_clear_vmdq_generic ( struct ixgbe_hw * hw , u32 rar , u32 vmdq ) ; 
/*--ixgbe_clear_vmdq_generic--*/
s32 ixgbe_set_vmdq_generic ( struct ixgbe_hw * hw , u32 rar , u32 vmdq ) ; 
/*--ixgbe_set_vmdq_generic--*/
s32 ixgbe_init_uta_tables_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_init_uta_tables_generic--*/
s32 ixgbe_find_vlvf_slot ( struct ixgbe_hw * hw , u32 vlan ) ; 
/*--ixgbe_find_vlvf_slot--*/
s32 ixgbe_set_vfta_generic ( struct ixgbe_hw * hw , u32 vlan , u32 vind , bool vlan_on ) ; 
/*--ixgbe_set_vfta_generic--*/
s32 ixgbe_clear_vfta_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_clear_vfta_generic--*/
s32 ixgbe_check_mac_link_generic ( struct ixgbe_hw * hw , ixgbe_link_speed * speed , bool * link_up , bool link_up_wait_to_complete ) ; 
/*--ixgbe_check_mac_link_generic--*/
s32 ixgbe_get_wwn_prefix_generic ( struct ixgbe_hw * hw , u16 * wwnn_prefix , u16 * wwpn_prefix ) ; 
/*--ixgbe_get_wwn_prefix_generic--*/
void ixgbe_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--ixgbe_set_ethtool_ops--*/
s32 ixgbe_start_mac_link_82599 ( struct ixgbe_hw * hw , bool autoneg_wait_to_complete ) ; 
/*--ixgbe_start_mac_link_82599--*/
void ixgbe_disable_tx_laser_multispeed_fiber ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_disable_tx_laser_multispeed_fiber--*/
void ixgbe_enable_tx_laser_multispeed_fiber ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_enable_tx_laser_multispeed_fiber--*/
void ixgbe_flap_tx_laser_multispeed_fiber ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_flap_tx_laser_multispeed_fiber--*/
s32 ixgbe_setup_mac_link_multispeed_fiber ( struct ixgbe_hw * hw , ixgbe_link_speed speed , bool autoneg , bool autoneg_wait_to_complete ) ; 
/*--ixgbe_setup_mac_link_multispeed_fiber--*/
s32 ixgbe_setup_mac_link_82599 ( struct ixgbe_hw * hw , ixgbe_link_speed speed , bool autoneg , bool autoneg_wait_to_complete ) ; 
/*--ixgbe_setup_mac_link_82599--*/
s32 ixgbe_reinit_fdir_tables_82599 ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_reinit_fdir_tables_82599--*/
s32 ixgbe_init_fdir_signature_82599 ( struct ixgbe_hw * hw , u32 pballoc ) ; 
/*--ixgbe_init_fdir_signature_82599--*/
s32 ixgbe_init_fdir_perfect_82599 ( struct ixgbe_hw * hw , u32 pballoc ) ; 
/*--ixgbe_init_fdir_perfect_82599--*/
s32 ixgbe_atr_set_vlan_id_82599 ( struct ixgbe_atr_input * input , u16 vlan ) ; 
/*--ixgbe_atr_set_vlan_id_82599--*/
s32 ixgbe_atr_set_src_ipv4_82599 ( struct ixgbe_atr_input * input , u32 src_addr ) ; 
/*--ixgbe_atr_set_src_ipv4_82599--*/
s32 ixgbe_atr_set_dst_ipv4_82599 ( struct ixgbe_atr_input * input , u32 dst_addr ) ; 
/*--ixgbe_atr_set_dst_ipv4_82599--*/
s32 ixgbe_atr_set_src_ipv6_82599 ( struct ixgbe_atr_input * input , u32 src_addr_1 , u32 src_addr_2 , u32 src_addr_3 , u32 src_addr_4 ) ; 
/*--ixgbe_atr_set_src_ipv6_82599--*/
s32 ixgbe_atr_set_dst_ipv6_82599 ( struct ixgbe_atr_input * input , u32 dst_addr_1 , u32 dst_addr_2 , u32 dst_addr_3 , u32 dst_addr_4 ) ; 
/*--ixgbe_atr_set_dst_ipv6_82599--*/
s32 ixgbe_atr_set_src_port_82599 ( struct ixgbe_atr_input * input , u16 src_port ) ; 
/*--ixgbe_atr_set_src_port_82599--*/
s32 ixgbe_atr_set_dst_port_82599 ( struct ixgbe_atr_input * input , u16 dst_port ) ; 
/*--ixgbe_atr_set_dst_port_82599--*/
s32 ixgbe_atr_set_flex_byte_82599 ( struct ixgbe_atr_input * input , u16 flex_byte ) ; 
/*--ixgbe_atr_set_flex_byte_82599--*/
s32 ixgbe_atr_set_vm_pool_82599 ( struct ixgbe_atr_input * input , u8 vm_pool ) ; 
/*--ixgbe_atr_set_vm_pool_82599--*/
s32 ixgbe_atr_set_l4type_82599 ( struct ixgbe_atr_input * input , u8 l4type ) ; 
/*--ixgbe_atr_set_l4type_82599--*/
s32 ixgbe_atr_get_dst_ipv6_82599 ( struct ixgbe_atr_input * input , u32 * dst_addr_1 , u32 * dst_addr_2 , u32 * dst_addr_3 , u32 * dst_addr_4 ) ; 
/*--ixgbe_atr_get_dst_ipv6_82599--*/
s32 ixgbe_atr_get_vm_pool_82599 ( struct ixgbe_atr_input * input , u8 * vm_pool ) ; 
/*--ixgbe_atr_get_vm_pool_82599--*/
s32 ixgbe_fdir_add_signature_filter_82599 ( struct ixgbe_hw * hw , struct ixgbe_atr_input * input , u8 queue ) ; 
/*--ixgbe_fdir_add_signature_filter_82599--*/
s32 ixgbe_fdir_add_perfect_filter_82599 ( struct ixgbe_hw * hw , struct ixgbe_atr_input * input , struct ixgbe_atr_input_masks * input_masks , u16 soft_id , u8 queue ) ; 
/*--ixgbe_fdir_add_perfect_filter_82599--*/
s32 ixgbe_identify_phy_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_identify_phy_generic--*/
s32 ixgbe_reset_phy_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_reset_phy_generic--*/
s32 ixgbe_read_phy_reg_generic ( struct ixgbe_hw * hw , u32 reg_addr , u32 device_type , u16 * phy_data ) ; 
/*--ixgbe_read_phy_reg_generic--*/
s32 ixgbe_write_phy_reg_generic ( struct ixgbe_hw * hw , u32 reg_addr , u32 device_type , u16 phy_data ) ; 
/*--ixgbe_write_phy_reg_generic--*/
s32 ixgbe_setup_phy_link_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_setup_phy_link_generic--*/
s32 ixgbe_setup_phy_link_speed_generic ( struct ixgbe_hw * hw , ixgbe_link_speed speed , bool autoneg , bool autoneg_wait_to_complete ) ; 
/*--ixgbe_setup_phy_link_speed_generic--*/
s32 ixgbe_reset_phy_nl ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_reset_phy_nl--*/
s32 ixgbe_identify_sfp_module_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_identify_sfp_module_generic--*/
s32 ixgbe_get_sfp_init_sequence_offsets ( struct ixgbe_hw * hw , u16 * list_offset , u16 * data_offset ) ; 
/*--ixgbe_get_sfp_init_sequence_offsets--*/
s32 ixgbe_read_i2c_eeprom_generic ( struct ixgbe_hw * hw , u8 byte_offset , u8 * eeprom_data ) ; 
/*--ixgbe_read_i2c_eeprom_generic--*/
s32 ixgbe_write_i2c_eeprom_generic ( struct ixgbe_hw * hw , u8 byte_offset , u8 eeprom_data ) ; 
/*--ixgbe_write_i2c_eeprom_generic--*/
s32 ixgbe_read_i2c_byte_generic ( struct ixgbe_hw * hw , u8 byte_offset , u8 dev_addr , u8 * data ) ; 
/*--ixgbe_read_i2c_byte_generic--*/
s32 ixgbe_write_i2c_byte_generic ( struct ixgbe_hw * hw , u8 byte_offset , u8 dev_addr , u8 data ) ; 
/*--ixgbe_write_i2c_byte_generic--*/
s32 ixgbe_check_phy_link_tnx ( struct ixgbe_hw * hw , ixgbe_link_speed * speed , bool * link_up ) ; 
/*--ixgbe_check_phy_link_tnx--*/
s32 ixgbe_get_phy_firmware_version_tnx ( struct ixgbe_hw * hw , u16 * firmware_version ) ; 
/*--ixgbe_get_phy_firmware_version_tnx--*/
s32 ixgbe_tn_check_overtemp ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_tn_check_overtemp--*/
int ixgbe_set_vf_multicasts ( struct ixgbe_adapter * adapter , int entries , u16 * hash_list , u32 vf ) ; 
/*--ixgbe_set_vf_multicasts--*/
void ixgbe_restore_vf_multicasts ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_restore_vf_multicasts--*/
int ixgbe_set_vf_vlan ( struct ixgbe_adapter * adapter , int add , int vid , u32 vf ) ; 
/*--ixgbe_set_vf_vlan--*/
void ixgbe_set_vmolr ( struct ixgbe_hw * hw , u32 vf , bool aupe ) ; 
/*--ixgbe_set_vmolr--*/
int ixgbe_set_vf_mac ( struct ixgbe_adapter * adapter , int vf , unsigned char * mac_addr ) ; 
/*--ixgbe_set_vf_mac--*/
int ixgbe_vf_configuration ( struct pci_dev * pdev , unsigned int event_mask ) ; 
/*--ixgbe_vf_configuration--*/
void ixgbe_msg_task ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_msg_task--*/
void ixgbe_disable_tx_rx ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_disable_tx_rx--*/
void ixgbe_ping_all_vfs ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_ping_all_vfs--*/
int ixgbe_ndo_set_vf_mac ( struct net_device * netdev , int vf , u8 * mac ) ; 
/*--ixgbe_ndo_set_vf_mac--*/
int ixgbe_ndo_set_vf_vlan ( struct net_device * netdev , int vf , u16 vlan , u8 qos ) ; 
/*--ixgbe_ndo_set_vf_vlan--*/
int ixgbe_ndo_set_vf_bw ( struct net_device * netdev , int vf , int tx_rate ) ; 
/*--ixgbe_ndo_set_vf_bw--*/
int ixgbe_ndo_get_vf_config ( struct net_device * netdev , int vf , struct ifla_vf_info * ivi ) ; 
/*--ixgbe_ndo_get_vf_config--*/
s32 ixgbe_read_mbx ( struct ixgbe_hw * hw , u32 * msg , u16 size , u16 mbx_id ) ; 
/*--ixgbe_read_mbx--*/
s32 ixgbe_write_mbx ( struct ixgbe_hw * hw , u32 * msg , u16 size , u16 mbx_id ) ; 
/*--ixgbe_write_mbx--*/
s32 ixgbe_check_for_msg ( struct ixgbe_hw * hw , u16 mbx_id ) ; 
/*--ixgbe_check_for_msg--*/
s32 ixgbe_check_for_ack ( struct ixgbe_hw * hw , u16 mbx_id ) ; 
/*--ixgbe_check_for_ack--*/
s32 ixgbe_check_for_rst ( struct ixgbe_hw * hw , u16 mbx_id ) ; 
/*--ixgbe_check_for_rst--*/
s32 ixgbe_read_posted_mbx ( struct ixgbe_hw * hw , u32 * msg , u16 size , u16 mbx_id ) ; 
/*--ixgbe_read_posted_mbx--*/
s32 ixgbe_write_posted_mbx ( struct ixgbe_hw * hw , u32 * msg , u16 size , u16 mbx_id ) ; 
/*--ixgbe_write_posted_mbx--*/
void ixgbe_init_mbx_ops_generic ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_init_mbx_ops_generic--*/
void ixgbe_init_mbx_params_pf ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_init_mbx_params_pf--*/
s32 ixgbe_dcb_check_config ( struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_check_config--*/
s32 ixgbe_dcb_calculate_tc_credits ( struct ixgbe_dcb_config * dcb_config , u8 direction ) ; 
/*--ixgbe_dcb_calculate_tc_credits--*/
s32 ixgbe_dcb_get_tc_stats ( struct ixgbe_hw * hw , struct ixgbe_hw_stats * stats , u8 tc_count ) ; 
/*--ixgbe_dcb_get_tc_stats--*/
s32 ixgbe_dcb_get_pfc_stats ( struct ixgbe_hw * hw , struct ixgbe_hw_stats * stats , u8 tc_count ) ; 
/*--ixgbe_dcb_get_pfc_stats--*/
s32 ixgbe_dcb_config_rx_arbiter ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_rx_arbiter--*/
s32 ixgbe_dcb_config_tx_desc_arbiter ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_tx_desc_arbiter--*/
s32 ixgbe_dcb_config_tx_data_arbiter ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_tx_data_arbiter--*/
s32 ixgbe_dcb_config_pfc ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_pfc--*/
s32 ixgbe_dcb_config_tc_stats ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_dcb_config_tc_stats--*/
s32 ixgbe_dcb_hw_config ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_hw_config--*/
s32 ixgbe_dcb_get_tc_stats_82598 ( struct ixgbe_hw * hw , struct ixgbe_hw_stats * stats , u8 tc_count ) ; 
/*--ixgbe_dcb_get_tc_stats_82598--*/
s32 ixgbe_dcb_get_pfc_stats_82598 ( struct ixgbe_hw * hw , struct ixgbe_hw_stats * stats , u8 tc_count ) ; 
/*--ixgbe_dcb_get_pfc_stats_82598--*/
s32 ixgbe_dcb_config_rx_arbiter_82598 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_rx_arbiter_82598--*/
s32 ixgbe_dcb_config_tx_desc_arbiter_82598 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_tx_desc_arbiter_82598--*/
s32 ixgbe_dcb_config_tx_data_arbiter_82598 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_tx_data_arbiter_82598--*/
s32 ixgbe_dcb_config_pfc_82598 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_pfc_82598--*/
s32 ixgbe_dcb_config_tc_stats_82598 ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_dcb_config_tc_stats_82598--*/
s32 ixgbe_dcb_hw_config_82598 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_hw_config_82598--*/
s32 ixgbe_dcb_get_tc_stats_82599 ( struct ixgbe_hw * hw , struct ixgbe_hw_stats * stats , u8 tc_count ) ; 
/*--ixgbe_dcb_get_tc_stats_82599--*/
s32 ixgbe_dcb_get_pfc_stats_82599 ( struct ixgbe_hw * hw , struct ixgbe_hw_stats * stats , u8 tc_count ) ; 
/*--ixgbe_dcb_get_pfc_stats_82599--*/
s32 ixgbe_dcb_config_packet_buffers_82599 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_packet_buffers_82599--*/
s32 ixgbe_dcb_config_rx_arbiter_82599 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_rx_arbiter_82599--*/
s32 ixgbe_dcb_config_tx_desc_arbiter_82599 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_tx_desc_arbiter_82599--*/
s32 ixgbe_dcb_config_tx_data_arbiter_82599 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_tx_data_arbiter_82599--*/
s32 ixgbe_dcb_config_pfc_82599 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_config_pfc_82599--*/
s32 ixgbe_dcb_config_tc_stats_82599 ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_dcb_config_tc_stats_82599--*/
s32 ixgbe_dcb_config_82599 ( struct ixgbe_hw * hw ) ; 
/*--ixgbe_dcb_config_82599--*/
s32 ixgbe_dcb_hw_config_82599 ( struct ixgbe_hw * hw , struct ixgbe_dcb_config * dcb_config ) ; 
/*--ixgbe_dcb_hw_config_82599--*/
int ixgbe_copy_dcb_cfg ( struct ixgbe_dcb_config * src_dcb_cfg , struct ixgbe_dcb_config * dst_dcb_cfg , int tc_max ) ; 
/*--ixgbe_copy_dcb_cfg--*/
int ixgbe_fcoe_ddp_put ( struct net_device * netdev , u16 xid ) ; 
/*--ixgbe_fcoe_ddp_put--*/
int ixgbe_fcoe_ddp_get ( struct net_device * netdev , u16 xid , struct scatterlist * sgl , unsigned int sgc ) ; 
/*--ixgbe_fcoe_ddp_get--*/
int ixgbe_fcoe_ddp ( struct ixgbe_adapter * adapter , union ixgbe_adv_rx_desc * rx_desc , struct sk_buff * skb ) ; 
/*--ixgbe_fcoe_ddp--*/
int ixgbe_fso ( struct ixgbe_adapter * adapter , struct ixgbe_ring * tx_ring , struct sk_buff * skb , u32 tx_flags , u8 * hdr_len ) ; 
/*--ixgbe_fso--*/
void ixgbe_configure_fcoe ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_configure_fcoe--*/
void ixgbe_cleanup_fcoe ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_cleanup_fcoe--*/
int ixgbe_fcoe_enable ( struct net_device * netdev ) ; 
/*--ixgbe_fcoe_enable--*/
int ixgbe_fcoe_disable ( struct net_device * netdev ) ; 
/*--ixgbe_fcoe_disable--*/
u8 ixgbe_fcoe_getapp ( struct ixgbe_adapter * adapter ) ; 
/*--ixgbe_fcoe_getapp--*/
u8 ixgbe_fcoe_setapp ( struct ixgbe_adapter * adapter , u8 up ) ; 
/*--ixgbe_fcoe_setapp--*/
int ixgbe_fcoe_get_wwn ( struct net_device * netdev , u64 * wwn , int type ) ; 
/*--ixgbe_fcoe_get_wwn--*/
u32 mlx4_bitmap_alloc ( struct mlx4_bitmap * bitmap ) ; 
/*--mlx4_bitmap_alloc--*/
void mlx4_bitmap_free ( struct mlx4_bitmap * bitmap , u32 obj ) ; 
/*--mlx4_bitmap_free--*/
u32 mlx4_bitmap_alloc_range ( struct mlx4_bitmap * bitmap , int cnt , int align ) ; 
/*--mlx4_bitmap_alloc_range--*/
void mlx4_bitmap_free_range ( struct mlx4_bitmap * bitmap , u32 obj , int cnt ) ; 
/*--mlx4_bitmap_free_range--*/
int mlx4_bitmap_init ( struct mlx4_bitmap * bitmap , u32 num , u32 mask , u32 reserved_bot , u32 reserved_top ) ; 
/*--mlx4_bitmap_init--*/
void mlx4_bitmap_cleanup ( struct mlx4_bitmap * bitmap ) ; 
/*--mlx4_bitmap_cleanup--*/
int mlx4_buf_alloc ( struct mlx4_dev * dev , int size , int max_direct , struct mlx4_buf * buf ) ; 
/*--mlx4_buf_alloc--*/
void mlx4_buf_free ( struct mlx4_dev * dev , int size , struct mlx4_buf * buf ) ; 
/*--mlx4_buf_free--*/
int mlx4_db_alloc ( struct mlx4_dev * dev , struct mlx4_db * db , int order ) ; 
/*--mlx4_db_alloc--*/
void mlx4_db_free ( struct mlx4_dev * dev , struct mlx4_db * db ) ; 
/*--mlx4_db_free--*/
int mlx4_alloc_hwq_res ( struct mlx4_dev * dev , struct mlx4_hwq_resources * wqres , int size , int max_direct ) ; 
/*--mlx4_alloc_hwq_res--*/
void mlx4_free_hwq_res ( struct mlx4_dev * dev , struct mlx4_hwq_resources * wqres , int size ) ; 
/*--mlx4_free_hwq_res--*/
void mlx4_start_catas_poll ( struct mlx4_dev * dev ) ; 
/*--mlx4_start_catas_poll--*/
void mlx4_stop_catas_poll ( struct mlx4_dev * dev ) ; 
/*--mlx4_stop_catas_poll--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) mlx4_catas_init ( void ) ; 
/*--mlx4_catas_init--*/
void mlx4_cmd_event ( struct mlx4_dev * dev , u16 token , u8 status , u64 out_param ) ; 
/*--mlx4_cmd_event--*/
int __mlx4_cmd ( struct mlx4_dev * dev , u64 in_param , u64 * out_param , int out_is_imm , u32 in_modifier , u8 op_modifier , u16 op , unsigned long timeout ) ; 
/*--__mlx4_cmd--*/
int mlx4_cmd_init ( struct mlx4_dev * dev ) ; 
/*--mlx4_cmd_init--*/
void mlx4_cmd_cleanup ( struct mlx4_dev * dev ) ; 
/*--mlx4_cmd_cleanup--*/
int mlx4_cmd_use_events ( struct mlx4_dev * dev ) ; 
/*--mlx4_cmd_use_events--*/
void mlx4_cmd_use_polling ( struct mlx4_dev * dev ) ; 
/*--mlx4_cmd_use_polling--*/
struct mlx4_cmd_mailbox * mlx4_alloc_cmd_mailbox ( struct mlx4_dev * dev ) ; 
/*--mlx4_alloc_cmd_mailbox--*/
void mlx4_free_cmd_mailbox ( struct mlx4_dev * dev , struct mlx4_cmd_mailbox * mailbox ) ; 
/*--mlx4_free_cmd_mailbox--*/
void mlx4_cq_completion ( struct mlx4_dev * dev , u32 cqn ) ; 
/*--mlx4_cq_completion--*/
void mlx4_cq_event ( struct mlx4_dev * dev , u32 cqn , int event_type ) ; 
/*--mlx4_cq_event--*/
int mlx4_cq_modify ( struct mlx4_dev * dev , struct mlx4_cq * cq , u16 count , u16 period ) ; 
/*--mlx4_cq_modify--*/
int mlx4_cq_resize ( struct mlx4_dev * dev , struct mlx4_cq * cq , int entries , struct mlx4_mtt * mtt ) ; 
/*--mlx4_cq_resize--*/
int mlx4_cq_alloc ( struct mlx4_dev * dev , int nent , struct mlx4_mtt * mtt , struct mlx4_uar * uar , u64 db_rec , struct mlx4_cq * cq , unsigned vector , int collapsed ) ; 
/*--mlx4_cq_alloc--*/
void mlx4_cq_free ( struct mlx4_dev * dev , struct mlx4_cq * cq ) ; 
/*--mlx4_cq_free--*/
int mlx4_init_cq_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_init_cq_table--*/
void mlx4_cleanup_cq_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_cleanup_cq_table--*/
int mlx4_alloc_eq_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_alloc_eq_table--*/
void mlx4_free_eq_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_free_eq_table--*/
int mlx4_init_eq_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_init_eq_table--*/
void mlx4_cleanup_eq_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_cleanup_eq_table--*/
int mlx4_MOD_STAT_CFG ( struct mlx4_dev * dev , struct mlx4_mod_stat_cfg * cfg ) ; 
/*--mlx4_MOD_STAT_CFG--*/
int mlx4_QUERY_DEV_CAP ( struct mlx4_dev * dev , struct mlx4_dev_cap * dev_cap ) ; 
/*--mlx4_QUERY_DEV_CAP--*/
int mlx4_map_cmd ( struct mlx4_dev * dev , u16 op , struct mlx4_icm * icm , u64 virt ) ; 
/*--mlx4_map_cmd--*/
int mlx4_MAP_FA ( struct mlx4_dev * dev , struct mlx4_icm * icm ) ; 
/*--mlx4_MAP_FA--*/
int mlx4_UNMAP_FA ( struct mlx4_dev * dev ) ; 
/*--mlx4_UNMAP_FA--*/
int mlx4_RUN_FW ( struct mlx4_dev * dev ) ; 
/*--mlx4_RUN_FW--*/
int mlx4_QUERY_FW ( struct mlx4_dev * dev ) ; 
/*--mlx4_QUERY_FW--*/
int mlx4_QUERY_ADAPTER ( struct mlx4_dev * dev , struct mlx4_adapter * adapter ) ; 
/*--mlx4_QUERY_ADAPTER--*/
int mlx4_INIT_HCA ( struct mlx4_dev * dev , struct mlx4_init_hca_param * param ) ; 
/*--mlx4_INIT_HCA--*/
int mlx4_INIT_PORT ( struct mlx4_dev * dev , int port ) ; 
/*--mlx4_INIT_PORT--*/
int mlx4_CLOSE_PORT ( struct mlx4_dev * dev , int port ) ; 
/*--mlx4_CLOSE_PORT--*/
int mlx4_CLOSE_HCA ( struct mlx4_dev * dev , int panic ) ; 
/*--mlx4_CLOSE_HCA--*/
int mlx4_SET_ICM_SIZE ( struct mlx4_dev * dev , u64 icm_size , u64 * aux_pages ) ; 
/*--mlx4_SET_ICM_SIZE--*/
int mlx4_NOP ( struct mlx4_dev * dev ) ; 
/*--mlx4_NOP--*/
void mlx4_free_icm ( struct mlx4_dev * dev , struct mlx4_icm * icm , int coherent ) ; 
/*--mlx4_free_icm--*/
struct mlx4_icm * mlx4_alloc_icm ( struct mlx4_dev * dev , int npages , gfp_t gfp_mask , int coherent ) ; 
/*--mlx4_alloc_icm--*/
int mlx4_UNMAP_ICM ( struct mlx4_dev * dev , u64 virt , u32 page_count ) ; 
/*--mlx4_UNMAP_ICM--*/
int mlx4_MAP_ICM_page ( struct mlx4_dev * dev , u64 dma_addr , u64 virt ) ; 
/*--mlx4_MAP_ICM_page--*/
int mlx4_MAP_ICM_AUX ( struct mlx4_dev * dev , struct mlx4_icm * icm ) ; 
/*--mlx4_MAP_ICM_AUX--*/
int mlx4_UNMAP_ICM_AUX ( struct mlx4_dev * dev ) ; 
/*--mlx4_UNMAP_ICM_AUX--*/
int mlx4_table_get ( struct mlx4_dev * dev , struct mlx4_icm_table * table , int obj ) ; 
/*--mlx4_table_get--*/
void mlx4_table_put ( struct mlx4_dev * dev , struct mlx4_icm_table * table , int obj ) ; 
/*--mlx4_table_put--*/
void * mlx4_table_find ( struct mlx4_icm_table * table , int obj , dma_addr_t * dma_handle ) ; 
/*--mlx4_table_find--*/
int mlx4_table_get_range ( struct mlx4_dev * dev , struct mlx4_icm_table * table , int start , int end ) ; 
/*--mlx4_table_get_range--*/
void mlx4_table_put_range ( struct mlx4_dev * dev , struct mlx4_icm_table * table , int start , int end ) ; 
/*--mlx4_table_put_range--*/
int mlx4_init_icm_table ( struct mlx4_dev * dev , struct mlx4_icm_table * table , u64 virt , int obj_size , int nobj , int reserved , int use_lowmem , int use_coherent ) ; 
/*--mlx4_init_icm_table--*/
void mlx4_cleanup_icm_table ( struct mlx4_dev * dev , struct mlx4_icm_table * table ) ; 
/*--mlx4_cleanup_icm_table--*/
int mlx4_register_interface ( struct mlx4_interface * intf ) ; 
/*--mlx4_register_interface--*/
void mlx4_unregister_interface ( struct mlx4_interface * intf ) ; 
/*--mlx4_unregister_interface--*/
void mlx4_dispatch_event ( struct mlx4_dev * dev , enum mlx4_dev_event type , int port ) ; 
/*--mlx4_dispatch_event--*/
int mlx4_register_device ( struct mlx4_dev * dev ) ; 
/*--mlx4_register_device--*/
void mlx4_unregister_device ( struct mlx4_dev * dev ) ; 
/*--mlx4_unregister_device--*/
int mlx4_check_port_params ( struct mlx4_dev * dev , enum mlx4_port_type * port_type ) ; 
/*--mlx4_check_port_params--*/
int mlx4_change_port_types ( struct mlx4_dev * dev , enum mlx4_port_type * port_types ) ; 
/*--mlx4_change_port_types--*/
int mlx4_restart_one ( struct pci_dev * pdev ) ; 
/*--mlx4_restart_one--*/
int mlx4_multicast_attach ( struct mlx4_dev * dev , struct mlx4_qp * qp , u8 gid [ 16 ] , int block_mcast_loopback ) ; 
/*--mlx4_multicast_attach--*/
int mlx4_multicast_detach ( struct mlx4_dev * dev , struct mlx4_qp * qp , u8 gid [ 16 ] ) ; 
/*--mlx4_multicast_detach--*/
int mlx4_init_mcg_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_init_mcg_table--*/
void mlx4_cleanup_mcg_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_cleanup_mcg_table--*/
int mlx4_mtt_init ( struct mlx4_dev * dev , int npages , int page_shift , struct mlx4_mtt * mtt ) ; 
/*--mlx4_mtt_init--*/
void mlx4_mtt_cleanup ( struct mlx4_dev * dev , struct mlx4_mtt * mtt ) ; 
/*--mlx4_mtt_cleanup--*/
u64 mlx4_mtt_addr ( struct mlx4_dev * dev , struct mlx4_mtt * mtt ) ; 
/*--mlx4_mtt_addr--*/
int mlx4_mr_alloc ( struct mlx4_dev * dev , u32 pd , u64 iova , u64 size , u32 access , int npages , int page_shift , struct mlx4_mr * mr ) ; 
/*--mlx4_mr_alloc--*/
void mlx4_mr_free ( struct mlx4_dev * dev , struct mlx4_mr * mr ) ; 
/*--mlx4_mr_free--*/
int mlx4_mr_enable ( struct mlx4_dev * dev , struct mlx4_mr * mr ) ; 
/*--mlx4_mr_enable--*/
int mlx4_write_mtt ( struct mlx4_dev * dev , struct mlx4_mtt * mtt , int start_index , int npages , u64 * page_list ) ; 
/*--mlx4_write_mtt--*/
int mlx4_buf_write_mtt ( struct mlx4_dev * dev , struct mlx4_mtt * mtt , struct mlx4_buf * buf ) ; 
/*--mlx4_buf_write_mtt--*/
int mlx4_init_mr_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_init_mr_table--*/
void mlx4_cleanup_mr_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_cleanup_mr_table--*/
int mlx4_map_phys_fmr ( struct mlx4_dev * dev , struct mlx4_fmr * fmr , u64 * page_list , int npages , u64 iova , u32 * lkey , u32 * rkey ) ; 
/*--mlx4_map_phys_fmr--*/
int mlx4_fmr_alloc ( struct mlx4_dev * dev , u32 pd , u32 access , int max_pages , int max_maps , u8 page_shift , struct mlx4_fmr * fmr ) ; 
/*--mlx4_fmr_alloc--*/
int mlx4_fmr_enable ( struct mlx4_dev * dev , struct mlx4_fmr * fmr ) ; 
/*--mlx4_fmr_enable--*/
void mlx4_fmr_unmap ( struct mlx4_dev * dev , struct mlx4_fmr * fmr , u32 * lkey , u32 * rkey ) ; 
/*--mlx4_fmr_unmap--*/
int mlx4_fmr_free ( struct mlx4_dev * dev , struct mlx4_fmr * fmr ) ; 
/*--mlx4_fmr_free--*/
int mlx4_SYNC_TPT ( struct mlx4_dev * dev ) ; 
/*--mlx4_SYNC_TPT--*/
int mlx4_pd_alloc ( struct mlx4_dev * dev , u32 * pdn ) ; 
/*--mlx4_pd_alloc--*/
void mlx4_pd_free ( struct mlx4_dev * dev , u32 pdn ) ; 
/*--mlx4_pd_free--*/
int mlx4_init_pd_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_init_pd_table--*/
void mlx4_cleanup_pd_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_cleanup_pd_table--*/
int mlx4_uar_alloc ( struct mlx4_dev * dev , struct mlx4_uar * uar ) ; 
/*--mlx4_uar_alloc--*/
void mlx4_uar_free ( struct mlx4_dev * dev , struct mlx4_uar * uar ) ; 
/*--mlx4_uar_free--*/
int mlx4_init_uar_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_init_uar_table--*/
void mlx4_cleanup_uar_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_cleanup_uar_table--*/
void mlx4_init_mac_table ( struct mlx4_dev * dev , struct mlx4_mac_table * table ) ; 
/*--mlx4_init_mac_table--*/
void mlx4_init_vlan_table ( struct mlx4_dev * dev , struct mlx4_vlan_table * table ) ; 
/*--mlx4_init_vlan_table--*/
int mlx4_register_mac ( struct mlx4_dev * dev , u8 port , u64 mac , int * index ) ; 
/*--mlx4_register_mac--*/
void mlx4_unregister_mac ( struct mlx4_dev * dev , u8 port , int index ) ; 
/*--mlx4_unregister_mac--*/
int mlx4_register_vlan ( struct mlx4_dev * dev , u8 port , u16 vlan , int * index ) ; 
/*--mlx4_register_vlan--*/
void mlx4_unregister_vlan ( struct mlx4_dev * dev , u8 port , int index ) ; 
/*--mlx4_unregister_vlan--*/
int mlx4_get_port_ib_caps ( struct mlx4_dev * dev , u8 port , __be32 * caps ) ; 
/*--mlx4_get_port_ib_caps--*/
int mlx4_SET_PORT ( struct mlx4_dev * dev , u8 port ) ; 
/*--mlx4_SET_PORT--*/
u64 mlx4_make_profile ( struct mlx4_dev * dev , struct mlx4_profile * request , struct mlx4_dev_cap * dev_cap , struct mlx4_init_hca_param * init_hca ) ; 
/*--mlx4_make_profile--*/
void mlx4_qp_event ( struct mlx4_dev * dev , u32 qpn , int event_type ) ; 
/*--mlx4_qp_event--*/
int mlx4_qp_modify ( struct mlx4_dev * dev , struct mlx4_mtt * mtt , enum mlx4_qp_state cur_state , enum mlx4_qp_state new_state , struct mlx4_qp_context * context , enum mlx4_qp_optpar optpar , int sqd_event , struct mlx4_qp * qp ) ; 
/*--mlx4_qp_modify--*/
int mlx4_qp_reserve_range ( struct mlx4_dev * dev , int cnt , int align , int * base ) ; 
/*--mlx4_qp_reserve_range--*/
void mlx4_qp_release_range ( struct mlx4_dev * dev , int base_qpn , int cnt ) ; 
/*--mlx4_qp_release_range--*/
int mlx4_qp_alloc ( struct mlx4_dev * dev , int qpn , struct mlx4_qp * qp ) ; 
/*--mlx4_qp_alloc--*/
void mlx4_qp_remove ( struct mlx4_dev * dev , struct mlx4_qp * qp ) ; 
/*--mlx4_qp_remove--*/
void mlx4_qp_free ( struct mlx4_dev * dev , struct mlx4_qp * qp ) ; 
/*--mlx4_qp_free--*/
int mlx4_init_qp_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_init_qp_table--*/
void mlx4_cleanup_qp_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_cleanup_qp_table--*/
int mlx4_qp_query ( struct mlx4_dev * dev , struct mlx4_qp * qp , struct mlx4_qp_context * context ) ; 
/*--mlx4_qp_query--*/
int mlx4_qp_to_ready ( struct mlx4_dev * dev , struct mlx4_mtt * mtt , struct mlx4_qp_context * context , struct mlx4_qp * qp , enum mlx4_qp_state * qp_state ) ; 
/*--mlx4_qp_to_ready--*/
int mlx4_reset ( struct mlx4_dev * dev ) ; 
/*--mlx4_reset--*/
void mlx4_do_sense_ports ( struct mlx4_dev * dev , enum mlx4_port_type * stype , enum mlx4_port_type * defaults ) ; 
/*--mlx4_do_sense_ports--*/
void mlx4_start_sense ( struct mlx4_dev * dev ) ; 
/*--mlx4_start_sense--*/
void mlx4_stop_sense ( struct mlx4_dev * dev ) ; 
/*--mlx4_stop_sense--*/
void mlx4_sense_init ( struct mlx4_dev * dev ) ; 
/*--mlx4_sense_init--*/
void mlx4_srq_event ( struct mlx4_dev * dev , u32 srqn , int event_type ) ; 
/*--mlx4_srq_event--*/
int mlx4_srq_alloc ( struct mlx4_dev * dev , u32 pdn , struct mlx4_mtt * mtt , u64 db_rec , struct mlx4_srq * srq ) ; 
/*--mlx4_srq_alloc--*/
void mlx4_srq_free ( struct mlx4_dev * dev , struct mlx4_srq * srq ) ; 
/*--mlx4_srq_free--*/
int mlx4_srq_arm ( struct mlx4_dev * dev , struct mlx4_srq * srq , int limit_watermark ) ; 
/*--mlx4_srq_arm--*/
int mlx4_srq_query ( struct mlx4_dev * dev , struct mlx4_srq * srq , int * limit_watermark ) ; 
/*--mlx4_srq_query--*/
int mlx4_init_srq_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_init_srq_table--*/
void mlx4_cleanup_srq_table ( struct mlx4_dev * dev ) ; 
/*--mlx4_cleanup_srq_table--*/
int mlx4_en_create_tx_ring ( struct mlx4_en_priv * priv , struct mlx4_en_tx_ring * ring , u32 size , u16 stride ) ; 
/*--mlx4_en_create_tx_ring--*/
void mlx4_en_destroy_tx_ring ( struct mlx4_en_priv * priv , struct mlx4_en_tx_ring * ring ) ; 
/*--mlx4_en_destroy_tx_ring--*/
int mlx4_en_activate_tx_ring ( struct mlx4_en_priv * priv , struct mlx4_en_tx_ring * ring , int cq ) ; 
/*--mlx4_en_activate_tx_ring--*/
void mlx4_en_deactivate_tx_ring ( struct mlx4_en_priv * priv , struct mlx4_en_tx_ring * ring ) ; 
/*--mlx4_en_deactivate_tx_ring--*/
int mlx4_en_free_tx_buf ( struct net_device * dev , struct mlx4_en_tx_ring * ring ) ; 
/*--mlx4_en_free_tx_buf--*/
void mlx4_en_tx_irq ( struct mlx4_cq * mcq ) ; 
/*--mlx4_en_tx_irq--*/
void mlx4_en_poll_tx_cq ( unsigned long data ) ; 
/*--mlx4_en_poll_tx_cq--*/
u16 mlx4_en_select_queue ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--mlx4_en_select_queue--*/
netdev_tx_t mlx4_en_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--mlx4_en_xmit--*/
int mlx4_en_create_rx_ring ( struct mlx4_en_priv * priv , struct mlx4_en_rx_ring * ring , u32 size , u16 stride ) ; 
/*--mlx4_en_create_rx_ring--*/
int mlx4_en_activate_rx_rings ( struct mlx4_en_priv * priv ) ; 
/*--mlx4_en_activate_rx_rings--*/
void mlx4_en_destroy_rx_ring ( struct mlx4_en_priv * priv , struct mlx4_en_rx_ring * ring ) ; 
/*--mlx4_en_destroy_rx_ring--*/
void mlx4_en_deactivate_rx_ring ( struct mlx4_en_priv * priv , struct mlx4_en_rx_ring * ring ) ; 
/*--mlx4_en_deactivate_rx_ring--*/
int mlx4_en_process_rx_cq ( struct net_device * dev , struct mlx4_en_cq * cq , int budget ) ; 
/*--mlx4_en_process_rx_cq--*/
void mlx4_en_rx_irq ( struct mlx4_cq * mcq ) ; 
/*--mlx4_en_rx_irq--*/
int mlx4_en_poll_rx_cq ( struct napi_struct * napi , int budget ) ; 
/*--mlx4_en_poll_rx_cq--*/
void mlx4_en_calc_rx_buf ( struct net_device * dev ) ; 
/*--mlx4_en_calc_rx_buf--*/
int mlx4_en_config_rss_steer ( struct mlx4_en_priv * priv ) ; 
/*--mlx4_en_config_rss_steer--*/
void mlx4_en_release_rss_steer ( struct mlx4_en_priv * priv ) ; 
/*--mlx4_en_release_rss_steer--*/
int mlx4_SET_MCAST_FLTR ( struct mlx4_dev * dev , u8 port , u64 mac , u64 clear , u8 mode ) ; 
/*--mlx4_SET_MCAST_FLTR--*/
int mlx4_SET_VLAN_FLTR ( struct mlx4_dev * dev , u8 port , struct vlan_group * grp ) ; 
/*--mlx4_SET_VLAN_FLTR--*/
int mlx4_SET_PORT_general ( struct mlx4_dev * dev , u8 port , int mtu , u8 pptx , u8 pfctx , u8 pprx , u8 pfcrx ) ; 
/*--mlx4_SET_PORT_general--*/
int mlx4_SET_PORT_qpn_calc ( struct mlx4_dev * dev , u8 port , u32 base_qpn , u8 promisc ) ; 
/*--mlx4_SET_PORT_qpn_calc--*/
int mlx4_en_DUMP_ETH_STATS ( struct mlx4_en_dev * mdev , u8 port , u8 reset ) ; 
/*--mlx4_en_DUMP_ETH_STATS--*/
int mlx4_en_create_cq ( struct mlx4_en_priv * priv , struct mlx4_en_cq * cq , int entries , int ring , enum cq_type mode ) ; 
/*--mlx4_en_create_cq--*/
int mlx4_en_activate_cq ( struct mlx4_en_priv * priv , struct mlx4_en_cq * cq ) ; 
/*--mlx4_en_activate_cq--*/
void mlx4_en_destroy_cq ( struct mlx4_en_priv * priv , struct mlx4_en_cq * cq ) ; 
/*--mlx4_en_destroy_cq--*/
void mlx4_en_deactivate_cq ( struct mlx4_en_priv * priv , struct mlx4_en_cq * cq ) ; 
/*--mlx4_en_deactivate_cq--*/
int mlx4_en_set_cq_moder ( struct mlx4_en_priv * priv , struct mlx4_en_cq * cq ) ; 
/*--mlx4_en_set_cq_moder--*/
int mlx4_en_arm_cq ( struct mlx4_en_priv * priv , struct mlx4_en_cq * cq ) ; 
/*--mlx4_en_arm_cq--*/
void mlx4_en_fill_qp_context ( struct mlx4_en_priv * priv , int size , int stride , int is_tx , int rss , int qpn , int cqn , struct mlx4_qp_context * context ) ; 
/*--mlx4_en_fill_qp_context--*/
int mlx4_en_map_buffer ( struct mlx4_buf * buf ) ; 
/*--mlx4_en_map_buffer--*/
void mlx4_en_unmap_buffer ( struct mlx4_buf * buf ) ; 
/*--mlx4_en_unmap_buffer--*/
void mlx4_en_sqp_event ( struct mlx4_qp * qp , enum mlx4_event event ) ; 
/*--mlx4_en_sqp_event--*/
int mlx4_en_start_port ( struct net_device * dev ) ; 
/*--mlx4_en_start_port--*/
void mlx4_en_stop_port ( struct net_device * dev ) ; 
/*--mlx4_en_stop_port--*/
void mlx4_en_free_resources ( struct mlx4_en_priv * priv ) ; 
/*--mlx4_en_free_resources--*/
int mlx4_en_alloc_resources ( struct mlx4_en_priv * priv ) ; 
/*--mlx4_en_alloc_resources--*/
void mlx4_en_destroy_netdev ( struct net_device * dev ) ; 
/*--mlx4_en_destroy_netdev--*/
int mlx4_en_init_netdev ( struct mlx4_en_dev * mdev , int port , struct mlx4_en_port_profile * prof ) ; 
/*--mlx4_en_init_netdev--*/
int netxen_pcie_sem_lock ( struct netxen_adapter * adapter , int sem , u32 id_reg ) ; 
/*--netxen_pcie_sem_lock--*/
void netxen_pcie_sem_unlock ( struct netxen_adapter * adapter , int sem ) ; 
/*--netxen_pcie_sem_unlock--*/
int netxen_niu_xg_init_port ( struct netxen_adapter * adapter , int port ) ; 
/*--netxen_niu_xg_init_port--*/
int netxen_niu_disable_xg_port ( struct netxen_adapter * adapter ) ; 
/*--netxen_niu_disable_xg_port--*/
int netxen_p2_nic_set_promisc ( struct netxen_adapter * adapter , u32 mode ) ; 
/*--netxen_p2_nic_set_promisc--*/
int netxen_p2_nic_set_mac_addr ( struct netxen_adapter * adapter , u8 * addr ) ; 
/*--netxen_p2_nic_set_mac_addr--*/
void netxen_p2_nic_set_multi ( struct net_device * netdev ) ; 
/*--netxen_p2_nic_set_multi--*/
void netxen_p3_nic_set_multi ( struct net_device * netdev ) ; 
/*--netxen_p3_nic_set_multi--*/
int netxen_p3_nic_set_promisc ( struct netxen_adapter * adapter , u32 mode ) ; 
/*--netxen_p3_nic_set_promisc--*/
void netxen_p3_free_mac_list ( struct netxen_adapter * adapter ) ; 
/*--netxen_p3_free_mac_list--*/
int netxen_p3_nic_set_mac_addr ( struct netxen_adapter * adapter , u8 * addr ) ; 
/*--netxen_p3_nic_set_mac_addr--*/
int netxen_config_intr_coalesce ( struct netxen_adapter * adapter ) ; 
/*--netxen_config_intr_coalesce--*/
int netxen_config_hw_lro ( struct netxen_adapter * adapter , int enable ) ; 
/*--netxen_config_hw_lro--*/
int netxen_config_bridged_mode ( struct netxen_adapter * adapter , int enable ) ; 
/*--netxen_config_bridged_mode--*/
int netxen_config_rss ( struct netxen_adapter * adapter , int enable ) ; 
/*--netxen_config_rss--*/
int netxen_config_ipaddr ( struct netxen_adapter * adapter , u32 ip , int cmd ) ; 
/*--netxen_config_ipaddr--*/
int netxen_linkevent_request ( struct netxen_adapter * adapter , int enable ) ; 
/*--netxen_linkevent_request--*/
int netxen_send_lro_cleanup ( struct netxen_adapter * adapter ) ; 
/*--netxen_send_lro_cleanup--*/
int netxen_nic_change_mtu ( struct net_device * netdev , int mtu ) ; 
/*--netxen_nic_change_mtu--*/
int netxen_get_flash_mac_addr ( struct netxen_adapter * adapter , u64 * mac ) ; 
/*--netxen_get_flash_mac_addr--*/
int netxen_p3_get_mac_addr ( struct netxen_adapter * adapter , u64 * mac ) ; 
/*--netxen_p3_get_mac_addr--*/
void * netxen_get_ioaddr ( struct netxen_adapter * adapter , u32 offset ) ; 
/*--netxen_get_ioaddr--*/
void netxen_pci_camqm_read_2M ( struct netxen_adapter * adapter , u64 off , u64 * data ) ; 
/*--netxen_pci_camqm_read_2M--*/
void netxen_pci_camqm_write_2M ( struct netxen_adapter * adapter , u64 off , u64 data ) ; 
/*--netxen_pci_camqm_write_2M--*/
void netxen_setup_hwops ( struct netxen_adapter * adapter ) ; 
/*--netxen_setup_hwops--*/
int netxen_nic_get_board_info ( struct netxen_adapter * adapter ) ; 
/*--netxen_nic_get_board_info--*/
int netxen_nic_set_mtu_gb ( struct netxen_adapter * adapter , int new_mtu ) ; 
/*--netxen_nic_set_mtu_gb--*/
int netxen_nic_set_mtu_xgb ( struct netxen_adapter * adapter , int new_mtu ) ; 
/*--netxen_nic_set_mtu_xgb--*/
void netxen_nic_set_link_parameters ( struct netxen_adapter * adapter ) ; 
/*--netxen_nic_set_link_parameters--*/
int netxen_nic_wol_supported ( struct netxen_adapter * adapter ) ; 
/*--netxen_nic_wol_supported--*/
void netxen_nic_update_cmd_producer ( struct netxen_adapter * adapter , struct nx_host_tx_ring * tx_ring ) ; 
/*--netxen_nic_update_cmd_producer--*/
int netxen_nic_set_mac ( struct net_device * netdev , void * p ) ; 
/*--netxen_nic_set_mac--*/
int netxen_nic_reset_context ( struct netxen_adapter * adapter ) ; 
/*--netxen_nic_reset_context--*/
void netxen_advert_link_change ( struct netxen_adapter * adapter , int linkup ) ; 
/*--netxen_advert_link_change--*/
struct net_device_stats * netxen_nic_get_stats ( struct net_device * netdev ) ; 
/*--netxen_nic_get_stats--*/
void netxen_release_rx_buffers ( struct netxen_adapter * adapter ) ; 
/*--netxen_release_rx_buffers--*/
void netxen_release_tx_buffers ( struct netxen_adapter * adapter ) ; 
/*--netxen_release_tx_buffers--*/
void netxen_free_sw_resources ( struct netxen_adapter * adapter ) ; 
/*--netxen_free_sw_resources--*/
int netxen_alloc_sw_resources ( struct netxen_adapter * adapter ) ; 
/*--netxen_alloc_sw_resources--*/
int netxen_rom_fast_read_words ( struct netxen_adapter * adapter , int addr , u8 * bytes , size_t size ) ; 
/*--netxen_rom_fast_read_words--*/
int netxen_rom_fast_read ( struct netxen_adapter * adapter , int addr , int * valp ) ; 
/*--netxen_rom_fast_read--*/
int netxen_pinit_from_rom ( struct netxen_adapter * adapter ) ; 
/*--netxen_pinit_from_rom--*/
int netxen_need_fw_reset ( struct netxen_adapter * adapter ) ; 
/*--netxen_need_fw_reset--*/
int netxen_load_firmware ( struct netxen_adapter * adapter ) ; 
/*--netxen_load_firmware--*/
void netxen_request_firmware ( struct netxen_adapter * adapter ) ; 
/*--netxen_request_firmware--*/
void netxen_release_firmware ( struct netxen_adapter * adapter ) ; 
/*--netxen_release_firmware--*/
int netxen_init_dummy_dma ( struct netxen_adapter * adapter ) ; 
/*--netxen_init_dummy_dma--*/
void netxen_free_dummy_dma ( struct netxen_adapter * adapter ) ; 
/*--netxen_free_dummy_dma--*/
int netxen_phantom_init ( struct netxen_adapter * adapter , int pegtune_val ) ; 
/*--netxen_phantom_init--*/
int netxen_init_firmware ( struct netxen_adapter * adapter ) ; 
/*--netxen_init_firmware--*/
int netxen_process_rcv_ring ( struct nx_host_sds_ring * sds_ring , int max ) ; 
/*--netxen_process_rcv_ring--*/
int netxen_process_cmd_ring ( struct netxen_adapter * adapter ) ; 
/*--netxen_process_cmd_ring--*/
void netxen_post_rx_buffers ( struct netxen_adapter * adapter , u32 ringid , struct nx_host_rds_ring * rds_ring ) ; 
/*--netxen_post_rx_buffers--*/
void netxen_nic_clear_stats ( struct netxen_adapter * adapter ) ; 
/*--netxen_nic_clear_stats--*/
int nx_fw_cmd_set_mtu ( struct netxen_adapter * adapter , int mtu ) ; 
/*--nx_fw_cmd_set_mtu--*/
int nx_fw_cmd_query_phy ( struct netxen_adapter * adapter , u32 reg , u32 * val ) ; 
/*--nx_fw_cmd_query_phy--*/
int nx_fw_cmd_set_phy ( struct netxen_adapter * adapter , u32 reg , u32 val ) ; 
/*--nx_fw_cmd_set_phy--*/
int netxen_alloc_hw_resources ( struct netxen_adapter * adapter ) ; 
/*--netxen_alloc_hw_resources--*/
void netxen_free_hw_resources ( struct netxen_adapter * adapter ) ; 
/*--netxen_free_hw_resources--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ibmtr_probe_card ( struct net_device * dev ) ; 
/*--ibmtr_probe_card--*/
int ql_sem_spinlock ( struct ql_adapter * qdev , u32 sem_mask ) ; 
/*--ql_sem_spinlock--*/
void ql_sem_unlock ( struct ql_adapter * qdev , u32 sem_mask ) ; 
/*--ql_sem_unlock--*/
int ql_wait_reg_rdy ( struct ql_adapter * qdev , u32 reg , u32 bit , u32 err_bit ) ; 
/*--ql_wait_reg_rdy--*/
int ql_write_cfg ( struct ql_adapter * qdev , void * ptr , int size , u32 bit , u16 q_id ) ; 
/*--ql_write_cfg--*/
int ql_get_mac_addr_reg ( struct ql_adapter * qdev , u32 type , u16 index , u32 * value ) ; 
/*--ql_get_mac_addr_reg--*/
void ql_link_on ( struct ql_adapter * qdev ) ; 
/*--ql_link_on--*/
void ql_link_off ( struct ql_adapter * qdev ) ; 
/*--ql_link_off--*/
int ql_get_routing_reg ( struct ql_adapter * qdev , u32 index , u32 * value ) ; 
/*--ql_get_routing_reg--*/
u32 ql_enable_completion_interrupt ( struct ql_adapter * qdev , u32 intr ) ; 
/*--ql_enable_completion_interrupt--*/
int ql_read_xgmac_reg ( struct ql_adapter * qdev , u32 reg , u32 * data ) ; 
/*--ql_read_xgmac_reg--*/
int ql_read_xgmac_reg64 ( struct ql_adapter * qdev , u32 reg , u64 * data ) ; 
/*--ql_read_xgmac_reg64--*/
void ql_queue_fw_error ( struct ql_adapter * qdev ) ; 
/*--ql_queue_fw_error--*/
void ql_queue_asic_error ( struct ql_adapter * qdev ) ; 
/*--ql_queue_asic_error--*/
int ql_cam_route_initialize ( struct ql_adapter * qdev ) ; 
/*--ql_cam_route_initialize--*/
int ql_wol ( struct ql_adapter * qdev ) ; 
/*--ql_wol--*/
netdev_tx_t ql_lb_send ( struct sk_buff * skb , struct net_device * ndev ) ; 
/*--ql_lb_send--*/
int ql_clean_lb_rx_ring ( struct rx_ring * rx_ring , int budget ) ; 
/*--ql_clean_lb_rx_ring--*/
int ql_core_dump ( struct ql_adapter * qdev , struct ql_mpi_coredump * mpi_coredump ) ; 
/*--ql_core_dump--*/
void ql_gen_reg_dump ( struct ql_adapter * qdev , struct ql_reg_dump * mpi_coredump ) ; 
/*--ql_gen_reg_dump--*/
void ql_mpi_core_to_log ( struct work_struct * work ) ; 
/*--ql_mpi_core_to_log--*/
void ql_dump_xgmac_control_regs ( struct ql_adapter * qdev ) ; 
/*--ql_dump_xgmac_control_regs--*/
void ql_dump_routing_entries ( struct ql_adapter * qdev ) ; 
/*--ql_dump_routing_entries--*/
void ql_dump_regs ( struct ql_adapter * qdev ) ; 
/*--ql_dump_regs--*/
void ql_dump_qdev ( struct ql_adapter * qdev ) ; 
/*--ql_dump_qdev--*/
void ql_dump_wqicb ( struct wqicb * wqicb ) ; 
/*--ql_dump_wqicb--*/
void ql_dump_tx_ring ( struct tx_ring * tx_ring ) ; 
/*--ql_dump_tx_ring--*/
void ql_dump_ricb ( struct ricb * ricb ) ; 
/*--ql_dump_ricb--*/
void ql_dump_cqicb ( struct cqicb * cqicb ) ; 
/*--ql_dump_cqicb--*/
void ql_dump_rx_ring ( struct rx_ring * rx_ring ) ; 
/*--ql_dump_rx_ring--*/
void ql_dump_hw_cb ( struct ql_adapter * qdev , int size , u32 bit , u16 q_id ) ; 
/*--ql_dump_hw_cb--*/
void ql_dump_all ( struct ql_adapter * qdev ) ; 
/*--ql_dump_all--*/
int ql_unpause_mpi_risc ( struct ql_adapter * qdev ) ; 
/*--ql_unpause_mpi_risc--*/
int ql_pause_mpi_risc ( struct ql_adapter * qdev ) ; 
/*--ql_pause_mpi_risc--*/
int ql_hard_reset_mpi_risc ( struct ql_adapter * qdev ) ; 
/*--ql_hard_reset_mpi_risc--*/
int ql_read_mpi_reg ( struct ql_adapter * qdev , u32 reg , u32 * data ) ; 
/*--ql_read_mpi_reg--*/
int ql_write_mpi_reg ( struct ql_adapter * qdev , u32 reg , u32 data ) ; 
/*--ql_write_mpi_reg--*/
int ql_soft_reset_mpi_risc ( struct ql_adapter * qdev ) ; 
/*--ql_soft_reset_mpi_risc--*/
int ql_own_firmware ( struct ql_adapter * qdev ) ; 
/*--ql_own_firmware--*/
int ql_mb_sys_err ( struct ql_adapter * qdev ) ; 
/*--ql_mb_sys_err--*/
int ql_mb_about_fw ( struct ql_adapter * qdev ) ; 
/*--ql_mb_about_fw--*/
int ql_mb_get_fw_state ( struct ql_adapter * qdev ) ; 
/*--ql_mb_get_fw_state--*/
int ql_mb_idc_ack ( struct ql_adapter * qdev ) ; 
/*--ql_mb_idc_ack--*/
int ql_mb_set_port_cfg ( struct ql_adapter * qdev ) ; 
/*--ql_mb_set_port_cfg--*/
int ql_mb_dump_ram ( struct ql_adapter * qdev , u64 req_dma , u32 addr , u32 size ) ; 
/*--ql_mb_dump_ram--*/
int ql_dump_risc_ram_area ( struct ql_adapter * qdev , void * buf , u32 ram_addr , int word_count ) ; 
/*--ql_dump_risc_ram_area--*/
int ql_mb_get_port_cfg ( struct ql_adapter * qdev ) ; 
/*--ql_mb_get_port_cfg--*/
int ql_mb_wol_mode ( struct ql_adapter * qdev , u32 wol ) ; 
/*--ql_mb_wol_mode--*/
int ql_mb_wol_set_magic ( struct ql_adapter * qdev , u32 enable_wol ) ; 
/*--ql_mb_wol_set_magic--*/
int ql_mb_set_led_cfg ( struct ql_adapter * qdev , u32 led_config ) ; 
/*--ql_mb_set_led_cfg--*/
int ql_mb_get_led_cfg ( struct ql_adapter * qdev ) ; 
/*--ql_mb_get_led_cfg--*/
int ql_mb_set_mgmnt_traffic_ctl ( struct ql_adapter * qdev , u32 control ) ; 
/*--ql_mb_set_mgmnt_traffic_ctl--*/
int ql_wait_fifo_empty ( struct ql_adapter * qdev ) ; 
/*--ql_wait_fifo_empty--*/
void ql_mpi_port_cfg_work ( struct work_struct * work ) ; 
/*--ql_mpi_port_cfg_work--*/
void ql_mpi_idc_work ( struct work_struct * work ) ; 
/*--ql_mpi_idc_work--*/
void ql_mpi_work ( struct work_struct * work ) ; 
/*--ql_mpi_work--*/
void ql_mpi_reset_work ( struct work_struct * work ) ; 
/*--ql_mpi_reset_work--*/
void ql_check_lb_frame ( struct ql_adapter * qdev , struct sk_buff * skb ) ; 
/*--ql_check_lb_frame--*/
void efx_process_channel_now ( struct efx_channel * channel ) ; 
/*--efx_process_channel_now--*/
void efx_schedule_slow_fill ( struct efx_rx_queue * rx_queue , int delay ) ; 
/*--efx_schedule_slow_fill--*/
void efx_link_status_changed ( struct efx_nic * efx ) ; 
/*--efx_link_status_changed--*/
void efx_link_set_advertising ( struct efx_nic * efx , u32 advertising ) ; 
/*--efx_link_set_advertising--*/
void efx_link_set_wanted_fc ( struct efx_nic * efx , enum efx_fc_type wanted_fc ) ; 
/*--efx_link_set_wanted_fc--*/
int __efx_reconfigure_port ( struct efx_nic * efx ) ; 
/*--__efx_reconfigure_port--*/
int efx_reconfigure_port ( struct efx_nic * efx ) ; 
/*--efx_reconfigure_port--*/
void efx_init_irq_moderation ( struct efx_nic * efx , int tx_usecs , int rx_usecs , bool rx_adaptive ) ; 
/*--efx_init_irq_moderation--*/
void efx_reset_down ( struct efx_nic * efx , enum reset_type method ) ; 
/*--efx_reset_down--*/
int efx_reset_up ( struct efx_nic * efx , enum reset_type method , bool ok ) ; 
/*--efx_reset_up--*/
int efx_reset ( struct efx_nic * efx , enum reset_type method ) ; 
/*--efx_reset--*/
void efx_schedule_reset ( struct efx_nic * efx , enum reset_type type ) ; 
/*--efx_schedule_reset--*/
int efx_port_dummy_op_int ( struct efx_nic * efx ) ; 
/*--efx_port_dummy_op_int--*/
void efx_port_dummy_op_void ( struct efx_nic * efx ) ; 
/*--efx_port_dummy_op_void--*/
void efx_port_dummy_op_set_id_led ( struct efx_nic * efx , enum efx_led_mode mode ) ; 
/*--efx_port_dummy_op_set_id_led--*/
bool efx_port_dummy_op_poll ( struct efx_nic * efx ) ; 
/*--efx_port_dummy_op_poll--*/
int efx_nic_test_registers ( struct efx_nic * efx , const struct efx_nic_register_test * regs , size_t n_regs ) ; 
/*--efx_nic_test_registers--*/
int efx_nic_alloc_buffer ( struct efx_nic * efx , struct efx_buffer * buffer , unsigned int len ) ; 
/*--efx_nic_alloc_buffer--*/
void efx_nic_free_buffer ( struct efx_nic * efx , struct efx_buffer * buffer ) ; 
/*--efx_nic_free_buffer--*/
void efx_nic_push_buffers ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_nic_push_buffers--*/
int efx_nic_probe_tx ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_nic_probe_tx--*/
void efx_nic_init_tx ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_nic_init_tx--*/
void efx_nic_fini_tx ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_nic_fini_tx--*/
void efx_nic_remove_tx ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_nic_remove_tx--*/
void efx_nic_notify_rx_desc ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_nic_notify_rx_desc--*/
int efx_nic_probe_rx ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_nic_probe_rx--*/
void efx_nic_init_rx ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_nic_init_rx--*/
void efx_nic_fini_rx ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_nic_fini_rx--*/
void efx_nic_remove_rx ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_nic_remove_rx--*/
void efx_nic_eventq_read_ack ( struct efx_channel * channel ) ; 
/*--efx_nic_eventq_read_ack--*/
void efx_generate_event ( struct efx_channel * channel , efx_qword_t * event ) ; 
/*--efx_generate_event--*/
int efx_nic_process_eventq ( struct efx_channel * channel , int budget ) ; 
/*--efx_nic_process_eventq--*/
int efx_nic_probe_eventq ( struct efx_channel * channel ) ; 
/*--efx_nic_probe_eventq--*/
void efx_nic_init_eventq ( struct efx_channel * channel ) ; 
/*--efx_nic_init_eventq--*/
void efx_nic_fini_eventq ( struct efx_channel * channel ) ; 
/*--efx_nic_fini_eventq--*/
void efx_nic_remove_eventq ( struct efx_channel * channel ) ; 
/*--efx_nic_remove_eventq--*/
void efx_nic_generate_test_event ( struct efx_channel * channel , unsigned int magic ) ; 
/*--efx_nic_generate_test_event--*/
int efx_nic_flush_queues ( struct efx_nic * efx ) ; 
/*--efx_nic_flush_queues--*/
void efx_nic_enable_interrupts ( struct efx_nic * efx ) ; 
/*--efx_nic_enable_interrupts--*/
void efx_nic_disable_interrupts ( struct efx_nic * efx ) ; 
/*--efx_nic_disable_interrupts--*/
void efx_nic_generate_interrupt ( struct efx_nic * efx ) ; 
/*--efx_nic_generate_interrupt--*/
irqreturn_t efx_nic_fatal_interrupt ( struct efx_nic * efx ) ; 
/*--efx_nic_fatal_interrupt--*/
int efx_nic_init_interrupt ( struct efx_nic * efx ) ; 
/*--efx_nic_init_interrupt--*/
void efx_nic_fini_interrupt ( struct efx_nic * efx ) ; 
/*--efx_nic_fini_interrupt--*/
u32 efx_nic_fpga_ver ( struct efx_nic * efx ) ; 
/*--efx_nic_fpga_ver--*/
void efx_nic_init_common ( struct efx_nic * efx ) ; 
/*--efx_nic_init_common--*/
irqreturn_t falcon_legacy_interrupt_a1 ( int irq , void * dev_id ) ; 
/*--falcon_legacy_interrupt_a1--*/
int falcon_spi_cmd ( struct efx_nic * efx , const struct efx_spi_device * spi , unsigned int command , int address , const void * in , void * out , size_t len ) ; 
/*--falcon_spi_cmd--*/
int falcon_spi_wait_write ( struct efx_nic * efx , const struct efx_spi_device * spi ) ; 
/*--falcon_spi_wait_write--*/
int falcon_spi_read ( struct efx_nic * efx , const struct efx_spi_device * spi , loff_t start , size_t len , size_t * retlen , u8 * buffer ) ; 
/*--falcon_spi_read--*/
int falcon_spi_write ( struct efx_nic * efx , const struct efx_spi_device * spi , loff_t start , size_t len , size_t * retlen , const u8 * buffer ) ; 
/*--falcon_spi_write--*/
void falcon_drain_tx_fifo ( struct efx_nic * efx ) ; 
/*--falcon_drain_tx_fifo--*/
void falcon_reconfigure_mac_wrapper ( struct efx_nic * efx ) ; 
/*--falcon_reconfigure_mac_wrapper--*/
void falcon_start_nic_stats ( struct efx_nic * efx ) ; 
/*--falcon_start_nic_stats--*/
void falcon_stop_nic_stats ( struct efx_nic * efx ) ; 
/*--falcon_stop_nic_stats--*/
void siena_remove_port ( struct efx_nic * efx ) ; 
/*--siena_remove_port--*/
void siena_print_fwver ( struct efx_nic * efx , char * buf , size_t len ) ; 
/*--siena_print_fwver--*/
void efx_stop_queue ( struct efx_channel * channel ) ; 
/*--efx_stop_queue--*/
void efx_wake_queue ( struct efx_channel * channel ) ; 
/*--efx_wake_queue--*/
netdev_tx_t efx_enqueue_skb ( struct efx_tx_queue * tx_queue , struct sk_buff * skb ) ; 
/*--efx_enqueue_skb--*/
netdev_tx_t efx_hard_start_xmit ( struct sk_buff * skb , struct net_device * net_dev ) ; 
/*--efx_hard_start_xmit--*/
void efx_xmit_done ( struct efx_tx_queue * tx_queue , unsigned int index ) ; 
/*--efx_xmit_done--*/
int efx_probe_tx_queue ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_probe_tx_queue--*/
void efx_init_tx_queue ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_init_tx_queue--*/
void efx_release_tx_buffers ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_release_tx_buffers--*/
void efx_fini_tx_queue ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_fini_tx_queue--*/
void efx_remove_tx_queue ( struct efx_tx_queue * tx_queue ) ; 
/*--efx_remove_tx_queue--*/
void efx_fast_push_rx_descriptors ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_fast_push_rx_descriptors--*/
void efx_rx_work ( struct work_struct * data ) ; 
/*--efx_rx_work--*/
void efx_rx_packet ( struct efx_rx_queue * rx_queue , unsigned int index , unsigned int len , bool checksummed , bool discard ) ; 
/*--efx_rx_packet--*/
void __efx_rx_packet ( struct efx_channel * channel , struct efx_rx_buffer * rx_buf , bool checksummed ) ; 
/*--__efx_rx_packet--*/
void efx_rx_strategy ( struct efx_channel * channel ) ; 
/*--efx_rx_strategy--*/
int efx_probe_rx_queue ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_probe_rx_queue--*/
void efx_init_rx_queue ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_init_rx_queue--*/
void efx_fini_rx_queue ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_fini_rx_queue--*/
void efx_remove_rx_queue ( struct efx_rx_queue * rx_queue ) ; 
/*--efx_remove_rx_queue--*/
void falcon_setup_xaui ( struct efx_nic * efx ) ; 
/*--falcon_setup_xaui--*/
int falcon_reset_xaui ( struct efx_nic * efx ) ; 
/*--falcon_reset_xaui--*/
void falcon_reconfigure_xmac_core ( struct efx_nic * efx ) ; 
/*--falcon_reconfigure_xmac_core--*/
void falcon_poll_xmac ( struct efx_nic * efx ) ; 
/*--falcon_poll_xmac--*/
int efx_mcdi_mac_stats ( struct efx_nic * efx , dma_addr_t dma_addr , u32 dma_len , int enable , int clear ) ; 
/*--efx_mcdi_mac_stats--*/
void efx_loopback_rx_packet ( struct efx_nic * efx , const char * buf_ptr , int pkt_len ) ; 
/*--efx_loopback_rx_packet--*/
int efx_selftest ( struct efx_nic * efx , struct efx_self_tests * tests , unsigned flags ) ; 
/*--efx_selftest--*/
int efx_ethtool_get_settings ( struct net_device * net_dev , struct ethtool_cmd * ecmd ) ; 
/*--efx_ethtool_get_settings--*/
int efx_ethtool_set_settings ( struct net_device * net_dev , struct ethtool_cmd * ecmd ) ; 
/*--efx_ethtool_set_settings--*/
int efx_ethtool_reset ( struct net_device * net_dev , u32 * flags ) ; 
/*--efx_ethtool_reset--*/
void falcon_qt202x_set_led ( struct efx_nic * p , int led , int mode ) ; 
/*--falcon_qt202x_set_led--*/
unsigned efx_mdio_id_oui ( u32 id ) ; 
/*--efx_mdio_id_oui--*/
int efx_mdio_reset_mmd ( struct efx_nic * port , int mmd , int spins , int spintime ) ; 
/*--efx_mdio_reset_mmd--*/
int efx_mdio_wait_reset_mmds ( struct efx_nic * efx , unsigned int mmd_mask ) ; 
/*--efx_mdio_wait_reset_mmds--*/
int efx_mdio_check_mmds ( struct efx_nic * efx , unsigned int mmd_mask , unsigned int fatal_mask ) ; 
/*--efx_mdio_check_mmds--*/
bool efx_mdio_links_ok ( struct efx_nic * efx , unsigned int mmd_mask ) ; 
/*--efx_mdio_links_ok--*/
void efx_mdio_transmit_disable ( struct efx_nic * efx ) ; 
/*--efx_mdio_transmit_disable--*/
void efx_mdio_phy_reconfigure ( struct efx_nic * efx ) ; 
/*--efx_mdio_phy_reconfigure--*/
void efx_mdio_set_mmds_lpower ( struct efx_nic * efx , int low_power , unsigned int mmd_mask ) ; 
/*--efx_mdio_set_mmds_lpower--*/
int efx_mdio_set_settings ( struct efx_nic * efx , struct ethtool_cmd * ecmd ) ; 
/*--efx_mdio_set_settings--*/
void efx_mdio_an_reconfigure ( struct efx_nic * efx ) ; 
/*--efx_mdio_an_reconfigure--*/
enum efx_fc_type efx_mdio_get_pause ( struct efx_nic * efx ) ; 
/*--efx_mdio_get_pause--*/
int efx_mdio_test_alive ( struct efx_nic * efx ) ; 
/*--efx_mdio_test_alive--*/
int sft9001_wait_boot ( struct efx_nic * efx ) ; 
/*--sft9001_wait_boot--*/
void tenxpress_set_id_led ( struct efx_nic * efx , enum efx_led_mode mode ) ; 
/*--tenxpress_set_id_led--*/
int falcon_probe_board ( struct efx_nic * efx , u16 revision_info ) ; 
/*--falcon_probe_board--*/
void efx_mcdi_init ( struct efx_nic * efx ) ; 
/*--efx_mcdi_init--*/
int efx_mcdi_poll_reboot ( struct efx_nic * efx ) ; 
/*--efx_mcdi_poll_reboot--*/
int efx_mcdi_rpc ( struct efx_nic * efx , unsigned cmd , const u8 * inbuf , size_t inlen , u8 * outbuf , size_t outlen , size_t * outlen_actual ) ; 
/*--efx_mcdi_rpc--*/
void efx_mcdi_mode_poll ( struct efx_nic * efx ) ; 
/*--efx_mcdi_mode_poll--*/
void efx_mcdi_mode_event ( struct efx_nic * efx ) ; 
/*--efx_mcdi_mode_event--*/
void efx_mcdi_process_event ( struct efx_channel * channel , efx_qword_t * event ) ; 
/*--efx_mcdi_process_event--*/
int efx_mcdi_fwver ( struct efx_nic * efx , u64 * version , u32 * build ) ; 
/*--efx_mcdi_fwver--*/
int efx_mcdi_drv_attach ( struct efx_nic * efx , bool driver_operating , bool * was_attached ) ; 
/*--efx_mcdi_drv_attach--*/
int efx_mcdi_get_board_cfg ( struct efx_nic * efx , u8 * mac_address , u16 * fw_subtype_list ) ; 
/*--efx_mcdi_get_board_cfg--*/
int efx_mcdi_log_ctrl ( struct efx_nic * efx , bool evq , bool uart , u32 dest_evq ) ; 
/*--efx_mcdi_log_ctrl--*/
int efx_mcdi_nvram_types ( struct efx_nic * efx , u32 * nvram_types_out ) ; 
/*--efx_mcdi_nvram_types--*/
int efx_mcdi_nvram_info ( struct efx_nic * efx , unsigned int type , size_t * size_out , size_t * erase_size_out , bool * protected_out ) ; 
/*--efx_mcdi_nvram_info--*/
int efx_mcdi_nvram_update_start ( struct efx_nic * efx , unsigned int type ) ; 
/*--efx_mcdi_nvram_update_start--*/
int efx_mcdi_nvram_read ( struct efx_nic * efx , unsigned int type , loff_t offset , u8 * buffer , size_t length ) ; 
/*--efx_mcdi_nvram_read--*/
int efx_mcdi_nvram_write ( struct efx_nic * efx , unsigned int type , loff_t offset , const u8 * buffer , size_t length ) ; 
/*--efx_mcdi_nvram_write--*/
int efx_mcdi_nvram_erase ( struct efx_nic * efx , unsigned int type , loff_t offset , size_t length ) ; 
/*--efx_mcdi_nvram_erase--*/
int efx_mcdi_nvram_update_finish ( struct efx_nic * efx , unsigned int type ) ; 
/*--efx_mcdi_nvram_update_finish--*/
int efx_mcdi_nvram_test_all ( struct efx_nic * efx ) ; 
/*--efx_mcdi_nvram_test_all--*/
int efx_mcdi_handle_assertion ( struct efx_nic * efx ) ; 
/*--efx_mcdi_handle_assertion--*/
void efx_mcdi_set_id_led ( struct efx_nic * efx , enum efx_led_mode mode ) ; 
/*--efx_mcdi_set_id_led--*/
int efx_mcdi_reset_port ( struct efx_nic * efx ) ; 
/*--efx_mcdi_reset_port--*/
int efx_mcdi_reset_mc ( struct efx_nic * efx ) ; 
/*--efx_mcdi_reset_mc--*/
int efx_mcdi_wol_filter_set ( struct efx_nic * efx , u32 type , const u8 * mac , int * id_out ) ; 
/*--efx_mcdi_wol_filter_set--*/
int efx_mcdi_wol_filter_set_magic ( struct efx_nic * efx , const u8 * mac , int * id_out ) ; 
/*--efx_mcdi_wol_filter_set_magic--*/
int efx_mcdi_wol_filter_get_magic ( struct efx_nic * efx , int * id_out ) ; 
/*--efx_mcdi_wol_filter_get_magic--*/
int efx_mcdi_wol_filter_remove ( struct efx_nic * efx , int id ) ; 
/*--efx_mcdi_wol_filter_remove--*/
int efx_mcdi_wol_filter_reset ( struct efx_nic * efx ) ; 
/*--efx_mcdi_wol_filter_reset--*/
int efx_mcdi_mdio_read ( struct efx_nic * efx , unsigned int bus , unsigned int prtad , unsigned int devad , u16 addr , u16 * value_out , u32 * status_out ) ; 
/*--efx_mcdi_mdio_read--*/
int efx_mcdi_mdio_write ( struct efx_nic * efx , unsigned int bus , unsigned int prtad , unsigned int devad , u16 addr , u16 value , u32 * status_out ) ; 
/*--efx_mcdi_mdio_write--*/
int efx_mcdi_phy_reconfigure ( struct efx_nic * efx ) ; 
/*--efx_mcdi_phy_reconfigure--*/
void efx_mcdi_phy_decode_link ( struct efx_nic * efx , struct efx_link_state * link_state , u32 speed , u32 flags , u32 fcntl ) ; 
/*--efx_mcdi_phy_decode_link--*/
void efx_mcdi_phy_check_fcntl ( struct efx_nic * efx , u32 lpa ) ; 
/*--efx_mcdi_phy_check_fcntl--*/
const char * efx_mcdi_phy_test_name ( struct efx_nic * efx , unsigned int index ) ; 
/*--efx_mcdi_phy_test_name--*/
void efx_mtd_remove ( struct efx_nic * efx ) ; 
/*--efx_mtd_remove--*/
void efx_mtd_rename ( struct efx_nic * efx ) ; 
/*--efx_mtd_rename--*/
int efx_mtd_probe ( struct efx_nic * efx ) ; 
/*--efx_mtd_probe--*/
void llc_restart_tx ( struct s_smc * smc ) ; 
/*--llc_restart_tx--*/
void * mac_drv_get_space ( struct s_smc * smc , unsigned int size ) ; 
/*--mac_drv_get_space--*/
void * mac_drv_get_desc_mem ( struct s_smc * smc , unsigned int size ) ; 
/*--mac_drv_get_desc_mem--*/
unsigned long mac_drv_virt2phys ( struct s_smc * smc , void * virt ) ; 
/*--mac_drv_virt2phys--*/
u_long dma_master ( struct s_smc * smc , void * virt , int len , int flag ) ; 
/*--dma_master--*/
void dma_complete ( struct s_smc * smc , volatile union s_fp_descr * descr , int flag ) ; 
/*--dma_complete--*/
void mac_drv_tx_complete ( struct s_smc * smc , volatile struct s_smt_fp_txd * txd ) ; 
/*--mac_drv_tx_complete--*/
void mac_drv_rx_complete ( struct s_smc * smc , volatile struct s_smt_fp_rxd * rxd , int frag_count , int len ) ; 
/*--mac_drv_rx_complete--*/
void mac_drv_requeue_rxd ( struct s_smc * smc , volatile struct s_smt_fp_rxd * rxd , int frag_count ) ; 
/*--mac_drv_requeue_rxd--*/
void mac_drv_fill_rxd ( struct s_smc * smc ) ; 
/*--mac_drv_fill_rxd--*/
void mac_drv_clear_rxd ( struct s_smc * smc , volatile struct s_smt_fp_rxd * rxd , int frag_count ) ; 
/*--mac_drv_clear_rxd--*/
int mac_drv_rx_init ( struct s_smc * smc , int len , int fc , char * look_ahead , int la_len ) ; 
/*--mac_drv_rx_init--*/
void smt_timer_poll ( struct s_smc * smc ) ; 
/*--smt_timer_poll--*/
void ring_status_indication ( struct s_smc * smc , u_long status ) ; 
/*--ring_status_indication--*/
unsigned long smt_get_time ( void ) ; 
/*--smt_get_time--*/
void smt_stat_counter ( struct s_smc * smc , int stat ) ; 
/*--smt_stat_counter--*/
void cfm_state_change ( struct s_smc * smc , int c_state ) ; 
/*--cfm_state_change--*/
void ecm_state_change ( struct s_smc * smc , int e_state ) ; 
/*--ecm_state_change--*/
void rmt_state_change ( struct s_smc * smc , int r_state ) ; 
/*--rmt_state_change--*/
void drv_reset_indication ( struct s_smc * smc ) ; 
/*--drv_reset_indication--*/
u_int mac_drv_check_space ( void ) ; 
/*--mac_drv_check_space--*/
int mac_drv_init ( struct s_smc * smc ) ; 
/*--mac_drv_init--*/
void init_driver_fplus ( struct s_smc * smc ) ; 
/*--init_driver_fplus--*/
void init_fddi_driver ( struct s_smc * smc , u_char * mac_addr ) ; 
/*--init_fddi_driver--*/
Mbuf * smt_get_mbuf ( struct s_smc * smc ) ; 
/*--smt_get_mbuf--*/
void smt_free_mbuf ( struct s_smc * smc , Mbuf * mb ) ; 
/*--smt_free_mbuf--*/
void mac_drv_repair_descr ( struct s_smc * smc ) ; 
/*--mac_drv_repair_descr--*/
void fddi_isr ( struct s_smc * smc ) ; 
/*--fddi_isr--*/
void mac_drv_rx_mode ( struct s_smc * smc , int mode ) ; 
/*--mac_drv_rx_mode--*/
void process_receive ( struct s_smc * smc ) ; 
/*--process_receive--*/
void hwm_rx_frag ( struct s_smc * smc , char * virt , u_long phys , int len , int frame_status ) ; 
/*--hwm_rx_frag--*/
void mac_drv_clear_rx_queue ( struct s_smc * smc ) ; 
/*--mac_drv_clear_rx_queue--*/
int hwm_tx_init ( struct s_smc * smc , u_char fc , int frag_count , int frame_len , int frame_status ) ; 
/*--hwm_tx_init--*/
void hwm_tx_frag ( struct s_smc * smc , char * virt , u_long phys , int len , int frame_status ) ; 
/*--hwm_tx_frag--*/
void smt_send_mbuf ( struct s_smc * smc , Mbuf * mb , int fc ) ; 
/*--smt_send_mbuf--*/
void mac_drv_clear_tx_queue ( struct s_smc * smc ) ; 
/*--mac_drv_clear_tx_queue--*/
void mac_update_counter ( struct s_smc * smc ) ; 
/*--mac_update_counter--*/
void set_formac_tsync ( struct s_smc * smc , long sync_bw ) ; 
/*--set_formac_tsync--*/
void formac_tx_restart ( struct s_smc * smc ) ; 
/*--formac_tx_restart--*/
void mac2_irq ( struct s_smc * smc , u_short code_s2u , u_short code_s2l ) ; 
/*--mac2_irq--*/
void mac3_irq ( struct s_smc * smc , u_short code_s3u , u_short code_s3l ) ; 
/*--mac3_irq--*/
int init_fplus ( struct s_smc * smc ) ; 
/*--init_fplus--*/
void config_mux ( struct s_smc * smc , int mux ) ; 
/*--config_mux--*/
void sm_mac_check_beacon_claim ( struct s_smc * smc ) ; 
/*--sm_mac_check_beacon_claim--*/
void sm_ma_control ( struct s_smc * smc , int mode ) ; 
/*--sm_ma_control--*/
int sm_mac_get_tx_state ( struct s_smc * smc ) ; 
/*--sm_mac_get_tx_state--*/
void mac_clear_multicast ( struct s_smc * smc ) ; 
/*--mac_clear_multicast--*/
int mac_add_multicast ( struct s_smc * smc , struct fddi_addr * addr , int can ) ; 
/*--mac_add_multicast--*/
void mac_update_multicast ( struct s_smc * smc ) ; 
/*--mac_update_multicast--*/
void mac_set_rx_mode ( struct s_smc * smc , int mode ) ; 
/*--mac_set_rx_mode--*/
void rtm_irq ( struct s_smc * smc ) ; 
/*--rtm_irq--*/
void rtm_set_timer ( struct s_smc * smc ) ; 
/*--rtm_set_timer--*/
void formac_reinit_tx ( struct s_smc * smc ) ; 
/*--formac_reinit_tx--*/
void smt_agent_init ( struct s_smc * smc ) ; 
/*--smt_agent_init--*/
void smt_agent_task ( struct s_smc * smc ) ; 
/*--smt_agent_task--*/
void smt_emulate_token_ct ( struct s_smc * smc , int mac_index ) ; 
/*--smt_emulate_token_ct--*/
void smt_event ( struct s_smc * smc , int event ) ; 
/*--smt_event--*/
void smt_received_pack ( struct s_smc * smc , Mbuf * mb , int fs ) ; 
/*--smt_received_pack--*/
void smt_send_frame ( struct s_smc * smc , Mbuf * mb , int fc , int local ) ; 
/*--smt_send_frame--*/
Mbuf * smt_build_frame ( struct s_smc * smc , int class , int type , int length ) ; 
/*--smt_build_frame--*/
void smt_set_timestamp ( struct s_smc * smc , u_char * p ) ; 
/*--smt_set_timestamp--*/
u_long smt_get_tid ( struct s_smc * smc ) ; 
/*--smt_get_tid--*/
int smt_check_para ( struct s_smc * smc , struct smt_header * sm , const u_short list [ ] ) ; 
/*--smt_check_para--*/
void * sm_to_para ( struct s_smc * smc , struct smt_header * sm , int para ) ; 
/*--sm_to_para--*/
void smt_swap_para ( struct smt_header * sm , int len , int direction ) ; 
/*--smt_swap_para--*/
int smt_action ( struct s_smc * smc , int class , int code , int index ) ; 
/*--smt_action--*/
void cfm_init ( struct s_smc * smc ) ; 
/*--cfm_init--*/
void all_selection_criteria ( struct s_smc * smc ) ; 
/*--all_selection_criteria--*/
void cfm ( struct s_smc * smc , int event ) ; 
/*--cfm--*/
int cfm_get_mac_input ( struct s_smc * smc ) ; 
/*--cfm_get_mac_input--*/
int cfm_get_mac_output ( struct s_smc * smc ) ; 
/*--cfm_get_mac_output--*/
int cem_build_path ( struct s_smc * smc , char * to , int path_index ) ; 
/*--cem_build_path--*/
void ecm_init ( struct s_smc * smc ) ; 
/*--ecm_init--*/
void ecm ( struct s_smc * smc , int event ) ; 
/*--ecm--*/
void pcm_init ( struct s_smc * smc ) ; 
/*--pcm_init--*/
void init_plc ( struct s_smc * smc ) ; 
/*--init_plc--*/
int sm_pm_get_ls ( struct s_smc * smc , int phy ) ; 
/*--sm_pm_get_ls--*/
void plc_config_mux ( struct s_smc * smc , int mux ) ; 
/*--plc_config_mux--*/
void pcm ( struct s_smc * smc , const int np , int event ) ; 
/*--pcm--*/
void sm_lem_evaluate ( struct s_smc * smc ) ; 
/*--sm_lem_evaluate--*/
void sm_pm_ls_latch ( struct s_smc * smc , int phy , int on_off ) ; 
/*--sm_pm_ls_latch--*/
int pcm_status_twisted ( struct s_smc * smc ) ; 
/*--pcm_status_twisted--*/
void pcm_status_state ( struct s_smc * smc , int np , int * type , int * state , int * remote , int * mac ) ; 
/*--pcm_status_state--*/
int pcm_rooted_station ( struct s_smc * smc ) ; 
/*--pcm_rooted_station--*/
void plc_irq ( struct s_smc * smc , int np , unsigned int cmd ) ; 
/*--plc_irq--*/
void smt_pmf_received_pack ( struct s_smc * smc , Mbuf * mb , int local ) ; 
/*--smt_pmf_received_pack--*/
void smt_add_para ( struct s_smc * smc , struct s_pcon * pcon , u_short para , int index , int local ) ; 
/*--smt_add_para--*/
void ev_init ( struct s_smc * smc ) ; 
/*--ev_init--*/
void queue_event ( struct s_smc * smc , int class , int event ) ; 
/*--queue_event--*/
void timer_event ( struct s_smc * smc , u_long token ) ; 
/*--timer_event--*/
void ev_dispatcher ( struct s_smc * smc ) ; 
/*--ev_dispatcher--*/
u_short smt_online ( struct s_smc * smc , int on ) ; 
/*--smt_online--*/
void rmt_init ( struct s_smc * smc ) ; 
/*--rmt_init--*/
void rmt ( struct s_smc * smc , int event ) ; 
/*--rmt--*/
void smt_reset_defaults ( struct s_smc * smc , int level ) ; 
/*--smt_reset_defaults--*/
int smt_set_mac_opvalues ( struct s_smc * smc ) ; 
/*--smt_set_mac_opvalues--*/
void smt_fixup_mib ( struct s_smc * smc ) ; 
/*--smt_fixup_mib--*/
int init_smt ( struct s_smc * smc , u_char * mac_addr ) ; 
/*--init_smt--*/
void smt_timer_init ( struct s_smc * smc ) ; 
/*--smt_timer_init--*/
void smt_timer_stop ( struct s_smc * smc , struct smt_timer * timer ) ; 
/*--smt_timer_stop--*/
void smt_timer_start ( struct s_smc * smc , struct smt_timer * timer , u_long time , u_long token ) ; 
/*--smt_timer_start--*/
void smt_force_irq ( struct s_smc * smc ) ; 
/*--smt_force_irq--*/
void smt_timer_done ( struct s_smc * smc ) ; 
/*--smt_timer_done--*/
void smt_init_evc ( struct s_smc * smc ) ; 
/*--smt_init_evc--*/
void smt_srf_event ( struct s_smc * smc , int code , int index , int cond ) ; 
/*--smt_srf_event--*/
void hwt_start ( struct s_smc * smc , u_long time ) ; 
/*--hwt_start--*/
void hwt_stop ( struct s_smc * smc ) ; 
/*--hwt_stop--*/
void hwt_init ( struct s_smc * smc ) ; 
/*--hwt_init--*/
void hwt_restart ( struct s_smc * smc ) ; 
/*--hwt_restart--*/
u_long hwt_read ( struct s_smc * smc ) ; 
/*--hwt_read--*/
u_long hwt_quick_read ( struct s_smc * smc ) ; 
/*--hwt_quick_read--*/
void hwt_wait_time ( struct s_smc * smc , u_long start , long int duration ) ; 
/*--hwt_wait_time--*/
void card_stop ( struct s_smc * smc ) ; 
/*--card_stop--*/
void mac1_irq ( struct s_smc * smc , u_short stu , u_short stl ) ; 
/*--mac1_irq--*/
void plc1_irq ( struct s_smc * smc ) ; 
/*--plc1_irq--*/
void plc2_irq ( struct s_smc * smc ) ; 
/*--plc2_irq--*/
void timer_irq ( struct s_smc * smc ) ; 
/*--timer_irq--*/
int pcm_get_s_port ( struct s_smc * smc ) ; 
/*--pcm_get_s_port--*/
void read_address ( struct s_smc * smc , u_char * mac_addr ) ; 
/*--read_address--*/
void init_board ( struct s_smc * smc , u_char * mac_addr ) ; 
/*--init_board--*/
void sm_pm_bypass_req ( struct s_smc * smc , int mode ) ; 
/*--sm_pm_bypass_req--*/
int sm_pm_bypass_present ( struct s_smc * smc ) ; 
/*--sm_pm_bypass_present--*/
void plc_clear_irq ( struct s_smc * smc , int p ) ; 
/*--plc_clear_irq--*/
void pcm_state_change ( struct s_smc * smc , int plc , int p_state ) ; 
/*--pcm_state_change--*/
void rmt_indication ( struct s_smc * smc , int i ) ; 
/*--rmt_indication--*/
void llc_recover_tx ( struct s_smc * smc ) ; 
/*--llc_recover_tx--*/
void driver_get_bia ( struct s_smc * smc , struct fddi_addr * bia_addr ) ; 
/*--driver_get_bia--*/
void smt_start_watchdog ( struct s_smc * smc ) ; 
/*--smt_start_watchdog--*/
void mac_do_pci_fix ( struct s_smc * smc ) ; 
/*--mac_do_pci_fix--*/
int ess_raf_received_pack ( struct s_smc * smc , Mbuf * mb , struct smt_header * sm , int fs ) ; 
/*--ess_raf_received_pack--*/
void ess_timer_poll ( struct s_smc * smc ) ; 
/*--ess_timer_poll--*/
void ess_para_change ( struct s_smc * smc ) ; 
/*--ess_para_change--*/
int tms380tr_open ( struct net_device * dev ) ; 
/*--tms380tr_open--*/
irqreturn_t tms380tr_interrupt ( int irq , void * dev_id ) ; 
/*--tms380tr_interrupt--*/
int tms380tr_close ( struct net_device * dev ) ; 
/*--tms380tr_close--*/
void tms380tr_wait ( unsigned long time ) ; 
/*--tms380tr_wait--*/
void tmsdev_term ( struct net_device * dev ) ; 
/*--tmsdev_term--*/
int tmsdev_init ( struct net_device * dev , struct device * pdev ) ; 
/*--tmsdev_init--*/
int init_module ( void ) ; 
/*--init_module--*/
void cleanup_module ( void ) ; 
/*--cleanup_module--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) tulip_parse_eeprom ( struct net_device * dev ) ; 
/*--tulip_parse_eeprom--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) tulip_read_eeprom ( struct net_device * dev , int location , int addr_len ) ; 
/*--tulip_read_eeprom--*/
int tulip_refill_rx ( struct net_device * dev ) ; 
/*--tulip_refill_rx--*/
irqreturn_t tulip_interrupt ( int irq , void * dev_instance ) ; 
/*--tulip_interrupt--*/
int tulip_mdio_read ( struct net_device * dev , int phy_id , int location ) ; 
/*--tulip_mdio_read--*/
void tulip_mdio_write ( struct net_device * dev , int phy_id , int location , int val ) ; 
/*--tulip_mdio_write--*/
void tulip_select_media ( struct net_device * dev , int startup ) ; 
/*--tulip_select_media--*/
int tulip_check_duplex ( struct net_device * dev ) ; 
/*--tulip_check_duplex--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) tulip_find_mii ( struct net_device * dev , int board_idx ) ; 
/*--tulip_find_mii--*/
void tulip_media_task ( struct work_struct * work ) ; 
/*--tulip_media_task--*/
void mxic_timer ( unsigned long data ) ; 
/*--mxic_timer--*/
void comet_timer ( unsigned long data ) ; 
/*--comet_timer--*/
void t21142_media_task ( struct work_struct * work ) ; 
/*--t21142_media_task--*/
void t21142_start_nway ( struct net_device * dev ) ; 
/*--t21142_start_nway--*/
void t21142_lnk_change ( struct net_device * dev , int csr5 ) ; 
/*--t21142_lnk_change--*/
void pnic_do_nway ( struct net_device * dev ) ; 
/*--pnic_do_nway--*/
void pnic_lnk_change ( struct net_device * dev , int csr5 ) ; 
/*--pnic_lnk_change--*/
void pnic_timer ( unsigned long data ) ; 
/*--pnic_timer--*/
void pnic2_timer ( unsigned long data ) ; 
/*--pnic2_timer--*/
void pnic2_start_nway ( struct net_device * dev ) ; 
/*--pnic2_start_nway--*/
void pnic2_lnk_change ( struct net_device * dev , int csr5 ) ; 
/*--pnic2_lnk_change--*/
int usbnet_generic_cdc_bind ( struct usbnet * dev , struct usb_interface * intf ) ; 
/*--usbnet_generic_cdc_bind--*/
void usbnet_cdc_unbind ( struct usbnet * dev , struct usb_interface * intf ) ; 
/*--usbnet_cdc_unbind--*/
void rndis_status ( struct usbnet * dev , struct urb * urb ) ; 
/*--rndis_status--*/
int rndis_command ( struct usbnet * dev , struct rndis_msg_hdr * buf , int buflen ) ; 
/*--rndis_command--*/
int generic_rndis_bind ( struct usbnet * dev , struct usb_interface * intf , int flags ) ; 
/*--generic_rndis_bind--*/
void rndis_unbind ( struct usbnet * dev , struct usb_interface * intf ) ; 
/*--rndis_unbind--*/
int rndis_rx_fixup ( struct usbnet * dev , struct sk_buff * skb ) ; 
/*--rndis_rx_fixup--*/
struct sk_buff * rndis_tx_fixup ( struct usbnet * dev , struct sk_buff * skb , gfp_t flags ) ; 
/*--rndis_tx_fixup--*/
int usbnet_get_endpoints ( struct usbnet * dev , struct usb_interface * intf ) ; 
/*--usbnet_get_endpoints--*/
int usbnet_get_ethernet_addr ( struct usbnet * dev , int iMACAddress ) ; 
/*--usbnet_get_ethernet_addr--*/
void usbnet_skb_return ( struct usbnet * dev , struct sk_buff * skb ) ; 
/*--usbnet_skb_return--*/
int usbnet_change_mtu ( struct net_device * net , int new_mtu ) ; 
/*--usbnet_change_mtu--*/
void usbnet_defer_kevent ( struct usbnet * dev , int work ) ; 
/*--usbnet_defer_kevent--*/
void usbnet_pause_rx ( struct usbnet * dev ) ; 
/*--usbnet_pause_rx--*/
void usbnet_resume_rx ( struct usbnet * dev ) ; 
/*--usbnet_resume_rx--*/
void usbnet_purge_paused_rxq ( struct usbnet * dev ) ; 
/*--usbnet_purge_paused_rxq--*/
void usbnet_unlink_rx_urbs ( struct usbnet * dev ) ; 
/*--usbnet_unlink_rx_urbs--*/
int usbnet_stop ( struct net_device * net ) ; 
/*--usbnet_stop--*/
int usbnet_open ( struct net_device * net ) ; 
/*--usbnet_open--*/
int usbnet_get_settings ( struct net_device * net , struct ethtool_cmd * cmd ) ; 
/*--usbnet_get_settings--*/
int usbnet_set_settings ( struct net_device * net , struct ethtool_cmd * cmd ) ; 
/*--usbnet_set_settings--*/
u32 usbnet_get_link ( struct net_device * net ) ; 
/*--usbnet_get_link--*/
int usbnet_nway_reset ( struct net_device * net ) ; 
/*--usbnet_nway_reset--*/
void usbnet_get_drvinfo ( struct net_device * net , struct ethtool_drvinfo * info ) ; 
/*--usbnet_get_drvinfo--*/
u32 usbnet_get_msglevel ( struct net_device * net ) ; 
/*--usbnet_get_msglevel--*/
void usbnet_set_msglevel ( struct net_device * net , u32 level ) ; 
/*--usbnet_set_msglevel--*/
void usbnet_tx_timeout ( struct net_device * net ) ; 
/*--usbnet_tx_timeout--*/
netdev_tx_t usbnet_start_xmit ( struct sk_buff * skb , struct net_device * net ) ; 
/*--usbnet_start_xmit--*/
void usbnet_disconnect ( struct usb_interface * intf ) ; 
/*--usbnet_disconnect--*/
int usbnet_probe ( struct usb_interface * udev , const struct usb_device_id * prod ) ; 
/*--usbnet_probe--*/
int usbnet_suspend ( struct usb_interface * intf , pm_message_t message ) ; 
/*--usbnet_suspend--*/
int usbnet_resume ( struct usb_interface * intf ) ; 
/*--usbnet_resume--*/
int usbpn_probe ( struct usb_interface * intf , const struct usb_device_id * id ) ; 
/*--usbpn_probe--*/
void vmxnet3_tq_destroy ( struct vmxnet3_tx_queue * tq , struct vmxnet3_adapter * adapter ) ; 
/*--vmxnet3_tq_destroy--*/
void vmxnet3_rq_destroy ( struct vmxnet3_rx_queue * rq , struct vmxnet3_adapter * adapter ) ; 
/*--vmxnet3_rq_destroy--*/
int vmxnet3_activate_dev ( struct vmxnet3_adapter * adapter ) ; 
/*--vmxnet3_activate_dev--*/
void vmxnet3_reset_dev ( struct vmxnet3_adapter * adapter ) ; 
/*--vmxnet3_reset_dev--*/
int vmxnet3_quiesce_dev ( struct vmxnet3_adapter * adapter ) ; 
/*--vmxnet3_quiesce_dev--*/
int vmxnet3_create_queues ( struct vmxnet3_adapter * adapter , u32 tx_ring_size , u32 rx_ring_size , u32 rx_ring2_size ) ; 
/*--vmxnet3_create_queues--*/
void vmxnet3_force_close ( struct vmxnet3_adapter * adapter ) ; 
/*--vmxnet3_force_close--*/
struct net_device_stats * vmxnet3_get_stats ( struct net_device * netdev ) ; 
/*--vmxnet3_get_stats--*/
void vmxnet3_set_ethtool_ops ( struct net_device * netdev ) ; 
/*--vmxnet3_set_ethtool_ops--*/
struct __vxge_hw_channel * __vxge_hw_channel_allocate ( struct __vxge_hw_vpath_handle * vph , enum __vxge_hw_channel_type type , u32 length , u32 per_dtr_space , void * userdata ) ; 
/*--__vxge_hw_channel_allocate--*/
void __vxge_hw_channel_free ( struct __vxge_hw_channel * channel ) ; 
/*--__vxge_hw_channel_free--*/
enum vxge_hw_status __vxge_hw_channel_initialize ( struct __vxge_hw_channel * channel ) ; 
/*--__vxge_hw_channel_initialize--*/
enum vxge_hw_status __vxge_hw_channel_reset ( struct __vxge_hw_channel * channel ) ; 
/*--__vxge_hw_channel_reset--*/
void __vxge_hw_device_pci_e_init ( struct __vxge_hw_device * hldev ) ; 
/*--__vxge_hw_device_pci_e_init--*/
enum vxge_hw_status __vxge_hw_device_register_poll ( void * reg , u64 mask , u32 max_millis ) ; 
/*--__vxge_hw_device_register_poll--*/
enum vxge_hw_status __vxge_hw_device_vpath_reset_in_prog_check ( u64 * vpath_rst_in_prog ) ; 
/*--__vxge_hw_device_vpath_reset_in_prog_check--*/
struct vxge_hw_toc_reg * __vxge_hw_device_toc_get ( void * bar0 ) ; 
/*--__vxge_hw_device_toc_get--*/
enum vxge_hw_status __vxge_hw_device_reg_addr_get ( struct __vxge_hw_device * hldev ) ; 
/*--__vxge_hw_device_reg_addr_get--*/
void __vxge_hw_device_id_get ( struct __vxge_hw_device * hldev ) ; 
/*--__vxge_hw_device_id_get--*/
enum vxge_hw_status __vxge_hw_device_is_privilaged ( u32 host_type , u32 func_id ) ; 
/*--__vxge_hw_device_is_privilaged--*/
void __vxge_hw_device_host_info_get ( struct __vxge_hw_device * hldev ) ; 
/*--__vxge_hw_device_host_info_get--*/
enum vxge_hw_status __vxge_hw_device_initialize ( struct __vxge_hw_device * hldev ) ; 
/*--__vxge_hw_device_initialize--*/
enum vxge_hw_status __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) vxge_hw_device_hw_info_get ( void * bar0 , struct vxge_hw_device_hw_info * hw_info ) ; 
/*--vxge_hw_device_hw_info_get--*/
enum vxge_hw_status __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) vxge_hw_device_initialize ( struct __vxge_hw_device * * devh , struct vxge_hw_device_attr * attr , struct vxge_hw_device_config * device_config ) ; 
/*--vxge_hw_device_initialize--*/
void vxge_hw_device_terminate ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_terminate--*/
enum vxge_hw_status vxge_hw_device_stats_get ( struct __vxge_hw_device * hldev , struct vxge_hw_device_stats_hw_info * hw_stats ) ; 
/*--vxge_hw_device_stats_get--*/
enum vxge_hw_status vxge_hw_driver_stats_get ( struct __vxge_hw_device * hldev , struct vxge_hw_device_stats_sw_info * sw_stats ) ; 
/*--vxge_hw_driver_stats_get--*/
enum vxge_hw_status vxge_hw_mrpcim_stats_access ( struct __vxge_hw_device * hldev , u32 operation , u32 location , u32 offset , u64 * stat ) ; 
/*--vxge_hw_mrpcim_stats_access--*/
enum vxge_hw_status vxge_hw_device_xmac_aggr_stats_get ( struct __vxge_hw_device * hldev , u32 port , struct vxge_hw_xmac_aggr_stats * aggr_stats ) ; 
/*--vxge_hw_device_xmac_aggr_stats_get--*/
enum vxge_hw_status vxge_hw_device_xmac_port_stats_get ( struct __vxge_hw_device * hldev , u32 port , struct vxge_hw_xmac_port_stats * port_stats ) ; 
/*--vxge_hw_device_xmac_port_stats_get--*/
enum vxge_hw_status vxge_hw_device_xmac_stats_get ( struct __vxge_hw_device * hldev , struct vxge_hw_xmac_stats * xmac_stats ) ; 
/*--vxge_hw_device_xmac_stats_get--*/
void vxge_hw_device_debug_set ( struct __vxge_hw_device * hldev , enum vxge_debug_level level , u32 mask ) ; 
/*--vxge_hw_device_debug_set--*/
u32 vxge_hw_device_error_level_get ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_error_level_get--*/
u32 vxge_hw_device_trace_level_get ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_trace_level_get--*/
u32 vxge_hw_device_debug_mask_get ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_debug_mask_get--*/
enum vxge_hw_status vxge_hw_device_getpause_data ( struct __vxge_hw_device * hldev , u32 port , u32 * tx , u32 * rx ) ; 
/*--vxge_hw_device_getpause_data--*/
enum vxge_hw_status vxge_hw_device_setpause_data ( struct __vxge_hw_device * hldev , u32 port , u32 tx , u32 rx ) ; 
/*--vxge_hw_device_setpause_data--*/
u16 vxge_hw_device_link_width_get ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_link_width_get--*/
u64 __vxge_hw_ring_first_block_address_get ( struct __vxge_hw_ring * ring ) ; 
/*--__vxge_hw_ring_first_block_address_get--*/
enum vxge_hw_status vxge_hw_ring_replenish ( struct __vxge_hw_ring * ring ) ; 
/*--vxge_hw_ring_replenish--*/
enum vxge_hw_status __vxge_hw_ring_create ( struct __vxge_hw_vpath_handle * vp , struct vxge_hw_ring_attr * attr ) ; 
/*--__vxge_hw_ring_create--*/
enum vxge_hw_status __vxge_hw_ring_abort ( struct __vxge_hw_ring * ring ) ; 
/*--__vxge_hw_ring_abort--*/
enum vxge_hw_status __vxge_hw_ring_reset ( struct __vxge_hw_ring * ring ) ; 
/*--__vxge_hw_ring_reset--*/
enum vxge_hw_status __vxge_hw_ring_delete ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--__vxge_hw_ring_delete--*/
enum vxge_hw_status __vxge_hw_mempool_grow ( struct vxge_hw_mempool * mempool , u32 num_allocate , u32 * num_allocated ) ; 
/*--__vxge_hw_mempool_grow--*/
struct vxge_hw_mempool * __vxge_hw_mempool_create ( struct __vxge_hw_device * devh , u32 memblock_size , u32 item_size , u32 items_priv_size , u32 items_initial , u32 items_max , struct vxge_hw_mempool_cbs * mp_callback , void * userdata ) ; 
/*--__vxge_hw_mempool_create--*/
void __vxge_hw_mempool_destroy ( struct vxge_hw_mempool * mempool ) ; 
/*--__vxge_hw_mempool_destroy--*/
enum vxge_hw_status __vxge_hw_device_fifo_config_check ( struct vxge_hw_fifo_config * fifo_config ) ; 
/*--__vxge_hw_device_fifo_config_check--*/
enum vxge_hw_status __vxge_hw_device_vpath_config_check ( struct vxge_hw_vp_config * vp_config ) ; 
/*--__vxge_hw_device_vpath_config_check--*/
enum vxge_hw_status __vxge_hw_device_config_check ( struct vxge_hw_device_config * new_config ) ; 
/*--__vxge_hw_device_config_check--*/
enum vxge_hw_status __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) vxge_hw_device_config_default_get ( struct vxge_hw_device_config * device_config ) ; 
/*--vxge_hw_device_config_default_get--*/
enum vxge_hw_status __vxge_hw_legacy_swapper_set ( struct vxge_hw_legacy_reg * legacy_reg ) ; 
/*--__vxge_hw_legacy_swapper_set--*/
enum vxge_hw_status __vxge_hw_vpath_swapper_set ( struct vxge_hw_vpath_reg * vpath_reg ) ; 
/*--__vxge_hw_vpath_swapper_set--*/
enum vxge_hw_status __vxge_hw_kdfc_swapper_set ( struct vxge_hw_legacy_reg * legacy_reg , struct vxge_hw_vpath_reg * vpath_reg ) ; 
/*--__vxge_hw_kdfc_swapper_set--*/
enum vxge_hw_status vxge_hw_mgmt_device_config ( struct __vxge_hw_device * hldev , struct vxge_hw_device_config * dev_config , int size ) ; 
/*--vxge_hw_mgmt_device_config--*/
enum vxge_hw_status vxge_hw_mgmt_reg_read ( struct __vxge_hw_device * hldev , enum vxge_hw_mgmt_reg_type type , u32 index , u32 offset , u64 * value ) ; 
/*--vxge_hw_mgmt_reg_read--*/
enum vxge_hw_status vxge_hw_vpath_strip_fcs_check ( struct __vxge_hw_device * hldev , u64 vpath_mask ) ; 
/*--vxge_hw_vpath_strip_fcs_check--*/
enum vxge_hw_status vxge_hw_mgmt_reg_write ( struct __vxge_hw_device * hldev , enum vxge_hw_mgmt_reg_type type , u32 index , u32 offset , u64 value ) ; 
/*--vxge_hw_mgmt_reg_write--*/
enum vxge_hw_status __vxge_hw_fifo_create ( struct __vxge_hw_vpath_handle * vp , struct vxge_hw_fifo_attr * attr ) ; 
/*--__vxge_hw_fifo_create--*/
enum vxge_hw_status __vxge_hw_fifo_abort ( struct __vxge_hw_fifo * fifo ) ; 
/*--__vxge_hw_fifo_abort--*/
enum vxge_hw_status __vxge_hw_fifo_reset ( struct __vxge_hw_fifo * fifo ) ; 
/*--__vxge_hw_fifo_reset--*/
enum vxge_hw_status __vxge_hw_fifo_delete ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--__vxge_hw_fifo_delete--*/
enum vxge_hw_status __vxge_hw_vpath_pci_read ( struct __vxge_hw_virtualpath * vpath , u32 phy_func_0 , u32 offset , u32 * val ) ; 
/*--__vxge_hw_vpath_pci_read--*/
u32 __vxge_hw_vpath_func_id_get ( u32 vp_id , struct vxge_hw_vpmgmt_reg * vpmgmt_reg ) ; 
/*--__vxge_hw_vpath_func_id_get--*/
enum vxge_hw_status __vxge_hw_vpath_card_info_get ( u32 vp_id , struct vxge_hw_vpath_reg * vpath_reg , struct vxge_hw_device_hw_info * hw_info ) ; 
/*--__vxge_hw_vpath_card_info_get--*/
enum vxge_hw_status __vxge_hw_vpath_fw_ver_get ( u32 vp_id , struct vxge_hw_vpath_reg * vpath_reg , struct vxge_hw_device_hw_info * hw_info ) ; 
/*--__vxge_hw_vpath_fw_ver_get--*/
u64 __vxge_hw_vpath_pci_func_mode_get ( u32 vp_id , struct vxge_hw_vpath_reg * vpath_reg ) ; 
/*--__vxge_hw_vpath_pci_func_mode_get--*/
enum vxge_hw_status vxge_hw_device_flick_link_led ( struct __vxge_hw_device * hldev , u64 on_off ) ; 
/*--vxge_hw_device_flick_link_led--*/
enum vxge_hw_status __vxge_hw_vpath_rts_table_get ( struct __vxge_hw_vpath_handle * vp , u32 action , u32 rts_table , u32 offset , u64 * data1 , u64 * data2 ) ; 
/*--__vxge_hw_vpath_rts_table_get--*/
enum vxge_hw_status __vxge_hw_vpath_rts_table_set ( struct __vxge_hw_vpath_handle * vp , u32 action , u32 rts_table , u32 offset , u64 data1 , u64 data2 ) ; 
/*--__vxge_hw_vpath_rts_table_set--*/
enum vxge_hw_status __vxge_hw_vpath_addr_get ( u32 vp_id , struct vxge_hw_vpath_reg * vpath_reg , u8 ( macaddr ) [ 6 ] , u8 ( macaddr_mask ) [ 6 ] ) ; 
/*--__vxge_hw_vpath_addr_get--*/
enum vxge_hw_status vxge_hw_vpath_rts_rth_set ( struct __vxge_hw_vpath_handle * vp , enum vxge_hw_rth_algoritms algorithm , struct vxge_hw_rth_hash_types * hash_type , u16 bucket_size ) ; 
/*--vxge_hw_vpath_rts_rth_set--*/
enum vxge_hw_status vxge_hw_vpath_rts_rth_itable_set ( struct __vxge_hw_vpath_handle * * vpath_handles , u32 vpath_count , u8 * mtable , u8 * itable , u32 itable_size ) ; 
/*--vxge_hw_vpath_rts_rth_itable_set--*/
enum vxge_hw_status vxge_hw_vpath_check_leak ( struct __vxge_hw_ring * ring ) ; 
/*--vxge_hw_vpath_check_leak--*/
enum vxge_hw_status __vxge_hw_vpath_reset_check ( struct __vxge_hw_virtualpath * vpath ) ; 
/*--__vxge_hw_vpath_reset_check--*/
enum vxge_hw_status __vxge_hw_vpath_reset ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--__vxge_hw_vpath_reset--*/
enum vxge_hw_status __vxge_hw_vpath_sw_reset ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--__vxge_hw_vpath_sw_reset--*/
void __vxge_hw_vpath_prc_configure ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--__vxge_hw_vpath_prc_configure--*/
enum vxge_hw_status __vxge_hw_vpath_kdfc_configure ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--__vxge_hw_vpath_kdfc_configure--*/
enum vxge_hw_status __vxge_hw_vpath_mac_configure ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--__vxge_hw_vpath_mac_configure--*/
enum vxge_hw_status __vxge_hw_vpath_tim_configure ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--__vxge_hw_vpath_tim_configure--*/
void vxge_hw_vpath_tti_ci_set ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--vxge_hw_vpath_tti_ci_set--*/
enum vxge_hw_status __vxge_hw_vpath_initialize ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--__vxge_hw_vpath_initialize--*/
enum vxge_hw_status __vxge_hw_vp_initialize ( struct __vxge_hw_device * hldev , u32 vp_id , struct vxge_hw_vp_config * config ) ; 
/*--__vxge_hw_vp_initialize--*/
void __vxge_hw_vp_terminate ( struct __vxge_hw_device * hldev , u32 vp_id ) ; 
/*--__vxge_hw_vp_terminate--*/
enum vxge_hw_status vxge_hw_vpath_mtu_set ( struct __vxge_hw_vpath_handle * vp , u32 new_mtu ) ; 
/*--vxge_hw_vpath_mtu_set--*/
enum vxge_hw_status vxge_hw_vpath_open ( struct __vxge_hw_device * hldev , struct vxge_hw_vpath_attr * attr , struct __vxge_hw_vpath_handle * * vpath_handle ) ; 
/*--vxge_hw_vpath_open--*/
void vxge_hw_vpath_rx_doorbell_init ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_rx_doorbell_init--*/
enum vxge_hw_status vxge_hw_vpath_close ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_close--*/
enum vxge_hw_status vxge_hw_vpath_reset ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_reset--*/
enum vxge_hw_status vxge_hw_vpath_recover_from_reset ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_recover_from_reset--*/
void vxge_hw_vpath_enable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_enable--*/
enum vxge_hw_status vxge_hw_vpath_stats_enable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_stats_enable--*/
enum vxge_hw_status __vxge_hw_vpath_stats_access ( struct __vxge_hw_virtualpath * vpath , u32 operation , u32 offset , u64 * stat ) ; 
/*--__vxge_hw_vpath_stats_access--*/
enum vxge_hw_status __vxge_hw_vpath_xmac_tx_stats_get ( struct __vxge_hw_virtualpath * vpath , struct vxge_hw_xmac_vpath_tx_stats * vpath_tx_stats ) ; 
/*--__vxge_hw_vpath_xmac_tx_stats_get--*/
enum vxge_hw_status __vxge_hw_vpath_xmac_rx_stats_get ( struct __vxge_hw_virtualpath * vpath , struct vxge_hw_xmac_vpath_rx_stats * vpath_rx_stats ) ; 
/*--__vxge_hw_vpath_xmac_rx_stats_get--*/
enum vxge_hw_status __vxge_hw_vpath_stats_get ( struct __vxge_hw_virtualpath * vpath , struct vxge_hw_vpath_stats_hw_info * hw_stats ) ; 
/*--__vxge_hw_vpath_stats_get--*/
enum vxge_hw_status __vxge_hw_blockpool_create ( struct __vxge_hw_device * hldev , struct __vxge_hw_blockpool * blockpool , u32 pool_size , u32 pool_max ) ; 
/*--__vxge_hw_blockpool_create--*/
void __vxge_hw_blockpool_destroy ( struct __vxge_hw_blockpool * blockpool ) ; 
/*--__vxge_hw_blockpool_destroy--*/
void vxge_hw_blockpool_block_add ( struct __vxge_hw_device * devh , void * block_addr , u32 length , struct pci_dev * dma_h , struct pci_dev * acc_handle ) ; 
/*--vxge_hw_blockpool_block_add--*/
void * __vxge_hw_blockpool_malloc ( struct __vxge_hw_device * devh , u32 size , struct vxge_hw_mempool_dma * dma_object ) ; 
/*--__vxge_hw_blockpool_malloc--*/
void __vxge_hw_blockpool_free ( struct __vxge_hw_device * devh , void * memblock , u32 size , struct vxge_hw_mempool_dma * dma_object ) ; 
/*--__vxge_hw_blockpool_free--*/
struct __vxge_hw_blockpool_entry * __vxge_hw_blockpool_block_allocate ( struct __vxge_hw_device * devh , u32 size ) ; 
/*--__vxge_hw_blockpool_block_allocate--*/
void __vxge_hw_blockpool_block_free ( struct __vxge_hw_device * devh , struct __vxge_hw_blockpool_entry * entry ) ; 
/*--__vxge_hw_blockpool_block_free--*/
enum vxge_hw_status vxge_hw_vpath_intr_enable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_intr_enable--*/
enum vxge_hw_status vxge_hw_vpath_intr_disable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_intr_disable--*/
void vxge_hw_channel_msix_mask ( struct __vxge_hw_channel * channel , int msix_id ) ; 
/*--vxge_hw_channel_msix_mask--*/
void vxge_hw_channel_msix_unmask ( struct __vxge_hw_channel * channel , int msix_id ) ; 
/*--vxge_hw_channel_msix_unmask--*/
u32 vxge_hw_device_set_intr_type ( struct __vxge_hw_device * hldev , u32 intr_mode ) ; 
/*--vxge_hw_device_set_intr_type--*/
void vxge_hw_device_intr_enable ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_intr_enable--*/
void vxge_hw_device_intr_disable ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_intr_disable--*/
void vxge_hw_device_mask_all ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_mask_all--*/
void vxge_hw_device_unmask_all ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_unmask_all--*/
void vxge_hw_device_flush_io ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_flush_io--*/
enum vxge_hw_status vxge_hw_device_begin_irq ( struct __vxge_hw_device * hldev , u32 skip_alarms , u64 * reason ) ; 
/*--vxge_hw_device_begin_irq--*/
enum vxge_hw_status __vxge_hw_device_handle_link_up_ind ( struct __vxge_hw_device * hldev ) ; 
/*--__vxge_hw_device_handle_link_up_ind--*/
enum vxge_hw_status __vxge_hw_device_handle_link_down_ind ( struct __vxge_hw_device * hldev ) ; 
/*--__vxge_hw_device_handle_link_down_ind--*/
enum vxge_hw_status __vxge_hw_device_handle_error ( struct __vxge_hw_device * hldev , u32 vp_id , enum vxge_hw_event type ) ; 
/*--__vxge_hw_device_handle_error--*/
void vxge_hw_device_clear_tx_rx ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_hw_device_clear_tx_rx--*/
enum vxge_hw_status vxge_hw_channel_dtr_alloc ( struct __vxge_hw_channel * channel , void * * dtrh ) ; 
/*--vxge_hw_channel_dtr_alloc--*/
void vxge_hw_channel_dtr_post ( struct __vxge_hw_channel * channel , void * dtrh ) ; 
/*--vxge_hw_channel_dtr_post--*/
void vxge_hw_channel_dtr_try_complete ( struct __vxge_hw_channel * channel , void * * dtrh ) ; 
/*--vxge_hw_channel_dtr_try_complete--*/
void vxge_hw_channel_dtr_complete ( struct __vxge_hw_channel * channel ) ; 
/*--vxge_hw_channel_dtr_complete--*/
void vxge_hw_channel_dtr_free ( struct __vxge_hw_channel * channel , void * dtrh ) ; 
/*--vxge_hw_channel_dtr_free--*/
int vxge_hw_channel_dtr_count ( struct __vxge_hw_channel * channel ) ; 
/*--vxge_hw_channel_dtr_count--*/
enum vxge_hw_status vxge_hw_ring_rxd_reserve ( struct __vxge_hw_ring * ring , void * * rxdh ) ; 
/*--vxge_hw_ring_rxd_reserve--*/
void vxge_hw_ring_rxd_free ( struct __vxge_hw_ring * ring , void * rxdh ) ; 
/*--vxge_hw_ring_rxd_free--*/
void vxge_hw_ring_rxd_pre_post ( struct __vxge_hw_ring * ring , void * rxdh ) ; 
/*--vxge_hw_ring_rxd_pre_post--*/
void vxge_hw_ring_rxd_post_post ( struct __vxge_hw_ring * ring , void * rxdh ) ; 
/*--vxge_hw_ring_rxd_post_post--*/
void vxge_hw_ring_rxd_post ( struct __vxge_hw_ring * ring , void * rxdh ) ; 
/*--vxge_hw_ring_rxd_post--*/
void vxge_hw_ring_rxd_post_post_wmb ( struct __vxge_hw_ring * ring , void * rxdh ) ; 
/*--vxge_hw_ring_rxd_post_post_wmb--*/
enum vxge_hw_status vxge_hw_ring_rxd_next_completed ( struct __vxge_hw_ring * ring , void * * rxdh , u8 * t_code ) ; 
/*--vxge_hw_ring_rxd_next_completed--*/
enum vxge_hw_status vxge_hw_ring_handle_tcode ( struct __vxge_hw_ring * ring , void * rxdh , u8 t_code ) ; 
/*--vxge_hw_ring_handle_tcode--*/
u32 vxge_hw_fifo_free_txdl_count_get ( struct __vxge_hw_fifo * fifoh ) ; 
/*--vxge_hw_fifo_free_txdl_count_get--*/
enum vxge_hw_status vxge_hw_fifo_txdl_reserve ( struct __vxge_hw_fifo * fifo , void * * txdlh , void * * txdl_priv ) ; 
/*--vxge_hw_fifo_txdl_reserve--*/
void vxge_hw_fifo_txdl_buffer_set ( struct __vxge_hw_fifo * fifo , void * txdlh , u32 frag_idx , dma_addr_t dma_pointer , u32 size ) ; 
/*--vxge_hw_fifo_txdl_buffer_set--*/
void vxge_hw_fifo_txdl_post ( struct __vxge_hw_fifo * fifo , void * txdlh ) ; 
/*--vxge_hw_fifo_txdl_post--*/
enum vxge_hw_status vxge_hw_fifo_txdl_next_completed ( struct __vxge_hw_fifo * fifo , void * * txdlh , enum vxge_hw_fifo_tcode * t_code ) ; 
/*--vxge_hw_fifo_txdl_next_completed--*/
enum vxge_hw_status vxge_hw_fifo_handle_tcode ( struct __vxge_hw_fifo * fifo , void * txdlh , enum vxge_hw_fifo_tcode t_code ) ; 
/*--vxge_hw_fifo_handle_tcode--*/
void vxge_hw_fifo_txdl_free ( struct __vxge_hw_fifo * fifo , void * txdlh ) ; 
/*--vxge_hw_fifo_txdl_free--*/
enum vxge_hw_status vxge_hw_vpath_mac_addr_add ( struct __vxge_hw_vpath_handle * vp , u8 ( macaddr ) [ 6 ] , u8 ( macaddr_mask ) [ 6 ] , enum vxge_hw_vpath_mac_addr_add_mode duplicate_mode ) ; 
/*--vxge_hw_vpath_mac_addr_add--*/
enum vxge_hw_status vxge_hw_vpath_mac_addr_get ( struct __vxge_hw_vpath_handle * vp , u8 ( macaddr ) [ 6 ] , u8 ( macaddr_mask ) [ 6 ] ) ; 
/*--vxge_hw_vpath_mac_addr_get--*/
enum vxge_hw_status vxge_hw_vpath_mac_addr_get_next ( struct __vxge_hw_vpath_handle * vp , u8 ( macaddr ) [ 6 ] , u8 ( macaddr_mask ) [ 6 ] ) ; 
/*--vxge_hw_vpath_mac_addr_get_next--*/
enum vxge_hw_status vxge_hw_vpath_mac_addr_delete ( struct __vxge_hw_vpath_handle * vp , u8 ( macaddr ) [ 6 ] , u8 ( macaddr_mask ) [ 6 ] ) ; 
/*--vxge_hw_vpath_mac_addr_delete--*/
enum vxge_hw_status vxge_hw_vpath_vid_add ( struct __vxge_hw_vpath_handle * vp , u64 vid ) ; 
/*--vxge_hw_vpath_vid_add--*/
enum vxge_hw_status vxge_hw_vpath_vid_get ( struct __vxge_hw_vpath_handle * vp , u64 * vid ) ; 
/*--vxge_hw_vpath_vid_get--*/
enum vxge_hw_status vxge_hw_vpath_vid_get_next ( struct __vxge_hw_vpath_handle * vp , u64 * vid ) ; 
/*--vxge_hw_vpath_vid_get_next--*/
enum vxge_hw_status vxge_hw_vpath_vid_delete ( struct __vxge_hw_vpath_handle * vp , u64 vid ) ; 
/*--vxge_hw_vpath_vid_delete--*/
enum vxge_hw_status vxge_hw_vpath_promisc_enable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_promisc_enable--*/
enum vxge_hw_status vxge_hw_vpath_promisc_disable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_promisc_disable--*/
enum vxge_hw_status vxge_hw_vpath_bcast_enable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_bcast_enable--*/
enum vxge_hw_status vxge_hw_vpath_mcast_enable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_mcast_enable--*/
enum vxge_hw_status vxge_hw_vpath_mcast_disable ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_mcast_disable--*/
enum vxge_hw_status __vxge_hw_vpath_alarm_process ( struct __vxge_hw_virtualpath * vpath , u32 skip_alarms ) ; 
/*--__vxge_hw_vpath_alarm_process--*/
enum vxge_hw_status vxge_hw_vpath_alarm_process ( struct __vxge_hw_vpath_handle * vp , u32 skip_alarms ) ; 
/*--vxge_hw_vpath_alarm_process--*/
void vxge_hw_vpath_msix_set ( struct __vxge_hw_vpath_handle * vp , int * tim_msix_id , int alarm_msix_id ) ; 
/*--vxge_hw_vpath_msix_set--*/
void vxge_hw_vpath_msix_mask ( struct __vxge_hw_vpath_handle * vp , int msix_id ) ; 
/*--vxge_hw_vpath_msix_mask--*/
void vxge_hw_vpath_msix_clear ( struct __vxge_hw_vpath_handle * vp , int msix_id ) ; 
/*--vxge_hw_vpath_msix_clear--*/
void vxge_hw_vpath_msix_unmask ( struct __vxge_hw_vpath_handle * vp , int msix_id ) ; 
/*--vxge_hw_vpath_msix_unmask--*/
void vxge_hw_vpath_msix_mask_all ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_msix_mask_all--*/
void vxge_hw_vpath_inta_mask_tx_rx ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_inta_mask_tx_rx--*/
void vxge_hw_vpath_inta_unmask_tx_rx ( struct __vxge_hw_vpath_handle * vp ) ; 
/*--vxge_hw_vpath_inta_unmask_tx_rx--*/
enum vxge_hw_status vxge_hw_vpath_poll_rx ( struct __vxge_hw_ring * ring ) ; 
/*--vxge_hw_vpath_poll_rx--*/
enum vxge_hw_status vxge_hw_vpath_poll_tx ( struct __vxge_hw_fifo * fifo , struct sk_buff * * * skb_ptr , int nr_skb , int * more ) ; 
/*--vxge_hw_vpath_poll_tx--*/
void initialize_ethtool_ops ( struct net_device * ndev ) ; 
/*--initialize_ethtool_ops--*/
void vxge_stop_all_tx_queue ( struct vxgedev * vdev ) ; 
/*--vxge_stop_all_tx_queue--*/
void vxge_stop_tx_queue ( struct vxge_fifo * fifo ) ; 
/*--vxge_stop_tx_queue--*/
void vxge_start_all_tx_queue ( struct vxgedev * vdev ) ; 
/*--vxge_start_all_tx_queue--*/
void vxge_wake_tx_queue ( struct vxge_fifo * fifo , struct sk_buff * skb ) ; 
/*--vxge_wake_tx_queue--*/
void vxge_callback_link_up ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_callback_link_up--*/
void vxge_callback_link_down ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_callback_link_down--*/
enum vxge_hw_status vxge_rx_1b_compl ( struct __vxge_hw_ring * ringh , void * dtr , u8 t_code , void * userdata ) ; 
/*--vxge_rx_1b_compl--*/
enum vxge_hw_status vxge_xmit_compl ( struct __vxge_hw_fifo * fifo_hw , void * dtr , enum vxge_hw_fifo_tcode t_code , void * userdata , struct sk_buff * * * skb_ptr , int nr_skb , int * more ) ; 
/*--vxge_xmit_compl--*/
void vxge_vpath_intr_enable ( struct vxgedev * vdev , int vp_id ) ; 
/*--vxge_vpath_intr_enable--*/
void vxge_vpath_intr_disable ( struct vxgedev * vdev , int vp_id ) ; 
/*--vxge_vpath_intr_disable--*/
int vxge_reset ( struct vxgedev * vdev ) ; 
/*--vxge_reset--*/
int vxge_mac_list_add ( struct vxge_vpath * vpath , struct macInfo * mac ) ; 
/*--vxge_mac_list_add--*/
enum vxge_hw_status vxge_add_mac_addr ( struct vxgedev * vdev , struct macInfo * mac ) ; 
/*--vxge_add_mac_addr--*/
int vxge_mac_list_del ( struct vxge_vpath * vpath , struct macInfo * mac ) ; 
/*--vxge_mac_list_del--*/
enum vxge_hw_status vxge_del_mac_addr ( struct vxgedev * vdev , struct macInfo * mac ) ; 
/*--vxge_del_mac_addr--*/
enum vxge_hw_status vxge_restore_vpath_vid_table ( struct vxge_vpath * vpath ) ; 
/*--vxge_restore_vpath_vid_table--*/
enum vxge_hw_status vxge_restore_vpath_mac_addr ( struct vxge_vpath * vpath ) ; 
/*--vxge_restore_vpath_mac_addr--*/
enum vxge_hw_status vxge_reset_all_vpaths ( struct vxgedev * vdev ) ; 
/*--vxge_reset_all_vpaths--*/
void vxge_close_vpaths ( struct vxgedev * vdev , int index ) ; 
/*--vxge_close_vpaths--*/
int vxge_open_vpaths ( struct vxgedev * vdev ) ; 
/*--vxge_open_vpaths--*/
int vxge_open ( struct net_device * dev ) ; 
/*--vxge_open--*/
void vxge_free_mac_add_list ( struct vxge_vpath * vpath ) ; 
/*--vxge_free_mac_add_list--*/
int do_vxge_close ( struct net_device * dev , int do_io ) ; 
/*--do_vxge_close--*/
int vxge_close ( struct net_device * dev ) ; 
/*--vxge_close--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) vxge_device_register ( struct __vxge_hw_device * hldev , struct vxge_config * config , int high_dma , int no_of_vpath , struct vxgedev * * vdev_out ) ; 
/*--vxge_device_register--*/
void vxge_device_unregister ( struct __vxge_hw_device * hldev ) ; 
/*--vxge_device_unregister--*/
int hdlc_change_mtu ( struct net_device * dev , int new_mtu ) ; 
/*--hdlc_change_mtu--*/
netdev_tx_t hdlc_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--hdlc_start_xmit--*/
int hdlc_open ( struct net_device * dev ) ; 
/*--hdlc_open--*/
void hdlc_close ( struct net_device * dev ) ; 
/*--hdlc_close--*/
int hdlc_ioctl ( struct net_device * dev , struct ifreq * ifr , int cmd ) ; 
/*--hdlc_ioctl--*/
struct net_device * alloc_hdlcdev ( void * priv ) ; 
/*--alloc_hdlcdev--*/
void unregister_hdlc_device ( struct net_device * dev ) ; 
/*--unregister_hdlc_device--*/
int attach_hdlc_protocol ( struct net_device * dev , struct hdlc_proto * proto , size_t size ) ; 
/*--attach_hdlc_protocol--*/
void detach_hdlc_protocol ( struct net_device * dev ) ; 
/*--detach_hdlc_protocol--*/
void register_hdlc_protocol ( struct hdlc_proto * proto ) ; 
/*--register_hdlc_protocol--*/
void unregister_hdlc_protocol ( struct hdlc_proto * proto ) ; 
/*--unregister_hdlc_protocol--*/
int cycx_setup ( struct cycx_hw * hw , void * cfm , u32 len , unsigned long dpmbase ) ; 
/*--cycx_setup--*/
int cycx_down ( struct cycx_hw * hw ) ; 
/*--cycx_down--*/
void cycx_intr ( struct cycx_hw * hw ) ; 
/*--cycx_intr--*/
int cycx_exec ( void * addr ) ; 
/*--cycx_exec--*/
int cycx_peek ( struct cycx_hw * hw , u32 addr , void * buf , u32 len ) ; 
/*--cycx_peek--*/
int cycx_poke ( struct cycx_hw * hw , u32 addr , void * buf , u32 len ) ; 
/*--cycx_poke--*/
void cycx_set_state ( struct cycx_device * card , int state ) ; 
/*--cycx_set_state--*/
int cycx_x25_wan_init ( struct cycx_device * card , wandev_conf_t * conf ) ; 
/*--cycx_x25_wan_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) sbni_probe ( int unit ) ; 
/*--sbni_probe--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) init_module ( void ) ; 
void lmc_trace ( struct net_device * dev , char * msg ) ; 
/*--lmc_trace--*/
int lmc_ioctl ( struct net_device * dev , struct ifreq * ifr , int cmd ) ; 
/*--lmc_ioctl--*/
; unsigned lmc_mii_readreg ( lmc_softc_t * const sc , unsigned devaddr , unsigned regno ) ; 
/*--lmc_mii_readreg--*/
void lmc_mii_writereg ( lmc_softc_t * const sc , unsigned devaddr , unsigned regno , unsigned data ) ; 
/*--lmc_mii_writereg--*/
void lmc_gpio_mkinput ( lmc_softc_t * const sc , u32 bits ) ; 
/*--lmc_gpio_mkinput--*/
void lmc_gpio_mkoutput ( lmc_softc_t * const sc , u32 bits ) ; 
/*--lmc_gpio_mkoutput--*/
void lmc_led_on ( lmc_softc_t * const sc , u32 led ) ; 
/*--lmc_led_on--*/
void lmc_led_off ( lmc_softc_t * const sc , u32 led ) ; 
/*--lmc_led_off--*/
void lmc_proto_attach ( lmc_softc_t * sc ) ; 
/*--lmc_proto_attach--*/
int lmc_proto_ioctl ( lmc_softc_t * sc , struct ifreq * ifr , int cmd ) ; 
/*--lmc_proto_ioctl--*/
int lmc_proto_open ( lmc_softc_t * sc ) ; 
/*--lmc_proto_open--*/
void lmc_proto_close ( lmc_softc_t * sc ) ; 
/*--lmc_proto_close--*/
__be16 lmc_proto_type ( lmc_softc_t * sc , struct sk_buff * skb ) ; 
/*--lmc_proto_type--*/
void lmc_proto_netif ( lmc_softc_t * sc , struct sk_buff * skb ) ; 
/*--lmc_proto_netif--*/
void i2400ms_bus_tx_kick ( struct i2400m * i2400m ) ; 
/*--i2400ms_bus_tx_kick--*/
int i2400ms_tx_setup ( struct i2400ms * i2400ms ) ; 
/*--i2400ms_tx_setup--*/
void i2400ms_tx_release ( struct i2400ms * i2400ms ) ; 
/*--i2400ms_tx_release--*/
ssize_t i2400ms_bus_bm_cmd_send ( struct i2400m * i2400m , const struct i2400m_bootrom_header * _cmd , size_t cmd_size , int flags ) ; 
/*--i2400ms_bus_bm_cmd_send--*/
ssize_t i2400ms_bus_bm_wait_for_ack ( struct i2400m * i2400m , struct i2400m_bootrom_header * ack , size_t ack_size ) ; 
/*--i2400ms_bus_bm_wait_for_ack--*/
ssize_t __i2400ms_rx_get_size ( struct i2400ms * i2400ms ) ; 
/*--__i2400ms_rx_get_size--*/
int i2400ms_rx_setup ( struct i2400ms * i2400ms ) ; 
/*--i2400ms_rx_setup--*/
void i2400ms_rx_release ( struct i2400ms * i2400ms ) ; 
/*--i2400ms_rx_release--*/
ssize_t i2400mu_bus_bm_cmd_send ( struct i2400m * i2400m , const struct i2400m_bootrom_header * _cmd , size_t cmd_size , int flags ) ; 
/*--i2400mu_bus_bm_cmd_send--*/
ssize_t i2400mu_bus_bm_wait_for_ack ( struct i2400m * i2400m , struct i2400m_bootrom_header * _ack , size_t ack_size ) ; 
/*--i2400mu_bus_bm_wait_for_ack--*/
int i2400mu_notification_setup ( struct i2400mu * i2400mu ) ; 
/*--i2400mu_notification_setup--*/
void i2400mu_notification_release ( struct i2400mu * i2400mu ) ; 
/*--i2400mu_notification_release--*/
void i2400mu_bus_tx_kick ( struct i2400m * i2400m ) ; 
/*--i2400mu_bus_tx_kick--*/
int i2400mu_tx_setup ( struct i2400mu * i2400mu ) ; 
/*--i2400mu_tx_setup--*/
void i2400mu_tx_release ( struct i2400mu * i2400mu ) ; 
/*--i2400mu_tx_release--*/
void i2400mu_rx_kick ( struct i2400mu * i2400mu ) ; 
/*--i2400mu_rx_kick--*/
int i2400mu_rx_setup ( struct i2400mu * i2400mu ) ; 
/*--i2400mu_rx_setup--*/
void i2400mu_rx_release ( struct i2400mu * i2400mu ) ; 
/*--i2400mu_rx_release--*/
int i2400m_msg_check_status ( const struct i2400m_l3l4_hdr * l3l4_hdr , char * strbuf , size_t strbuf_size ) ; 
/*--i2400m_msg_check_status--*/
void i2400m_report_hook ( struct i2400m * i2400m , const struct i2400m_l3l4_hdr * l3l4_hdr , size_t size ) ; 
/*--i2400m_report_hook--*/
void i2400m_msg_ack_hook ( struct i2400m * i2400m , const struct i2400m_l3l4_hdr * l3l4_hdr , size_t size ) ; 
/*--i2400m_msg_ack_hook--*/
int i2400m_msg_size_check ( struct i2400m * i2400m , const struct i2400m_l3l4_hdr * l3l4_hdr , size_t msg_size ) ; 
/*--i2400m_msg_size_check--*/
void i2400m_msg_to_dev_cancel_wait ( struct i2400m * i2400m , int code ) ; 
/*--i2400m_msg_to_dev_cancel_wait--*/
struct sk_buff * i2400m_msg_to_dev ( struct i2400m * i2400m , const void * buf , size_t buf_len ) ; 
/*--i2400m_msg_to_dev--*/
int i2400m_cmd_enter_powersave ( struct i2400m * i2400m ) ; 
/*--i2400m_cmd_enter_powersave--*/
struct sk_buff * i2400m_get_device_info ( struct i2400m * i2400m ) ; 
/*--i2400m_get_device_info--*/
int i2400m_firmware_check ( struct i2400m * i2400m ) ; 
/*--i2400m_firmware_check--*/
int i2400m_cmd_exit_idle ( struct i2400m * i2400m ) ; 
/*--i2400m_cmd_exit_idle--*/
int i2400m_cmd_get_state ( struct i2400m * i2400m ) ; 
/*--i2400m_cmd_get_state--*/
int i2400m_set_init_config ( struct i2400m * i2400m , const struct i2400m_tlv_hdr * * arg , size_t args ) ; 
/*--i2400m_set_init_config--*/
int i2400m_set_idle_timeout ( struct i2400m * i2400m , unsigned msecs ) ; 
/*--i2400m_set_idle_timeout--*/
int i2400m_dev_initialize ( struct i2400m * i2400m ) ; 
/*--i2400m_dev_initialize--*/
void i2400m_dev_shutdown ( struct i2400m * i2400m ) ; 
/*--i2400m_dev_shutdown--*/
int i2400m_schedule_work ( struct i2400m * i2400m , void ( * fn ) ( struct work_struct * ) , gfp_t gfp_flags , const void * pl , size_t pl_size ) ; 
/*--i2400m_schedule_work--*/
int i2400m_pre_reset ( struct i2400m * i2400m ) ; 
/*--i2400m_pre_reset--*/
int i2400m_post_reset ( struct i2400m * i2400m ) ; 
/*--i2400m_post_reset--*/
int i2400m_dev_reset_handle ( struct i2400m * i2400m , const char * reason ) ; 
/*--i2400m_dev_reset_handle--*/
void i2400m_error_recovery ( struct i2400m * i2400m ) ; 
/*--i2400m_error_recovery--*/
void i2400m_init ( struct i2400m * i2400m ) ; 
/*--i2400m_init--*/
int i2400m_reset ( struct i2400m * i2400m , enum i2400m_reset_type rt ) ; 
/*--i2400m_reset--*/
int i2400m_setup ( struct i2400m * i2400m , enum i2400m_bri bm_flags ) ; 
/*--i2400m_setup--*/
void i2400m_release ( struct i2400m * i2400m ) ; 
/*--i2400m_release--*/
void i2400m_bm_cmd_prepare ( struct i2400m_bootrom_header * cmd ) ; 
/*--i2400m_bm_cmd_prepare--*/
void i2400m_barker_db_exit ( void ) ; 
/*--i2400m_barker_db_exit--*/
int i2400m_barker_db_init ( const char * _options ) ; 
/*--i2400m_barker_db_init--*/
int i2400m_is_boot_barker ( struct i2400m * i2400m , const void * buf , size_t buf_size ) ; 
/*--i2400m_is_boot_barker--*/
int i2400m_bootrom_init ( struct i2400m * i2400m , enum i2400m_bri flags ) ; 
/*--i2400m_bootrom_init--*/
int i2400m_read_mac_addr ( struct i2400m * i2400m ) ; 
/*--i2400m_read_mac_addr--*/
int i2400m_dev_bootstrap ( struct i2400m * i2400m , enum i2400m_bri flags ) ; 
/*--i2400m_dev_bootstrap--*/
void i2400m_fw_cache ( struct i2400m * i2400m ) ; 
/*--i2400m_fw_cache--*/
void i2400m_fw_uncache ( struct i2400m * i2400m ) ; 
/*--i2400m_fw_uncache--*/
int i2400m_op_rfkill_sw_toggle ( struct wimax_dev * wimax_dev , enum wimax_rf_state state ) ; 
/*--i2400m_op_rfkill_sw_toggle--*/
void i2400m_report_tlv_rf_switches_status ( struct i2400m * i2400m , const struct i2400m_tlv_rf_switches_status * rfss ) ; 
/*--i2400m_report_tlv_rf_switches_status--*/
void i2400m_wake_tx_work ( struct work_struct * ws ) ; 
/*--i2400m_wake_tx_work--*/
void i2400m_net_wake_stop ( struct i2400m * i2400m ) ; 
/*--i2400m_net_wake_stop--*/
void i2400m_net_rx ( struct i2400m * i2400m , struct sk_buff * skb_rx , unsigned i , const void * buf , int buf_len ) ; 
/*--i2400m_net_rx--*/
void i2400m_net_erx ( struct i2400m * i2400m , struct sk_buff * skb , enum i2400m_cs cs ) ; 
/*--i2400m_net_erx--*/
void i2400m_netdev_setup ( struct net_device * net_dev ) ; 
/*--i2400m_netdev_setup--*/
int i2400m_tx ( struct i2400m * i2400m , const void * buf , size_t buf_len , enum i2400m_pt pl_type ) ; 
/*--i2400m_tx--*/
struct i2400m_msg_hdr * i2400m_tx_msg_get ( struct i2400m * i2400m , size_t * bus_size ) ; 
/*--i2400m_tx_msg_get--*/
void i2400m_tx_msg_sent ( struct i2400m * i2400m ) ; 
/*--i2400m_tx_msg_sent--*/
int i2400m_tx_setup ( struct i2400m * i2400m ) ; 
/*--i2400m_tx_setup--*/
void i2400m_tx_release ( struct i2400m * i2400m ) ; 
/*--i2400m_tx_release--*/
void i2400m_report_hook_work ( struct work_struct * ws ) ; 
/*--i2400m_report_hook_work--*/
void i2400m_rx_roq_destroy ( struct kref * ref ) ; 
/*--i2400m_rx_roq_destroy--*/
int i2400m_rx ( struct i2400m * i2400m , struct sk_buff * skb ) ; 
/*--i2400m_rx--*/
void i2400m_unknown_barker ( struct i2400m * i2400m , const void * buf , size_t size ) ; 
/*--i2400m_unknown_barker--*/
int i2400m_rx_setup ( struct i2400m * i2400m ) ; 
/*--i2400m_rx_setup--*/
void i2400m_rx_release ( struct i2400m * i2400m ) ; 
/*--i2400m_rx_release--*/
int i2400m_debugfs_add ( struct i2400m * i2400m ) ; 
/*--i2400m_debugfs_add--*/
void i2400m_debugfs_rm ( struct i2400m * i2400m ) ; 
/*--i2400m_debugfs_rm--*/
void stop_airo_card ( struct net_device * dev , int freeres ) ; 
/*--stop_airo_card--*/
struct net_device * init_airo_card ( unsigned short irq , int port , int is_pcmcia , struct device * dmdev ) ; 
/*--init_airo_card--*/
int reset_airo_card ( struct net_device * dev ) ; 
/*--reset_airo_card--*/
int atmel_open ( struct net_device * dev ) ; 
/*--atmel_open--*/
struct net_device * init_atmel_card ( unsigned short irq , unsigned long port , const AtmelFWType fw_type , struct device * sys_dev , int ( * card_present ) ( void * ) , void * card ) ; 
/*--init_atmel_card--*/
void stop_atmel_card ( struct net_device * dev ) ; 
/*--stop_atmel_card--*/
struct sk_buff * ath_rxbuf_alloc ( struct ath_common * common , u32 len , gfp_t gfp_mask ) ; 
/*--ath_rxbuf_alloc--*/
bool ath_is_world_regd ( struct ath_regulatory * reg ) ; 
/*--ath_is_world_regd--*/
int ath_reg_notifier_apply ( struct wiphy * wiphy , struct regulatory_request * request , struct ath_regulatory * reg ) ; 
/*--ath_reg_notifier_apply--*/
int ath_regd_init ( struct ath_regulatory * reg , struct wiphy * wiphy , int ( * reg_notifier ) ( struct wiphy * wiphy , struct regulatory_request * request ) ) ; 
/*--ath_regd_init--*/
u32 ath_regd_get_band_ctl ( struct ath_regulatory * reg , enum ieee80211_band band ) ; 
/*--ath_regd_get_band_ctl--*/
void ath_hw_setbssidmask ( struct ath_common * common ) ; 
/*--ath_hw_setbssidmask--*/
void ar9170_tx_callback ( struct ar9170 * ar , struct sk_buff * skb ) ; 
/*--ar9170_tx_callback--*/
void ar9170_handle_command_response ( struct ar9170 * ar , void * buf , u32 len ) ; 
/*--ar9170_handle_command_response--*/
int ar9170_nag_limiter ( struct ar9170 * ar ) ; 
/*--ar9170_nag_limiter--*/
void ar9170_rx ( struct ar9170 * ar , struct sk_buff * skb ) ; 
/*--ar9170_rx--*/
int ar9170_op_tx ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--ar9170_op_tx--*/
void * ar9170_alloc ( size_t priv_size ) ; 
/*--ar9170_alloc--*/
int ar9170_register ( struct ar9170 * ar , struct device * pdev ) ; 
/*--ar9170_register--*/
void ar9170_unregister ( struct ar9170 * ar ) ; 
/*--ar9170_unregister--*/
int ar9170_write_mem ( struct ar9170 * ar , const __le32 * data , size_t len ) ; 
/*--ar9170_write_mem--*/
int ar9170_write_reg ( struct ar9170 * ar , const u32 reg , const u32 val ) ; 
/*--ar9170_write_reg--*/
int ar9170_read_mreg ( struct ar9170 * ar , int nregs , const u32 * regs , u32 * out ) ; 
/*--ar9170_read_mreg--*/
int ar9170_read_reg ( struct ar9170 * ar , u32 reg , u32 * val ) ; 
/*--ar9170_read_reg--*/
int ar9170_echo_test ( struct ar9170 * ar , u32 v ) ; 
/*--ar9170_echo_test--*/
int ar9170_set_dyn_sifs_ack ( struct ar9170 * ar ) ; 
/*--ar9170_set_dyn_sifs_ack--*/
int ar9170_set_slot_time ( struct ar9170 * ar ) ; 
/*--ar9170_set_slot_time--*/
int ar9170_set_basic_rates ( struct ar9170 * ar ) ; 
/*--ar9170_set_basic_rates--*/
int ar9170_set_qos ( struct ar9170 * ar ) ; 
/*--ar9170_set_qos--*/
int ar9170_init_mac ( struct ar9170 * ar ) ; 
/*--ar9170_init_mac--*/
int ar9170_update_multicast ( struct ar9170 * ar , const u64 mc_hash ) ; 
/*--ar9170_update_multicast--*/
int ar9170_update_frame_filter ( struct ar9170 * ar , const u32 filter ) ; 
/*--ar9170_update_frame_filter--*/
int ar9170_set_operating_mode ( struct ar9170 * ar ) ; 
/*--ar9170_set_operating_mode--*/
int ar9170_set_hwretry_limit ( struct ar9170 * ar , unsigned int max_retry ) ; 
/*--ar9170_set_hwretry_limit--*/
int ar9170_set_beacon_timers ( struct ar9170 * ar ) ; 
/*--ar9170_set_beacon_timers--*/
int ar9170_update_beacon ( struct ar9170 * ar ) ; 
/*--ar9170_update_beacon--*/
void ar9170_new_beacon ( struct work_struct * work ) ; 
/*--ar9170_new_beacon--*/
int ar9170_upload_key ( struct ar9170 * ar , u8 id , const u8 * mac , u8 ktype , u8 keyidx , u8 * keydata , int keylen ) ; 
/*--ar9170_upload_key--*/
int ar9170_disable_key ( struct ar9170 * ar , u8 id ) ; 
/*--ar9170_disable_key--*/
int ar9170_init_phy ( struct ar9170 * ar , enum ieee80211_band band ) ; 
/*--ar9170_init_phy--*/
int ar9170_init_rf ( struct ar9170 * ar ) ; 
/*--ar9170_init_rf--*/
int ar9170_set_channel ( struct ar9170 * ar , struct ieee80211_channel * channel , enum ar9170_rf_init_mode rfi , enum ar9170_bw bw ) ; 
/*--ar9170_set_channel--*/
int ar9170_set_leds_state ( struct ar9170 * ar , u32 led_state ) ; 
/*--ar9170_set_leds_state--*/
int ar9170_init_leds ( struct ar9170 * ar ) ; 
/*--ar9170_init_leds--*/
void ar9170_unregister_leds ( struct ar9170 * ar ) ; 
/*--ar9170_unregister_leds--*/
int ar9170_register_leds ( struct ar9170 * ar ) ; 
/*--ar9170_register_leds--*/
int ath5k_hw_set_capabilities ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_set_capabilities--*/
int ath5k_hw_get_capability ( struct ath5k_hw * ah , enum ath5k_capability_type cap_type , u32 capability , u32 * result ) ; 
/*--ath5k_hw_get_capability--*/
int ath5k_hw_enable_pspoll ( struct ath5k_hw * ah , u8 * bssid , u16 assoc_id ) ; 
/*--ath5k_hw_enable_pspoll--*/
int ath5k_hw_disable_pspoll ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_disable_pspoll--*/
int ath5k_hw_write_initvals ( struct ath5k_hw * ah , u8 mode , bool change_channel ) ; 
/*--ath5k_hw_write_initvals--*/
void ath5k_eeprom_detach ( struct ath5k_hw * ah ) ; 
/*--ath5k_eeprom_detach--*/
int ath5k_eeprom_init ( struct ath5k_hw * ah ) ; 
/*--ath5k_eeprom_init--*/
int ath5k_eeprom_read_mac ( struct ath5k_hw * ah , u8 * mac ) ; 
/*--ath5k_eeprom_read_mac--*/
void ath5k_hw_set_ledstate ( struct ath5k_hw * ah , unsigned int state ) ; 
/*--ath5k_hw_set_ledstate--*/
int ath5k_hw_set_gpio_input ( struct ath5k_hw * ah , u32 gpio ) ; 
/*--ath5k_hw_set_gpio_input--*/
int ath5k_hw_set_gpio_output ( struct ath5k_hw * ah , u32 gpio ) ; 
/*--ath5k_hw_set_gpio_output--*/
u32 ath5k_hw_get_gpio ( struct ath5k_hw * ah , u32 gpio ) ; 
/*--ath5k_hw_get_gpio--*/
int ath5k_hw_set_gpio ( struct ath5k_hw * ah , u32 gpio , u32 val ) ; 
/*--ath5k_hw_set_gpio--*/
void ath5k_hw_set_gpio_intr ( struct ath5k_hw * ah , unsigned int gpio , u32 interrupt_level ) ; 
/*--ath5k_hw_set_gpio_intr--*/
int ath5k_hw_init_desc_functions ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_init_desc_functions--*/
void ath5k_hw_start_rx_dma ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_start_rx_dma--*/
int ath5k_hw_stop_rx_dma ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_stop_rx_dma--*/
u32 ath5k_hw_get_rxdp ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_get_rxdp--*/
void ath5k_hw_set_rxdp ( struct ath5k_hw * ah , u32 phys_addr ) ; 
/*--ath5k_hw_set_rxdp--*/
int ath5k_hw_start_tx_dma ( struct ath5k_hw * ah , unsigned int queue ) ; 
/*--ath5k_hw_start_tx_dma--*/
int ath5k_hw_stop_tx_dma ( struct ath5k_hw * ah , unsigned int queue ) ; 
/*--ath5k_hw_stop_tx_dma--*/
u32 ath5k_hw_get_txdp ( struct ath5k_hw * ah , unsigned int queue ) ; 
/*--ath5k_hw_get_txdp--*/
int ath5k_hw_set_txdp ( struct ath5k_hw * ah , unsigned int queue , u32 phys_addr ) ; 
/*--ath5k_hw_set_txdp--*/
int ath5k_hw_update_tx_triglevel ( struct ath5k_hw * ah , bool increase ) ; 
/*--ath5k_hw_update_tx_triglevel--*/
bool ath5k_hw_is_intr_pending ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_is_intr_pending--*/
int ath5k_hw_get_isr ( struct ath5k_hw * ah , enum ath5k_int * interrupt_mask ) ; 
/*--ath5k_hw_get_isr--*/
enum ath5k_int ath5k_hw_set_imr ( struct ath5k_hw * ah , enum ath5k_int new_mask ) ; 
/*--ath5k_hw_set_imr--*/
int ath5k_hw_get_tx_queueprops ( struct ath5k_hw * ah , int queue , struct ath5k_txq_info * queue_info ) ; 
/*--ath5k_hw_get_tx_queueprops--*/
int ath5k_hw_set_tx_queueprops ( struct ath5k_hw * ah , int queue , const struct ath5k_txq_info * queue_info ) ; 
/*--ath5k_hw_set_tx_queueprops--*/
int ath5k_hw_setup_tx_queue ( struct ath5k_hw * ah , enum ath5k_tx_queue queue_type , struct ath5k_txq_info * queue_info ) ; 
/*--ath5k_hw_setup_tx_queue--*/
u32 ath5k_hw_num_tx_pending ( struct ath5k_hw * ah , unsigned int queue ) ; 
/*--ath5k_hw_num_tx_pending--*/
void ath5k_hw_release_tx_queue ( struct ath5k_hw * ah , unsigned int queue ) ; 
/*--ath5k_hw_release_tx_queue--*/
int ath5k_hw_reset_tx_queue ( struct ath5k_hw * ah , unsigned int queue ) ; 
/*--ath5k_hw_reset_tx_queue--*/
int ath5k_hw_set_slot_time ( struct ath5k_hw * ah , unsigned int slot_time ) ; 
/*--ath5k_hw_set_slot_time--*/
int ath5k_hw_set_opmode ( struct ath5k_hw * ah , enum nl80211_iftype op_mode ) ; 
/*--ath5k_hw_set_opmode--*/
void ath5k_hw_update_mib_counters ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_update_mib_counters--*/
void ath5k_hw_set_ack_bitrate_high ( struct ath5k_hw * ah , bool high ) ; 
/*--ath5k_hw_set_ack_bitrate_high--*/
unsigned int ath5k_hw_htoclock ( struct ath5k_hw * ah , unsigned int usec ) ; 
/*--ath5k_hw_htoclock--*/
unsigned int ath5k_hw_clocktoh ( struct ath5k_hw * ah , unsigned int clock ) ; 
/*--ath5k_hw_clocktoh--*/
unsigned int ath5k_hw_get_clockrate ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_get_clockrate--*/
int ath5k_hw_set_lladdr ( struct ath5k_hw * ah , const u8 * mac ) ; 
/*--ath5k_hw_set_lladdr--*/
void ath5k_hw_set_associd ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_set_associd--*/
void ath5k_hw_set_bssid_mask ( struct ath5k_hw * ah , const u8 * mask ) ; 
/*--ath5k_hw_set_bssid_mask--*/
void ath5k_hw_start_rx_pcu ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_start_rx_pcu--*/
void ath5k_hw_stop_rx_pcu ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_stop_rx_pcu--*/
void ath5k_hw_set_mcast_filter ( struct ath5k_hw * ah , u32 filter0 , u32 filter1 ) ; 
/*--ath5k_hw_set_mcast_filter--*/
u32 ath5k_hw_get_rx_filter ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_get_rx_filter--*/
void ath5k_hw_set_rx_filter ( struct ath5k_hw * ah , u32 filter ) ; 
/*--ath5k_hw_set_rx_filter--*/
u64 ath5k_hw_get_tsf64 ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_get_tsf64--*/
void ath5k_hw_set_tsf64 ( struct ath5k_hw * ah , u64 tsf64 ) ; 
/*--ath5k_hw_set_tsf64--*/
void ath5k_hw_reset_tsf ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_reset_tsf--*/
void ath5k_hw_init_beacon ( struct ath5k_hw * ah , u32 next_beacon , u32 interval ) ; 
/*--ath5k_hw_init_beacon--*/
int ath5k_hw_reset_key ( struct ath5k_hw * ah , u16 entry ) ; 
/*--ath5k_hw_reset_key--*/
int ath5k_hw_set_key ( struct ath5k_hw * ah , u16 entry , const struct ieee80211_key_conf * key , const u8 * mac ) ; 
/*--ath5k_hw_set_key--*/
int ath5k_hw_set_key_lladdr ( struct ath5k_hw * ah , u16 entry , const u8 * mac ) ; 
/*--ath5k_hw_set_key_lladdr--*/
void ath5k_hw_set_coverage_class ( struct ath5k_hw * ah , u8 coverage_class ) ; 
/*--ath5k_hw_set_coverage_class--*/
int ath5k_hw_rfgain_opt_init ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_rfgain_opt_init--*/
enum ath5k_rfgain ath5k_hw_gainf_calibrate ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_gainf_calibrate--*/
int ath5k_hw_rfgain_init ( struct ath5k_hw * ah , unsigned int freq ) ; 
/*--ath5k_hw_rfgain_init--*/
int ath5k_hw_rfregs_init ( struct ath5k_hw * ah , struct ieee80211_channel * channel , unsigned int mode ) ; 
/*--ath5k_hw_rfregs_init--*/
bool ath5k_channel_ok ( struct ath5k_hw * ah , u16 freq , unsigned int flags ) ; 
/*--ath5k_channel_ok--*/
int ath5k_hw_channel ( struct ath5k_hw * ah , struct ieee80211_channel * channel ) ; 
/*--ath5k_hw_channel--*/
void ath5k_hw_init_nfcal_hist ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_init_nfcal_hist--*/
int ath5k_hw_phy_calibrate ( struct ath5k_hw * ah , struct ieee80211_channel * channel ) ; 
/*--ath5k_hw_phy_calibrate--*/
bool ath5k_hw_chan_has_spur_noise ( struct ath5k_hw * ah , struct ieee80211_channel * channel ) ; 
/*--ath5k_hw_chan_has_spur_noise--*/
void ath5k_hw_set_spur_mitigation_filter ( struct ath5k_hw * ah , struct ieee80211_channel * channel ) ; 
/*--ath5k_hw_set_spur_mitigation_filter--*/
int ath5k_hw_phy_disable ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_phy_disable--*/
u16 ath5k_hw_radio_revision ( struct ath5k_hw * ah , unsigned int chan ) ; 
/*--ath5k_hw_radio_revision--*/
void ath5k_hw_set_antenna_mode ( struct ath5k_hw * ah , u8 ant_mode ) ; 
/*--ath5k_hw_set_antenna_mode--*/
int ath5k_hw_txpower ( struct ath5k_hw * ah , struct ieee80211_channel * channel , u8 ee_mode , u8 txpower ) ; 
/*--ath5k_hw_txpower--*/
int ath5k_hw_set_txpower_limit ( struct ath5k_hw * ah , u8 txpower ) ; 
/*--ath5k_hw_set_txpower_limit--*/
int ath5k_hw_register_timeout ( struct ath5k_hw * ah , u32 reg , u32 flag , u32 val , bool is_set ) ; 
/*--ath5k_hw_register_timeout--*/
int ath5k_hw_on_hold ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_on_hold--*/
int ath5k_hw_nic_wakeup ( struct ath5k_hw * ah , int flags , bool initial ) ; 
/*--ath5k_hw_nic_wakeup--*/
int ath5k_hw_reset ( struct ath5k_hw * ah , enum nl80211_iftype op_mode , struct ieee80211_channel * channel , bool change_channel ) ; 
/*--ath5k_hw_reset--*/
int ath5k_hw_attach ( struct ath5k_softc * sc ) ; 
/*--ath5k_hw_attach--*/
void ath5k_hw_detach ( struct ath5k_hw * ah ) ; 
/*--ath5k_hw_detach--*/
void ath5k_led_enable ( struct ath5k_softc * sc ) ; 
/*--ath5k_led_enable--*/
void ath5k_led_off ( struct ath5k_softc * sc ) ; 
/*--ath5k_led_off--*/
void ath5k_unregister_leds ( struct ath5k_softc * sc ) ; 
/*--ath5k_unregister_leds--*/
int ath5k_init_leds ( struct ath5k_softc * sc ) ; 
/*--ath5k_init_leds--*/
void ath5k_rfkill_hw_start ( struct ath5k_hw * ah ) ; 
/*--ath5k_rfkill_hw_start--*/
void ath5k_rfkill_hw_stop ( struct ath5k_hw * ah ) ; 
/*--ath5k_rfkill_hw_stop--*/
void ath5k_ani_set_noise_immunity_level ( struct ath5k_hw * ah , int level ) ; 
/*--ath5k_ani_set_noise_immunity_level--*/
void ath5k_ani_set_spur_immunity_level ( struct ath5k_hw * ah , int level ) ; 
/*--ath5k_ani_set_spur_immunity_level--*/
void ath5k_ani_set_firstep_level ( struct ath5k_hw * ah , int level ) ; 
/*--ath5k_ani_set_firstep_level--*/
void ath5k_ani_set_ofdm_weak_signal_detection ( struct ath5k_hw * ah , bool on ) ; 
/*--ath5k_ani_set_ofdm_weak_signal_detection--*/
void ath5k_ani_set_cck_weak_signal_detection ( struct ath5k_hw * ah , bool on ) ; 
/*--ath5k_ani_set_cck_weak_signal_detection--*/
void ath5k_ani_calibration ( struct ath5k_hw * ah ) ; 
/*--ath5k_ani_calibration--*/
void ath5k_ani_mib_intr ( struct ath5k_hw * ah ) ; 
/*--ath5k_ani_mib_intr--*/
void ath5k_ani_phy_error_report ( struct ath5k_hw * ah , enum ath5k_phy_error_code phyerr ) ; 
/*--ath5k_ani_phy_error_report--*/
void ath5k_ani_init ( struct ath5k_hw * ah , enum ath5k_ani_mode mode ) ; 
/*--ath5k_ani_init--*/
int ath_beaconq_config ( struct ath_softc * sc ) ; 
/*--ath_beaconq_config--*/
int ath_beacon_alloc ( struct ath_wiphy * aphy , struct ieee80211_vif * vif ) ; 
/*--ath_beacon_alloc--*/
void ath_beacon_return ( struct ath_softc * sc , struct ath_vif * avp ) ; 
/*--ath_beacon_return--*/
void ath_beacon_tasklet ( unsigned long data ) ; 
/*--ath_beacon_tasklet--*/
void ath_beacon_config ( struct ath_softc * sc , struct ieee80211_vif * vif ) ; 
/*--ath_beacon_config--*/
void ath_deinit_leds ( struct ath_softc * sc ) ; 
/*--ath_deinit_leds--*/
void ath_init_leds ( struct ath_softc * sc ) ; 
/*--ath_init_leds--*/
void ath9k_rfkill_poll_state ( struct ieee80211_hw * hw ) ; 
/*--ath9k_rfkill_poll_state--*/
void ath_start_rfkill_poll ( struct ath_softc * sc ) ; 
/*--ath_start_rfkill_poll--*/
int ath_init_btcoex_timer ( struct ath_softc * sc ) ; 
/*--ath_init_btcoex_timer--*/
void ath9k_btcoex_timer_resume ( struct ath_softc * sc ) ; 
/*--ath9k_btcoex_timer_resume--*/
void ath9k_btcoex_timer_pause ( struct ath_softc * sc ) ; 
/*--ath9k_btcoex_timer_pause--*/
int ath_descdma_setup ( struct ath_softc * sc , struct ath_descdma * dd , struct list_head * head , const char * name , int nbuf , int ndesc , bool is_tx ) ; 
/*--ath_descdma_setup--*/
void ath9k_set_hw_capab ( struct ath_softc * sc , struct ieee80211_hw * hw ) ; 
/*--ath9k_set_hw_capab--*/
int ath9k_init_device ( u16 devid , struct ath_softc * sc , u16 subsysid , const struct ath_bus_ops * bus_ops ) ; 
/*--ath9k_init_device--*/
void ath9k_deinit_device ( struct ath_softc * sc ) ; 
/*--ath9k_deinit_device--*/
void ath_descdma_cleanup ( struct ath_softc * sc , struct ath_descdma * dd , struct list_head * head ) ; 
/*--ath_descdma_cleanup--*/
bool ath9k_setpower ( struct ath_softc * sc , enum ath9k_power_mode mode ) ; 
/*--ath9k_setpower--*/
void ath9k_ps_wakeup ( struct ath_softc * sc ) ; 
/*--ath9k_ps_wakeup--*/
void ath9k_ps_restore ( struct ath_softc * sc ) ; 
/*--ath9k_ps_restore--*/
int ath_set_channel ( struct ath_softc * sc , struct ieee80211_hw * hw , struct ath9k_channel * hchan ) ; 
/*--ath_set_channel--*/
void ath_ani_calibrate ( unsigned long data ) ; 
/*--ath_ani_calibrate--*/
void ath_update_chainmask ( struct ath_softc * sc , int is_ht ) ; 
/*--ath_update_chainmask--*/
void ath9k_tasklet ( unsigned long data ) ; 
/*--ath9k_tasklet--*/
irqreturn_t ath_isr ( int irq , void * dev ) ; 
/*--ath_isr--*/
void ath_radio_enable ( struct ath_softc * sc , struct ieee80211_hw * hw ) ; 
/*--ath_radio_enable--*/
void ath_radio_disable ( struct ath_softc * sc , struct ieee80211_hw * hw ) ; 
/*--ath_radio_disable--*/
int ath_reset ( struct ath_softc * sc , bool retry_tx ) ; 
/*--ath_reset--*/
int ath_get_hal_qnum ( u16 queue , struct ath_softc * sc ) ; 
/*--ath_get_hal_qnum--*/
int ath_get_mac80211_qnum ( u32 queue , struct ath_softc * sc ) ; 
/*--ath_get_mac80211_qnum--*/
void ath9k_update_ichannel ( struct ath_softc * sc , struct ieee80211_hw * hw , struct ath9k_channel * ichan ) ; 
/*--ath9k_update_ichannel--*/
void ath9k_enable_ps ( struct ath_softc * sc ) ; 
/*--ath9k_enable_ps--*/
int ath_rx_init ( struct ath_softc * sc , int nbufs ) ; 
/*--ath_rx_init--*/
void ath_rx_cleanup ( struct ath_softc * sc ) ; 
/*--ath_rx_cleanup--*/
u32 ath_calcrxfilter ( struct ath_softc * sc ) ; 
/*--ath_calcrxfilter--*/
int ath_startrecv ( struct ath_softc * sc ) ; 
/*--ath_startrecv--*/
bool ath_stoprecv ( struct ath_softc * sc ) ; 
/*--ath_stoprecv--*/
void ath_flushrecv ( struct ath_softc * sc ) ; 
/*--ath_flushrecv--*/
int ath_rx_tasklet ( struct ath_softc * sc , int flush , bool hp ) ; 
/*--ath_rx_tasklet--*/
void ath_tx_aggr_start ( struct ath_softc * sc , struct ieee80211_sta * sta , u16 tid , u16 * ssn ) ; 
/*--ath_tx_aggr_start--*/
void ath_tx_aggr_stop ( struct ath_softc * sc , struct ieee80211_sta * sta , u16 tid ) ; 
/*--ath_tx_aggr_stop--*/
void ath_tx_aggr_resume ( struct ath_softc * sc , struct ieee80211_sta * sta , u16 tid ) ; 
/*--ath_tx_aggr_resume--*/
bool ath_tx_aggr_check ( struct ath_softc * sc , struct ath_node * an , u8 tidno ) ; 
/*--ath_tx_aggr_check--*/
struct ath_txq * ath_txq_setup ( struct ath_softc * sc , int qtype , int subtype ) ; 
/*--ath_txq_setup--*/
int ath_tx_get_qnum ( struct ath_softc * sc , int qtype , int haltype ) ; 
/*--ath_tx_get_qnum--*/
struct ath_txq * ath_test_get_txq ( struct ath_softc * sc , struct sk_buff * skb ) ; 
/*--ath_test_get_txq--*/
int ath_txq_update ( struct ath_softc * sc , int qnum , struct ath9k_tx_queue_info * qinfo ) ; 
/*--ath_txq_update--*/
int ath_cabq_update ( struct ath_softc * sc ) ; 
/*--ath_cabq_update--*/
void ath_draintxq ( struct ath_softc * sc , struct ath_txq * txq , bool retry_tx ) ; 
/*--ath_draintxq--*/
void ath_drain_all_txq ( struct ath_softc * sc , bool retry_tx ) ; 
/*--ath_drain_all_txq--*/
void ath_tx_cleanupq ( struct ath_softc * sc , struct ath_txq * txq ) ; 
/*--ath_tx_cleanupq--*/
void ath_txq_schedule ( struct ath_softc * sc , struct ath_txq * txq ) ; 
/*--ath_txq_schedule--*/
int ath_tx_setup ( struct ath_softc * sc , int haltype ) ; 
/*--ath_tx_setup--*/
int ath_tx_start ( struct ieee80211_hw * hw , struct sk_buff * skb , struct ath_tx_control * txctl ) ; 
/*--ath_tx_start--*/
void ath_tx_cabq ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--ath_tx_cabq--*/
void ath_tx_tasklet ( struct ath_softc * sc ) ; 
/*--ath_tx_tasklet--*/
void ath_tx_edma_tasklet ( struct ath_softc * sc ) ; 
/*--ath_tx_edma_tasklet--*/
int ath_tx_init ( struct ath_softc * sc , int nbufs ) ; 
/*--ath_tx_init--*/
void ath_tx_cleanup ( struct ath_softc * sc ) ; 
/*--ath_tx_cleanup--*/
void ath_tx_node_init ( struct ath_softc * sc , struct ath_node * an ) ; 
/*--ath_tx_node_init--*/
void ath_tx_node_cleanup ( struct ath_softc * sc , struct ath_node * an ) ; 
/*--ath_tx_node_cleanup--*/
void ath9k_set_bssid_mask ( struct ieee80211_hw * hw ) ; 
/*--ath9k_set_bssid_mask--*/
int ath9k_wiphy_add ( struct ath_softc * sc ) ; 
/*--ath9k_wiphy_add--*/
int ath9k_wiphy_del ( struct ath_wiphy * aphy ) ; 
/*--ath9k_wiphy_del--*/
bool ath9k_wiphy_scanning ( struct ath_softc * sc ) ; 
/*--ath9k_wiphy_scanning--*/
void ath9k_wiphy_chan_work ( struct work_struct * work ) ; 
/*--ath9k_wiphy_chan_work--*/
void ath9k_tx_status ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--ath9k_tx_status--*/
int ath9k_wiphy_pause ( struct ath_wiphy * aphy ) ; 
/*--ath9k_wiphy_pause--*/
int ath9k_wiphy_unpause ( struct ath_wiphy * aphy ) ; 
/*--ath9k_wiphy_unpause--*/
int ath9k_wiphy_select ( struct ath_wiphy * aphy ) ; 
/*--ath9k_wiphy_select--*/
bool ath9k_wiphy_started ( struct ath_softc * sc ) ; 
/*--ath9k_wiphy_started--*/
void ath9k_wiphy_pause_all_forced ( struct ath_softc * sc , struct ath_wiphy * selected ) ; 
/*--ath9k_wiphy_pause_all_forced--*/
void ath9k_wiphy_work ( struct work_struct * work ) ; 
/*--ath9k_wiphy_work--*/
void ath9k_wiphy_set_scheduler ( struct ath_softc * sc , unsigned int msec_int ) ; 
/*--ath9k_wiphy_set_scheduler--*/
bool ath9k_all_wiphys_idle ( struct ath_softc * sc ) ; 
/*--ath9k_all_wiphys_idle--*/
void ath9k_set_wiphy_idle ( struct ath_wiphy * aphy , bool idle ) ; 
/*--ath9k_set_wiphy_idle--*/
void ath_mac80211_start_queue ( struct ath_softc * sc , u16 skb_queue ) ; 
/*--ath_mac80211_start_queue--*/
void ath_mac80211_stop_queue ( struct ath_softc * sc , u16 skb_queue ) ; 
/*--ath_mac80211_stop_queue--*/
int ath_rate_control_register ( void ) ; 
/*--ath_rate_control_register--*/
void ath_rate_control_unregister ( void ) ; 
/*--ath_rate_control_unregister--*/
int ath_pci_init ( void ) ; 
/*--ath_pci_init--*/
void ath_pci_exit ( void ) ; 
/*--ath_pci_exit--*/
int ath9k_cmn_rx_skb_preprocess ( struct ath_common * common , struct ieee80211_hw * hw , struct sk_buff * skb , struct ath_rx_status * rx_stats , struct ieee80211_rx_status * rx_status , bool * decrypt_error ) ; 
/*--ath9k_cmn_rx_skb_preprocess--*/
void ath9k_cmn_rx_skb_postprocess ( struct ath_common * common , struct sk_buff * skb , struct ath_rx_status * rx_stats , struct ieee80211_rx_status * rxs , bool decrypt_error ) ; 
/*--ath9k_cmn_rx_skb_postprocess--*/
int ath9k_cmn_padpos ( __le16 frame_control ) ; 
/*--ath9k_cmn_padpos--*/
int ath9k_cmn_get_hw_crypto_keytype ( struct sk_buff * skb ) ; 
/*--ath9k_cmn_get_hw_crypto_keytype--*/
void ath9k_cmn_update_ichannel ( struct ieee80211_hw * hw , struct ath9k_channel * ichan ) ; 
/*--ath9k_cmn_update_ichannel--*/
struct ath9k_channel * ath9k_cmn_get_curchannel ( struct ieee80211_hw * hw , struct ath_hw * ah ) ; 
/*--ath9k_cmn_get_curchannel--*/
int ath9k_cmn_key_config ( struct ath_common * common , struct ieee80211_vif * vif , struct ieee80211_sta * sta , struct ieee80211_key_conf * key ) ; 
/*--ath9k_cmn_key_config--*/
void ath9k_cmn_key_delete ( struct ath_common * common , struct ieee80211_key_conf * key ) ; 
/*--ath9k_cmn_key_delete--*/
void ar9002_hw_cck_chan14_spread ( struct ath_hw * ah ) ; 
/*--ar9002_hw_cck_chan14_spread--*/
int ar9002_hw_rf_claim ( struct ath_hw * ah ) ; 
/*--ar9002_hw_rf_claim--*/
void ar9002_hw_enable_async_fifo ( struct ath_hw * ah ) ; 
/*--ar9002_hw_enable_async_fifo--*/
void ar9002_hw_enable_wep_aggregation ( struct ath_hw * ah ) ; 
/*--ar9002_hw_enable_wep_aggregation--*/
void ar9002_hw_attach_ops ( struct ath_hw * ah ) ; 
/*--ar9002_hw_attach_ops--*/
void ar9003_hw_attach_ops ( struct ath_hw * ah ) ; 
/*--ar9003_hw_attach_ops--*/
bool ath9k_hw_wait ( struct ath_hw * ah , u32 reg , u32 mask , u32 val , u32 timeout ) ; 
/*--ath9k_hw_wait--*/
u32 ath9k_hw_reverse_bits ( u32 val , u32 n ) ; 
/*--ath9k_hw_reverse_bits--*/
bool ath9k_get_channel_edges ( struct ath_hw * ah , u16 flags , u16 * low , u16 * high ) ; 
/*--ath9k_get_channel_edges--*/
u16 ath9k_hw_computetxtime ( struct ath_hw * ah , u8 phy , int kbps , u32 frameLen , u16 rateix , bool shortPreamble ) ; 
/*--ath9k_hw_computetxtime--*/
void ath9k_hw_get_channel_centers ( struct ath_hw * ah , struct ath9k_channel * chan , struct chan_centers * centers ) ; 
/*--ath9k_hw_get_channel_centers--*/
int ath9k_hw_init ( struct ath_hw * ah ) ; 
/*--ath9k_hw_init--*/
void ath9k_hw_init_global_settings ( struct ath_hw * ah ) ; 
/*--ath9k_hw_init_global_settings--*/
void ath9k_hw_deinit ( struct ath_hw * ah ) ; 
/*--ath9k_hw_deinit--*/
u32 ath9k_regd_get_ctl ( struct ath_regulatory * reg , struct ath9k_channel * chan ) ; 
/*--ath9k_regd_get_ctl--*/
void ath9k_hw_get_delta_slope_vals ( struct ath_hw * ah , u32 coef_scaled , u32 * coef_mantissa , u32 * coef_exponent ) ; 
/*--ath9k_hw_get_delta_slope_vals--*/
bool ath9k_hw_check_alive ( struct ath_hw * ah ) ; 
/*--ath9k_hw_check_alive--*/
int ath9k_hw_reset ( struct ath_hw * ah , struct ath9k_channel * chan , bool bChannelChange ) ; 
/*--ath9k_hw_reset--*/
bool ath9k_hw_keyreset ( struct ath_hw * ah , u16 entry ) ; 
/*--ath9k_hw_keyreset--*/
bool ath9k_hw_keysetmac ( struct ath_hw * ah , u16 entry , const u8 * mac ) ; 
/*--ath9k_hw_keysetmac--*/
bool ath9k_hw_set_keycache_entry ( struct ath_hw * ah , u16 entry , const struct ath9k_keyval * k , const u8 * mac ) ; 
/*--ath9k_hw_set_keycache_entry--*/
bool ath9k_hw_keyisvalid ( struct ath_hw * ah , u16 entry ) ; 
/*--ath9k_hw_keyisvalid--*/
bool ath9k_hw_setpower ( struct ath_hw * ah , enum ath9k_power_mode mode ) ; 
/*--ath9k_hw_setpower--*/
void ath9k_hw_beaconinit ( struct ath_hw * ah , u32 next_beacon , u32 beacon_period ) ; 
/*--ath9k_hw_beaconinit--*/
void ath9k_hw_set_sta_beacon_timers ( struct ath_hw * ah , const struct ath9k_beacon_state * bs ) ; 
/*--ath9k_hw_set_sta_beacon_timers--*/
int ath9k_hw_fill_cap_info ( struct ath_hw * ah ) ; 
/*--ath9k_hw_fill_cap_info--*/
bool ath9k_hw_getcapability ( struct ath_hw * ah , enum ath9k_capability_type type , u32 capability , u32 * result ) ; 
/*--ath9k_hw_getcapability--*/
bool ath9k_hw_setcapability ( struct ath_hw * ah , enum ath9k_capability_type type , u32 capability , u32 setting , int * status ) ; 
/*--ath9k_hw_setcapability--*/
void ath9k_hw_cfg_gpio_input ( struct ath_hw * ah , u32 gpio ) ; 
/*--ath9k_hw_cfg_gpio_input--*/
u32 ath9k_hw_gpio_get ( struct ath_hw * ah , u32 gpio ) ; 
/*--ath9k_hw_gpio_get--*/
void ath9k_hw_cfg_output ( struct ath_hw * ah , u32 gpio , u32 ah_signal_type ) ; 
/*--ath9k_hw_cfg_output--*/
void ath9k_hw_set_gpio ( struct ath_hw * ah , u32 gpio , u32 val ) ; 
/*--ath9k_hw_set_gpio--*/
u32 ath9k_hw_getdefantenna ( struct ath_hw * ah ) ; 
/*--ath9k_hw_getdefantenna--*/
void ath9k_hw_setantenna ( struct ath_hw * ah , u32 antenna ) ; 
/*--ath9k_hw_setantenna--*/
u32 ath9k_hw_getrxfilter ( struct ath_hw * ah ) ; 
/*--ath9k_hw_getrxfilter--*/
void ath9k_hw_setrxfilter ( struct ath_hw * ah , u32 bits ) ; 
/*--ath9k_hw_setrxfilter--*/
bool ath9k_hw_phy_disable ( struct ath_hw * ah ) ; 
/*--ath9k_hw_phy_disable--*/
bool ath9k_hw_disable ( struct ath_hw * ah ) ; 
/*--ath9k_hw_disable--*/
void ath9k_hw_set_txpowerlimit ( struct ath_hw * ah , u32 limit ) ; 
/*--ath9k_hw_set_txpowerlimit--*/
void ath9k_hw_setmac ( struct ath_hw * ah , const u8 * mac ) ; 
/*--ath9k_hw_setmac--*/
void ath9k_hw_setopmode ( struct ath_hw * ah ) ; 
/*--ath9k_hw_setopmode--*/
void ath9k_hw_setmcastfilter ( struct ath_hw * ah , u32 filter0 , u32 filter1 ) ; 
/*--ath9k_hw_setmcastfilter--*/
void ath9k_hw_write_associd ( struct ath_hw * ah ) ; 
/*--ath9k_hw_write_associd--*/
u64 ath9k_hw_gettsf64 ( struct ath_hw * ah ) ; 
/*--ath9k_hw_gettsf64--*/
void ath9k_hw_settsf64 ( struct ath_hw * ah , u64 tsf64 ) ; 
/*--ath9k_hw_settsf64--*/
void ath9k_hw_reset_tsf ( struct ath_hw * ah ) ; 
/*--ath9k_hw_reset_tsf--*/
void ath9k_hw_set_tsfadjust ( struct ath_hw * ah , u32 setting ) ; 
/*--ath9k_hw_set_tsfadjust--*/
u64 ath9k_hw_extend_tsf ( struct ath_hw * ah , u32 rstamp ) ; 
/*--ath9k_hw_extend_tsf--*/
void ath9k_hw_set11nmac2040 ( struct ath_hw * ah ) ; 
/*--ath9k_hw_set11nmac2040--*/
u32 ath9k_hw_gettsf32 ( struct ath_hw * ah ) ; 
/*--ath9k_hw_gettsf32--*/
struct ath_gen_timer * ath_gen_timer_alloc ( struct ath_hw * ah , void ( * trigger ) ( void * ) , void ( * overflow ) ( void * ) , void * arg , u8 timer_index ) ; 
/*--ath_gen_timer_alloc--*/
void ath9k_hw_gen_timer_start ( struct ath_hw * ah , struct ath_gen_timer * timer , u32 timer_next , u32 timer_period ) ; 
/*--ath9k_hw_gen_timer_start--*/
void ath9k_hw_gen_timer_stop ( struct ath_hw * ah , struct ath_gen_timer * timer ) ; 
/*--ath9k_hw_gen_timer_stop--*/
void ath_gen_timer_free ( struct ath_hw * ah , struct ath_gen_timer * timer ) ; 
/*--ath_gen_timer_free--*/
void ath_gen_timer_isr ( struct ath_hw * ah ) ; 
/*--ath_gen_timer_isr--*/
void ath9k_hw_htc_resetinit ( struct ath_hw * ah ) ; 
/*--ath9k_hw_htc_resetinit--*/
void ath9k_hw_name ( struct ath_hw * ah , char * hw_name , size_t len ) ; 
/*--ath9k_hw_name--*/
void ar9003_hw_set_chain_masks ( struct ath_hw * ah , u8 rx , u8 tx ) ; 
/*--ar9003_hw_set_chain_masks--*/
void ar9003_hw_set_nf_limits ( struct ath_hw * ah ) ; 
/*--ar9003_hw_set_nf_limits--*/
void ar9003_hw_attach_phy_ops ( struct ath_hw * ah ) ; 
/*--ar9003_hw_attach_phy_ops--*/
void ar9002_hw_attach_phy_ops ( struct ath_hw * ah ) ; 
/*--ar9002_hw_attach_phy_ops--*/
void ar5008_hw_attach_phy_ops ( struct ath_hw * ah ) ; 
/*--ar5008_hw_attach_phy_ops--*/
void ar9002_hw_attach_calib_ops ( struct ath_hw * ah ) ; 
/*--ar9002_hw_attach_calib_ops--*/
void ar9003_hw_attach_calib_ops ( struct ath_hw * ah ) ; 
/*--ar9003_hw_attach_calib_ops--*/
void ath9k_hw_reset_calibration ( struct ath_hw * ah , struct ath9k_cal_list * currCal ) ; 
/*--ath9k_hw_reset_calibration--*/
bool ath9k_hw_reset_calvalid ( struct ath_hw * ah ) ; 
/*--ath9k_hw_reset_calvalid--*/
void ath9k_hw_start_nfcal ( struct ath_hw * ah ) ; 
/*--ath9k_hw_start_nfcal--*/
int16_t ath9k_hw_getnf ( struct ath_hw * ah , struct ath9k_channel * chan ) ; 
/*--ath9k_hw_getnf--*/
void ath9k_init_nfcal_hist_buffer ( struct ath_hw * ah ) ; 
/*--ath9k_init_nfcal_hist_buffer--*/
s16 ath9k_hw_getchan_noise ( struct ath_hw * ah , struct ath9k_channel * chan ) ; 
/*--ath9k_hw_getchan_noise--*/
void ath9k_hw_analog_shift_rmw ( struct ath_hw * ah , u32 reg , u32 mask , u32 shift , u32 val ) ; 
/*--ath9k_hw_analog_shift_rmw--*/
int16_t ath9k_hw_interpolate ( u16 target , u16 srcLeft , u16 srcRight , int16_t targetLeft , int16_t targetRight ) ; 
/*--ath9k_hw_interpolate--*/
bool ath9k_hw_get_lower_upper_index ( u8 target , u8 * pList , u16 listSize , u16 * indexL , u16 * indexR ) ; 
/*--ath9k_hw_get_lower_upper_index--*/
bool ath9k_hw_nvram_read ( struct ath_common * common , u32 off , u16 * data ) ; 
/*--ath9k_hw_nvram_read--*/
void ath9k_hw_fill_vpd_table ( u8 pwrMin , u8 pwrMax , u8 * pPwrList , u8 * pVpdList , u16 numIntercepts , u8 * pRetVpdList ) ; 
/*--ath9k_hw_fill_vpd_table--*/
void ath9k_hw_get_legacy_target_powers ( struct ath_hw * ah , struct ath9k_channel * chan , struct cal_target_power_leg * powInfo , u16 numChannels , struct cal_target_power_leg * pNewPower , u16 numRates , bool isExtTarget ) ; 
/*--ath9k_hw_get_legacy_target_powers--*/
void ath9k_hw_get_target_powers ( struct ath_hw * ah , struct ath9k_channel * chan , struct cal_target_power_ht * powInfo , u16 numChannels , struct cal_target_power_ht * pNewPower , u16 numRates , bool isHt40Target ) ; 
/*--ath9k_hw_get_target_powers--*/
u16 ath9k_hw_get_max_edge_power ( u16 freq , struct cal_ctl_edges * pRdEdgesPower , bool is2GHz , int num_band_edges ) ; 
/*--ath9k_hw_get_max_edge_power--*/
int ath9k_hw_eeprom_init ( struct ath_hw * ah ) ; 
/*--ath9k_hw_eeprom_init--*/
void ath9k_ani_reset ( struct ath_hw * ah ) ; 
/*--ath9k_ani_reset--*/
void ath9k_hw_ani_monitor ( struct ath_hw * ah , struct ath9k_channel * chan ) ; 
/*--ath9k_hw_ani_monitor--*/
void ath9k_enable_mib_counters ( struct ath_hw * ah ) ; 
/*--ath9k_enable_mib_counters--*/
void ath9k_hw_disable_mib_counters ( struct ath_hw * ah ) ; 
/*--ath9k_hw_disable_mib_counters--*/
u32 ath9k_hw_GetMibCycleCountsPct ( struct ath_hw * ah , u32 * rxc_pcnt , u32 * rxf_pcnt , u32 * txf_pcnt ) ; 
/*--ath9k_hw_GetMibCycleCountsPct--*/
void ath9k_hw_procmibevent ( struct ath_hw * ah ) ; 
/*--ath9k_hw_procmibevent--*/
void ath9k_hw_ani_setup ( struct ath_hw * ah ) ; 
/*--ath9k_hw_ani_setup--*/
void ath9k_hw_ani_init ( struct ath_hw * ah ) ; 
/*--ath9k_hw_ani_init--*/
bool ath9k_hw_btcoex_supported ( struct ath_hw * ah ) ; 
/*--ath9k_hw_btcoex_supported--*/
void ath9k_hw_init_btcoex_hw ( struct ath_hw * ah , int qnum ) ; 
/*--ath9k_hw_init_btcoex_hw--*/
void ath9k_hw_btcoex_init_2wire ( struct ath_hw * ah ) ; 
/*--ath9k_hw_btcoex_init_2wire--*/
void ath9k_hw_btcoex_init_3wire ( struct ath_hw * ah ) ; 
/*--ath9k_hw_btcoex_init_3wire--*/
void ath9k_hw_btcoex_set_weight ( struct ath_hw * ah , u32 bt_weight , u32 wlan_weight ) ; 
/*--ath9k_hw_btcoex_set_weight--*/
void ath9k_hw_btcoex_enable ( struct ath_hw * ah ) ; 
/*--ath9k_hw_btcoex_enable--*/
void ath9k_hw_btcoex_disable ( struct ath_hw * ah ) ; 
/*--ath9k_hw_btcoex_disable--*/
u32 ath9k_hw_gettxbuf ( struct ath_hw * ah , u32 q ) ; 
/*--ath9k_hw_gettxbuf--*/
void ath9k_hw_puttxbuf ( struct ath_hw * ah , u32 q , u32 txdp ) ; 
/*--ath9k_hw_puttxbuf--*/
void ath9k_hw_txstart ( struct ath_hw * ah , u32 q ) ; 
/*--ath9k_hw_txstart--*/
void ath9k_hw_cleartxdesc ( struct ath_hw * ah , void * ds ) ; 
/*--ath9k_hw_cleartxdesc--*/
u32 ath9k_hw_numtxpending ( struct ath_hw * ah , u32 q ) ; 
/*--ath9k_hw_numtxpending--*/
bool ath9k_hw_updatetxtriglevel ( struct ath_hw * ah , bool bIncTrigLevel ) ; 
/*--ath9k_hw_updatetxtriglevel--*/
bool ath9k_hw_stoptxdma ( struct ath_hw * ah , u32 q ) ; 
/*--ath9k_hw_stoptxdma--*/
void ath9k_hw_gettxintrtxqs ( struct ath_hw * ah , u32 * txqs ) ; 
/*--ath9k_hw_gettxintrtxqs--*/
bool ath9k_hw_set_txq_props ( struct ath_hw * ah , int q , const struct ath9k_tx_queue_info * qinfo ) ; 
/*--ath9k_hw_set_txq_props--*/
bool ath9k_hw_get_txq_props ( struct ath_hw * ah , int q , struct ath9k_tx_queue_info * qinfo ) ; 
/*--ath9k_hw_get_txq_props--*/
int ath9k_hw_setuptxqueue ( struct ath_hw * ah , enum ath9k_tx_queue type , const struct ath9k_tx_queue_info * qinfo ) ; 
/*--ath9k_hw_setuptxqueue--*/
bool ath9k_hw_releasetxqueue ( struct ath_hw * ah , u32 q ) ; 
/*--ath9k_hw_releasetxqueue--*/
bool ath9k_hw_resettxqueue ( struct ath_hw * ah , u32 q ) ; 
/*--ath9k_hw_resettxqueue--*/
int ath9k_hw_rxprocdesc ( struct ath_hw * ah , struct ath_desc * ds , struct ath_rx_status * rs , u64 tsf ) ; 
/*--ath9k_hw_rxprocdesc--*/
bool ath9k_hw_setrxabort ( struct ath_hw * ah , bool set ) ; 
/*--ath9k_hw_setrxabort--*/
void ath9k_hw_putrxbuf ( struct ath_hw * ah , u32 rxdp ) ; 
/*--ath9k_hw_putrxbuf--*/
void ath9k_hw_startpcureceive ( struct ath_hw * ah ) ; 
/*--ath9k_hw_startpcureceive--*/
void ath9k_hw_stoppcurecv ( struct ath_hw * ah ) ; 
/*--ath9k_hw_stoppcurecv--*/
void ath9k_hw_abortpcurecv ( struct ath_hw * ah ) ; 
/*--ath9k_hw_abortpcurecv--*/
bool ath9k_hw_stopdmarecv ( struct ath_hw * ah ) ; 
/*--ath9k_hw_stopdmarecv--*/
int ath9k_hw_beaconq_setup ( struct ath_hw * ah ) ; 
/*--ath9k_hw_beaconq_setup--*/
bool ath9k_hw_intrpend ( struct ath_hw * ah ) ; 
/*--ath9k_hw_intrpend--*/
enum ath9k_int ath9k_hw_set_interrupts ( struct ath_hw * ah , enum ath9k_int ints ) ; 
/*--ath9k_hw_set_interrupts--*/
void ath9k_hw_setuprxdesc ( struct ath_hw * ah , struct ath_desc * ds , u32 size , u32 flags ) ; 
/*--ath9k_hw_setuprxdesc--*/
void ar9002_hw_attach_mac_ops ( struct ath_hw * ah ) ; 
/*--ar9002_hw_attach_mac_ops--*/
void ar9003_hw_attach_mac_ops ( struct ath_hw * hw ) ; 
/*--ar9003_hw_attach_mac_ops--*/
void ath9k_hw_set_rx_bufsize ( struct ath_hw * ah , u16 buf_size ) ; 
/*--ath9k_hw_set_rx_bufsize--*/
void ath9k_hw_addrxbuf_edma ( struct ath_hw * ah , u32 rxdp , enum ath9k_rx_qtype qtype ) ; 
/*--ath9k_hw_addrxbuf_edma--*/
int ath9k_hw_process_rxdesc_edma ( struct ath_hw * ah , struct ath_rx_status * rxs , void * buf_addr ) ; 
/*--ath9k_hw_process_rxdesc_edma--*/
void ath9k_hw_reset_txstatus_ring ( struct ath_hw * ah ) ; 
/*--ath9k_hw_reset_txstatus_ring--*/
void ath9k_hw_setup_statusring ( struct ath_hw * ah , void * ts_start , u32 ts_paddr_start , u8 size ) ; 
/*--ath9k_hw_setup_statusring--*/
s32 ar9003_hw_get_tx_gain_idx ( struct ath_hw * ah ) ; 
/*--ar9003_hw_get_tx_gain_idx--*/
s32 ar9003_hw_get_rx_gain_idx ( struct ath_hw * ah ) ; 
/*--ar9003_hw_get_rx_gain_idx--*/
int b43_sdio_request_irq ( struct b43_wldev * dev , void ( * handler ) ( struct b43_wldev * dev ) ) ; 
/*--b43_sdio_request_irq--*/
void b43_sdio_free_irq ( struct b43_wldev * dev ) ; 
/*--b43_sdio_free_irq--*/
void b43info ( struct b43_wl * wl , const char * fmt , ... ) ; 
/*--b43info--*/
void b43err ( struct b43_wl * wl , const char * fmt , ... ) ; 
/*--b43err--*/
void b43warn ( struct b43_wl * wl , const char * fmt , ... ) ; 
/*--b43warn--*/
void b43dbg ( struct b43_wl * wl , const char * fmt , ... ) ; 
/*--b43dbg--*/
u32 b43_shm_read32 ( struct b43_wldev * dev , u16 routing , u16 offset ) ; 
/*--b43_shm_read32--*/
u16 b43_shm_read16 ( struct b43_wldev * dev , u16 routing , u16 offset ) ; 
/*--b43_shm_read16--*/
void b43_shm_write32 ( struct b43_wldev * dev , u16 routing , u16 offset , u32 value ) ; 
/*--b43_shm_write32--*/
void b43_shm_write16 ( struct b43_wldev * dev , u16 routing , u16 offset , u16 value ) ; 
/*--b43_shm_write16--*/
u64 b43_hf_read ( struct b43_wldev * dev ) ; 
/*--b43_hf_read--*/
void b43_hf_write ( struct b43_wldev * dev , u64 value ) ; 
/*--b43_hf_write--*/
void b43_tsf_read ( struct b43_wldev * dev , u64 * tsf ) ; 
/*--b43_tsf_read--*/
void b43_tsf_write ( struct b43_wldev * dev , u64 tsf ) ; 
/*--b43_tsf_write--*/
void b43_dummy_transmission ( struct b43_wldev * dev , bool ofdm , bool pa_on ) ; 
/*--b43_dummy_transmission--*/
void b43_power_saving_ctl_bits ( struct b43_wldev * dev , unsigned int ps_flags ) ; 
/*--b43_power_saving_ctl_bits--*/
void b43_wireless_core_reset ( struct b43_wldev * dev , u32 flags ) ; 
/*--b43_wireless_core_reset--*/
u8 b43_ieee80211_antenna_sanitize ( struct b43_wldev * dev , u8 antenna_nr ) ; 
/*--b43_ieee80211_antenna_sanitize--*/
void b43_do_release_fw ( struct b43_firmware_file * fw ) ; 
/*--b43_do_release_fw--*/
int b43_do_request_fw ( struct b43_request_fw_context * ctx , const char * name , struct b43_firmware_file * fw ) ; 
/*--b43_do_request_fw--*/
void b43_mac_enable ( struct b43_wldev * dev ) ; 
/*--b43_mac_enable--*/
void b43_mac_suspend ( struct b43_wldev * dev ) ; 
/*--b43_mac_suspend--*/
void b43_controller_restart ( struct b43_wldev * dev , const char * reason ) ; 
/*--b43_controller_restart--*/
u16 b43_ofdmtab_read16 ( struct b43_wldev * dev , u16 table , u16 offset ) ; 
/*--b43_ofdmtab_read16--*/
void b43_ofdmtab_write16 ( struct b43_wldev * dev , u16 table , u16 offset , u16 value ) ; 
/*--b43_ofdmtab_write16--*/
u32 b43_ofdmtab_read32 ( struct b43_wldev * dev , u16 table , u16 offset ) ; 
/*--b43_ofdmtab_read32--*/
void b43_ofdmtab_write32 ( struct b43_wldev * dev , u16 table , u16 offset , u32 value ) ; 
/*--b43_ofdmtab_write32--*/
u16 b43_gtab_read ( struct b43_wldev * dev , u16 table , u16 offset ) ; 
/*--b43_gtab_read--*/
void b43_gtab_write ( struct b43_wldev * dev , u16 table , u16 offset , u16 value ) ; 
/*--b43_gtab_write--*/
int b43_phy_allocate ( struct b43_wldev * dev ) ; 
/*--b43_phy_allocate--*/
void b43_phy_free ( struct b43_wldev * dev ) ; 
/*--b43_phy_free--*/
int b43_phy_init ( struct b43_wldev * dev ) ; 
/*--b43_phy_init--*/
void b43_phy_exit ( struct b43_wldev * dev ) ; 
/*--b43_phy_exit--*/
bool b43_has_hardware_pctl ( struct b43_wldev * dev ) ; 
/*--b43_has_hardware_pctl--*/
void b43_radio_lock ( struct b43_wldev * dev ) ; 
/*--b43_radio_lock--*/
void b43_radio_unlock ( struct b43_wldev * dev ) ; 
/*--b43_radio_unlock--*/
void b43_phy_lock ( struct b43_wldev * dev ) ; 
/*--b43_phy_lock--*/
void b43_phy_unlock ( struct b43_wldev * dev ) ; 
/*--b43_phy_unlock--*/
u16 b43_radio_read ( struct b43_wldev * dev , u16 reg ) ; 
/*--b43_radio_read--*/
void b43_radio_write ( struct b43_wldev * dev , u16 reg , u16 value ) ; 
/*--b43_radio_write--*/
void b43_radio_mask ( struct b43_wldev * dev , u16 offset , u16 mask ) ; 
/*--b43_radio_mask--*/
void b43_radio_set ( struct b43_wldev * dev , u16 offset , u16 set ) ; 
/*--b43_radio_set--*/
void b43_radio_maskset ( struct b43_wldev * dev , u16 offset , u16 mask , u16 set ) ; 
/*--b43_radio_maskset--*/
u16 b43_phy_read ( struct b43_wldev * dev , u16 reg ) ; 
/*--b43_phy_read--*/
void b43_phy_write ( struct b43_wldev * dev , u16 reg , u16 value ) ; 
/*--b43_phy_write--*/
void b43_phy_copy ( struct b43_wldev * dev , u16 destreg , u16 srcreg ) ; 
/*--b43_phy_copy--*/
void b43_phy_mask ( struct b43_wldev * dev , u16 offset , u16 mask ) ; 
/*--b43_phy_mask--*/
void b43_phy_set ( struct b43_wldev * dev , u16 offset , u16 set ) ; 
/*--b43_phy_set--*/
void b43_phy_maskset ( struct b43_wldev * dev , u16 offset , u16 mask , u16 set ) ; 
/*--b43_phy_maskset--*/
int b43_switch_channel ( struct b43_wldev * dev , unsigned int new_channel ) ; 
/*--b43_switch_channel--*/
void b43_software_rfkill ( struct b43_wldev * dev , bool blocked ) ; 
/*--b43_software_rfkill--*/
void b43_phy_txpower_adjust_work ( struct work_struct * work ) ; 
/*--b43_phy_txpower_adjust_work--*/
void b43_phy_txpower_check ( struct b43_wldev * dev , unsigned int flags ) ; 
/*--b43_phy_txpower_check--*/
int b43_phy_shm_tssi_read ( struct b43_wldev * dev , u16 shm_offset ) ; 
/*--b43_phy_shm_tssi_read--*/
void b43_phyop_switch_analog_generic ( struct b43_wldev * dev , bool on ) ; 
/*--b43_phyop_switch_analog_generic--*/
struct b43_c32 b43_cordic ( int theta ) ; 
/*--b43_cordic--*/
void b43_gphy_set_baseband_attenuation ( struct b43_wldev * dev , u16 baseband_attenuation ) ; 
/*--b43_gphy_set_baseband_attenuation--*/
void b43_gphy_channel_switch ( struct b43_wldev * dev , unsigned int channel , bool synthetic_pu_workaround ) ; 
/*--b43_gphy_channel_switch--*/
u8 * b43_generate_dyn_tssi2dbm_tab ( struct b43_wldev * dev , s16 pab0 , s16 pab1 , s16 pab2 ) ; 
/*--b43_generate_dyn_tssi2dbm_tab--*/
void b43_phy_inita ( struct b43_wldev * dev ) ; 
/*--b43_phy_inita--*/
void b43_lpphy_op_switch_analog ( struct b43_wldev * dev , bool on ) ; 
/*--b43_lpphy_op_switch_analog--*/
void b2062_upload_init_table ( struct b43_wldev * dev ) ; 
/*--b2062_upload_init_table--*/
void b2063_upload_init_table ( struct b43_wldev * dev ) ; 
/*--b2063_upload_init_table--*/
u32 b43_lptab_read ( struct b43_wldev * dev , u32 offset ) ; 
/*--b43_lptab_read--*/
void b43_lptab_read_bulk ( struct b43_wldev * dev , u32 offset , unsigned int nr_elements , void * _data ) ; 
/*--b43_lptab_read_bulk--*/
void b43_lptab_write ( struct b43_wldev * dev , u32 offset , u32 value ) ; 
/*--b43_lptab_write--*/
void b43_lptab_write_bulk ( struct b43_wldev * dev , u32 offset , unsigned int nr_elements , const void * _data ) ; 
/*--b43_lptab_write_bulk--*/
void lpphy_rev0_1_table_init ( struct b43_wldev * dev ) ; 
/*--lpphy_rev0_1_table_init--*/
void lpphy_rev2plus_table_init ( struct b43_wldev * dev ) ; 
/*--lpphy_rev2plus_table_init--*/
void lpphy_write_gain_table ( struct b43_wldev * dev , int offset , struct lpphy_tx_gain_table_entry data ) ; 
/*--lpphy_write_gain_table--*/
void lpphy_write_gain_table_bulk ( struct b43_wldev * dev , int offset , int count , struct lpphy_tx_gain_table_entry * table ) ; 
/*--lpphy_write_gain_table_bulk--*/
void lpphy_init_tx_gain_table ( struct b43_wldev * dev ) ; 
/*--lpphy_init_tx_gain_table--*/
int b43_sysfs_register ( struct b43_wldev * wldev ) ; 
/*--b43_sysfs_register--*/
void b43_sysfs_unregister ( struct b43_wldev * wldev ) ; 
/*--b43_sysfs_unregister--*/
u8 b43_plcp_get_ratecode_cck ( const u8 bitrate ) ; 
/*--b43_plcp_get_ratecode_cck--*/
u8 b43_plcp_get_ratecode_ofdm ( const u8 bitrate ) ; 
/*--b43_plcp_get_ratecode_ofdm--*/
void b43_generate_plcp_hdr ( struct b43_plcp_hdr4 * plcp , const u16 octets , const u8 bitrate ) ; 
/*--b43_generate_plcp_hdr--*/
int b43_generate_txhdr ( struct b43_wldev * dev , u8 * _txhdr , struct sk_buff * skb_frag , struct ieee80211_tx_info * info , u16 cookie ) ; 
/*--b43_generate_txhdr--*/
void b43_rx ( struct b43_wldev * dev , struct sk_buff * skb , const void * _rxhdr ) ; 
/*--b43_rx--*/
void b43_handle_txstatus ( struct b43_wldev * dev , const struct b43_txstatus * status ) ; 
/*--b43_handle_txstatus--*/
bool b43_fill_txstatus_report ( struct b43_wldev * dev , struct ieee80211_tx_info * report , const struct b43_txstatus * status ) ; 
/*--b43_fill_txstatus_report--*/
void b43_tx_suspend ( struct b43_wldev * dev ) ; 
/*--b43_tx_suspend--*/
void b43_tx_resume ( struct b43_wldev * dev ) ; 
/*--b43_tx_resume--*/
void b43_gphy_dc_lt_init ( struct b43_wldev * dev , bool update_all ) ; 
/*--b43_gphy_dc_lt_init--*/
void b43_lo_g_adjust ( struct b43_wldev * dev ) ; 
/*--b43_lo_g_adjust--*/
void b43_lo_g_adjust_to ( struct b43_wldev * dev , u16 rfatt , u16 bbatt , u16 tx_control ) ; 
/*--b43_lo_g_adjust_to--*/
void b43_lo_g_maintanance_work ( struct b43_wldev * dev ) ; 
/*--b43_lo_g_maintanance_work--*/
void b43_lo_g_cleanup ( struct b43_wldev * dev ) ; 
/*--b43_lo_g_cleanup--*/
void b43_lo_g_init ( struct b43_wldev * dev ) ; 
/*--b43_lo_g_init--*/
void b43_wa_initgains ( struct b43_wldev * dev ) ; 
/*--b43_wa_initgains--*/
void b43_wa_all ( struct b43_wldev * dev ) ; 
/*--b43_wa_all--*/
void b43_dma_free ( struct b43_wldev * dev ) ; 
/*--b43_dma_free--*/
int b43_dma_init ( struct b43_wldev * dev ) ; 
/*--b43_dma_init--*/
int b43_dma_tx ( struct b43_wldev * dev , struct sk_buff * skb ) ; 
/*--b43_dma_tx--*/
void b43_dma_handle_txstatus ( struct b43_wldev * dev , const struct b43_txstatus * status ) ; 
/*--b43_dma_handle_txstatus--*/
void b43_dma_rx ( struct b43_dmaring * ring ) ; 
/*--b43_dma_rx--*/
void b43_dma_tx_suspend ( struct b43_wldev * dev ) ; 
/*--b43_dma_tx_suspend--*/
void b43_dma_tx_resume ( struct b43_wldev * dev ) ; 
/*--b43_dma_tx_resume--*/
void b43_dma_direct_fifo_rx ( struct b43_wldev * dev , unsigned int engine_index , bool enable ) ; 
/*--b43_dma_direct_fifo_rx--*/
void b43_pio_free ( struct b43_wldev * dev ) ; 
/*--b43_pio_free--*/
int b43_pio_init ( struct b43_wldev * dev ) ; 
/*--b43_pio_init--*/
int b43_pio_tx ( struct b43_wldev * dev , struct sk_buff * skb ) ; 
/*--b43_pio_tx--*/
void b43_pio_handle_txstatus ( struct b43_wldev * dev , const struct b43_txstatus * status ) ; 
/*--b43_pio_handle_txstatus--*/
void b43_pio_rx ( struct b43_pio_rxqueue * q ) ; 
/*--b43_pio_rx--*/
void b43_pio_tx_suspend ( struct b43_wldev * dev ) ; 
/*--b43_pio_tx_suspend--*/
void b43_pio_tx_resume ( struct b43_wldev * dev ) ; 
/*--b43_pio_tx_resume--*/
bool b43_is_hw_radio_enabled ( struct b43_wldev * dev ) ; 
/*--b43_is_hw_radio_enabled--*/
void b43_rfkill_poll ( struct ieee80211_hw * hw ) ; 
/*--b43_rfkill_poll--*/
void b43_leds_init ( struct b43_wldev * dev ) ; 
/*--b43_leds_init--*/
void b43_leds_exit ( struct b43_wldev * dev ) ; 
/*--b43_leds_exit--*/
void b43_leds_stop ( struct b43_wldev * dev ) ; 
/*--b43_leds_stop--*/
void b43_leds_register ( struct b43_wldev * dev ) ; 
/*--b43_leds_register--*/
void b43_leds_unregister ( struct b43_wl * wl ) ; 
/*--b43_leds_unregister--*/
void b43legacyinfo ( struct b43legacy_wl * wl , const char * fmt , ... ) ; 
/*--b43legacyinfo--*/
void b43legacyerr ( struct b43legacy_wl * wl , const char * fmt , ... ) ; 
/*--b43legacyerr--*/
void b43legacywarn ( struct b43legacy_wl * wl , const char * fmt , ... ) ; 
/*--b43legacywarn--*/
void b43legacydbg ( struct b43legacy_wl * wl , const char * fmt , ... ) ; 
/*--b43legacydbg--*/
u32 b43legacy_shm_read32 ( struct b43legacy_wldev * dev , u16 routing , u16 offset ) ; 
/*--b43legacy_shm_read32--*/
u16 b43legacy_shm_read16 ( struct b43legacy_wldev * dev , u16 routing , u16 offset ) ; 
/*--b43legacy_shm_read16--*/
void b43legacy_shm_write32 ( struct b43legacy_wldev * dev , u16 routing , u16 offset , u32 value ) ; 
/*--b43legacy_shm_write32--*/
void b43legacy_shm_write16 ( struct b43legacy_wldev * dev , u16 routing , u16 offset , u16 value ) ; 
/*--b43legacy_shm_write16--*/
u32 b43legacy_hf_read ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_hf_read--*/
void b43legacy_hf_write ( struct b43legacy_wldev * dev , u32 value ) ; 
/*--b43legacy_hf_write--*/
void b43legacy_tsf_read ( struct b43legacy_wldev * dev , u64 * tsf ) ; 
/*--b43legacy_tsf_read--*/
void b43legacy_tsf_write ( struct b43legacy_wldev * dev , u64 tsf ) ; 
/*--b43legacy_tsf_write--*/
void b43legacy_dummy_transmission ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_dummy_transmission--*/
void b43legacy_wireless_core_reset ( struct b43legacy_wldev * dev , u32 flags ) ; 
/*--b43legacy_wireless_core_reset--*/
void b43legacy_mac_enable ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_mac_enable--*/
void b43legacy_mac_suspend ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_mac_suspend--*/
void b43legacy_controller_restart ( struct b43legacy_wldev * dev , const char * reason ) ; 
/*--b43legacy_controller_restart--*/
void b43legacy_ilt_write ( struct b43legacy_wldev * dev , u16 offset , u16 val ) ; 
/*--b43legacy_ilt_write--*/
void b43legacy_ilt_write32 ( struct b43legacy_wldev * dev , u16 offset , u32 val ) ; 
/*--b43legacy_ilt_write32--*/
u16 b43legacy_ilt_read ( struct b43legacy_wldev * dev , u16 offset ) ; 
/*--b43legacy_ilt_read--*/
void b43legacy_phy_lock ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_lock--*/
void b43legacy_phy_unlock ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_unlock--*/
u16 b43legacy_phy_read ( struct b43legacy_wldev * dev , u16 offset ) ; 
/*--b43legacy_phy_read--*/
void b43legacy_phy_write ( struct b43legacy_wldev * dev , u16 offset , u16 val ) ; 
/*--b43legacy_phy_write--*/
void b43legacy_phy_calibrate ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_calibrate--*/
void b43legacy_phy_lo_b_measure ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_lo_b_measure--*/
void b43legacy_phy_lo_adjust ( struct b43legacy_wldev * dev , int fixed ) ; 
/*--b43legacy_phy_lo_adjust--*/
void b43legacy_phy_set_baseband_attenuation ( struct b43legacy_wldev * dev , u16 bbatt ) ; 
/*--b43legacy_phy_set_baseband_attenuation--*/
void b43legacy_phy_lo_g_measure ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_lo_g_measure--*/
void b43legacy_phy_lo_mark_all_unused ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_lo_mark_all_unused--*/
void b43legacy_phy_xmitpower ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_xmitpower--*/
int b43legacy_phy_init_tssi2dbm_table ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_init_tssi2dbm_table--*/
int b43legacy_phy_init ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_init--*/
void b43legacy_phy_set_antenna_diversity ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_phy_set_antenna_diversity--*/
void b43legacy_power_saving_ctl_bits ( struct b43legacy_wldev * dev , int bit25 , int bit26 ) ; 
/*--b43legacy_power_saving_ctl_bits--*/
void b43legacy_radio_lock ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_radio_lock--*/
void b43legacy_radio_unlock ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_radio_unlock--*/
u16 b43legacy_radio_read16 ( struct b43legacy_wldev * dev , u16 offset ) ; 
/*--b43legacy_radio_read16--*/
void b43legacy_radio_write16 ( struct b43legacy_wldev * dev , u16 offset , u16 val ) ; 
/*--b43legacy_radio_write16--*/
u8 b43legacy_radio_aci_detect ( struct b43legacy_wldev * dev , u8 channel ) ; 
/*--b43legacy_radio_aci_detect--*/
u8 b43legacy_radio_aci_scan ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_radio_aci_scan--*/
void b43legacy_nrssi_hw_write ( struct b43legacy_wldev * dev , u16 offset , s16 val ) ; 
/*--b43legacy_nrssi_hw_write--*/
s16 b43legacy_nrssi_hw_read ( struct b43legacy_wldev * dev , u16 offset ) ; 
/*--b43legacy_nrssi_hw_read--*/
void b43legacy_nrssi_hw_update ( struct b43legacy_wldev * dev , u16 val ) ; 
/*--b43legacy_nrssi_hw_update--*/
void b43legacy_nrssi_mem_update ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_nrssi_mem_update--*/
void b43legacy_calc_nrssi_slope ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_calc_nrssi_slope--*/
void b43legacy_calc_nrssi_threshold ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_calc_nrssi_threshold--*/
int b43legacy_radio_set_interference_mitigation ( struct b43legacy_wldev * dev , int mode ) ; 
/*--b43legacy_radio_set_interference_mitigation--*/
u16 b43legacy_radio_calibrationvalue ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_radio_calibrationvalue--*/
u16 b43legacy_radio_init2050 ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_radio_init2050--*/
void b43legacy_radio_set_tx_iq ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_radio_set_tx_iq--*/
int b43legacy_radio_selectchannel ( struct b43legacy_wldev * dev , u8 channel , int synthetic_pu_workaround ) ; 
/*--b43legacy_radio_selectchannel--*/
void b43legacy_radio_set_txantenna ( struct b43legacy_wldev * dev , u32 val ) ; 
/*--b43legacy_radio_set_txantenna--*/
void b43legacy_radio_set_txpower_a ( struct b43legacy_wldev * dev , u16 txpower ) ; 
/*--b43legacy_radio_set_txpower_a--*/
void b43legacy_radio_set_txpower_bg ( struct b43legacy_wldev * dev , u16 baseband_attenuation , u16 radio_attenuation , u16 txpower ) ; 
/*--b43legacy_radio_set_txpower_bg--*/
u16 b43legacy_default_baseband_attenuation ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_default_baseband_attenuation--*/
u16 b43legacy_default_radio_attenuation ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_default_radio_attenuation--*/
u16 b43legacy_default_txctl1 ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_default_txctl1--*/
void b43legacy_radio_turn_on ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_radio_turn_on--*/
void b43legacy_radio_turn_off ( struct b43legacy_wldev * dev , bool force ) ; 
/*--b43legacy_radio_turn_off--*/
void b43legacy_radio_clear_tssi ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_radio_clear_tssi--*/
int b43legacy_sysfs_register ( struct b43legacy_wldev * wldev ) ; 
/*--b43legacy_sysfs_register--*/
void b43legacy_sysfs_unregister ( struct b43legacy_wldev * wldev ) ; 
/*--b43legacy_sysfs_unregister--*/
u8 b43legacy_plcp_get_ratecode_cck ( const u8 bitrate ) ; 
/*--b43legacy_plcp_get_ratecode_cck--*/
u8 b43legacy_plcp_get_ratecode_ofdm ( const u8 bitrate ) ; 
/*--b43legacy_plcp_get_ratecode_ofdm--*/
void b43legacy_generate_plcp_hdr ( struct b43legacy_plcp_hdr4 * plcp , const u16 octets , const u8 bitrate ) ; 
/*--b43legacy_generate_plcp_hdr--*/
int b43legacy_generate_txhdr ( struct b43legacy_wldev * dev , u8 * txhdr , const unsigned char * fragment_data , unsigned int fragment_len , struct ieee80211_tx_info * info , u16 cookie ) ; 
/*--b43legacy_generate_txhdr--*/
void b43legacy_rx ( struct b43legacy_wldev * dev , struct sk_buff * skb , const void * _rxhdr ) ; 
/*--b43legacy_rx--*/
void b43legacy_handle_txstatus ( struct b43legacy_wldev * dev , const struct b43legacy_txstatus * status ) ; 
/*--b43legacy_handle_txstatus--*/
void b43legacy_handle_hwtxstatus ( struct b43legacy_wldev * dev , const struct b43legacy_hwtxstatus * hw ) ; 
/*--b43legacy_handle_hwtxstatus--*/
void b43legacy_tx_suspend ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_tx_suspend--*/
void b43legacy_tx_resume ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_tx_resume--*/
void b43legacy_qos_init ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_qos_init--*/
bool b43legacy_is_hw_radio_enabled ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_is_hw_radio_enabled--*/
void b43legacy_rfkill_poll ( struct ieee80211_hw * hw ) ; 
/*--b43legacy_rfkill_poll--*/
void b43legacy_leds_init ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_leds_init--*/
void b43legacy_leds_exit ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_leds_exit--*/
int b43legacy_debug ( struct b43legacy_wldev * dev , enum b43legacy_dyndbg feature ) ; 
/*--b43legacy_debug--*/
void b43legacy_debugfs_add_device ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_debugfs_add_device--*/
void b43legacy_debugfs_remove_device ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_debugfs_remove_device--*/
void b43legacy_debugfs_log_txstat ( struct b43legacy_wldev * dev , const struct b43legacy_txstatus * status ) ; 
/*--b43legacy_debugfs_log_txstat--*/
void b43legacy_debugfs_init ( void ) ; 
/*--b43legacy_debugfs_init--*/
void b43legacy_debugfs_exit ( void ) ; 
/*--b43legacy_debugfs_exit--*/
void b43legacy_dma_free ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_dma_free--*/
int b43legacy_dma_init ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_dma_init--*/
int b43legacy_dma_tx ( struct b43legacy_wldev * dev , struct sk_buff * skb ) ; 
/*--b43legacy_dma_tx--*/
void b43legacy_dma_handle_txstatus ( struct b43legacy_wldev * dev , const struct b43legacy_txstatus * status ) ; 
/*--b43legacy_dma_handle_txstatus--*/
void b43legacy_dma_rx ( struct b43legacy_dmaring * ring ) ; 
/*--b43legacy_dma_rx--*/
void b43legacy_dma_tx_suspend ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_dma_tx_suspend--*/
void b43legacy_dma_tx_resume ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_dma_tx_resume--*/
void b43legacy_pio_free ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_pio_free--*/
int b43legacy_pio_init ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_pio_init--*/
int b43legacy_pio_tx ( struct b43legacy_wldev * dev , struct sk_buff * skb ) ; 
/*--b43legacy_pio_tx--*/
void b43legacy_pio_handle_txstatus ( struct b43legacy_wldev * dev , const struct b43legacy_txstatus * status ) ; 
/*--b43legacy_pio_handle_txstatus--*/
void b43legacy_pio_rx ( struct b43legacy_pioqueue * queue ) ; 
/*--b43legacy_pio_rx--*/
void b43legacy_pio_tx_suspend ( struct b43legacy_pioqueue * queue ) ; 
/*--b43legacy_pio_tx_suspend--*/
void b43legacy_pio_tx_resume ( struct b43legacy_pioqueue * queue ) ; 
/*--b43legacy_pio_tx_resume--*/
void b43legacy_pio_freeze_txqueues ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_pio_freeze_txqueues--*/
void b43legacy_pio_thaw_txqueues ( struct b43legacy_wldev * dev ) ; 
/*--b43legacy_pio_thaw_txqueues--*/
void hostap_dump_rx_80211 ( const char * name , struct sk_buff * skb , struct hostap_80211_rx_status * rx_stats ) ; 
/*--hostap_dump_rx_80211--*/
int prism2_rx_80211 ( struct net_device * dev , struct sk_buff * skb , struct hostap_80211_rx_status * rx_stats , int type ) ; 
/*--prism2_rx_80211--*/
void hostap_80211_rx ( struct net_device * dev , struct sk_buff * skb , struct hostap_80211_rx_status * rx_stats ) ; 
/*--hostap_80211_rx--*/
void hostap_dump_tx_80211 ( const char * name , struct sk_buff * skb ) ; 
/*--hostap_dump_tx_80211--*/
netdev_tx_t hostap_data_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--hostap_data_start_xmit--*/
netdev_tx_t hostap_mgmt_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--hostap_mgmt_start_xmit--*/
netdev_tx_t hostap_master_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--hostap_master_start_xmit--*/
void hostap_deauth_all_stas ( struct net_device * dev , struct ap_data * ap , int resend ) ; 
/*--hostap_deauth_all_stas--*/
int ap_control_add_mac ( struct mac_restrictions * mac_restrictions , u8 * mac ) ; 
/*--ap_control_add_mac--*/
int ap_control_del_mac ( struct mac_restrictions * mac_restrictions , u8 * mac ) ; 
/*--ap_control_del_mac--*/
void ap_control_flush_macs ( struct mac_restrictions * mac_restrictions ) ; 
/*--ap_control_flush_macs--*/
int ap_control_kick_mac ( struct ap_data * ap , struct net_device * dev , u8 * mac ) ; 
/*--ap_control_kick_mac--*/
void ap_control_kickall ( struct ap_data * ap ) ; 
/*--ap_control_kickall--*/
void hostap_check_sta_fw_version ( struct ap_data * ap , int sta_fw_ver ) ; 
/*--hostap_check_sta_fw_version--*/
void hostap_init_data ( local_info_t * local ) ; 
/*--hostap_init_data--*/
void hostap_init_ap_proc ( local_info_t * local ) ; 
/*--hostap_init_ap_proc--*/
void hostap_free_data ( struct ap_data * ap ) ; 
/*--hostap_free_data--*/
void hostap_rx ( struct net_device * dev , struct sk_buff * skb , struct hostap_80211_rx_status * rx_stats ) ; 
/*--hostap_rx--*/
int prism2_ap_get_sta_qual ( local_info_t * local , struct sockaddr addr [ ] , struct iw_quality qual [ ] , int buf_size , int aplist ) ; 
/*--prism2_ap_get_sta_qual--*/
int prism2_ap_translate_scan ( struct net_device * dev , struct iw_request_info * info , char * buffer ) ; 
/*--prism2_ap_translate_scan--*/
int prism2_hostapd ( struct ap_data * ap , struct prism2_hostapd_param * param ) ; 
/*--prism2_hostapd--*/
ap_tx_ret hostap_handle_sta_tx ( local_info_t * local , struct hostap_tx_data * tx ) ; 
/*--hostap_handle_sta_tx--*/
void hostap_handle_sta_release ( void * ptr ) ; 
/*--hostap_handle_sta_release--*/
void hostap_handle_sta_tx_exc ( local_info_t * local , struct sk_buff * skb ) ; 
/*--hostap_handle_sta_tx_exc--*/
int hostap_update_sta_ps ( local_info_t * local , struct ieee80211_hdr * hdr ) ; 
/*--hostap_update_sta_ps--*/
ap_rx_ret hostap_handle_sta_rx ( local_info_t * local , struct net_device * dev , struct sk_buff * skb , struct hostap_80211_rx_status * rx_stats , int wds ) ; 
/*--hostap_handle_sta_rx--*/
int hostap_handle_sta_crypto ( local_info_t * local , struct ieee80211_hdr * hdr , struct lib80211_crypt_data * * crypt , void * * sta_ptr ) ; 
/*--hostap_handle_sta_crypto--*/
int hostap_is_sta_assoc ( struct ap_data * ap , u8 * sta_addr ) ; 
/*--hostap_is_sta_assoc--*/
int hostap_is_sta_authorized ( struct ap_data * ap , u8 * sta_addr ) ; 
/*--hostap_is_sta_authorized--*/
int hostap_add_sta ( struct ap_data * ap , u8 * sta_addr ) ; 
/*--hostap_add_sta--*/
int hostap_update_rx_stats ( struct ap_data * ap , struct ieee80211_hdr * hdr , struct hostap_80211_rx_status * rx_stats ) ; 
/*--hostap_update_rx_stats--*/
void hostap_update_rates ( local_info_t * local ) ; 
/*--hostap_update_rates--*/
void * ap_crypt_get_ptrs ( struct ap_data * ap , u8 * addr , int permanent , struct lib80211_crypt_data * * * crypt ) ; 
/*--ap_crypt_get_ptrs--*/
void hostap_add_wds_links ( local_info_t * local ) ; 
/*--hostap_add_wds_links--*/
void hostap_wds_link_oper ( local_info_t * local , u8 * addr , wds_oper_type type ) ; 
/*--hostap_wds_link_oper--*/
void hostap_info_process ( local_info_t * local , struct sk_buff * skb ) ; 
/*--hostap_info_process--*/
void hostap_info_init ( local_info_t * local ) ; 
/*--hostap_info_init--*/
int hostap_ioctl ( struct net_device * dev , struct ifreq * ifr , int cmd ) ; 
/*--hostap_ioctl--*/
struct net_device * hostap_add_interface ( struct local_info * local , int type , int rtnl_locked , const char * prefix , const char * name ) ; 
/*--hostap_add_interface--*/
void hostap_remove_interface ( struct net_device * dev , int rtnl_locked , int remove_from_list ) ; 
/*--hostap_remove_interface--*/
int prism2_wds_add ( local_info_t * local , u8 * remote_addr , int rtnl_locked ) ; 
/*--prism2_wds_add--*/
int prism2_wds_del ( local_info_t * local , u8 * remote_addr , int rtnl_locked , int do_not_remove ) ; 
/*--prism2_wds_del--*/
u16 hostap_tx_callback_register ( local_info_t * local , void ( * func ) ( struct sk_buff * , int ok , void * ) , void * data ) ; 
/*--hostap_tx_callback_register--*/
int hostap_tx_callback_unregister ( local_info_t * local , u16 idx ) ; 
/*--hostap_tx_callback_unregister--*/
int hostap_set_word ( struct net_device * dev , int rid , u16 val ) ; 
/*--hostap_set_word--*/
int hostap_set_string ( struct net_device * dev , int rid , const char * val ) ; 
/*--hostap_set_string--*/
u16 hostap_get_porttype ( local_info_t * local ) ; 
/*--hostap_get_porttype--*/
int hostap_set_encryption ( local_info_t * local ) ; 
/*--hostap_set_encryption--*/
int hostap_set_antsel ( local_info_t * local ) ; 
/*--hostap_set_antsel--*/
int hostap_set_roaming ( local_info_t * local ) ; 
/*--hostap_set_roaming--*/
int hostap_set_auth_algs ( local_info_t * local ) ; 
/*--hostap_set_auth_algs--*/
void hostap_dump_rx_header ( const char * name , const struct hfa384x_rx_frame * rx ) ; 
/*--hostap_dump_rx_header--*/
void hostap_dump_tx_header ( const char * name , const struct hfa384x_tx_frame * tx ) ; 
/*--hostap_dump_tx_header--*/
int hostap_80211_get_hdrlen ( __le16 fc ) ; 
/*--hostap_80211_get_hdrlen--*/
void hostap_set_multicast_list_queue ( struct work_struct * work ) ; 
/*--hostap_set_multicast_list_queue--*/
void hostap_setup_dev ( struct net_device * dev , local_info_t * local , int type ) ; 
/*--hostap_setup_dev--*/
int hostap_set_hostapd ( local_info_t * local , int val , int rtnl_locked ) ; 
/*--hostap_set_hostapd--*/
int hostap_set_hostapd_sta ( local_info_t * local , int val , int rtnl_locked ) ; 
/*--hostap_set_hostapd_sta--*/
int prism2_update_comms_qual ( struct net_device * dev ) ; 
/*--prism2_update_comms_qual--*/
int prism2_sta_send_mgmt ( local_info_t * local , u8 * dst , u16 stype , u8 * body , size_t bodylen ) ; 
/*--prism2_sta_send_mgmt--*/
int prism2_sta_deauth ( local_info_t * local , u16 reason ) ; 
/*--prism2_sta_deauth--*/
void hostap_init_proc ( local_info_t * local ) ; 
/*--hostap_init_proc--*/
void hostap_remove_proc ( local_info_t * local ) ; 
/*--hostap_remove_proc--*/
void libipw_network_reset ( struct libipw_network * network ) ; 
/*--libipw_network_reset--*/
void libipw_networks_age ( struct libipw_device * ieee , unsigned long age_secs ) ; 
/*--libipw_networks_age--*/
int libipw_change_mtu ( struct net_device * dev , int new_mtu ) ; 
/*--libipw_change_mtu--*/
struct net_device * alloc_libipw ( int sizeof_priv , int monitor ) ; 
/*--alloc_libipw--*/
void free_libipw ( struct net_device * dev , int monitor ) ; 
/*--free_libipw--*/
void libipw_txb_free ( struct libipw_txb * txb ) ; 
/*--libipw_txb_free--*/
netdev_tx_t libipw_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--libipw_xmit--*/
int libipw_rx ( struct libipw_device * ieee , struct sk_buff * skb , struct libipw_rx_stats * rx_stats ) ; 
/*--libipw_rx--*/
void libipw_rx_any ( struct libipw_device * ieee , struct sk_buff * skb , struct libipw_rx_stats * stats ) ; 
/*--libipw_rx_any--*/
void libipw_rx_mgt ( struct libipw_device * ieee , struct libipw_hdr_4addr * header , struct libipw_rx_stats * stats ) ; 
/*--libipw_rx_mgt--*/
int libipw_wx_get_scan ( struct libipw_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--libipw_wx_get_scan--*/
int libipw_wx_set_encode ( struct libipw_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * keybuf ) ; 
/*--libipw_wx_set_encode--*/
int libipw_wx_get_encode ( struct libipw_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * keybuf ) ; 
/*--libipw_wx_get_encode--*/
int libipw_wx_set_encodeext ( struct libipw_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--libipw_wx_set_encodeext--*/
int libipw_wx_get_encodeext ( struct libipw_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--libipw_wx_get_encodeext--*/
int libipw_is_valid_channel ( struct libipw_device * ieee , u8 channel ) ; 
/*--libipw_is_valid_channel--*/
int libipw_channel_to_index ( struct libipw_device * ieee , u8 channel ) ; 
/*--libipw_channel_to_index--*/
u32 libipw_channel_to_freq ( struct libipw_device * ieee , u8 channel ) ; 
/*--libipw_channel_to_freq--*/
u8 libipw_freq_to_channel ( struct libipw_device * ieee , u32 freq ) ; 
/*--libipw_freq_to_channel--*/
int libipw_set_geo ( struct libipw_device * ieee , const struct libipw_geo * geo ) ; 
/*--libipw_set_geo--*/
const struct libipw_geo * libipw_get_geo ( struct libipw_device * ieee ) ; 
/*--libipw_get_geo--*/
u8 libipw_get_channel_flags ( struct libipw_device * ieee , u8 channel ) ; 
/*--libipw_get_channel_flags--*/
const struct libipw_channel * libipw_get_channel ( struct libipw_device * ieee , u8 channel ) ; 
/*--libipw_get_channel--*/
__le32 iwl3945_get_antenna_flags ( const struct iwl_priv * priv ) ; 
/*--iwl3945_get_antenna_flags--*/
unsigned int iwl3945_fill_beacon_frame ( struct iwl_priv * priv , struct ieee80211_hdr * hdr , int left ) ; 
/*--iwl3945_fill_beacon_frame--*/
void iwl3945_rx_queue_reset ( struct iwl_priv * priv , struct iwl_rx_queue * rxq ) ; 
/*--iwl3945_rx_queue_reset--*/
void iwl3945_rx_replenish ( void * data ) ; 
/*--iwl3945_rx_replenish--*/
int iwl3945_calc_db_from_ratio ( int sig_ratio ) ; 
/*--iwl3945_calc_db_from_ratio--*/
void iwl3945_dump_nic_error_log ( struct iwl_priv * priv ) ; 
/*--iwl3945_dump_nic_error_log--*/
int iwl3945_dump_nic_event_log ( struct iwl_priv * priv , bool full_log , char * * buf , bool display ) ; 
/*--iwl3945_dump_nic_event_log--*/
void iwl3945_request_scan ( struct iwl_priv * priv , struct ieee80211_vif * vif ) ; 
/*--iwl3945_request_scan--*/
void iwl3945_post_associate ( struct iwl_priv * priv , struct ieee80211_vif * vif ) ; 
/*--iwl3945_post_associate--*/
void iwl3945_config_ap ( struct iwl_priv * priv , struct ieee80211_vif * vif ) ; 
/*--iwl3945_config_ap--*/
void iwl3945_disable_events ( struct iwl_priv * priv ) ; 
/*--iwl3945_disable_events--*/
int iwl3945_rs_next_rate ( struct iwl_priv * priv , int rate ) ; 
/*--iwl3945_rs_next_rate--*/
void iwl3945_hw_rx_statistics ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl3945_hw_rx_statistics--*/
void iwl3945_reply_statistics ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl3945_reply_statistics--*/
int iwl3945_hw_txq_attach_buf_to_tfd ( struct iwl_priv * priv , struct iwl_tx_queue * txq , dma_addr_t addr , u16 len , u8 reset , u8 pad ) ; 
/*--iwl3945_hw_txq_attach_buf_to_tfd--*/
void iwl3945_hw_txq_free_tfd ( struct iwl_priv * priv , struct iwl_tx_queue * txq ) ; 
/*--iwl3945_hw_txq_free_tfd--*/
void iwl3945_hw_build_tx_cmd_rate ( struct iwl_priv * priv , struct iwl_device_cmd * cmd , struct ieee80211_tx_info * info , struct ieee80211_hdr * hdr , int sta_id , int tx_id ) ; 
/*--iwl3945_hw_build_tx_cmd_rate--*/
int iwl3945_hw_nic_init ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_nic_init--*/
void iwl3945_hw_txq_ctx_free ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_txq_ctx_free--*/
void iwl3945_hw_txq_ctx_stop ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_txq_ctx_stop--*/
int iwl3945_hw_get_temperature ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_get_temperature--*/
int iwl3945_hw_reg_set_txpower ( struct iwl_priv * priv , s8 power ) ; 
/*--iwl3945_hw_reg_set_txpower--*/
void iwl3945_reg_txpower_periodic ( struct iwl_priv * priv ) ; 
/*--iwl3945_reg_txpower_periodic--*/
int iwl3945_txpower_set_from_eeprom ( struct iwl_priv * priv ) ; 
/*--iwl3945_txpower_set_from_eeprom--*/
int iwl3945_hw_rxq_stop ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_rxq_stop--*/
int iwl3945_hw_tx_queue_init ( struct iwl_priv * priv , struct iwl_tx_queue * txq ) ; 
/*--iwl3945_hw_tx_queue_init--*/
int iwl3945_init_hw_rate_table ( struct iwl_priv * priv ) ; 
/*--iwl3945_init_hw_rate_table--*/
int iwl3945_hw_set_hw_params ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_set_hw_params--*/
unsigned int iwl3945_hw_get_beacon_cmd ( struct iwl_priv * priv , struct iwl3945_frame * frame , u8 rate ) ; 
/*--iwl3945_hw_get_beacon_cmd--*/
void iwl3945_hw_rx_handler_setup ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_rx_handler_setup--*/
void iwl3945_hw_setup_deferred_work ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_setup_deferred_work--*/
void iwl3945_hw_cancel_deferred_work ( struct iwl_priv * priv ) ; 
/*--iwl3945_hw_cancel_deferred_work--*/
void iwl3945_rs_rate_init ( struct iwl_priv * priv , struct ieee80211_sta * sta , u8 sta_id ) ; 
/*--iwl3945_rs_rate_init--*/
void iwl3945_rate_scale_init ( struct ieee80211_hw * hw , s32 sta_id ) ; 
/*--iwl3945_rate_scale_init--*/
int iwl3945_rate_control_register ( void ) ; 
/*--iwl3945_rate_control_register--*/
void iwl3945_rate_control_unregister ( void ) ; 
/*--iwl3945_rate_control_unregister--*/
int iwl_commit_rxon ( struct iwl_priv * priv ) ; 
/*--iwl_commit_rxon--*/
void iwl_update_chain_flags ( struct iwl_priv * priv ) ; 
/*--iwl_update_chain_flags--*/
void iwl_hw_txq_free_tfd ( struct iwl_priv * priv , struct iwl_tx_queue * txq ) ; 
/*--iwl_hw_txq_free_tfd--*/
int iwl_hw_txq_attach_buf_to_tfd ( struct iwl_priv * priv , struct iwl_tx_queue * txq , dma_addr_t addr , u16 len , u8 reset , u8 pad ) ; 
/*--iwl_hw_txq_attach_buf_to_tfd--*/
int iwl_hw_tx_queue_init ( struct iwl_priv * priv , struct iwl_tx_queue * txq ) ; 
/*--iwl_hw_tx_queue_init--*/
int iwl_set_pwr_src ( struct iwl_priv * priv , enum iwl_pwr_src src ) ; 
/*--iwl_set_pwr_src--*/
void iwl_rx_handle ( struct iwl_priv * priv ) ; 
/*--iwl_rx_handle--*/
bool iwl_good_ack_health ( struct iwl_priv * priv , struct iwl_rx_packet * pkt ) ; 
/*--iwl_good_ack_health--*/
void iwl_dump_nic_error_log ( struct iwl_priv * priv ) ; 
/*--iwl_dump_nic_error_log--*/
int iwl_dump_nic_event_log ( struct iwl_priv * priv , bool full_log , char * * buf , bool display ) ; 
/*--iwl_dump_nic_event_log--*/
void iwl_post_associate ( struct iwl_priv * priv , struct ieee80211_vif * vif ) ; 
/*--iwl_post_associate--*/
void iwl_config_ap ( struct iwl_priv * priv , struct ieee80211_vif * vif ) ; 
/*--iwl_config_ap--*/
void iwl_rs_rate_init ( struct iwl_priv * priv , struct ieee80211_sta * sta , u8 sta_id ) ; 
/*--iwl_rs_rate_init--*/
int iwlagn_rate_control_register ( void ) ; 
/*--iwlagn_rate_control_register--*/
void iwlagn_rate_control_unregister ( void ) ; 
/*--iwlagn_rate_control_unregister--*/
void iwl_free_isr_ict ( struct iwl_priv * priv ) ; 
/*--iwl_free_isr_ict--*/
int iwl_alloc_isr_ict ( struct iwl_priv * priv ) ; 
/*--iwl_alloc_isr_ict--*/
int iwl_reset_ict ( struct iwl_priv * priv ) ; 
/*--iwl_reset_ict--*/
void iwl_disable_ict ( struct iwl_priv * priv ) ; 
/*--iwl_disable_ict--*/
irqreturn_t iwl_isr_ict ( int irq , void * data ) ; 
/*--iwl_isr_ict--*/
int iwlagn_load_ucode ( struct iwl_priv * priv ) ; 
/*--iwlagn_load_ucode--*/
void iwlagn_rx_calib_result ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwlagn_rx_calib_result--*/
void iwlagn_rx_calib_complete ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwlagn_rx_calib_complete--*/
void iwlagn_init_alive_start ( struct iwl_priv * priv ) ; 
/*--iwlagn_init_alive_start--*/
int iwlagn_alive_notify ( struct iwl_priv * priv ) ; 
/*--iwlagn_alive_notify--*/
void iwlagn_txq_update_byte_cnt_tbl ( struct iwl_priv * priv , struct iwl_tx_queue * txq , u16 byte_cnt ) ; 
/*--iwlagn_txq_update_byte_cnt_tbl--*/
void iwlagn_txq_inval_byte_cnt_tbl ( struct iwl_priv * priv , struct iwl_tx_queue * txq ) ; 
/*--iwlagn_txq_inval_byte_cnt_tbl--*/
void iwlagn_set_wr_ptrs ( struct iwl_priv * priv , int txq_id , u32 index ) ; 
/*--iwlagn_set_wr_ptrs--*/
void iwlagn_tx_queue_set_status ( struct iwl_priv * priv , struct iwl_tx_queue * txq , int tx_fifo_id , int scd_retry ) ; 
/*--iwlagn_tx_queue_set_status--*/
int iwlagn_txq_agg_enable ( struct iwl_priv * priv , int txq_id , int tx_fifo , int sta_id , int tid , u16 ssn_idx ) ; 
/*--iwlagn_txq_agg_enable--*/
int iwlagn_txq_agg_disable ( struct iwl_priv * priv , u16 txq_id , u16 ssn_idx , u8 tx_fifo ) ; 
/*--iwlagn_txq_agg_disable--*/
void iwlagn_txq_set_sched ( struct iwl_priv * priv , u32 mask ) ; 
/*--iwlagn_txq_set_sched--*/
int iwlagn_tx_skb ( struct iwl_priv * priv , struct sk_buff * skb ) ; 
/*--iwlagn_tx_skb--*/
void iwlagn_hw_txq_ctx_free ( struct iwl_priv * priv ) ; 
/*--iwlagn_hw_txq_ctx_free--*/
int iwlagn_txq_ctx_alloc ( struct iwl_priv * priv ) ; 
/*--iwlagn_txq_ctx_alloc--*/
void iwlagn_txq_ctx_reset ( struct iwl_priv * priv ) ; 
/*--iwlagn_txq_ctx_reset--*/
void iwlagn_txq_ctx_stop ( struct iwl_priv * priv ) ; 
/*--iwlagn_txq_ctx_stop--*/
int iwlagn_tx_agg_start ( struct iwl_priv * priv , struct ieee80211_vif * vif , struct ieee80211_sta * sta , u16 tid , u16 * ssn ) ; 
/*--iwlagn_tx_agg_start--*/
int iwlagn_tx_agg_stop ( struct iwl_priv * priv , struct ieee80211_vif * vif , struct ieee80211_sta * sta , u16 tid ) ; 
/*--iwlagn_tx_agg_stop--*/
int iwlagn_txq_check_empty ( struct iwl_priv * priv , int sta_id , u8 tid , int txq_id ) ; 
/*--iwlagn_txq_check_empty--*/
int iwlagn_tx_queue_reclaim ( struct iwl_priv * priv , int txq_id , int index ) ; 
/*--iwlagn_tx_queue_reclaim--*/
void iwlagn_hwrate_to_tx_control ( struct iwl_priv * priv , u32 rate_n_flags , struct ieee80211_tx_info * info ) ; 
/*--iwlagn_hwrate_to_tx_control--*/
void iwlagn_rx_reply_compressed_ba ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwlagn_rx_reply_compressed_ba--*/
void iwl_check_abort_status ( struct iwl_priv * priv , u8 frame_count , u32 status ) ; 
/*--iwl_check_abort_status--*/
void iwlagn_rx_handler_setup ( struct iwl_priv * priv ) ; 
/*--iwlagn_rx_handler_setup--*/
void iwlagn_setup_deferred_work ( struct iwl_priv * priv ) ; 
/*--iwlagn_setup_deferred_work--*/
int iwlagn_hw_valid_rtc_data_addr ( u32 addr ) ; 
/*--iwlagn_hw_valid_rtc_data_addr--*/
int iwlagn_send_tx_power ( struct iwl_priv * priv ) ; 
/*--iwlagn_send_tx_power--*/
void iwlagn_temperature ( struct iwl_priv * priv ) ; 
/*--iwlagn_temperature--*/
u16 iwlagn_eeprom_calib_version ( struct iwl_priv * priv ) ; 
/*--iwlagn_eeprom_calib_version--*/
const u8 * iwlagn_eeprom_query_addr ( const struct iwl_priv * priv , size_t offset ) ; 
/*--iwlagn_eeprom_query_addr--*/
void iwlagn_rx_queue_reset ( struct iwl_priv * priv , struct iwl_rx_queue * rxq ) ; 
/*--iwlagn_rx_queue_reset--*/
int iwlagn_rx_init ( struct iwl_priv * priv , struct iwl_rx_queue * rxq ) ; 
/*--iwlagn_rx_init--*/
int iwlagn_hw_nic_init ( struct iwl_priv * priv ) ; 
/*--iwlagn_hw_nic_init--*/
void iwlagn_rx_queue_restock ( struct iwl_priv * priv ) ; 
/*--iwlagn_rx_queue_restock--*/
void iwlagn_rx_allocate ( struct iwl_priv * priv , gfp_t priority ) ; 
/*--iwlagn_rx_allocate--*/
void iwlagn_rx_replenish ( struct iwl_priv * priv ) ; 
/*--iwlagn_rx_replenish--*/
void iwlagn_rx_replenish_now ( struct iwl_priv * priv ) ; 
/*--iwlagn_rx_replenish_now--*/
void iwlagn_rx_queue_free ( struct iwl_priv * priv , struct iwl_rx_queue * rxq ) ; 
/*--iwlagn_rx_queue_free--*/
int iwlagn_rxq_stop ( struct iwl_priv * priv ) ; 
/*--iwlagn_rxq_stop--*/
int iwlagn_hwrate_to_mac80211_idx ( u32 rate_n_flags , enum ieee80211_band band ) ; 
/*--iwlagn_hwrate_to_mac80211_idx--*/
void iwlagn_rx_reply_rx ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwlagn_rx_reply_rx--*/
void iwlagn_rx_reply_rx_phy ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwlagn_rx_reply_rx_phy--*/
void iwlagn_request_scan ( struct iwl_priv * priv , struct ieee80211_vif * vif ) ; 
/*--iwlagn_request_scan--*/
int iwlagn_manage_ibss_station ( struct iwl_priv * priv , struct ieee80211_vif * vif , bool add ) ; 
/*--iwlagn_manage_ibss_station--*/
int iwl_hwrate_to_plcp_idx ( u32 rate_n_flags ) ; 
/*--iwl_hwrate_to_plcp_idx--*/
u8 iwl_toggle_tx_ant ( struct iwl_priv * priv , u8 ant ) ; 
/*--iwl_toggle_tx_ant--*/
struct ieee80211_hw * iwl_alloc_all ( struct iwl_cfg * cfg , struct ieee80211_ops * hw_ops ) ; 
/*--iwl_alloc_all--*/
void iwl_hw_detect ( struct iwl_priv * priv ) ; 
/*--iwl_hw_detect--*/
int iwlcore_init_geos ( struct iwl_priv * priv ) ; 
/*--iwlcore_init_geos--*/
void iwlcore_free_geos ( struct iwl_priv * priv ) ; 
/*--iwlcore_free_geos--*/
void iwlcore_rts_tx_cmd_flag ( struct iwl_priv * priv , struct ieee80211_tx_info * info , __le16 fc , __le32 * tx_flags ) ; 
/*--iwlcore_rts_tx_cmd_flag--*/
u8 iwl_is_ht40_tx_allowed ( struct iwl_priv * priv , struct ieee80211_sta_ht_cap * sta_ht_inf ) ; 
/*--iwl_is_ht40_tx_allowed--*/
void iwl_setup_rxon_timing ( struct iwl_priv * priv , struct ieee80211_vif * vif ) ; 
/*--iwl_setup_rxon_timing--*/
void iwl_set_rxon_hwcrypto ( struct iwl_priv * priv , int hw_decrypt ) ; 
/*--iwl_set_rxon_hwcrypto--*/
int iwl_check_rxon_cmd ( struct iwl_priv * priv ) ; 
/*--iwl_check_rxon_cmd--*/
int iwl_full_rxon_required ( struct iwl_priv * priv ) ; 
/*--iwl_full_rxon_required--*/
u8 iwl_rate_get_lowest_plcp ( struct iwl_priv * priv ) ; 
/*--iwl_rate_get_lowest_plcp--*/
void iwl_set_rxon_ht ( struct iwl_priv * priv , struct iwl_ht_config * ht_conf ) ; 
/*--iwl_set_rxon_ht--*/
void iwl_set_rxon_chain ( struct iwl_priv * priv ) ; 
/*--iwl_set_rxon_chain--*/
u8 iwl_get_single_channel_number ( struct iwl_priv * priv , enum ieee80211_band band ) ; 
/*--iwl_get_single_channel_number--*/
int iwl_set_rxon_channel ( struct iwl_priv * priv , struct ieee80211_channel * ch ) ; 
/*--iwl_set_rxon_channel--*/
void iwl_connection_init_rx_config ( struct iwl_priv * priv , struct ieee80211_vif * vif ) ; 
/*--iwl_connection_init_rx_config--*/
void iwl_rx_csa ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_rx_csa--*/
void iwl_irq_handle_error ( struct iwl_priv * priv ) ; 
/*--iwl_irq_handle_error--*/
void iwl_apm_stop ( struct iwl_priv * priv ) ; 
/*--iwl_apm_stop--*/
int iwl_apm_init ( struct iwl_priv * priv ) ; 
/*--iwl_apm_init--*/
int iwl_set_hw_params ( struct iwl_priv * priv ) ; 
/*--iwl_set_hw_params--*/
int iwl_set_tx_power ( struct iwl_priv * priv , s8 tx_power , bool force ) ; 
/*--iwl_set_tx_power--*/
irqreturn_t iwl_isr_legacy ( int irq , void * data ) ; 
/*--iwl_isr_legacy--*/
void iwl_send_bt_config ( struct iwl_priv * priv ) ; 
/*--iwl_send_bt_config--*/
int iwl_send_statistics_request ( struct iwl_priv * priv , u8 flags , bool clear ) ; 
/*--iwl_send_statistics_request--*/
int iwl_verify_ucode ( struct iwl_priv * priv ) ; 
/*--iwl_verify_ucode--*/
void iwl_rf_kill_ct_config ( struct iwl_priv * priv ) ; 
/*--iwl_rf_kill_ct_config--*/
int iwl_send_card_state ( struct iwl_priv * priv , u32 flags , u8 meta_flag ) ; 
/*--iwl_send_card_state--*/
void iwl_rx_pm_sleep_notif ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_rx_pm_sleep_notif--*/
void iwl_rx_pm_debug_statistics_notif ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_rx_pm_debug_statistics_notif--*/
void iwl_rx_reply_error ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_rx_reply_error--*/
void iwl_clear_isr_stats ( struct iwl_priv * priv ) ; 
/*--iwl_clear_isr_stats--*/
int iwl_mac_conf_tx ( struct ieee80211_hw * hw , u16 queue , const struct ieee80211_tx_queue_params * params ) ; 
/*--iwl_mac_conf_tx--*/
void iwl_bss_info_changed ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , struct ieee80211_bss_conf * bss_conf , u32 changes ) ; 
/*--iwl_bss_info_changed--*/
int iwl_mac_beacon_update ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--iwl_mac_beacon_update--*/
int iwl_mac_add_interface ( struct ieee80211_hw * hw , struct ieee80211_vif * vif ) ; 
/*--iwl_mac_add_interface--*/
void iwl_mac_remove_interface ( struct ieee80211_hw * hw , struct ieee80211_vif * vif ) ; 
/*--iwl_mac_remove_interface--*/
int iwl_mac_config ( struct ieee80211_hw * hw , u32 changed ) ; 
/*--iwl_mac_config--*/
void iwl_mac_reset_tsf ( struct ieee80211_hw * hw ) ; 
/*--iwl_mac_reset_tsf--*/
int iwl_alloc_txq_mem ( struct iwl_priv * priv ) ; 
/*--iwl_alloc_txq_mem--*/
void iwl_free_txq_mem ( struct iwl_priv * priv ) ; 
/*--iwl_free_txq_mem--*/
void iwl_dump_csr ( struct iwl_priv * priv ) ; 
/*--iwl_dump_csr--*/
int iwl_dump_fh ( struct iwl_priv * priv , char * * buf , bool display ) ; 
/*--iwl_dump_fh--*/
int iwl_force_reset ( struct iwl_priv * priv , int mode ) ; 
/*--iwl_force_reset--*/
void iwl_bg_monitor_recover ( unsigned long data ) ; 
/*--iwl_bg_monitor_recover--*/
int iwl_pci_suspend ( struct pci_dev * pdev , pm_message_t state ) ; 
/*--iwl_pci_suspend--*/
int iwl_pci_resume ( struct pci_dev * pdev ) ; 
/*--iwl_pci_resume--*/
int iwlcore_eeprom_verify_signature ( struct iwl_priv * priv ) ; 
/*--iwlcore_eeprom_verify_signature--*/
int iwlcore_eeprom_acquire_semaphore ( struct iwl_priv * priv ) ; 
/*--iwlcore_eeprom_acquire_semaphore--*/
void iwlcore_eeprom_release_semaphore ( struct iwl_priv * priv ) ; 
/*--iwlcore_eeprom_release_semaphore--*/
const u8 * iwlcore_eeprom_query_addr ( const struct iwl_priv * priv , size_t offset ) ; 
/*--iwlcore_eeprom_query_addr--*/
int iwl_eeprom_init ( struct iwl_priv * priv ) ; 
/*--iwl_eeprom_init--*/
void iwl_eeprom_free ( struct iwl_priv * priv ) ; 
/*--iwl_eeprom_free--*/
int iwl_eeprom_check_version ( struct iwl_priv * priv ) ; 
/*--iwl_eeprom_check_version--*/
const u8 * iwl_eeprom_query_addr ( const struct iwl_priv * priv , size_t offset ) ; 
/*--iwl_eeprom_query_addr--*/
u16 iwl_eeprom_query16 ( const struct iwl_priv * priv , size_t offset ) ; 
/*--iwl_eeprom_query16--*/
void iwl_eeprom_get_mac ( const struct iwl_priv * priv , u8 * mac ) ; 
/*--iwl_eeprom_get_mac--*/
void iwlcore_eeprom_enhanced_txpower ( struct iwl_priv * priv ) ; 
/*--iwlcore_eeprom_enhanced_txpower--*/
int iwl_init_channel_map ( struct iwl_priv * priv ) ; 
/*--iwl_init_channel_map--*/
void iwl_free_channel_map ( struct iwl_priv * priv ) ; 
/*--iwl_free_channel_map--*/
const struct iwl_channel_info * iwl_get_channel_info ( const struct iwl_priv * priv , enum ieee80211_band band , u16 channel ) ; 
/*--iwl_get_channel_info--*/
const char * get_cmd_string ( u8 cmd ) ; 
/*--get_cmd_string--*/
int iwl_send_cmd_sync ( struct iwl_priv * priv , struct iwl_host_cmd * cmd ) ; 
/*--iwl_send_cmd_sync--*/
int iwl_send_cmd ( struct iwl_priv * priv , struct iwl_host_cmd * cmd ) ; 
/*--iwl_send_cmd--*/
int iwl_send_cmd_pdu ( struct iwl_priv * priv , u8 id , u16 len , const void * data ) ; 
/*--iwl_send_cmd_pdu--*/
int iwl_send_cmd_pdu_async ( struct iwl_priv * priv , u8 id , u16 len , const void * data , void ( * callback ) ( struct iwl_priv * priv , struct iwl_device_cmd * cmd , struct iwl_rx_packet * pkt ) ) ; 
/*--iwl_send_cmd_pdu_async--*/
int iwl_power_update_mode ( struct iwl_priv * priv , bool force ) ; 
/*--iwl_power_update_mode--*/
bool iwl_ht_enabled ( struct iwl_priv * priv ) ; 
/*--iwl_ht_enabled--*/
bool iwl_within_ct_kill_margin ( struct iwl_priv * priv ) ; 
/*--iwl_within_ct_kill_margin--*/
enum iwl_antenna_ok iwl_tx_ant_restriction ( struct iwl_priv * priv ) ; 
/*--iwl_tx_ant_restriction--*/
enum iwl_antenna_ok iwl_rx_ant_restriction ( struct iwl_priv * priv ) ; 
/*--iwl_rx_ant_restriction--*/
void iwl_tt_enter_ct_kill ( struct iwl_priv * priv ) ; 
/*--iwl_tt_enter_ct_kill--*/
void iwl_tt_exit_ct_kill ( struct iwl_priv * priv ) ; 
/*--iwl_tt_exit_ct_kill--*/
void iwl_tt_handler ( struct iwl_priv * priv ) ; 
/*--iwl_tt_handler--*/
void iwl_tt_initialize ( struct iwl_priv * priv ) ; 
/*--iwl_tt_initialize--*/
void iwl_tt_exit ( struct iwl_priv * priv ) ; 
/*--iwl_tt_exit--*/
void iwl_power_initialize ( struct iwl_priv * priv ) ; 
/*--iwl_power_initialize--*/
int iwl_rx_queue_space ( const struct iwl_rx_queue * q ) ; 
/*--iwl_rx_queue_space--*/
void iwl_rx_queue_update_write_ptr ( struct iwl_priv * priv , struct iwl_rx_queue * q ) ; 
/*--iwl_rx_queue_update_write_ptr--*/
int iwl_rx_queue_alloc ( struct iwl_priv * priv ) ; 
/*--iwl_rx_queue_alloc--*/
void iwl_rx_missed_beacon_notif ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_rx_missed_beacon_notif--*/
void iwl_rx_spectrum_measure_notif ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_rx_spectrum_measure_notif--*/
bool iwl_good_plcp_health ( struct iwl_priv * priv , struct iwl_rx_packet * pkt ) ; 
/*--iwl_good_plcp_health--*/
void iwl_recover_from_statistics ( struct iwl_priv * priv , struct iwl_rx_packet * pkt ) ; 
/*--iwl_recover_from_statistics--*/
void iwl_rx_statistics ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_rx_statistics--*/
void iwl_reply_statistics ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_reply_statistics--*/
int iwl_set_decrypted_flag ( struct iwl_priv * priv , struct ieee80211_hdr * hdr , u32 decrypt_res , struct ieee80211_rx_status * stats ) ; 
/*--iwl_set_decrypted_flag--*/
void iwl_txq_update_write_ptr ( struct iwl_priv * priv , struct iwl_tx_queue * txq ) ; 
/*--iwl_txq_update_write_ptr--*/
void iwl_free_tfds_in_queue ( struct iwl_priv * priv , int sta_id , int tid , int freed ) ; 
/*--iwl_free_tfds_in_queue--*/
void iwl_tx_queue_free ( struct iwl_priv * priv , int txq_id ) ; 
/*--iwl_tx_queue_free--*/
void iwl_cmd_queue_free ( struct iwl_priv * priv ) ; 
/*--iwl_cmd_queue_free--*/
int iwl_queue_space ( const struct iwl_queue * q ) ; 
/*--iwl_queue_space--*/
int iwl_tx_queue_init ( struct iwl_priv * priv , struct iwl_tx_queue * txq , int slots_num , u32 txq_id ) ; 
/*--iwl_tx_queue_init--*/
void iwl_tx_queue_reset ( struct iwl_priv * priv , struct iwl_tx_queue * txq , int slots_num , u32 txq_id ) ; 
/*--iwl_tx_queue_reset--*/
int iwl_enqueue_hcmd ( struct iwl_priv * priv , struct iwl_host_cmd * cmd ) ; 
/*--iwl_enqueue_hcmd--*/
void iwl_tx_cmd_complete ( struct iwl_priv * priv , struct iwl_rx_mem_buffer * rxb ) ; 
/*--iwl_tx_cmd_complete--*/
int iwl_send_add_sta ( struct iwl_priv * priv , struct iwl_addsta_cmd * sta , u8 flags ) ; 
/*--iwl_send_add_sta--*/
int iwl_add_station_common ( struct iwl_priv * priv , const u8 * addr , bool is_ap , struct ieee80211_sta_ht_cap * ht_info , u8 * sta_id_r ) ; 
/*--iwl_add_station_common--*/
int iwl_add_bssid_station ( struct iwl_priv * priv , const u8 * addr , bool init_rs , u8 * sta_id_r ) ; 
/*--iwl_add_bssid_station--*/
int iwl_remove_station ( struct iwl_priv * priv , const u8 sta_id , const u8 * addr ) ; 
/*--iwl_remove_station--*/
void iwl_clear_ucode_stations ( struct iwl_priv * priv ) ; 
/*--iwl_clear_ucode_stations--*/
void iwl_restore_stations ( struct iwl_priv * priv ) ; 
/*--iwl_restore_stations--*/
int iwl_get_free_ucode_key_index ( struct iwl_priv * priv ) ; 
/*--iwl_get_free_ucode_key_index--*/
int iwl_restore_default_wep_keys ( struct iwl_priv * priv ) ; 
/*--iwl_restore_default_wep_keys--*/
int iwl_remove_default_wep_key ( struct iwl_priv * priv , struct ieee80211_key_conf * keyconf ) ; 
/*--iwl_remove_default_wep_key--*/
int iwl_set_default_wep_key ( struct iwl_priv * priv , struct ieee80211_key_conf * keyconf ) ; 
/*--iwl_set_default_wep_key--*/
void iwl_update_tkip_key ( struct iwl_priv * priv , struct ieee80211_key_conf * keyconf , struct ieee80211_sta * sta , u32 iv32 , u16 * phase1key ) ; 
/*--iwl_update_tkip_key--*/
int iwl_remove_dynamic_key ( struct iwl_priv * priv , struct ieee80211_key_conf * keyconf , u8 sta_id ) ; 
/*--iwl_remove_dynamic_key--*/
int iwl_set_dynamic_key ( struct iwl_priv * priv , struct ieee80211_key_conf * keyconf , u8 sta_id ) ; 
/*--iwl_set_dynamic_key--*/
int iwl_send_lq_cmd ( struct iwl_priv * priv , struct iwl_link_quality_cmd * lq , u8 flags , bool init ) ; 
/*--iwl_send_lq_cmd--*/
int iwl_alloc_bcast_station ( struct iwl_priv * priv , bool init_lq ) ; 
/*--iwl_alloc_bcast_station--*/
void iwl_dealloc_bcast_station ( struct iwl_priv * priv ) ; 
/*--iwl_dealloc_bcast_station--*/
void iwl_sta_tx_modify_enable_tid ( struct iwl_priv * priv , int sta_id , int tid ) ; 
/*--iwl_sta_tx_modify_enable_tid--*/
int iwl_sta_rx_agg_start ( struct iwl_priv * priv , struct ieee80211_sta * sta , int tid , u16 ssn ) ; 
/*--iwl_sta_rx_agg_start--*/
int iwl_sta_rx_agg_stop ( struct iwl_priv * priv , struct ieee80211_sta * sta , int tid ) ; 
/*--iwl_sta_rx_agg_stop--*/
void iwl_sta_modify_ps_wake ( struct iwl_priv * priv , int sta_id ) ; 
/*--iwl_sta_modify_ps_wake--*/
void iwl_sta_modify_sleep_tx_count ( struct iwl_priv * priv , int sta_id , int cnt ) ; 
/*--iwl_sta_modify_sleep_tx_count--*/
int iwl_mac_sta_remove ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , struct ieee80211_sta * sta ) ; 
/*--iwl_mac_sta_remove--*/
int iwl_send_calib_results ( struct iwl_priv * priv ) ; 
/*--iwl_send_calib_results--*/
int iwl_calib_set ( struct iwl_calib_result * res , const u8 * buf , int len ) ; 
/*--iwl_calib_set--*/
void iwl_calib_free_results ( struct iwl_priv * priv ) ; 
/*--iwl_calib_free_results--*/
void iwl_init_sensitivity ( struct iwl_priv * priv ) ; 
/*--iwl_init_sensitivity--*/
void iwl_sensitivity_calibration ( struct iwl_priv * priv , struct iwl_notif_statistics * resp ) ; 
/*--iwl_sensitivity_calibration--*/
void iwl_chain_noise_calibration ( struct iwl_priv * priv , struct iwl_notif_statistics * stat_resp ) ; 
/*--iwl_chain_noise_calibration--*/
void iwl_reset_run_time_calib ( struct iwl_priv * priv ) ; 
/*--iwl_reset_run_time_calib--*/
int iwl_scan_cancel ( struct iwl_priv * priv ) ; 
/*--iwl_scan_cancel--*/
int iwl_scan_cancel_timeout ( struct iwl_priv * priv , unsigned long ms ) ; 
/*--iwl_scan_cancel_timeout--*/
void iwl_setup_rx_scan_handlers ( struct iwl_priv * priv ) ; 
/*--iwl_setup_rx_scan_handlers--*/
u16 iwl_get_passive_dwell_time ( struct iwl_priv * priv , enum ieee80211_band band , struct ieee80211_vif * vif ) ; 
/*--iwl_get_passive_dwell_time--*/
void iwl_init_scan_params ( struct iwl_priv * priv ) ; 
/*--iwl_init_scan_params--*/
int iwl_mac_hw_scan ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , struct cfg80211_scan_request * req ) ; 
/*--iwl_mac_hw_scan--*/
void iwl_internal_short_hw_scan ( struct iwl_priv * priv ) ; 
/*--iwl_internal_short_hw_scan--*/
void iwl_bg_start_internal_scan ( struct work_struct * work ) ; 
/*--iwl_bg_start_internal_scan--*/
void iwl_bg_scan_check ( struct work_struct * data ) ; 
/*--iwl_bg_scan_check--*/
u16 iwl_fill_probe_req ( struct iwl_priv * priv , struct ieee80211_mgmt * frame , const u8 * ies , int ie_len , int left ) ; 
/*--iwl_fill_probe_req--*/
void iwl_bg_abort_scan ( struct work_struct * work ) ; 
/*--iwl_bg_abort_scan--*/
void iwl_bg_scan_completed ( struct work_struct * work ) ; 
/*--iwl_bg_scan_completed--*/
void iwl_setup_scan_deferred_work ( struct iwl_priv * priv ) ; 
/*--iwl_setup_scan_deferred_work--*/
int iwl_led_start ( struct iwl_priv * priv ) ; 
/*--iwl_led_start--*/
int iwl_led_associate ( struct iwl_priv * priv ) ; 
/*--iwl_led_associate--*/
int iwl_led_disassociate ( struct iwl_priv * priv ) ; 
/*--iwl_led_disassociate--*/
void iwl_leds_background ( struct iwl_priv * priv ) ; 
/*--iwl_leds_background--*/
void iwl_leds_init ( struct iwl_priv * priv ) ; 
/*--iwl_leds_init--*/
int iwm_mode_to_nl80211_iftype ( int mode ) ; 
/*--iwm_mode_to_nl80211_iftype--*/
int iwm_priv_init ( struct iwm_priv * iwm ) ; 
/*--iwm_priv_init--*/
void iwm_priv_deinit ( struct iwm_priv * iwm ) ; 
/*--iwm_priv_deinit--*/
void iwm_reset ( struct iwm_priv * iwm ) ; 
/*--iwm_reset--*/
void iwm_resetting ( struct iwm_priv * iwm ) ; 
/*--iwm_resetting--*/
int iwm_notif_send ( struct iwm_priv * iwm , struct iwm_wifi_cmd * cmd , u8 cmd_id , u8 source , u8 * buf , unsigned long buf_size ) ; 
/*--iwm_notif_send--*/
int iwm_notif_handle ( struct iwm_priv * iwm , u32 cmd , u8 source , long timeout ) ; 
/*--iwm_notif_handle--*/
void iwm_init_default_profile ( struct iwm_priv * iwm , struct iwm_umac_profile * profile ) ; 
/*--iwm_init_default_profile--*/
void iwm_link_on ( struct iwm_priv * iwm ) ; 
/*--iwm_link_on--*/
void iwm_link_off ( struct iwm_priv * iwm ) ; 
/*--iwm_link_off--*/
int iwm_up ( struct iwm_priv * iwm ) ; 
/*--iwm_up--*/
int iwm_down ( struct iwm_priv * iwm ) ; 
/*--iwm_down--*/
int iwm_tid_to_queue ( u16 tid ) ; 
/*--iwm_tid_to_queue--*/
void * iwm_if_alloc ( int sizeof_bus , struct device * dev , struct iwm_if_ops * if_ops ) ; 
/*--iwm_if_alloc--*/
void iwm_if_free ( struct iwm_priv * iwm ) ; 
/*--iwm_if_free--*/
int iwm_if_add ( struct iwm_priv * iwm ) ; 
/*--iwm_if_add--*/
void iwm_if_remove ( struct iwm_priv * iwm ) ; 
/*--iwm_if_remove--*/
void iwm_rx_free ( struct iwm_priv * iwm ) ; 
/*--iwm_rx_free--*/
int iwm_rx_handle_resp ( struct iwm_priv * iwm , u8 * buf , unsigned long buf_size , struct iwm_wifi_cmd * cmd ) ; 
/*--iwm_rx_handle_resp--*/
int iwm_rx_handle ( struct iwm_priv * iwm , u8 * buf , unsigned long buf_size ) ; 
/*--iwm_rx_handle--*/
void iwm_rx_setup_handlers ( struct iwm_priv * iwm ) ; 
/*--iwm_rx_setup_handlers--*/
void iwm_rx_worker ( struct work_struct * work ) ; 
/*--iwm_rx_worker--*/
void iwm_tx_credit_inc ( struct iwm_priv * iwm , int id , int total_freed_pages ) ; 
/*--iwm_tx_credit_inc--*/
int iwm_tx_credit_alloc ( struct iwm_priv * iwm , int id , int nb ) ; 
/*--iwm_tx_credit_alloc--*/
void iwm_tx_credit_init_pools ( struct iwm_priv * iwm , struct iwm_umac_notif_alive * alive ) ; 
/*--iwm_tx_credit_init_pools--*/
void iwm_tx_worker ( struct work_struct * work ) ; 
/*--iwm_tx_worker--*/
int iwm_xmit_frame ( struct sk_buff * skb , struct net_device * netdev ) ; 
/*--iwm_xmit_frame--*/
u16 iwm_alloc_wifi_cmd_seq ( struct iwm_priv * iwm ) ; 
/*--iwm_alloc_wifi_cmd_seq--*/
void iwm_cmd_flush ( struct iwm_priv * iwm ) ; 
/*--iwm_cmd_flush--*/
struct iwm_wifi_cmd * iwm_get_pending_wifi_cmd ( struct iwm_priv * iwm , u16 seq_num ) ; 
/*--iwm_get_pending_wifi_cmd--*/
struct iwm_nonwifi_cmd * iwm_get_pending_nonwifi_cmd ( struct iwm_priv * iwm , u8 seq_num , u8 cmd_opcode ) ; 
/*--iwm_get_pending_nonwifi_cmd--*/
void iwm_udma_wifi_hdr_set_eop ( struct iwm_priv * iwm , u8 * buf , u8 eop ) ; 
/*--iwm_udma_wifi_hdr_set_eop--*/
void iwm_build_udma_wifi_hdr ( struct iwm_priv * iwm , struct iwm_udma_out_wifi_hdr * hdr , struct iwm_udma_wifi_cmd * cmd ) ; 
/*--iwm_build_udma_wifi_hdr--*/
void iwm_build_umac_hdr ( struct iwm_priv * iwm , struct iwm_umac_fw_cmd_hdr * hdr , struct iwm_umac_cmd * cmd ) ; 
/*--iwm_build_umac_hdr--*/
int iwm_hal_send_target_cmd ( struct iwm_priv * iwm , struct iwm_udma_nonwifi_cmd * udma_cmd , const void * payload ) ; 
/*--iwm_hal_send_target_cmd--*/
int iwm_hal_send_host_cmd ( struct iwm_priv * iwm , struct iwm_udma_wifi_cmd * udma_cmd , struct iwm_umac_cmd * umac_cmd , struct iwm_lmac_cmd * lmac_cmd , const void * payload , u16 payload_size ) ; 
/*--iwm_hal_send_host_cmd--*/
int iwm_hal_send_umac_cmd ( struct iwm_priv * iwm , struct iwm_udma_wifi_cmd * udma_cmd , struct iwm_umac_cmd * umac_cmd , const void * payload , u16 payload_size ) ; 
/*--iwm_hal_send_umac_cmd--*/
int iwm_load_fw ( struct iwm_priv * iwm ) ; 
/*--iwm_load_fw--*/
int iwm_send_wifi_if_cmd ( struct iwm_priv * iwm , void * payload , u16 payload_size , bool resp ) ; 
/*--iwm_send_wifi_if_cmd--*/
int iwm_send_prio_table ( struct iwm_priv * iwm ) ; 
/*--iwm_send_prio_table--*/
int iwm_send_init_calib_cfg ( struct iwm_priv * iwm , u8 calib_requested ) ; 
/*--iwm_send_init_calib_cfg--*/
int iwm_send_periodic_calib_cfg ( struct iwm_priv * iwm , u8 calib_requested ) ; 
/*--iwm_send_periodic_calib_cfg--*/
int iwm_store_rxiq_calib_result ( struct iwm_priv * iwm ) ; 
/*--iwm_store_rxiq_calib_result--*/
int iwm_send_calib_results ( struct iwm_priv * iwm ) ; 
/*--iwm_send_calib_results--*/
int iwm_send_ct_kill_cfg ( struct iwm_priv * iwm , u8 entry , u8 exit ) ; 
/*--iwm_send_ct_kill_cfg--*/
int iwm_send_umac_reset ( struct iwm_priv * iwm , __le32 reset_flags , bool resp ) ; 
/*--iwm_send_umac_reset--*/
int iwm_umac_set_config_fix ( struct iwm_priv * iwm , u16 tbl , u16 key , u32 value ) ; 
/*--iwm_umac_set_config_fix--*/
int iwm_umac_set_config_var ( struct iwm_priv * iwm , u16 key , void * payload , u16 payload_size ) ; 
/*--iwm_umac_set_config_var--*/
int iwm_send_umac_config ( struct iwm_priv * iwm , __le32 reset_flags ) ; 
/*--iwm_send_umac_config--*/
int iwm_send_packet ( struct iwm_priv * iwm , struct sk_buff * skb , int pool_id ) ; 
/*--iwm_send_packet--*/
int iwm_read_mac ( struct iwm_priv * iwm , u8 * mac ) ; 
/*--iwm_read_mac--*/
int iwm_set_tx_key ( struct iwm_priv * iwm , u8 key_idx ) ; 
/*--iwm_set_tx_key--*/
int iwm_set_key ( struct iwm_priv * iwm , bool remove , struct iwm_key * key ) ; 
/*--iwm_set_key--*/
int iwm_send_mlme_profile ( struct iwm_priv * iwm ) ; 
/*--iwm_send_mlme_profile--*/
int __iwm_invalidate_mlme_profile ( struct iwm_priv * iwm ) ; 
/*--__iwm_invalidate_mlme_profile--*/
int iwm_invalidate_mlme_profile ( struct iwm_priv * iwm ) ; 
/*--iwm_invalidate_mlme_profile--*/
int iwm_tx_power_trigger ( struct iwm_priv * iwm ) ; 
/*--iwm_tx_power_trigger--*/
int iwm_send_umac_stats_req ( struct iwm_priv * iwm , u32 flags ) ; 
/*--iwm_send_umac_stats_req--*/
int iwm_send_umac_channel_list ( struct iwm_priv * iwm ) ; 
/*--iwm_send_umac_channel_list--*/
int iwm_scan_ssids ( struct iwm_priv * iwm , struct cfg80211_ssid * ssids , int ssid_num ) ; 
/*--iwm_scan_ssids--*/
int iwm_scan_one_ssid ( struct iwm_priv * iwm , u8 * ssid , int ssid_len ) ; 
/*--iwm_scan_one_ssid--*/
int iwm_target_reset ( struct iwm_priv * iwm ) ; 
/*--iwm_target_reset--*/
int iwm_send_umac_stop_resume_tx ( struct iwm_priv * iwm , struct iwm_umac_notif_stop_resume_tx * ntf ) ; 
/*--iwm_send_umac_stop_resume_tx--*/
int iwm_send_pmkid_update ( struct iwm_priv * iwm , struct cfg80211_pmksa * pmksa , u32 command ) ; 
/*--iwm_send_pmkid_update--*/
int iwm_cfg80211_inform_bss ( struct iwm_priv * iwm ) ; 
/*--iwm_cfg80211_inform_bss--*/
struct wireless_dev * iwm_wdev_alloc ( int sizeof_bus , struct device * dev ) ; 
/*--iwm_wdev_alloc--*/
void iwm_wdev_free ( struct iwm_priv * iwm ) ; 
/*--iwm_wdev_free--*/
u8 * iwm_eeprom_access ( struct iwm_priv * iwm , u8 eeprom_id ) ; 
/*--iwm_eeprom_access--*/
int iwm_eeprom_fat_channels ( struct iwm_priv * iwm ) ; 
/*--iwm_eeprom_fat_channels--*/
u32 iwm_eeprom_wireless_mode ( struct iwm_priv * iwm ) ; 
/*--iwm_eeprom_wireless_mode--*/
int iwm_eeprom_init ( struct iwm_priv * iwm ) ; 
/*--iwm_eeprom_init--*/
void iwm_eeprom_exit ( struct iwm_priv * iwm ) ; 
/*--iwm_eeprom_exit--*/
int lbs_cmd_802_11_set_wep ( struct lbs_private * priv , uint16_t cmd_action , struct assoc_request * assoc ) ; 
/*--lbs_cmd_802_11_set_wep--*/
int lbs_cmd_802_11_enable_rsn ( struct lbs_private * priv , uint16_t cmd_action , uint16_t * enable ) ; 
/*--lbs_cmd_802_11_enable_rsn--*/
int lbs_cmd_802_11_key_material ( struct lbs_private * priv , uint16_t cmd_action , struct assoc_request * assoc ) ; 
/*--lbs_cmd_802_11_key_material--*/
int lbs_cmd_802_11_rate_adapt_rateset ( struct lbs_private * priv , uint16_t cmd_action ) ; 
/*--lbs_cmd_802_11_rate_adapt_rateset--*/
int lbs_set_data_rate ( struct lbs_private * priv , u8 rate ) ; 
/*--lbs_set_data_rate--*/
int lbs_cmd_802_11_rssi ( struct lbs_private * priv , struct cmd_ds_command * cmd ) ; 
/*--lbs_cmd_802_11_rssi--*/
int lbs_ret_802_11_rssi ( struct lbs_private * priv , struct cmd_ds_command * resp ) ; 
/*--lbs_ret_802_11_rssi--*/
int lbs_cmd_bcn_ctrl ( struct lbs_private * priv , struct cmd_ds_command * cmd , u16 cmd_action ) ; 
/*--lbs_cmd_bcn_ctrl--*/
int lbs_ret_802_11_bcn_ctrl ( struct lbs_private * priv , struct cmd_ds_command * resp ) ; 
/*--lbs_ret_802_11_bcn_ctrl--*/
int lbs_adhoc_stop ( struct lbs_private * priv ) ; 
/*--lbs_adhoc_stop--*/
void lbs_association_worker ( struct work_struct * work ) ; 
/*--lbs_association_worker--*/
struct assoc_request * lbs_get_association_request ( struct lbs_private * priv ) ; 
/*--lbs_get_association_request--*/
int lbs_cmd_80211_deauthenticate ( struct lbs_private * priv , u8 bssid [ 6 ] , u16 reason ) ; 
/*--lbs_cmd_80211_deauthenticate--*/
struct wireless_dev * lbs_cfg_alloc ( struct device * dev ) ; 
/*--lbs_cfg_alloc--*/
int lbs_cfg_register ( struct lbs_private * priv ) ; 
/*--lbs_cfg_register--*/
void lbs_cfg_free ( struct lbs_private * priv ) ; 
/*--lbs_cfg_free--*/
int lbs_cmd_copyback ( struct lbs_private * priv , unsigned long extra , struct cmd_header * resp ) ; 
/*--lbs_cmd_copyback--*/
int lbs_update_hw_spec ( struct lbs_private * priv ) ; 
/*--lbs_update_hw_spec--*/
int lbs_host_sleep_cfg ( struct lbs_private * priv , uint32_t criteria , struct wol_config * p_wol_config ) ; 
/*--lbs_host_sleep_cfg--*/
int lbs_cmd_802_11_sleep_params ( struct lbs_private * priv , uint16_t cmd_action , struct sleep_params * sp ) ; 
/*--lbs_cmd_802_11_sleep_params--*/
int lbs_set_deep_sleep ( struct lbs_private * priv , int deep_sleep ) ; 
/*--lbs_set_deep_sleep--*/
int lbs_set_snmp_mib ( struct lbs_private * priv , u32 oid , u16 val ) ; 
/*--lbs_set_snmp_mib--*/
int lbs_get_snmp_mib ( struct lbs_private * priv , u32 oid , u16 * out_val ) ; 
/*--lbs_get_snmp_mib--*/
int lbs_get_tx_power ( struct lbs_private * priv , s16 * curlevel , s16 * minlevel , s16 * maxlevel ) ; 
/*--lbs_get_tx_power--*/
int lbs_set_tx_power ( struct lbs_private * priv , s16 dbm ) ; 
/*--lbs_set_tx_power--*/
int lbs_update_channel ( struct lbs_private * priv ) ; 
/*--lbs_update_channel--*/
int lbs_set_channel ( struct lbs_private * priv , u8 channel ) ; 
/*--lbs_set_channel--*/
void lbs_complete_command ( struct lbs_private * priv , struct cmd_ctrl_node * cmd , int result ) ; 
/*--lbs_complete_command--*/
int lbs_set_radio ( struct lbs_private * priv , u8 preamble , u8 radio_on ) ; 
/*--lbs_set_radio--*/
void lbs_set_mac_control ( struct lbs_private * priv ) ; 
/*--lbs_set_mac_control--*/
int lbs_prepare_and_send_command ( struct lbs_private * priv , u16 cmd_no , u16 cmd_action , u16 wait_option , u32 cmd_oid , void * pdata_buf ) ; 
/*--lbs_prepare_and_send_command--*/
int lbs_allocate_cmd_buffer ( struct lbs_private * priv ) ; 
/*--lbs_allocate_cmd_buffer--*/
int lbs_free_cmd_buffer ( struct lbs_private * priv ) ; 
/*--lbs_free_cmd_buffer--*/
int lbs_execute_next_command ( struct lbs_private * priv ) ; 
/*--lbs_execute_next_command--*/
void lbs_ps_sleep ( struct lbs_private * priv , int wait_option ) ; 
/*--lbs_ps_sleep--*/
void lbs_ps_wakeup ( struct lbs_private * priv , int wait_option ) ; 
/*--lbs_ps_wakeup--*/
void lbs_ps_confirm_sleep ( struct lbs_private * priv ) ; 
/*--lbs_ps_confirm_sleep--*/
int lbs_set_tpc_cfg ( struct lbs_private * priv , int enable , int8_t p0 , int8_t p1 , int8_t p2 , int usesnr ) ; 
/*--lbs_set_tpc_cfg--*/
int lbs_set_power_adapt_cfg ( struct lbs_private * priv , int enable , int8_t p0 , int8_t p1 , int8_t p2 ) ; 
/*--lbs_set_power_adapt_cfg--*/
struct cmd_ctrl_node * __lbs_cmd_async ( struct lbs_private * priv , uint16_t command , struct cmd_header * in_cmd , int in_cmd_size , int ( * callback ) ( struct lbs_private * , unsigned long , struct cmd_header * ) , unsigned long callback_arg ) ; 
/*--__lbs_cmd_async--*/
void lbs_cmd_async ( struct lbs_private * priv , uint16_t command , struct cmd_header * in_cmd , int in_cmd_size ) ; 
/*--lbs_cmd_async--*/
int __lbs_cmd ( struct lbs_private * priv , uint16_t command , struct cmd_header * in_cmd , int in_cmd_size , int ( * callback ) ( struct lbs_private * , unsigned long , struct cmd_header * ) , unsigned long callback_arg ) ; 
/*--__lbs_cmd--*/
void lbs_mac_event_disconnected ( struct lbs_private * priv ) ; 
/*--lbs_mac_event_disconnected--*/
int lbs_process_command_response ( struct lbs_private * priv , u8 * data , u32 len ) ; 
/*--lbs_process_command_response--*/
int lbs_process_event ( struct lbs_private * priv , u32 event ) ; 
/*--lbs_process_event--*/
void lbs_debugfs_init ( void ) ; 
/*--lbs_debugfs_init--*/
void lbs_debugfs_remove ( void ) ; 
/*--lbs_debugfs_remove--*/
void lbs_debugfs_init_one ( struct lbs_private * priv , struct net_device * dev ) ; 
/*--lbs_debugfs_init_one--*/
void lbs_debugfs_remove_one ( struct lbs_private * priv ) ; 
/*--lbs_debugfs_remove_one--*/
u32 lbs_fw_index_to_data_rate ( u8 idx ) ; 
/*--lbs_fw_index_to_data_rate--*/
u8 lbs_data_rate_to_fw_index ( u32 rate ) ; 
/*--lbs_data_rate_to_fw_index--*/
void lbs_host_to_card_done ( struct lbs_private * priv ) ; 
/*--lbs_host_to_card_done--*/
int lbs_set_mac_address ( struct net_device * dev , void * addr ) ; 
/*--lbs_set_mac_address--*/
void lbs_set_multicast_list ( struct net_device * dev ) ; 
/*--lbs_set_multicast_list--*/
int lbs_suspend ( struct lbs_private * priv ) ; 
/*--lbs_suspend--*/
void lbs_resume ( struct lbs_private * priv ) ; 
/*--lbs_resume--*/
int lbs_enter_auto_deep_sleep ( struct lbs_private * priv ) ; 
/*--lbs_enter_auto_deep_sleep--*/
int lbs_exit_auto_deep_sleep ( struct lbs_private * priv ) ; 
/*--lbs_exit_auto_deep_sleep--*/
struct lbs_private * lbs_add_card ( void * card , struct device * dmdev ) ; 
/*--lbs_add_card--*/
void lbs_remove_card ( struct lbs_private * priv ) ; 
/*--lbs_remove_card--*/
int lbs_start_card ( struct lbs_private * priv ) ; 
/*--lbs_start_card--*/
void lbs_stop_card ( struct lbs_private * priv ) ; 
/*--lbs_stop_card--*/
void lbs_queue_event ( struct lbs_private * priv , u32 event ) ; 
/*--lbs_queue_event--*/
void lbs_notify_command_response ( struct lbs_private * priv , u8 resp_idx ) ; 
/*--lbs_notify_command_response--*/
int lbs_process_rxed_packet ( struct lbs_private * priv , struct sk_buff * skb ) ; 
/*--lbs_process_rxed_packet--*/
int lbs_ssid_cmp ( uint8_t * ssid1 , uint8_t ssid1_len , uint8_t * ssid2 , uint8_t ssid2_len ) ; 
/*--lbs_ssid_cmp--*/
int lbs_set_regiontable ( struct lbs_private * priv , u8 region , u8 band ) ; 
/*--lbs_set_regiontable--*/
int lbs_scan_networks ( struct lbs_private * priv , int full_scan ) ; 
/*--lbs_scan_networks--*/
void lbs_scan_worker ( struct work_struct * work ) ; 
/*--lbs_scan_worker--*/
int lbs_send_specific_ssid_scan ( struct lbs_private * priv , uint8_t * ssid , uint8_t ssid_len ) ; 
/*--lbs_send_specific_ssid_scan--*/
int lbs_set_scan ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--lbs_set_scan--*/
int lbs_get_scan ( struct net_device * dev , struct iw_request_info * info , struct iw_point * dwrq , char * extra ) ; 
/*--lbs_get_scan--*/
netdev_tx_t lbs_hard_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--lbs_hard_start_xmit--*/
void lbs_send_tx_feedback ( struct lbs_private * priv , u32 try_count ) ; 
/*--lbs_send_tx_feedback--*/
void lbs_send_disconnect_notification ( struct lbs_private * priv ) ; 
/*--lbs_send_disconnect_notification--*/
void lbs_send_mic_failureevent ( struct lbs_private * priv , u32 event ) ; 
/*--lbs_send_mic_failureevent--*/
struct chan_freq_power * lbs_find_cfp_by_band_and_channel ( struct lbs_private * priv , u8 band , u16 channel ) ; 
/*--lbs_find_cfp_by_band_and_channel--*/
int lbtf_rx ( struct lbtf_private * priv , struct sk_buff * skb ) ; 
/*--lbtf_rx--*/
struct lbtf_private * lbtf_add_card ( void * card , struct device * dmdev ) ; 
/*--lbtf_add_card--*/
int lbtf_remove_card ( struct lbtf_private * priv ) ; 
/*--lbtf_remove_card--*/
void lbtf_send_tx_feedback ( struct lbtf_private * priv , u8 retrycnt , u8 fail ) ; 
/*--lbtf_send_tx_feedback--*/
void lbtf_bcn_sent ( struct lbtf_private * priv ) ; 
/*--lbtf_bcn_sent--*/
int lbtf_cmd_copyback ( struct lbtf_private * priv , unsigned long extra , struct cmd_header * resp ) ; 
/*--lbtf_cmd_copyback--*/
int lbtf_update_hw_spec ( struct lbtf_private * priv ) ; 
/*--lbtf_update_hw_spec--*/
int lbtf_set_channel ( struct lbtf_private * priv , u8 channel ) ; 
/*--lbtf_set_channel--*/
int lbtf_beacon_set ( struct lbtf_private * priv , struct sk_buff * beacon ) ; 
/*--lbtf_beacon_set--*/
int lbtf_beacon_ctrl ( struct lbtf_private * priv , bool beacon_enable , int beacon_int ) ; 
/*--lbtf_beacon_ctrl--*/
void lbtf_complete_command ( struct lbtf_private * priv , struct cmd_ctrl_node * cmd , int result ) ; 
/*--lbtf_complete_command--*/
int lbtf_cmd_set_mac_multicast_addr ( struct lbtf_private * priv ) ; 
/*--lbtf_cmd_set_mac_multicast_addr--*/
void lbtf_set_mode ( struct lbtf_private * priv , enum lbtf_mode mode ) ; 
/*--lbtf_set_mode--*/
void lbtf_set_bssid ( struct lbtf_private * priv , bool activate , const u8 * bssid ) ; 
/*--lbtf_set_bssid--*/
int lbtf_set_mac_address ( struct lbtf_private * priv , uint8_t * mac_addr ) ; 
/*--lbtf_set_mac_address--*/
int lbtf_set_radio_control ( struct lbtf_private * priv ) ; 
/*--lbtf_set_radio_control--*/
void lbtf_set_mac_control ( struct lbtf_private * priv ) ; 
/*--lbtf_set_mac_control--*/
int lbtf_allocate_cmd_buffer ( struct lbtf_private * priv ) ; 
/*--lbtf_allocate_cmd_buffer--*/
int lbtf_free_cmd_buffer ( struct lbtf_private * priv ) ; 
/*--lbtf_free_cmd_buffer--*/
int lbtf_execute_next_command ( struct lbtf_private * priv ) ; 
/*--lbtf_execute_next_command--*/
void lbtf_cmd_async ( struct lbtf_private * priv , uint16_t command , struct cmd_header * in_cmd , int in_cmd_size ) ; 
/*--lbtf_cmd_async--*/
int __lbtf_cmd ( struct lbtf_private * priv , uint16_t command , struct cmd_header * in_cmd , int in_cmd_size , int ( * callback ) ( struct lbtf_private * , unsigned long , struct cmd_header * ) , unsigned long callback_arg ) ; 
/*--__lbtf_cmd--*/
void lbtf_cmd_response_rx ( struct lbtf_private * priv ) ; 
/*--lbtf_cmd_response_rx--*/
int lbtf_process_rx_command ( struct lbtf_private * priv ) ; 
/*--lbtf_process_rx_command--*/
void set_port_type ( struct orinoco_private * priv ) ; 
/*--set_port_type--*/
int orinoco_open ( struct net_device * dev ) ; 
/*--orinoco_open--*/
int orinoco_stop ( struct net_device * dev ) ; 
/*--orinoco_stop--*/
struct net_device_stats * orinoco_get_stats ( struct net_device * dev ) ; 
/*--orinoco_get_stats--*/
void orinoco_set_multicast_list ( struct net_device * dev ) ; 
/*--orinoco_set_multicast_list--*/
int orinoco_change_mtu ( struct net_device * dev , int new_mtu ) ; 
/*--orinoco_change_mtu--*/
int orinoco_process_xmit_skb ( struct sk_buff * skb , struct net_device * dev , struct orinoco_private * priv , int * tx_control , u8 * mic_buf ) ; 
/*--orinoco_process_xmit_skb--*/
void orinoco_tx_timeout ( struct net_device * dev ) ; 
/*--orinoco_tx_timeout--*/
void __orinoco_ev_rx ( struct net_device * dev , hermes_t * hw ) ; 
/*--__orinoco_ev_rx--*/
void __orinoco_ev_info ( struct net_device * dev , hermes_t * hw ) ; 
/*--__orinoco_ev_info--*/
void orinoco_reset ( struct work_struct * work ) ; 
/*--orinoco_reset--*/
int orinoco_commit ( struct orinoco_private * priv ) ; 
/*--orinoco_commit--*/
irqreturn_t orinoco_interrupt ( int irq , void * dev_id ) ; 
/*--orinoco_interrupt--*/
int orinoco_init ( struct orinoco_private * priv ) ; 
/*--orinoco_init--*/
struct orinoco_private * alloc_orinocodev ( int sizeof_card , struct device * device , int ( * hard_reset ) ( struct orinoco_private * ) , int ( * stop_fw ) ( struct orinoco_private * , int ) ) ; 
/*--alloc_orinocodev--*/
int orinoco_if_add ( struct orinoco_private * priv , unsigned long base_addr , unsigned int irq , const struct net_device_ops * ops ) ; 
/*--orinoco_if_add--*/
void orinoco_if_del ( struct orinoco_private * priv ) ; 
/*--orinoco_if_del--*/
void free_orinocodev ( struct orinoco_private * priv ) ; 
/*--free_orinocodev--*/
int orinoco_up ( struct orinoco_private * priv ) ; 
/*--orinoco_up--*/
void orinoco_down ( struct orinoco_private * priv ) ; 
/*--orinoco_down--*/
int orinoco_download ( struct orinoco_private * priv ) ; 
/*--orinoco_download--*/
void orinoco_cache_fw ( struct orinoco_private * priv , int ap ) ; 
/*--orinoco_cache_fw--*/
void orinoco_uncache_fw ( struct orinoco_private * priv ) ; 
/*--orinoco_uncache_fw--*/
int determine_fw_capabilities ( struct orinoco_private * priv , char * fw_name , size_t fw_name_len , u32 * hw_ver ) ; 
/*--determine_fw_capabilities--*/
int orinoco_hw_read_card_settings ( struct orinoco_private * priv , u8 * dev_addr ) ; 
/*--orinoco_hw_read_card_settings--*/
int orinoco_hw_allocate_fid ( struct orinoco_private * priv ) ; 
/*--orinoco_hw_allocate_fid--*/
int orinoco_get_bitratemode ( int bitrate , int automatic ) ; 
/*--orinoco_get_bitratemode--*/
void orinoco_get_ratemode_cfg ( int ratemode , int * bitrate , int * automatic ) ; 
/*--orinoco_get_ratemode_cfg--*/
int orinoco_hw_program_rids ( struct orinoco_private * priv ) ; 
/*--orinoco_hw_program_rids--*/
int orinoco_hw_get_tkip_iv ( struct orinoco_private * priv , int key , u8 * tsc ) ; 
/*--orinoco_hw_get_tkip_iv--*/
int __orinoco_hw_set_bitrate ( struct orinoco_private * priv ) ; 
/*--__orinoco_hw_set_bitrate--*/
int orinoco_hw_get_act_bitrate ( struct orinoco_private * priv , int * bitrate ) ; 
/*--orinoco_hw_get_act_bitrate--*/
int __orinoco_hw_set_wap ( struct orinoco_private * priv ) ; 
/*--__orinoco_hw_set_wap--*/
int __orinoco_hw_setup_wepkeys ( struct orinoco_private * priv ) ; 
/*--__orinoco_hw_setup_wepkeys--*/
int __orinoco_hw_setup_enc ( struct orinoco_private * priv ) ; 
/*--__orinoco_hw_setup_enc--*/
int __orinoco_hw_set_tkip_key ( struct orinoco_private * priv , int key_idx , int set_tx , u8 * key , u8 * rsc , size_t rsc_len , u8 * tsc , size_t tsc_len ) ; 
/*--__orinoco_hw_set_tkip_key--*/
int orinoco_clear_tkip_key ( struct orinoco_private * priv , int key_idx ) ; 
/*--orinoco_clear_tkip_key--*/
int __orinoco_hw_set_multicast_list ( struct orinoco_private * priv , struct net_device * dev , int mc_count , int promisc ) ; 
/*--__orinoco_hw_set_multicast_list--*/
int orinoco_hw_get_essid ( struct orinoco_private * priv , int * active , char buf [ 32 + 1 ] ) ; 
/*--orinoco_hw_get_essid--*/
int orinoco_hw_get_freq ( struct orinoco_private * priv ) ; 
/*--orinoco_hw_get_freq--*/
int orinoco_hw_get_bitratelist ( struct orinoco_private * priv , int * numrates , s32 * rates , int max ) ; 
/*--orinoco_hw_get_bitratelist--*/
int orinoco_hw_trigger_scan ( struct orinoco_private * priv , const struct cfg80211_ssid * ssid ) ; 
/*--orinoco_hw_trigger_scan--*/
int orinoco_hw_disassociate ( struct orinoco_private * priv , u8 * addr , u16 reason_code ) ; 
/*--orinoco_hw_disassociate--*/
int orinoco_hw_get_current_bssid ( struct orinoco_private * priv , u8 * addr ) ; 
/*--orinoco_hw_get_current_bssid--*/
int orinoco_mic_init ( struct orinoco_private * priv ) ; 
/*--orinoco_mic_init--*/
void orinoco_mic_free ( struct orinoco_private * priv ) ; 
/*--orinoco_mic_free--*/
int orinoco_mic ( struct crypto_hash * tfm_michael , u8 * key , u8 * da , u8 * sa , u8 priority , u8 * data , size_t data_len , u8 * mic ) ; 
/*--orinoco_mic--*/
void orinoco_add_extscan_result ( struct orinoco_private * priv , struct agere_ext_scan_info * bss , size_t len ) ; 
/*--orinoco_add_extscan_result--*/
void orinoco_add_hostscan_results ( struct orinoco_private * priv , unsigned char * buf , size_t len ) ; 
/*--orinoco_add_hostscan_results--*/
int hermes_apply_pda ( hermes_t * hw , const char * first_pdr , const void * pdr_end , const __le16 * pda , const void * pda_end ) ; 
/*--hermes_apply_pda--*/
size_t hermes_blocks_length ( const char * first_block , const void * end ) ; 
/*--hermes_blocks_length--*/
int hermes_program ( hermes_t * hw , const char * first_block , const void * end ) ; 
/*--hermes_program--*/
int hermes_apply_pda_with_defaults ( hermes_t * hw , const char * first_pdr , const void * pdr_end , const __le16 * pda , const void * pda_end ) ; 
/*--hermes_apply_pda_with_defaults--*/
void hermes_struct_init ( hermes_t * hw , void * address , int reg_spacing ) ; 
/*--hermes_struct_init--*/
void orinoco_wiphy_init ( struct wiphy * wiphy ) ; 
/*--orinoco_wiphy_init--*/
int orinoco_wiphy_register ( struct wiphy * wiphy ) ; 
/*--orinoco_wiphy_register--*/
int p54_parse_eeprom ( struct ieee80211_hw * dev , void * eeprom , int len ) ; 
/*--p54_parse_eeprom--*/
int p54_read_eeprom ( struct ieee80211_hw * dev ) ; 
/*--p54_read_eeprom--*/
int p54_parse_firmware ( struct ieee80211_hw * dev , const struct firmware * fw ) ; 
/*--p54_parse_firmware--*/
int p54_download_eeprom ( struct p54_common * priv , void * buf , u16 offset , u16 len ) ; 
/*--p54_download_eeprom--*/
int p54_update_beacon_tim ( struct p54_common * priv , u16 aid , bool set ) ; 
/*--p54_update_beacon_tim--*/
int p54_sta_unlock ( struct p54_common * priv , u8 * addr ) ; 
/*--p54_sta_unlock--*/
int p54_tx_cancel ( struct p54_common * priv , __le32 req_id ) ; 
/*--p54_tx_cancel--*/
int p54_setup_mac ( struct p54_common * priv ) ; 
/*--p54_setup_mac--*/
int p54_scan ( struct p54_common * priv , u16 mode , u16 dwell ) ; 
/*--p54_scan--*/
int p54_set_leds ( struct p54_common * priv ) ; 
/*--p54_set_leds--*/
int p54_set_edcf ( struct p54_common * priv ) ; 
/*--p54_set_edcf--*/
int p54_set_ps ( struct p54_common * priv ) ; 
/*--p54_set_ps--*/
int p54_init_xbow_synth ( struct p54_common * priv ) ; 
/*--p54_init_xbow_synth--*/
int p54_upload_key ( struct p54_common * priv , u8 algo , int slot , u8 idx , u8 len , u8 * addr , u8 * key ) ; 
/*--p54_upload_key--*/
int p54_fetch_statistics ( struct p54_common * priv ) ; 
/*--p54_fetch_statistics--*/
void p54_free_skb ( struct ieee80211_hw * dev , struct sk_buff * skb ) ; 
/*--p54_free_skb--*/
void p54_tx ( struct p54_common * priv , struct sk_buff * skb ) ; 
/*--p54_tx--*/
int p54_rx ( struct ieee80211_hw * dev , struct sk_buff * skb ) ; 
/*--p54_rx--*/
int p54_tx_80211 ( struct ieee80211_hw * dev , struct sk_buff * skb ) ; 
/*--p54_tx_80211--*/
u8 * p54_find_ie ( struct sk_buff * skb , u8 ie ) ; 
/*--p54_find_ie--*/
struct ieee80211_hw * p54_init_common ( size_t priv_data_len ) ; 
/*--p54_init_common--*/
int p54_register_common ( struct ieee80211_hw * dev , struct device * pdev ) ; 
/*--p54_register_common--*/
void p54_free_common ( struct ieee80211_hw * dev ) ; 
/*--p54_free_common--*/
void p54_unregister_common ( struct ieee80211_hw * dev ) ; 
/*--p54_unregister_common--*/
int p54_init_leds ( struct p54_common * priv ) ; 
/*--p54_init_leds--*/
void p54_unregister_leds ( struct p54_common * priv ) ; 
/*--p54_unregister_leds--*/
void islpci_eth_cleanup_transmit ( islpci_private * priv , isl38xx_control_block * control_block ) ; 
/*--islpci_eth_cleanup_transmit--*/
netdev_tx_t islpci_eth_transmit ( struct sk_buff * skb , struct net_device * ndev ) ; 
/*--islpci_eth_transmit--*/
int islpci_eth_receive ( islpci_private * priv ) ; 
/*--islpci_eth_receive--*/
void islpci_do_reset_and_wake ( struct work_struct * work ) ; 
/*--islpci_do_reset_and_wake--*/
void islpci_eth_tx_timeout ( struct net_device * ndev ) ; 
/*--islpci_eth_tx_timeout--*/
int islpci_mgmt_rx_fill ( struct net_device * ndev ) ; 
/*--islpci_mgmt_rx_fill--*/
int islpci_mgt_receive ( struct net_device * ndev ) ; 
/*--islpci_mgt_receive--*/
void islpci_mgt_cleanup_transmit ( struct net_device * ndev ) ; 
/*--islpci_mgt_cleanup_transmit--*/
int islpci_mgt_transaction ( struct net_device * ndev , int operation , unsigned long oid , void * senddata , int sendlen , struct islpci_mgmtframe * * recvframe ) ; 
/*--islpci_mgt_transaction--*/
void isl38xx_disable_interrupts ( void * device ) ; 
/*--isl38xx_disable_interrupts--*/
void isl38xx_handle_sleep_request ( isl38xx_control_block * control_block , int * powerstate , void * device_base ) ; 
/*--isl38xx_handle_sleep_request--*/
void isl38xx_handle_wakeup ( isl38xx_control_block * control_block , int * powerstate , void * device_base ) ; 
/*--isl38xx_handle_wakeup--*/
void isl38xx_trigger_device ( int asleep , void * device_base ) ; 
/*--isl38xx_trigger_device--*/
void isl38xx_interface_reset ( void * device_base , dma_addr_t host_address ) ; 
/*--isl38xx_interface_reset--*/
void isl38xx_enable_common_interrupts ( void * device_base ) ; 
/*--isl38xx_enable_common_interrupts--*/
int isl38xx_in_queue ( isl38xx_control_block * cb , int queue ) ; 
/*--isl38xx_in_queue--*/
void prism54_mib_init ( islpci_private * priv ) ; 
/*--prism54_mib_init--*/
void prism54_update_stats ( struct work_struct * work ) ; 
/*--prism54_update_stats--*/
struct iw_statistics * prism54_get_wireless_stats ( struct net_device * ndev ) ; 
/*--prism54_get_wireless_stats--*/
void prism54_acl_init ( struct islpci_acl * acl ) ; 
/*--prism54_acl_init--*/
void prism54_acl_clean ( struct islpci_acl * acl ) ; 
/*--prism54_acl_clean--*/
void prism54_wpa_bss_ie_init ( islpci_private * priv ) ; 
/*--prism54_wpa_bss_ie_init--*/
void prism54_wpa_bss_ie_clean ( islpci_private * priv ) ; 
/*--prism54_wpa_bss_ie_clean--*/
void prism54_process_trap ( struct work_struct * work ) ; 
/*--prism54_process_trap--*/
int prism54_set_mac_address ( struct net_device * ndev , void * addr ) ; 
/*--prism54_set_mac_address--*/
int prism54_ioctl ( struct net_device * ndev , struct ifreq * rq , int cmd ) ; 
/*--prism54_ioctl--*/
irqreturn_t islpci_interrupt ( int irq , void * config ) ; 
/*--islpci_interrupt--*/
int islpci_reset ( islpci_private * priv , int reload_firmware ) ; 
/*--islpci_reset--*/
int islpci_free_memory ( islpci_private * priv ) ; 
/*--islpci_free_memory--*/
struct net_device * islpci_setup ( struct pci_dev * pdev ) ; 
/*--islpci_setup--*/
islpci_state_t islpci_set_state ( islpci_private * priv , islpci_state_t new_state ) ; 
/*--islpci_set_state--*/
int channel_of_freq ( int f ) ; 
/*--channel_of_freq--*/
int mgt_init ( islpci_private * priv ) ; 
/*--mgt_init--*/
void mgt_clean ( islpci_private * priv ) ; 
/*--mgt_clean--*/
void mgt_le_to_cpu ( int type , void * data ) ; 
/*--mgt_le_to_cpu--*/
int mgt_set_request ( islpci_private * priv , enum oid_num_t n , int extra , void * data ) ; 
/*--mgt_set_request--*/
int mgt_set_varlen ( islpci_private * priv , enum oid_num_t n , void * data , int extra_len ) ; 
/*--mgt_set_varlen--*/
int mgt_get_request ( islpci_private * priv , enum oid_num_t n , int extra , void * data , union oid_res_t * res ) ; 
/*--mgt_get_request--*/
int mgt_commit_list ( islpci_private * priv , enum oid_num_t * l , int n ) ; 
/*--mgt_commit_list--*/
void mgt_set ( islpci_private * priv , enum oid_num_t n , void * data ) ; 
/*--mgt_set--*/
void mgt_get ( islpci_private * priv , enum oid_num_t n , void * res ) ; 
/*--mgt_get--*/
int mgt_commit ( islpci_private * priv ) ; 
/*--mgt_commit--*/
int mgt_mlme_answer ( islpci_private * priv ) ; 
/*--mgt_mlme_answer--*/
enum oid_num_t mgt_oidtonum ( u32 oid ) ; 
/*--mgt_oidtonum--*/
int mgt_response_to_str ( enum oid_num_t n , union oid_res_t * r , char * str ) ; 
/*--mgt_response_to_str--*/
int rt2x00lib_enable_radio ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_enable_radio--*/
void rt2x00lib_disable_radio ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_disable_radio--*/
void rt2x00lib_toggle_rx ( struct rt2x00_dev * rt2x00dev , enum dev_state state ) ; 
/*--rt2x00lib_toggle_rx--*/
void rt2x00lib_beacondone ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_beacondone--*/
void rt2x00lib_txdone ( struct queue_entry * entry , struct txdone_entry_desc * txdesc ) ; 
/*--rt2x00lib_txdone--*/
void rt2x00lib_rxdone ( struct rt2x00_dev * rt2x00dev , struct queue_entry * entry ) ; 
/*--rt2x00lib_rxdone--*/
int rt2x00lib_start ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_start--*/
void rt2x00lib_stop ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_stop--*/
int rt2x00lib_probe_dev ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_probe_dev--*/
void rt2x00lib_remove_dev ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_remove_dev--*/
int rt2x00lib_suspend ( struct rt2x00_dev * rt2x00dev , pm_message_t state ) ; 
/*--rt2x00lib_suspend--*/
int rt2x00lib_resume ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_resume--*/
int rt2x00mac_tx ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--rt2x00mac_tx--*/
int rt2x00mac_start ( struct ieee80211_hw * hw ) ; 
/*--rt2x00mac_start--*/
void rt2x00mac_stop ( struct ieee80211_hw * hw ) ; 
/*--rt2x00mac_stop--*/
int rt2x00mac_add_interface ( struct ieee80211_hw * hw , struct ieee80211_vif * vif ) ; 
/*--rt2x00mac_add_interface--*/
void rt2x00mac_remove_interface ( struct ieee80211_hw * hw , struct ieee80211_vif * vif ) ; 
/*--rt2x00mac_remove_interface--*/
int rt2x00mac_config ( struct ieee80211_hw * hw , u32 changed ) ; 
/*--rt2x00mac_config--*/
void rt2x00mac_configure_filter ( struct ieee80211_hw * hw , unsigned int changed_flags , unsigned int * total_flags , u64 multicast ) ; 
/*--rt2x00mac_configure_filter--*/
int rt2x00mac_set_tim ( struct ieee80211_hw * hw , struct ieee80211_sta * sta , bool set ) ; 
/*--rt2x00mac_set_tim--*/
int rt2x00mac_set_key ( struct ieee80211_hw * hw , enum set_key_cmd cmd , struct ieee80211_vif * vif , struct ieee80211_sta * sta , struct ieee80211_key_conf * key ) ; 
/*--rt2x00mac_set_key--*/
int rt2x00mac_get_stats ( struct ieee80211_hw * hw , struct ieee80211_low_level_stats * stats ) ; 
/*--rt2x00mac_get_stats--*/
void rt2x00mac_bss_info_changed ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , struct ieee80211_bss_conf * bss_conf , u32 changes ) ; 
/*--rt2x00mac_bss_info_changed--*/
int rt2x00mac_conf_tx ( struct ieee80211_hw * hw , u16 queue_idx , const struct ieee80211_tx_queue_params * params ) ; 
/*--rt2x00mac_conf_tx--*/
void rt2x00mac_rfkill_poll ( struct ieee80211_hw * hw ) ; 
/*--rt2x00mac_rfkill_poll--*/
void rt2x00lib_config_intf ( struct rt2x00_dev * rt2x00dev , struct rt2x00_intf * intf , enum nl80211_iftype type , const u8 * mac , const u8 * bssid ) ; 
/*--rt2x00lib_config_intf--*/
void rt2x00lib_config_erp ( struct rt2x00_dev * rt2x00dev , struct rt2x00_intf * intf , struct ieee80211_bss_conf * bss_conf ) ; 
/*--rt2x00lib_config_erp--*/
void rt2x00lib_config_antenna ( struct rt2x00_dev * rt2x00dev , struct antenna_setup config ) ; 
/*--rt2x00lib_config_antenna--*/
void rt2x00lib_config ( struct rt2x00_dev * rt2x00dev , struct ieee80211_conf * conf , unsigned int ieee80211_flags ) ; 
/*--rt2x00lib_config--*/
struct sk_buff * rt2x00queue_alloc_rxskb ( struct rt2x00_dev * rt2x00dev , struct queue_entry * entry ) ; 
/*--rt2x00queue_alloc_rxskb--*/
void rt2x00queue_map_txskb ( struct rt2x00_dev * rt2x00dev , struct sk_buff * skb ) ; 
/*--rt2x00queue_map_txskb--*/
void rt2x00queue_unmap_skb ( struct rt2x00_dev * rt2x00dev , struct sk_buff * skb ) ; 
/*--rt2x00queue_unmap_skb--*/
void rt2x00queue_free_skb ( struct rt2x00_dev * rt2x00dev , struct sk_buff * skb ) ; 
/*--rt2x00queue_free_skb--*/
void rt2x00queue_align_frame ( struct sk_buff * skb ) ; 
/*--rt2x00queue_align_frame--*/
void rt2x00queue_align_payload ( struct sk_buff * skb , unsigned int header_length ) ; 
/*--rt2x00queue_align_payload--*/
void rt2x00queue_insert_l2pad ( struct sk_buff * skb , unsigned int header_length ) ; 
/*--rt2x00queue_insert_l2pad--*/
void rt2x00queue_remove_l2pad ( struct sk_buff * skb , unsigned int header_length ) ; 
/*--rt2x00queue_remove_l2pad--*/
int rt2x00queue_write_tx_frame ( struct data_queue * queue , struct sk_buff * skb , bool local ) ; 
/*--rt2x00queue_write_tx_frame--*/
int rt2x00queue_update_beacon ( struct rt2x00_dev * rt2x00dev , struct ieee80211_vif * vif , const bool enable_beacon ) ; 
/*--rt2x00queue_update_beacon--*/
struct data_queue * rt2x00queue_get_queue ( struct rt2x00_dev * rt2x00dev , const enum data_queue_qid queue ) ; 
/*--rt2x00queue_get_queue--*/
struct queue_entry * rt2x00queue_get_entry ( struct data_queue * queue , enum queue_index index ) ; 
/*--rt2x00queue_get_entry--*/
void rt2x00queue_index_inc ( struct data_queue * queue , enum queue_index index ) ; 
/*--rt2x00queue_index_inc--*/
void rt2x00queue_stop_queues ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00queue_stop_queues--*/
void rt2x00queue_init_queues ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00queue_init_queues--*/
int rt2x00queue_initialize ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00queue_initialize--*/
void rt2x00queue_uninitialize ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00queue_uninitialize--*/
int rt2x00queue_allocate ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00queue_allocate--*/
void rt2x00queue_free ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00queue_free--*/
void rt2x00link_update_stats ( struct rt2x00_dev * rt2x00dev , struct sk_buff * skb , struct rxdone_entry_desc * rxdesc ) ; 
/*--rt2x00link_update_stats--*/
void rt2x00link_start_tuner ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00link_start_tuner--*/
void rt2x00link_stop_tuner ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00link_stop_tuner--*/
void rt2x00link_reset_tuner ( struct rt2x00_dev * rt2x00dev , bool antenna ) ; 
/*--rt2x00link_reset_tuner--*/
void rt2x00link_register ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00link_register--*/
enum cipher rt2x00crypto_key_to_cipher ( struct ieee80211_key_conf * key ) ; 
/*--rt2x00crypto_key_to_cipher--*/
void rt2x00crypto_create_tx_descriptor ( struct queue_entry * entry , struct txentry_desc * txdesc ) ; 
/*--rt2x00crypto_create_tx_descriptor--*/
unsigned int rt2x00crypto_tx_overhead ( struct rt2x00_dev * rt2x00dev , struct sk_buff * skb ) ; 
/*--rt2x00crypto_tx_overhead--*/
void rt2x00crypto_tx_copy_iv ( struct sk_buff * skb , struct txentry_desc * txdesc ) ; 
/*--rt2x00crypto_tx_copy_iv--*/
void rt2x00crypto_tx_remove_iv ( struct sk_buff * skb , struct txentry_desc * txdesc ) ; 
/*--rt2x00crypto_tx_remove_iv--*/
void rt2x00crypto_tx_insert_iv ( struct sk_buff * skb , unsigned int header_length ) ; 
/*--rt2x00crypto_tx_insert_iv--*/
void rt2x00crypto_rx_insert_iv ( struct sk_buff * skb , unsigned int header_length , struct rxdone_entry_desc * rxdesc ) ; 
/*--rt2x00crypto_rx_insert_iv--*/
int rt2x00lib_load_firmware ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_load_firmware--*/
void rt2x00lib_free_firmware ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00lib_free_firmware--*/
void rt2x00leds_led_quality ( struct rt2x00_dev * rt2x00dev , int rssi ) ; 
/*--rt2x00leds_led_quality--*/
void rt2x00led_led_activity ( struct rt2x00_dev * rt2x00dev , bool enabled ) ; 
/*--rt2x00led_led_activity--*/
void rt2x00leds_led_assoc ( struct rt2x00_dev * rt2x00dev , bool enabled ) ; 
/*--rt2x00leds_led_assoc--*/
void rt2x00leds_led_radio ( struct rt2x00_dev * rt2x00dev , bool enabled ) ; 
/*--rt2x00leds_led_radio--*/
void rt2x00leds_register ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00leds_register--*/
void rt2x00leds_unregister ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00leds_unregister--*/
void rt2x00leds_suspend ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00leds_suspend--*/
void rt2x00leds_resume ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00leds_resume--*/
void rt2x00ht_create_tx_descriptor ( struct queue_entry * entry , struct txentry_desc * txdesc , const struct rt2x00_rate * hwrate ) ; 
/*--rt2x00ht_create_tx_descriptor--*/
int rt2x00pci_regbusy_read ( struct rt2x00_dev * rt2x00dev , const unsigned int offset , const struct rt2x00_field32 field , u32 * reg ) ; 
/*--rt2x00pci_regbusy_read--*/
int rt2x00pci_write_tx_data ( struct queue_entry * entry , struct txentry_desc * txdesc ) ; 
/*--rt2x00pci_write_tx_data--*/
void rt2x00pci_rxdone ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00pci_rxdone--*/
int rt2x00pci_initialize ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00pci_initialize--*/
void rt2x00pci_uninitialize ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00pci_uninitialize--*/
int rt2x00pci_probe ( struct pci_dev * pci_dev , const struct pci_device_id * id ) ; 
/*--rt2x00pci_probe--*/
void rt2x00pci_remove ( struct pci_dev * pci_dev ) ; 
/*--rt2x00pci_remove--*/
int rt2x00pci_suspend ( struct pci_dev * pci_dev , pm_message_t state ) ; 
/*--rt2x00pci_suspend--*/
int rt2x00pci_resume ( struct pci_dev * pci_dev ) ; 
/*--rt2x00pci_resume--*/
int rt2x00usb_vendor_request ( struct rt2x00_dev * rt2x00dev , const u8 request , const u8 requesttype , const u16 offset , const u16 value , void * buffer , const u16 buffer_length , const int timeout ) ; 
/*--rt2x00usb_vendor_request--*/
int rt2x00usb_vendor_req_buff_lock ( struct rt2x00_dev * rt2x00dev , const u8 request , const u8 requesttype , const u16 offset , void * buffer , const u16 buffer_length , const int timeout ) ; 
/*--rt2x00usb_vendor_req_buff_lock--*/
int rt2x00usb_vendor_request_buff ( struct rt2x00_dev * rt2x00dev , const u8 request , const u8 requesttype , const u16 offset , void * buffer , const u16 buffer_length , const int timeout ) ; 
/*--rt2x00usb_vendor_request_buff--*/
int rt2x00usb_vendor_request_large_buff ( struct rt2x00_dev * rt2x00dev , const u8 request , const u8 requesttype , const u16 offset , const void * buffer , const u16 buffer_length , const int timeout ) ; 
/*--rt2x00usb_vendor_request_large_buff--*/
int rt2x00usb_regbusy_read ( struct rt2x00_dev * rt2x00dev , const unsigned int offset , const struct rt2x00_field32 field , u32 * reg ) ; 
/*--rt2x00usb_regbusy_read--*/
int rt2x00usb_write_tx_data ( struct queue_entry * entry , struct txentry_desc * txdesc ) ; 
/*--rt2x00usb_write_tx_data--*/
void rt2x00usb_kick_tx_queue ( struct rt2x00_dev * rt2x00dev , const enum data_queue_qid qid ) ; 
/*--rt2x00usb_kick_tx_queue--*/
void rt2x00usb_kill_tx_queue ( struct rt2x00_dev * rt2x00dev , const enum data_queue_qid qid ) ; 
/*--rt2x00usb_kill_tx_queue--*/
void rt2x00usb_disable_radio ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00usb_disable_radio--*/
void rt2x00usb_clear_entry ( struct queue_entry * entry ) ; 
/*--rt2x00usb_clear_entry--*/
int rt2x00usb_initialize ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00usb_initialize--*/
void rt2x00usb_uninitialize ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2x00usb_uninitialize--*/
int rt2x00usb_probe ( struct usb_interface * usb_intf , const struct usb_device_id * id ) ; 
/*--rt2x00usb_probe--*/
void rt2x00usb_disconnect ( struct usb_interface * usb_intf ) ; 
/*--rt2x00usb_disconnect--*/
int rt2x00usb_suspend ( struct usb_interface * usb_intf , pm_message_t state ) ; 
/*--rt2x00usb_suspend--*/
int rt2x00usb_resume ( struct usb_interface * usb_intf ) ; 
/*--rt2x00usb_resume--*/
void rt2800_mcu_request ( struct rt2x00_dev * rt2x00dev , const u8 command , const u8 token , const u8 arg0 , const u8 arg1 ) ; 
/*--rt2800_mcu_request--*/
int rt2800_wait_wpdma_ready ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_wait_wpdma_ready--*/
void rt2800_write_txwi ( struct sk_buff * skb , struct txentry_desc * txdesc ) ; 
/*--rt2800_write_txwi--*/
void rt2800_process_rxwi ( struct sk_buff * skb , struct rxdone_entry_desc * rxdesc ) ; 
/*--rt2800_process_rxwi--*/
int rt2800_rfkill_poll ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_rfkill_poll--*/
int rt2800_config_shared_key ( struct rt2x00_dev * rt2x00dev , struct rt2x00lib_crypto * crypto , struct ieee80211_key_conf * key ) ; 
/*--rt2800_config_shared_key--*/
int rt2800_config_pairwise_key ( struct rt2x00_dev * rt2x00dev , struct rt2x00lib_crypto * crypto , struct ieee80211_key_conf * key ) ; 
/*--rt2800_config_pairwise_key--*/
void rt2800_config_filter ( struct rt2x00_dev * rt2x00dev , const unsigned int filter_flags ) ; 
/*--rt2800_config_filter--*/
void rt2800_config_intf ( struct rt2x00_dev * rt2x00dev , struct rt2x00_intf * intf , struct rt2x00intf_conf * conf , const unsigned int flags ) ; 
/*--rt2800_config_intf--*/
void rt2800_config_erp ( struct rt2x00_dev * rt2x00dev , struct rt2x00lib_erp * erp ) ; 
/*--rt2800_config_erp--*/
void rt2800_config_ant ( struct rt2x00_dev * rt2x00dev , struct antenna_setup * ant ) ; 
/*--rt2800_config_ant--*/
void rt2800_config ( struct rt2x00_dev * rt2x00dev , struct rt2x00lib_conf * libconf , const unsigned int flags ) ; 
/*--rt2800_config--*/
void rt2800_link_stats ( struct rt2x00_dev * rt2x00dev , struct link_qual * qual ) ; 
/*--rt2800_link_stats--*/
void rt2800_reset_tuner ( struct rt2x00_dev * rt2x00dev , struct link_qual * qual ) ; 
/*--rt2800_reset_tuner--*/
void rt2800_link_tuner ( struct rt2x00_dev * rt2x00dev , struct link_qual * qual , const u32 count ) ; 
/*--rt2800_link_tuner--*/
int rt2800_init_registers ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_init_registers--*/
int rt2800_init_bbp ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_init_bbp--*/
int rt2800_init_rfcsr ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_init_rfcsr--*/
int rt2800_efuse_detect ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_efuse_detect--*/
void rt2800_read_eeprom_efuse ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_read_eeprom_efuse--*/
int rt2800_validate_eeprom ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_validate_eeprom--*/
int rt2800_init_eeprom ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_init_eeprom--*/
int rt2800_probe_hw_mode ( struct rt2x00_dev * rt2x00dev ) ; 
/*--rt2800_probe_hw_mode--*/
void rtl8180_write_phy ( struct ieee80211_hw * dev , u8 addr , u32 data ) ; 
/*--rtl8180_write_phy--*/
void rtl8180_set_anaparam ( struct rtl8180_priv * priv , u32 anaparam ) ; 
/*--rtl8180_set_anaparam--*/
void rtl8180_beacon_work ( struct work_struct * work ) ; 
/*--rtl8180_beacon_work--*/
const struct rtl818x_rf_ops * rtl8180_detect_rf ( struct ieee80211_hw * dev ) ; 
/*--rtl8180_detect_rf--*/
void rtl8187_write_phy ( struct ieee80211_hw * dev , u8 addr , u32 data ) ; 
/*--rtl8187_write_phy--*/
const struct rtl818x_rf_ops * rtl8187_detect_rf ( struct ieee80211_hw * dev ) ; 
/*--rtl8187_detect_rf--*/
void rtl8187_leds_init ( struct ieee80211_hw * dev , u16 custid ) ; 
/*--rtl8187_leds_init--*/
void rtl8187_leds_exit ( struct ieee80211_hw * dev ) ; 
/*--rtl8187_leds_exit--*/
void rtl8187_rfkill_init ( struct ieee80211_hw * hw ) ; 
/*--rtl8187_rfkill_init--*/
void rtl8187_rfkill_poll ( struct ieee80211_hw * hw ) ; 
/*--rtl8187_rfkill_poll--*/
void rtl8187_rfkill_exit ( struct ieee80211_hw * hw ) ; 
/*--rtl8187_rfkill_exit--*/
void wl1251_enable_interrupts ( struct wl1251 * wl ) ; 
/*--wl1251_enable_interrupts--*/
void wl1251_disable_interrupts ( struct wl1251 * wl ) ; 
/*--wl1251_disable_interrupts--*/
int wl1251_init_ieee80211 ( struct wl1251 * wl ) ; 
/*--wl1251_init_ieee80211--*/
struct ieee80211_hw * wl1251_alloc_hw ( void ) ; 
/*--wl1251_alloc_hw--*/
int wl1251_free_hw ( struct wl1251 * wl ) ; 
/*--wl1251_free_hw--*/
int wl1251_event_unmask ( struct wl1251 * wl ) ; 
/*--wl1251_event_unmask--*/
void wl1251_event_mbox_config ( struct wl1251 * wl ) ; 
/*--wl1251_event_mbox_config--*/
int wl1251_event_handle ( struct wl1251 * wl , u8 mbox_num ) ; 
/*--wl1251_event_handle--*/
void wl1251_tx_work ( struct work_struct * work ) ; 
/*--wl1251_tx_work--*/
void wl1251_tx_complete ( struct wl1251 * wl ) ; 
/*--wl1251_tx_complete--*/
void wl1251_tx_flush ( struct wl1251 * wl ) ; 
/*--wl1251_tx_flush--*/
void wl1251_rx ( struct wl1251 * wl ) ; 
/*--wl1251_rx--*/
void wl1251_elp_work ( struct work_struct * work ) ; 
/*--wl1251_elp_work--*/
void wl1251_ps_elp_sleep ( struct wl1251 * wl ) ; 
/*--wl1251_ps_elp_sleep--*/
int wl1251_ps_elp_wakeup ( struct wl1251 * wl ) ; 
/*--wl1251_ps_elp_wakeup--*/
int wl1251_ps_set_mode ( struct wl1251 * wl , enum wl1251_cmd_ps_mode mode ) ; 
/*--wl1251_ps_set_mode--*/
int wl1251_cmd_send ( struct wl1251 * wl , u16 id , void * buf , size_t len ) ; 
/*--wl1251_cmd_send--*/
int wl1251_cmd_test ( struct wl1251 * wl , void * buf , size_t buf_len , u8 answer ) ; 
/*--wl1251_cmd_test--*/
int wl1251_cmd_interrogate ( struct wl1251 * wl , u16 id , void * buf , size_t len ) ; 
/*--wl1251_cmd_interrogate--*/
int wl1251_cmd_configure ( struct wl1251 * wl , u16 id , void * buf , size_t len ) ; 
/*--wl1251_cmd_configure--*/
int wl1251_cmd_vbm ( struct wl1251 * wl , u8 identity , void * bitmap , u16 bitmap_len , u8 bitmap_control ) ; 
/*--wl1251_cmd_vbm--*/
int wl1251_cmd_data_path ( struct wl1251 * wl , u8 channel , bool enable ) ; 
/*--wl1251_cmd_data_path--*/
int wl1251_cmd_join ( struct wl1251 * wl , u8 bss_type , u8 channel , u16 beacon_interval , u8 dtim_interval ) ; 
/*--wl1251_cmd_join--*/
int wl1251_cmd_ps_mode ( struct wl1251 * wl , u8 ps_mode ) ; 
/*--wl1251_cmd_ps_mode--*/
int wl1251_cmd_read_memory ( struct wl1251 * wl , u32 addr , void * answer , size_t len ) ; 
/*--wl1251_cmd_read_memory--*/
int wl1251_cmd_template_set ( struct wl1251 * wl , u16 cmd_id , void * buf , size_t buf_len ) ; 
/*--wl1251_cmd_template_set--*/
int wl1251_cmd_scan ( struct wl1251 * wl , u8 * ssid , size_t ssid_len , struct ieee80211_channel * channels [ ] , unsigned int n_channels , unsigned int n_probes ) ; 
/*--wl1251_cmd_scan--*/
int wl1251_cmd_trigger_scan_to ( struct wl1251 * wl , u32 timeout ) ; 
/*--wl1251_cmd_trigger_scan_to--*/
int wl1251_acx_frame_rates ( struct wl1251 * wl , u8 ctrl_rate , u8 ctrl_mod , u8 mgt_rate , u8 mgt_mod ) ; 
/*--wl1251_acx_frame_rates--*/
int wl1251_acx_station_id ( struct wl1251 * wl ) ; 
/*--wl1251_acx_station_id--*/
int wl1251_acx_default_key ( struct wl1251 * wl , u8 key_id ) ; 
/*--wl1251_acx_default_key--*/
int wl1251_acx_wake_up_conditions ( struct wl1251 * wl , u8 wake_up_event , u8 listen_interval ) ; 
/*--wl1251_acx_wake_up_conditions--*/
int wl1251_acx_sleep_auth ( struct wl1251 * wl , u8 sleep_auth ) ; 
/*--wl1251_acx_sleep_auth--*/
int wl1251_acx_fw_version ( struct wl1251 * wl , char * buf , size_t len ) ; 
/*--wl1251_acx_fw_version--*/
int wl1251_acx_tx_power ( struct wl1251 * wl , int power ) ; 
/*--wl1251_acx_tx_power--*/
int wl1251_acx_feature_cfg ( struct wl1251 * wl ) ; 
/*--wl1251_acx_feature_cfg--*/
int wl1251_acx_mem_map ( struct wl1251 * wl , struct acx_header * mem_map , size_t len ) ; 
/*--wl1251_acx_mem_map--*/
int wl1251_acx_data_path_params ( struct wl1251 * wl , struct acx_data_path_params_resp * resp ) ; 
/*--wl1251_acx_data_path_params--*/
int wl1251_acx_rx_msdu_life_time ( struct wl1251 * wl , u32 life_time ) ; 
/*--wl1251_acx_rx_msdu_life_time--*/
int wl1251_acx_rx_config ( struct wl1251 * wl , u32 config , u32 filter ) ; 
/*--wl1251_acx_rx_config--*/
int wl1251_acx_pd_threshold ( struct wl1251 * wl ) ; 
/*--wl1251_acx_pd_threshold--*/
int wl1251_acx_slot ( struct wl1251 * wl , enum acx_slot_type slot_time ) ; 
/*--wl1251_acx_slot--*/
int wl1251_acx_group_address_tbl ( struct wl1251 * wl ) ; 
/*--wl1251_acx_group_address_tbl--*/
int wl1251_acx_service_period_timeout ( struct wl1251 * wl ) ; 
/*--wl1251_acx_service_period_timeout--*/
int wl1251_acx_rts_threshold ( struct wl1251 * wl , u16 rts_threshold ) ; 
/*--wl1251_acx_rts_threshold--*/
int wl1251_acx_beacon_filter_opt ( struct wl1251 * wl , bool enable_filter ) ; 
/*--wl1251_acx_beacon_filter_opt--*/
int wl1251_acx_beacon_filter_table ( struct wl1251 * wl ) ; 
/*--wl1251_acx_beacon_filter_table--*/
int wl1251_acx_conn_monit_params ( struct wl1251 * wl ) ; 
/*--wl1251_acx_conn_monit_params--*/
int wl1251_acx_sg_enable ( struct wl1251 * wl ) ; 
/*--wl1251_acx_sg_enable--*/
int wl1251_acx_sg_cfg ( struct wl1251 * wl ) ; 
/*--wl1251_acx_sg_cfg--*/
int wl1251_acx_cca_threshold ( struct wl1251 * wl ) ; 
/*--wl1251_acx_cca_threshold--*/
int wl1251_acx_bcn_dtim_options ( struct wl1251 * wl ) ; 
/*--wl1251_acx_bcn_dtim_options--*/
int wl1251_acx_aid ( struct wl1251 * wl , u16 aid ) ; 
/*--wl1251_acx_aid--*/
int wl1251_acx_event_mbox_mask ( struct wl1251 * wl , u32 event_mask ) ; 
/*--wl1251_acx_event_mbox_mask--*/
int wl1251_acx_set_preamble ( struct wl1251 * wl , enum acx_preamble_type preamble ) ; 
/*--wl1251_acx_set_preamble--*/
int wl1251_acx_cts_protect ( struct wl1251 * wl , enum acx_ctsprotect_type ctsprotect ) ; 
/*--wl1251_acx_cts_protect--*/
int wl1251_acx_tsf_info ( struct wl1251 * wl , u64 * mactime ) ; 
/*--wl1251_acx_tsf_info--*/
int wl1251_acx_statistics ( struct wl1251 * wl , struct acx_statistics * stats ) ; 
/*--wl1251_acx_statistics--*/
int wl1251_acx_rate_policies ( struct wl1251 * wl ) ; 
/*--wl1251_acx_rate_policies--*/
int wl1251_acx_mem_cfg ( struct wl1251 * wl ) ; 
/*--wl1251_acx_mem_cfg--*/
int wl1251_acx_wr_tbtt_and_dtim ( struct wl1251 * wl , u16 tbtt , u8 dtim ) ; 
/*--wl1251_acx_wr_tbtt_and_dtim--*/
int wl1251_acx_ac_cfg ( struct wl1251 * wl , u8 ac , u8 cw_min , u16 cw_max , u8 aifs , u16 txop ) ; 
/*--wl1251_acx_ac_cfg--*/
int wl1251_acx_tid_cfg ( struct wl1251 * wl , u8 queue , enum wl1251_acx_channel_type type , u8 tsid , enum wl1251_acx_ps_scheme ps_scheme , enum wl1251_acx_ack_policy ack_policy ) ; 
/*--wl1251_acx_tid_cfg--*/
void wl1251_boot_target_enable_interrupts ( struct wl1251 * wl ) ; 
/*--wl1251_boot_target_enable_interrupts--*/
int wl1251_boot_soft_reset ( struct wl1251 * wl ) ; 
/*--wl1251_boot_soft_reset--*/
int wl1251_boot_init_seq ( struct wl1251 * wl ) ; 
/*--wl1251_boot_init_seq--*/
int wl1251_boot_run_firmware ( struct wl1251 * wl ) ; 
/*--wl1251_boot_run_firmware--*/
int wl1251_boot ( struct wl1251 * wl ) ; 
/*--wl1251_boot--*/
int wl1251_hw_init_hwenc_config ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_hwenc_config--*/
int wl1251_hw_init_templates_config ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_templates_config--*/
int wl1251_hw_init_rx_config ( struct wl1251 * wl , u32 config , u32 filter ) ; 
/*--wl1251_hw_init_rx_config--*/
int wl1251_hw_init_phy_config ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_phy_config--*/
int wl1251_hw_init_beacon_filter ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_beacon_filter--*/
int wl1251_hw_init_pta ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_pta--*/
int wl1251_hw_init_energy_detection ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_energy_detection--*/
int wl1251_hw_init_beacon_broadcast ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_beacon_broadcast--*/
int wl1251_hw_init_power_auth ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_power_auth--*/
int wl1251_hw_init_mem_config ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init_mem_config--*/
int wl1251_hw_init ( struct wl1251 * wl ) ; 
/*--wl1251_hw_init--*/
void wl1251_debugfs_reset ( struct wl1251 * wl ) ; 
/*--wl1251_debugfs_reset--*/
int wl1251_debugfs_init ( struct wl1251 * wl ) ; 
/*--wl1251_debugfs_init--*/
void wl1251_debugfs_exit ( struct wl1251 * wl ) ; 
/*--wl1251_debugfs_exit--*/
void wl1251_mem_read ( struct wl1251 * wl , int addr , void * buf , size_t len ) ; 
/*--wl1251_mem_read--*/
void wl1251_mem_write ( struct wl1251 * wl , int addr , void * buf , size_t len ) ; 
/*--wl1251_mem_write--*/
u32 wl1251_mem_read32 ( struct wl1251 * wl , int addr ) ; 
/*--wl1251_mem_read32--*/
void wl1251_mem_write32 ( struct wl1251 * wl , int addr , u32 val ) ; 
/*--wl1251_mem_write32--*/
u32 wl1251_reg_read32 ( struct wl1251 * wl , int addr ) ; 
/*--wl1251_reg_read32--*/
void wl1251_reg_write32 ( struct wl1251 * wl , int addr , u32 val ) ; 
/*--wl1251_reg_write32--*/
void wl1251_set_partition ( struct wl1251 * wl , u32 mem_start , u32 mem_size , u32 reg_start , u32 reg_size ) ; 
/*--wl1251_set_partition--*/
int wl1271_plt_start ( struct wl1271 * wl ) ; 
/*--wl1271_plt_start--*/
int wl1271_plt_stop ( struct wl1271 * wl ) ; 
/*--wl1271_plt_stop--*/
u8 wl1271_rate_to_idx ( struct wl1271 * wl , int rate ) ; 
/*--wl1271_rate_to_idx--*/
int wl1271_register_hw ( struct wl1271 * wl ) ; 
/*--wl1271_register_hw--*/
void wl1271_unregister_hw ( struct wl1271 * wl ) ; 
/*--wl1271_unregister_hw--*/
int wl1271_init_ieee80211 ( struct wl1271 * wl ) ; 
/*--wl1271_init_ieee80211--*/
struct ieee80211_hw * wl1271_alloc_hw ( void ) ; 
/*--wl1271_alloc_hw--*/
int wl1271_free_hw ( struct wl1271 * wl ) ; 
/*--wl1271_free_hw--*/
int wl1271_cmd_send ( struct wl1271 * wl , u16 id , void * buf , size_t len , size_t res_len ) ; 
/*--wl1271_cmd_send--*/
int wl1271_cmd_general_parms ( struct wl1271 * wl ) ; 
/*--wl1271_cmd_general_parms--*/
int wl1271_cmd_radio_parms ( struct wl1271 * wl ) ; 
/*--wl1271_cmd_radio_parms--*/
int wl1271_cmd_join ( struct wl1271 * wl , u8 bss_type ) ; 
/*--wl1271_cmd_join--*/
int wl1271_cmd_test ( struct wl1271 * wl , void * buf , size_t buf_len , u8 answer ) ; 
/*--wl1271_cmd_test--*/
int wl1271_cmd_interrogate ( struct wl1271 * wl , u16 id , void * buf , size_t len ) ; 
/*--wl1271_cmd_interrogate--*/
int wl1271_cmd_configure ( struct wl1271 * wl , u16 id , void * buf , size_t len ) ; 
/*--wl1271_cmd_configure--*/
int wl1271_cmd_data_path ( struct wl1271 * wl , bool enable ) ; 
/*--wl1271_cmd_data_path--*/
int wl1271_cmd_ps_mode ( struct wl1271 * wl , u8 ps_mode , bool send ) ; 
/*--wl1271_cmd_ps_mode--*/
int wl1271_cmd_read_memory ( struct wl1271 * wl , u32 addr , void * answer , size_t len ) ; 
/*--wl1271_cmd_read_memory--*/
int wl1271_cmd_scan ( struct wl1271 * wl , const u8 * ssid , size_t ssid_len , const u8 * ie , size_t ie_len , u8 active_scan , u8 high_prio , u8 band , u8 probe_requests ) ; 
/*--wl1271_cmd_scan--*/
int wl1271_cmd_template_set ( struct wl1271 * wl , u16 template_id , void * buf , size_t buf_len , int index , u32 rates ) ; 
/*--wl1271_cmd_template_set--*/
int wl1271_cmd_build_null_data ( struct wl1271 * wl ) ; 
/*--wl1271_cmd_build_null_data--*/
int wl1271_cmd_build_klv_null_data ( struct wl1271 * wl ) ; 
/*--wl1271_cmd_build_klv_null_data--*/
int wl1271_cmd_build_ps_poll ( struct wl1271 * wl , u16 aid ) ; 
/*--wl1271_cmd_build_ps_poll--*/
int wl1271_cmd_build_probe_req ( struct wl1271 * wl , const u8 * ssid , size_t ssid_len , const u8 * ie , size_t ie_len , u8 band ) ; 
/*--wl1271_cmd_build_probe_req--*/
int wl1271_build_qos_null_data ( struct wl1271 * wl ) ; 
/*--wl1271_build_qos_null_data--*/
int wl1271_cmd_set_default_wep_key ( struct wl1271 * wl , u8 id ) ; 
/*--wl1271_cmd_set_default_wep_key--*/
int wl1271_cmd_set_key ( struct wl1271 * wl , u16 action , u8 id , u8 key_type , u8 key_size , const u8 * key , const u8 * addr , u32 tx_seq_32 , u16 tx_seq_16 ) ; 
/*--wl1271_cmd_set_key--*/
int wl1271_cmd_disconnect ( struct wl1271 * wl ) ; 
/*--wl1271_cmd_disconnect--*/
void wl1271_disable_interrupts ( struct wl1271 * wl ) ; 
/*--wl1271_disable_interrupts--*/
void wl1271_enable_interrupts ( struct wl1271 * wl ) ; 
/*--wl1271_enable_interrupts--*/
int wl1271_set_partition ( struct wl1271 * wl , struct wl1271_partition_set * p ) ; 
/*--wl1271_set_partition--*/
void wl1271_io_reset ( struct wl1271 * wl ) ; 
/*--wl1271_io_reset--*/
void wl1271_io_init ( struct wl1271 * wl ) ; 
/*--wl1271_io_init--*/
void wl1271_top_reg_write ( struct wl1271 * wl , int addr , u16 val ) ; 
/*--wl1271_top_reg_write--*/
u16 wl1271_top_reg_read ( struct wl1271 * wl , int addr ) ; 
/*--wl1271_top_reg_read--*/
int wl1271_event_unmask ( struct wl1271 * wl ) ; 
/*--wl1271_event_unmask--*/
void wl1271_event_mbox_config ( struct wl1271 * wl ) ; 
/*--wl1271_event_mbox_config--*/
int wl1271_event_handle ( struct wl1271 * wl , u8 mbox_num ) ; 
/*--wl1271_event_handle--*/
u32 wl1271_tx_enabled_rates_get ( struct wl1271 * wl , u32 rate_set ) ; 
/*--wl1271_tx_enabled_rates_get--*/
void wl1271_tx_work ( struct work_struct * work ) ; 
/*--wl1271_tx_work--*/
void wl1271_tx_complete ( struct wl1271 * wl ) ; 
/*--wl1271_tx_complete--*/
void wl1271_tx_flush ( struct wl1271 * wl ) ; 
/*--wl1271_tx_flush--*/
void wl1271_rx ( struct wl1271 * wl , struct wl1271_fw_status * status ) ; 
/*--wl1271_rx--*/
void wl1271_elp_work ( struct work_struct * work ) ; 
/*--wl1271_elp_work--*/
void wl1271_ps_elp_sleep ( struct wl1271 * wl ) ; 
/*--wl1271_ps_elp_sleep--*/
int wl1271_ps_elp_wakeup ( struct wl1271 * wl , bool chip_awake ) ; 
/*--wl1271_ps_elp_wakeup--*/
int wl1271_ps_set_mode ( struct wl1271 * wl , enum wl1271_cmd_ps_mode mode , bool send ) ; 
/*--wl1271_ps_set_mode--*/
int wl1271_acx_wake_up_conditions ( struct wl1271 * wl ) ; 
/*--wl1271_acx_wake_up_conditions--*/
int wl1271_acx_sleep_auth ( struct wl1271 * wl , u8 sleep_auth ) ; 
/*--wl1271_acx_sleep_auth--*/
int wl1271_acx_fw_version ( struct wl1271 * wl , char * buf , size_t len ) ; 
/*--wl1271_acx_fw_version--*/
int wl1271_acx_tx_power ( struct wl1271 * wl , int power ) ; 
/*--wl1271_acx_tx_power--*/
int wl1271_acx_feature_cfg ( struct wl1271 * wl ) ; 
/*--wl1271_acx_feature_cfg--*/
int wl1271_acx_mem_map ( struct wl1271 * wl , struct acx_header * mem_map , size_t len ) ; 
/*--wl1271_acx_mem_map--*/
int wl1271_acx_rx_msdu_life_time ( struct wl1271 * wl ) ; 
/*--wl1271_acx_rx_msdu_life_time--*/
int wl1271_acx_rx_config ( struct wl1271 * wl , u32 config , u32 filter ) ; 
/*--wl1271_acx_rx_config--*/
int wl1271_acx_pd_threshold ( struct wl1271 * wl ) ; 
/*--wl1271_acx_pd_threshold--*/
int wl1271_acx_slot ( struct wl1271 * wl , enum acx_slot_type slot_time ) ; 
/*--wl1271_acx_slot--*/
int wl1271_acx_group_address_tbl ( struct wl1271 * wl , bool enable , void * mc_list , u32 mc_list_len ) ; 
/*--wl1271_acx_group_address_tbl--*/
int wl1271_acx_service_period_timeout ( struct wl1271 * wl ) ; 
/*--wl1271_acx_service_period_timeout--*/
int wl1271_acx_rts_threshold ( struct wl1271 * wl , u16 rts_threshold ) ; 
/*--wl1271_acx_rts_threshold--*/
int wl1271_acx_dco_itrim_params ( struct wl1271 * wl ) ; 
/*--wl1271_acx_dco_itrim_params--*/
int wl1271_acx_beacon_filter_opt ( struct wl1271 * wl , bool enable_filter ) ; 
/*--wl1271_acx_beacon_filter_opt--*/
int wl1271_acx_beacon_filter_table ( struct wl1271 * wl ) ; 
/*--wl1271_acx_beacon_filter_table--*/
int wl1271_acx_conn_monit_params ( struct wl1271 * wl , bool enable ) ; 
/*--wl1271_acx_conn_monit_params--*/
int wl1271_acx_sg_enable ( struct wl1271 * wl , bool enable ) ; 
/*--wl1271_acx_sg_enable--*/
int wl1271_acx_sg_cfg ( struct wl1271 * wl ) ; 
/*--wl1271_acx_sg_cfg--*/
int wl1271_acx_cca_threshold ( struct wl1271 * wl ) ; 
/*--wl1271_acx_cca_threshold--*/
int wl1271_acx_bcn_dtim_options ( struct wl1271 * wl ) ; 
/*--wl1271_acx_bcn_dtim_options--*/
int wl1271_acx_aid ( struct wl1271 * wl , u16 aid ) ; 
/*--wl1271_acx_aid--*/
int wl1271_acx_event_mbox_mask ( struct wl1271 * wl , u32 event_mask ) ; 
/*--wl1271_acx_event_mbox_mask--*/
int wl1271_acx_set_preamble ( struct wl1271 * wl , enum acx_preamble_type preamble ) ; 
/*--wl1271_acx_set_preamble--*/
int wl1271_acx_cts_protect ( struct wl1271 * wl , enum acx_ctsprotect_type ctsprotect ) ; 
/*--wl1271_acx_cts_protect--*/
int wl1271_acx_statistics ( struct wl1271 * wl , struct acx_statistics * stats ) ; 
/*--wl1271_acx_statistics--*/
int wl1271_acx_rate_policies ( struct wl1271 * wl ) ; 
/*--wl1271_acx_rate_policies--*/
int wl1271_acx_ac_cfg ( struct wl1271 * wl , u8 ac , u8 cw_min , u16 cw_max , u8 aifsn , u16 txop ) ; 
/*--wl1271_acx_ac_cfg--*/
int wl1271_acx_tid_cfg ( struct wl1271 * wl , u8 queue_id , u8 channel_type , u8 tsid , u8 ps_scheme , u8 ack_policy , u32 apsd_conf0 , u32 apsd_conf1 ) ; 
/*--wl1271_acx_tid_cfg--*/
int wl1271_acx_frag_threshold ( struct wl1271 * wl ) ; 
/*--wl1271_acx_frag_threshold--*/
int wl1271_acx_tx_config_options ( struct wl1271 * wl ) ; 
/*--wl1271_acx_tx_config_options--*/
int wl1271_acx_mem_cfg ( struct wl1271 * wl ) ; 
/*--wl1271_acx_mem_cfg--*/
int wl1271_acx_init_mem_config ( struct wl1271 * wl ) ; 
/*--wl1271_acx_init_mem_config--*/
int wl1271_acx_init_rx_interrupt ( struct wl1271 * wl ) ; 
/*--wl1271_acx_init_rx_interrupt--*/
int wl1271_acx_bet_enable ( struct wl1271 * wl , bool enable ) ; 
/*--wl1271_acx_bet_enable--*/
int wl1271_acx_arp_ip_filter ( struct wl1271 * wl , bool enable , u8 * address , u8 version ) ; 
/*--wl1271_acx_arp_ip_filter--*/
int wl1271_acx_pm_config ( struct wl1271 * wl ) ; 
/*--wl1271_acx_pm_config--*/
int wl1271_acx_keep_alive_mode ( struct wl1271 * wl , bool enable ) ; 
/*--wl1271_acx_keep_alive_mode--*/
int wl1271_acx_keep_alive_config ( struct wl1271 * wl , u8 index , u8 tpl_valid ) ; 
/*--wl1271_acx_keep_alive_config--*/
int wl1271_acx_rssi_snr_trigger ( struct wl1271 * wl , bool enable , s16 thold , u8 hyst ) ; 
/*--wl1271_acx_rssi_snr_trigger--*/
int wl1271_acx_rssi_snr_avg_weights ( struct wl1271 * wl ) ; 
/*--wl1271_acx_rssi_snr_avg_weights--*/
int wl1271_boot ( struct wl1271 * wl ) ; 
/*--wl1271_boot--*/
int wl1271_init_templates_config ( struct wl1271 * wl ) ; 
/*--wl1271_init_templates_config--*/
int wl1271_init_phy_config ( struct wl1271 * wl ) ; 
/*--wl1271_init_phy_config--*/
int wl1271_init_pta ( struct wl1271 * wl ) ; 
/*--wl1271_init_pta--*/
int wl1271_init_energy_detection ( struct wl1271 * wl ) ; 
/*--wl1271_init_energy_detection--*/
int wl1271_hw_init ( struct wl1271 * wl ) ; 
/*--wl1271_hw_init--*/
void wl1271_debugfs_reset ( struct wl1271 * wl ) ; 
/*--wl1271_debugfs_reset--*/
int wl1271_debugfs_init ( struct wl1271 * wl ) ; 
/*--wl1271_debugfs_init--*/
void wl1271_debugfs_exit ( struct wl1271 * wl ) ; 
/*--wl1271_debugfs_exit--*/
int wl1271_tm_cmd ( struct ieee80211_hw * hw , void * data , int len ) ; 
/*--wl1271_tm_cmd--*/
void zd_chip_init ( struct zd_chip * chip , struct ieee80211_hw * hw , struct usb_interface * intf ) ; 
/*--zd_chip_init--*/
void zd_chip_clear ( struct zd_chip * chip ) ; 
/*--zd_chip_clear--*/
int zd_ioread32v_locked ( struct zd_chip * chip , u32 * values , const zd_addr_t * addr , unsigned int count ) ; 
/*--zd_ioread32v_locked--*/
int _zd_iowrite32v_locked ( struct zd_chip * chip , const struct zd_ioreq32 * ioreqs , unsigned int count ) ; 
/*--_zd_iowrite32v_locked--*/
int zd_iowrite16a_locked ( struct zd_chip * chip , const struct zd_ioreq16 * ioreqs , unsigned int count ) ; 
/*--zd_iowrite16a_locked--*/
int zd_iowrite32a_locked ( struct zd_chip * chip , const struct zd_ioreq32 * ioreqs , unsigned int count ) ; 
/*--zd_iowrite32a_locked--*/
int zd_ioread16 ( struct zd_chip * chip , zd_addr_t addr , u16 * value ) ; 
/*--zd_ioread16--*/
int zd_ioread32 ( struct zd_chip * chip , zd_addr_t addr , u32 * value ) ; 
/*--zd_ioread32--*/
int zd_iowrite16 ( struct zd_chip * chip , zd_addr_t addr , u16 value ) ; 
/*--zd_iowrite16--*/
int zd_iowrite32 ( struct zd_chip * chip , zd_addr_t addr , u32 value ) ; 
/*--zd_iowrite32--*/
int zd_ioread32v ( struct zd_chip * chip , const zd_addr_t * addresses , u32 * values , unsigned int count ) ; 
/*--zd_ioread32v--*/
int zd_iowrite32a ( struct zd_chip * chip , const struct zd_ioreq32 * ioreqs , unsigned int count ) ; 
/*--zd_iowrite32a--*/
int zd_write_mac_addr ( struct zd_chip * chip , const u8 * mac_addr ) ; 
/*--zd_write_mac_addr--*/
int zd_read_regdomain ( struct zd_chip * chip , u8 * regdomain ) ; 
/*--zd_read_regdomain--*/
int zd_chip_lock_phy_regs ( struct zd_chip * chip ) ; 
/*--zd_chip_lock_phy_regs--*/
int zd_chip_unlock_phy_regs ( struct zd_chip * chip ) ; 
/*--zd_chip_unlock_phy_regs--*/
int zd_chip_generic_patch_6m_band ( struct zd_chip * chip , int channel ) ; 
/*--zd_chip_generic_patch_6m_band--*/
int zd_set_beacon_interval ( struct zd_chip * chip , u32 interval ) ; 
/*--zd_set_beacon_interval--*/
int zd_chip_set_rts_cts_rate_locked ( struct zd_chip * chip , int preamble ) ; 
/*--zd_chip_set_rts_cts_rate_locked--*/
int zd_chip_enable_hwint ( struct zd_chip * chip ) ; 
/*--zd_chip_enable_hwint--*/
int zd_chip_disable_hwint ( struct zd_chip * chip ) ; 
/*--zd_chip_disable_hwint--*/
int zd_chip_read_mac_addr_fw ( struct zd_chip * chip , u8 * addr ) ; 
/*--zd_chip_read_mac_addr_fw--*/
int zd_chip_init_hw ( struct zd_chip * chip ) ; 
/*--zd_chip_init_hw--*/
int zd_chip_set_channel ( struct zd_chip * chip , u8 channel ) ; 
/*--zd_chip_set_channel--*/
u8 zd_chip_get_channel ( struct zd_chip * chip ) ; 
/*--zd_chip_get_channel--*/
int zd_chip_control_leds ( struct zd_chip * chip , enum led_status status ) ; 
/*--zd_chip_control_leds--*/
int zd_chip_set_basic_rates ( struct zd_chip * chip , u16 cr_rates ) ; 
/*--zd_chip_set_basic_rates--*/
u8 zd_rx_rate ( const void * rx_frame , const struct rx_status * status ) ; 
/*--zd_rx_rate--*/
int zd_chip_switch_radio_on ( struct zd_chip * chip ) ; 
/*--zd_chip_switch_radio_on--*/
int zd_chip_switch_radio_off ( struct zd_chip * chip ) ; 
/*--zd_chip_switch_radio_off--*/
int zd_chip_enable_int ( struct zd_chip * chip ) ; 
/*--zd_chip_enable_int--*/
void zd_chip_disable_int ( struct zd_chip * chip ) ; 
/*--zd_chip_disable_int--*/
int zd_chip_enable_rxtx ( struct zd_chip * chip ) ; 
/*--zd_chip_enable_rxtx--*/
void zd_chip_disable_rxtx ( struct zd_chip * chip ) ; 
/*--zd_chip_disable_rxtx--*/
int zd_rfwritev_locked ( struct zd_chip * chip , const u32 * values , unsigned int count , u8 bits ) ; 
/*--zd_rfwritev_locked--*/
int zd_rfwrite_cr_locked ( struct zd_chip * chip , u32 value ) ; 
/*--zd_rfwrite_cr_locked--*/
int zd_rfwritev_cr_locked ( struct zd_chip * chip , const u32 * values , unsigned int count ) ; 
/*--zd_rfwritev_cr_locked--*/
int zd_chip_set_multicast_hash ( struct zd_chip * chip , struct zd_mc_hash * hash ) ; 
/*--zd_chip_set_multicast_hash--*/
u64 zd_chip_get_tsf ( struct zd_chip * chip ) ; 
/*--zd_chip_get_tsf--*/
int zd_mac_preinit_hw ( struct ieee80211_hw * hw ) ; 
/*--zd_mac_preinit_hw--*/
int zd_mac_init_hw ( struct ieee80211_hw * hw ) ; 
/*--zd_mac_init_hw--*/
void zd_mac_clear ( struct zd_mac * mac ) ; 
/*--zd_mac_clear--*/
void zd_mac_tx_failed ( struct urb * urb ) ; 
/*--zd_mac_tx_failed--*/
void zd_mac_tx_to_dev ( struct sk_buff * skb , int error ) ; 
/*--zd_mac_tx_to_dev--*/
int zd_mac_rx ( struct ieee80211_hw * hw , const u8 * buffer , unsigned int length ) ; 
/*--zd_mac_rx--*/
struct ieee80211_hw * zd_mac_alloc_hw ( struct usb_interface * intf ) ; 
/*--zd_mac_alloc_hw--*/
int zd_rf_init_al2230 ( struct zd_rf * rf ) ; 
/*--zd_rf_init_al2230--*/
int zd_rf_init_rf2959 ( struct zd_rf * rf ) ; 
/*--zd_rf_init_rf2959--*/
int zd_rf_init_al7230b ( struct zd_rf * rf ) ; 
/*--zd_rf_init_al7230b--*/
int zd_rf_init_uw2453 ( struct zd_rf * rf ) ; 
/*--zd_rf_init_uw2453--*/
const char * zd_rf_name ( u8 type ) ; 
/*--zd_rf_name--*/
void zd_rf_init ( struct zd_rf * rf ) ; 
/*--zd_rf_init--*/
void zd_rf_clear ( struct zd_rf * rf ) ; 
/*--zd_rf_clear--*/
int zd_rf_init_hw ( struct zd_rf * rf , u8 type ) ; 
/*--zd_rf_init_hw--*/
int zd_rf_scnprint_id ( struct zd_rf * rf , char * buffer , size_t size ) ; 
/*--zd_rf_scnprint_id--*/
int zd_rf_set_channel ( struct zd_rf * rf , u8 channel ) ; 
/*--zd_rf_set_channel--*/
int zd_switch_radio_on ( struct zd_rf * rf ) ; 
/*--zd_switch_radio_on--*/
int zd_switch_radio_off ( struct zd_rf * rf ) ; 
/*--zd_switch_radio_off--*/
int zd_rf_patch_6m_band_edge ( struct zd_rf * rf , u8 channel ) ; 
/*--zd_rf_patch_6m_band_edge--*/
int zd_rf_generic_patch_6m ( struct zd_rf * rf , u8 channel ) ; 
/*--zd_rf_generic_patch_6m--*/
int zd_usb_read_fw ( struct zd_usb * usb , zd_addr_t addr , u8 * data , u16 len ) ; 
/*--zd_usb_read_fw--*/
int zd_usb_enable_int ( struct zd_usb * usb ) ; 
/*--zd_usb_enable_int--*/
void zd_usb_disable_int ( struct zd_usb * usb ) ; 
/*--zd_usb_disable_int--*/
int zd_usb_enable_rx ( struct zd_usb * usb ) ; 
/*--zd_usb_enable_rx--*/
void zd_usb_disable_rx ( struct zd_usb * usb ) ; 
/*--zd_usb_disable_rx--*/
void zd_usb_disable_tx ( struct zd_usb * usb ) ; 
/*--zd_usb_disable_tx--*/
void zd_usb_enable_tx ( struct zd_usb * usb ) ; 
/*--zd_usb_enable_tx--*/
int zd_usb_tx ( struct zd_usb * usb , struct sk_buff * skb ) ; 
/*--zd_usb_tx--*/
void zd_usb_init ( struct zd_usb * usb , struct ieee80211_hw * hw , struct usb_interface * intf ) ; 
/*--zd_usb_init--*/
void zd_usb_clear ( struct zd_usb * usb ) ; 
/*--zd_usb_clear--*/
int zd_usb_scnprint_id ( struct zd_usb * usb , char * buffer , size_t size ) ; 
/*--zd_usb_scnprint_id--*/
int zd_usb_init_hw ( struct zd_usb * usb ) ; 
/*--zd_usb_init_hw--*/
int zd_usb_ioread16v ( struct zd_usb * usb , u16 * values , const zd_addr_t * addresses , unsigned int count ) ; 
/*--zd_usb_ioread16v--*/
int zd_usb_iowrite16v ( struct zd_usb * usb , const struct zd_ioreq16 * ioreqs , unsigned int count ) ; 
/*--zd_usb_iowrite16v--*/
int zd_usb_rfwrite ( struct zd_usb * usb , u32 value , u8 bits ) ; 
/*--zd_usb_rfwrite--*/
int mii_ethtool_gset ( struct mii_if_info * mii , struct ethtool_cmd * ecmd ) ; 
/*--mii_ethtool_gset--*/
int mii_ethtool_sset ( struct mii_if_info * mii , struct ethtool_cmd * ecmd ) ; 
/*--mii_ethtool_sset--*/
int mii_check_gmii_support ( struct mii_if_info * mii ) ; 
/*--mii_check_gmii_support--*/
int mii_link_ok ( struct mii_if_info * mii ) ; 
/*--mii_link_ok--*/
int mii_nway_restart ( struct mii_if_info * mii ) ; 
/*--mii_nway_restart--*/
void mii_check_link ( struct mii_if_info * mii ) ; 
/*--mii_check_link--*/
unsigned int mii_check_media ( struct mii_if_info * mii , unsigned int ok_to_print , unsigned int init_media ) ; 
/*--mii_check_media--*/
int generic_mii_ioctl ( struct mii_if_info * mii_if , struct mii_ioctl_data * mii_data , int cmd , unsigned int * duplex_chg_out ) ; 
/*--generic_mii_ioctl--*/
int mdio45_probe ( struct mdio_if_info * mdio , int prtad ) ; 
/*--mdio45_probe--*/
int mdio_set_flag ( const struct mdio_if_info * mdio , int prtad , int devad , u16 addr , int mask , bool sense ) ; 
/*--mdio_set_flag--*/
int mdio45_links_ok ( const struct mdio_if_info * mdio , u32 mmd_mask ) ; 
/*--mdio45_links_ok--*/
int mdio45_nway_restart ( const struct mdio_if_info * mdio ) ; 
/*--mdio45_nway_restart--*/
void mdio45_ethtool_gset_npage ( const struct mdio_if_info * mdio , struct ethtool_cmd * ecmd , u32 npage_adv , u32 npage_lpa ) ; 
/*--mdio45_ethtool_gset_npage--*/
void mdio45_ethtool_spauseparam_an ( const struct mdio_if_info * mdio , const struct ethtool_pauseparam * ecmd ) ; 
/*--mdio45_ethtool_spauseparam_an--*/
int mdio_mii_ioctl ( const struct mdio_if_info * mdio , struct mii_ioctl_data * mii_data , int cmd ) ; 
/*--mdio_mii_ioctl--*/
int mii_phy_probe ( struct mii_phy * phy , int mii_id ) ; 
/*--mii_phy_probe--*/
int ei_open ( struct net_device * dev ) ; 
/*--ei_open--*/
int ei_close ( struct net_device * dev ) ; 
/*--ei_close--*/
netdev_tx_t ei_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--ei_start_xmit--*/
struct net_device_stats * ei_get_stats ( struct net_device * dev ) ; 
/*--ei_get_stats--*/
void ei_set_multicast_list ( struct net_device * dev ) ; 
/*--ei_set_multicast_list--*/
void ei_tx_timeout ( struct net_device * dev ) ; 
/*--ei_tx_timeout--*/
irqreturn_t ei_interrupt ( int irq , void * dev_id ) ; 
/*--ei_interrupt--*/
void ei_poll ( struct net_device * dev ) ; 
/*--ei_poll--*/
struct net_device * __alloc_ei_netdev ( int size ) ; 
/*--__alloc_ei_netdev--*/
void NS8390_init ( struct net_device * dev , int startp ) ; 
/*--NS8390_init--*/
struct cnic_eth_dev * bnx2_cnic_probe ( struct net_device * dev ) ; 
/*--bnx2_cnic_probe--*/
int cnic_register_driver ( int ulp_type , struct cnic_ulp_ops * ulp_ops ) ; 
/*--cnic_register_driver--*/
int cnic_unregister_driver ( int ulp_type ) ; 
/*--cnic_unregister_driver--*/
void bnx2x_reg_wr_ind ( struct bnx2x * bp , u32 addr , u32 val ) ; 
/*--bnx2x_reg_wr_ind--*/
void bnx2x_write_dmae ( struct bnx2x * bp , dma_addr_t dma_addr , u32 dst_addr , u32 len32 ) ; 
/*--bnx2x_write_dmae--*/
void bnx2x_read_dmae ( struct bnx2x * bp , u32 src_addr , u32 len32 ) ; 
/*--bnx2x_read_dmae--*/
void bnx2x_write_dmae_phys_len ( struct bnx2x * bp , dma_addr_t phys_addr , u32 addr , u32 len ) ; 
/*--bnx2x_write_dmae_phys_len--*/
int bnx2x_get_gpio ( struct bnx2x * bp , int gpio_num , u8 port ) ; 
/*--bnx2x_get_gpio--*/
int bnx2x_set_gpio ( struct bnx2x * bp , int gpio_num , u32 mode , u8 port ) ; 
/*--bnx2x_set_gpio--*/
int bnx2x_set_gpio_int ( struct bnx2x * bp , int gpio_num , u32 mode , u8 port ) ; 
/*--bnx2x_set_gpio_int--*/
u32 bnx2x_fw_command ( struct bnx2x * bp , u32 command ) ; 
/*--bnx2x_fw_command--*/
struct cnic_eth_dev * bnx2x_cnic_probe ( struct net_device * dev ) ; 
/*--bnx2x_cnic_probe--*/
void bnx2x_link_status_update ( struct link_params * params , struct link_vars * vars ) ; 
/*--bnx2x_link_status_update--*/
u8 bnx2x_cl45_write ( struct bnx2x * bp , u8 port , u32 ext_phy_type , u8 phy_addr , u8 devad , u16 reg , u16 val ) ; 
/*--bnx2x_cl45_write--*/
u8 bnx2x_cl45_read ( struct bnx2x * bp , u8 port , u32 ext_phy_type , u8 phy_addr , u8 devad , u16 reg , u16 * ret_val ) ; 
/*--bnx2x_cl45_read--*/
void bnx2x_ext_phy_hw_reset ( struct bnx2x * bp , u8 port ) ; 
/*--bnx2x_ext_phy_hw_reset--*/
u8 bnx2x_read_sfp_module_eeprom ( struct link_params * params , u16 addr , u8 byte_cnt , u8 * o_buf ) ; 
/*--bnx2x_read_sfp_module_eeprom--*/
void bnx2x_handle_module_detect_int ( struct link_params * params ) ; 
/*--bnx2x_handle_module_detect_int--*/
u8 bnx2x_get_ext_phy_fw_version ( struct link_params * params , u8 driver_loaded , u8 * version , u16 len ) ; 
/*--bnx2x_get_ext_phy_fw_version--*/
u8 bnx2x_override_led_value ( struct bnx2x * bp , u8 port , u32 led_idx , u32 value ) ; 
/*--bnx2x_override_led_value--*/
u8 bnx2x_set_led ( struct link_params * params , u8 mode , u32 speed ) ; 
/*--bnx2x_set_led--*/
u8 bnx2x_test_link ( struct link_params * params , struct link_vars * vars ) ; 
/*--bnx2x_test_link--*/
u8 bnx2x_phy_init ( struct link_params * params , struct link_vars * vars ) ; 
/*--bnx2x_phy_init--*/
u8 bnx2x_link_reset ( struct link_params * params , struct link_vars * vars , u8 reset_ext_phy ) ; 
/*--bnx2x_link_reset--*/
u8 bnx2x_link_update ( struct link_params * params , struct link_vars * vars ) ; 
/*--bnx2x_link_update--*/
u8 bnx2x_common_init_phy ( struct bnx2x * bp , u32 shmem_base ) ; 
/*--bnx2x_common_init_phy--*/
void bnx2x_sfx7101_sp_sw_reset ( struct bnx2x * bp , u8 port , u8 phy_addr ) ; 
/*--bnx2x_sfx7101_sp_sw_reset--*/
void ks8842_handle_rx ( struct net_device * netdev , struct ks8842_adapter * adapter ) ; 
/*--ks8842_handle_rx--*/
void ks8842_handle_tx ( struct net_device * netdev , struct ks8842_adapter * adapter ) ; 
/*--ks8842_handle_tx--*/
void ks8842_handle_rx_overrun ( struct net_device * netdev , struct ks8842_adapter * adapter ) ; 
/*--ks8842_handle_rx_overrun--*/
void ks8842_tasklet ( unsigned long arg ) ; 
/*--ks8842_tasklet--*/
unsigned int ks8851_eeprom_read ( struct net_device * dev , unsigned int addr ) ; 
/*--ks8851_eeprom_read--*/
void ks8851_eeprom_write ( struct net_device * dev , unsigned int op , unsigned int addr , unsigned int data ) ; 
/*--ks8851_eeprom_write--*/
void ks_enable_qmu ( struct ks_net * ks ) ; 
/*--ks_enable_qmu--*/
int register_pppox_proto ( int proto_num , struct pppox_proto * pp ) ; 
/*--register_pppox_proto--*/
void unregister_pppox_proto ( int proto_num ) ; 
/*--unregister_pppox_proto--*/
void pppox_unbind_sock ( struct sock * sk ) ; 
/*--pppox_unbind_sock--*/
int pppox_ioctl ( struct socket * sock , unsigned int cmd , unsigned long arg ) ; 
/*--pppox_ioctl--*/
netdev_tx_t macvlan_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--macvlan_start_xmit--*/
void macvlan_common_setup ( struct net_device * dev ) ; 
/*--macvlan_common_setup--*/
int macvlan_common_newlink ( struct net * src_net , struct net_device * dev , struct nlattr * tb [ ] , struct nlattr * data [ ] , int ( * receive ) ( struct sk_buff * skb ) , int ( * forward ) ( struct net_device * dev , struct sk_buff * skb ) ) ; 
/*--macvlan_common_newlink--*/
void macvlan_dellink ( struct net_device * dev , struct list_head * head ) ; 
/*--macvlan_dellink--*/
int macvlan_link_register ( struct rtnl_link_ops * ops ) ; 
/*--macvlan_link_register--*/
struct net_device * __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) de620_probe ( int unit ) ; 
/*--de620_probe--*/
u16 dnet_readw_mac ( struct dnet * bp , u16 reg ) ; 
/*--dnet_readw_mac--*/
void dnet_writew_mac ( struct dnet * bp , u16 reg , u16 val ) ; 
/*--dnet_writew_mac--*/
int dnet_phy_marvell_fixup ( struct phy_device * phydev ) ; 
/*--dnet_phy_marvell_fixup--*/
int parport_register_driver ( struct parport_driver * drv ) ; 
/*--parport_register_driver--*/
void parport_unregister_driver ( struct parport_driver * drv ) ; 
/*--parport_unregister_driver--*/
struct parport * parport_get_port ( struct parport * port ) ; 
/*--parport_get_port--*/
void parport_put_port ( struct parport * port ) ; 
/*--parport_put_port--*/
struct parport * parport_register_port ( unsigned long base , int irq , int dma , struct parport_operations * ops ) ; 
/*--parport_register_port--*/
void parport_announce_port ( struct parport * port ) ; 
/*--parport_announce_port--*/
void parport_remove_port ( struct parport * port ) ; 
/*--parport_remove_port--*/
struct pardevice * parport_register_device ( struct parport * port , const char * name , int ( * pf ) ( void * ) , void ( * kf ) ( void * ) , void ( * irq_func ) ( void * ) , int flags , void * handle ) ; 
/*--parport_register_device--*/
void parport_unregister_device ( struct pardevice * dev ) ; 
/*--parport_unregister_device--*/
struct parport * parport_find_number ( int number ) ; 
/*--parport_find_number--*/
struct parport * parport_find_base ( unsigned long base ) ; 
/*--parport_find_base--*/
int parport_claim ( struct pardevice * dev ) ; 
/*--parport_claim--*/
int parport_claim_or_block ( struct pardevice * dev ) ; 
/*--parport_claim_or_block--*/
void parport_release ( struct pardevice * dev ) ; 
/*--parport_release--*/
irqreturn_t parport_irq_handler ( int irq , void * dev_id ) ; 
/*--parport_irq_handler--*/
int parport_wait_event ( struct parport * port , signed long timeout ) ; 
/*--parport_wait_event--*/
int parport_poll_peripheral ( struct parport * port , unsigned char mask , unsigned char result , int usec ) ; 
/*--parport_poll_peripheral--*/
int parport_wait_peripheral ( struct parport * port , unsigned char mask , unsigned char result ) ; 
/*--parport_wait_peripheral--*/
int parport_negotiate ( struct parport * port , int mode ) ; 
/*--parport_negotiate--*/
void parport_ieee1284_interrupt ( void * handle ) ; 
/*--parport_ieee1284_interrupt--*/
ssize_t parport_write ( struct parport * port , const void * buffer , size_t len ) ; 
/*--parport_write--*/
ssize_t parport_read ( struct parport * port , void * buffer , size_t len ) ; 
/*--parport_read--*/
long parport_set_timeout ( struct pardevice * dev , long inactivity ) ; 
/*--parport_set_timeout--*/
size_t parport_ieee1284_write_compat ( struct parport * port , const void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_write_compat--*/
size_t parport_ieee1284_read_nibble ( struct parport * port , void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_read_nibble--*/
size_t parport_ieee1284_read_byte ( struct parport * port , void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_read_byte--*/
size_t parport_ieee1284_ecp_write_data ( struct parport * port , const void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_ecp_write_data--*/
size_t parport_ieee1284_ecp_read_data ( struct parport * port , void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_ecp_read_data--*/
size_t parport_ieee1284_ecp_write_addr ( struct parport * port , const void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_ecp_write_addr--*/
size_t parport_ieee1284_epp_write_data ( struct parport * port , const void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_epp_write_data--*/
size_t parport_ieee1284_epp_read_data ( struct parport * port , void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_epp_read_data--*/
size_t parport_ieee1284_epp_write_addr ( struct parport * port , const void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_epp_write_addr--*/
size_t parport_ieee1284_epp_read_addr ( struct parport * port , void * buffer , size_t len , int flags ) ; 
/*--parport_ieee1284_epp_read_addr--*/
int parport_proc_register ( struct parport * port ) ; 
/*--parport_proc_register--*/
int parport_proc_unregister ( struct parport * port ) ; 
/*--parport_proc_unregister--*/
int parport_device_proc_register ( struct pardevice * device ) ; 
/*--parport_device_proc_register--*/
int parport_device_proc_unregister ( struct pardevice * device ) ; 
/*--parport_device_proc_unregister--*/
int parport_daisy_init ( struct parport * port ) ; 
/*--parport_daisy_init--*/
void parport_daisy_fini ( struct parport * port ) ; 
/*--parport_daisy_fini--*/
struct pardevice * parport_open ( int devnum , const char * name ) ; 
/*--parport_open--*/
void parport_close ( struct pardevice * dev ) ; 
/*--parport_close--*/
void parport_daisy_deselect_all ( struct parport * port ) ; 
/*--parport_daisy_deselect_all--*/
int parport_daisy_select ( struct parport * port , int daisy , int mode ) ; 
/*--parport_daisy_select--*/
ssize_t parport_device_id ( int devnum , char * buffer , size_t count ) ; 
/*--parport_device_id--*/
struct parport * parport_pc_probe_port ( unsigned long int base , unsigned long int base_hi , int irq , int dma , struct device * dev , int irqflags ) ; 
/*--parport_pc_probe_port--*/
void parport_pc_unregister_port ( struct parport * p ) ; 
/*--parport_pc_unregister_port--*/
int acpiphp_register_attention ( struct acpiphp_attention_info * info ) ; 
/*--acpiphp_register_attention--*/
int acpiphp_unregister_attention ( struct acpiphp_attention_info * info ) ; 
/*--acpiphp_unregister_attention--*/
int acpiphp_register_hotplug_slot ( struct acpiphp_slot * acpiphp_slot ) ; 
/*--acpiphp_register_hotplug_slot--*/
void acpiphp_unregister_hotplug_slot ( struct acpiphp_slot * acpiphp_slot ) ; 
/*--acpiphp_unregister_hotplug_slot--*/
int acpiphp_eject_slot ( struct acpiphp_slot * slot ) ; 
/*--acpiphp_eject_slot--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) acpiphp_glue_init ( void ) ; 
/*--acpiphp_glue_init--*/
void acpiphp_glue_exit ( void ) ; 
/*--acpiphp_glue_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) acpiphp_get_num_slots ( void ) ; 
/*--acpiphp_get_num_slots--*/
int acpiphp_enable_slot ( struct acpiphp_slot * slot ) ; 
/*--acpiphp_enable_slot--*/
int acpiphp_disable_slot ( struct acpiphp_slot * slot ) ; 
/*--acpiphp_disable_slot--*/
u8 acpiphp_get_power_status ( struct acpiphp_slot * slot ) ; 
/*--acpiphp_get_power_status--*/
u8 acpiphp_get_latch_status ( struct acpiphp_slot * slot ) ; 
/*--acpiphp_get_latch_status--*/
u8 acpiphp_get_adapter_status ( struct acpiphp_slot * slot ) ; 
/*--acpiphp_get_adapter_status--*/
void cleanup_slots ( struct controller * ctrl ) ; 
/*--cleanup_slots--*/
u8 shpchp_handle_attention_button ( u8 hp_slot , struct controller * ctrl ) ; 
/*--shpchp_handle_attention_button--*/
u8 shpchp_handle_switch_change ( u8 hp_slot , struct controller * ctrl ) ; 
/*--shpchp_handle_switch_change--*/
u8 shpchp_handle_presence_change ( u8 hp_slot , struct controller * ctrl ) ; 
/*--shpchp_handle_presence_change--*/
u8 shpchp_handle_power_fault ( u8 hp_slot , struct controller * ctrl ) ; 
/*--shpchp_handle_power_fault--*/
void shpchp_queue_pushbutton_work ( struct work_struct * work ) ; 
/*--shpchp_queue_pushbutton_work--*/
int shpchp_sysfs_enable_slot ( struct slot * p_slot ) ; 
/*--shpchp_sysfs_enable_slot--*/
int shpchp_sysfs_disable_slot ( struct slot * p_slot ) ; 
/*--shpchp_sysfs_disable_slot--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( noinline ) ) shpchp_configure_device ( struct slot * p_slot ) ; 
/*--shpchp_configure_device--*/
int shpchp_unconfigure_device ( struct slot * p_slot ) ; 
/*--shpchp_unconfigure_device--*/
int shpchp_create_ctrl_files ( struct controller * ctrl ) ; 
/*--shpchp_create_ctrl_files--*/
void shpchp_remove_ctrl_files ( struct controller * ctrl ) ; 
/*--shpchp_remove_ctrl_files--*/
int shpc_init ( struct controller * ctrl , struct pci_dev * pdev ) ; 
/*--shpc_init--*/
int pcmcia_register_driver ( struct pcmcia_driver * driver ) ; 
/*--pcmcia_register_driver--*/
void pcmcia_unregister_driver ( struct pcmcia_driver * driver ) ; 
/*--pcmcia_unregister_driver--*/
struct pcmcia_device * pcmcia_get_dev ( struct pcmcia_device * p_dev ) ; 
/*--pcmcia_get_dev--*/
void pcmcia_put_dev ( struct pcmcia_device * p_dev ) ; 
/*--pcmcia_put_dev--*/
struct pcmcia_device * pcmcia_device_add ( struct pcmcia_socket * s , unsigned int function ) ; 
/*--pcmcia_device_add--*/
struct pcmcia_device * pcmcia_dev_present ( struct pcmcia_device * _p_dev ) ; 
/*--pcmcia_dev_present--*/
int pcmcia_validate_mem ( struct pcmcia_socket * s ) ; 
/*--pcmcia_validate_mem--*/
struct resource * pcmcia_find_mem_region ( u_long base , u_long num , u_long align , int low , struct pcmcia_socket * s ) ; 
/*--pcmcia_find_mem_region--*/
int pcmcia_access_configuration_register ( struct pcmcia_device * p_dev , conf_reg_t * reg ) ; 
/*--pcmcia_access_configuration_register--*/
int pcmcia_map_mem_page ( struct pcmcia_device * p_dev , window_handle_t wh , memreq_t * req ) ; 
/*--pcmcia_map_mem_page--*/
int pcmcia_modify_configuration ( struct pcmcia_device * p_dev , modconf_t * mod ) ; 
/*--pcmcia_modify_configuration--*/
int pcmcia_release_configuration ( struct pcmcia_device * p_dev ) ; 
/*--pcmcia_release_configuration--*/
int pcmcia_release_window ( struct pcmcia_device * p_dev , window_handle_t wh ) ; 
/*--pcmcia_release_window--*/
int pcmcia_request_configuration ( struct pcmcia_device * p_dev , config_req_t * req ) ; 
/*--pcmcia_request_configuration--*/
int pcmcia_request_io ( struct pcmcia_device * p_dev , io_req_t * req ) ; 
/*--pcmcia_request_io--*/
int pcmcia_request_irq ( struct pcmcia_device * p_dev , irq_handler_t handler ) ; 
/*--pcmcia_request_irq--*/
int __pcmcia_request_exclusive_irq ( struct pcmcia_device * p_dev , irq_handler_t handler ) ; 
/*--__pcmcia_request_exclusive_irq--*/
void pcmcia_cleanup_irq ( struct pcmcia_socket * s ) ; 
/*--pcmcia_cleanup_irq--*/
int pcmcia_setup_irq ( struct pcmcia_device * p_dev ) ; 
/*--pcmcia_setup_irq--*/
int pcmcia_request_window ( struct pcmcia_device * p_dev , win_req_t * req , window_handle_t * wh ) ; 
/*--pcmcia_request_window--*/
void pcmcia_disable_device ( struct pcmcia_device * p_dev ) ; 
/*--pcmcia_disable_device--*/
void release_cis_mem ( struct pcmcia_socket * s ) ; 
/*--release_cis_mem--*/
int pcmcia_read_cis_mem ( struct pcmcia_socket * s , int attr , u_int addr , u_int len , void * ptr ) ; 
/*--pcmcia_read_cis_mem--*/
void pcmcia_write_cis_mem ( struct pcmcia_socket * s , int attr , u_int addr , u_int len , void * ptr ) ; 
/*--pcmcia_write_cis_mem--*/
void destroy_cis_cache ( struct pcmcia_socket * s ) ; 
/*--destroy_cis_cache--*/
int verify_cis_cache ( struct pcmcia_socket * s ) ; 
/*--verify_cis_cache--*/
int pcmcia_replace_cis ( struct pcmcia_socket * s , const u8 * data , const size_t len ) ; 
/*--pcmcia_replace_cis--*/
int pccard_get_first_tuple ( struct pcmcia_socket * s , unsigned int function , tuple_t * tuple ) ; 
/*--pccard_get_first_tuple--*/
int pccard_get_next_tuple ( struct pcmcia_socket * s , unsigned int function , tuple_t * tuple ) ; 
/*--pccard_get_next_tuple--*/
int pccard_get_tuple_data ( struct pcmcia_socket * s , tuple_t * tuple ) ; 
/*--pccard_get_tuple_data--*/
int pcmcia_parse_tuple ( tuple_t * tuple , cisparse_t * parse ) ; 
/*--pcmcia_parse_tuple--*/
int pccard_validate_cis ( struct pcmcia_socket * s , unsigned int * info ) ; 
/*--pccard_validate_cis--*/
int pccard_read_tuple ( struct pcmcia_socket * s , unsigned int function , cisdata_t code , void * parse ) ; 
/*--pccard_read_tuple--*/
int pccard_loop_tuple ( struct pcmcia_socket * s , unsigned int function , cisdata_t code , cisparse_t * parse , void * priv_data , int ( * loop_tuple ) ( tuple_t * tuple , cisparse_t * parse , void * priv_data ) ) ; 
/*--pccard_loop_tuple--*/
int pcmcia_loop_config ( struct pcmcia_device * p_dev , int ( * conf_check ) ( struct pcmcia_device * p_dev , cistpl_cftable_entry_t * cfg , cistpl_cftable_entry_t * dflt , unsigned int vcc , void * priv_data ) , void * priv_data ) ; 
/*--pcmcia_loop_config--*/
int pcmcia_loop_tuple ( struct pcmcia_device * p_dev , cisdata_t code , int ( * loop_tuple ) ( struct pcmcia_device * p_dev , tuple_t * tuple , void * priv_data ) , void * priv_data ) ; 
/*--pcmcia_loop_tuple--*/
size_t pcmcia_get_tuple ( struct pcmcia_device * p_dev , cisdata_t code , unsigned char * * buf ) ; 
/*--pcmcia_get_tuple--*/
int pcmcia_get_mac_from_cis ( struct pcmcia_device * p_dev , struct net_device * dev ) ; 
/*--pcmcia_get_mac_from_cis--*/
struct pcmcia_socket * pcmcia_get_socket ( struct pcmcia_socket * skt ) ; 
/*--pcmcia_get_socket--*/
void pcmcia_put_socket ( struct pcmcia_socket * skt ) ; 
/*--pcmcia_put_socket--*/
int pcmcia_register_socket ( struct pcmcia_socket * socket ) ; 
/*--pcmcia_register_socket--*/
void pcmcia_unregister_socket ( struct pcmcia_socket * socket ) ; 
/*--pcmcia_unregister_socket--*/
struct pcmcia_socket * pcmcia_get_socket_by_nr ( unsigned int nr ) ; 
/*--pcmcia_get_socket_by_nr--*/
void pcmcia_parse_events ( struct pcmcia_socket * s , u_int events ) ; 
/*--pcmcia_parse_events--*/
void pcmcia_parse_uevents ( struct pcmcia_socket * s , u_int events ) ; 
/*--pcmcia_parse_uevents--*/
int pccard_register_pcmcia ( struct pcmcia_socket * s , struct pcmcia_callback * c ) ; 
/*--pccard_register_pcmcia--*/
int pcmcia_reset_card ( struct pcmcia_socket * skt ) ; 
/*--pcmcia_reset_card--*/
int pccard_sysfs_add_socket ( struct device * dev ) ; 
/*--pccard_sysfs_add_socket--*/
void pccard_sysfs_remove_socket ( struct device * dev ) ; 
/*--pccard_sysfs_remove_socket--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( noinline ) ) cb_alloc ( struct pcmcia_socket * s ) ; 
/*--cb_alloc--*/
void cb_free ( struct pcmcia_socket * s ) ; 
/*--cb_free--*/
int static_init ( struct pcmcia_socket * s ) ; 
/*--static_init--*/
struct resource * pcmcia_make_resource ( unsigned long start , unsigned long end , int flags , const char * name ) ; 
/*--pcmcia_make_resource--*/
bool dell_laptop_i8042_filter ( unsigned char data , unsigned char str , struct serio * port ) ; 
/*--dell_laptop_i8042_filter--*/
int sony_pic_camera_command ( int command , u8 value ) ; 
/*--sony_pic_camera_command--*/
int pcf50633_mbc_usb_curlim_set ( struct pcf50633 * pcf , int ma ) ; 
/*--pcf50633_mbc_usb_curlim_set--*/
int pcf50633_mbc_get_status ( struct pcf50633 * pcf ) ; 
/*--pcf50633_mbc_get_status--*/
int pcf50633_mbc_get_usb_online_status ( struct pcf50633 * pcf ) ; 
/*--pcf50633_mbc_get_usb_online_status--*/
int pps_register_cdev ( struct pps_device * pps ) ; 
/*--pps_register_cdev--*/
void pps_unregister_cdev ( struct pps_device * pps ) ; 
/*--pps_unregister_cdev--*/
struct pps_device * pps_get_source ( int source ) ; 
/*--pps_get_source--*/
void pps_put_source ( struct pps_device * pps ) ; 
/*--pps_put_source--*/
int pps_register_source ( struct pps_source_info * info , int default_params ) ; 
/*--pps_register_source--*/
void pps_unregister_source ( int source ) ; 
/*--pps_unregister_source--*/
void pps_event ( int source , struct pps_ktime * ts , int event , void * data ) ; 
/*--pps_event--*/
int wm8400_register_regulator ( struct device * dev , int reg , struct regulator_init_data * initdata ) ; 
/*--wm8400_register_regulator--*/
int mc13783_powermisc_rmw ( struct mc13783_regulator_priv * priv , u32 mask , u32 val ) ; 
/*--mc13783_powermisc_rmw--*/
struct aac_driver_ident * aac_get_driver_ident ( int devtype ) ; 
/*--aac_get_driver_ident--*/
ssize_t aac_get_serial_number ( struct device * device , char * buf ) ; 
/*--aac_get_serial_number--*/
int aac_get_config_status ( struct aac_dev * dev , int commit_flag ) ; 
/*--aac_get_config_status--*/
int aac_get_containers ( struct aac_dev * dev ) ; 
/*--aac_get_containers--*/
int aac_probe_container ( struct aac_dev * dev , int cid ) ; 
/*--aac_probe_container--*/
char * get_container_type ( unsigned tindex ) ; 
/*--get_container_type--*/
int aac_get_adapter_info ( struct aac_dev * dev ) ; 
/*--aac_get_adapter_info--*/
int aac_scsi_cmd ( struct scsi_cmnd * scsicmd ) ; 
/*--aac_scsi_cmd--*/
int aac_dev_ioctl ( struct aac_dev * dev , int cmd , void * arg ) ; 
/*--aac_dev_ioctl--*/
int aac_close_fib_context ( struct aac_dev * dev , struct aac_fib_context * fibctx ) ; 
/*--aac_close_fib_context--*/
int aac_do_ioctl ( struct aac_dev * dev , int cmd , void * arg ) ; 
/*--aac_do_ioctl--*/
int aac_send_shutdown ( struct aac_dev * dev ) ; 
/*--aac_send_shutdown--*/
struct aac_dev * aac_init_adapter ( struct aac_dev * dev ) ; 
/*--aac_init_adapter--*/
void aac_fib_map_free ( struct aac_dev * dev ) ; 
/*--aac_fib_map_free--*/
int aac_fib_setup ( struct aac_dev * dev ) ; 
/*--aac_fib_setup--*/
struct fib * aac_fib_alloc ( struct aac_dev * dev ) ; 
/*--aac_fib_alloc--*/
void aac_fib_free ( struct fib * fibptr ) ; 
/*--aac_fib_free--*/
void aac_fib_init ( struct fib * fibptr ) ; 
/*--aac_fib_init--*/
int aac_queue_get ( struct aac_dev * dev , u32 * index , u32 qid , struct hw_fib * hw_fib , int wait , struct fib * fibptr , unsigned long * nonotify ) ; 
/*--aac_queue_get--*/
int aac_fib_send ( u16 command , struct fib * fibptr , unsigned long size , int priority , int wait , int reply , fib_callback callback , void * callback_data ) ; 
/*--aac_fib_send--*/
int aac_consumer_get ( struct aac_dev * dev , struct aac_queue * q , struct aac_entry * * entry ) ; 
/*--aac_consumer_get--*/
void aac_consumer_free ( struct aac_dev * dev , struct aac_queue * q , u32 qid ) ; 
/*--aac_consumer_free--*/
int aac_fib_adapter_complete ( struct fib * fibptr , unsigned short size ) ; 
/*--aac_fib_adapter_complete--*/
int aac_fib_complete ( struct fib * fibptr ) ; 
/*--aac_fib_complete--*/
void aac_printf ( struct aac_dev * dev , u32 val ) ; 
/*--aac_printf--*/
int aac_reset_adapter ( struct aac_dev * aac , int forced ) ; 
/*--aac_reset_adapter--*/
int aac_check_health ( struct aac_dev * aac ) ; 
/*--aac_check_health--*/
int aac_command_thread ( void * data ) ; 
/*--aac_command_thread--*/
unsigned int aac_response_normal ( struct aac_queue * q ) ; 
/*--aac_response_normal--*/
unsigned int aac_command_normal ( struct aac_queue * q ) ; 
/*--aac_command_normal--*/
unsigned int aac_intr_normal ( struct aac_dev * dev , u32 index ) ; 
/*--aac_intr_normal--*/
int aac_rx_deliver_producer ( struct fib * fib ) ; 
/*--aac_rx_deliver_producer--*/
int aac_rx_select_comm ( struct aac_dev * dev , int comm ) ; 
/*--aac_rx_select_comm--*/
int _aac_rx_init ( struct aac_dev * dev ) ; 
/*--_aac_rx_init--*/
int aac_rx_init ( struct aac_dev * dev ) ; 
/*--aac_rx_init--*/
int aac_sa_init ( struct aac_dev * dev ) ; 
/*--aac_sa_init--*/
int aac_rkt_init ( struct aac_dev * dev ) ; 
/*--aac_rkt_init--*/
int aac_nark_init ( struct aac_dev * dev ) ; 
/*--aac_nark_init--*/
void ahd_set_modes ( struct ahd_softc * ahd , ahd_mode src , ahd_mode dst ) ; 
/*--ahd_set_modes--*/
ahd_mode_state ahd_save_modes ( struct ahd_softc * ahd ) ; 
/*--ahd_save_modes--*/
void ahd_restore_modes ( struct ahd_softc * ahd , ahd_mode_state state ) ; 
/*--ahd_restore_modes--*/
int ahd_is_paused ( struct ahd_softc * ahd ) ; 
/*--ahd_is_paused--*/
void ahd_pause ( struct ahd_softc * ahd ) ; 
/*--ahd_pause--*/
void ahd_unpause ( struct ahd_softc * ahd ) ; 
/*--ahd_unpause--*/
void * ahd_sg_setup ( struct ahd_softc * ahd , struct scb * scb , void * sgptr , dma_addr_t addr , bus_size_t len , int last ) ; 
/*--ahd_sg_setup--*/
void ahd_sync_sglist ( struct ahd_softc * ahd , struct scb * scb , int op ) ; 
/*--ahd_sync_sglist--*/
struct ahd_initiator_tinfo * ahd_fetch_transinfo ( struct ahd_softc * ahd , char channel , u_int our_id , u_int remote_id , struct ahd_tmode_tstate * * tstate ) ; 
/*--ahd_fetch_transinfo--*/
uint16_t ahd_inw ( struct ahd_softc * ahd , u_int port ) ; 
/*--ahd_inw--*/
void ahd_outw ( struct ahd_softc * ahd , u_int port , u_int value ) ; 
/*--ahd_outw--*/
uint32_t ahd_inl ( struct ahd_softc * ahd , u_int port ) ; 
/*--ahd_inl--*/
void ahd_outl ( struct ahd_softc * ahd , u_int port , uint32_t value ) ; 
/*--ahd_outl--*/
uint64_t ahd_inq ( struct ahd_softc * ahd , u_int port ) ; 
/*--ahd_inq--*/
void ahd_outq ( struct ahd_softc * ahd , u_int port , uint64_t value ) ; 
/*--ahd_outq--*/
u_int ahd_get_scbptr ( struct ahd_softc * ahd ) ; 
/*--ahd_get_scbptr--*/
void ahd_set_scbptr ( struct ahd_softc * ahd , u_int scbptr ) ; 
/*--ahd_set_scbptr--*/
u_int ahd_inb_scbram ( struct ahd_softc * ahd , u_int offset ) ; 
/*--ahd_inb_scbram--*/
u_int ahd_inw_scbram ( struct ahd_softc * ahd , u_int offset ) ; 
/*--ahd_inw_scbram--*/
struct scb * ahd_lookup_scb ( struct ahd_softc * ahd , u_int tag ) ; 
/*--ahd_lookup_scb--*/
void ahd_queue_scb ( struct ahd_softc * ahd , struct scb * scb ) ; 
/*--ahd_queue_scb--*/
int ahd_intr ( struct ahd_softc * ahd ) ; 
/*--ahd_intr--*/
void ahd_find_syncrate ( struct ahd_softc * ahd , u_int * period , u_int * ppr_options , u_int maxsync ) ; 
/*--ahd_find_syncrate--*/
int ahd_update_neg_request ( struct ahd_softc * ahd , struct ahd_devinfo * devinfo , struct ahd_tmode_tstate * tstate , struct ahd_initiator_tinfo * tinfo , ahd_neg_type neg_type ) ; 
/*--ahd_update_neg_request--*/
void ahd_set_syncrate ( struct ahd_softc * ahd , struct ahd_devinfo * devinfo , u_int period , u_int offset , u_int ppr_options , u_int type , int paused ) ; 
/*--ahd_set_syncrate--*/
void ahd_set_width ( struct ahd_softc * ahd , struct ahd_devinfo * devinfo , u_int width , u_int type , int paused ) ; 
/*--ahd_set_width--*/
void ahd_print_devinfo ( struct ahd_softc * ahd , struct ahd_devinfo * devinfo ) ; 
/*--ahd_print_devinfo--*/
void ahd_compile_devinfo ( struct ahd_devinfo * devinfo , u_int our_id , u_int target , u_int lun , char channel , role_t role ) ; 
/*--ahd_compile_devinfo--*/
struct ahd_softc * ahd_alloc ( void * platform_arg , char * name ) ; 
/*--ahd_alloc--*/
int ahd_softc_init ( struct ahd_softc * ahd ) ; 
/*--ahd_softc_init--*/
void ahd_set_unit ( struct ahd_softc * ahd , int unit ) ; 
/*--ahd_set_unit--*/
void ahd_set_name ( struct ahd_softc * ahd , char * name ) ; 
/*--ahd_set_name--*/
void ahd_free ( struct ahd_softc * ahd ) ; 
/*--ahd_free--*/
int ahd_reset ( struct ahd_softc * ahd , int reinit ) ; 
/*--ahd_reset--*/
struct scb * ahd_get_scb ( struct ahd_softc * ahd , u_int col_idx ) ; 
/*--ahd_get_scb--*/
void ahd_free_scb ( struct ahd_softc * ahd , struct scb * scb ) ; 
/*--ahd_free_scb--*/
void ahd_controller_info ( struct ahd_softc * ahd , char * buf ) ; 
/*--ahd_controller_info--*/
int ahd_init ( struct ahd_softc * ahd ) ; 
/*--ahd_init--*/
int ahd_default_config ( struct ahd_softc * ahd ) ; 
/*--ahd_default_config--*/
int ahd_parse_cfgdata ( struct ahd_softc * ahd , struct seeprom_config * sc ) ; 
/*--ahd_parse_cfgdata--*/
int ahd_parse_vpddata ( struct ahd_softc * ahd , struct vpd_config * vpd ) ; 
/*--ahd_parse_vpddata--*/
void ahd_intr_enable ( struct ahd_softc * ahd , int enable ) ; 
/*--ahd_intr_enable--*/
void ahd_pause_and_flushwork ( struct ahd_softc * ahd ) ; 
/*--ahd_pause_and_flushwork--*/
int ahd_suspend ( struct ahd_softc * ahd ) ; 
/*--ahd_suspend--*/
void ahd_resume ( struct ahd_softc * ahd ) ; 
/*--ahd_resume--*/
void ahd_qinfifo_requeue_tail ( struct ahd_softc * ahd , struct scb * scb ) ; 
/*--ahd_qinfifo_requeue_tail--*/
int ahd_search_qinfifo ( struct ahd_softc * ahd , int target , char channel , int lun , u_int tag , role_t role , uint32_t status , ahd_search_action action ) ; 
/*--ahd_search_qinfifo--*/
int ahd_reset_channel ( struct ahd_softc * ahd , char channel , int initiate_reset ) ; 
/*--ahd_reset_channel--*/
int ahd_print_register ( const ahd_reg_parse_entry_t * table , u_int num_entries , const char * name , u_int address , u_int value , u_int * cur_column , u_int wrap_point ) ; 
/*--ahd_print_register--*/
void ahd_dump_card_state ( struct ahd_softc * ahd ) ; 
/*--ahd_dump_card_state--*/
int ahd_read_seeprom ( struct ahd_softc * ahd , uint16_t * buf , u_int start_addr , u_int count , int bytestream ) ; 
/*--ahd_read_seeprom--*/
int ahd_write_seeprom ( struct ahd_softc * ahd , uint16_t * buf , u_int start_addr , u_int count ) ; 
/*--ahd_write_seeprom--*/
int ahd_verify_cksum ( struct seeprom_config * sc ) ; 
/*--ahd_verify_cksum--*/
int ahd_acquire_seeprom ( struct ahd_softc * ahd ) ; 
/*--ahd_acquire_seeprom--*/
void ahd_release_seeprom ( struct ahd_softc * ahd ) ; 
/*--ahd_release_seeprom--*/
int ahd_write_flexport ( struct ahd_softc * ahd , u_int addr , u_int value ) ; 
/*--ahd_write_flexport--*/
int ahd_read_flexport ( struct ahd_softc * ahd , u_int addr , uint8_t * value ) ; 
/*--ahd_read_flexport--*/
const struct ahd_pci_identity * ahd_find_pci_device ( ahd_dev_softc_t pci ) ; 
/*--ahd_find_pci_device--*/
int ahd_pci_config ( struct ahd_softc * ahd , const struct ahd_pci_identity * entry ) ; 
/*--ahd_pci_config--*/
void ahd_pci_suspend ( struct ahd_softc * ahd ) ; 
/*--ahd_pci_suspend--*/
void ahd_pci_resume ( struct ahd_softc * ahd ) ; 
/*--ahd_pci_resume--*/
int ahd_pci_test_register_access ( struct ahd_softc * ahd ) ; 
/*--ahd_pci_test_register_access--*/
int ahd_intstat_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_intstat_print--*/
int ahd_hs_mailbox_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_hs_mailbox_print--*/
int ahd_seqintstat_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_seqintstat_print--*/
int ahd_intctl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_intctl_print--*/
int ahd_dfcntrl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_dfcntrl_print--*/
int ahd_dfstatus_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_dfstatus_print--*/
int ahd_sg_cache_shadow_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_sg_cache_shadow_print--*/
int ahd_scsiseq0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_scsiseq0_print--*/
int ahd_scsiseq1_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_scsiseq1_print--*/
int ahd_dffstat_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_dffstat_print--*/
int ahd_scsisigi_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_scsisigi_print--*/
int ahd_scsiphase_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_scsiphase_print--*/
int ahd_scsibus_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_scsibus_print--*/
int ahd_selid_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_selid_print--*/
int ahd_sstat0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_sstat0_print--*/
int ahd_simode0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_simode0_print--*/
int ahd_sstat1_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_sstat1_print--*/
int ahd_sstat2_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_sstat2_print--*/
int ahd_perrdiag_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_perrdiag_print--*/
int ahd_soffcnt_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_soffcnt_print--*/
int ahd_lqistat0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_lqistat0_print--*/
int ahd_lqistat1_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_lqistat1_print--*/
int ahd_lqistat2_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_lqistat2_print--*/
int ahd_sstat3_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_sstat3_print--*/
int ahd_lqostat0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_lqostat0_print--*/
int ahd_lqostat1_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_lqostat1_print--*/
int ahd_lqostat2_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_lqostat2_print--*/
int ahd_simode1_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_simode1_print--*/
int ahd_dffsxfrctl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_dffsxfrctl_print--*/
int ahd_seqintsrc_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_seqintsrc_print--*/
int ahd_seqimode_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_seqimode_print--*/
int ahd_mdffstat_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_mdffstat_print--*/
int ahd_seloid_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_seloid_print--*/
int ahd_sg_state_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_sg_state_print--*/
int ahd_ccscbctl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_ccscbctl_print--*/
int ahd_ccsgctl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_ccsgctl_print--*/
int ahd_seqctl0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_seqctl0_print--*/
int ahd_seqintctl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_seqintctl_print--*/
int ahd_sram_base_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_sram_base_print--*/
int ahd_qfreeze_count_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_qfreeze_count_print--*/
int ahd_kernel_qfreeze_count_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_kernel_qfreeze_count_print--*/
int ahd_saved_mode_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_saved_mode_print--*/
int ahd_seq_flags_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_seq_flags_print--*/
int ahd_lastphase_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_lastphase_print--*/
int ahd_seq_flags2_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_seq_flags2_print--*/
int ahd_mk_message_scb_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_mk_message_scb_print--*/
int ahd_mk_message_scsiid_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_mk_message_scsiid_print--*/
int ahd_scb_base_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_scb_base_print--*/
int ahd_scb_control_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_scb_control_print--*/
int ahd_scb_scsiid_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahd_scb_scsiid_print--*/
void ahd_print_path ( struct ahd_softc * ahd , struct scb * scb ) ; 
/*--ahd_print_path--*/
void ahd_delay ( long usec ) ; 
/*--ahd_delay--*/
uint8_t ahd_inb ( struct ahd_softc * ahd , long port ) ; 
/*--ahd_inb--*/
void ahd_outb ( struct ahd_softc * ahd , long port , uint8_t val ) ; 
/*--ahd_outb--*/
void ahd_outw_atomic ( struct ahd_softc * ahd , long port , uint16_t val ) ; 
/*--ahd_outw_atomic--*/
void ahd_outsb ( struct ahd_softc * ahd , long port , uint8_t * array , int count ) ; 
/*--ahd_outsb--*/
void ahd_insb ( struct ahd_softc * ahd , long port , uint8_t * array , int count ) ; 
/*--ahd_insb--*/
uint32_t ahd_pci_read_config ( ahd_dev_softc_t pci , int reg , int width ) ; 
/*--ahd_pci_read_config--*/
void ahd_pci_write_config ( ahd_dev_softc_t pci , int reg , uint32_t value , int width ) ; 
/*--ahd_pci_write_config--*/
int ahd_dma_tag_create ( struct ahd_softc * ahd , bus_dma_tag_t parent , bus_size_t alignment , bus_size_t boundary , dma_addr_t lowaddr , dma_addr_t highaddr , bus_dma_filter_t * filter , void * filterarg , bus_size_t maxsize , int nsegments , bus_size_t maxsegsz , int flags , bus_dma_tag_t * ret_tag ) ; 
/*--ahd_dma_tag_create--*/
void ahd_dma_tag_destroy ( struct ahd_softc * ahd , bus_dma_tag_t dmat ) ; 
/*--ahd_dma_tag_destroy--*/
int ahd_dmamem_alloc ( struct ahd_softc * ahd , bus_dma_tag_t dmat , void * * vaddr , int flags , bus_dmamap_t * mapp ) ; 
/*--ahd_dmamem_alloc--*/
void ahd_dmamem_free ( struct ahd_softc * ahd , bus_dma_tag_t dmat , void * vaddr , bus_dmamap_t map ) ; 
/*--ahd_dmamem_free--*/
int ahd_dmamap_load ( struct ahd_softc * ahd , bus_dma_tag_t dmat , bus_dmamap_t map , void * buf , bus_size_t buflen , bus_dmamap_callback_t * cb , void * cb_arg , int flags ) ; 
/*--ahd_dmamap_load--*/
void ahd_dmamap_destroy ( struct ahd_softc * ahd , bus_dma_tag_t dmat , bus_dmamap_t map ) ; 
/*--ahd_dmamap_destroy--*/
int ahd_dmamap_unload ( struct ahd_softc * ahd , bus_dma_tag_t dmat , bus_dmamap_t map ) ; 
/*--ahd_dmamap_unload--*/
int ahd_linux_register_host ( struct ahd_softc * ahd , struct scsi_host_template * template ) ; 
/*--ahd_linux_register_host--*/
int ahd_platform_alloc ( struct ahd_softc * ahd , void * platform_arg ) ; 
/*--ahd_platform_alloc--*/
void ahd_platform_free ( struct ahd_softc * ahd ) ; 
/*--ahd_platform_free--*/
void ahd_platform_init ( struct ahd_softc * ahd ) ; 
/*--ahd_platform_init--*/
void ahd_platform_freeze_devq ( struct ahd_softc * ahd , struct scb * scb ) ; 
/*--ahd_platform_freeze_devq--*/
void ahd_platform_set_tags ( struct ahd_softc * ahd , struct scsi_device * sdev , struct ahd_devinfo * devinfo , ahd_queue_alg alg ) ; 
/*--ahd_platform_set_tags--*/
int ahd_platform_abort_scbs ( struct ahd_softc * ahd , int target , char channel , int lun , u_int tag , role_t role , uint32_t status ) ; 
/*--ahd_platform_abort_scbs--*/
irqreturn_t ahd_linux_isr ( int irq , void * dev_id ) ; 
/*--ahd_linux_isr--*/
void ahd_send_async ( struct ahd_softc * ahd , char channel , u_int target , u_int lun , ac_code code ) ; 
/*--ahd_send_async--*/
void ahd_done ( struct ahd_softc * ahd , struct scb * scb ) ; 
/*--ahd_done--*/
int ahd_linux_proc_info ( struct Scsi_Host * shost , char * buffer , char * * start , off_t offset , int length , int inout ) ; 
/*--ahd_linux_proc_info--*/
int ahd_linux_pci_init ( void ) ; 
/*--ahd_linux_pci_init--*/
void ahd_linux_pci_exit ( void ) ; 
/*--ahd_linux_pci_exit--*/
int ahd_pci_map_registers ( struct ahd_softc * ahd ) ; 
/*--ahd_pci_map_registers--*/
int ahd_pci_map_int ( struct ahd_softc * ahd ) ; 
/*--ahd_pci_map_int--*/
void ahd_power_state_change ( struct ahd_softc * ahd , ahd_power_state new_state ) ; 
/*--ahd_power_state_change--*/
int ahc_is_paused ( struct ahc_softc * ahc ) ; 
/*--ahc_is_paused--*/
void ahc_pause ( struct ahc_softc * ahc ) ; 
/*--ahc_pause--*/
void ahc_unpause ( struct ahc_softc * ahc ) ; 
/*--ahc_unpause--*/
void ahc_sync_sglist ( struct ahc_softc * ahc , struct scb * scb , int op ) ; 
/*--ahc_sync_sglist--*/
struct ahc_initiator_tinfo * ahc_fetch_transinfo ( struct ahc_softc * ahc , char channel , u_int our_id , u_int remote_id , struct ahc_tmode_tstate * * tstate ) ; 
/*--ahc_fetch_transinfo--*/
uint16_t ahc_inw ( struct ahc_softc * ahc , u_int port ) ; 
/*--ahc_inw--*/
void ahc_outw ( struct ahc_softc * ahc , u_int port , u_int value ) ; 
/*--ahc_outw--*/
uint32_t ahc_inl ( struct ahc_softc * ahc , u_int port ) ; 
/*--ahc_inl--*/
void ahc_outl ( struct ahc_softc * ahc , u_int port , uint32_t value ) ; 
/*--ahc_outl--*/
uint64_t ahc_inq ( struct ahc_softc * ahc , u_int port ) ; 
/*--ahc_inq--*/
void ahc_outq ( struct ahc_softc * ahc , u_int port , uint64_t value ) ; 
/*--ahc_outq--*/
struct scb * ahc_get_scb ( struct ahc_softc * ahc ) ; 
/*--ahc_get_scb--*/
void ahc_free_scb ( struct ahc_softc * ahc , struct scb * scb ) ; 
/*--ahc_free_scb--*/
struct scb * ahc_lookup_scb ( struct ahc_softc * ahc , u_int tag ) ; 
/*--ahc_lookup_scb--*/
void ahc_queue_scb ( struct ahc_softc * ahc , struct scb * scb ) ; 
/*--ahc_queue_scb--*/
struct scsi_sense_data * ahc_get_sense_buf ( struct ahc_softc * ahc , struct scb * scb ) ; 
/*--ahc_get_sense_buf--*/
int ahc_intr ( struct ahc_softc * ahc ) ; 
/*--ahc_intr--*/
const struct ahc_syncrate * ahc_devlimited_syncrate ( struct ahc_softc * ahc , struct ahc_initiator_tinfo * tinfo , u_int * period , u_int * ppr_options , role_t role ) ; 
/*--ahc_devlimited_syncrate--*/
const struct ahc_syncrate * ahc_find_syncrate ( struct ahc_softc * ahc , u_int * period , u_int * ppr_options , u_int maxsync ) ; 
/*--ahc_find_syncrate--*/
u_int ahc_find_period ( struct ahc_softc * ahc , u_int scsirate , u_int maxsync ) ; 
/*--ahc_find_period--*/
int ahc_update_neg_request ( struct ahc_softc * ahc , struct ahc_devinfo * devinfo , struct ahc_tmode_tstate * tstate , struct ahc_initiator_tinfo * tinfo , ahc_neg_type neg_type ) ; 
/*--ahc_update_neg_request--*/
void ahc_set_syncrate ( struct ahc_softc * ahc , struct ahc_devinfo * devinfo , const struct ahc_syncrate * syncrate , u_int period , u_int offset , u_int ppr_options , u_int type , int paused ) ; 
/*--ahc_set_syncrate--*/
void ahc_set_width ( struct ahc_softc * ahc , struct ahc_devinfo * devinfo , u_int width , u_int type , int paused ) ; 
/*--ahc_set_width--*/
void ahc_compile_devinfo ( struct ahc_devinfo * devinfo , u_int our_id , u_int target , u_int lun , char channel , role_t role ) ; 
/*--ahc_compile_devinfo--*/
void ahc_print_devinfo ( struct ahc_softc * ahc , struct ahc_devinfo * devinfo ) ; 
/*--ahc_print_devinfo--*/
struct ahc_softc * ahc_alloc ( void * platform_arg , char * name ) ; 
/*--ahc_alloc--*/
int ahc_softc_init ( struct ahc_softc * ahc ) ; 
/*--ahc_softc_init--*/
void ahc_set_unit ( struct ahc_softc * ahc , int unit ) ; 
/*--ahc_set_unit--*/
void ahc_set_name ( struct ahc_softc * ahc , char * name ) ; 
/*--ahc_set_name--*/
void ahc_free ( struct ahc_softc * ahc ) ; 
/*--ahc_free--*/
int ahc_reset ( struct ahc_softc * ahc , int reinit ) ; 
/*--ahc_reset--*/
int ahc_probe_scbs ( struct ahc_softc * ahc ) ; 
/*--ahc_probe_scbs--*/
void ahc_controller_info ( struct ahc_softc * ahc , char * buf ) ; 
/*--ahc_controller_info--*/
int ahc_chip_init ( struct ahc_softc * ahc ) ; 
/*--ahc_chip_init--*/
int ahc_init ( struct ahc_softc * ahc ) ; 
/*--ahc_init--*/
void ahc_intr_enable ( struct ahc_softc * ahc , int enable ) ; 
/*--ahc_intr_enable--*/
void ahc_pause_and_flushwork ( struct ahc_softc * ahc ) ; 
/*--ahc_pause_and_flushwork--*/
int ahc_suspend ( struct ahc_softc * ahc ) ; 
/*--ahc_suspend--*/
int ahc_resume ( struct ahc_softc * ahc ) ; 
/*--ahc_resume--*/
int ahc_match_scb ( struct ahc_softc * ahc , struct scb * scb , int target , char channel , int lun , u_int tag , role_t role ) ; 
/*--ahc_match_scb--*/
void ahc_qinfifo_requeue_tail ( struct ahc_softc * ahc , struct scb * scb ) ; 
/*--ahc_qinfifo_requeue_tail--*/
int ahc_search_qinfifo ( struct ahc_softc * ahc , int target , char channel , int lun , u_int tag , role_t role , uint32_t status , ahc_search_action action ) ; 
/*--ahc_search_qinfifo--*/
int ahc_search_untagged_queues ( struct ahc_softc * ahc , ahc_io_ctx_t ctx , int target , char channel , int lun , uint32_t status , ahc_search_action action ) ; 
/*--ahc_search_untagged_queues--*/
int ahc_search_disc_list ( struct ahc_softc * ahc , int target , char channel , int lun , u_int tag , int stop_on_first , int remove , int save_state ) ; 
/*--ahc_search_disc_list--*/
int ahc_reset_channel ( struct ahc_softc * ahc , char channel , int initiate_reset ) ; 
/*--ahc_reset_channel--*/
int ahc_print_register ( const ahc_reg_parse_entry_t * table , u_int num_entries , const char * name , u_int address , u_int value , u_int * cur_column , u_int wrap_point ) ; 
/*--ahc_print_register--*/
void ahc_dump_card_state ( struct ahc_softc * ahc ) ; 
/*--ahc_dump_card_state--*/
int ahc_read_seeprom ( struct seeprom_descriptor * sd , uint16_t * buf , u_int start_addr , u_int count ) ; 
/*--ahc_read_seeprom--*/
int ahc_write_seeprom ( struct seeprom_descriptor * sd , uint16_t * buf , u_int start_addr , u_int count ) ; 
/*--ahc_write_seeprom--*/
int ahc_verify_cksum ( struct seeprom_config * sc ) ; 
/*--ahc_verify_cksum--*/
const struct ahc_pci_identity * ahc_find_pci_device ( ahc_dev_softc_t pci ) ; 
/*--ahc_find_pci_device--*/
int ahc_pci_config ( struct ahc_softc * ahc , const struct ahc_pci_identity * entry ) ; 
/*--ahc_pci_config--*/
int ahc_pci_test_register_access ( struct ahc_softc * ahc ) ; 
/*--ahc_pci_test_register_access--*/
int ahc_acquire_seeprom ( struct ahc_softc * ahc , struct seeprom_descriptor * sd ) ; 
/*--ahc_acquire_seeprom--*/
void ahc_release_seeprom ( struct seeprom_descriptor * sd ) ; 
/*--ahc_release_seeprom--*/
void ahc_pci_resume ( struct ahc_softc * ahc ) ; 
/*--ahc_pci_resume--*/
int ahc_scsiseq_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scsiseq_print--*/
int ahc_sxfrctl0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_sxfrctl0_print--*/
int ahc_scsisigi_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scsisigi_print--*/
int ahc_scsirate_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scsirate_print--*/
int ahc_sstat0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_sstat0_print--*/
int ahc_sstat1_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_sstat1_print--*/
int ahc_sstat2_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_sstat2_print--*/
int ahc_sstat3_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_sstat3_print--*/
int ahc_simode0_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_simode0_print--*/
int ahc_simode1_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_simode1_print--*/
int ahc_scsibusl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scsibusl_print--*/
int ahc_sblkctl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_sblkctl_print--*/
int ahc_seq_flags_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_seq_flags_print--*/
int ahc_lastphase_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_lastphase_print--*/
int ahc_seqctl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_seqctl_print--*/
int ahc_sram_base_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_sram_base_print--*/
int ahc_error_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_error_print--*/
int ahc_dfcntrl_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_dfcntrl_print--*/
int ahc_dfstatus_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_dfstatus_print--*/
int ahc_scsiphase_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scsiphase_print--*/
int ahc_scb_base_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scb_base_print--*/
int ahc_scb_control_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scb_control_print--*/
int ahc_scb_scsiid_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scb_scsiid_print--*/
int ahc_scb_lun_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scb_lun_print--*/
int ahc_scb_tag_print ( u_int regvalue , u_int * cur_col , u_int wrap ) ; 
/*--ahc_scb_tag_print--*/
void ahc_print_path ( struct ahc_softc * ahc , struct scb * scb ) ; 
/*--ahc_print_path--*/
void ahc_delay ( long usec ) ; 
/*--ahc_delay--*/
uint8_t ahc_inb ( struct ahc_softc * ahc , long port ) ; 
/*--ahc_inb--*/
void ahc_outb ( struct ahc_softc * ahc , long port , uint8_t val ) ; 
/*--ahc_outb--*/
void ahc_outsb ( struct ahc_softc * ahc , long port , uint8_t * array , int count ) ; 
/*--ahc_outsb--*/
void ahc_insb ( struct ahc_softc * ahc , long port , uint8_t * array , int count ) ; 
/*--ahc_insb--*/
int ahc_dma_tag_create ( struct ahc_softc * ahc , bus_dma_tag_t parent , bus_size_t alignment , bus_size_t boundary , dma_addr_t lowaddr , dma_addr_t highaddr , bus_dma_filter_t * filter , void * filterarg , bus_size_t maxsize , int nsegments , bus_size_t maxsegsz , int flags , bus_dma_tag_t * ret_tag ) ; 
/*--ahc_dma_tag_create--*/
void ahc_dma_tag_destroy ( struct ahc_softc * ahc , bus_dma_tag_t dmat ) ; 
/*--ahc_dma_tag_destroy--*/
int ahc_dmamem_alloc ( struct ahc_softc * ahc , bus_dma_tag_t dmat , void * * vaddr , int flags , bus_dmamap_t * mapp ) ; 
/*--ahc_dmamem_alloc--*/
void ahc_dmamem_free ( struct ahc_softc * ahc , bus_dma_tag_t dmat , void * vaddr , bus_dmamap_t map ) ; 
/*--ahc_dmamem_free--*/
int ahc_dmamap_load ( struct ahc_softc * ahc , bus_dma_tag_t dmat , bus_dmamap_t map , void * buf , bus_size_t buflen , bus_dmamap_callback_t * cb , void * cb_arg , int flags ) ; 
/*--ahc_dmamap_load--*/
void ahc_dmamap_destroy ( struct ahc_softc * ahc , bus_dma_tag_t dmat , bus_dmamap_t map ) ; 
/*--ahc_dmamap_destroy--*/
int ahc_dmamap_unload ( struct ahc_softc * ahc , bus_dma_tag_t dmat , bus_dmamap_t map ) ; 
/*--ahc_dmamap_unload--*/
int ahc_linux_register_host ( struct ahc_softc * ahc , struct scsi_host_template * template ) ; 
/*--ahc_linux_register_host--*/
void ahc_linux_initialize_scsi_bus ( struct ahc_softc * ahc ) ; 
/*--ahc_linux_initialize_scsi_bus--*/
int ahc_platform_alloc ( struct ahc_softc * ahc , void * platform_arg ) ; 
/*--ahc_platform_alloc--*/
void ahc_platform_free ( struct ahc_softc * ahc ) ; 
/*--ahc_platform_free--*/
void ahc_platform_freeze_devq ( struct ahc_softc * ahc , struct scb * scb ) ; 
/*--ahc_platform_freeze_devq--*/
void ahc_platform_set_tags ( struct ahc_softc * ahc , struct scsi_device * sdev , struct ahc_devinfo * devinfo , ahc_queue_alg alg ) ; 
/*--ahc_platform_set_tags--*/
int ahc_platform_abort_scbs ( struct ahc_softc * ahc , int target , char channel , int lun , u_int tag , role_t role , uint32_t status ) ; 
/*--ahc_platform_abort_scbs--*/
irqreturn_t ahc_linux_isr ( int irq , void * dev_id ) ; 
/*--ahc_linux_isr--*/
void ahc_platform_flushwork ( struct ahc_softc * ahc ) ; 
/*--ahc_platform_flushwork--*/
void ahc_send_async ( struct ahc_softc * ahc , char channel , u_int target , u_int lun , ac_code code ) ; 
/*--ahc_send_async--*/
void ahc_done ( struct ahc_softc * ahc , struct scb * scb ) ; 
/*--ahc_done--*/
void ahc_platform_dump_card_state ( struct ahc_softc * ahc ) ; 
/*--ahc_platform_dump_card_state--*/
int ahc_linux_proc_info ( struct Scsi_Host * shost , char * buffer , char * * start , off_t offset , int length , int inout ) ; 
/*--ahc_linux_proc_info--*/
uint32_t ahc_pci_read_config ( ahc_dev_softc_t pci , int reg , int width ) ; 
/*--ahc_pci_read_config--*/
void ahc_pci_write_config ( ahc_dev_softc_t pci , int reg , uint32_t value , int width ) ; 
/*--ahc_pci_write_config--*/
int ahc_linux_pci_init ( void ) ; 
/*--ahc_linux_pci_init--*/
void ahc_linux_pci_exit ( void ) ; 
/*--ahc_linux_pci_exit--*/
int ahc_pci_map_registers ( struct ahc_softc * ahc ) ; 
/*--ahc_pci_map_registers--*/
int ahc_pci_map_int ( struct ahc_softc * ahc ) ; 
/*--ahc_pci_map_int--*/
int asd_chip_hardrst ( struct asd_ha_struct * asd_ha ) ; 
/*--asd_chip_hardrst--*/
int asd_init_hw ( struct asd_ha_struct * asd_ha ) ; 
/*--asd_init_hw--*/
irqreturn_t asd_hw_isr ( int irq , void * dev_id ) ; 
/*--asd_hw_isr--*/
struct asd_ascb * asd_ascb_alloc_list ( struct asd_ha_struct * asd_ha , int * num , gfp_t gfp_flags ) ; 
/*--asd_ascb_alloc_list--*/
int asd_post_ascb_list ( struct asd_ha_struct * asd_ha , struct asd_ascb * ascb , int num ) ; 
/*--asd_post_ascb_list--*/
int asd_post_escb_list ( struct asd_ha_struct * asd_ha , struct asd_ascb * ascb , int num ) ; 
/*--asd_post_escb_list--*/
void asd_turn_led ( struct asd_ha_struct * asd_ha , int phy_id , int op ) ; 
/*--asd_turn_led--*/
void asd_control_led ( struct asd_ha_struct * asd_ha , int phy_id , int op ) ; 
/*--asd_control_led--*/
int asd_enable_phys ( struct asd_ha_struct * asd_ha , const u8 phy_mask ) ; 
/*--asd_enable_phys--*/
void asd_write_reg_byte ( struct asd_ha_struct * asd_ha , u32 reg , u8 val ) ; 
/*--asd_write_reg_byte--*/
void asd_write_reg_word ( struct asd_ha_struct * asd_ha , u32 reg , u16 val ) ; 
/*--asd_write_reg_word--*/
void asd_write_reg_dword ( struct asd_ha_struct * asd_ha , u32 reg , u32 val ) ; 
/*--asd_write_reg_dword--*/
u8 asd_read_reg_byte ( struct asd_ha_struct * asd_ha , u32 reg ) ; 
/*--asd_read_reg_byte--*/
u16 asd_read_reg_word ( struct asd_ha_struct * asd_ha , u32 reg ) ; 
/*--asd_read_reg_word--*/
u32 asd_read_reg_dword ( struct asd_ha_struct * asd_ha , u32 reg ) ; 
/*--asd_read_reg_dword--*/
void asd_read_reg_string ( struct asd_ha_struct * asd_ha , void * dst , u32 offs , int count ) ; 
/*--asd_read_reg_string--*/
void asd_write_reg_string ( struct asd_ha_struct * asd_ha , void * src , u32 offs , int count ) ; 
/*--asd_write_reg_string--*/
int asd_read_ocm ( struct asd_ha_struct * asd_ha ) ; 
/*--asd_read_ocm--*/
int asd_read_flash ( struct asd_ha_struct * asd_ha ) ; 
/*--asd_read_flash--*/
int asd_verify_flash_seg ( struct asd_ha_struct * asd_ha , const void * src , u32 dest_offset , u32 bytes_to_verify ) ; 
/*--asd_verify_flash_seg--*/
int asd_write_flash_seg ( struct asd_ha_struct * asd_ha , const void * src , u32 dest_offset , u32 bytes_to_write ) ; 
/*--asd_write_flash_seg--*/
int asd_chk_write_status ( struct asd_ha_struct * asd_ha , u32 sector_addr , u8 erase_flag ) ; 
/*--asd_chk_write_status--*/
int asd_erase_nv_sector ( struct asd_ha_struct * asd_ha , u32 flash_addr , u32 size ) ; 
/*--asd_erase_nv_sector--*/
int asd_check_flash_type ( struct asd_ha_struct * asd_ha ) ; 
/*--asd_check_flash_type--*/
int asd_release_firmware ( void ) ; 
/*--asd_release_firmware--*/
int asd_init_seqs ( struct asd_ha_struct * asd_ha ) ; 
/*--asd_init_seqs--*/
int asd_start_seqs ( struct asd_ha_struct * asd_ha ) ; 
/*--asd_start_seqs--*/
void asd_update_port_links ( struct asd_ha_struct * asd_ha , struct asd_phy * phy ) ; 
/*--asd_update_port_links--*/
void asd_invalidate_edb ( struct asd_ascb * ascb , int edb_id ) ; 
/*--asd_invalidate_edb--*/
int asd_init_post_escbs ( struct asd_ha_struct * asd_ha ) ; 
/*--asd_init_post_escbs--*/
void asd_build_control_phy ( struct asd_ascb * ascb , int phy_id , u8 subfunc ) ; 
/*--asd_build_control_phy--*/
void asd_ascb_timedout ( unsigned long data ) ; 
/*--asd_ascb_timedout--*/
int asd_control_phy ( struct asd_sas_phy * phy , enum phy_func func , void * arg ) ; 
/*--asd_control_phy--*/
int asd_dev_found ( struct domain_device * dev ) ; 
/*--asd_dev_found--*/
void asd_dev_gone ( struct domain_device * dev ) ; 
/*--asd_dev_gone--*/
int asd_clear_nexus_ha ( struct sas_ha_struct * sas_ha ) ; 
/*--asd_clear_nexus_ha--*/
int asd_clear_nexus_port ( struct asd_sas_port * port ) ; 
/*--asd_clear_nexus_port--*/
int asd_I_T_nexus_reset ( struct domain_device * dev ) ; 
/*--asd_I_T_nexus_reset--*/
int asd_abort_task ( struct sas_task * task ) ; 
/*--asd_abort_task--*/
int asd_abort_task_set ( struct domain_device * dev , u8 * lun ) ; 
/*--asd_abort_task_set--*/
int asd_clear_aca ( struct domain_device * dev , u8 * lun ) ; 
/*--asd_clear_aca--*/
int asd_clear_task_set ( struct domain_device * dev , u8 * lun ) ; 
/*--asd_clear_task_set--*/
int asd_lu_reset ( struct domain_device * dev , u8 * lun ) ; 
/*--asd_lu_reset--*/
int asd_query_task ( struct sas_task * task ) ; 
/*--asd_query_task--*/
int asd_execute_task ( struct sas_task * task , const int num , gfp_t gfp_flags ) ; 
/*--asd_execute_task--*/
int arcmsr_alloc_sysfs_attr ( struct AdapterControlBlock * acb ) ; 
/*--arcmsr_alloc_sysfs_attr--*/
void arcmsr_free_sysfs_attr ( struct AdapterControlBlock * acb ) ; 
/*--arcmsr_free_sysfs_attr--*/
void arcmsr_iop_message_read ( struct AdapterControlBlock * acb ) ; 
/*--arcmsr_iop_message_read--*/
struct QBUFFER * arcmsr_get_iop_rqbuffer ( struct AdapterControlBlock * acb ) ; 
/*--arcmsr_get_iop_rqbuffer--*/
void arcmsr_post_ioctldata2iop ( struct AdapterControlBlock * acb ) ; 
/*--arcmsr_post_ioctldata2iop--*/
struct iscsi_cls_session * beiscsi_session_create ( struct iscsi_endpoint * ep , u16 cmds_max , u16 qdepth , u32 initial_cmdsn ) ; 
/*--beiscsi_session_create--*/
void beiscsi_session_destroy ( struct iscsi_cls_session * cls_session ) ; 
/*--beiscsi_session_destroy--*/
struct iscsi_cls_conn * beiscsi_conn_create ( struct iscsi_cls_session * cls_session , u32 cid ) ; 
/*--beiscsi_conn_create--*/
int beiscsi_conn_bind ( struct iscsi_cls_session * cls_session , struct iscsi_cls_conn * cls_conn , u64 transport_fd , int is_leading ) ; 
/*--beiscsi_conn_bind--*/
int beiscsi_conn_get_param ( struct iscsi_cls_conn * cls_conn , enum iscsi_param param , char * buf ) ; 
/*--beiscsi_conn_get_param--*/
int beiscsi_set_param ( struct iscsi_cls_conn * cls_conn , enum iscsi_param param , char * buf , int buflen ) ; 
/*--beiscsi_set_param--*/
int beiscsi_get_host_param ( struct Scsi_Host * shost , enum iscsi_host_param param , char * buf ) ; 
/*--beiscsi_get_host_param--*/
void beiscsi_conn_get_stats ( struct iscsi_cls_conn * cls_conn , struct iscsi_stats * stats ) ; 
/*--beiscsi_conn_get_stats--*/
int beiscsi_conn_start ( struct iscsi_cls_conn * cls_conn ) ; 
/*--beiscsi_conn_start--*/
struct iscsi_endpoint * beiscsi_ep_connect ( struct Scsi_Host * shost , struct sockaddr * dst_addr , int non_blocking ) ; 
/*--beiscsi_ep_connect--*/
int beiscsi_ep_poll ( struct iscsi_endpoint * ep , int timeout_ms ) ; 
/*--beiscsi_ep_poll--*/
void beiscsi_ep_disconnect ( struct iscsi_endpoint * ep ) ; 
/*--beiscsi_ep_disconnect--*/
void beiscsi_conn_stop ( struct iscsi_cls_conn * cls_conn , int flag ) ; 
/*--beiscsi_conn_stop--*/
struct wrb_handle * alloc_wrb_handle ( struct beiscsi_hba * phba , unsigned int cid ) ; 
/*--alloc_wrb_handle--*/
void free_mgmt_sgl_handle ( struct beiscsi_hba * phba , struct sgl_handle * psgl_handle ) ; 
/*--free_mgmt_sgl_handle--*/
void beiscsi_process_all_cqs ( struct work_struct * work ) ; 
/*--beiscsi_process_all_cqs--*/
void beiscsi_offload_connection ( struct beiscsi_conn * beiscsi_conn , struct beiscsi_offload_params * params ) ; 
/*--beiscsi_offload_connection--*/
unsigned char mgmt_get_fw_config ( struct be_ctrl_info * ctrl , struct beiscsi_hba * phba ) ; 
/*--mgmt_get_fw_config--*/
unsigned char mgmt_check_supported_fw ( struct be_ctrl_info * ctrl , struct beiscsi_hba * phba ) ; 
/*--mgmt_check_supported_fw--*/
unsigned char mgmt_epfw_cleanup ( struct beiscsi_hba * phba , unsigned short chute ) ; 
/*--mgmt_epfw_cleanup--*/
unsigned char mgmt_invalidate_icds ( struct beiscsi_hba * phba , struct invalidate_command_table * inv_tbl , unsigned int num_invalidate , unsigned int cid ) ; 
/*--mgmt_invalidate_icds--*/
unsigned char mgmt_invalidate_connection ( struct beiscsi_hba * phba , struct beiscsi_endpoint * beiscsi_ep , unsigned short cid , unsigned short issue_reset , unsigned short savecfg_flag ) ; 
/*--mgmt_invalidate_connection--*/
unsigned char mgmt_upload_connection ( struct beiscsi_hba * phba , unsigned short cid , unsigned int upload_flag ) ; 
/*--mgmt_upload_connection--*/
int mgmt_open_connection ( struct beiscsi_hba * phba , struct sockaddr * dst_addr , struct beiscsi_endpoint * beiscsi_ep ) ; 
/*--mgmt_open_connection--*/
unsigned int be_cmd_get_mac_addr ( struct beiscsi_hba * phba ) ; 
/*--be_cmd_get_mac_addr--*/
void be_mcc_notify ( struct beiscsi_hba * phba ) ; 
/*--be_mcc_notify--*/
unsigned int alloc_mcc_tag ( struct beiscsi_hba * phba ) ; 
/*--alloc_mcc_tag--*/
void free_mcc_tag ( struct be_ctrl_info * ctrl , unsigned int tag ) ; 
/*--free_mcc_tag--*/
bool is_link_state_evt ( u32 trailer ) ; 
/*--is_link_state_evt--*/
int be_mcc_compl_process_isr ( struct be_ctrl_info * ctrl , struct be_mcc_compl * compl ) ; 
/*--be_mcc_compl_process_isr--*/
void beiscsi_async_link_state_process ( struct beiscsi_hba * phba , struct be_async_event_link_state * evt ) ; 
/*--beiscsi_async_link_state_process--*/
int beiscsi_process_mcc ( struct beiscsi_hba * phba ) ; 
/*--beiscsi_process_mcc--*/
int be_mcc_notify_wait ( struct beiscsi_hba * phba ) ; 
/*--be_mcc_notify_wait--*/
int be_mbox_notify ( struct be_ctrl_info * ctrl ) ; 
/*--be_mbox_notify--*/
void be_wrb_hdr_prepare ( struct be_mcc_wrb * wrb , int payload_len , bool embedded , u8 sge_cnt ) ; 
/*--be_wrb_hdr_prepare--*/
void be_cmd_hdr_prepare ( struct be_cmd_req_hdr * req_hdr , u8 subsystem , u8 opcode , int cmd_len ) ; 
/*--be_cmd_hdr_prepare--*/
struct be_mcc_wrb * wrb_from_mbox ( struct be_dma_mem * mbox_mem ) ; 
/*--wrb_from_mbox--*/
struct be_mcc_wrb * wrb_from_mccq ( struct beiscsi_hba * phba ) ; 
/*--wrb_from_mccq--*/
int beiscsi_cmd_eq_create ( struct be_ctrl_info * ctrl , struct be_queue_info * eq , int eq_delay ) ; 
/*--beiscsi_cmd_eq_create--*/
int be_cmd_fw_initialize ( struct be_ctrl_info * ctrl ) ; 
/*--be_cmd_fw_initialize--*/
int beiscsi_cmd_cq_create ( struct be_ctrl_info * ctrl , struct be_queue_info * cq , struct be_queue_info * eq , bool sol_evts , bool no_delay , int coalesce_wm ) ; 
/*--beiscsi_cmd_cq_create--*/
int beiscsi_cmd_mccq_create ( struct beiscsi_hba * phba , struct be_queue_info * mccq , struct be_queue_info * cq ) ; 
/*--beiscsi_cmd_mccq_create--*/
int beiscsi_cmd_q_destroy ( struct be_ctrl_info * ctrl , struct be_queue_info * q , int queue_type ) ; 
/*--beiscsi_cmd_q_destroy--*/
int be_cmd_create_default_pdu_queue ( struct be_ctrl_info * ctrl , struct be_queue_info * cq , struct be_queue_info * dq , int length , int entry_size ) ; 
/*--be_cmd_create_default_pdu_queue--*/
int be_cmd_wrbq_create ( struct be_ctrl_info * ctrl , struct be_dma_mem * q_mem , struct be_queue_info * wrbq ) ; 
/*--be_cmd_wrbq_create--*/
int be_cmd_iscsi_post_sgl_pages ( struct be_ctrl_info * ctrl , struct be_dma_mem * q_mem , u32 page_offset , u32 num_pages ) ; 
/*--be_cmd_iscsi_post_sgl_pages--*/
void bfad_hcb_comp ( void * arg , enum bfa_status status ) ; 
/*--bfad_hcb_comp--*/
void bfa_cb_init ( void * drv , enum bfa_status init_status ) ; 
/*--bfa_cb_init--*/
struct bfad_port_s * bfa_fcb_port_new ( struct bfad_s * bfad , struct bfa_fcs_port_s * port , enum bfa_port_role roles , struct bfad_vf_s * vf_drv , struct bfad_vport_s * vp_drv ) ; 
/*--bfa_fcb_port_new--*/
void bfa_fcb_port_delete ( struct bfad_s * bfad , enum bfa_port_role roles , struct bfad_vf_s * vf_drv , struct bfad_vport_s * vp_drv ) ; 
/*--bfa_fcb_port_delete--*/
void bfa_fcb_port_online ( struct bfad_s * bfad , enum bfa_port_role roles , struct bfad_vf_s * vf_drv , struct bfad_vport_s * vp_drv ) ; 
/*--bfa_fcb_port_online--*/
void bfa_fcb_port_offline ( struct bfad_s * bfad , enum bfa_port_role roles , struct bfad_vf_s * vf_drv , struct bfad_vport_s * vp_drv ) ; 
/*--bfa_fcb_port_offline--*/
void bfa_fcb_vport_delete ( struct bfad_vport_s * vport_drv ) ; 
/*--bfa_fcb_vport_delete--*/
enum bfa_status bfa_fcb_rport_alloc ( struct bfad_s * bfad , struct bfa_fcs_rport_s * * rport , struct bfad_rport_s * * rport_drv ) ; 
/*--bfa_fcb_rport_alloc--*/
void bfad_hal_mem_release ( struct bfad_s * bfad ) ; 
/*--bfad_hal_mem_release--*/
void bfad_update_hal_cfg ( struct bfa_iocfc_cfg_s * bfa_cfg ) ; 
/*--bfad_update_hal_cfg--*/
enum bfa_status bfad_hal_mem_alloc ( struct bfad_s * bfad ) ; 
/*--bfad_hal_mem_alloc--*/
enum bfa_status bfad_vport_create ( struct bfad_s * bfad , u16 vf_id , struct bfa_port_cfg_s * port_cfg , struct device * dev ) ; 
/*--bfad_vport_create--*/
enum bfa_status bfad_vf_create ( struct bfad_s * bfad , u16 vf_id , struct bfa_port_cfg_s * port_cfg ) ; 
/*--bfad_vf_create--*/
void bfad_bfa_tmo ( unsigned long data ) ; 
/*--bfad_bfa_tmo--*/
void bfad_init_timer ( struct bfad_s * bfad ) ; 
/*--bfad_init_timer--*/
int bfad_pci_init ( struct pci_dev * pdev , struct bfad_s * bfad ) ; 
/*--bfad_pci_init--*/
void bfad_pci_uninit ( struct pci_dev * pdev , struct bfad_s * bfad ) ; 
/*--bfad_pci_uninit--*/
void bfad_fcs_port_cfg ( struct bfad_s * bfad ) ; 
/*--bfad_fcs_port_cfg--*/
enum bfa_status bfad_drv_init ( struct bfad_s * bfad ) ; 
/*--bfad_drv_init--*/
void bfad_drv_uninit ( struct bfad_s * bfad ) ; 
/*--bfad_drv_uninit--*/
void bfad_drv_start ( struct bfad_s * bfad ) ; 
/*--bfad_drv_start--*/
void bfad_drv_stop ( struct bfad_s * bfad ) ; 
/*--bfad_drv_stop--*/
enum bfa_status bfad_cfg_pport ( struct bfad_s * bfad , enum bfa_port_role role ) ; 
/*--bfad_cfg_pport--*/
void bfad_uncfg_pport ( struct bfad_s * bfad ) ; 
/*--bfad_uncfg_pport--*/
void bfad_drv_log_level_set ( struct bfad_s * bfad ) ; 
/*--bfad_drv_log_level_set--*/
enum bfa_status bfad_start_ops ( struct bfad_s * bfad ) ; 
/*--bfad_start_ops--*/
int bfad_worker ( void * ptr ) ; 
/*--bfad_worker--*/
int bfad_pci_probe ( struct pci_dev * pdev , const struct pci_device_id * pid ) ; 
/*--bfad_pci_probe--*/
void bfad_pci_remove ( struct pci_dev * pdev ) ; 
/*--bfad_pci_remove--*/
enum bfa_status bfad_fc4_module_init ( void ) ; 
/*--bfad_fc4_module_init--*/
void bfad_fc4_module_exit ( void ) ; 
/*--bfad_fc4_module_exit--*/
int bfad_install_msix_handler ( struct bfad_s * bfad ) ; 
/*--bfad_install_msix_handler--*/
int bfad_setup_intr ( struct bfad_s * bfad ) ; 
/*--bfad_setup_intr--*/
void bfad_remove_intr ( struct bfad_s * bfad ) ; 
/*--bfad_remove_intr--*/
void bfa_os_gettimeofday ( struct bfa_timeval_s * tv ) ; 
/*--bfa_os_gettimeofday--*/
void bfa_os_printf ( struct bfa_log_mod_s * log_mod , u32 msg_id , const char * fmt , ... ) ; 
/*--bfa_os_printf--*/
void bfa_cb_ioim_done ( void * drv , struct bfad_ioim_s * dio , enum bfi_ioim_status io_status , u8 scsi_status , int sns_len , u8 * sns_info , s32 residue ) ; 
/*--bfa_cb_ioim_done--*/
void bfa_cb_ioim_good_comp ( void * drv , struct bfad_ioim_s * dio ) ; 
/*--bfa_cb_ioim_good_comp--*/
void bfa_cb_ioim_abort ( void * drv , struct bfad_ioim_s * dio ) ; 
/*--bfa_cb_ioim_abort--*/
void bfa_cb_tskim_done ( void * bfad , struct bfad_tskim_s * dtsk , enum bfi_tskim_status tsk_status ) ; 
/*--bfa_cb_tskim_done--*/
void bfa_cb_ioim_resfree ( void * drv ) ; 
/*--bfa_cb_ioim_resfree--*/
void bfa_fcb_itnim_alloc ( struct bfad_s * bfad , struct bfa_fcs_itnim_s * * itnim , struct bfad_itnim_s * * itnim_drv ) ; 
/*--bfa_fcb_itnim_alloc--*/
void bfa_fcb_itnim_free ( struct bfad_s * bfad , struct bfad_itnim_s * itnim_drv ) ; 
/*--bfa_fcb_itnim_free--*/
void bfa_fcb_itnim_online ( struct bfad_itnim_s * itnim_drv ) ; 
/*--bfa_fcb_itnim_online--*/
void bfa_fcb_itnim_offline ( struct bfad_itnim_s * itnim_drv ) ; 
/*--bfa_fcb_itnim_offline--*/
void bfa_fcb_itnim_tov ( struct bfad_itnim_s * itnim ) ; 
/*--bfa_fcb_itnim_tov--*/
int bfad_im_scsi_host_alloc ( struct bfad_s * bfad , struct bfad_im_port_s * im_port , struct device * dev ) ; 
/*--bfad_im_scsi_host_alloc--*/
void bfad_im_scsi_host_free ( struct bfad_s * bfad , struct bfad_im_port_s * im_port ) ; 
/*--bfad_im_scsi_host_free--*/
enum bfa_status bfad_im_port_new ( struct bfad_s * bfad , struct bfad_port_s * port ) ; 
/*--bfad_im_port_new--*/
void bfad_im_port_delete ( struct bfad_s * bfad , struct bfad_port_s * port ) ; 
/*--bfad_im_port_delete--*/
void bfad_im_port_clean ( struct bfad_im_port_s * im_port ) ; 
/*--bfad_im_port_clean--*/
void bfad_im_port_online ( struct bfad_s * bfad , struct bfad_port_s * port ) ; 
/*--bfad_im_port_online--*/
void bfad_im_port_offline ( struct bfad_s * bfad , struct bfad_port_s * port ) ; 
/*--bfad_im_port_offline--*/
enum bfa_status bfad_im_probe ( struct bfad_s * bfad ) ; 
/*--bfad_im_probe--*/
void bfad_im_probe_undo ( struct bfad_s * bfad ) ; 
/*--bfad_im_probe_undo--*/
struct Scsi_Host * bfad_os_scsi_host_alloc ( struct bfad_im_port_s * im_port , struct bfad_s * bfad ) ; 
/*--bfad_os_scsi_host_alloc--*/
void bfad_os_scsi_host_free ( struct bfad_s * bfad , struct bfad_im_port_s * im_port ) ; 
/*--bfad_os_scsi_host_free--*/
void bfad_os_destroy_workq ( struct bfad_im_s * im ) ; 
/*--bfad_os_destroy_workq--*/
enum bfa_status bfad_os_thread_workq ( struct bfad_s * bfad ) ; 
/*--bfad_os_thread_workq--*/
void bfad_im_probe_post ( struct bfad_im_s * im ) ; 
/*--bfad_im_probe_post--*/
enum bfa_status bfad_im_module_init ( void ) ; 
/*--bfad_im_module_init--*/
void bfad_im_module_exit ( void ) ; 
/*--bfad_im_module_exit--*/
void bfad_os_itnim_process ( struct bfad_itnim_s * itnim_drv ) ; 
/*--bfad_os_itnim_process--*/
void bfad_os_ramp_up_qdepth ( struct bfad_itnim_s * itnim , struct scsi_device * sdev ) ; 
/*--bfad_os_ramp_up_qdepth--*/
void bfad_os_handle_qfull ( struct bfad_itnim_s * itnim , struct scsi_device * sdev ) ; 
/*--bfad_os_handle_qfull--*/
struct bfad_itnim_s * bfad_os_get_itnim ( struct bfad_im_port_s * im_port , int id ) ; 
/*--bfad_os_get_itnim--*/
void bfad_os_fc_host_init ( struct bfad_im_port_s * im_port ) ; 
/*--bfad_os_fc_host_init--*/
void bfad_os_rport_online_wait ( struct bfad_s * bfad ) ; 
/*--bfad_os_rport_online_wait--*/
int bfad_os_get_linkup_delay ( struct bfad_s * bfad ) ; 
/*--bfad_os_get_linkup_delay--*/
void bfad_im_get_starget_port_id ( struct scsi_target * starget ) ; 
/*--bfad_im_get_starget_port_id--*/
void bfad_im_get_starget_node_name ( struct scsi_target * starget ) ; 
/*--bfad_im_get_starget_node_name--*/
void bfad_im_get_starget_port_name ( struct scsi_target * starget ) ; 
/*--bfad_im_get_starget_port_name--*/
void bfad_im_get_host_port_id ( struct Scsi_Host * shost ) ; 
/*--bfad_im_get_host_port_id--*/
struct Scsi_Host * bfad_os_starget_to_shost ( struct scsi_target * starget ) ; 
/*--bfad_os_starget_to_shost--*/
u32 * bfad_read_firmware ( struct pci_dev * pdev , u32 * * bfi_image , u32 * bfi_image_size , char * fw_name ) ; 
/*--bfad_read_firmware--*/
u32 * bfad_get_firmware_buf ( struct pci_dev * pdev ) ; 
/*--bfad_get_firmware_buf--*/
u32 * bfi_image_ct_get_chunk ( u32 off ) ; 
/*--bfi_image_ct_get_chunk--*/
u32 * bfi_image_cb_get_chunk ( u32 off ) ; 
/*--bfi_image_cb_get_chunk--*/
void bfa_cfg_get_meminfo ( struct bfa_iocfc_cfg_s * cfg , struct bfa_meminfo_s * meminfo ) ; 
/*--bfa_cfg_get_meminfo--*/
void bfa_attach ( struct bfa_s * bfa , void * bfad , struct bfa_iocfc_cfg_s * cfg , struct bfa_meminfo_s * meminfo , struct bfa_pcidev_s * pcidev ) ; 
/*--bfa_attach--*/
void bfa_detach ( struct bfa_s * bfa ) ; 
/*--bfa_detach--*/
void bfa_init_trc ( struct bfa_s * bfa , struct bfa_trc_mod_s * trcmod ) ; 
/*--bfa_init_trc--*/
void bfa_init_log ( struct bfa_s * bfa , struct bfa_log_mod_s * logmod ) ; 
/*--bfa_init_log--*/
void bfa_init_aen ( struct bfa_s * bfa , struct bfa_aen_s * aen ) ; 
/*--bfa_init_aen--*/
void bfa_init_plog ( struct bfa_s * bfa , struct bfa_plog_s * plog ) ; 
/*--bfa_init_plog--*/
void bfa_init ( struct bfa_s * bfa ) ; 
/*--bfa_init--*/
void bfa_start ( struct bfa_s * bfa ) ; 
/*--bfa_start--*/
void bfa_stop ( struct bfa_s * bfa ) ; 
/*--bfa_stop--*/
void bfa_comp_deq ( struct bfa_s * bfa , struct list_head * comp_q ) ; 
/*--bfa_comp_deq--*/
void bfa_comp_process ( struct bfa_s * bfa , struct list_head * comp_q ) ; 
/*--bfa_comp_process--*/
void bfa_comp_free ( struct bfa_s * bfa , struct list_head * comp_q ) ; 
/*--bfa_comp_free--*/
void bfa_attach_fcs ( struct bfa_s * bfa ) ; 
/*--bfa_attach_fcs--*/
void bfa_timer_tick ( struct bfa_s * bfa ) ; 
/*--bfa_timer_tick--*/
void bfa_get_pciids ( struct bfa_pciid_s * * pciids , int * npciids ) ; 
/*--bfa_get_pciids--*/
void bfa_cfg_get_default ( struct bfa_iocfc_cfg_s * cfg ) ; 
/*--bfa_cfg_get_default--*/
void bfa_cfg_get_min ( struct bfa_iocfc_cfg_s * cfg ) ; 
/*--bfa_cfg_get_min--*/
void bfa_get_attr ( struct bfa_s * bfa , struct bfa_ioc_attr_s * ioc_attr ) ; 
/*--bfa_get_attr--*/
enum bfa_status bfa_debug_fwsave ( struct bfa_s * bfa , void * trcdata , int * trclen ) ; 
/*--bfa_debug_fwsave--*/
void bfa_debug_fwsave_clear ( struct bfa_s * bfa ) ; 
/*--bfa_debug_fwsave_clear--*/
enum bfa_status bfa_debug_fwtrc ( struct bfa_s * bfa , void * trcdata , int * trclen ) ; 
/*--bfa_debug_fwtrc--*/
void bfa_chip_reset ( struct bfa_s * bfa ) ; 
/*--bfa_chip_reset--*/
void bfa_ioc_sem_timeout ( void * ioc_arg ) ; 
/*--bfa_ioc_sem_timeout--*/
enum bfa_boolean bfa_ioc_sem_get ( char * sem_reg ) ; 
/*--bfa_ioc_sem_get--*/
void bfa_ioc_sem_release ( char * sem_reg ) ; 
/*--bfa_ioc_sem_release--*/
void bfa_ioc_hw_sem_release ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_hw_sem_release--*/
void bfa_ioc_fwver_get ( struct bfa_ioc_s * ioc , struct bfi_ioc_image_hdr_s * fwhdr ) ; 
/*--bfa_ioc_fwver_get--*/
enum bfa_boolean bfa_ioc_fwver_cmp ( struct bfa_ioc_s * ioc , struct bfi_ioc_image_hdr_s * fwhdr ) ; 
/*--bfa_ioc_fwver_cmp--*/
void bfa_ioc_mbox_send ( struct bfa_ioc_s * ioc , void * ioc_msg , int len ) ; 
/*--bfa_ioc_mbox_send--*/
void bfa_ioc_boot ( struct bfa_ioc_s * ioc , u32 boot_type , u32 boot_param ) ; 
/*--bfa_ioc_boot--*/
void bfa_ioc_auto_recover ( enum bfa_boolean auto_recover ) ; 
/*--bfa_ioc_auto_recover--*/
enum bfa_boolean bfa_ioc_is_operational ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_is_operational--*/
void bfa_ioc_msgget ( struct bfa_ioc_s * ioc , void * mbmsg ) ; 
/*--bfa_ioc_msgget--*/
void bfa_ioc_isr ( struct bfa_ioc_s * ioc , struct bfi_mbmsg_s * m ) ; 
/*--bfa_ioc_isr--*/
void bfa_ioc_attach ( struct bfa_ioc_s * ioc , void * bfa , struct bfa_ioc_cbfn_s * cbfn , struct bfa_timer_mod_s * timer_mod , struct bfa_trc_mod_s * trcmod , struct bfa_aen_s * aen , struct bfa_log_mod_s * logm ) ; 
/*--bfa_ioc_attach--*/
void bfa_ioc_detach ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_detach--*/
void bfa_ioc_pci_init ( struct bfa_ioc_s * ioc , struct bfa_pcidev_s * pcidev , enum bfi_mclass mc ) ; 
/*--bfa_ioc_pci_init--*/
void bfa_ioc_mem_claim ( struct bfa_ioc_s * ioc , u8 * dm_kva , u64 dm_pa ) ; 
/*--bfa_ioc_mem_claim--*/
u32 bfa_ioc_meminfo ( void ) ; 
/*--bfa_ioc_meminfo--*/
void bfa_ioc_enable ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_enable--*/
void bfa_ioc_disable ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_disable--*/
int bfa_ioc_debug_trcsz ( enum bfa_boolean auto_recover ) ; 
/*--bfa_ioc_debug_trcsz--*/
void bfa_ioc_debug_memclaim ( struct bfa_ioc_s * ioc , void * dbg_fwsave ) ; 
/*--bfa_ioc_debug_memclaim--*/
u32 bfa_ioc_smem_pgnum ( struct bfa_ioc_s * ioc , u32 fmaddr ) ; 
/*--bfa_ioc_smem_pgnum--*/
u32 bfa_ioc_smem_pgoff ( struct bfa_ioc_s * ioc , u32 fmaddr ) ; 
/*--bfa_ioc_smem_pgoff--*/
void bfa_ioc_mbox_register ( struct bfa_ioc_s * ioc , bfa_ioc_mbox_mcfunc_t * mcfuncs ) ; 
/*--bfa_ioc_mbox_register--*/
void bfa_ioc_mbox_regisr ( struct bfa_ioc_s * ioc , enum bfi_mclass mc , bfa_ioc_mbox_mcfunc_t cbfn , void * cbarg ) ; 
/*--bfa_ioc_mbox_regisr--*/
void bfa_ioc_mbox_queue ( struct bfa_ioc_s * ioc , struct bfa_mbox_cmd_s * cmd ) ; 
/*--bfa_ioc_mbox_queue--*/
void bfa_ioc_mbox_isr ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_mbox_isr--*/
void bfa_ioc_error_isr ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_error_isr--*/
enum bfa_boolean bfa_ioc_is_disabled ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_is_disabled--*/
enum bfa_boolean bfa_ioc_fw_mismatch ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_fw_mismatch--*/
enum bfa_boolean bfa_ioc_adapter_is_disabled ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_adapter_is_disabled--*/
void bfa_ioc_hbfail_register ( struct bfa_ioc_s * ioc , struct bfa_ioc_hbfail_notify_s * notify ) ; 
/*--bfa_ioc_hbfail_register--*/
void bfa_ioc_get_adapter_attr ( struct bfa_ioc_s * ioc , struct bfa_adapter_attr_s * ad_attr ) ; 
/*--bfa_ioc_get_adapter_attr--*/
enum bfa_ioc_type_e bfa_ioc_get_type ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_get_type--*/
void bfa_ioc_get_adapter_serial_num ( struct bfa_ioc_s * ioc , char * serial_num ) ; 
/*--bfa_ioc_get_adapter_serial_num--*/
void bfa_ioc_get_adapter_fw_ver ( struct bfa_ioc_s * ioc , char * fw_ver ) ; 
/*--bfa_ioc_get_adapter_fw_ver--*/
void bfa_ioc_get_pci_chip_rev ( struct bfa_ioc_s * ioc , char * chip_rev ) ; 
/*--bfa_ioc_get_pci_chip_rev--*/
void bfa_ioc_get_adapter_optrom_ver ( struct bfa_ioc_s * ioc , char * optrom_ver ) ; 
/*--bfa_ioc_get_adapter_optrom_ver--*/
void bfa_ioc_get_adapter_manufacturer ( struct bfa_ioc_s * ioc , char * manufacturer ) ; 
/*--bfa_ioc_get_adapter_manufacturer--*/
void bfa_ioc_get_adapter_model ( struct bfa_ioc_s * ioc , char * model ) ; 
/*--bfa_ioc_get_adapter_model--*/
enum bfa_ioc_state bfa_ioc_get_state ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_get_state--*/
void bfa_ioc_get_attr ( struct bfa_ioc_s * ioc , struct bfa_ioc_attr_s * ioc_attr ) ; 
/*--bfa_ioc_get_attr--*/
u64 bfa_ioc_get_pwwn ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_get_pwwn--*/
u64 bfa_ioc_get_nwwn ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_get_nwwn--*/
u64 bfa_ioc_get_wwn_naa5 ( struct bfa_ioc_s * ioc , u16 inst ) ; 
/*--bfa_ioc_get_wwn_naa5--*/
u64 bfa_ioc_get_adid ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_get_adid--*/
struct mac_s bfa_ioc_get_mac ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_get_mac--*/
void bfa_ioc_set_fcmode ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_set_fcmode--*/
enum bfa_boolean bfa_ioc_get_fcmode ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_get_fcmode--*/
enum bfa_status bfa_ioc_debug_fwsave ( struct bfa_ioc_s * ioc , void * trcdata , int * trclen ) ; 
/*--bfa_ioc_debug_fwsave--*/
void bfa_ioc_debug_fwsave_clear ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_debug_fwsave_clear--*/
enum bfa_status bfa_ioc_debug_fwtrc ( struct bfa_ioc_s * ioc , void * trcdata , int * trclen ) ; 
/*--bfa_ioc_debug_fwtrc--*/
void bfa_ioc_set_ct_hwif ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_set_ct_hwif--*/
void bfa_ioc_set_cb_hwif ( struct bfa_ioc_s * ioc ) ; 
/*--bfa_ioc_set_cb_hwif--*/
void bfa_iocfc_reset_queues ( struct bfa_s * bfa ) ; 
/*--bfa_iocfc_reset_queues--*/
void bfa_iocfc_meminfo ( struct bfa_iocfc_cfg_s * cfg , u32 * km_len , u32 * dm_len ) ; 
/*--bfa_iocfc_meminfo--*/
void bfa_iocfc_attach ( struct bfa_s * bfa , void * bfad , struct bfa_iocfc_cfg_s * cfg , struct bfa_meminfo_s * meminfo , struct bfa_pcidev_s * pcidev ) ; 
/*--bfa_iocfc_attach--*/
void bfa_iocfc_detach ( struct bfa_s * bfa ) ; 
/*--bfa_iocfc_detach--*/
void bfa_iocfc_init ( struct bfa_s * bfa ) ; 
/*--bfa_iocfc_init--*/
void bfa_iocfc_start ( struct bfa_s * bfa ) ; 
/*--bfa_iocfc_start--*/
void bfa_iocfc_stop ( struct bfa_s * bfa ) ; 
/*--bfa_iocfc_stop--*/
void bfa_iocfc_isr ( void * bfaarg , struct bfi_mbmsg_s * m ) ; 
/*--bfa_iocfc_isr--*/
void bfa_adapter_get_attr ( struct bfa_s * bfa , struct bfa_adapter_attr_s * ad_attr ) ; 
/*--bfa_adapter_get_attr--*/
u64 bfa_adapter_get_id ( struct bfa_s * bfa ) ; 
/*--bfa_adapter_get_id--*/
void bfa_iocfc_get_attr ( struct bfa_s * bfa , struct bfa_iocfc_attr_s * attr ) ; 
/*--bfa_iocfc_get_attr--*/
enum bfa_status bfa_iocfc_israttr_set ( struct bfa_s * bfa , struct bfa_iocfc_intr_attr_s * attr ) ; 
/*--bfa_iocfc_israttr_set--*/
void bfa_iocfc_set_snsbase ( struct bfa_s * bfa , u64 snsbase_pa ) ; 
/*--bfa_iocfc_set_snsbase--*/
enum bfa_status bfa_iocfc_get_stats ( struct bfa_s * bfa , struct bfa_iocfc_stats_s * stats , bfa_cb_ioc_t cbfn , void * cbarg ) ; 
/*--bfa_iocfc_get_stats--*/
enum bfa_status bfa_iocfc_clear_stats ( struct bfa_s * bfa , bfa_cb_ioc_t cbfn , void * cbarg ) ; 
/*--bfa_iocfc_clear_stats--*/
void bfa_iocfc_enable ( struct bfa_s * bfa ) ; 
/*--bfa_iocfc_enable--*/
void bfa_iocfc_disable ( struct bfa_s * bfa ) ; 
/*--bfa_iocfc_disable--*/
enum bfa_boolean bfa_iocfc_is_operational ( struct bfa_s * bfa ) ; 
/*--bfa_iocfc_is_operational--*/
void bfa_iocfc_get_bootwwns ( struct bfa_s * bfa , u8 * nwwns , u64 * * wwns ) ; 
/*--bfa_iocfc_get_bootwwns--*/
struct bfa_fcxp_s * bfa_fcxp_alloc ( void * caller , struct bfa_s * bfa , int nreq_sgles , int nrsp_sgles , bfa_fcxp_get_sgaddr_t req_sga_cbfn , bfa_fcxp_get_sglen_t req_sglen_cbfn , bfa_fcxp_get_sgaddr_t rsp_sga_cbfn , bfa_fcxp_get_sglen_t rsp_sglen_cbfn ) ; 
/*--bfa_fcxp_alloc--*/
void * bfa_fcxp_get_reqbuf ( struct bfa_fcxp_s * fcxp ) ; 
/*--bfa_fcxp_get_reqbuf--*/
u32 bfa_fcxp_get_reqbufsz ( struct bfa_fcxp_s * fcxp ) ; 
/*--bfa_fcxp_get_reqbufsz--*/
void * bfa_fcxp_get_rspbuf ( struct bfa_fcxp_s * fcxp ) ; 
/*--bfa_fcxp_get_rspbuf--*/
void bfa_fcxp_free ( struct bfa_fcxp_s * fcxp ) ; 
/*--bfa_fcxp_free--*/
void bfa_fcxp_send ( struct bfa_fcxp_s * fcxp , struct bfa_rport_s * rport , u16 vf_id , u8 lp_tag , enum bfa_boolean cts , enum fc_cos cos , u32 reqlen , struct fchs_s * fchs , bfa_cb_fcxp_send_t cbfn , void * cbarg , u32 rsp_maxlen , u8 rsp_timeout ) ; 
/*--bfa_fcxp_send--*/
enum bfa_status bfa_fcxp_abort ( struct bfa_fcxp_s * fcxp ) ; 
/*--bfa_fcxp_abort--*/
void bfa_fcxp_alloc_wait ( struct bfa_s * bfa , struct bfa_fcxp_wqe_s * wqe , bfa_fcxp_alloc_cbfn_t alloc_cbfn , void * alloc_cbarg ) ; 
/*--bfa_fcxp_alloc_wait--*/
void bfa_fcxp_walloc_cancel ( struct bfa_s * bfa , struct bfa_fcxp_wqe_s * wqe ) ; 
/*--bfa_fcxp_walloc_cancel--*/
void bfa_fcxp_discard ( struct bfa_fcxp_s * fcxp ) ; 
/*--bfa_fcxp_discard--*/
void bfa_fcxp_isr ( struct bfa_s * bfa , struct bfi_msg_s * msg ) ; 
/*--bfa_fcxp_isr--*/
u32 bfa_fcxp_get_maxrsp ( struct bfa_s * bfa ) ; 
/*--bfa_fcxp_get_maxrsp--*/
u32 bfa_lps_get_max_vport ( struct bfa_s * bfa ) ; 
/*--bfa_lps_get_max_vport--*/
struct bfa_lps_s * bfa_lps_alloc ( struct bfa_s * bfa ) ; 
/*--bfa_lps_alloc--*/
void bfa_lps_delete ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_delete--*/
void bfa_lps_flogi ( struct bfa_lps_s * lps , void * uarg , u8 alpa , u16 pdusz , u64 pwwn , u64 nwwn , enum bfa_boolean auth_en ) ; 
/*--bfa_lps_flogi--*/
void bfa_lps_fdisc ( struct bfa_lps_s * lps , void * uarg , u16 pdusz , u64 pwwn , u64 nwwn ) ; 
/*--bfa_lps_fdisc--*/
void bfa_lps_flogo ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_flogo--*/
void bfa_lps_fdisclogo ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_fdisclogo--*/
void bfa_lps_discard ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_discard--*/
u8 bfa_lps_get_tag ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_tag--*/
u8 bfa_lps_get_tag_from_pid ( struct bfa_s * bfa , u32 pid ) ; 
/*--bfa_lps_get_tag_from_pid--*/
enum bfa_boolean bfa_lps_is_npiv_en ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_is_npiv_en--*/
enum bfa_boolean bfa_lps_is_fport ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_is_fport--*/
enum bfa_boolean bfa_lps_is_brcd_fabric ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_is_brcd_fabric--*/
enum bfa_boolean bfa_lps_is_authreq ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_is_authreq--*/
enum bfa_eproto_status bfa_lps_get_extstatus ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_extstatus--*/
u32 bfa_lps_get_pid ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_pid--*/
u16 bfa_lps_get_peer_bbcredit ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_peer_bbcredit--*/
u64 bfa_lps_get_peer_pwwn ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_peer_pwwn--*/
u64 bfa_lps_get_peer_nwwn ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_peer_nwwn--*/
u8 bfa_lps_get_lsrjt_rsn ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_lsrjt_rsn--*/
u8 bfa_lps_get_lsrjt_expl ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_lsrjt_expl--*/
struct mac_s bfa_lps_get_lp_mac ( struct bfa_lps_s * lps ) ; 
/*--bfa_lps_get_lp_mac--*/
void bfa_lps_isr ( struct bfa_s * bfa , struct bfi_msg_s * m ) ; 
/*--bfa_lps_isr--*/
void bfa_hwcb_reginit ( struct bfa_s * bfa ) ; 
/*--bfa_hwcb_reginit--*/
void bfa_hwcb_reqq_ack ( struct bfa_s * bfa , int reqq ) ; 
/*--bfa_hwcb_reqq_ack--*/
void bfa_hwcb_rspq_ack ( struct bfa_s * bfa , int rspq ) ; 
/*--bfa_hwcb_rspq_ack--*/
void bfa_hwcb_msix_getvecs ( struct bfa_s * bfa , u32 * msix_vecs_bmap , u32 * num_vecs , u32 * max_vec_bit ) ; 
/*--bfa_hwcb_msix_getvecs--*/
void bfa_hwcb_msix_init ( struct bfa_s * bfa , int nvecs ) ; 
/*--bfa_hwcb_msix_init--*/
void bfa_hwcb_msix_install ( struct bfa_s * bfa ) ; 
/*--bfa_hwcb_msix_install--*/
void bfa_hwcb_msix_uninstall ( struct bfa_s * bfa ) ; 
/*--bfa_hwcb_msix_uninstall--*/
void bfa_hwcb_isr_mode_set ( struct bfa_s * bfa , enum bfa_boolean msix ) ; 
/*--bfa_hwcb_isr_mode_set--*/
void bfa_hwct_reginit ( struct bfa_s * bfa ) ; 
/*--bfa_hwct_reginit--*/
void bfa_hwct_reqq_ack ( struct bfa_s * bfa , int reqq ) ; 
/*--bfa_hwct_reqq_ack--*/
void bfa_hwct_rspq_ack ( struct bfa_s * bfa , int rspq ) ; 
/*--bfa_hwct_rspq_ack--*/
void bfa_hwct_msix_getvecs ( struct bfa_s * bfa , u32 * msix_vecs_bmap , u32 * num_vecs , u32 * max_vec_bit ) ; 
/*--bfa_hwct_msix_getvecs--*/
void bfa_hwct_msix_init ( struct bfa_s * bfa , int nvecs ) ; 
/*--bfa_hwct_msix_init--*/
void bfa_hwct_msix_install ( struct bfa_s * bfa ) ; 
/*--bfa_hwct_msix_install--*/
void bfa_hwct_msix_uninstall ( struct bfa_s * bfa ) ; 
/*--bfa_hwct_msix_uninstall--*/
void bfa_hwct_isr_mode_set ( struct bfa_s * bfa , enum bfa_boolean msix ) ; 
/*--bfa_hwct_isr_mode_set--*/
void bfa_msix_all ( struct bfa_s * bfa , int vec ) ; 
/*--bfa_msix_all--*/
enum bfa_boolean bfa_intx ( struct bfa_s * bfa ) ; 
/*--bfa_intx--*/
void bfa_isr_enable ( struct bfa_s * bfa ) ; 
/*--bfa_isr_enable--*/
void bfa_isr_disable ( struct bfa_s * bfa ) ; 
/*--bfa_isr_disable--*/
void bfa_msix_reqq ( struct bfa_s * bfa , int qid ) ; 
/*--bfa_msix_reqq--*/
void bfa_isr_unhandled ( struct bfa_s * bfa , struct bfi_msg_s * m ) ; 
/*--bfa_isr_unhandled--*/
void bfa_msix_rspq ( struct bfa_s * bfa , int qid ) ; 
/*--bfa_msix_rspq--*/
void bfa_msix_lpu_err ( struct bfa_s * bfa , int vec ) ; 
/*--bfa_msix_lpu_err--*/
void bfa_isr_bind ( enum bfi_mclass mc , bfa_isr_func_t isr_func ) ; 
/*--bfa_isr_bind--*/
void bfa_timer_init ( struct bfa_timer_mod_s * mod ) ; 
/*--bfa_timer_init--*/
void bfa_timer_beat ( struct bfa_timer_mod_s * mod ) ; 
/*--bfa_timer_beat--*/
void bfa_timer_begin ( struct bfa_timer_mod_s * mod , struct bfa_timer_s * timer , void ( * timercb ) ( void * ) , void * arg , unsigned int timeout ) ; 
/*--bfa_timer_begin--*/
void bfa_timer_stop ( struct bfa_timer_s * timer ) ; 
/*--bfa_timer_stop--*/
void bfa_rport_isr ( struct bfa_s * bfa , struct bfi_msg_s * m ) ; 
/*--bfa_rport_isr--*/
struct bfa_rport_s * bfa_rport_create ( struct bfa_s * bfa , void * rport_drv ) ; 
/*--bfa_rport_create--*/
void bfa_rport_delete ( struct bfa_rport_s * rport ) ; 
/*--bfa_rport_delete--*/
void bfa_rport_online ( struct bfa_rport_s * rport , struct bfa_rport_info_s * rport_info ) ; 
/*--bfa_rport_online--*/
void bfa_rport_offline ( struct bfa_rport_s * rport ) ; 
/*--bfa_rport_offline--*/
void bfa_rport_speed ( struct bfa_rport_s * rport , enum bfa_pport_speed speed ) ; 
/*--bfa_rport_speed--*/
void bfa_rport_get_stats ( struct bfa_rport_s * rport , struct bfa_rport_hal_stats_s * stats ) ; 
/*--bfa_rport_get_stats--*/
void bfa_rport_get_qos_attr ( struct bfa_rport_s * rport , struct bfa_rport_qos_attr_s * qos_attr ) ; 
/*--bfa_rport_get_qos_attr--*/
void bfa_rport_clear_stats ( struct bfa_rport_s * rport ) ; 
/*--bfa_rport_clear_stats--*/
void bfa_fcport_isr ( struct bfa_s * bfa , struct bfi_msg_s * msg ) ; 
/*--bfa_fcport_isr--*/
void bfa_fcport_event_register ( struct bfa_s * bfa , void ( * cbfn ) ( void * cbarg , enum bfa_pport_linkstate event ) , void * cbarg ) ; 
/*--bfa_fcport_event_register--*/
enum bfa_status bfa_fcport_enable ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_enable--*/
enum bfa_status bfa_fcport_disable ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_disable--*/
enum bfa_status bfa_fcport_cfg_speed ( struct bfa_s * bfa , enum bfa_pport_speed speed ) ; 
/*--bfa_fcport_cfg_speed--*/
enum bfa_pport_speed bfa_fcport_get_speed ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_get_speed--*/
enum bfa_status bfa_fcport_cfg_topology ( struct bfa_s * bfa , enum bfa_pport_topology topology ) ; 
/*--bfa_fcport_cfg_topology--*/
enum bfa_pport_topology bfa_fcport_get_topology ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_get_topology--*/
enum bfa_status bfa_fcport_cfg_hardalpa ( struct bfa_s * bfa , u8 alpa ) ; 
/*--bfa_fcport_cfg_hardalpa--*/
enum bfa_status bfa_fcport_clr_hardalpa ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_clr_hardalpa--*/
enum bfa_boolean bfa_fcport_get_hardalpa ( struct bfa_s * bfa , u8 * alpa ) ; 
/*--bfa_fcport_get_hardalpa--*/
u8 bfa_fcport_get_myalpa ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_get_myalpa--*/
enum bfa_status bfa_fcport_cfg_maxfrsize ( struct bfa_s * bfa , u16 maxfrsize ) ; 
/*--bfa_fcport_cfg_maxfrsize--*/
u16 bfa_fcport_get_maxfrsize ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_get_maxfrsize--*/
u32 bfa_fcport_mypid ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_mypid--*/
u8 bfa_fcport_get_rx_bbcredit ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_get_rx_bbcredit--*/
void bfa_fcport_set_tx_bbcredit ( struct bfa_s * bfa , u16 tx_bbcredit ) ; 
/*--bfa_fcport_set_tx_bbcredit--*/
u64 bfa_fcport_get_wwn ( struct bfa_s * bfa , enum bfa_boolean node ) ; 
/*--bfa_fcport_get_wwn--*/
void bfa_fcport_get_attr ( struct bfa_s * bfa , struct bfa_pport_attr_s * attr ) ; 
/*--bfa_fcport_get_attr--*/
enum bfa_status bfa_fcport_get_stats ( struct bfa_s * bfa , union bfa_fcport_stats_u * stats , bfa_cb_pport_t cbfn , void * cbarg ) ; 
/*--bfa_fcport_get_stats--*/
enum bfa_status bfa_fcport_clear_stats ( struct bfa_s * bfa , bfa_cb_pport_t cbfn , void * cbarg ) ; 
/*--bfa_fcport_clear_stats--*/
enum bfa_status bfa_fcport_get_qos_stats ( struct bfa_s * bfa , union bfa_fcport_stats_u * stats , bfa_cb_pport_t cbfn , void * cbarg ) ; 
/*--bfa_fcport_get_qos_stats--*/
enum bfa_status bfa_fcport_clear_qos_stats ( struct bfa_s * bfa , bfa_cb_pport_t cbfn , void * cbarg ) ; 
/*--bfa_fcport_clear_qos_stats--*/
enum bfa_status bfa_fcport_get_fcoe_stats ( struct bfa_s * bfa , union bfa_fcport_stats_u * stats , bfa_cb_pport_t cbfn , void * cbarg ) ; 
/*--bfa_fcport_get_fcoe_stats--*/
enum bfa_status bfa_fcport_clear_fcoe_stats ( struct bfa_s * bfa , bfa_cb_pport_t cbfn , void * cbarg ) ; 
/*--bfa_fcport_clear_fcoe_stats--*/
enum bfa_status bfa_fcport_trunk_enable ( struct bfa_s * bfa , u8 bitmap ) ; 
/*--bfa_fcport_trunk_enable--*/
void bfa_fcport_qos_get_attr ( struct bfa_s * bfa , struct bfa_qos_attr_s * qos_attr ) ; 
/*--bfa_fcport_qos_get_attr--*/
void bfa_fcport_qos_get_vc_attr ( struct bfa_s * bfa , struct bfa_qos_vc_attr_s * qos_vc_attr ) ; 
/*--bfa_fcport_qos_get_vc_attr--*/
enum bfa_status bfa_fcport_trunk_disable ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_trunk_disable--*/
enum bfa_boolean bfa_fcport_trunk_query ( struct bfa_s * bfa , u32 * bitmap ) ; 
/*--bfa_fcport_trunk_query--*/
enum bfa_boolean bfa_fcport_is_disabled ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_is_disabled--*/
enum bfa_boolean bfa_fcport_is_ratelim ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_is_ratelim--*/
void bfa_fcport_cfg_qos ( struct bfa_s * bfa , enum bfa_boolean on_off ) ; 
/*--bfa_fcport_cfg_qos--*/
void bfa_fcport_cfg_ratelim ( struct bfa_s * bfa , enum bfa_boolean on_off ) ; 
/*--bfa_fcport_cfg_ratelim--*/
enum bfa_status bfa_fcport_cfg_ratelim_speed ( struct bfa_s * bfa , enum bfa_pport_speed speed ) ; 
/*--bfa_fcport_cfg_ratelim_speed--*/
enum bfa_pport_speed bfa_fcport_get_ratelim_speed ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_get_ratelim_speed--*/
void bfa_fcport_busy ( struct bfa_s * bfa , enum bfa_boolean status ) ; 
/*--bfa_fcport_busy--*/
void bfa_fcport_beacon ( struct bfa_s * bfa , enum bfa_boolean beacon , enum bfa_boolean link_e2e_beacon ) ; 
/*--bfa_fcport_beacon--*/
enum bfa_boolean bfa_fcport_is_linkup ( struct bfa_s * bfa ) ; 
/*--bfa_fcport_is_linkup--*/
u32 bfa_port_meminfo ( void ) ; 
/*--bfa_port_meminfo--*/
void bfa_port_mem_claim ( struct bfa_port_s * port , u8 * dma_kva , u64 dma_pa ) ; 
/*--bfa_port_mem_claim--*/
enum bfa_status bfa_port_enable ( struct bfa_port_s * port , bfa_port_endis_cbfn_t cbfn , void * cbarg ) ; 
/*--bfa_port_enable--*/
enum bfa_status bfa_port_disable ( struct bfa_port_s * port , bfa_port_endis_cbfn_t cbfn , void * cbarg ) ; 
/*--bfa_port_disable--*/
enum bfa_status bfa_port_get_stats ( struct bfa_port_s * port , union bfa_pport_stats_u * stats , bfa_port_stats_cbfn_t cbfn , void * cbarg ) ; 
/*--bfa_port_get_stats--*/
enum bfa_status bfa_port_clear_stats ( struct bfa_port_s * port , bfa_port_stats_cbfn_t cbfn , void * cbarg ) ; 
/*--bfa_port_clear_stats--*/
void bfa_port_hbfail ( void * arg ) ; 
/*--bfa_port_hbfail--*/
void bfa_port_attach ( struct bfa_port_s * port , struct bfa_ioc_s * ioc , void * dev , struct bfa_trc_mod_s * trcmod , struct bfa_log_mod_s * logmod ) ; 
/*--bfa_port_attach--*/
void bfa_port_detach ( struct bfa_port_s * port ) ; 
/*--bfa_port_detach--*/
void bfa_uf_recv_register ( struct bfa_s * bfa , bfa_cb_uf_recv_t ufrecv , void * cbarg ) ; 
/*--bfa_uf_recv_register--*/
void bfa_uf_free ( struct bfa_uf_s * uf ) ; 
/*--bfa_uf_free--*/
void bfa_uf_isr ( struct bfa_s * bfa , struct bfi_msg_s * msg ) ; 
/*--bfa_uf_isr--*/
enum bfa_status bfa_sgpg_malloc ( struct bfa_s * bfa , struct list_head * sgpg_q , int nsgpgs ) ; 
/*--bfa_sgpg_malloc--*/
void bfa_sgpg_mfree ( struct bfa_s * bfa , struct list_head * sgpg_q , int nsgpg ) ; 
/*--bfa_sgpg_mfree--*/
void bfa_sgpg_wait ( struct bfa_s * bfa , struct bfa_sgpg_wqe_s * wqe , int nsgpg ) ; 
/*--bfa_sgpg_wait--*/
void bfa_sgpg_wcancel ( struct bfa_s * bfa , struct bfa_sgpg_wqe_s * wqe ) ; 
/*--bfa_sgpg_wcancel--*/
void bfa_sgpg_winit ( struct bfa_sgpg_wqe_s * wqe , void ( * cbfn ) ( void * cbarg ) , void * cbarg ) ; 
/*--bfa_sgpg_winit--*/
void bfa_ioim_delayed_comp ( struct bfa_ioim_s * ioim , enum bfa_boolean iotov ) ; 
/*--bfa_ioim_delayed_comp--*/
void bfa_ioim_attach ( struct bfa_fcpim_mod_s * fcpim , struct bfa_meminfo_s * minfo ) ; 
/*--bfa_ioim_attach--*/
void bfa_ioim_detach ( struct bfa_fcpim_mod_s * fcpim ) ; 
/*--bfa_ioim_detach--*/
void bfa_ioim_isr ( struct bfa_s * bfa , struct bfi_msg_s * m ) ; 
/*--bfa_ioim_isr--*/
void bfa_ioim_good_comp_isr ( struct bfa_s * bfa , struct bfi_msg_s * m ) ; 
/*--bfa_ioim_good_comp_isr--*/
void bfa_ioim_cleanup ( struct bfa_ioim_s * ioim ) ; 
/*--bfa_ioim_cleanup--*/
void bfa_ioim_cleanup_tm ( struct bfa_ioim_s * ioim , struct bfa_tskim_s * tskim ) ; 
/*--bfa_ioim_cleanup_tm--*/
void bfa_ioim_iocdisable ( struct bfa_ioim_s * ioim ) ; 
/*--bfa_ioim_iocdisable--*/
void bfa_ioim_tov ( struct bfa_ioim_s * ioim ) ; 
/*--bfa_ioim_tov--*/
struct bfa_ioim_s * bfa_ioim_alloc ( struct bfa_s * bfa , struct bfad_ioim_s * dio , struct bfa_itnim_s * itnim , u16 nsges ) ; 
/*--bfa_ioim_alloc--*/
void bfa_ioim_free ( struct bfa_ioim_s * ioim ) ; 
/*--bfa_ioim_free--*/
void bfa_ioim_start ( struct bfa_ioim_s * ioim ) ; 
/*--bfa_ioim_start--*/
void bfa_ioim_abort ( struct bfa_ioim_s * ioim ) ; 
/*--bfa_ioim_abort--*/
void bfa_itnim_iodone ( struct bfa_itnim_s * itnim ) ; 
/*--bfa_itnim_iodone--*/
void bfa_itnim_tskdone ( struct bfa_itnim_s * itnim ) ; 
/*--bfa_itnim_tskdone--*/
void bfa_itnim_meminfo ( struct bfa_iocfc_cfg_s * cfg , u32 * km_len , u32 * dm_len ) ; 
/*--bfa_itnim_meminfo--*/
void bfa_itnim_attach ( struct bfa_fcpim_mod_s * fcpim , struct bfa_meminfo_s * minfo ) ; 
/*--bfa_itnim_attach--*/
void bfa_itnim_iocdisable ( struct bfa_itnim_s * itnim ) ; 
/*--bfa_itnim_iocdisable--*/
void bfa_itnim_isr ( struct bfa_s * bfa , struct bfi_msg_s * m ) ; 
/*--bfa_itnim_isr--*/
struct bfa_itnim_s * bfa_itnim_create ( struct bfa_s * bfa , struct bfa_rport_s * rport , void * ditn ) ; 
/*--bfa_itnim_create--*/
void bfa_itnim_delete ( struct bfa_itnim_s * itnim ) ; 
/*--bfa_itnim_delete--*/
void bfa_itnim_online ( struct bfa_itnim_s * itnim , enum bfa_boolean seq_rec ) ; 
/*--bfa_itnim_online--*/
void bfa_itnim_offline ( struct bfa_itnim_s * itnim ) ; 
/*--bfa_itnim_offline--*/
enum bfa_boolean bfa_itnim_hold_io ( struct bfa_itnim_s * itnim ) ; 
/*--bfa_itnim_hold_io--*/
void bfa_itnim_get_stats ( struct bfa_itnim_s * itnim , struct bfa_itnim_hal_stats_s * stats ) ; 
/*--bfa_itnim_get_stats--*/
void bfa_itnim_clear_stats ( struct bfa_itnim_s * itnim ) ; 
/*--bfa_itnim_clear_stats--*/
void bfa_fcpim_path_tov_set ( struct bfa_s * bfa , u16 path_tov ) ; 
/*--bfa_fcpim_path_tov_set--*/
u16 bfa_fcpim_path_tov_get ( struct bfa_s * bfa ) ; 
/*--bfa_fcpim_path_tov_get--*/
enum bfa_status bfa_fcpim_get_modstats ( struct bfa_s * bfa , struct bfa_fcpim_stats_s * modstats ) ; 
/*--bfa_fcpim_get_modstats--*/
enum bfa_status bfa_fcpim_clr_modstats ( struct bfa_s * bfa ) ; 
/*--bfa_fcpim_clr_modstats--*/
void bfa_fcpim_qdepth_set ( struct bfa_s * bfa , u16 q_depth ) ; 
/*--bfa_fcpim_qdepth_set--*/
u16 bfa_fcpim_qdepth_get ( struct bfa_s * bfa ) ; 
/*--bfa_fcpim_qdepth_get--*/
void bfa_tskim_iodone ( struct bfa_tskim_s * tskim ) ; 
/*--bfa_tskim_iodone--*/
void bfa_tskim_iocdisable ( struct bfa_tskim_s * tskim ) ; 
/*--bfa_tskim_iocdisable--*/
void bfa_tskim_cleanup ( struct bfa_tskim_s * tskim ) ; 
/*--bfa_tskim_cleanup--*/
void bfa_tskim_attach ( struct bfa_fcpim_mod_s * fcpim , struct bfa_meminfo_s * minfo ) ; 
/*--bfa_tskim_attach--*/
void bfa_tskim_detach ( struct bfa_fcpim_mod_s * fcpim ) ; 
/*--bfa_tskim_detach--*/
void bfa_tskim_isr ( struct bfa_s * bfa , struct bfi_msg_s * m ) ; 
/*--bfa_tskim_isr--*/
struct bfa_tskim_s * bfa_tskim_alloc ( struct bfa_s * bfa , struct bfad_tskim_s * dtsk ) ; 
/*--bfa_tskim_alloc--*/
void bfa_tskim_free ( struct bfa_tskim_s * tskim ) ; 
/*--bfa_tskim_free--*/
void bfa_tskim_start ( struct bfa_tskim_s * tskim , struct bfa_itnim_s * itnim , u64 lun , enum fcp_tm_cmnd tm_cmnd , u8 tsecs ) ; 
/*--bfa_tskim_start--*/
int bfa_log_init ( struct bfa_log_mod_s * log_mod , char * instance_name , bfa_log_cb_t cbfn ) ; 
/*--bfa_log_init--*/
enum bfa_status bfa_log_set_level ( struct bfa_log_mod_s * log_mod , int mod_id , enum bfa_log_severity log_level ) ; 
/*--bfa_log_set_level--*/
enum bfa_status bfa_log_set_level_all ( struct bfa_log_mod_s * log_mod , enum bfa_log_severity log_level ) ; 
/*--bfa_log_set_level_all--*/
enum bfa_status bfa_log_set_level_aen ( struct bfa_log_mod_s * log_mod , enum bfa_log_severity log_level ) ; 
/*--bfa_log_set_level_aen--*/
enum bfa_log_severity bfa_log_get_level ( struct bfa_log_mod_s * log_mod , int mod_id ) ; 
/*--bfa_log_get_level--*/
enum bfa_log_severity bfa_log_get_msg_level ( struct bfa_log_mod_s * log_mod , u32 msg_id ) ; 
/*--bfa_log_get_msg_level--*/
int bfa_log ( struct bfa_log_mod_s * log_mod , u32 msg_id , ... ) ; 
/*--bfa_log--*/
void bfa_panic ( int line , char * file , char * panicstr ) ; 
/*--bfa_panic--*/
void bfa_sm_panic ( struct bfa_log_mod_s * logm , int line , char * file , int event ) ; 
/*--bfa_sm_panic--*/
int bfa_q_is_on_q_func ( struct list_head * q , struct list_head * qe ) ; 
/*--bfa_q_is_on_q_func--*/
int bfa_sm_to_state ( struct bfa_sm_table_s * smt , bfa_sm_t sm ) ; 
/*--bfa_sm_to_state--*/
void bfa_plog_init ( struct bfa_plog_s * plog ) ; 
/*--bfa_plog_init--*/
void bfa_plog_str ( struct bfa_plog_s * plog , enum bfa_plog_mid mid , enum bfa_plog_eid event , u16 misc , char * log_str ) ; 
/*--bfa_plog_str--*/
void bfa_plog_intarr ( struct bfa_plog_s * plog , enum bfa_plog_mid mid , enum bfa_plog_eid event , u16 misc , u32 * intarr , u32 num_ints ) ; 
/*--bfa_plog_intarr--*/
void bfa_plog_fchdr ( struct bfa_plog_s * plog , enum bfa_plog_mid mid , enum bfa_plog_eid event , u16 misc , struct fchs_s * fchdr ) ; 
/*--bfa_plog_fchdr--*/
void bfa_plog_fchdr_and_pl ( struct bfa_plog_s * plog , enum bfa_plog_mid mid , enum bfa_plog_eid event , u16 misc , struct fchs_s * fchdr , u32 pld_w0 ) ; 
/*--bfa_plog_fchdr_and_pl--*/
void bfa_plog_clear ( struct bfa_plog_s * plog ) ; 
/*--bfa_plog_clear--*/
void bfa_plog_enable ( struct bfa_plog_s * plog ) ; 
/*--bfa_plog_enable--*/
void bfa_plog_disable ( struct bfa_plog_s * plog ) ; 
/*--bfa_plog_disable--*/
enum bfa_boolean bfa_plog_get_setting ( struct bfa_plog_s * plog ) ; 
/*--bfa_plog_get_setting--*/
void fcbuild_init ( void ) ; 
/*--fcbuild_init--*/
void fc_els_req_build ( struct fchs_s * fchs , u32 d_id , u32 s_id , u16 ox_id ) ; 
/*--fc_els_req_build--*/
enum fc_parse_status fc_els_rsp_parse ( struct fchs_s * fchs , int len ) ; 
/*--fc_els_rsp_parse--*/
u16 fc_flogi_build ( struct fchs_s * fchs , struct fc_logi_s * flogi , u32 s_id , u16 ox_id , u64 port_name , u64 node_name , u16 pdu_size , u8 set_npiv , u8 set_auth , u16 local_bb_credits ) ; 
/*--fc_flogi_build--*/
u16 fc_flogi_acc_build ( struct fchs_s * fchs , struct fc_logi_s * flogi , u32 s_id , u16 ox_id , u64 port_name , u64 node_name , u16 pdu_size , u16 local_bb_credits ) ; 
/*--fc_flogi_acc_build--*/
u16 fc_fdisc_build ( struct fchs_s * fchs , struct fc_logi_s * flogi , u32 s_id , u16 ox_id , u64 port_name , u64 node_name , u16 pdu_size ) ; 
/*--fc_fdisc_build--*/
u16 fc_plogi_build ( struct fchs_s * fchs , void * pld , u32 d_id , u32 s_id , u16 ox_id , u64 port_name , u64 node_name , u16 pdu_size ) ; 
/*--fc_plogi_build--*/
u16 fc_plogi_acc_build ( struct fchs_s * fchs , void * pld , u32 d_id , u32 s_id , u16 ox_id , u64 port_name , u64 node_name , u16 pdu_size ) ; 
/*--fc_plogi_acc_build--*/
enum fc_parse_status fc_plogi_rsp_parse ( struct fchs_s * fchs , int len , u64 port_name ) ; 
/*--fc_plogi_rsp_parse--*/
enum fc_parse_status fc_plogi_parse ( struct fchs_s * fchs ) ; 
/*--fc_plogi_parse--*/
u16 fc_prli_build ( struct fchs_s * fchs , void * pld , u32 d_id , u32 s_id , u16 ox_id ) ; 
/*--fc_prli_build--*/
u16 fc_prli_acc_build ( struct fchs_s * fchs , void * pld , u32 d_id , u32 s_id , u16 ox_id , enum bfa_port_role role ) ; 
/*--fc_prli_acc_build--*/
enum fc_parse_status fc_prli_rsp_parse ( struct fc_prli_s * prli , int len ) ; 
/*--fc_prli_rsp_parse--*/
enum fc_parse_status fc_prli_parse ( struct fc_prli_s * prli ) ; 
/*--fc_prli_parse--*/
u16 fc_logo_build ( struct fchs_s * fchs , struct fc_logo_s * logo , u32 d_id , u32 s_id , u16 ox_id , u64 port_name ) ; 
/*--fc_logo_build--*/
u16 fc_adisc_build ( struct fchs_s * fchs , struct fc_adisc_s * adisc , u32 d_id , u32 s_id , u16 ox_id , u64 port_name , u64 node_name ) ; 
/*--fc_adisc_build--*/
u16 fc_adisc_acc_build ( struct fchs_s * fchs , struct fc_adisc_s * adisc , u32 d_id , u32 s_id , u16 ox_id , u64 port_name , u64 node_name ) ; 
/*--fc_adisc_acc_build--*/
enum fc_parse_status fc_adisc_rsp_parse ( struct fc_adisc_s * adisc , int len , u64 port_name , u64 node_name ) ; 
/*--fc_adisc_rsp_parse--*/
enum fc_parse_status fc_adisc_parse ( struct fchs_s * fchs , void * pld , u32 host_dap , u64 node_name , u64 port_name ) ; 
/*--fc_adisc_parse--*/
enum fc_parse_status fc_pdisc_parse ( struct fchs_s * fchs , u64 node_name , u64 port_name ) ; 
/*--fc_pdisc_parse--*/
u16 fc_abts_build ( struct fchs_s * fchs , u32 d_id , u32 s_id , u16 ox_id ) ; 
/*--fc_abts_build--*/
enum fc_parse_status fc_abts_rsp_parse ( struct fchs_s * fchs , int len ) ; 
/*--fc_abts_rsp_parse--*/
u16 fc_rrq_build ( struct fchs_s * fchs , struct fc_rrq_s * rrq , u32 d_id , u32 s_id , u16 ox_id , u16 rrq_oxid ) ; 
/*--fc_rrq_build--*/
u16 fc_logo_acc_build ( struct fchs_s * fchs , void * pld , u32 d_id , u32 s_id , u16 ox_id ) ; 
/*--fc_logo_acc_build--*/
u16 fc_ls_rjt_build ( struct fchs_s * fchs , struct fc_ls_rjt_s * ls_rjt , u32 d_id , u32 s_id , u16 ox_id , u8 reason_code , u8 reason_code_expl ) ; 
/*--fc_ls_rjt_build--*/
u16 fc_ba_acc_build ( struct fchs_s * fchs , struct fc_ba_acc_s * ba_acc , u32 d_id , u32 s_id , u16 ox_id , u16 rx_id ) ; 
/*--fc_ba_acc_build--*/
u16 fc_ls_acc_build ( struct fchs_s * fchs , struct fc_els_cmd_s * els_cmd , u32 d_id , u32 s_id , u16 ox_id ) ; 
/*--fc_ls_acc_build--*/
int fc_logout_params_pages ( struct fchs_s * fc_frame , u8 els_code ) ; 
/*--fc_logout_params_pages--*/
u16 fc_tprlo_acc_build ( struct fchs_s * fchs , struct fc_tprlo_acc_s * tprlo_acc , u32 d_id , u32 s_id , u16 ox_id , int num_pages ) ; 
/*--fc_tprlo_acc_build--*/
u16 fc_prlo_acc_build ( struct fchs_s * fchs , struct fc_prlo_acc_s * prlo_acc , u32 d_id , u32 s_id , u16 ox_id , int num_pages ) ; 
/*--fc_prlo_acc_build--*/
u16 fc_rnid_build ( struct fchs_s * fchs , struct fc_rnid_cmd_s * rnid , u32 d_id , u32 s_id , u16 ox_id , u32 data_format ) ; 
/*--fc_rnid_build--*/
u16 fc_rnid_acc_build ( struct fchs_s * fchs , struct fc_rnid_acc_s * rnid_acc , u32 d_id , u32 s_id , u16 ox_id , u32 data_format , struct fc_rnid_common_id_data_s * common_id_data , struct fc_rnid_general_topology_data_s * gen_topo_data ) ; 
/*--fc_rnid_acc_build--*/
u16 fc_rpsc_build ( struct fchs_s * fchs , struct fc_rpsc_cmd_s * rpsc , u32 d_id , u32 s_id , u16 ox_id ) ; 
/*--fc_rpsc_build--*/
u16 fc_rpsc2_build ( struct fchs_s * fchs , struct fc_rpsc2_cmd_s * rpsc2 , u32 d_id , u32 s_id , u32 * pid_list , u16 npids ) ; 
/*--fc_rpsc2_build--*/
u16 fc_rpsc_acc_build ( struct fchs_s * fchs , struct fc_rpsc_acc_s * rpsc_acc , u32 d_id , u32 s_id , u16 ox_id , struct fc_rpsc_speed_info_s * oper_speed ) ; 
/*--fc_rpsc_acc_build--*/
u16 fc_logo_rsp_parse ( struct fchs_s * fchs , int len ) ; 
/*--fc_logo_rsp_parse--*/
u16 fc_pdisc_build ( struct fchs_s * fchs , u32 d_id , u32 s_id , u16 ox_id , u64 port_name , u64 node_name , u16 pdu_size ) ; 
/*--fc_pdisc_build--*/
u16 fc_pdisc_rsp_parse ( struct fchs_s * fchs , int len , u64 port_name ) ; 
/*--fc_pdisc_rsp_parse--*/
u16 fc_prlo_build ( struct fchs_s * fchs , u32 d_id , u32 s_id , u16 ox_id , int num_pages ) ; 
/*--fc_prlo_build--*/
u16 fc_prlo_rsp_parse ( struct fchs_s * fchs , int len ) ; 
/*--fc_prlo_rsp_parse--*/
u16 fc_tprlo_build ( struct fchs_s * fchs , u32 d_id , u32 s_id , u16 ox_id , int num_pages , enum fc_tprlo_type tprlo_type , u32 tpr_id ) ; 
/*--fc_tprlo_build--*/
u16 fc_tprlo_rsp_parse ( struct fchs_s * fchs , int len ) ; 
/*--fc_tprlo_rsp_parse--*/
enum fc_parse_status fc_rrq_rsp_parse ( struct fchs_s * fchs , int len ) ; 
/*--fc_rrq_rsp_parse--*/
u16 fc_ba_rjt_build ( struct fchs_s * fchs , u32 d_id , u32 s_id , u16 ox_id , u32 reason_code , u32 reason_expl ) ; 
/*--fc_ba_rjt_build--*/
u16 fc_gidpn_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u16 ox_id , u64 port_name ) ; 
/*--fc_gidpn_build--*/
u16 fc_gpnid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u16 ox_id , u32 port_id ) ; 
/*--fc_gpnid_build--*/
u16 fc_gnnid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u16 ox_id , u32 port_id ) ; 
/*--fc_gnnid_build--*/
u16 fc_ct_rsp_parse ( struct ct_hdr_s * cthdr ) ; 
/*--fc_ct_rsp_parse--*/
u16 fc_scr_build ( struct fchs_s * fchs , struct fc_scr_s * scr , u8 set_br_reg , u32 s_id , u16 ox_id ) ; 
/*--fc_scr_build--*/
u16 fc_rscn_build ( struct fchs_s * fchs , struct fc_rscn_pl_s * rscn , u32 s_id , u16 ox_id ) ; 
/*--fc_rscn_build--*/
u16 fc_rftid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u16 ox_id , enum bfa_port_role roles ) ; 
/*--fc_rftid_build--*/
u16 fc_rftid_build_sol ( struct fchs_s * fchs , void * pyld , u32 s_id , u16 ox_id , u8 * fc4_bitmap , u32 bitmap_size ) ; 
/*--fc_rftid_build_sol--*/
u16 fc_rffid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u16 ox_id , u8 fc4_type , u8 fc4_ftrs ) ; 
/*--fc_rffid_build--*/
u16 fc_rspnid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u16 ox_id , u8 * name ) ; 
/*--fc_rspnid_build--*/
u16 fc_gid_ft_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u8 fc4_type ) ; 
/*--fc_gid_ft_build--*/
u16 fc_rpnid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u32 port_id , u64 port_name ) ; 
/*--fc_rpnid_build--*/
u16 fc_rnnid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u32 port_id , u64 node_name ) ; 
/*--fc_rnnid_build--*/
u16 fc_rcsid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u32 port_id , u32 cos ) ; 
/*--fc_rcsid_build--*/
u16 fc_rptid_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u32 port_id , u8 port_type ) ; 
/*--fc_rptid_build--*/
u16 fc_ganxt_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u32 port_id ) ; 
/*--fc_ganxt_build--*/
u16 fc_fdmi_reqhdr_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u16 cmd_code ) ; 
/*--fc_fdmi_reqhdr_build--*/
void fc_get_fc4type_bitmask ( u8 fc4_type , u8 * bit_mask ) ; 
/*--fc_get_fc4type_bitmask--*/
u16 fc_gmal_req_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u64 wwn ) ; 
/*--fc_gmal_req_build--*/
u16 fc_gfn_req_build ( struct fchs_s * fchs , void * pyld , u32 s_id , u64 wwn ) ; 
/*--fc_gfn_req_build--*/
void bfa_fcs_fabric_psymb_init ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_psymb_init--*/
void bfa_cb_lps_flogi_comp ( void * bfad , void * uarg , enum bfa_status status ) ; 
/*--bfa_cb_lps_flogi_comp--*/
void bfa_fcs_fabric_attach ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_fabric_attach--*/
void bfa_fcs_fabric_modinit ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_fabric_modinit--*/
void bfa_fcs_fabric_modexit ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_fabric_modexit--*/
void bfa_fcs_fabric_modstart ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_fabric_modstart--*/
void bfa_fcs_fabric_modsusp ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_fabric_modsusp--*/
enum bfa_boolean bfa_fcs_fabric_is_loopback ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_is_loopback--*/
enum bfa_boolean bfa_fcs_fabric_is_auth_failed ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_is_auth_failed--*/
enum bfa_pport_type bfa_fcs_fabric_port_type ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_port_type--*/
void bfa_fcs_fabric_link_up ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_link_up--*/
void bfa_fcs_fabric_link_down ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_link_down--*/
void bfa_fcs_fabric_addvport ( struct bfa_fcs_fabric_s * fabric , struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_fabric_addvport--*/
void bfa_fcs_fabric_delvport ( struct bfa_fcs_fabric_s * fabric , struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_fabric_delvport--*/
void bfa_fcs_fabric_port_delete_comp ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_port_delete_comp--*/
int bfa_fcs_fabric_is_online ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_is_online--*/
enum bfa_status bfa_fcs_fabric_addvf ( struct bfa_fcs_fabric_s * vf , struct bfa_fcs_s * fcs , struct bfa_port_cfg_s * port_cfg , struct bfad_vf_s * vf_drv ) ; 
/*--bfa_fcs_fabric_addvf--*/
struct bfa_fcs_vport_s * bfa_fcs_fabric_vport_lookup ( struct bfa_fcs_fabric_s * fabric , u64 pwwn ) ; 
/*--bfa_fcs_fabric_vport_lookup--*/
u16 bfa_fcs_fabric_vport_count ( struct bfa_fcs_fabric_s * fabric ) ; 
/*--bfa_fcs_fabric_vport_count--*/
void bfa_fcs_fabric_uf_recv ( struct bfa_fcs_fabric_s * fabric , struct fchs_s * fchs , u16 len ) ; 
/*--bfa_fcs_fabric_uf_recv--*/
void bfa_fcs_auth_finished ( struct bfa_fcs_fabric_s * fabric , enum auth_status status ) ; 
/*--bfa_fcs_auth_finished--*/
void bfa_fcs_fabric_set_fabric_name ( struct bfa_fcs_fabric_s * fabric , u64 fabric_name ) ; 
/*--bfa_fcs_fabric_set_fabric_name--*/
void bfa_cb_lps_flogo_comp ( void * bfad , void * uarg ) ; 
/*--bfa_cb_lps_flogo_comp--*/
struct bfa_fcs_itnim_s * bfa_fcs_itnim_create ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_itnim_create--*/
void bfa_fcs_itnim_delete ( struct bfa_fcs_itnim_s * itnim ) ; 
/*--bfa_fcs_itnim_delete--*/
void bfa_fcs_itnim_rport_online ( struct bfa_fcs_itnim_s * itnim ) ; 
/*--bfa_fcs_itnim_rport_online--*/
void bfa_fcs_itnim_rport_offline ( struct bfa_fcs_itnim_s * itnim ) ; 
/*--bfa_fcs_itnim_rport_offline--*/
void bfa_fcs_itnim_is_initiator ( struct bfa_fcs_itnim_s * itnim ) ; 
/*--bfa_fcs_itnim_is_initiator--*/
enum bfa_status bfa_fcs_itnim_get_online_state ( struct bfa_fcs_itnim_s * itnim ) ; 
/*--bfa_fcs_itnim_get_online_state--*/
void bfa_cb_itnim_online ( void * cbarg ) ; 
/*--bfa_cb_itnim_online--*/
void bfa_cb_itnim_offline ( void * cb_arg ) ; 
/*--bfa_cb_itnim_offline--*/
void bfa_cb_itnim_tov_begin ( void * cb_arg ) ; 
/*--bfa_cb_itnim_tov_begin--*/
void bfa_cb_itnim_tov ( void * cb_arg ) ; 
/*--bfa_cb_itnim_tov--*/
void bfa_cb_itnim_sler ( void * cb_arg ) ; 
/*--bfa_cb_itnim_sler--*/
struct bfa_fcs_itnim_s * bfa_fcs_itnim_lookup ( struct bfa_fcs_port_s * port , u64 rpwwn ) ; 
/*--bfa_fcs_itnim_lookup--*/
enum bfa_status bfa_fcs_itnim_attr_get ( struct bfa_fcs_port_s * port , u64 rpwwn , struct bfa_itnim_attr_s * attr ) ; 
/*--bfa_fcs_itnim_attr_get--*/
enum bfa_status bfa_fcs_itnim_stats_get ( struct bfa_fcs_port_s * port , u64 rpwwn , struct bfa_itnim_stats_s * stats ) ; 
/*--bfa_fcs_itnim_stats_get--*/
enum bfa_status bfa_fcs_itnim_stats_clear ( struct bfa_fcs_port_s * port , u64 rpwwn ) ; 
/*--bfa_fcs_itnim_stats_clear--*/
void bfa_fcs_fcpim_uf_recv ( struct bfa_fcs_itnim_s * itnim , struct fchs_s * fchs , u16 len ) ; 
/*--bfa_fcs_fcpim_uf_recv--*/
void bfa_fcs_itnim_pause ( struct bfa_fcs_itnim_s * itnim ) ; 
/*--bfa_fcs_itnim_pause--*/
void bfa_fcs_itnim_resume ( struct bfa_fcs_itnim_s * itnim ) ; 
/*--bfa_fcs_itnim_resume--*/
enum bfa_status bfa_fcs_vf_mode_enable ( struct bfa_fcs_s * fcs , u16 vf_id ) ; 
/*--bfa_fcs_vf_mode_enable--*/
enum bfa_status bfa_fcs_vf_mode_disable ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_vf_mode_disable--*/
enum bfa_status bfa_fcs_vf_create ( struct bfa_fcs_fabric_s * vf , struct bfa_fcs_s * fcs , u16 vf_id , struct bfa_port_cfg_s * port_cfg , struct bfad_vf_s * vf_drv ) ; 
/*--bfa_fcs_vf_create--*/
enum bfa_status bfa_fcs_vf_delete ( struct bfa_fcs_fabric_s * vf ) ; 
/*--bfa_fcs_vf_delete--*/
void bfa_fcs_vf_start ( struct bfa_fcs_fabric_s * vf ) ; 
/*--bfa_fcs_vf_start--*/
enum bfa_status bfa_fcs_vf_stop ( struct bfa_fcs_fabric_s * vf ) ; 
/*--bfa_fcs_vf_stop--*/
void bfa_fcs_vf_get_attr ( struct bfa_fcs_fabric_s * vf , struct bfa_vf_attr_s * vf_attr ) ; 
/*--bfa_fcs_vf_get_attr--*/
void bfa_fcs_vf_get_stats ( struct bfa_fcs_fabric_s * vf , struct bfa_vf_stats_s * vf_stats ) ; 
/*--bfa_fcs_vf_get_stats--*/
void bfa_fcs_vf_clear_stats ( struct bfa_fcs_fabric_s * vf ) ; 
/*--bfa_fcs_vf_clear_stats--*/
struct bfa_fcs_fabric_s * bfa_fcs_vf_lookup ( struct bfa_fcs_s * fcs , u16 vf_id ) ; 
/*--bfa_fcs_vf_lookup--*/
struct bfad_vf_s * bfa_fcs_vf_get_drv_vf ( struct bfa_fcs_fabric_s * vf ) ; 
/*--bfa_fcs_vf_get_drv_vf--*/
void bfa_fcs_vf_list ( struct bfa_fcs_s * fcs , u16 * vf_ids , int * nvfs ) ; 
/*--bfa_fcs_vf_list--*/
void bfa_fcs_vf_list_all ( struct bfa_fcs_s * fcs , u16 * vf_ids , int * nvfs ) ; 
/*--bfa_fcs_vf_list_all--*/
void bfa_fcs_vf_get_ports ( struct bfa_fcs_fabric_s * vf , u64 lpwwn [ ] , int * nlports ) ; 
/*--bfa_fcs_vf_get_ports--*/
struct bfa_fcs_tin_s * bfa_fcs_tin_create ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_tin_create--*/
void bfa_fcs_tin_delete ( struct bfa_fcs_tin_s * tin ) ; 
/*--bfa_fcs_tin_delete--*/
void bfa_fcs_tin_rport_offline ( struct bfa_fcs_tin_s * tin ) ; 
/*--bfa_fcs_tin_rport_offline--*/
void bfa_fcs_tin_rport_online ( struct bfa_fcs_tin_s * tin ) ; 
/*--bfa_fcs_tin_rport_online--*/
void bfa_fcs_tin_rx_prli ( struct bfa_fcs_tin_s * tin , struct fchs_s * fchs , u16 len ) ; 
/*--bfa_fcs_tin_rx_prli--*/
void bfa_fcs_fcptm_uf_recv ( struct bfa_fcs_tin_s * tin , struct fchs_s * fchs , u16 len ) ; 
/*--bfa_fcs_fcptm_uf_recv--*/
void bfa_fcs_tin_pause ( struct bfa_fcs_tin_s * tin ) ; 
/*--bfa_fcs_tin_pause--*/
void bfa_fcs_tin_resume ( struct bfa_fcs_tin_s * tin ) ; 
/*--bfa_fcs_tin_resume--*/
void bfa_fcs_attach ( struct bfa_fcs_s * fcs , struct bfa_s * bfa , struct bfad_s * bfad , enum bfa_boolean min_cfg ) ; 
/*--bfa_fcs_attach--*/
void bfa_fcs_init ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_init--*/
void bfa_fcs_start ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_start--*/
void bfa_fcs_driver_info_init ( struct bfa_fcs_s * fcs , struct bfa_fcs_driver_info_s * driver_info ) ; 
/*--bfa_fcs_driver_info_init--*/
void bfa_fcs_set_fdmi_param ( struct bfa_fcs_s * fcs , enum bfa_boolean fdmi_enable ) ; 
/*--bfa_fcs_set_fdmi_param--*/
void bfa_fcs_exit ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_exit--*/
void bfa_fcs_trc_init ( struct bfa_fcs_s * fcs , struct bfa_trc_mod_s * trcmod ) ; 
/*--bfa_fcs_trc_init--*/
void bfa_fcs_log_init ( struct bfa_fcs_s * fcs , struct bfa_log_mod_s * logmod ) ; 
/*--bfa_fcs_log_init--*/
void bfa_fcs_aen_init ( struct bfa_fcs_s * fcs , struct bfa_aen_s * aen ) ; 
/*--bfa_fcs_aen_init--*/
void bfa_fcs_modexit_comp ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_modexit_comp--*/
void bfa_fcs_pport_attach ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_pport_attach--*/
void bfa_fcs_uf_attach ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_uf_attach--*/
void bfa_fcs_port_modinit ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_port_modinit--*/
void bfa_fcs_port_modexit ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_port_modexit--*/
void bfa_fcs_port_uf_recv ( struct bfa_fcs_port_s * lport , struct fchs_s * fchs , u16 len ) ; 
/*--bfa_fcs_port_uf_recv--*/
struct bfa_fcs_rport_s * bfa_fcs_port_get_rport_by_pid ( struct bfa_fcs_port_s * port , u32 pid ) ; 
/*--bfa_fcs_port_get_rport_by_pid--*/
struct bfa_fcs_rport_s * bfa_fcs_port_get_rport_by_pwwn ( struct bfa_fcs_port_s * port , u64 pwwn ) ; 
/*--bfa_fcs_port_get_rport_by_pwwn--*/
struct bfa_fcs_rport_s * bfa_fcs_port_get_rport_by_nwwn ( struct bfa_fcs_port_s * port , u64 nwwn ) ; 
/*--bfa_fcs_port_get_rport_by_nwwn--*/
void bfa_fcs_port_add_rport ( struct bfa_fcs_port_s * port , struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_port_add_rport--*/
void bfa_fcs_port_del_rport ( struct bfa_fcs_port_s * port , struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_port_del_rport--*/
void bfa_fcs_port_online ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_online--*/
void bfa_fcs_port_offline ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_offline--*/
void bfa_fcs_port_delete ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_delete--*/
void bfa_fcs_port_lip ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_lip--*/
enum bfa_boolean bfa_fcs_port_is_online ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_is_online--*/
void bfa_fcs_lport_attach ( struct bfa_fcs_port_s * lport , struct bfa_fcs_s * fcs , uint16_t vf_id , struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_lport_attach--*/
void bfa_fcs_lport_init ( struct bfa_fcs_port_s * lport , struct bfa_port_cfg_s * port_cfg ) ; 
/*--bfa_fcs_lport_init--*/
void bfa_fcs_port_get_attr ( struct bfa_fcs_port_s * port , struct bfa_port_attr_s * port_attr ) ; 
/*--bfa_fcs_port_get_attr--*/
void bfa_fcs_port_fab_init ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_fab_init--*/
void bfa_fcs_port_fab_online ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_fab_online--*/
void bfa_fcs_port_fab_offline ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_fab_offline--*/
void bfa_fcs_port_fdmi_init ( struct bfa_fcs_port_ms_s * ms ) ; 
/*--bfa_fcs_port_fdmi_init--*/
void bfa_fcs_port_fdmi_offline ( struct bfa_fcs_port_ms_s * ms ) ; 
/*--bfa_fcs_port_fdmi_offline--*/
void bfa_fcs_port_fdmi_online ( struct bfa_fcs_port_ms_s * ms ) ; 
/*--bfa_fcs_port_fdmi_online--*/
void bfa_fcs_port_ms_init ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_ms_init--*/
void bfa_fcs_port_ms_offline ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_ms_offline--*/
void bfa_fcs_port_ms_online ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_ms_online--*/
void bfa_fcs_port_ms_fabric_rscn ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_ms_fabric_rscn--*/
void bfa_fcs_port_ns_init ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_ns_init--*/
void bfa_fcs_port_ns_offline ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_ns_offline--*/
void bfa_fcs_port_ns_online ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_ns_online--*/
void bfa_fcs_port_ns_query ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_ns_query--*/
void bfa_fcs_port_scn_init ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_scn_init--*/
void bfa_fcs_port_scn_offline ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_scn_offline--*/
void bfa_fcs_port_scn_online ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_scn_online--*/
void bfa_fcs_port_scn_process_rscn ( struct bfa_fcs_port_s * port , struct fchs_s * fchs , u32 len ) ; 
/*--bfa_fcs_port_scn_process_rscn--*/
void bfa_fcs_port_loop_init ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_loop_init--*/
void bfa_fcs_port_loop_online ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_loop_online--*/
void bfa_fcs_port_loop_offline ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_loop_offline--*/
void bfa_fcs_port_loop_lip ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_loop_lip--*/
void bfa_fcs_cfg_base_port ( struct bfa_fcs_s * fcs , struct bfa_port_cfg_s * port_cfg ) ; 
/*--bfa_fcs_cfg_base_port--*/
struct bfa_fcs_port_s * bfa_fcs_get_base_port ( struct bfa_fcs_s * fcs ) ; 
/*--bfa_fcs_get_base_port--*/
u64 bfa_fcs_port_get_rport ( struct bfa_fcs_port_s * port , u64 wwn , int index , int nrports , enum bfa_boolean bwwn ) ; 
/*--bfa_fcs_port_get_rport--*/
void bfa_fcs_port_get_rports ( struct bfa_fcs_port_s * port , u64 rport_wwns [ ] , int * nrports ) ; 
/*--bfa_fcs_port_get_rports--*/
enum bfa_pport_speed bfa_fcs_port_get_rport_max_speed ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_get_rport_max_speed--*/
struct bfa_fcs_port_s * bfa_fcs_lookup_port ( struct bfa_fcs_s * fcs , u16 vf_id , u64 lpwwn ) ; 
/*--bfa_fcs_lookup_port--*/
void bfa_fcs_port_get_info ( struct bfa_fcs_port_s * port , struct bfa_port_info_s * port_info ) ; 
/*--bfa_fcs_port_get_info--*/
void bfa_fcs_port_get_stats ( struct bfa_fcs_port_s * fcs_port , struct bfa_port_stats_s * port_stats ) ; 
/*--bfa_fcs_port_get_stats--*/
void bfa_fcs_port_clear_stats ( struct bfa_fcs_port_s * fcs_port ) ; 
/*--bfa_fcs_port_clear_stats--*/
void bfa_fcs_port_enable_ipfc_roles ( struct bfa_fcs_port_s * fcs_port ) ; 
/*--bfa_fcs_port_enable_ipfc_roles--*/
void bfa_fcs_port_disable_ipfc_roles ( struct bfa_fcs_port_s * fcs_port ) ; 
/*--bfa_fcs_port_disable_ipfc_roles--*/
void bfa_fcs_port_n2n_init ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_n2n_init--*/
void bfa_fcs_port_n2n_online ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_n2n_online--*/
void bfa_fcs_port_n2n_offline ( struct bfa_fcs_port_s * port ) ; 
/*--bfa_fcs_port_n2n_offline--*/
struct bfa_fcs_rport_s * bfa_fcs_rport_create ( struct bfa_fcs_port_s * port , u32 rpid ) ; 
/*--bfa_fcs_rport_create--*/
struct bfa_fcs_rport_s * bfa_fcs_rport_create_by_wwn ( struct bfa_fcs_port_s * port , u64 rpwwn ) ; 
/*--bfa_fcs_rport_create_by_wwn--*/
void bfa_fcs_rport_start ( struct bfa_fcs_port_s * port , struct fchs_s * fchs , struct fc_logi_s * plogi ) ; 
/*--bfa_fcs_rport_start--*/
void bfa_fcs_rport_plogi_create ( struct bfa_fcs_port_s * port , struct fchs_s * fchs , struct fc_logi_s * plogi ) ; 
/*--bfa_fcs_rport_plogi_create--*/
void bfa_fcs_rport_plogi ( struct bfa_fcs_rport_s * rport , struct fchs_s * rx_fchs , struct fc_logi_s * plogi ) ; 
/*--bfa_fcs_rport_plogi--*/
void bfa_fcs_rport_delete ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_delete--*/
void bfa_fcs_rport_offline ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_offline--*/
void bfa_fcs_rport_online ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_online--*/
void bfa_fcs_rport_scn ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_scn--*/
void bfa_fcs_rport_itnim_ack ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_itnim_ack--*/
void bfa_fcs_rport_tin_ack ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_tin_ack--*/
void bfa_cb_rport_online ( void * cbarg ) ; 
/*--bfa_cb_rport_online--*/
void bfa_cb_rport_offline ( void * cbarg ) ; 
/*--bfa_cb_rport_offline--*/
void bfa_cb_rport_qos_scn_flowid ( void * cbarg , struct bfa_rport_qos_attr_s old_qos_attr , struct bfa_rport_qos_attr_s new_qos_attr ) ; 
/*--bfa_cb_rport_qos_scn_flowid--*/
void bfa_cb_rport_qos_scn_prio ( void * cbarg , struct bfa_rport_qos_attr_s old_qos_attr , struct bfa_rport_qos_attr_s new_qos_attr ) ; 
/*--bfa_cb_rport_qos_scn_prio--*/
void bfa_fcs_rport_logo_imp ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_logo_imp--*/
void bfa_fcs_rport_uf_recv ( struct bfa_fcs_rport_s * rport , struct fchs_s * fchs , u16 len ) ; 
/*--bfa_fcs_rport_uf_recv--*/
int bfa_fcs_rport_get_state ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_get_state--*/
void bfa_fcs_rport_set_del_timeout ( u8 rport_tmo ) ; 
/*--bfa_fcs_rport_set_del_timeout--*/
enum bfa_status bfa_fcs_rport_add ( struct bfa_fcs_port_s * port , u64 * pwwn , struct bfa_fcs_rport_s * rport , struct bfad_rport_s * rport_drv ) ; 
/*--bfa_fcs_rport_add--*/
enum bfa_status bfa_fcs_rport_remove ( struct bfa_fcs_rport_s * rport_in ) ; 
/*--bfa_fcs_rport_remove--*/
void bfa_fcs_rport_get_attr ( struct bfa_fcs_rport_s * rport , struct bfa_rport_attr_s * rport_attr ) ; 
/*--bfa_fcs_rport_get_attr--*/
void bfa_fcs_rport_get_stats ( struct bfa_fcs_rport_s * rport , struct bfa_rport_stats_s * stats ) ; 
/*--bfa_fcs_rport_get_stats--*/
void bfa_fcs_rport_clear_stats ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rport_clear_stats--*/
struct bfa_fcs_rport_s * bfa_fcs_rport_lookup ( struct bfa_fcs_port_s * port , u64 rpwwn ) ; 
/*--bfa_fcs_rport_lookup--*/
struct bfa_fcs_rport_s * bfa_fcs_rport_lookup_by_nwwn ( struct bfa_fcs_port_s * port , u64 rnwwn ) ; 
/*--bfa_fcs_rport_lookup_by_nwwn--*/
void bfa_fcs_rport_set_speed ( struct bfa_fcs_rport_s * rport , enum bfa_pport_speed speed ) ; 
/*--bfa_fcs_rport_set_speed--*/
void bfa_fcs_rpf_init ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rpf_init--*/
void bfa_fcs_rpf_rport_online ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rpf_rport_online--*/
void bfa_fcs_rpf_rport_offline ( struct bfa_fcs_rport_s * rport ) ; 
/*--bfa_fcs_rpf_rport_offline--*/
void bfa_fcs_vport_online ( struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_vport_online--*/
void bfa_fcs_vport_offline ( struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_vport_offline--*/
void bfa_fcs_vport_cleanup ( struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_vport_cleanup--*/
void bfa_fcs_vport_delete_comp ( struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_vport_delete_comp--*/
enum bfa_status bfa_fcs_vport_create ( struct bfa_fcs_vport_s * vport , struct bfa_fcs_s * fcs , u16 vf_id , struct bfa_port_cfg_s * vport_cfg , struct bfad_vport_s * vport_drv ) ; 
/*--bfa_fcs_vport_create--*/
enum bfa_status bfa_fcs_vport_start ( struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_vport_start--*/
enum bfa_status bfa_fcs_vport_stop ( struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_vport_stop--*/
enum bfa_status bfa_fcs_vport_delete ( struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_vport_delete--*/
void bfa_fcs_vport_get_attr ( struct bfa_fcs_vport_s * vport , struct bfa_vport_attr_s * attr ) ; 
/*--bfa_fcs_vport_get_attr--*/
void bfa_fcs_vport_get_stats ( struct bfa_fcs_vport_s * vport , struct bfa_vport_stats_s * stats ) ; 
/*--bfa_fcs_vport_get_stats--*/
void bfa_fcs_vport_clr_stats ( struct bfa_fcs_vport_s * vport ) ; 
/*--bfa_fcs_vport_clr_stats--*/
struct bfa_fcs_vport_s * bfa_fcs_vport_lookup ( struct bfa_fcs_s * fcs , u16 vf_id , u64 vpwwn ) ; 
/*--bfa_fcs_vport_lookup--*/
void bfa_cb_lps_fdisc_comp ( void * bfad , void * uarg , enum bfa_status status ) ; 
/*--bfa_cb_lps_fdisc_comp--*/
void bfa_cb_lps_fdisclogo_comp ( void * bfad , void * uarg ) ; 
/*--bfa_cb_lps_fdisclogo_comp--*/
void bfa_cb_lps_cvl_event ( void * bfad , void * uarg ) ; 
/*--bfa_cb_lps_cvl_event--*/
void bnx2i_identify_device ( struct bnx2i_hba * hba ) ; 
/*--bnx2i_identify_device--*/
struct bnx2i_hba * get_adapter_list_head ( void ) ; 
/*--get_adapter_list_head--*/
struct bnx2i_hba * bnx2i_find_hba_for_cnic ( struct cnic_dev * cnic ) ; 
/*--bnx2i_find_hba_for_cnic--*/
void bnx2i_start ( void * handle ) ; 
/*--bnx2i_start--*/
void bnx2i_stop ( void * handle ) ; 
/*--bnx2i_stop--*/
void bnx2i_register_device ( struct bnx2i_hba * hba ) ; 
/*--bnx2i_register_device--*/
void bnx2i_reg_dev_all ( void ) ; 
/*--bnx2i_reg_dev_all--*/
void bnx2i_unreg_dev_all ( void ) ; 
/*--bnx2i_unreg_dev_all--*/
void bnx2i_ulp_init ( struct cnic_dev * dev ) ; 
/*--bnx2i_ulp_init--*/
void bnx2i_ulp_exit ( struct cnic_dev * dev ) ; 
/*--bnx2i_ulp_exit--*/
void bnx2i_arm_cq_event_coalescing ( struct bnx2i_endpoint * ep , u8 action ) ; 
/*--bnx2i_arm_cq_event_coalescing--*/
void bnx2i_get_rq_buf ( struct bnx2i_conn * bnx2i_conn , char * ptr , int len ) ; 
/*--bnx2i_get_rq_buf--*/
void bnx2i_put_rq_buf ( struct bnx2i_conn * bnx2i_conn , int count ) ; 
/*--bnx2i_put_rq_buf--*/
int bnx2i_send_iscsi_login ( struct bnx2i_conn * bnx2i_conn , struct iscsi_task * task ) ; 
/*--bnx2i_send_iscsi_login--*/
int bnx2i_send_iscsi_tmf ( struct bnx2i_conn * bnx2i_conn , struct iscsi_task * mtask ) ; 
/*--bnx2i_send_iscsi_tmf--*/
int bnx2i_send_iscsi_scsicmd ( struct bnx2i_conn * bnx2i_conn , struct bnx2i_cmd * cmd ) ; 
/*--bnx2i_send_iscsi_scsicmd--*/
int bnx2i_send_iscsi_nopout ( struct bnx2i_conn * bnx2i_conn , struct iscsi_task * task , u32 ttt , char * datap , int data_len , int unsol ) ; 
/*--bnx2i_send_iscsi_nopout--*/
int bnx2i_send_iscsi_logout ( struct bnx2i_conn * bnx2i_conn , struct iscsi_task * task ) ; 
/*--bnx2i_send_iscsi_logout--*/
void bnx2i_update_iscsi_conn ( struct iscsi_conn * conn ) ; 
/*--bnx2i_update_iscsi_conn--*/
void bnx2i_ep_ofld_timer ( unsigned long data ) ; 
/*--bnx2i_ep_ofld_timer--*/
void bnx2i_send_cmd_cleanup_req ( struct bnx2i_hba * hba , struct bnx2i_cmd * cmd ) ; 
/*--bnx2i_send_cmd_cleanup_req--*/
void bnx2i_send_conn_destroy ( struct bnx2i_hba * hba , struct bnx2i_endpoint * ep ) ; 
/*--bnx2i_send_conn_destroy--*/
void bnx2i_send_conn_ofld_req ( struct bnx2i_hba * hba , struct bnx2i_endpoint * ep ) ; 
/*--bnx2i_send_conn_ofld_req--*/
int bnx2i_alloc_qp_resc ( struct bnx2i_hba * hba , struct bnx2i_endpoint * ep ) ; 
/*--bnx2i_alloc_qp_resc--*/
void bnx2i_free_qp_resc ( struct bnx2i_hba * hba , struct bnx2i_endpoint * ep ) ; 
/*--bnx2i_free_qp_resc--*/
int bnx2i_send_fw_iscsi_init_msg ( struct bnx2i_hba * hba ) ; 
/*--bnx2i_send_fw_iscsi_init_msg--*/
int bnx2i_map_ep_dbell_regs ( struct bnx2i_endpoint * ep ) ; 
/*--bnx2i_map_ep_dbell_regs--*/
void bnx2i_iscsi_unmap_sg_list ( struct bnx2i_cmd * cmd ) ; 
/*--bnx2i_iscsi_unmap_sg_list--*/
struct bnx2i_conn * bnx2i_get_conn_from_id ( struct bnx2i_hba * hba , u16 iscsi_cid ) ; 
/*--bnx2i_get_conn_from_id--*/
void bnx2i_drop_session ( struct iscsi_cls_session * cls_session ) ; 
/*--bnx2i_drop_session--*/
struct bnx2i_endpoint * bnx2i_find_ep_in_ofld_list ( struct bnx2i_hba * hba , u32 iscsi_cid ) ; 
/*--bnx2i_find_ep_in_ofld_list--*/
struct bnx2i_endpoint * bnx2i_find_ep_in_destroy_list ( struct bnx2i_hba * hba , u32 iscsi_cid ) ; 
/*--bnx2i_find_ep_in_destroy_list--*/
struct bnx2i_hba * bnx2i_alloc_hba ( struct cnic_dev * cnic ) ; 
/*--bnx2i_alloc_hba--*/
void bnx2i_free_hba ( struct bnx2i_hba * hba ) ; 
/*--bnx2i_free_hba--*/
struct cxgb3i_adapter * cxgb3i_adapter_find_by_tdev ( struct t3cdev * tdev ) ; 
/*--cxgb3i_adapter_find_by_tdev--*/
void cxgb3i_adapter_open ( struct t3cdev * t3dev ) ; 
/*--cxgb3i_adapter_open--*/
void cxgb3i_adapter_close ( struct t3cdev * t3dev ) ; 
/*--cxgb3i_adapter_close--*/
struct cxgb3i_hba * cxgb3i_hba_host_add ( struct cxgb3i_adapter * snic , struct net_device * ndev ) ; 
/*--cxgb3i_hba_host_add--*/
void cxgb3i_hba_host_remove ( struct cxgb3i_hba * hba ) ; 
/*--cxgb3i_hba_host_remove--*/
int cxgb3i_reserve_itt ( struct iscsi_task * task , itt_t * hdr_itt ) ; 
/*--cxgb3i_reserve_itt--*/
void cxgb3i_release_itt ( struct iscsi_task * task , itt_t hdr_itt ) ; 
/*--cxgb3i_release_itt--*/
int cxgb3i_iscsi_init ( void ) ; 
/*--cxgb3i_iscsi_init--*/
void cxgb3i_iscsi_cleanup ( void ) ; 
/*--cxgb3i_iscsi_cleanup--*/
void cxgb3i_conn_cleanup_task ( struct iscsi_task * task ) ; 
/*--cxgb3i_conn_cleanup_task--*/
int cxgb3i_conn_alloc_pdu ( struct iscsi_task * task , u8 opcode ) ; 
/*--cxgb3i_conn_alloc_pdu--*/
int cxgb3i_conn_init_pdu ( struct iscsi_task * task , unsigned int offset , unsigned int count ) ; 
/*--cxgb3i_conn_init_pdu--*/
int cxgb3i_conn_xmit_pdu ( struct iscsi_task * task ) ; 
/*--cxgb3i_conn_xmit_pdu--*/
int cxgb3i_pdu_init ( void ) ; 
/*--cxgb3i_pdu_init--*/
void cxgb3i_pdu_cleanup ( void ) ; 
/*--cxgb3i_pdu_cleanup--*/
void cxgb3i_conn_pdu_ready ( struct s3_conn * c3cn ) ; 
/*--cxgb3i_conn_pdu_ready--*/
void cxgb3i_conn_tx_open ( struct s3_conn * c3cn ) ; 
/*--cxgb3i_conn_tx_open--*/
void cxgb3i_conn_closing ( struct s3_conn * c3cn ) ; 
/*--cxgb3i_conn_closing--*/
struct s3_conn * cxgb3i_c3cn_create ( void ) ; 
/*--cxgb3i_c3cn_create--*/
void cxgb3i_c3cn_release ( struct s3_conn * c3cn ) ; 
/*--cxgb3i_c3cn_release--*/
int cxgb3i_c3cn_connect ( struct net_device * dev , struct s3_conn * c3cn , struct sockaddr_in * usin ) ; 
/*--cxgb3i_c3cn_connect--*/
void cxgb3i_c3cn_rx_credits ( struct s3_conn * c3cn , int copied ) ; 
/*--cxgb3i_c3cn_rx_credits--*/
int cxgb3i_c3cn_send_pdus ( struct s3_conn * c3cn , struct sk_buff * skb ) ; 
/*--cxgb3i_c3cn_send_pdus--*/
void cxgb3i_sdev_cleanup ( void ) ; 
/*--cxgb3i_sdev_cleanup--*/
int cxgb3i_sdev_init ( cxgb3_cpl_handler_func * cpl_handlers ) ; 
/*--cxgb3i_sdev_init--*/
void cxgb3i_sdev_add ( struct t3cdev * cdev , struct cxgb3_client * client ) ; 
/*--cxgb3i_sdev_add--*/
void cxgb3i_sdev_remove ( struct t3cdev * cdev ) ; 
/*--cxgb3i_sdev_remove--*/
int cxgb3i_ddp_find_page_index ( unsigned long pgsz ) ; 
/*--cxgb3i_ddp_find_page_index--*/
int cxgb3i_ddp_adjust_page_table ( void ) ; 
/*--cxgb3i_ddp_adjust_page_table--*/
struct cxgb3i_gather_list * cxgb3i_ddp_make_gl ( unsigned int xferlen , struct scatterlist * sgl , unsigned int sgcnt , struct pci_dev * pdev , gfp_t gfp ) ; 
/*--cxgb3i_ddp_make_gl--*/
void cxgb3i_ddp_release_gl ( struct cxgb3i_gather_list * gl , struct pci_dev * pdev ) ; 
/*--cxgb3i_ddp_release_gl--*/
int cxgb3i_ddp_tag_reserve ( struct t3cdev * tdev , unsigned int tid , struct cxgb3i_tag_format * tformat , u32 * tagp , struct cxgb3i_gather_list * gl , gfp_t gfp ) ; 
/*--cxgb3i_ddp_tag_reserve--*/
void cxgb3i_ddp_tag_release ( struct t3cdev * tdev , u32 tag ) ; 
/*--cxgb3i_ddp_tag_release--*/
int cxgb3i_setup_conn_host_pagesize ( struct t3cdev * tdev , unsigned int tid , int reply ) ; 
/*--cxgb3i_setup_conn_host_pagesize--*/
int cxgb3i_setup_conn_pagesize ( struct t3cdev * tdev , unsigned int tid , int reply , unsigned long pgsz ) ; 
/*--cxgb3i_setup_conn_pagesize--*/
int cxgb3i_setup_conn_digest ( struct t3cdev * tdev , unsigned int tid , int hcrc , int dcrc , int reply ) ; 
/*--cxgb3i_setup_conn_digest--*/
int cxgb3i_adapter_ddp_info ( struct t3cdev * tdev , struct cxgb3i_tag_format * tformat , unsigned int * txsz , unsigned int * rxsz ) ; 
/*--cxgb3i_adapter_ddp_info--*/
void cxgb3i_ddp_cleanup ( struct t3cdev * tdev ) ; 
/*--cxgb3i_ddp_cleanup--*/
void cxgb3i_ddp_init ( struct t3cdev * tdev ) ; 
/*--cxgb3i_ddp_init--*/
void fcoe_interface_cleanup ( struct fcoe_interface * fcoe ) ; 
/*--fcoe_interface_cleanup--*/
bool fcoe_oem_match ( struct fc_frame * fp ) ; 
/*--fcoe_oem_match--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) fcoe_if_exit ( void ) ; 
/*--fcoe_if_exit--*/
int fcoe_rcv ( struct sk_buff * skb , struct net_device * netdev , struct packet_type * ptype , struct net_device * olddev ) ; 
/*--fcoe_rcv--*/
u32 fcoe_fc_crc ( struct fc_frame * fp ) ; 
/*--fcoe_fc_crc--*/
int fcoe_xmit ( struct fc_lport * lport , struct fc_frame * fp ) ; 
/*--fcoe_xmit--*/
int fcoe_percpu_receive_thread ( void * arg ) ; 
/*--fcoe_percpu_receive_thread--*/
int fcoe_link_speed_update ( struct fc_lport * lport ) ; 
/*--fcoe_link_speed_update--*/
int fcoe_link_ok ( struct fc_lport * lport ) ; 
/*--fcoe_link_ok--*/
void fcoe_percpu_clean ( struct fc_lport * lport ) ; 
/*--fcoe_percpu_clean--*/
void fcoe_clean_pending_queue ( struct fc_lport * lport ) ; 
/*--fcoe_clean_pending_queue--*/
int fcoe_reset ( struct Scsi_Host * shost ) ; 
/*--fcoe_reset--*/
void fcoe_ctlr_init ( struct fcoe_ctlr * fip ) ; 
/*--fcoe_ctlr_init--*/
void fcoe_ctlr_destroy ( struct fcoe_ctlr * fip ) ; 
/*--fcoe_ctlr_destroy--*/
void fcoe_ctlr_link_up ( struct fcoe_ctlr * fip ) ; 
/*--fcoe_ctlr_link_up--*/
int fcoe_ctlr_link_down ( struct fcoe_ctlr * fip ) ; 
/*--fcoe_ctlr_link_down--*/
int fcoe_ctlr_els_send ( struct fcoe_ctlr * fip , struct fc_lport * lport , struct sk_buff * skb ) ; 
/*--fcoe_ctlr_els_send--*/
void fcoe_ctlr_recv ( struct fcoe_ctlr * fip , struct sk_buff * skb ) ; 
/*--fcoe_ctlr_recv--*/
int fcoe_ctlr_recv_flogi ( struct fcoe_ctlr * fip , struct fc_lport * lport , struct fc_frame * fp ) ; 
/*--fcoe_ctlr_recv_flogi--*/
u64 fcoe_wwn_from_mac ( unsigned char mac [ 32 ] , unsigned int scheme , unsigned int port ) ; 
/*--fcoe_wwn_from_mac--*/
int fcoe_libfc_config ( struct fc_lport * lport , struct libfc_function_template * tt ) ; 
/*--fcoe_libfc_config--*/
void fnic_free_intr ( struct fnic * fnic ) ; 
/*--fnic_free_intr--*/
int fnic_request_intr ( struct fnic * fnic ) ; 
/*--fnic_request_intr--*/
int fnic_set_intr_mode ( struct fnic * fnic ) ; 
/*--fnic_set_intr_mode--*/
void fnic_clear_intr_mode ( struct fnic * fnic ) ; 
/*--fnic_clear_intr_mode--*/
void fnic_log_q_error ( struct fnic * fnic ) ; 
/*--fnic_log_q_error--*/
void fnic_handle_link_event ( struct fnic * fnic ) ; 
/*--fnic_handle_link_event--*/
int fnic_get_vnic_config ( struct fnic * fnic ) ; 
/*--fnic_get_vnic_config--*/
int fnic_set_nic_config ( struct fnic * fnic , u8 rss_default_cpu , u8 rss_hash_type , u8 rss_hash_bits , u8 rss_base_cpu , u8 rss_enable , u8 tso_ipid_split_en , u8 ig_vlan_strip_en ) ; 
/*--fnic_set_nic_config--*/
void fnic_get_res_counts ( struct fnic * fnic ) ; 
/*--fnic_get_res_counts--*/
void fnic_free_vnic_resources ( struct fnic * fnic ) ; 
/*--fnic_free_vnic_resources--*/
int fnic_alloc_vnic_resources ( struct fnic * fnic ) ; 
/*--fnic_alloc_vnic_resources--*/
void fnic_handle_link ( struct work_struct * work ) ; 
/*--fnic_handle_link--*/
void fnic_handle_frame ( struct work_struct * work ) ; 
/*--fnic_handle_frame--*/
void fnic_update_mac_locked ( struct fnic * fnic , u8 * new ) ; 
/*--fnic_update_mac_locked--*/
void fnic_update_mac ( struct fc_lport * lport , u8 * new ) ; 
/*--fnic_update_mac--*/
void fnic_set_port_id ( struct fc_lport * lport , u32 port_id , struct fc_frame * fp ) ; 
/*--fnic_set_port_id--*/
int fnic_rq_cmpl_handler ( struct fnic * fnic , int rq_work_to_do ) ; 
/*--fnic_rq_cmpl_handler--*/
int fnic_alloc_rq_frame ( struct vnic_rq * rq ) ; 
/*--fnic_alloc_rq_frame--*/
void fnic_free_rq_buf ( struct vnic_rq * rq , struct vnic_rq_buf * buf ) ; 
/*--fnic_free_rq_buf--*/
void fnic_eth_send ( struct fcoe_ctlr * fip , struct sk_buff * skb ) ; 
/*--fnic_eth_send--*/
int fnic_send ( struct fc_lport * lp , struct fc_frame * fp ) ; 
/*--fnic_send--*/
void fnic_flush_tx ( struct fnic * fnic ) ; 
/*--fnic_flush_tx--*/
int fnic_wq_cmpl_handler ( struct fnic * fnic , int work_to_do ) ; 
/*--fnic_wq_cmpl_handler--*/
void fnic_free_wq_buf ( struct vnic_wq * wq , struct vnic_wq_buf * buf ) ; 
/*--fnic_free_wq_buf--*/
const char * fnic_state_to_str ( unsigned int state ) ; 
/*--fnic_state_to_str--*/
int fnic_fw_reset_handler ( struct fnic * fnic ) ; 
/*--fnic_fw_reset_handler--*/
int fnic_flogi_reg_handler ( struct fnic * fnic , u32 fc_id ) ; 
/*--fnic_flogi_reg_handler--*/
int fnic_queuecommand ( struct scsi_cmnd * sc , void ( * done ) ( struct scsi_cmnd * ) ) ; 
/*--fnic_queuecommand--*/
int fnic_wq_copy_cmpl_handler ( struct fnic * fnic , int copy_work_to_do ) ; 
/*--fnic_wq_copy_cmpl_handler--*/
void fnic_wq_copy_cleanup_handler ( struct vnic_wq_copy * wq , struct fcpio_host_req * desc ) ; 
/*--fnic_wq_copy_cleanup_handler--*/
void fnic_rport_exch_reset ( struct fnic * fnic , u32 port_id ) ; 
/*--fnic_rport_exch_reset--*/
void fnic_terminate_rport_io ( struct fc_rport * rport ) ; 
/*--fnic_terminate_rport_io--*/
int fnic_abort_cmd ( struct scsi_cmnd * sc ) ; 
/*--fnic_abort_cmd--*/
int fnic_device_reset ( struct scsi_cmnd * sc ) ; 
/*--fnic_device_reset--*/
int fnic_reset ( struct Scsi_Host * shost ) ; 
/*--fnic_reset--*/
int fnic_host_reset ( struct scsi_cmnd * sc ) ; 
/*--fnic_host_reset--*/
void fnic_scsi_abort_io ( struct fc_lport * lp ) ; 
/*--fnic_scsi_abort_io--*/
void fnic_scsi_cleanup ( struct fc_lport * lp ) ; 
/*--fnic_scsi_cleanup--*/
void fnic_empty_scsi_cleanup ( struct fc_lport * lp ) ; 
/*--fnic_empty_scsi_cleanup--*/
void fnic_exch_mgr_reset ( struct fc_lport * lp , u32 sid , u32 did ) ; 
/*--fnic_exch_mgr_reset--*/
void fnic_cq_free ( struct vnic_cq * cq ) ; 
/*--fnic_cq_free--*/
int fnic_cq_alloc ( struct vnic_dev * vdev , struct vnic_cq * cq , unsigned int index , unsigned int desc_count , unsigned int desc_size ) ; 
/*--fnic_cq_alloc--*/
void fnic_cq_init ( struct vnic_cq * cq , unsigned int flow_control_enable , unsigned int color_enable , unsigned int cq_head , unsigned int cq_tail , unsigned int cq_tail_color , unsigned int interrupt_enable , unsigned int cq_entry_enable , unsigned int cq_message_enable , unsigned int interrupt_offset , u64 cq_message_addr ) ; 
/*--fnic_cq_init--*/
void fnic_cq_clean ( struct vnic_cq * cq ) ; 
/*--fnic_cq_clean--*/
void * fnic_dev_priv ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_priv--*/
unsigned int fnic_dev_get_res_count ( struct vnic_dev * vdev , enum vnic_res_type type ) ; 
/*--fnic_dev_get_res_count--*/
void * fnic_dev_get_res ( struct vnic_dev * vdev , enum vnic_res_type type , unsigned int index ) ; 
/*--fnic_dev_get_res--*/
unsigned int fnic_dev_desc_ring_siz ( struct vnic_dev_ring * ring , unsigned int desc_count , unsigned int desc_size ) ; 
/*--fnic_dev_desc_ring_siz--*/
void fnic_dev_clear_desc_ring ( struct vnic_dev_ring * ring ) ; 
/*--fnic_dev_clear_desc_ring--*/
int fnic_dev_alloc_desc_ring ( struct vnic_dev * vdev , struct vnic_dev_ring * ring , unsigned int desc_count , unsigned int desc_size ) ; 
/*--fnic_dev_alloc_desc_ring--*/
void fnic_dev_free_desc_ring ( struct vnic_dev * vdev , struct vnic_dev_ring * ring ) ; 
/*--fnic_dev_free_desc_ring--*/
int fnic_dev_cmd ( struct vnic_dev * vdev , enum vnic_devcmd_cmd cmd , u64 * a0 , u64 * a1 , int wait ) ; 
/*--fnic_dev_cmd--*/
int fnic_dev_fw_info ( struct vnic_dev * vdev , struct vnic_devcmd_fw_info * * fw_info ) ; 
/*--fnic_dev_fw_info--*/
int fnic_dev_spec ( struct vnic_dev * vdev , unsigned int offset , unsigned int size , void * value ) ; 
/*--fnic_dev_spec--*/
int fnic_dev_stats_clear ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_stats_clear--*/
int fnic_dev_stats_dump ( struct vnic_dev * vdev , struct vnic_stats * * stats ) ; 
/*--fnic_dev_stats_dump--*/
int fnic_dev_close ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_close--*/
int fnic_dev_enable ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_enable--*/
int fnic_dev_disable ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_disable--*/
int fnic_dev_open ( struct vnic_dev * vdev , int arg ) ; 
/*--fnic_dev_open--*/
int fnic_dev_open_done ( struct vnic_dev * vdev , int * done ) ; 
/*--fnic_dev_open_done--*/
int fnic_dev_soft_reset ( struct vnic_dev * vdev , int arg ) ; 
/*--fnic_dev_soft_reset--*/
int fnic_dev_soft_reset_done ( struct vnic_dev * vdev , int * done ) ; 
/*--fnic_dev_soft_reset_done--*/
int fnic_dev_hang_notify ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_hang_notify--*/
int fnic_dev_mac_addr ( struct vnic_dev * vdev , u8 * mac_addr ) ; 
/*--fnic_dev_mac_addr--*/
void fnic_dev_packet_filter ( struct vnic_dev * vdev , int directed , int multicast , int broadcast , int promisc , int allmulti ) ; 
/*--fnic_dev_packet_filter--*/
void fnic_dev_add_addr ( struct vnic_dev * vdev , u8 * addr ) ; 
/*--fnic_dev_add_addr--*/
void fnic_dev_del_addr ( struct vnic_dev * vdev , u8 * addr ) ; 
/*--fnic_dev_del_addr--*/
int fnic_dev_notify_set ( struct vnic_dev * vdev , u16 intr ) ; 
/*--fnic_dev_notify_set--*/
void fnic_dev_notify_unset ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_notify_unset--*/
int fnic_dev_init ( struct vnic_dev * vdev , int arg ) ; 
/*--fnic_dev_init--*/
int fnic_dev_link_status ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_link_status--*/
u32 fnic_dev_port_speed ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_port_speed--*/
u32 fnic_dev_msg_lvl ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_msg_lvl--*/
u32 fnic_dev_mtu ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_mtu--*/
u32 fnic_dev_link_down_cnt ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_link_down_cnt--*/
void fnic_dev_set_intr_mode ( struct vnic_dev * vdev , enum vnic_dev_intr_mode intr_mode ) ; 
/*--fnic_dev_set_intr_mode--*/
enum vnic_dev_intr_mode fnic_dev_get_intr_mode ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_get_intr_mode--*/
void fnic_dev_unregister ( struct vnic_dev * vdev ) ; 
/*--fnic_dev_unregister--*/
struct vnic_dev * fnic_dev_register ( struct vnic_dev * vdev , void * priv , struct pci_dev * pdev , struct vnic_dev_bar * bar ) ; 
/*--fnic_dev_register--*/
void fnic_intr_free ( struct vnic_intr * intr ) ; 
/*--fnic_intr_free--*/
int fnic_intr_alloc ( struct vnic_dev * vdev , struct vnic_intr * intr , unsigned int index ) ; 
/*--fnic_intr_alloc--*/
void fnic_intr_init ( struct vnic_intr * intr , unsigned int coalescing_timer , unsigned int coalescing_type , unsigned int mask_on_assertion ) ; 
/*--fnic_intr_init--*/
void fnic_intr_clean ( struct vnic_intr * intr ) ; 
/*--fnic_intr_clean--*/
void fnic_rq_free ( struct vnic_rq * rq ) ; 
/*--fnic_rq_free--*/
int fnic_rq_alloc ( struct vnic_dev * vdev , struct vnic_rq * rq , unsigned int index , unsigned int desc_count , unsigned int desc_size ) ; 
/*--fnic_rq_alloc--*/
void fnic_rq_init ( struct vnic_rq * rq , unsigned int cq_index , unsigned int error_interrupt_enable , unsigned int error_interrupt_offset ) ; 
/*--fnic_rq_init--*/
unsigned int fnic_rq_error_status ( struct vnic_rq * rq ) ; 
/*--fnic_rq_error_status--*/
void fnic_rq_enable ( struct vnic_rq * rq ) ; 
/*--fnic_rq_enable--*/
int fnic_rq_disable ( struct vnic_rq * rq ) ; 
/*--fnic_rq_disable--*/
void fnic_rq_clean ( struct vnic_rq * rq , void ( * buf_clean ) ( struct vnic_rq * rq , struct vnic_rq_buf * buf ) ) ; 
/*--fnic_rq_clean--*/
void vnic_wq_copy_enable ( struct vnic_wq_copy * wq ) ; 
/*--vnic_wq_copy_enable--*/
int vnic_wq_copy_disable ( struct vnic_wq_copy * wq ) ; 
/*--vnic_wq_copy_disable--*/
void vnic_wq_copy_clean ( struct vnic_wq_copy * wq , void ( * q_clean ) ( struct vnic_wq_copy * wq , struct fcpio_host_req * wq_desc ) ) ; 
/*--vnic_wq_copy_clean--*/
void vnic_wq_copy_free ( struct vnic_wq_copy * wq ) ; 
/*--vnic_wq_copy_free--*/
int vnic_wq_copy_alloc ( struct vnic_dev * vdev , struct vnic_wq_copy * wq , unsigned int index , unsigned int desc_count , unsigned int desc_size ) ; 
/*--vnic_wq_copy_alloc--*/
void vnic_wq_copy_init ( struct vnic_wq_copy * wq , unsigned int cq_index , unsigned int error_interrupt_enable , unsigned int error_interrupt_offset ) ; 
/*--vnic_wq_copy_init--*/
void fnic_wq_free ( struct vnic_wq * wq ) ; 
/*--fnic_wq_free--*/
int fnic_wq_alloc ( struct vnic_dev * vdev , struct vnic_wq * wq , unsigned int index , unsigned int desc_count , unsigned int desc_size ) ; 
/*--fnic_wq_alloc--*/
void fnic_wq_init ( struct vnic_wq * wq , unsigned int cq_index , unsigned int error_interrupt_enable , unsigned int error_interrupt_offset ) ; 
/*--fnic_wq_init--*/
unsigned int fnic_wq_error_status ( struct vnic_wq * wq ) ; 
/*--fnic_wq_error_status--*/
void fnic_wq_enable ( struct vnic_wq * wq ) ; 
/*--fnic_wq_enable--*/
int fnic_wq_disable ( struct vnic_wq * wq ) ; 
/*--fnic_wq_disable--*/
void fnic_wq_clean ( struct vnic_wq * wq , void ( * buf_clean ) ( struct vnic_wq * wq , struct vnic_wq_buf * buf ) ) ; 
/*--fnic_wq_clean--*/
; u32 fc_copy_buffer_to_sglist ( void * buf , size_t len , struct scatterlist * sg , u32 * nents , size_t * offset , enum km_type km_type , u32 * crc ) ; 
/*--fc_copy_buffer_to_sglist--*/
void fc_disc_stop_rports ( struct fc_disc * disc ) ; 
/*--fc_disc_stop_rports--*/
void fc_disc_stop ( struct fc_lport * lport ) ; 
/*--fc_disc_stop--*/
void fc_disc_stop_final ( struct fc_lport * lport ) ; 
/*--fc_disc_stop_final--*/
int fc_disc_init ( struct fc_lport * lport ) ; 
/*--fc_disc_init--*/
void fc_exch_mgr_reset ( struct fc_lport * lport , u32 sid , u32 did ) ; 
/*--fc_exch_mgr_reset--*/
struct fc_exch_mgr_anchor * fc_exch_mgr_add ( struct fc_lport * lport , struct fc_exch_mgr * mp , bool ( * match ) ( struct fc_frame * ) ) ; 
/*--fc_exch_mgr_add--*/
void fc_exch_mgr_del ( struct fc_exch_mgr_anchor * ema ) ; 
/*--fc_exch_mgr_del--*/
int fc_exch_mgr_list_clone ( struct fc_lport * src , struct fc_lport * dst ) ; 
/*--fc_exch_mgr_list_clone--*/
struct fc_exch_mgr * fc_exch_mgr_alloc ( struct fc_lport * lport , enum fc_class class , u16 min_xid , u16 max_xid , bool ( * match ) ( struct fc_frame * ) ) ; 
/*--fc_exch_mgr_alloc--*/
void fc_exch_mgr_free ( struct fc_lport * lport ) ; 
/*--fc_exch_mgr_free--*/
void fc_exch_recv ( struct fc_lport * lport , struct fc_frame * fp ) ; 
/*--fc_exch_recv--*/
int fc_exch_init ( struct fc_lport * lport ) ; 
/*--fc_exch_init--*/
int fc_setup_exch_mgr ( ) ; 
/*--fc_setup_exch_mgr--*/
void fc_destroy_exch_mgr ( ) ; 
/*--fc_destroy_exch_mgr--*/
struct fc_seq * fc_elsct_send ( struct fc_lport * lport , u32 did , struct fc_frame * fp , unsigned int op , void ( * resp ) ( struct fc_seq * , struct fc_frame * , void * ) , void * arg , u32 timer_msec ) ; 
/*--fc_elsct_send--*/
int fc_elsct_init ( struct fc_lport * lport ) ; 
/*--fc_elsct_init--*/
const char * fc_els_resp_type ( struct fc_frame * fp ) ; 
/*--fc_els_resp_type--*/
u32 fc_frame_crc_check ( struct fc_frame * fp ) ; 
/*--fc_frame_crc_check--*/
struct fc_frame * _fc_frame_alloc ( size_t len ) ; 
/*--_fc_frame_alloc--*/
struct fc_frame * fc_frame_alloc_fill ( struct fc_lport * lp , size_t payload_len ) ; 
/*--fc_frame_alloc_fill--*/
void fc_get_host_port_state ( struct Scsi_Host * shost ) ; 
/*--fc_get_host_port_state--*/
void fc_get_host_speed ( struct Scsi_Host * shost ) ; 
/*--fc_get_host_speed--*/
struct fc_host_statistics * fc_get_host_stats ( struct Scsi_Host * shost ) ; 
/*--fc_get_host_stats--*/
int fc_fabric_login ( struct fc_lport * lport ) ; 
/*--fc_fabric_login--*/
void __fc_linkup ( struct fc_lport * lport ) ; 
/*--__fc_linkup--*/
void fc_linkup ( struct fc_lport * lport ) ; 
/*--fc_linkup--*/
void __fc_linkdown ( struct fc_lport * lport ) ; 
/*--__fc_linkdown--*/
void fc_linkdown ( struct fc_lport * lport ) ; 
/*--fc_linkdown--*/
int fc_fabric_logoff ( struct fc_lport * lport ) ; 
/*--fc_fabric_logoff--*/
int fc_lport_destroy ( struct fc_lport * lport ) ; 
/*--fc_lport_destroy--*/
int fc_set_mfs ( struct fc_lport * lport , u32 mfs ) ; 
/*--fc_set_mfs--*/
void fc_lport_disc_callback ( struct fc_lport * lport , enum fc_disc_event event ) ; 
/*--fc_lport_disc_callback--*/
int fc_lport_reset ( struct fc_lport * lport ) ; 
/*--fc_lport_reset--*/
void fc_lport_logo_resp ( struct fc_seq * sp , struct fc_frame * fp , void * lp_arg ) ; 
/*--fc_lport_logo_resp--*/
void fc_lport_flogi_resp ( struct fc_seq * sp , struct fc_frame * fp , void * lp_arg ) ; 
/*--fc_lport_flogi_resp--*/
void fc_lport_enter_flogi ( struct fc_lport * lport ) ; 
/*--fc_lport_enter_flogi--*/
int fc_lport_config ( struct fc_lport * lport ) ; 
/*--fc_lport_config--*/
int fc_lport_init ( struct fc_lport * lport ) ; 
/*--fc_lport_init--*/
int fc_lport_bsg_request ( struct fc_bsg_job * job ) ; 
/*--fc_lport_bsg_request--*/
void fc_set_rport_loss_tmo ( struct fc_rport * rport , u32 timeout ) ; 
/*--fc_set_rport_loss_tmo--*/
int fc_rport_login ( struct fc_rport_priv * rdata ) ; 
/*--fc_rport_login--*/
int fc_rport_logoff ( struct fc_rport_priv * rdata ) ; 
/*--fc_rport_logoff--*/
void fc_rport_recv_req ( struct fc_seq * sp , struct fc_frame * fp , struct fc_lport * lport ) ; 
/*--fc_rport_recv_req--*/
int fc_rport_init ( struct fc_lport * lport ) ; 
/*--fc_rport_init--*/
int fc_setup_rport ( ) ; 
/*--fc_setup_rport--*/
void fc_destroy_rport ( ) ; 
/*--fc_destroy_rport--*/
void fc_rport_terminate_io ( struct fc_rport * rport ) ; 
/*--fc_rport_terminate_io--*/
void fc_fcp_ddp_setup ( struct fc_fcp_pkt * fsp , u16 xid ) ; 
/*--fc_fcp_ddp_setup--*/
int fc_queuecommand ( struct scsi_cmnd * sc_cmd , void ( * done ) ( struct scsi_cmnd * ) ) ; 
/*--fc_queuecommand--*/
int fc_eh_abort ( struct scsi_cmnd * sc_cmd ) ; 
/*--fc_eh_abort--*/
int fc_eh_device_reset ( struct scsi_cmnd * sc_cmd ) ; 
/*--fc_eh_device_reset--*/
int fc_eh_host_reset ( struct scsi_cmnd * sc_cmd ) ; 
/*--fc_eh_host_reset--*/
int fc_slave_alloc ( struct scsi_device * sdev ) ; 
/*--fc_slave_alloc--*/
int fc_change_queue_depth ( struct scsi_device * sdev , int qdepth , int reason ) ; 
/*--fc_change_queue_depth--*/
int fc_change_queue_type ( struct scsi_device * sdev , int tag_type ) ; 
/*--fc_change_queue_type--*/
void fc_fcp_destroy ( struct fc_lport * lport ) ; 
/*--fc_fcp_destroy--*/
int fc_setup_fcp ( ) ; 
/*--fc_setup_fcp--*/
void fc_destroy_fcp ( ) ; 
/*--fc_destroy_fcp--*/
int fc_fcp_init ( struct fc_lport * lport ) ; 
/*--fc_fcp_init--*/
struct fc_lport * libfc_vport_create ( struct fc_vport * vport , int privsize ) ; 
/*--libfc_vport_create--*/
struct fc_lport * fc_vport_id_lookup ( struct fc_lport * n_port , u32 port_id ) ; 
/*--fc_vport_id_lookup--*/
void fc_vport_setlink ( struct fc_lport * vn_port ) ; 
/*--fc_vport_setlink--*/
void fc_vports_linkchange ( struct fc_lport * n_port ) ; 
/*--fc_vports_linkchange--*/
void sas_hash_addr ( u8 * hashed , const u8 * sas_addr ) ; 
/*--sas_hash_addr--*/
void sas_hae_reset ( struct work_struct * work ) ; 
/*--sas_hae_reset--*/
int sas_register_ha ( struct sas_ha_struct * sas_ha ) ; 
/*--sas_register_ha--*/
int sas_unregister_ha ( struct sas_ha_struct * sas_ha ) ; 
/*--sas_unregister_ha--*/
int sas_phy_enable ( struct sas_phy * phy , int enable ) ; 
/*--sas_phy_enable--*/
int sas_phy_reset ( struct sas_phy * phy , int hard_reset ) ; 
/*--sas_phy_reset--*/
int sas_set_phy_speed ( struct sas_phy * phy , struct sas_phy_linkrates * rates ) ; 
/*--sas_set_phy_speed--*/
struct scsi_transport_template * sas_domain_attach_transport ( struct sas_domain_function_template * dft ) ; 
/*--sas_domain_attach_transport--*/
void sas_domain_release_transport ( struct scsi_transport_template * stt ) ; 
/*--sas_domain_release_transport--*/
int sas_register_phys ( struct sas_ha_struct * sas_ha ) ; 
/*--sas_register_phys--*/
void sas_deform_port ( struct asd_sas_phy * phy ) ; 
/*--sas_deform_port--*/
void sas_porte_bytes_dmaed ( struct work_struct * work ) ; 
/*--sas_porte_bytes_dmaed--*/
void sas_porte_broadcast_rcvd ( struct work_struct * work ) ; 
/*--sas_porte_broadcast_rcvd--*/
void sas_porte_link_reset_err ( struct work_struct * work ) ; 
/*--sas_porte_link_reset_err--*/
void sas_porte_timer_event ( struct work_struct * work ) ; 
/*--sas_porte_timer_event--*/
void sas_porte_hard_reset ( struct work_struct * work ) ; 
/*--sas_porte_hard_reset--*/
int sas_register_ports ( struct sas_ha_struct * sas_ha ) ; 
/*--sas_register_ports--*/
void sas_unregister_ports ( struct sas_ha_struct * sas_ha ) ; 
/*--sas_unregister_ports--*/
int sas_init_events ( struct sas_ha_struct * sas_ha ) ; 
/*--sas_init_events--*/
void sas_init_dev ( struct domain_device * dev ) ; 
/*--sas_init_dev--*/
int sas_notify_lldd_dev_found ( struct domain_device * dev ) ; 
/*--sas_notify_lldd_dev_found--*/
void sas_notify_lldd_dev_gone ( struct domain_device * dev ) ; 
/*--sas_notify_lldd_dev_gone--*/
int sas_discover_end_dev ( struct domain_device * dev ) ; 
/*--sas_discover_end_dev--*/
void sas_unregister_dev ( struct domain_device * dev ) ; 
/*--sas_unregister_dev--*/
void sas_unregister_domain_devices ( struct asd_sas_port * port ) ; 
/*--sas_unregister_domain_devices--*/
int sas_discover_event ( struct asd_sas_port * port , enum discover_event ev ) ; 
/*--sas_discover_event--*/
void sas_init_disc ( struct sas_discovery * disc , struct asd_sas_port * port ) ; 
/*--sas_init_disc--*/
int sas_smp_phy_control ( struct domain_device * dev , int phy_id , enum phy_func phy_func , struct sas_phy_linkrates * rates ) ; 
/*--sas_smp_phy_control--*/
int sas_smp_get_phy_events ( struct sas_phy * phy ) ; 
/*--sas_smp_get_phy_events--*/
int sas_discover_root_expander ( struct domain_device * dev ) ; 
/*--sas_discover_root_expander--*/
int sas_ex_revalidate_domain ( struct domain_device * port_dev ) ; 
/*--sas_ex_revalidate_domain--*/
int sas_smp_handler ( struct Scsi_Host * shost , struct sas_rphy * rphy , struct request * req ) ; 
/*--sas_smp_handler--*/
int sas_queue_up ( struct sas_task * task ) ; 
/*--sas_queue_up--*/
int sas_queuecommand ( struct scsi_cmnd * cmd , void ( * scsi_done ) ( struct scsi_cmnd * ) ) ; 
/*--sas_queuecommand--*/
struct sas_phy * sas_find_local_phy ( struct domain_device * dev ) ; 
/*--sas_find_local_phy--*/
int sas_eh_device_reset_handler ( struct scsi_cmnd * cmd ) ; 
/*--sas_eh_device_reset_handler--*/
int sas_eh_bus_reset_handler ( struct scsi_cmnd * cmd ) ; 
/*--sas_eh_bus_reset_handler--*/
void sas_scsi_recover_host ( struct Scsi_Host * shost ) ; 
/*--sas_scsi_recover_host--*/
enum blk_eh_timer_return sas_scsi_timed_out ( struct scsi_cmnd * cmd ) ; 
/*--sas_scsi_timed_out--*/
int sas_ioctl ( struct scsi_device * sdev , int cmd , void * arg ) ; 
/*--sas_ioctl--*/
struct domain_device * sas_find_dev_by_rphy ( struct sas_rphy * rphy ) ; 
/*--sas_find_dev_by_rphy--*/
int sas_target_alloc ( struct scsi_target * starget ) ; 
/*--sas_target_alloc--*/
int sas_slave_configure ( struct scsi_device * scsi_dev ) ; 
/*--sas_slave_configure--*/
void sas_slave_destroy ( struct scsi_device * scsi_dev ) ; 
/*--sas_slave_destroy--*/
int sas_change_queue_depth ( struct scsi_device * scsi_dev , int new_depth , int reason ) ; 
/*--sas_change_queue_depth--*/
int sas_change_queue_type ( struct scsi_device * scsi_dev , int qt ) ; 
/*--sas_change_queue_type--*/
int sas_bios_param ( struct scsi_device * scsi_dev , struct block_device * bdev , sector_t capacity , int * hsc ) ; 
/*--sas_bios_param--*/
int sas_init_queue ( struct sas_ha_struct * sas_ha ) ; 
/*--sas_init_queue--*/
void sas_shutdown_queue ( struct sas_ha_struct * sas_ha ) ; 
/*--sas_shutdown_queue--*/
int __sas_task_abort ( struct sas_task * task ) ; 
/*--__sas_task_abort--*/
void sas_task_abort ( struct sas_task * task ) ; 
/*--sas_task_abort--*/
int sas_slave_alloc ( struct scsi_device * scsi_dev ) ; 
/*--sas_slave_alloc--*/
void sas_target_destroy ( struct scsi_target * starget ) ; 
/*--sas_target_destroy--*/
int sas_request_addr ( struct Scsi_Host * shost , u8 * addr ) ; 
/*--sas_request_addr--*/
void sas_ssp_task_response ( struct device * dev , struct sas_task * task , struct ssp_response_iu * iu ) ; 
/*--sas_ssp_task_response--*/
int sas_ata_init_host_and_port ( struct domain_device * found_dev , struct scsi_target * starget ) ; 
/*--sas_ata_init_host_and_port--*/
void sas_ata_task_abort ( struct sas_task * task ) ; 
/*--sas_ata_task_abort--*/
int sas_discover_sata ( struct domain_device * dev ) ; 
/*--sas_discover_sata--*/
int sas_smp_host_handler ( struct Scsi_Host * shost , struct request * req , struct request * rsp ) ; 
/*--sas_smp_host_handler--*/
int lpfc_mem_alloc ( struct lpfc_hba * phba , int align ) ; 
/*--lpfc_mem_alloc--*/
void lpfc_mem_free ( struct lpfc_hba * phba ) ; 
/*--lpfc_mem_free--*/
void lpfc_mem_free_all ( struct lpfc_hba * phba ) ; 
/*--lpfc_mem_free_all--*/
void * lpfc_mbuf_alloc ( struct lpfc_hba * phba , int mem_flags , dma_addr_t * handle ) ; 
/*--lpfc_mbuf_alloc--*/
void __lpfc_mbuf_free ( struct lpfc_hba * phba , void * virt , dma_addr_t dma ) ; 
/*--__lpfc_mbuf_free--*/
void lpfc_mbuf_free ( struct lpfc_hba * phba , void * virt , dma_addr_t dma ) ; 
/*--lpfc_mbuf_free--*/
struct hbq_dmabuf * lpfc_els_hbq_alloc ( struct lpfc_hba * phba ) ; 
/*--lpfc_els_hbq_alloc--*/
void lpfc_els_hbq_free ( struct lpfc_hba * phba , struct hbq_dmabuf * hbqbp ) ; 
/*--lpfc_els_hbq_free--*/
struct hbq_dmabuf * lpfc_sli4_rb_alloc ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_rb_alloc--*/
void lpfc_sli4_rb_free ( struct lpfc_hba * phba , struct hbq_dmabuf * dmab ) ; 
/*--lpfc_sli4_rb_free--*/
void lpfc_in_buf_free ( struct lpfc_hba * phba , struct lpfc_dmabuf * mp ) ; 
/*--lpfc_in_buf_free--*/
uint32_t lpfc_sli4_eq_release ( struct lpfc_queue * q , bool arm ) ; 
/*--lpfc_sli4_eq_release--*/
uint32_t lpfc_sli4_cq_release ( struct lpfc_queue * q , bool arm ) ; 
/*--lpfc_sli4_cq_release--*/
struct lpfc_sglq * __lpfc_get_active_sglq ( struct lpfc_hba * phba , uint16_t xritag ) ; 
/*--__lpfc_get_active_sglq--*/
struct lpfc_iocbq * lpfc_sli_get_iocbq ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_get_iocbq--*/
void lpfc_sli_release_iocbq ( struct lpfc_hba * phba , struct lpfc_iocbq * iocbq ) ; 
/*--lpfc_sli_release_iocbq--*/
void lpfc_sli_cancel_iocbs ( struct lpfc_hba * phba , struct list_head * iocblist , uint32_t ulpstatus , uint32_t ulpWord4 ) ; 
/*--lpfc_sli_cancel_iocbs--*/
uint16_t lpfc_sli_next_iotag ( struct lpfc_hba * phba , struct lpfc_iocbq * iocbq ) ; 
/*--lpfc_sli_next_iotag--*/
void lpfc_sli_hbqbuf_free_all ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_hbqbuf_free_all--*/
int lpfc_sli_hbqbuf_add_hbqs ( struct lpfc_hba * phba , uint32_t qno ) ; 
/*--lpfc_sli_hbqbuf_add_hbqs--*/
void lpfc_sli_free_hbq ( struct lpfc_hba * phba , struct hbq_dmabuf * hbq_buffer ) ; 
/*--lpfc_sli_free_hbq--*/
void lpfc_sli_wake_mbox_wait ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmboxq ) ; 
/*--lpfc_sli_wake_mbox_wait--*/
void lpfc_sli_def_mbox_cmpl ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_sli_def_mbox_cmpl--*/
int lpfc_sli_handle_mb_event ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_handle_mb_event--*/
void lpfc_poll_eratt ( unsigned long ptr ) ; 
/*--lpfc_poll_eratt--*/
int lpfc_sli_handle_fast_ring_event ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , uint32_t mask ) ; 
/*--lpfc_sli_handle_fast_ring_event--*/
void lpfc_sli_handle_slow_ring_event ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , uint32_t mask ) ; 
/*--lpfc_sli_handle_slow_ring_event--*/
void lpfc_sli_abort_iocb_ring ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring ) ; 
/*--lpfc_sli_abort_iocb_ring--*/
void lpfc_sli_flush_fcp_rings ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_flush_fcp_rings--*/
int lpfc_sli_brdready ( struct lpfc_hba * phba , uint32_t mask ) ; 
/*--lpfc_sli_brdready--*/
void lpfc_reset_barrier ( struct lpfc_hba * phba ) ; 
/*--lpfc_reset_barrier--*/
int lpfc_sli_brdkill ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_brdkill--*/
int lpfc_sli_brdreset ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_brdreset--*/
int lpfc_sli4_brdreset ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_brdreset--*/
int lpfc_sli_brdrestart ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_brdrestart--*/
int lpfc_sli_hbq_count ( void ) ; 
/*--lpfc_sli_hbq_count--*/
int lpfc_sli_hbq_size ( void ) ; 
/*--lpfc_sli_hbq_size--*/
int lpfc_sli_config_port ( struct lpfc_hba * phba , int sli_mode ) ; 
/*--lpfc_sli_config_port--*/
int lpfc_sli_hba_setup ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_hba_setup--*/
int lpfc_sli4_hba_setup ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_hba_setup--*/
void lpfc_mbox_timeout ( unsigned long ptr ) ; 
/*--lpfc_mbox_timeout--*/
void lpfc_mbox_timeout_handler ( struct lpfc_hba * phba ) ; 
/*--lpfc_mbox_timeout_handler--*/
int lpfc_sli4_post_async_mbox ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_post_async_mbox--*/
int lpfc_sli_issue_mbox ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmbox , uint32_t flag ) ; 
/*--lpfc_sli_issue_mbox--*/
int lpfc_mbox_api_table_setup ( struct lpfc_hba * phba , uint8_t dev_grp ) ; 
/*--lpfc_mbox_api_table_setup--*/
int lpfc_sli_api_table_setup ( struct lpfc_hba * phba , uint8_t dev_grp ) ; 
/*--lpfc_sli_api_table_setup--*/
int lpfc_sli_issue_iocb ( struct lpfc_hba * phba , uint32_t ring_number , struct lpfc_iocbq * piocb , uint32_t flag ) ; 
/*--lpfc_sli_issue_iocb--*/
int lpfc_sli_setup ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_setup--*/
int lpfc_sli_queue_setup ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_queue_setup--*/
int lpfc_sli_host_down ( struct lpfc_vport * vport ) ; 
/*--lpfc_sli_host_down--*/
int lpfc_sli_hba_down ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_hba_down--*/
int lpfc_sli4_hba_down ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_hba_down--*/
void lpfc_sli_pcimem_bcopy ( void * srcp , void * destp , uint32_t cnt ) ; 
/*--lpfc_sli_pcimem_bcopy--*/
void lpfc_sli_bemem_bcopy ( void * srcp , void * destp , uint32_t cnt ) ; 
/*--lpfc_sli_bemem_bcopy--*/
int lpfc_sli_ringpostbuf_put ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , struct lpfc_dmabuf * mp ) ; 
/*--lpfc_sli_ringpostbuf_put--*/
uint32_t lpfc_sli_get_buffer_tag ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_get_buffer_tag--*/
struct lpfc_dmabuf * lpfc_sli_ring_taggedbuf_get ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , uint32_t tag ) ; 
/*--lpfc_sli_ring_taggedbuf_get--*/
struct lpfc_dmabuf * lpfc_sli_ringpostbuf_get ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , dma_addr_t phys ) ; 
/*--lpfc_sli_ringpostbuf_get--*/
int lpfc_sli_issue_abort_iotag ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , struct lpfc_iocbq * cmdiocb ) ; 
/*--lpfc_sli_issue_abort_iotag--*/
int lpfc_sli_sum_iocb ( struct lpfc_vport * vport , uint16_t tgt_id , uint64_t lun_id , lpfc_ctx_cmd ctx_cmd ) ; 
/*--lpfc_sli_sum_iocb--*/
void lpfc_sli_abort_fcp_cmpl ( struct lpfc_hba * phba , struct lpfc_iocbq * cmdiocb , struct lpfc_iocbq * rspiocb ) ; 
/*--lpfc_sli_abort_fcp_cmpl--*/
int lpfc_sli_abort_iocb ( struct lpfc_vport * vport , struct lpfc_sli_ring * pring , uint16_t tgt_id , uint64_t lun_id , lpfc_ctx_cmd abort_cmd ) ; 
/*--lpfc_sli_abort_iocb--*/
int lpfc_sli_issue_iocb_wait ( struct lpfc_hba * phba , uint32_t ring_number , struct lpfc_iocbq * piocb , struct lpfc_iocbq * prspiocbq , uint32_t timeout ) ; 
/*--lpfc_sli_issue_iocb_wait--*/
int lpfc_sli_issue_mbox_wait ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmboxq , uint32_t timeout ) ; 
/*--lpfc_sli_issue_mbox_wait--*/
void lpfc_sli_mbox_sys_shutdown ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_mbox_sys_shutdown--*/
int lpfc_sli_check_eratt ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_check_eratt--*/
irqreturn_t lpfc_sli_sp_intr_handler ( int irq , void * dev_id ) ; 
/*--lpfc_sli_sp_intr_handler--*/
irqreturn_t lpfc_sli_fp_intr_handler ( int irq , void * dev_id ) ; 
/*--lpfc_sli_fp_intr_handler--*/
irqreturn_t lpfc_sli_intr_handler ( int irq , void * dev_id ) ; 
/*--lpfc_sli_intr_handler--*/
void lpfc_sli4_fcp_xri_abort_event_proc ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_fcp_xri_abort_event_proc--*/
void lpfc_sli4_els_xri_abort_event_proc ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_els_xri_abort_event_proc--*/
irqreturn_t lpfc_sli4_sp_intr_handler ( int irq , void * dev_id ) ; 
/*--lpfc_sli4_sp_intr_handler--*/
irqreturn_t lpfc_sli4_fp_intr_handler ( int irq , void * dev_id ) ; 
/*--lpfc_sli4_fp_intr_handler--*/
irqreturn_t lpfc_sli4_intr_handler ( int irq , void * dev_id ) ; 
/*--lpfc_sli4_intr_handler--*/
void lpfc_sli4_queue_free ( struct lpfc_queue * queue ) ; 
/*--lpfc_sli4_queue_free--*/
struct lpfc_queue * lpfc_sli4_queue_alloc ( struct lpfc_hba * phba , uint32_t entry_size , uint32_t entry_count ) ; 
/*--lpfc_sli4_queue_alloc--*/
uint32_t lpfc_eq_create ( struct lpfc_hba * phba , struct lpfc_queue * eq , uint16_t imax ) ; 
/*--lpfc_eq_create--*/
uint32_t lpfc_cq_create ( struct lpfc_hba * phba , struct lpfc_queue * cq , struct lpfc_queue * eq , uint32_t type , uint32_t subtype ) ; 
/*--lpfc_cq_create--*/
int32_t lpfc_mq_create ( struct lpfc_hba * phba , struct lpfc_queue * mq , struct lpfc_queue * cq , uint32_t subtype ) ; 
/*--lpfc_mq_create--*/
uint32_t lpfc_wq_create ( struct lpfc_hba * phba , struct lpfc_queue * wq , struct lpfc_queue * cq , uint32_t subtype ) ; 
/*--lpfc_wq_create--*/
uint32_t lpfc_rq_create ( struct lpfc_hba * phba , struct lpfc_queue * hrq , struct lpfc_queue * drq , struct lpfc_queue * cq , uint32_t subtype ) ; 
/*--lpfc_rq_create--*/
uint32_t lpfc_eq_destroy ( struct lpfc_hba * phba , struct lpfc_queue * eq ) ; 
/*--lpfc_eq_destroy--*/
uint32_t lpfc_cq_destroy ( struct lpfc_hba * phba , struct lpfc_queue * cq ) ; 
/*--lpfc_cq_destroy--*/
uint32_t lpfc_mq_destroy ( struct lpfc_hba * phba , struct lpfc_queue * mq ) ; 
/*--lpfc_mq_destroy--*/
uint32_t lpfc_wq_destroy ( struct lpfc_hba * phba , struct lpfc_queue * wq ) ; 
/*--lpfc_wq_destroy--*/
uint32_t lpfc_rq_destroy ( struct lpfc_hba * phba , struct lpfc_queue * hrq , struct lpfc_queue * drq ) ; 
/*--lpfc_rq_destroy--*/
int lpfc_sli4_post_sgl ( struct lpfc_hba * phba , dma_addr_t pdma_phys_addr0 , dma_addr_t pdma_phys_addr1 , uint16_t xritag ) ; 
/*--lpfc_sli4_post_sgl--*/
int lpfc_sli4_remove_all_sgl_pages ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_remove_all_sgl_pages--*/
uint16_t lpfc_sli4_next_xritag ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_next_xritag--*/
int lpfc_sli4_post_sgl_list ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_post_sgl_list--*/
int lpfc_sli4_post_scsi_sgl_block ( struct lpfc_hba * phba , struct list_head * sblist , int cnt ) ; 
/*--lpfc_sli4_post_scsi_sgl_block--*/
void lpfc_update_rcv_time_stamp ( struct lpfc_vport * vport ) ; 
/*--lpfc_update_rcv_time_stamp--*/
void lpfc_cleanup_rcv_buffers ( struct lpfc_vport * vport ) ; 
/*--lpfc_cleanup_rcv_buffers--*/
void lpfc_rcv_seq_check_edtov ( struct lpfc_vport * vport ) ; 
/*--lpfc_rcv_seq_check_edtov--*/
void lpfc_sli4_handle_unsol_abort ( struct lpfc_vport * vport , struct hbq_dmabuf * dmabuf ) ; 
/*--lpfc_sli4_handle_unsol_abort--*/
void lpfc_sli4_handle_received_buffer ( struct lpfc_hba * phba , struct hbq_dmabuf * dmabuf ) ; 
/*--lpfc_sli4_handle_received_buffer--*/
int lpfc_sli4_post_all_rpi_hdrs ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_post_all_rpi_hdrs--*/
int lpfc_sli4_post_rpi_hdr ( struct lpfc_hba * phba , struct lpfc_rpi_hdr * rpi_page ) ; 
/*--lpfc_sli4_post_rpi_hdr--*/
int lpfc_sli4_alloc_rpi ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_alloc_rpi--*/
void lpfc_sli4_free_rpi ( struct lpfc_hba * phba , int rpi ) ; 
/*--lpfc_sli4_free_rpi--*/
void lpfc_sli4_remove_rpis ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_remove_rpis--*/
int lpfc_sli4_resume_rpi ( struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_sli4_resume_rpi--*/
int lpfc_sli4_init_vpi ( struct lpfc_hba * phba , uint16_t vpi ) ; 
/*--lpfc_sli4_init_vpi--*/
int lpfc_sli4_add_fcf_record ( struct lpfc_hba * phba , struct fcf_record * fcf_record ) ; 
/*--lpfc_sli4_add_fcf_record--*/
void lpfc_sli4_build_dflt_fcf_record ( struct lpfc_hba * phba , struct fcf_record * fcf_record , uint16_t fcf_index ) ; 
/*--lpfc_sli4_build_dflt_fcf_record--*/
int lpfc_sli4_fcf_scan_read_fcf_rec ( struct lpfc_hba * phba , uint16_t fcf_index ) ; 
/*--lpfc_sli4_fcf_scan_read_fcf_rec--*/
int lpfc_sli4_fcf_rr_read_fcf_rec ( struct lpfc_hba * phba , uint16_t fcf_index ) ; 
/*--lpfc_sli4_fcf_rr_read_fcf_rec--*/
int lpfc_sli4_read_fcf_rec ( struct lpfc_hba * phba , uint16_t fcf_index ) ; 
/*--lpfc_sli4_read_fcf_rec--*/
uint16_t lpfc_sli4_fcf_rr_next_index_get ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_fcf_rr_next_index_get--*/
int lpfc_sli4_fcf_rr_index_set ( struct lpfc_hba * phba , uint16_t fcf_index ) ; 
/*--lpfc_sli4_fcf_rr_index_set--*/
void lpfc_sli4_fcf_rr_index_clear ( struct lpfc_hba * phba , uint16_t fcf_index ) ; 
/*--lpfc_sli4_fcf_rr_index_clear--*/
void lpfc_mbx_cmpl_redisc_fcf_table ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mbox ) ; 
/*--lpfc_mbx_cmpl_redisc_fcf_table--*/
int lpfc_sli4_redisc_fcf_table ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_redisc_fcf_table--*/
void lpfc_sli4_fcf_dead_failthrough ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_fcf_dead_failthrough--*/
void lpfc_sli_read_link_ste ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_read_link_ste--*/
void lpfc_cleanup_pending_mbox ( struct lpfc_vport * vport ) ; 
/*--lpfc_cleanup_pending_mbox--*/
void lpfc_ct_unsol_event ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , struct lpfc_iocbq * piocbq ) ; 
/*--lpfc_ct_unsol_event--*/
void lpfc_sli4_ct_abort_unsol_event ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , struct lpfc_iocbq * piocbq ) ; 
/*--lpfc_sli4_ct_abort_unsol_event--*/
int lpfc_ct_free_iocb ( struct lpfc_hba * phba , struct lpfc_iocbq * ctiocb ) ; 
/*--lpfc_ct_free_iocb--*/
struct lpfc_vport * lpfc_find_vport_by_did ( struct lpfc_hba * phba , uint32_t did ) ; 
/*--lpfc_find_vport_by_did--*/
int lpfc_vport_symbolic_port_name ( struct lpfc_vport * vport , char * symbol , size_t size ) ; 
/*--lpfc_vport_symbolic_port_name--*/
int lpfc_vport_symbolic_node_name ( struct lpfc_vport * vport , char * symbol , size_t size ) ; 
/*--lpfc_vport_symbolic_node_name--*/
int lpfc_ns_cmd ( struct lpfc_vport * vport , int cmdcode , uint8_t retry , uint32_t context ) ; 
/*--lpfc_ns_cmd--*/
int lpfc_fdmi_cmd ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , int cmdcode ) ; 
/*--lpfc_fdmi_cmd--*/
void lpfc_fdmi_tmo ( unsigned long ptr ) ; 
/*--lpfc_fdmi_tmo--*/
void lpfc_fdmi_timeout_handler ( struct lpfc_vport * vport ) ; 
/*--lpfc_fdmi_timeout_handler--*/
void lpfc_decode_firmware_rev ( struct lpfc_hba * phba , char * fwrevision , int flag ) ; 
/*--lpfc_decode_firmware_rev--*/
int lpfc_els_chk_latt ( struct lpfc_vport * vport ) ; 
/*--lpfc_els_chk_latt--*/
struct lpfc_iocbq * lpfc_prep_els_iocb ( struct lpfc_vport * vport , uint8_t expectRsp , uint16_t cmdSize , uint8_t retry , struct lpfc_nodelist * ndlp , uint32_t did , uint32_t elscmd ) ; 
/*--lpfc_prep_els_iocb--*/
int lpfc_issue_fabric_reglogin ( struct lpfc_vport * vport ) ; 
/*--lpfc_issue_fabric_reglogin--*/
int lpfc_els_abort_flogi ( struct lpfc_hba * phba ) ; 
/*--lpfc_els_abort_flogi--*/
int lpfc_initial_flogi ( struct lpfc_vport * vport ) ; 
/*--lpfc_initial_flogi--*/
int lpfc_initial_fdisc ( struct lpfc_vport * vport ) ; 
/*--lpfc_initial_fdisc--*/
void lpfc_more_plogi ( struct lpfc_vport * vport ) ; 
/*--lpfc_more_plogi--*/
void lpfc_end_rscn ( struct lpfc_vport * vport ) ; 
/*--lpfc_end_rscn--*/
int lpfc_issue_els_plogi ( struct lpfc_vport * vport , uint32_t did , uint8_t retry ) ; 
/*--lpfc_issue_els_plogi--*/
int lpfc_issue_els_prli ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , uint8_t retry ) ; 
/*--lpfc_issue_els_prli--*/
void lpfc_more_adisc ( struct lpfc_vport * vport ) ; 
/*--lpfc_more_adisc--*/
int lpfc_issue_els_adisc ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , uint8_t retry ) ; 
/*--lpfc_issue_els_adisc--*/
int lpfc_issue_els_logo ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , uint8_t retry ) ; 
/*--lpfc_issue_els_logo--*/
int lpfc_issue_els_scr ( struct lpfc_vport * vport , uint32_t nportid , uint8_t retry ) ; 
/*--lpfc_issue_els_scr--*/
void lpfc_cancel_retry_delay_tmo ( struct lpfc_vport * vport , struct lpfc_nodelist * nlp ) ; 
/*--lpfc_cancel_retry_delay_tmo--*/
void lpfc_els_retry_delay ( unsigned long ptr ) ; 
/*--lpfc_els_retry_delay--*/
void lpfc_els_retry_delay_handler ( struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_els_retry_delay_handler--*/
int lpfc_els_free_iocb ( struct lpfc_hba * phba , struct lpfc_iocbq * elsiocb ) ; 
/*--lpfc_els_free_iocb--*/
void lpfc_mbx_cmpl_dflt_rpi ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_mbx_cmpl_dflt_rpi--*/
int lpfc_els_rsp_acc ( struct lpfc_vport * vport , uint32_t flag , struct lpfc_iocbq * oldiocb , struct lpfc_nodelist * ndlp , LPFC_MBOXQ_t * mbox ) ; 
/*--lpfc_els_rsp_acc--*/
int lpfc_els_rsp_reject ( struct lpfc_vport * vport , uint32_t rejectError , struct lpfc_iocbq * oldiocb , struct lpfc_nodelist * ndlp , LPFC_MBOXQ_t * mbox ) ; 
/*--lpfc_els_rsp_reject--*/
int lpfc_els_rsp_adisc_acc ( struct lpfc_vport * vport , struct lpfc_iocbq * oldiocb , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_els_rsp_adisc_acc--*/
int lpfc_els_rsp_prli_acc ( struct lpfc_vport * vport , struct lpfc_iocbq * oldiocb , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_els_rsp_prli_acc--*/
int lpfc_els_disc_adisc ( struct lpfc_vport * vport ) ; 
/*--lpfc_els_disc_adisc--*/
int lpfc_els_disc_plogi ( struct lpfc_vport * vport ) ; 
/*--lpfc_els_disc_plogi--*/
void lpfc_els_flush_rscn ( struct lpfc_vport * vport ) ; 
/*--lpfc_els_flush_rscn--*/
int lpfc_rscn_payload_check ( struct lpfc_vport * vport , uint32_t did ) ; 
/*--lpfc_rscn_payload_check--*/
int lpfc_els_handle_rscn ( struct lpfc_vport * vport ) ; 
/*--lpfc_els_handle_rscn--*/
void lpfc_els_timeout ( unsigned long ptr ) ; 
/*--lpfc_els_timeout--*/
void lpfc_els_timeout_handler ( struct lpfc_vport * vport ) ; 
/*--lpfc_els_timeout_handler--*/
void lpfc_els_flush_cmd ( struct lpfc_vport * vport ) ; 
/*--lpfc_els_flush_cmd--*/
void lpfc_els_flush_all_cmd ( struct lpfc_hba * phba ) ; 
/*--lpfc_els_flush_all_cmd--*/
void lpfc_send_els_failure_event ( struct lpfc_hba * phba , struct lpfc_iocbq * cmdiocbp , struct lpfc_iocbq * rspiocbp ) ; 
/*--lpfc_send_els_failure_event--*/
struct lpfc_vport * lpfc_find_vport_by_vpid ( struct lpfc_hba * phba , uint16_t vpi ) ; 
/*--lpfc_find_vport_by_vpid--*/
void lpfc_els_unsol_event ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , struct lpfc_iocbq * elsiocb ) ; 
/*--lpfc_els_unsol_event--*/
void lpfc_do_scr_ns_plogi ( struct lpfc_hba * phba , struct lpfc_vport * vport ) ; 
/*--lpfc_do_scr_ns_plogi--*/
void lpfc_register_new_vport ( struct lpfc_hba * phba , struct lpfc_vport * vport , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_register_new_vport--*/
void lpfc_cancel_all_vport_retry_delay_timer ( struct lpfc_hba * phba ) ; 
/*--lpfc_cancel_all_vport_retry_delay_timer--*/
void lpfc_retry_pport_discovery ( struct lpfc_hba * phba ) ; 
/*--lpfc_retry_pport_discovery--*/
int lpfc_issue_els_npiv_logo ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_issue_els_npiv_logo--*/
void lpfc_fabric_block_timeout ( unsigned long ptr ) ; 
/*--lpfc_fabric_block_timeout--*/
void lpfc_unblock_fabric_iocbs ( struct lpfc_hba * phba ) ; 
/*--lpfc_unblock_fabric_iocbs--*/
void lpfc_fabric_abort_nport ( struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_fabric_abort_nport--*/
void lpfc_fabric_abort_hba ( struct lpfc_hba * phba ) ; 
/*--lpfc_fabric_abort_hba--*/
void lpfc_sli4_els_xri_aborted ( struct lpfc_hba * phba , struct sli4_wcqe_xri_aborted * axri ) ; 
/*--lpfc_sli4_els_xri_aborted--*/
void lpfc_terminate_rport_io ( struct fc_rport * rport ) ; 
/*--lpfc_terminate_rport_io--*/
void lpfc_dev_loss_tmo_callbk ( struct fc_rport * rport ) ; 
/*--lpfc_dev_loss_tmo_callbk--*/
struct lpfc_fast_path_event * lpfc_alloc_fast_evt ( struct lpfc_hba * phba ) ; 
/*--lpfc_alloc_fast_evt--*/
void lpfc_free_fast_evt ( struct lpfc_hba * phba , struct lpfc_fast_path_event * evt ) ; 
/*--lpfc_free_fast_evt--*/
int lpfc_do_work ( void * p ) ; 
/*--lpfc_do_work--*/
int lpfc_workq_post_event ( struct lpfc_hba * phba , void * arg1 , void * arg2 , uint32_t evt ) ; 
/*--lpfc_workq_post_event--*/
void lpfc_cleanup_rpis ( struct lpfc_vport * vport , int remove ) ; 
/*--lpfc_cleanup_rpis--*/
void lpfc_port_link_failure ( struct lpfc_vport * vport ) ; 
/*--lpfc_port_link_failure--*/
void lpfc_linkdown_port ( struct lpfc_vport * vport ) ; 
/*--lpfc_linkdown_port--*/
int lpfc_linkdown ( struct lpfc_hba * phba ) ; 
/*--lpfc_linkdown--*/
int lpfc_check_pending_fcoe_event ( struct lpfc_hba * phba , uint8_t unreg_fcf ) ; 
/*--lpfc_check_pending_fcoe_event--*/
void lpfc_mbx_cmpl_fcf_scan_read_fcf_rec ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mboxq ) ; 
/*--lpfc_mbx_cmpl_fcf_scan_read_fcf_rec--*/
void lpfc_mbx_cmpl_fcf_rr_read_fcf_rec ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mboxq ) ; 
/*--lpfc_mbx_cmpl_fcf_rr_read_fcf_rec--*/
void lpfc_mbx_cmpl_read_fcf_rec ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mboxq ) ; 
/*--lpfc_mbx_cmpl_read_fcf_rec--*/
void lpfc_init_vpi_cmpl ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mboxq ) ; 
/*--lpfc_init_vpi_cmpl--*/
void lpfc_issue_init_vpi ( struct lpfc_vport * vport ) ; 
/*--lpfc_issue_init_vpi--*/
void lpfc_start_fdiscs ( struct lpfc_hba * phba ) ; 
/*--lpfc_start_fdiscs--*/
void lpfc_mbx_cmpl_reg_vfi ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mboxq ) ; 
/*--lpfc_mbx_cmpl_reg_vfi--*/
void lpfc_mbx_cmpl_read_la ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_mbx_cmpl_read_la--*/
void lpfc_mbx_cmpl_reg_login ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_mbx_cmpl_reg_login--*/
int lpfc_mbx_unreg_vpi ( struct lpfc_vport * vport ) ; 
/*--lpfc_mbx_unreg_vpi--*/
void lpfc_create_static_vport ( struct lpfc_hba * phba ) ; 
/*--lpfc_create_static_vport--*/
void lpfc_mbx_cmpl_fabric_reg_login ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_mbx_cmpl_fabric_reg_login--*/
void lpfc_mbx_cmpl_ns_reg_login ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_mbx_cmpl_ns_reg_login--*/
void lpfc_nlp_set_state ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , int state ) ; 
/*--lpfc_nlp_set_state--*/
void lpfc_enqueue_node ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_enqueue_node--*/
void lpfc_dequeue_node ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_dequeue_node--*/
struct lpfc_nodelist * lpfc_enable_node ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , int state ) ; 
/*--lpfc_enable_node--*/
void lpfc_drop_node ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_drop_node--*/
void lpfc_set_disctmo ( struct lpfc_vport * vport ) ; 
/*--lpfc_set_disctmo--*/
int lpfc_can_disctmo ( struct lpfc_vport * vport ) ; 
/*--lpfc_can_disctmo--*/
int lpfc_check_sli_ndlp ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , struct lpfc_iocbq * iocb , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_check_sli_ndlp--*/
int lpfc_unreg_rpi ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_unreg_rpi--*/
void lpfc_unreg_hba_rpis ( struct lpfc_hba * phba ) ; 
/*--lpfc_unreg_hba_rpis--*/
void lpfc_unreg_all_rpis ( struct lpfc_vport * vport ) ; 
/*--lpfc_unreg_all_rpis--*/
void lpfc_unreg_default_rpis ( struct lpfc_vport * vport ) ; 
/*--lpfc_unreg_default_rpis--*/
struct lpfc_nodelist * lpfc_findnode_did ( struct lpfc_vport * vport , uint32_t did ) ; 
/*--lpfc_findnode_did--*/
struct lpfc_nodelist * lpfc_setup_disc_node ( struct lpfc_vport * vport , uint32_t did ) ; 
/*--lpfc_setup_disc_node--*/
void lpfc_disc_list_loopmap ( struct lpfc_vport * vport ) ; 
/*--lpfc_disc_list_loopmap--*/
void lpfc_issue_clear_la ( struct lpfc_hba * phba , struct lpfc_vport * vport ) ; 
/*--lpfc_issue_clear_la--*/
void lpfc_issue_reg_vpi ( struct lpfc_hba * phba , struct lpfc_vport * vport ) ; 
/*--lpfc_issue_reg_vpi--*/
void lpfc_disc_start ( struct lpfc_vport * vport ) ; 
/*--lpfc_disc_start--*/
void lpfc_cleanup_discovery_resources ( struct lpfc_vport * vport ) ; 
/*--lpfc_cleanup_discovery_resources--*/
void lpfc_disc_timeout ( unsigned long ptr ) ; 
/*--lpfc_disc_timeout--*/
void lpfc_mbx_cmpl_fdmi_reg_login ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_mbx_cmpl_fdmi_reg_login--*/
struct lpfc_nodelist * __lpfc_findnode_rpi ( struct lpfc_vport * vport , uint16_t rpi ) ; 
/*--__lpfc_findnode_rpi--*/
struct lpfc_nodelist * lpfc_findnode_wwpn ( struct lpfc_vport * vport , struct lpfc_name * wwpn ) ; 
/*--lpfc_findnode_wwpn--*/
void lpfc_nlp_init ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , uint32_t did ) ; 
/*--lpfc_nlp_init--*/
struct lpfc_nodelist * lpfc_nlp_get ( struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_nlp_get--*/
int lpfc_nlp_put ( struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_nlp_put--*/
int lpfc_nlp_not_used ( struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_nlp_not_used--*/
int lpfc_unregister_fcf_prep ( struct lpfc_hba * phba ) ; 
/*--lpfc_unregister_fcf_prep--*/
int lpfc_sli4_unregister_fcf ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_unregister_fcf--*/
void lpfc_unregister_fcf_rescan ( struct lpfc_hba * phba ) ; 
/*--lpfc_unregister_fcf_rescan--*/
void lpfc_unregister_fcf ( struct lpfc_hba * phba ) ; 
/*--lpfc_unregister_fcf--*/
void lpfc_unregister_unused_fcf ( struct lpfc_hba * phba ) ; 
/*--lpfc_unregister_unused_fcf--*/
void lpfc_parse_fcoe_conf ( struct lpfc_hba * phba , uint8_t * buff , uint32_t size ) ; 
/*--lpfc_parse_fcoe_conf--*/
int lpfc_config_port_prep ( struct lpfc_hba * phba ) ; 
/*--lpfc_config_port_prep--*/
int lpfc_config_port_post ( struct lpfc_hba * phba ) ; 
/*--lpfc_config_port_post--*/
int lpfc_hba_init_link ( struct lpfc_hba * phba ) ; 
/*--lpfc_hba_init_link--*/
int lpfc_hba_down_link ( struct lpfc_hba * phba ) ; 
/*--lpfc_hba_down_link--*/
int lpfc_hba_down_prep ( struct lpfc_hba * phba ) ; 
/*--lpfc_hba_down_prep--*/
int lpfc_hba_down_post ( struct lpfc_hba * phba ) ; 
/*--lpfc_hba_down_post--*/
void lpfc_hb_timeout_handler ( struct lpfc_hba * phba ) ; 
/*--lpfc_hb_timeout_handler--*/
void lpfc_handle_eratt ( struct lpfc_hba * phba ) ; 
/*--lpfc_handle_eratt--*/
void lpfc_handle_latt ( struct lpfc_hba * phba ) ; 
/*--lpfc_handle_latt--*/
int lpfc_parse_vpd ( struct lpfc_hba * phba , uint8_t * vpd , int len ) ; 
/*--lpfc_parse_vpd--*/
int lpfc_post_buffer ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , int cnt ) ; 
/*--lpfc_post_buffer--*/
void lpfc_hba_init ( struct lpfc_hba * phba , uint32_t * hbainit ) ; 
/*--lpfc_hba_init--*/
void lpfc_cleanup ( struct lpfc_vport * vport ) ; 
/*--lpfc_cleanup--*/
void lpfc_stop_vport_timers ( struct lpfc_vport * vport ) ; 
/*--lpfc_stop_vport_timers--*/
void __lpfc_sli4_stop_fcf_redisc_wait_timer ( struct lpfc_hba * phba ) ; 
/*--__lpfc_sli4_stop_fcf_redisc_wait_timer--*/
void lpfc_sli4_stop_fcf_redisc_wait_timer ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_stop_fcf_redisc_wait_timer--*/
void lpfc_stop_hba_timers ( struct lpfc_hba * phba ) ; 
/*--lpfc_stop_hba_timers--*/
int lpfc_online ( struct lpfc_hba * phba ) ; 
/*--lpfc_online--*/
void lpfc_unblock_mgmt_io ( struct lpfc_hba * phba ) ; 
/*--lpfc_unblock_mgmt_io--*/
void lpfc_offline_prep ( struct lpfc_hba * phba ) ; 
/*--lpfc_offline_prep--*/
void lpfc_offline ( struct lpfc_hba * phba ) ; 
/*--lpfc_offline--*/
struct lpfc_vport * lpfc_create_port ( struct lpfc_hba * phba , int instance , struct device * dev ) ; 
/*--lpfc_create_port--*/
void destroy_port ( struct lpfc_vport * vport ) ; 
/*--destroy_port--*/
int lpfc_get_instance ( void ) ; 
/*--lpfc_get_instance--*/
int lpfc_scan_finished ( struct Scsi_Host * shost , unsigned long time ) ; 
/*--lpfc_scan_finished--*/
void lpfc_host_attrib_init ( struct Scsi_Host * shost ) ; 
/*--lpfc_host_attrib_init--*/
void lpfc_stop_port ( struct lpfc_hba * phba ) ; 
/*--lpfc_stop_port--*/
void lpfc_sli_remove_dflt_fcf ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli_remove_dflt_fcf--*/
void lpfc_fcf_redisc_wait_start_timer ( struct lpfc_hba * phba ) ; 
/*--lpfc_fcf_redisc_wait_start_timer--*/
void lpfc_sli4_fcf_redisc_wait_tmo ( unsigned long ptr ) ; 
/*--lpfc_sli4_fcf_redisc_wait_tmo--*/
void lpfc_sli4_async_event_proc ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_async_event_proc--*/
void lpfc_sli4_fcf_redisc_event_proc ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_fcf_redisc_event_proc--*/
int lpfc_api_table_setup ( struct lpfc_hba * phba , uint8_t dev_grp ) ; 
/*--lpfc_api_table_setup--*/
void lpfc_reset_hba ( struct lpfc_hba * phba ) ; 
/*--lpfc_reset_hba--*/
int lpfc_init_api_table_setup ( struct lpfc_hba * phba , uint8_t dev_grp ) ; 
/*--lpfc_init_api_table_setup--*/
int lpfc_sli4_init_rpi_hdrs ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_init_rpi_hdrs--*/
struct lpfc_rpi_hdr * lpfc_sli4_create_rpi_hdr ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_create_rpi_hdr--*/
void lpfc_sli4_remove_rpi_hdrs ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_remove_rpi_hdrs--*/
int lpfc_sli4_post_status_check ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_post_status_check--*/
int lpfc_sli4_queue_setup ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_queue_setup--*/
void lpfc_sli4_queue_unset ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_queue_unset--*/
struct lpfc_cq_event * __lpfc_sli4_cq_event_alloc ( struct lpfc_hba * phba ) ; 
/*--__lpfc_sli4_cq_event_alloc--*/
struct lpfc_cq_event * lpfc_sli4_cq_event_alloc ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_cq_event_alloc--*/
void __lpfc_sli4_cq_event_release ( struct lpfc_hba * phba , struct lpfc_cq_event * cq_event ) ; 
/*--__lpfc_sli4_cq_event_release--*/
void lpfc_sli4_cq_event_release ( struct lpfc_hba * phba , struct lpfc_cq_event * cq_event ) ; 
/*--lpfc_sli4_cq_event_release--*/
int lpfc_pci_function_reset ( struct lpfc_hba * phba ) ; 
/*--lpfc_pci_function_reset--*/
void lpfc_sli4_fcfi_unreg ( struct lpfc_hba * phba , uint16_t fcfi ) ; 
/*--lpfc_sli4_fcfi_unreg--*/
int lpfc_pc_sli4_params_get ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mboxq ) ; 
/*--lpfc_pc_sli4_params_get--*/
int lpfc_sli4_get_els_iocb_cnt ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_get_els_iocb_cnt--*/
int lpfc_dump_static_vport ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb , uint16_t offset ) ; 
/*--lpfc_dump_static_vport--*/
void lpfc_down_link ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_down_link--*/
void lpfc_dump_mem ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb , uint16_t offset , uint16_t region_id ) ; 
/*--lpfc_dump_mem--*/
void lpfc_dump_wakeup_param ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_dump_wakeup_param--*/
void lpfc_read_nv ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_read_nv--*/
void lpfc_config_async ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb , uint32_t ring ) ; 
/*--lpfc_config_async--*/
void lpfc_heart_beat ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_heart_beat--*/
int lpfc_read_la ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb , struct lpfc_dmabuf * mp ) ; 
/*--lpfc_read_la--*/
void lpfc_clear_la ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_clear_la--*/
void lpfc_config_link ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_config_link--*/
int lpfc_config_msi ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_config_msi--*/
void lpfc_init_link ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb , uint32_t topology , uint32_t linkspeed ) ; 
/*--lpfc_init_link--*/
int lpfc_read_sparam ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb , int vpi ) ; 
/*--lpfc_read_sparam--*/
void lpfc_unreg_did ( struct lpfc_hba * phba , uint16_t vpi , uint32_t did , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_unreg_did--*/
void lpfc_read_config ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_read_config--*/
void lpfc_read_lnk_stat ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_read_lnk_stat--*/
int lpfc_reg_rpi ( struct lpfc_hba * phba , uint16_t vpi , uint32_t did , uint8_t * param , LPFC_MBOXQ_t * pmb , uint32_t flag ) ; 
/*--lpfc_reg_rpi--*/
void lpfc_unreg_login ( struct lpfc_hba * phba , uint16_t vpi , uint32_t rpi , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_unreg_login--*/
void lpfc_reg_vpi ( struct lpfc_vport * vport , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_reg_vpi--*/
void lpfc_unreg_vpi ( struct lpfc_hba * phba , uint16_t vpi , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_unreg_vpi--*/
void lpfc_read_rev ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_read_rev--*/
void lpfc_config_hbq ( struct lpfc_hba * phba , uint32_t id , struct lpfc_hbq_init * hbq_desc , uint32_t hbq_entry_index , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_config_hbq--*/
void lpfc_config_ring ( struct lpfc_hba * phba , int ring , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_config_ring--*/
void lpfc_config_port ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_config_port--*/
void lpfc_kill_board ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmb ) ; 
/*--lpfc_kill_board--*/
void lpfc_mbox_put ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mbq ) ; 
/*--lpfc_mbox_put--*/
LPFC_MBOXQ_t * lpfc_mbox_get ( struct lpfc_hba * phba ) ; 
/*--lpfc_mbox_get--*/
void __lpfc_mbox_cmpl_put ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mbq ) ; 
/*--__lpfc_mbox_cmpl_put--*/
void lpfc_mbox_cmpl_put ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mbq ) ; 
/*--lpfc_mbox_cmpl_put--*/
int lpfc_mbox_cmd_check ( struct lpfc_hba * phba , LPFC_MBOXQ_t * mboxq ) ; 
/*--lpfc_mbox_cmd_check--*/
int lpfc_mbox_dev_check ( struct lpfc_hba * phba ) ; 
/*--lpfc_mbox_dev_check--*/
int lpfc_mbox_tmo_val ( struct lpfc_hba * phba , int cmd ) ; 
/*--lpfc_mbox_tmo_val--*/
void lpfc_sli4_mbx_sge_set ( struct lpfcMboxq * mbox , uint32_t sgentry , dma_addr_t phyaddr , uint32_t length ) ; 
/*--lpfc_sli4_mbx_sge_set--*/
void lpfc_sli4_mbx_sge_get ( struct lpfcMboxq * mbox , uint32_t sgentry , struct lpfc_mbx_sge * sge ) ; 
/*--lpfc_sli4_mbx_sge_get--*/
void lpfc_sli4_mbox_cmd_free ( struct lpfc_hba * phba , struct lpfcMboxq * mbox ) ; 
/*--lpfc_sli4_mbox_cmd_free--*/
int lpfc_sli4_config ( struct lpfc_hba * phba , struct lpfcMboxq * mbox , uint8_t subsystem , uint8_t opcode , uint32_t length , bool emb ) ; 
/*--lpfc_sli4_config--*/
uint8_t lpfc_sli4_mbox_opcode_get ( struct lpfc_hba * phba , struct lpfcMboxq * mbox ) ; 
/*--lpfc_sli4_mbox_opcode_get--*/
int lpfc_sli4_mbx_read_fcf_rec ( struct lpfc_hba * phba , struct lpfcMboxq * mboxq , uint16_t fcf_index ) ; 
/*--lpfc_sli4_mbx_read_fcf_rec--*/
void lpfc_request_features ( struct lpfc_hba * phba , struct lpfcMboxq * mboxq ) ; 
/*--lpfc_request_features--*/
void lpfc_init_vfi ( struct lpfcMboxq * mbox , struct lpfc_vport * vport ) ; 
/*--lpfc_init_vfi--*/
void lpfc_reg_vfi ( struct lpfcMboxq * mbox , struct lpfc_vport * vport , dma_addr_t phys ) ; 
/*--lpfc_reg_vfi--*/
void lpfc_init_vpi ( struct lpfc_hba * phba , struct lpfcMboxq * mbox , uint16_t vpi ) ; 
/*--lpfc_init_vpi--*/
void lpfc_unreg_vfi ( struct lpfcMboxq * mbox , struct lpfc_vport * vport ) ; 
/*--lpfc_unreg_vfi--*/
int lpfc_dump_fcoe_param ( struct lpfc_hba * phba , struct lpfcMboxq * mbox ) ; 
/*--lpfc_dump_fcoe_param--*/
void lpfc_reg_fcfi ( struct lpfc_hba * phba , struct lpfcMboxq * mbox ) ; 
/*--lpfc_reg_fcfi--*/
void lpfc_unreg_fcfi ( struct lpfcMboxq * mbox , uint16_t fcfi ) ; 
/*--lpfc_unreg_fcfi--*/
void lpfc_resume_rpi ( struct lpfcMboxq * mbox , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_resume_rpi--*/
void lpfc_supported_pages ( struct lpfcMboxq * mbox ) ; 
/*--lpfc_supported_pages--*/
void lpfc_sli4_params ( struct lpfcMboxq * mbox ) ; 
/*--lpfc_sli4_params--*/
int lpfc_check_sparm ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , struct serv_parm * sp , uint32_t class , int flogi ) ; 
/*--lpfc_check_sparm--*/
int lpfc_els_abort ( struct lpfc_hba * phba , struct lpfc_nodelist * ndlp ) ; 
/*--lpfc_els_abort--*/
void lpfc_release_rpi ( struct lpfc_hba * phba , struct lpfc_vport * vport , uint16_t rpi ) ; 
/*--lpfc_release_rpi--*/
int lpfc_disc_state_machine ( struct lpfc_vport * vport , struct lpfc_nodelist * ndlp , void * arg , uint32_t evt ) ; 
/*--lpfc_disc_state_machine--*/
int lpfc_change_queue_depth ( struct scsi_device * sdev , int qdepth , int reason ) ; 
/*--lpfc_change_queue_depth--*/
void lpfc_rampdown_queue_depth ( struct lpfc_hba * phba ) ; 
/*--lpfc_rampdown_queue_depth--*/
void lpfc_ramp_down_queue_handler ( struct lpfc_hba * phba ) ; 
/*--lpfc_ramp_down_queue_handler--*/
void lpfc_ramp_up_queue_handler ( struct lpfc_hba * phba ) ; 
/*--lpfc_ramp_up_queue_handler--*/
void lpfc_scsi_dev_block ( struct lpfc_hba * phba ) ; 
/*--lpfc_scsi_dev_block--*/
void lpfc_sli4_fcp_xri_aborted ( struct lpfc_hba * phba , struct sli4_wcqe_xri_aborted * axri ) ; 
/*--lpfc_sli4_fcp_xri_aborted--*/
int lpfc_sli4_repost_scsi_sgl_list ( struct lpfc_hba * phba ) ; 
/*--lpfc_sli4_repost_scsi_sgl_list--*/
int lpfc_scsi_api_table_setup ( struct lpfc_hba * phba , uint8_t dev_grp ) ; 
/*--lpfc_scsi_api_table_setup--*/
const char * lpfc_info ( struct Scsi_Host * host ) ; 
/*--lpfc_info--*/
void lpfc_poll_start_timer ( struct lpfc_hba * phba ) ; 
/*--lpfc_poll_start_timer--*/
void lpfc_poll_timeout ( unsigned long ptr ) ; 
/*--lpfc_poll_timeout--*/
int lpfc_alloc_sysfs_attr ( struct lpfc_vport * vport ) ; 
/*--lpfc_alloc_sysfs_attr--*/
void lpfc_free_sysfs_attr ( struct lpfc_vport * vport ) ; 
/*--lpfc_free_sysfs_attr--*/
void lpfc_get_cfgparam ( struct lpfc_hba * phba ) ; 
/*--lpfc_get_cfgparam--*/
void lpfc_get_vport_cfgparam ( struct lpfc_vport * vport ) ; 
/*--lpfc_get_vport_cfgparam--*/
int lpfc_vport_create ( struct fc_vport * fc_vport , bool disable ) ; 
/*--lpfc_vport_create--*/
int lpfc_vport_disable ( struct fc_vport * fc_vport , bool disable ) ; 
/*--lpfc_vport_disable--*/
int lpfc_vport_delete ( struct fc_vport * fc_vport ) ; 
/*--lpfc_vport_delete--*/
struct lpfc_vport * * lpfc_create_vport_work_array ( struct lpfc_hba * phba ) ; 
/*--lpfc_create_vport_work_array--*/
void lpfc_destroy_vport_work_array ( struct lpfc_hba * phba , struct lpfc_vport * * vports ) ; 
/*--lpfc_destroy_vport_work_array--*/
void lpfc_vport_reset_stat_data ( struct lpfc_vport * vport ) ; 
/*--lpfc_vport_reset_stat_data--*/
void lpfc_alloc_bucket ( struct lpfc_vport * vport ) ; 
/*--lpfc_alloc_bucket--*/
void lpfc_free_bucket ( struct lpfc_vport * vport ) ; 
/*--lpfc_free_bucket--*/
int lpfc_bsg_ct_unsol_event ( struct lpfc_hba * phba , struct lpfc_sli_ring * pring , struct lpfc_iocbq * piocbq ) ; 
/*--lpfc_bsg_ct_unsol_event--*/
void lpfc_bsg_wake_mbox_wait ( struct lpfc_hba * phba , LPFC_MBOXQ_t * pmboxq ) ; 
/*--lpfc_bsg_wake_mbox_wait--*/
int lpfc_bsg_request ( struct fc_bsg_job * job ) ; 
/*--lpfc_bsg_request--*/
int lpfc_bsg_timeout ( struct fc_bsg_job * job ) ; 
/*--lpfc_bsg_timeout--*/
int mraid_mm_register_adp ( mraid_mmadp_t * lld_adp ) ; 
/*--mraid_mm_register_adp--*/
uint32_t mraid_mm_adapter_app_handle ( uint32_t unique_id ) ; 
/*--mraid_mm_adapter_app_handle--*/
int mraid_mm_unregister_adp ( uint32_t unique_id ) ; 
/*--mraid_mm_unregister_adp--*/
void mpt2sas_base_start_watchdog ( struct MPT2SAS_ADAPTER * ioc ) ; 
/*--mpt2sas_base_start_watchdog--*/
void mpt2sas_base_stop_watchdog ( struct MPT2SAS_ADAPTER * ioc ) ; 
/*--mpt2sas_base_stop_watchdog--*/
void mpt2sas_base_fault_info ( struct MPT2SAS_ADAPTER * ioc , u16 fault_code ) ; 
/*--mpt2sas_base_fault_info--*/
void mpt2sas_halt_firmware ( struct MPT2SAS_ADAPTER * ioc ) ; 
/*--mpt2sas_halt_firmware--*/
u8 mpt2sas_base_done ( struct MPT2SAS_ADAPTER * ioc , u16 smid , u8 msix_index , u32 reply ) ; 
/*--mpt2sas_base_done--*/
void mpt2sas_base_release_callback_handler ( u8 cb_idx ) ; 
/*--mpt2sas_base_release_callback_handler--*/
u8 mpt2sas_base_register_callback_handler ( MPT_CALLBACK cb_func ) ; 
/*--mpt2sas_base_register_callback_handler--*/
void mpt2sas_base_initialize_callback_handler ( void ) ; 
/*--mpt2sas_base_initialize_callback_handler--*/
void mpt2sas_base_build_zero_len_sge ( struct MPT2SAS_ADAPTER * ioc , void * paddr ) ; 
/*--mpt2sas_base_build_zero_len_sge--*/
int mpt2sas_base_map_resources ( struct MPT2SAS_ADAPTER * ioc ) ; 
/*--mpt2sas_base_map_resources--*/
void * mpt2sas_base_get_msg_frame ( struct MPT2SAS_ADAPTER * ioc , u16 smid ) ; 
/*--mpt2sas_base_get_msg_frame--*/
void * mpt2sas_base_get_sense_buffer ( struct MPT2SAS_ADAPTER * ioc , u16 smid ) ; 
/*--mpt2sas_base_get_sense_buffer--*/
__le32 mpt2sas_base_get_sense_buffer_dma ( struct MPT2SAS_ADAPTER * ioc , u16 smid ) ; 
/*--mpt2sas_base_get_sense_buffer_dma--*/
void * mpt2sas_base_get_reply_virt_addr ( struct MPT2SAS_ADAPTER * ioc , u32 phys_addr ) ; 
/*--mpt2sas_base_get_reply_virt_addr--*/
u16 mpt2sas_base_get_smid ( struct MPT2SAS_ADAPTER * ioc , u8 cb_idx ) ; 
/*--mpt2sas_base_get_smid--*/
u16 mpt2sas_base_get_smid_scsiio ( struct MPT2SAS_ADAPTER * ioc , u8 cb_idx , struct scsi_cmnd * scmd ) ; 
/*--mpt2sas_base_get_smid_scsiio--*/
u16 mpt2sas_base_get_smid_hpr ( struct MPT2SAS_ADAPTER * ioc , u8 cb_idx ) ; 
/*--mpt2sas_base_get_smid_hpr--*/
void mpt2sas_base_free_smid ( struct MPT2SAS_ADAPTER * ioc , u16 smid ) ; 
/*--mpt2sas_base_free_smid--*/
void mpt2sas_base_put_smid_scsi_io ( struct MPT2SAS_ADAPTER * ioc , u16 smid , u16 handle ) ; 
/*--mpt2sas_base_put_smid_scsi_io--*/
void mpt2sas_base_put_smid_hi_priority ( struct MPT2SAS_ADAPTER * ioc , u16 smid ) ; 
/*--mpt2sas_base_put_smid_hi_priority--*/
void mpt2sas_base_put_smid_default ( struct MPT2SAS_ADAPTER * ioc , u16 smid ) ; 
/*--mpt2sas_base_put_smid_default--*/
void mpt2sas_base_put_smid_target_assist ( struct MPT2SAS_ADAPTER * ioc , u16 smid , u16 io_index ) ; 
/*--mpt2sas_base_put_smid_target_assist--*/
u32 mpt2sas_base_get_iocstate ( struct MPT2SAS_ADAPTER * ioc , int cooked ) ; 
/*--mpt2sas_base_get_iocstate--*/
int mpt2sas_base_sas_iounit_control ( struct MPT2SAS_ADAPTER * ioc , Mpi2SasIoUnitControlReply_t * mpi_reply , Mpi2SasIoUnitControlRequest_t * mpi_request ) ; 
/*--mpt2sas_base_sas_iounit_control--*/
int mpt2sas_base_scsi_enclosure_processor ( struct MPT2SAS_ADAPTER * ioc , Mpi2SepReply_t * mpi_reply , Mpi2SepRequest_t * mpi_request ) ; 
/*--mpt2sas_base_scsi_enclosure_processor--*/
void mpt2sas_base_validate_event_type ( struct MPT2SAS_ADAPTER * ioc , u32 * event_type ) ; 
/*--mpt2sas_base_validate_event_type--*/
void mpt2sas_base_free_resources ( struct MPT2SAS_ADAPTER * ioc ) ; 
/*--mpt2sas_base_free_resources--*/
int mpt2sas_base_attach ( struct MPT2SAS_ADAPTER * ioc ) ; 
/*--mpt2sas_base_attach--*/
void mpt2sas_base_detach ( struct MPT2SAS_ADAPTER * ioc ) ; 
/*--mpt2sas_base_detach--*/
int mpt2sas_base_hard_reset_handler ( struct MPT2SAS_ADAPTER * ioc , int sleep_flag , enum reset_type type ) ; 
/*--mpt2sas_base_hard_reset_handler--*/
u8 mpt2sas_config_done ( struct MPT2SAS_ADAPTER * ioc , u16 smid , u8 msix_index , u32 reply ) ; 
/*--mpt2sas_config_done--*/
int mpt2sas_config_get_manufacturing_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2ManufacturingPage0_t * config_page ) ; 
/*--mpt2sas_config_get_manufacturing_pg0--*/
int mpt2sas_config_get_manufacturing_pg10 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2ManufacturingPage10_t * config_page ) ; 
/*--mpt2sas_config_get_manufacturing_pg10--*/
int mpt2sas_config_get_bios_pg2 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2BiosPage2_t * config_page ) ; 
/*--mpt2sas_config_get_bios_pg2--*/
int mpt2sas_config_get_bios_pg3 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2BiosPage3_t * config_page ) ; 
/*--mpt2sas_config_get_bios_pg3--*/
int mpt2sas_config_get_iounit_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2IOUnitPage0_t * config_page ) ; 
/*--mpt2sas_config_get_iounit_pg0--*/
int mpt2sas_config_get_iounit_pg1 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2IOUnitPage1_t * config_page ) ; 
/*--mpt2sas_config_get_iounit_pg1--*/
int mpt2sas_config_set_iounit_pg1 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2IOUnitPage1_t * config_page ) ; 
/*--mpt2sas_config_set_iounit_pg1--*/
int mpt2sas_config_get_ioc_pg8 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2IOCPage8_t * config_page ) ; 
/*--mpt2sas_config_get_ioc_pg8--*/
int mpt2sas_config_get_sas_device_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2SasDevicePage0_t * config_page , u32 form , u32 handle ) ; 
/*--mpt2sas_config_get_sas_device_pg0--*/
int mpt2sas_config_get_sas_device_pg1 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2SasDevicePage1_t * config_page , u32 form , u32 handle ) ; 
/*--mpt2sas_config_get_sas_device_pg1--*/
int mpt2sas_config_get_number_hba_phys ( struct MPT2SAS_ADAPTER * ioc , u8 * num_phys ) ; 
/*--mpt2sas_config_get_number_hba_phys--*/
int mpt2sas_config_get_sas_iounit_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2SasIOUnitPage0_t * config_page , u16 sz ) ; 
/*--mpt2sas_config_get_sas_iounit_pg0--*/
int mpt2sas_config_get_sas_iounit_pg1 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2SasIOUnitPage1_t * config_page , u16 sz ) ; 
/*--mpt2sas_config_get_sas_iounit_pg1--*/
int mpt2sas_config_set_sas_iounit_pg1 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2SasIOUnitPage1_t * config_page , u16 sz ) ; 
/*--mpt2sas_config_set_sas_iounit_pg1--*/
int mpt2sas_config_get_expander_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2ExpanderPage0_t * config_page , u32 form , u32 handle ) ; 
/*--mpt2sas_config_get_expander_pg0--*/
int mpt2sas_config_get_expander_pg1 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2ExpanderPage1_t * config_page , u32 phy_number , u16 handle ) ; 
/*--mpt2sas_config_get_expander_pg1--*/
int mpt2sas_config_get_enclosure_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2SasEnclosurePage0_t * config_page , u32 form , u32 handle ) ; 
/*--mpt2sas_config_get_enclosure_pg0--*/
int mpt2sas_config_get_phy_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2SasPhyPage0_t * config_page , u32 phy_number ) ; 
/*--mpt2sas_config_get_phy_pg0--*/
int mpt2sas_config_get_phy_pg1 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2SasPhyPage1_t * config_page , u32 phy_number ) ; 
/*--mpt2sas_config_get_phy_pg1--*/
int mpt2sas_config_get_raid_volume_pg1 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2RaidVolPage1_t * config_page , u32 form , u32 handle ) ; 
/*--mpt2sas_config_get_raid_volume_pg1--*/
int mpt2sas_config_get_number_pds ( struct MPT2SAS_ADAPTER * ioc , u16 handle , u8 * num_pds ) ; 
/*--mpt2sas_config_get_number_pds--*/
int mpt2sas_config_get_raid_volume_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2RaidVolPage0_t * config_page , u32 form , u32 handle , u16 sz ) ; 
/*--mpt2sas_config_get_raid_volume_pg0--*/
int mpt2sas_config_get_phys_disk_pg0 ( struct MPT2SAS_ADAPTER * ioc , Mpi2ConfigReply_t * mpi_reply , Mpi2RaidPhysDiskPage0_t * config_page , u32 form , u32 form_specific ) ; 
/*--mpt2sas_config_get_phys_disk_pg0--*/
int mpt2sas_config_get_volume_handle ( struct MPT2SAS_ADAPTER * ioc , u16 pd_handle , u16 * volume_handle ) ; 
/*--mpt2sas_config_get_volume_handle--*/
int mpt2sas_config_get_volume_wwid ( struct MPT2SAS_ADAPTER * ioc , u16 volume_handle , u64 * wwid ) ; 
/*--mpt2sas_config_get_volume_wwid--*/
struct _sas_device * mpt2sas_scsih_sas_device_find_by_sas_address ( struct MPT2SAS_ADAPTER * ioc , u64 sas_address ) ; 
/*--mpt2sas_scsih_sas_device_find_by_sas_address--*/
struct _sas_node * mpt2sas_scsih_expander_find_by_handle ( struct MPT2SAS_ADAPTER * ioc , u16 handle ) ; 
/*--mpt2sas_scsih_expander_find_by_handle--*/
struct _sas_node * mpt2sas_scsih_expander_find_by_sas_address ( struct MPT2SAS_ADAPTER * ioc , u64 sas_address ) ; 
/*--mpt2sas_scsih_expander_find_by_sas_address--*/
void mpt2sas_scsih_set_tm_flag ( struct MPT2SAS_ADAPTER * ioc , u16 handle ) ; 
/*--mpt2sas_scsih_set_tm_flag--*/
void mpt2sas_scsih_clear_tm_flag ( struct MPT2SAS_ADAPTER * ioc , u16 handle ) ; 
/*--mpt2sas_scsih_clear_tm_flag--*/
int mpt2sas_scsih_issue_tm ( struct MPT2SAS_ADAPTER * ioc , u16 handle , uint channel , uint id , uint lun , u8 type , u16 smid_task , ulong timeout , struct scsi_cmnd * scmd ) ; 
/*--mpt2sas_scsih_issue_tm--*/
void mpt2sas_scsih_reset_handler ( struct MPT2SAS_ADAPTER * ioc , int reset_phase ) ; 
/*--mpt2sas_scsih_reset_handler--*/
u8 mpt2sas_scsih_event_callback ( struct MPT2SAS_ADAPTER * ioc , u8 msix_index , u32 reply ) ; 
/*--mpt2sas_scsih_event_callback--*/
u8 mpt2sas_transport_done ( struct MPT2SAS_ADAPTER * ioc , u16 smid , u8 msix_index , u32 reply ) ; 
/*--mpt2sas_transport_done--*/
struct _sas_port * mpt2sas_transport_port_add ( struct MPT2SAS_ADAPTER * ioc , u16 handle , u64 sas_address ) ; 
/*--mpt2sas_transport_port_add--*/
void mpt2sas_transport_port_remove ( struct MPT2SAS_ADAPTER * ioc , u64 sas_address , u64 sas_address_parent ) ; 
/*--mpt2sas_transport_port_remove--*/
int mpt2sas_transport_add_host_phy ( struct MPT2SAS_ADAPTER * ioc , struct _sas_phy * mpt2sas_phy , Mpi2SasPhyPage0_t phy_pg0 , struct device * parent_dev ) ; 
/*--mpt2sas_transport_add_host_phy--*/
int mpt2sas_transport_add_expander_phy ( struct MPT2SAS_ADAPTER * ioc , struct _sas_phy * mpt2sas_phy , Mpi2ExpanderPage1_t expander_pg1 , struct device * parent_dev ) ; 
/*--mpt2sas_transport_add_expander_phy--*/
void mpt2sas_transport_update_links ( struct MPT2SAS_ADAPTER * ioc , u64 sas_address , u16 handle , u8 phy_number , u8 link_rate ) ; 
/*--mpt2sas_transport_update_links--*/
u8 mpt2sas_ctl_done ( struct MPT2SAS_ADAPTER * ioc , u16 smid , u8 msix_index , u32 reply ) ; 
/*--mpt2sas_ctl_done--*/
void mpt2sas_ctl_add_to_event_log ( struct MPT2SAS_ADAPTER * ioc , Mpi2EventNotificationReply_t * mpi_reply ) ; 
/*--mpt2sas_ctl_add_to_event_log--*/
u8 mpt2sas_ctl_event_callback ( struct MPT2SAS_ADAPTER * ioc , u8 msix_index , u32 reply ) ; 
/*--mpt2sas_ctl_event_callback--*/
void mpt2sas_ctl_reset_handler ( struct MPT2SAS_ADAPTER * ioc , int reset_phase ) ; 
/*--mpt2sas_ctl_reset_handler--*/
void mpt2sas_enable_diag_buffer ( struct MPT2SAS_ADAPTER * ioc , u8 bits_to_register ) ; 
/*--mpt2sas_enable_diag_buffer--*/
void mpt2sas_ctl_init ( void ) ; 
/*--mpt2sas_ctl_init--*/
void mpt2sas_ctl_exit ( void ) ; 
/*--mpt2sas_ctl_exit--*/
int mvs_ioremap ( struct mvs_info * mvi , int bar , int bar_ex ) ; 
/*--mvs_ioremap--*/
void mvs_iounmap ( void * regs ) ; 
/*--mvs_iounmap--*/
void mvs_tag_clear ( struct mvs_info * mvi , u32 tag ) ; 
/*--mvs_tag_clear--*/
void mvs_tag_free ( struct mvs_info * mvi , u32 tag ) ; 
/*--mvs_tag_free--*/
void mvs_tag_set ( struct mvs_info * mvi , unsigned int tag ) ; 
/*--mvs_tag_set--*/
void mvs_tag_init ( struct mvs_info * mvi ) ; 
/*--mvs_tag_init--*/
void mvs_hexdump ( u32 size , u8 * data , u32 baseaddr ) ; 
/*--mvs_hexdump--*/
void mvs_get_sas_addr ( void * buf , u32 buflen ) ; 
/*--mvs_get_sas_addr--*/
struct mvs_info * mvs_find_dev_mvi ( struct domain_device * dev ) ; 
/*--mvs_find_dev_mvi--*/
int mvs_find_dev_phyno ( struct domain_device * dev , int * phyno ) ; 
/*--mvs_find_dev_phyno--*/
void mvs_phys_reset ( struct mvs_info * mvi , u32 phy_mask , int hard ) ; 
/*--mvs_phys_reset--*/
int mvs_phy_control ( struct asd_sas_phy * sas_phy , enum phy_func func , void * funcdata ) ; 
/*--mvs_phy_control--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) mvs_set_sas_addr ( struct mvs_info * mvi , int port_id , u32 off_lo , u32 off_hi , u64 sas_addr ) ; 
/*--mvs_set_sas_addr--*/
int mvs_slave_alloc ( struct scsi_device * scsi_dev ) ; 
/*--mvs_slave_alloc--*/
int mvs_slave_configure ( struct scsi_device * sdev ) ; 
/*--mvs_slave_configure--*/
void mvs_scan_start ( struct Scsi_Host * shost ) ; 
/*--mvs_scan_start--*/
int mvs_scan_finished ( struct Scsi_Host * shost , unsigned long time ) ; 
/*--mvs_scan_finished--*/
int mvs_queue_command ( struct sas_task * task , const int num , gfp_t gfp_flags ) ; 
/*--mvs_queue_command--*/
void mvs_update_phyinfo ( struct mvs_info * mvi , int i , int get_st ) ; 
/*--mvs_update_phyinfo--*/
void mvs_port_formed ( struct asd_sas_phy * sas_phy ) ; 
/*--mvs_port_formed--*/
void mvs_port_deformed ( struct asd_sas_phy * sas_phy ) ; 
/*--mvs_port_deformed--*/
struct mvs_device * mvs_alloc_dev ( struct mvs_info * mvi ) ; 
/*--mvs_alloc_dev--*/
void mvs_free_dev ( struct mvs_device * mvi_dev ) ; 
/*--mvs_free_dev--*/
int mvs_dev_found_notify ( struct domain_device * dev , int lock ) ; 
/*--mvs_dev_found_notify--*/
int mvs_dev_found ( struct domain_device * dev ) ; 
/*--mvs_dev_found--*/
void mvs_dev_gone_notify ( struct domain_device * dev ) ; 
/*--mvs_dev_gone_notify--*/
void mvs_dev_gone ( struct domain_device * dev ) ; 
/*--mvs_dev_gone--*/
int mvs_lu_reset ( struct domain_device * dev , u8 * lun ) ; 
/*--mvs_lu_reset--*/
int mvs_I_T_nexus_reset ( struct domain_device * dev ) ; 
/*--mvs_I_T_nexus_reset--*/
int mvs_query_task ( struct sas_task * task ) ; 
/*--mvs_query_task--*/
int mvs_abort_task ( struct sas_task * task ) ; 
/*--mvs_abort_task--*/
int mvs_abort_task_set ( struct domain_device * dev , u8 * lun ) ; 
/*--mvs_abort_task_set--*/
int mvs_clear_aca ( struct domain_device * dev , u8 * lun ) ; 
/*--mvs_clear_aca--*/
int mvs_clear_task_set ( struct domain_device * dev , u8 * lun ) ; 
/*--mvs_clear_task_set--*/
int mvs_slot_complete ( struct mvs_info * mvi , u32 rx_desc , u32 flags ) ; 
/*--mvs_slot_complete--*/
void mvs_do_release_task ( struct mvs_info * mvi , int phy_no , struct domain_device * dev ) ; 
/*--mvs_do_release_task--*/
void mvs_release_task ( struct mvs_info * mvi , struct domain_device * dev ) ; 
/*--mvs_release_task--*/
void mvs_int_port ( struct mvs_info * mvi , int phy_no , u32 events ) ; 
/*--mvs_int_port--*/
int mvs_int_rx ( struct mvs_info * mvi , bool self_clear ) ; 
/*--mvs_int_rx--*/
void mvs_64xx_clear_srs_irq ( struct mvs_info * mvi , u8 reg_set , u8 clear_all ) ; 
/*--mvs_64xx_clear_srs_irq--*/
void mvs_64xx_make_prd ( struct scatterlist * scatter , int nr , void * prd ) ; 
/*--mvs_64xx_make_prd--*/
void mvs_64xx_phy_set_link_rate ( struct mvs_info * mvi , u32 phy_id , struct sas_phy_linkrates * rates ) ; 
/*--mvs_64xx_phy_set_link_rate--*/
u32 mvs_64xx_spi_read_data ( struct mvs_info * mvi ) ; 
/*--mvs_64xx_spi_read_data--*/
void mvs_64xx_spi_write_data ( struct mvs_info * mvi , u32 data ) ; 
/*--mvs_64xx_spi_write_data--*/
int mvs_64xx_spi_buildcmd ( struct mvs_info * mvi , u32 * dwCmd , u8 cmd , u8 read , u8 length , u32 addr ) ; 
/*--mvs_64xx_spi_buildcmd--*/
int mvs_64xx_spi_issuecmd ( struct mvs_info * mvi , u32 cmd ) ; 
/*--mvs_64xx_spi_issuecmd--*/
int mvs_64xx_spi_waitdataready ( struct mvs_info * mvi , u32 timeout ) ; 
/*--mvs_64xx_spi_waitdataready--*/
void mvs_64xx_fix_dma ( dma_addr_t buf_dma , int buf_len , int from , void * prd ) ; 
/*--mvs_64xx_fix_dma--*/
void mvs_94xx_phy_set_link_rate ( struct mvs_info * mvi , u32 phy_id , struct sas_phy_linkrates * rates ) ; 
/*--mvs_94xx_phy_set_link_rate--*/
u32 mvs_94xx_spi_read_data ( struct mvs_info * mvi ) ; 
/*--mvs_94xx_spi_read_data--*/
void mvs_94xx_spi_write_data ( struct mvs_info * mvi , u32 data ) ; 
/*--mvs_94xx_spi_write_data--*/
int mvs_94xx_spi_buildcmd ( struct mvs_info * mvi , u32 * dwCmd , u8 cmd , u8 read , u8 length , u32 addr ) ; 
/*--mvs_94xx_spi_buildcmd--*/
int mvs_94xx_spi_issuecmd ( struct mvs_info * mvi , u32 cmd ) ; 
/*--mvs_94xx_spi_issuecmd--*/
int mvs_94xx_spi_waitdataready ( struct mvs_info * mvi , u32 timeout ) ; 
/*--mvs_94xx_spi_waitdataready--*/
void mvs_94xx_fix_dma ( dma_addr_t buf_dma , int buf_len , int from , void * prd ) ; 
/*--mvs_94xx_fix_dma--*/
int osd_auto_detect_ver ( struct osd_dev * od , void * caps , struct osd_dev_info * odi ) ; 
/*--osd_auto_detect_ver--*/
void osd_dev_init ( struct osd_dev * osdd , struct scsi_device * scsi_device ) ; 
/*--osd_dev_init--*/
void osd_dev_fini ( struct osd_dev * osdd ) ; 
/*--osd_dev_fini--*/
struct osd_request * osd_start_request ( struct osd_dev * dev , gfp_t gfp ) ; 
/*--osd_start_request--*/
void osd_end_request ( struct osd_request * or ) ; 
/*--osd_end_request--*/
int osd_execute_request ( struct osd_request * or ) ; 
/*--osd_execute_request--*/
int osd_execute_request_async ( struct osd_request * or , osd_req_done_fn * done , void * private ) ; 
/*--osd_execute_request_async--*/
void osd_req_format ( struct osd_request * or , u64 tot_capacity ) ; 
/*--osd_req_format--*/
int osd_req_list_dev_partitions ( struct osd_request * or , osd_id initial_id , struct osd_obj_id_list * list , unsigned nelem ) ; 
/*--osd_req_list_dev_partitions--*/
void osd_req_flush_obsd ( struct osd_request * or , enum osd_options_flush_scope_values op ) ; 
/*--osd_req_flush_obsd--*/
void osd_req_create_partition ( struct osd_request * or , osd_id partition ) ; 
/*--osd_req_create_partition--*/
void osd_req_remove_partition ( struct osd_request * or , osd_id partition ) ; 
/*--osd_req_remove_partition--*/
int osd_req_list_partition_collections ( struct osd_request * or , osd_id partition , osd_id initial_id , struct osd_obj_id_list * list , unsigned nelem ) ; 
/*--osd_req_list_partition_collections--*/
int osd_req_list_partition_objects ( struct osd_request * or , osd_id partition , osd_id initial_id , struct osd_obj_id_list * list , unsigned nelem ) ; 
/*--osd_req_list_partition_objects--*/
void osd_req_flush_partition ( struct osd_request * or , osd_id partition , enum osd_options_flush_scope_values op ) ; 
/*--osd_req_flush_partition--*/
int osd_req_list_collection_objects ( struct osd_request * or , const struct osd_obj_id * obj , osd_id initial_id , struct osd_obj_id_list * list , unsigned nelem ) ; 
/*--osd_req_list_collection_objects--*/
void osd_req_flush_collection ( struct osd_request * or , const struct osd_obj_id * obj , enum osd_options_flush_scope_values op ) ; 
/*--osd_req_flush_collection--*/
void osd_req_create_object ( struct osd_request * or , struct osd_obj_id * obj ) ; 
/*--osd_req_create_object--*/
void osd_req_remove_object ( struct osd_request * or , struct osd_obj_id * obj ) ; 
/*--osd_req_remove_object--*/
void osd_req_write ( struct osd_request * or , const struct osd_obj_id * obj , u64 offset , struct bio * bio , u64 len ) ; 
/*--osd_req_write--*/
int osd_req_write_kern ( struct osd_request * or , const struct osd_obj_id * obj , u64 offset , void * buff , u64 len ) ; 
/*--osd_req_write_kern--*/
void osd_req_flush_object ( struct osd_request * or , const struct osd_obj_id * obj , enum osd_options_flush_scope_values op , u64 offset , u64 len ) ; 
/*--osd_req_flush_object--*/
void osd_req_read ( struct osd_request * or , const struct osd_obj_id * obj , u64 offset , struct bio * bio , u64 len ) ; 
/*--osd_req_read--*/
int osd_req_read_kern ( struct osd_request * or , const struct osd_obj_id * obj , u64 offset , void * buff , u64 len ) ; 
/*--osd_req_read_kern--*/
void osd_req_get_attributes ( struct osd_request * or , const struct osd_obj_id * obj ) ; 
/*--osd_req_get_attributes--*/
void osd_req_set_attributes ( struct osd_request * or , const struct osd_obj_id * obj ) ; 
/*--osd_req_set_attributes--*/
int osd_req_add_set_attr_list ( struct osd_request * or , const struct osd_attr * oa , unsigned nelem ) ; 
/*--osd_req_add_set_attr_list--*/
int osd_req_add_get_attr_list ( struct osd_request * or , const struct osd_attr * oa , unsigned nelem ) ; 
/*--osd_req_add_get_attr_list--*/
int osd_req_decode_get_attr_list ( struct osd_request * or , struct osd_attr * oa , int * nelem , void * * iterator ) ; 
/*--osd_req_decode_get_attr_list--*/
int osd_req_add_get_attr_page ( struct osd_request * or , u32 page_id , void * attar_page , unsigned max_page_len , const struct osd_attr * set_one_attr ) ; 
/*--osd_req_add_get_attr_page--*/
int osd_finalize_request ( struct osd_request * or , u8 options , const void * cap , const u8 * cap_key ) ; 
/*--osd_finalize_request--*/
int osd_req_decode_sense_full ( struct osd_request * or , struct osd_sense_info * osi , bool silent , struct osd_obj_id * bad_obj_list __attribute__ ( ( unused ) ) , int max_obj __attribute__ ( ( unused ) ) , struct osd_attr * bad_attr_list , int max_attr ) ; 
/*--osd_req_decode_sense_full--*/
void osd_sec_init_nosec_doall_caps ( void * caps , const struct osd_obj_id * obj , bool is_collection , const bool is_v1 ) ; 
/*--osd_sec_init_nosec_doall_caps--*/
void osd_set_caps ( struct osd_cdb * cdb , const void * caps ) ; 
/*--osd_set_caps--*/
bool osd_is_sec_alldata ( struct osd_security_parameters * sec_parms __attribute__ ( ( unused ) ) ) ; 
/*--osd_is_sec_alldata--*/
void osd_sec_sign_cdb ( struct osd_cdb * ocdb __attribute__ ( ( unused ) ) , const u8 * cap_key __attribute__ ( ( unused ) ) ) ; 
/*--osd_sec_sign_cdb--*/
void osd_sec_sign_data ( void * data_integ __attribute__ ( ( unused ) ) , struct bio * bio __attribute__ ( ( unused ) ) , const u8 * cap_key __attribute__ ( ( unused ) ) ) ; 
/*--osd_sec_sign_data--*/
osd_cdb_offset __osd_encode_offset ( u64 offset , unsigned * padding , int min_shift , int max_shift ) ; 
/*--__osd_encode_offset--*/
int osduld_register_test ( unsigned ioctl , do_test_fn * do_test ) ; 
/*--osduld_register_test--*/
void osduld_unregister_test ( unsigned ioctl ) ; 
/*--osduld_unregister_test--*/
struct osd_dev * osduld_path_lookup ( const char * name ) ; 
/*--osduld_path_lookup--*/
int _mach_odi ( struct device * dev , void * find_data ) ; 
/*--_mach_odi--*/
struct osd_dev * osduld_info_lookup ( const struct osd_dev_info * odi ) ; 
/*--osduld_info_lookup--*/
void osduld_put_device ( struct osd_dev * od ) ; 
/*--osduld_put_device--*/
const struct osd_dev_info * osduld_device_info ( struct osd_dev * od ) ; 
/*--osduld_device_info--*/
bool osduld_device_same ( struct osd_dev * od , const struct osd_dev_info * odi ) ; 
/*--osduld_device_same--*/
int fdomain_setup ( char * str ) ; 
/*--fdomain_setup--*/
struct Scsi_Host * __fdomain_16x0_detect ( struct scsi_host_template * tpnt ) ; 
/*--__fdomain_16x0_detect--*/
int fdomain_16x0_bus_reset ( struct scsi_cmnd * SCpnt ) ; 
/*--fdomain_16x0_bus_reset--*/
int qla2x00_wait_for_hba_online ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_wait_for_hba_online--*/
int qla2x00_wait_for_reset_ready ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_wait_for_reset_ready--*/
int qla2x00_wait_for_chip_reset ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_wait_for_chip_reset--*/
void qla82xx_wait_for_pending_commands ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_wait_for_pending_commands--*/
int qla2x00_loop_reset ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_loop_reset--*/
void qla2x00_abort_all_cmds ( scsi_qla_host_t * vha , int res ) ; 
/*--qla2x00_abort_all_cmds--*/
void qla2x00_mark_device_lost ( scsi_qla_host_t * vha , fc_port_t * fcport , int do_login , int defer ) ; 
/*--qla2x00_mark_device_lost--*/
void qla2x00_mark_all_devices_lost ( scsi_qla_host_t * vha , int defer ) ; 
/*--qla2x00_mark_all_devices_lost--*/
struct scsi_qla_host * qla2x00_create_host ( struct scsi_host_template * sht , struct qla_hw_data * ha ) ; 
/*--qla2x00_create_host--*/
int qla2x00_post_aen_work ( struct scsi_qla_host * vha , enum fc_host_event_code code , u32 data ) ; 
/*--qla2x00_post_aen_work--*/
int qla2x00_post_idc_ack_work ( struct scsi_qla_host * vha , uint16_t * mb ) ; 
/*--qla2x00_post_idc_ack_work--*/
int qla2x00_post_async_login_work ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_post_async_login_work--*/
int qla2x00_post_async_login_done_work ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_post_async_login_done_work--*/
int qla2x00_post_async_logout_work ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_post_async_logout_work--*/
int qla2x00_post_async_logout_done_work ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_post_async_logout_done_work--*/
int qla2x00_post_async_adisc_work ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_post_async_adisc_work--*/
int qla2x00_post_async_adisc_done_work ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_post_async_adisc_done_work--*/
int qla2x00_post_uevent_work ( struct scsi_qla_host * vha , u32 code ) ; 
/*--qla2x00_post_uevent_work--*/
void qla2x00_do_work ( struct scsi_qla_host * vha ) ; 
/*--qla2x00_do_work--*/
void qla2x00_relogin ( struct scsi_qla_host * vha ) ; 
/*--qla2x00_relogin--*/
void qla2xxx_wake_dpc ( struct scsi_qla_host * vha ) ; 
/*--qla2xxx_wake_dpc--*/
void qla2x00_sp_compl ( struct qla_hw_data * ha , srb_t * sp ) ; 
/*--qla2x00_sp_compl--*/
void qla2x00_timer ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_timer--*/
struct fw_blob * qla2x00_request_firmware ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_request_firmware--*/
void qla2x00_ctx_sp_free ( srb_t * sp ) ; 
/*--qla2x00_ctx_sp_free--*/
int qla2x00_async_login ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_async_login--*/
int qla2x00_async_logout ( struct scsi_qla_host * vha , fc_port_t * fcport ) ; 
/*--qla2x00_async_logout--*/
int qla2x00_async_adisc ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_async_adisc--*/
int qla2x00_async_tm_cmd ( fc_port_t * fcport , uint32_t flags , uint32_t lun , uint32_t tag ) ; 
/*--qla2x00_async_tm_cmd--*/
int qla2x00_async_marker ( fc_port_t * fcport , uint16_t lun , uint8_t modif ) ; 
/*--qla2x00_async_marker--*/
void qla2x00_async_login_done ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_async_login_done--*/
void qla2x00_async_logout_done ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_async_logout_done--*/
void qla2x00_async_adisc_done ( struct scsi_qla_host * vha , fc_port_t * fcport , uint16_t * data ) ; 
/*--qla2x00_async_adisc_done--*/
void qla2x00_async_tm_cmd_done ( struct scsi_qla_host * vha , fc_port_t * fcport , struct srb_iocb * iocb ) ; 
/*--qla2x00_async_tm_cmd_done--*/
void qla2x00_async_marker_done ( struct scsi_qla_host * vha , fc_port_t * fcport , struct srb_iocb * iocb ) ; 
/*--qla2x00_async_marker_done--*/
int qla2x00_initialize_adapter ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_initialize_adapter--*/
int qla2100_pci_config ( scsi_qla_host_t * vha ) ; 
/*--qla2100_pci_config--*/
int qla2300_pci_config ( scsi_qla_host_t * vha ) ; 
/*--qla2300_pci_config--*/
int qla24xx_pci_config ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_pci_config--*/
int qla25xx_pci_config ( scsi_qla_host_t * vha ) ; 
/*--qla25xx_pci_config--*/
void qla2x00_reset_chip ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_reset_chip--*/
void qla24xx_reset_chip ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_reset_chip--*/
int qla2x00_chip_diag ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_chip_diag--*/
int qla24xx_chip_diag ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_chip_diag--*/
void qla2x00_alloc_fw_dump ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_alloc_fw_dump--*/
void qla2x00_init_response_q_entries ( struct rsp_que * rsp ) ; 
/*--qla2x00_init_response_q_entries--*/
void qla2x00_update_fw_options ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_update_fw_options--*/
void qla24xx_update_fw_options ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_update_fw_options--*/
void qla2x00_config_rings ( struct scsi_qla_host * vha ) ; 
/*--qla2x00_config_rings--*/
void qla24xx_config_rings ( struct scsi_qla_host * vha ) ; 
/*--qla24xx_config_rings--*/
int qla2x00_nvram_config ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_nvram_config--*/
fc_port_t * qla2x00_alloc_fcport ( scsi_qla_host_t * vha , gfp_t flags ) ; 
/*--qla2x00_alloc_fcport--*/
void qla2x00_update_fcport ( scsi_qla_host_t * vha , fc_port_t * fcport ) ; 
/*--qla2x00_update_fcport--*/
int qla2x00_fabric_login ( scsi_qla_host_t * vha , fc_port_t * fcport , uint16_t * next_loopid ) ; 
/*--qla2x00_fabric_login--*/
int qla2x00_local_device_login ( scsi_qla_host_t * vha , fc_port_t * fcport ) ; 
/*--qla2x00_local_device_login--*/
int qla2x00_loop_resync ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_loop_resync--*/
void qla2x00_update_fcports ( scsi_qla_host_t * base_vha ) ; 
/*--qla2x00_update_fcports--*/
void qla2x00_abort_isp_cleanup ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_abort_isp_cleanup--*/
int qla2x00_abort_isp ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_abort_isp--*/
void qla2x00_reset_adapter ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_reset_adapter--*/
void qla24xx_reset_adapter ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_reset_adapter--*/
int qla24xx_nvram_config ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_nvram_config--*/
int qla2x00_load_risc ( scsi_qla_host_t * vha , uint32_t * srisc_addr ) ; 
/*--qla2x00_load_risc--*/
int qla24xx_load_risc ( scsi_qla_host_t * vha , uint32_t * srisc_addr ) ; 
/*--qla24xx_load_risc--*/
int qla81xx_load_risc ( scsi_qla_host_t * vha , uint32_t * srisc_addr ) ; 
/*--qla81xx_load_risc--*/
void qla2x00_try_to_stop_firmware ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_try_to_stop_firmware--*/
int qla24xx_configure_vhba ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_configure_vhba--*/
void qla84xx_put_chip ( struct scsi_qla_host * vha ) ; 
/*--qla84xx_put_chip--*/
int qla81xx_nvram_config ( scsi_qla_host_t * vha ) ; 
/*--qla81xx_nvram_config--*/
int qla82xx_restart_isp ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_restart_isp--*/
void qla81xx_update_fw_options ( scsi_qla_host_t * vha ) ; 
/*--qla81xx_update_fw_options--*/
uint8_t qla24xx_get_fcp_prio ( scsi_qla_host_t * vha , fc_port_t * fcport ) ; 
/*--qla24xx_get_fcp_prio--*/
int qla24xx_update_fcport_fcp_prio ( scsi_qla_host_t * ha , fc_port_t * fcport ) ; 
/*--qla24xx_update_fcport_fcp_prio--*/
int qla24xx_update_all_fcp_prio ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_update_all_fcp_prio--*/
int qla2x00_load_ram ( scsi_qla_host_t * vha , dma_addr_t req_dma , uint32_t risc_addr , uint32_t risc_code_size ) ; 
/*--qla2x00_load_ram--*/
int qla2x00_execute_fw ( scsi_qla_host_t * vha , uint32_t risc_addr ) ; 
/*--qla2x00_execute_fw--*/
int qla2x00_get_fw_version ( scsi_qla_host_t * vha , uint16_t * major , uint16_t * minor , uint16_t * subminor , uint16_t * attributes , uint32_t * memory , uint8_t * mpi , uint32_t * mpi_caps , uint8_t * phy ) ; 
/*--qla2x00_get_fw_version--*/
int qla2x00_get_fw_options ( scsi_qla_host_t * vha , uint16_t * fwopts ) ; 
/*--qla2x00_get_fw_options--*/
int qla2x00_set_fw_options ( scsi_qla_host_t * vha , uint16_t * fwopts ) ; 
/*--qla2x00_set_fw_options--*/
int qla2x00_mbx_reg_test ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_mbx_reg_test--*/
int qla2x00_verify_checksum ( scsi_qla_host_t * vha , uint32_t risc_addr ) ; 
/*--qla2x00_verify_checksum--*/
int qla2x00_issue_iocb_timeout ( scsi_qla_host_t * vha , void * buffer , dma_addr_t phys_addr , size_t size , uint32_t tov ) ; 
/*--qla2x00_issue_iocb_timeout--*/
int qla2x00_issue_iocb ( scsi_qla_host_t * vha , void * buffer , dma_addr_t phys_addr , size_t size ) ; 
/*--qla2x00_issue_iocb--*/
int qla2x00_abort_command ( srb_t * sp ) ; 
/*--qla2x00_abort_command--*/
int qla2x00_abort_target ( struct fc_port * fcport , unsigned int l , int tag ) ; 
/*--qla2x00_abort_target--*/
int qla2x00_lun_reset ( struct fc_port * fcport , unsigned int l , int tag ) ; 
/*--qla2x00_lun_reset--*/
int qla2x00_get_adapter_id ( scsi_qla_host_t * vha , uint16_t * id , uint8_t * al_pa , uint8_t * area , uint8_t * domain , uint16_t * top , uint16_t * sw_cap ) ; 
/*--qla2x00_get_adapter_id--*/
int qla2x00_get_retry_cnt ( scsi_qla_host_t * vha , uint8_t * retry_cnt , uint8_t * tov , uint16_t * r_a_tov ) ; 
/*--qla2x00_get_retry_cnt--*/
int qla2x00_init_firmware ( scsi_qla_host_t * vha , uint16_t size ) ; 
/*--qla2x00_init_firmware--*/
int qla2x00_get_port_database ( scsi_qla_host_t * vha , fc_port_t * fcport , uint8_t opt ) ; 
/*--qla2x00_get_port_database--*/
int qla2x00_get_firmware_state ( scsi_qla_host_t * vha , uint16_t * states ) ; 
/*--qla2x00_get_firmware_state--*/
int qla2x00_get_port_name ( scsi_qla_host_t * vha , uint16_t loop_id , uint8_t * name , uint8_t opt ) ; 
/*--qla2x00_get_port_name--*/
int qla2x00_lip_reset ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_lip_reset--*/
int qla2x00_send_sns ( scsi_qla_host_t * vha , dma_addr_t sns_phys_address , uint16_t cmd_size , size_t buf_size ) ; 
/*--qla2x00_send_sns--*/
int qla24xx_login_fabric ( scsi_qla_host_t * vha , uint16_t loop_id , uint8_t domain , uint8_t area , uint8_t al_pa , uint16_t * mb , uint8_t opt ) ; 
/*--qla24xx_login_fabric--*/
int qla2x00_login_fabric ( scsi_qla_host_t * vha , uint16_t loop_id , uint8_t domain , uint8_t area , uint8_t al_pa , uint16_t * mb , uint8_t opt ) ; 
/*--qla2x00_login_fabric--*/
int qla2x00_login_local_device ( scsi_qla_host_t * vha , fc_port_t * fcport , uint16_t * mb_ret , uint8_t opt ) ; 
/*--qla2x00_login_local_device--*/
int qla24xx_fabric_logout ( scsi_qla_host_t * vha , uint16_t loop_id , uint8_t domain , uint8_t area , uint8_t al_pa ) ; 
/*--qla24xx_fabric_logout--*/
int qla2x00_fabric_logout ( scsi_qla_host_t * vha , uint16_t loop_id , uint8_t domain , uint8_t area , uint8_t al_pa ) ; 
/*--qla2x00_fabric_logout--*/
int qla2x00_full_login_lip ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_full_login_lip--*/
int qla2x00_get_id_list ( scsi_qla_host_t * vha , void * id_list , dma_addr_t id_list_dma , uint16_t * entries ) ; 
/*--qla2x00_get_id_list--*/
int qla2x00_get_resource_cnts ( scsi_qla_host_t * vha , uint16_t * cur_xchg_cnt , uint16_t * orig_xchg_cnt , uint16_t * cur_iocb_cnt , uint16_t * orig_iocb_cnt , uint16_t * max_npiv_vports , uint16_t * max_fcfs ) ; 
/*--qla2x00_get_resource_cnts--*/
int qla2x00_get_link_status ( scsi_qla_host_t * vha , uint16_t loop_id , struct link_statistics * stats , dma_addr_t stats_dma ) ; 
/*--qla2x00_get_link_status--*/
int qla24xx_get_isp_stats ( scsi_qla_host_t * vha , struct link_statistics * stats , dma_addr_t stats_dma ) ; 
/*--qla24xx_get_isp_stats--*/
int qla24xx_abort_command ( srb_t * sp ) ; 
/*--qla24xx_abort_command--*/
int qla24xx_abort_target ( struct fc_port * fcport , unsigned int l , int tag ) ; 
/*--qla24xx_abort_target--*/
int qla24xx_lun_reset ( struct fc_port * fcport , unsigned int l , int tag ) ; 
/*--qla24xx_lun_reset--*/
int qla2x00_system_error ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_system_error--*/
int qla2x00_set_serdes_params ( scsi_qla_host_t * vha , uint16_t sw_em_1g , uint16_t sw_em_2g , uint16_t sw_em_4g ) ; 
/*--qla2x00_set_serdes_params--*/
int qla2x00_stop_firmware ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_stop_firmware--*/
int qla2x00_enable_eft_trace ( scsi_qla_host_t * vha , dma_addr_t eft_dma , uint16_t buffers ) ; 
/*--qla2x00_enable_eft_trace--*/
int qla2x00_disable_eft_trace ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_disable_eft_trace--*/
int qla2x00_enable_fce_trace ( scsi_qla_host_t * vha , dma_addr_t fce_dma , uint16_t buffers , uint16_t * mb , uint32_t * dwords ) ; 
/*--qla2x00_enable_fce_trace--*/
int qla2x00_disable_fce_trace ( scsi_qla_host_t * vha , uint64_t * wr , uint64_t * rd ) ; 
/*--qla2x00_disable_fce_trace--*/
int qla2x00_read_sfp ( scsi_qla_host_t * vha , dma_addr_t sfp_dma , uint16_t addr , uint16_t off , uint16_t count ) ; 
/*--qla2x00_read_sfp--*/
int qla2x00_get_idma_speed ( scsi_qla_host_t * vha , uint16_t loop_id , uint16_t * port_speed , uint16_t * mb ) ; 
/*--qla2x00_get_idma_speed--*/
int qla2x00_set_idma_speed ( scsi_qla_host_t * vha , uint16_t loop_id , uint16_t port_speed , uint16_t * mb ) ; 
/*--qla2x00_set_idma_speed--*/
void qla24xx_report_id_acquisition ( scsi_qla_host_t * vha , struct vp_rpt_id_entry_24xx * rptid_entry ) ; 
/*--qla24xx_report_id_acquisition--*/
int qla24xx_modify_vp_config ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_modify_vp_config--*/
int qla24xx_control_vp ( scsi_qla_host_t * vha , int cmd ) ; 
/*--qla24xx_control_vp--*/
int qla2x00_send_change_request ( scsi_qla_host_t * vha , uint16_t format , uint16_t vp_idx ) ; 
/*--qla2x00_send_change_request--*/
int qla2x00_dump_ram ( scsi_qla_host_t * vha , dma_addr_t req_dma , uint32_t addr , uint32_t size ) ; 
/*--qla2x00_dump_ram--*/
int qla84xx_verify_chip ( struct scsi_qla_host * vha , uint16_t * status ) ; 
/*--qla84xx_verify_chip--*/
int qla25xx_init_req_que ( struct scsi_qla_host * vha , struct req_que * req ) ; 
/*--qla25xx_init_req_que--*/
int qla25xx_init_rsp_que ( struct scsi_qla_host * vha , struct rsp_que * rsp ) ; 
/*--qla25xx_init_rsp_que--*/
int qla81xx_idc_ack ( scsi_qla_host_t * vha , uint16_t * mb ) ; 
/*--qla81xx_idc_ack--*/
int qla81xx_fac_get_sector_size ( scsi_qla_host_t * vha , uint32_t * sector_size ) ; 
/*--qla81xx_fac_get_sector_size--*/
int qla81xx_fac_do_write_enable ( scsi_qla_host_t * vha , int enable ) ; 
/*--qla81xx_fac_do_write_enable--*/
int qla81xx_fac_erase_sector ( scsi_qla_host_t * vha , uint32_t start , uint32_t finish ) ; 
/*--qla81xx_fac_erase_sector--*/
int qla81xx_restart_mpi_firmware ( scsi_qla_host_t * vha ) ; 
/*--qla81xx_restart_mpi_firmware--*/
int qla2x00_read_edc ( scsi_qla_host_t * vha , uint16_t dev , uint16_t adr , dma_addr_t sfp_dma , uint8_t * sfp , uint16_t len , uint16_t opt ) ; 
/*--qla2x00_read_edc--*/
int qla2x00_write_edc ( scsi_qla_host_t * vha , uint16_t dev , uint16_t adr , dma_addr_t sfp_dma , uint8_t * sfp , uint16_t len , uint16_t opt ) ; 
/*--qla2x00_write_edc--*/
int qla2x00_get_xgmac_stats ( scsi_qla_host_t * vha , dma_addr_t stats_dma , uint16_t size_in_bytes , uint16_t * actual_size ) ; 
/*--qla2x00_get_xgmac_stats--*/
int qla2x00_get_dcbx_params ( scsi_qla_host_t * vha , dma_addr_t tlv_dma , uint16_t size ) ; 
/*--qla2x00_get_dcbx_params--*/
int qla2x00_read_ram_word ( scsi_qla_host_t * vha , uint32_t risc_addr , uint32_t * data ) ; 
/*--qla2x00_read_ram_word--*/
int qla2x00_loopback_test ( scsi_qla_host_t * vha , struct msg_echo_lb * mreq , uint16_t * mresp ) ; 
/*--qla2x00_loopback_test--*/
int qla2x00_echo_test ( scsi_qla_host_t * vha , struct msg_echo_lb * mreq , uint16_t * mresp ) ; 
/*--qla2x00_echo_test--*/
int qla84xx_reset_chip ( scsi_qla_host_t * ha , uint16_t enable_diagnostic ) ; 
/*--qla84xx_reset_chip--*/
int qla2x00_write_ram_word ( scsi_qla_host_t * vha , uint32_t risc_addr , uint32_t data ) ; 
/*--qla2x00_write_ram_word--*/
int qla2x00_get_data_rate ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_get_data_rate--*/
int qla24xx_set_fcp_prio ( scsi_qla_host_t * vha , uint16_t loop_id , uint16_t priority , uint16_t * mb ) ; 
/*--qla24xx_set_fcp_prio--*/
int qla82xx_mbx_intr_enable ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_mbx_intr_enable--*/
int qla82xx_mbx_intr_disable ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_mbx_intr_disable--*/
uint16_t qla2x00_calc_iocbs_32 ( uint16_t dsds ) ; 
/*--qla2x00_calc_iocbs_32--*/
uint16_t qla2x00_calc_iocbs_64 ( uint16_t dsds ) ; 
/*--qla2x00_calc_iocbs_64--*/
void qla2x00_build_scsi_iocbs_32 ( srb_t * sp , cmd_entry_t * cmd_pkt , uint16_t tot_dsds ) ; 
/*--qla2x00_build_scsi_iocbs_32--*/
void qla2x00_build_scsi_iocbs_64 ( srb_t * sp , cmd_entry_t * cmd_pkt , uint16_t tot_dsds ) ; 
/*--qla2x00_build_scsi_iocbs_64--*/
int qla2x00_start_scsi ( srb_t * sp ) ; 
/*--qla2x00_start_scsi--*/
int __qla2x00_marker ( struct scsi_qla_host * vha , struct req_que * req , struct rsp_que * rsp , uint16_t loop_id , uint16_t lun , uint8_t type ) ; 
/*--__qla2x00_marker--*/
int qla2x00_marker ( struct scsi_qla_host * vha , struct req_que * req , struct rsp_que * rsp , uint16_t loop_id , uint16_t lun , uint8_t type ) ; 
/*--qla2x00_marker--*/
int qla24xx_start_scsi ( srb_t * sp ) ; 
/*--qla24xx_start_scsi--*/
int qla24xx_dif_start_scsi ( srb_t * sp ) ; 
/*--qla24xx_dif_start_scsi--*/
int qla2x00_start_sp ( srb_t * sp ) ; 
/*--qla2x00_start_sp--*/
irqreturn_t qla2100_intr_handler ( int irq , void * dev_id ) ; 
/*--qla2100_intr_handler--*/
irqreturn_t qla2300_intr_handler ( int irq , void * dev_id ) ; 
/*--qla2300_intr_handler--*/
void qla2x00_async_event ( scsi_qla_host_t * vha , struct rsp_que * rsp , uint16_t * mb ) ; 
/*--qla2x00_async_event--*/
void qla2x00_process_response_queue ( struct rsp_que * rsp ) ; 
/*--qla2x00_process_response_queue--*/
void qla24xx_process_response_queue ( struct scsi_qla_host * vha , struct rsp_que * rsp ) ; 
/*--qla24xx_process_response_queue--*/
irqreturn_t qla24xx_intr_handler ( int irq , void * dev_id ) ; 
/*--qla24xx_intr_handler--*/
int qla2x00_request_irqs ( struct qla_hw_data * ha , struct rsp_que * rsp ) ; 
/*--qla2x00_request_irqs--*/
void qla2x00_free_irqs ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_free_irqs--*/
int qla25xx_request_irq ( struct rsp_que * rsp ) ; 
/*--qla25xx_request_irq--*/
void * qla2x00_prep_ms_iocb ( scsi_qla_host_t * vha , uint32_t req_size , uint32_t rsp_size ) ; 
/*--qla2x00_prep_ms_iocb--*/
void * qla24xx_prep_ms_iocb ( scsi_qla_host_t * vha , uint32_t req_size , uint32_t rsp_size ) ; 
/*--qla24xx_prep_ms_iocb--*/
int qla2x00_ga_nxt ( scsi_qla_host_t * vha , fc_port_t * fcport ) ; 
/*--qla2x00_ga_nxt--*/
int qla2x00_gid_pt ( scsi_qla_host_t * vha , sw_info_t * list ) ; 
/*--qla2x00_gid_pt--*/
int qla2x00_gpn_id ( scsi_qla_host_t * vha , sw_info_t * list ) ; 
/*--qla2x00_gpn_id--*/
int qla2x00_gnn_id ( scsi_qla_host_t * vha , sw_info_t * list ) ; 
/*--qla2x00_gnn_id--*/
int qla2x00_rft_id ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_rft_id--*/
int qla2x00_rff_id ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_rff_id--*/
int qla2x00_rnn_id ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_rnn_id--*/
void qla2x00_get_sym_node_name ( scsi_qla_host_t * vha , uint8_t * snn ) ; 
/*--qla2x00_get_sym_node_name--*/
int qla2x00_rsnn_nn ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_rsnn_nn--*/
void * qla2x00_prep_ms_fdmi_iocb ( scsi_qla_host_t * vha , uint32_t req_size , uint32_t rsp_size ) ; 
/*--qla2x00_prep_ms_fdmi_iocb--*/
void * qla24xx_prep_ms_fdmi_iocb ( scsi_qla_host_t * vha , uint32_t req_size , uint32_t rsp_size ) ; 
/*--qla24xx_prep_ms_fdmi_iocb--*/
int qla2x00_fdmi_register ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_fdmi_register--*/
int qla2x00_gfpn_id ( scsi_qla_host_t * vha , sw_info_t * list ) ; 
/*--qla2x00_gfpn_id--*/
int qla2x00_gpsc ( scsi_qla_host_t * vha , sw_info_t * list ) ; 
/*--qla2x00_gpsc--*/
void qla2300_fw_dump ( scsi_qla_host_t * vha , int hardware_locked ) ; 
/*--qla2300_fw_dump--*/
void qla2100_fw_dump ( scsi_qla_host_t * vha , int hardware_locked ) ; 
/*--qla2100_fw_dump--*/
void qla24xx_fw_dump ( scsi_qla_host_t * vha , int hardware_locked ) ; 
/*--qla24xx_fw_dump--*/
void qla25xx_fw_dump ( scsi_qla_host_t * vha , int hardware_locked ) ; 
/*--qla25xx_fw_dump--*/
void qla81xx_fw_dump ( scsi_qla_host_t * vha , int hardware_locked ) ; 
/*--qla81xx_fw_dump--*/
void qla2x00_dump_regs ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_dump_regs--*/
void qla2x00_dump_buffer ( uint8_t * b , uint32_t size ) ; 
/*--qla2x00_dump_buffer--*/
void qla2x00_dump_buffer_zipped ( uint8_t * b , uint32_t size ) ; 
/*--qla2x00_dump_buffer_zipped--*/
uint32_t * qla24xx_read_flash_data ( scsi_qla_host_t * vha , uint32_t * dwptr , uint32_t faddr , uint32_t dwords ) ; 
/*--qla24xx_read_flash_data--*/
int qla2xxx_get_flash_info ( scsi_qla_host_t * vha ) ; 
/*--qla2xxx_get_flash_info--*/
void qla2xxx_flash_npiv_conf ( scsi_qla_host_t * vha ) ; 
/*--qla2xxx_flash_npiv_conf--*/
uint8_t * qla2x00_read_nvram_data ( scsi_qla_host_t * vha , uint8_t * buf , uint32_t naddr , uint32_t bytes ) ; 
/*--qla2x00_read_nvram_data--*/
uint8_t * qla24xx_read_nvram_data ( scsi_qla_host_t * vha , uint8_t * buf , uint32_t naddr , uint32_t bytes ) ; 
/*--qla24xx_read_nvram_data--*/
int qla2x00_write_nvram_data ( scsi_qla_host_t * vha , uint8_t * buf , uint32_t naddr , uint32_t bytes ) ; 
/*--qla2x00_write_nvram_data--*/
int qla24xx_write_nvram_data ( scsi_qla_host_t * vha , uint8_t * buf , uint32_t naddr , uint32_t bytes ) ; 
/*--qla24xx_write_nvram_data--*/
uint8_t * qla25xx_read_nvram_data ( scsi_qla_host_t * vha , uint8_t * buf , uint32_t naddr , uint32_t bytes ) ; 
/*--qla25xx_read_nvram_data--*/
int qla25xx_write_nvram_data ( scsi_qla_host_t * vha , uint8_t * buf , uint32_t naddr , uint32_t bytes ) ; 
/*--qla25xx_write_nvram_data--*/
void qla2x00_beacon_blink ( struct scsi_qla_host * vha ) ; 
/*--qla2x00_beacon_blink--*/
int qla2x00_beacon_on ( struct scsi_qla_host * vha ) ; 
/*--qla2x00_beacon_on--*/
int qla2x00_beacon_off ( struct scsi_qla_host * vha ) ; 
/*--qla2x00_beacon_off--*/
void qla24xx_beacon_blink ( struct scsi_qla_host * vha ) ; 
/*--qla24xx_beacon_blink--*/
int qla24xx_beacon_on ( struct scsi_qla_host * vha ) ; 
/*--qla24xx_beacon_on--*/
int qla24xx_beacon_off ( struct scsi_qla_host * vha ) ; 
/*--qla24xx_beacon_off--*/
uint8_t * qla2x00_read_optrom_data ( struct scsi_qla_host * vha , uint8_t * buf , uint32_t offset , uint32_t length ) ; 
/*--qla2x00_read_optrom_data--*/
int qla2x00_write_optrom_data ( struct scsi_qla_host * vha , uint8_t * buf , uint32_t offset , uint32_t length ) ; 
/*--qla2x00_write_optrom_data--*/
uint8_t * qla24xx_read_optrom_data ( struct scsi_qla_host * vha , uint8_t * buf , uint32_t offset , uint32_t length ) ; 
/*--qla24xx_read_optrom_data--*/
int qla24xx_write_optrom_data ( struct scsi_qla_host * vha , uint8_t * buf , uint32_t offset , uint32_t length ) ; 
/*--qla24xx_write_optrom_data--*/
uint8_t * qla25xx_read_optrom_data ( struct scsi_qla_host * vha , uint8_t * buf , uint32_t offset , uint32_t length ) ; 
/*--qla25xx_read_optrom_data--*/
int qla2x00_get_flash_version ( scsi_qla_host_t * vha , void * mbuf ) ; 
/*--qla2x00_get_flash_version--*/
int qla24xx_get_flash_version ( scsi_qla_host_t * vha , void * mbuf ) ; 
/*--qla24xx_get_flash_version--*/
int qla2xxx_get_vpd_field ( scsi_qla_host_t * vha , char * key , char * str , size_t size ) ; 
/*--qla2xxx_get_vpd_field--*/
int qla24xx_read_fcp_prio_cfg ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_read_fcp_prio_cfg--*/
void qla2x00_alloc_sysfs_attr ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_alloc_sysfs_attr--*/
void qla2x00_free_sysfs_attr ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_free_sysfs_attr--*/
void qla2x00_init_host_attr ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_init_host_attr--*/
void qla2x00_vp_stop_timer ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_vp_stop_timer--*/
void qla24xx_deallocate_vp_id ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_deallocate_vp_id--*/
int qla24xx_disable_vp ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_disable_vp--*/
int qla24xx_enable_vp ( scsi_qla_host_t * vha ) ; 
/*--qla24xx_enable_vp--*/
void qla2x00_alert_all_vps ( struct rsp_que * rsp , uint16_t * mb ) ; 
/*--qla2x00_alert_all_vps--*/
int qla2x00_vp_abort_isp ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_vp_abort_isp--*/
void qla2x00_do_dpc_all_vps ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_do_dpc_all_vps--*/
int qla24xx_vport_create_req_sanity_check ( struct fc_vport * fc_vport ) ; 
/*--qla24xx_vport_create_req_sanity_check--*/
scsi_qla_host_t * qla24xx_create_vhost ( struct fc_vport * fc_vport ) ; 
/*--qla24xx_create_vhost--*/
int qla25xx_delete_req_que ( struct scsi_qla_host * vha , struct req_que * req ) ; 
/*--qla25xx_delete_req_que--*/
int qla25xx_delete_rsp_que ( struct scsi_qla_host * vha , struct rsp_que * rsp ) ; 
/*--qla25xx_delete_rsp_que--*/
int qla25xx_update_req_que ( struct scsi_qla_host * vha , uint8_t que , uint8_t qos ) ; 
/*--qla25xx_update_req_que--*/
int qla25xx_delete_queues ( struct scsi_qla_host * vha ) ; 
/*--qla25xx_delete_queues--*/
int qla25xx_create_req_que ( struct qla_hw_data * ha , uint16_t options , uint8_t vp_idx , uint16_t rid , int rsp_que , uint8_t qos ) ; 
/*--qla25xx_create_req_que--*/
int qla25xx_create_rsp_que ( struct qla_hw_data * ha , uint16_t options , uint8_t vp_idx , uint16_t rid , int req ) ; 
/*--qla25xx_create_rsp_que--*/
int qla25xx_create_queues ( struct scsi_qla_host * vha , uint8_t qos ) ; 
/*--qla25xx_create_queues--*/
int qla2x00_dfs_setup ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_dfs_setup--*/
int qla2x00_dfs_remove ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_dfs_remove--*/
int qla24xx_fcp_prio_cfg_valid ( struct qla_fcp_prio_cfg * pri_cfg , uint8_t flag ) ; 
/*--qla24xx_fcp_prio_cfg_valid--*/
int qla24xx_bsg_request ( struct fc_bsg_job * bsg_job ) ; 
/*--qla24xx_bsg_request--*/
int qla24xx_bsg_timeout ( struct fc_bsg_job * bsg_job ) ; 
/*--qla24xx_bsg_timeout--*/
int qla82xx_wr_32 ( struct qla_hw_data * ha , ulong off , u32 data ) ; 
/*--qla82xx_wr_32--*/
int qla82xx_rd_32 ( struct qla_hw_data * ha , ulong off ) ; 
/*--qla82xx_rd_32--*/
int qla82xx_crb_win_lock ( struct qla_hw_data * ha ) ; 
/*--qla82xx_crb_win_lock--*/
int qla82xx_idc_lock ( struct qla_hw_data * ha ) ; 
/*--qla82xx_idc_lock--*/
void qla82xx_idc_unlock ( struct qla_hw_data * ha ) ; 
/*--qla82xx_idc_unlock--*/
int qla82xx_pci_get_crb_addr_2M ( struct qla_hw_data * ha , ulong * off ) ; 
/*--qla82xx_pci_get_crb_addr_2M--*/
unsigned long qla82xx_pci_set_window ( struct qla_hw_data * ha , unsigned long long addr ) ; 
/*--qla82xx_pci_set_window--*/
int qla82xx_wrmem ( struct qla_hw_data * ha , u64 off , void * data , int size ) ; 
/*--qla82xx_wrmem--*/
int qla82xx_rdmem ( struct qla_hw_data * ha , u64 off , void * data , int size ) ; 
/*--qla82xx_rdmem--*/
unsigned long qla82xx_decode_crb_addr ( unsigned long addr ) ; 
/*--qla82xx_decode_crb_addr--*/
int qla82xx_rom_lock ( struct qla_hw_data * ha ) ; 
/*--qla82xx_rom_lock--*/
int qla82xx_wait_rom_busy ( struct qla_hw_data * ha ) ; 
/*--qla82xx_wait_rom_busy--*/
int qla82xx_wait_rom_done ( struct qla_hw_data * ha ) ; 
/*--qla82xx_wait_rom_done--*/
int qla82xx_do_rom_fast_read ( struct qla_hw_data * ha , int addr , int * valp ) ; 
/*--qla82xx_do_rom_fast_read--*/
int qla82xx_rom_fast_read ( struct qla_hw_data * ha , int addr , int * valp ) ; 
/*--qla82xx_rom_fast_read--*/
int qla82xx_read_status_reg ( struct qla_hw_data * ha , uint32_t * val ) ; 
/*--qla82xx_read_status_reg--*/
int qla82xx_flash_wait_write_finish ( struct qla_hw_data * ha ) ; 
/*--qla82xx_flash_wait_write_finish--*/
int qla82xx_flash_set_write_enable ( struct qla_hw_data * ha ) ; 
/*--qla82xx_flash_set_write_enable--*/
int qla82xx_write_status_reg ( struct qla_hw_data * ha , uint32_t val ) ; 
/*--qla82xx_write_status_reg--*/
int qla82xx_write_disable_flash ( struct qla_hw_data * ha ) ; 
/*--qla82xx_write_disable_flash--*/
int ql82xx_rom_lock_d ( struct qla_hw_data * ha ) ; 
/*--ql82xx_rom_lock_d--*/
int qla82xx_write_flash_dword ( struct qla_hw_data * ha , uint32_t flashaddr , uint32_t data ) ; 
/*--qla82xx_write_flash_dword--*/
int qla82xx_pinit_from_rom ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_pinit_from_rom--*/
int qla82xx_check_for_bad_spd ( struct qla_hw_data * ha ) ; 
/*--qla82xx_check_for_bad_spd--*/
int qla82xx_fw_load_from_flash ( struct qla_hw_data * ha ) ; 
/*--qla82xx_fw_load_from_flash--*/
int qla82xx_pci_mem_read_2M ( struct qla_hw_data * ha , u64 off , void * data , int size ) ; 
/*--qla82xx_pci_mem_read_2M--*/
int qla82xx_pci_mem_write_2M ( struct qla_hw_data * ha , u64 off , void * data , int size ) ; 
/*--qla82xx_pci_mem_write_2M--*/
char * qla82xx_pci_info_str ( struct scsi_qla_host * vha , char * str ) ; 
/*--qla82xx_pci_info_str--*/
int qla82xx_pci_region_offset ( struct pci_dev * pdev , int region ) ; 
/*--qla82xx_pci_region_offset--*/
int qla82xx_pci_region_len ( struct pci_dev * pdev , int region ) ; 
/*--qla82xx_pci_region_len--*/
int qla82xx_iospace_config ( struct qla_hw_data * ha ) ; 
/*--qla82xx_iospace_config--*/
int qla82xx_pci_config ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_pci_config--*/
void qla82xx_reset_chip ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_reset_chip--*/
void qla82xx_config_rings ( struct scsi_qla_host * vha ) ; 
/*--qla82xx_config_rings--*/
void qla82xx_reset_adapter ( struct scsi_qla_host * vha ) ; 
/*--qla82xx_reset_adapter--*/
int qla82xx_fw_load_from_blob ( struct qla_hw_data * ha ) ; 
/*--qla82xx_fw_load_from_blob--*/
int qla82xx_check_cmdpeg_state ( struct qla_hw_data * ha ) ; 
/*--qla82xx_check_cmdpeg_state--*/
int qla82xx_check_rcvpeg_state ( struct qla_hw_data * ha ) ; 
/*--qla82xx_check_rcvpeg_state--*/
void qla82xx_mbx_completion ( scsi_qla_host_t * vha , uint16_t mb0 ) ; 
/*--qla82xx_mbx_completion--*/
irqreturn_t qla82xx_intr_handler ( int irq , void * dev_id ) ; 
/*--qla82xx_intr_handler--*/
irqreturn_t qla82xx_msix_default ( int irq , void * dev_id ) ; 
/*--qla82xx_msix_default--*/
irqreturn_t qla82xx_msix_rsp_q ( int irq , void * dev_id ) ; 
/*--qla82xx_msix_rsp_q--*/
void qla82xx_poll ( int irq , void * dev_id ) ; 
/*--qla82xx_poll--*/
void qla82xx_enable_intrs ( struct qla_hw_data * ha ) ; 
/*--qla82xx_enable_intrs--*/
void qla82xx_disable_intrs ( struct qla_hw_data * ha ) ; 
/*--qla82xx_disable_intrs--*/
void qla82xx_init_flags ( struct qla_hw_data * ha ) ; 
/*--qla82xx_init_flags--*/
int qla82xx_load_fw ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_load_fw--*/
int qla82xx_start_scsi ( srb_t * sp ) ; 
/*--qla82xx_start_scsi--*/
uint32_t * qla82xx_read_flash_data ( scsi_qla_host_t * vha , uint32_t * dwptr , uint32_t faddr , uint32_t length ) ; 
/*--qla82xx_read_flash_data--*/
int qla82xx_unprotect_flash ( struct qla_hw_data * ha ) ; 
/*--qla82xx_unprotect_flash--*/
int qla82xx_protect_flash ( struct qla_hw_data * ha ) ; 
/*--qla82xx_protect_flash--*/
int qla82xx_erase_sector ( struct qla_hw_data * ha , int addr ) ; 
/*--qla82xx_erase_sector--*/
uint8_t * qla82xx_read_optrom_data ( struct scsi_qla_host * vha , uint8_t * buf , uint32_t offset , uint32_t length ) ; 
/*--qla82xx_read_optrom_data--*/
int qla82xx_write_optrom_data ( struct scsi_qla_host * vha , uint8_t * buf , uint32_t offset , uint32_t length ) ; 
/*--qla82xx_write_optrom_data--*/
void qla82xx_start_iocbs ( srb_t * sp ) ; 
/*--qla82xx_start_iocbs--*/
int qla82xx_device_state_handler ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_device_state_handler--*/
void qla82xx_watchdog ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_watchdog--*/
int qla82xx_load_risc ( scsi_qla_host_t * vha , uint32_t * srisc_addr ) ; 
/*--qla82xx_load_risc--*/
int qla82xx_abort_isp ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_abort_isp--*/
int qla82xx_fcoe_ctx_reset ( scsi_qla_host_t * vha ) ; 
/*--qla82xx_fcoe_ctx_reset--*/
int qla2x00_wait_for_fcoe_ctx_reset ( scsi_qla_host_t * vha ) ; 
/*--qla2x00_wait_for_fcoe_ctx_reset--*/
void qla4xxx_destroy_sess ( struct ddb_entry * ddb_entry ) ; 
/*--qla4xxx_destroy_sess--*/
int qla4xxx_add_sess ( struct ddb_entry * ddb_entry ) ; 
/*--qla4xxx_add_sess--*/
struct ddb_entry * qla4xxx_alloc_sess ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_alloc_sess--*/
void qla4xxx_mark_device_missing ( struct scsi_qla_host * ha , struct ddb_entry * ddb_entry ) ; 
/*--qla4xxx_mark_device_missing--*/
void qla4xxx_srb_compl ( struct kref * ref ) ; 
/*--qla4xxx_srb_compl--*/
void qla4xxx_hw_reset ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_hw_reset--*/
int qla4xxx_soft_reset ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_soft_reset--*/
struct srb * qla4xxx_del_from_active_array ( struct scsi_qla_host * ha , uint32_t index ) ; 
/*--qla4xxx_del_from_active_array--*/
void qla4xxx_free_ddb_list ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_free_ddb_list--*/
int qla4xxx_init_rings ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_init_rings--*/
int qla4_is_relogin_allowed ( struct scsi_qla_host * ha , uint32_t conn_err ) ; 
/*--qla4_is_relogin_allowed--*/
int qla4xxx_reinitialize_ddb_list ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_reinitialize_ddb_list--*/
int qla4xxx_relogin_device ( struct scsi_qla_host * ha , struct ddb_entry * ddb_entry ) ; 
/*--qla4xxx_relogin_device--*/
int ql4xxx_lock_drvr_wait ( struct scsi_qla_host * a ) ; 
/*--ql4xxx_lock_drvr_wait--*/
int qla4xxx_initialize_adapter ( struct scsi_qla_host * ha , uint8_t renew_ddb_list ) ; 
/*--qla4xxx_initialize_adapter--*/
int qla4xxx_process_ddb_changed ( struct scsi_qla_host * ha , uint32_t fw_ddb_index , uint32_t state , uint32_t conn_err ) ; 
/*--qla4xxx_process_ddb_changed--*/
uint8_t qla4xxx_set_ifcb ( struct scsi_qla_host * ha , uint32_t * mbox_cmd , uint32_t * mbox_sts , dma_addr_t init_fw_cb_dma ) ; 
/*--qla4xxx_set_ifcb--*/
uint8_t qla4xxx_get_ifcb ( struct scsi_qla_host * ha , uint32_t * mbox_cmd , uint32_t * mbox_sts , dma_addr_t init_fw_cb_dma ) ; 
/*--qla4xxx_get_ifcb--*/
void qla4xxx_update_local_ip ( struct scsi_qla_host * ha , struct addr_ctrl_blk * init_fw_cb ) ; 
/*--qla4xxx_update_local_ip--*/
uint8_t qla4xxx_update_local_ifcb ( struct scsi_qla_host * ha , uint32_t * mbox_cmd , uint32_t * mbox_sts , struct addr_ctrl_blk * init_fw_cb , dma_addr_t init_fw_cb_dma ) ; 
/*--qla4xxx_update_local_ifcb--*/
int qla4xxx_initialize_fw_cb ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_initialize_fw_cb--*/
int qla4xxx_get_dhcp_ip_address ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_get_dhcp_ip_address--*/
int qla4xxx_get_firmware_state ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_get_firmware_state--*/
int qla4xxx_get_firmware_status ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_get_firmware_status--*/
int qla4xxx_get_fwddb_entry ( struct scsi_qla_host * ha , uint16_t fw_ddb_index , struct dev_db_entry * fw_ddb_entry , dma_addr_t fw_ddb_entry_dma , uint32_t * num_valid_ddb_entries , uint32_t * next_ddb_index , uint32_t * fw_ddb_device_state , uint32_t * conn_err_detail , uint16_t * tcp_source_port_num , uint16_t * connection_id ) ; 
/*--qla4xxx_get_fwddb_entry--*/
int qla4xxx_set_ddb_entry ( struct scsi_qla_host * ha , uint16_t fw_ddb_index , dma_addr_t fw_ddb_entry_dma ) ; 
/*--qla4xxx_set_ddb_entry--*/
void qla4xxx_get_crash_record ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_get_crash_record--*/
void qla4xxx_get_conn_event_log ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_get_conn_event_log--*/
int qla4xxx_abort_task ( struct scsi_qla_host * ha , struct srb * srb ) ; 
/*--qla4xxx_abort_task--*/
int qla4xxx_reset_lun ( struct scsi_qla_host * ha , struct ddb_entry * ddb_entry , int lun ) ; 
/*--qla4xxx_reset_lun--*/
int qla4xxx_reset_target ( struct scsi_qla_host * ha , struct ddb_entry * ddb_entry ) ; 
/*--qla4xxx_reset_target--*/
int qla4xxx_get_flash ( struct scsi_qla_host * ha , dma_addr_t dma_addr , uint32_t offset , uint32_t len ) ; 
/*--qla4xxx_get_flash--*/
int qla4xxx_get_fw_version ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_get_fw_version--*/
int qla4xxx_send_tgts ( struct scsi_qla_host * ha , char * ip , uint16_t port ) ; 
/*--qla4xxx_send_tgts--*/
int qla4xxx_send_marker_iocb ( struct scsi_qla_host * ha , struct ddb_entry * ddb_entry , int lun , uint16_t mrkr_mod ) ; 
/*--qla4xxx_send_marker_iocb--*/
int qla4xxx_send_command_to_isp ( struct scsi_qla_host * ha , struct srb * srb ) ; 
/*--qla4xxx_send_command_to_isp--*/
void qla4xxx_interrupt_service_routine ( struct scsi_qla_host * ha , uint32_t intr_status ) ; 
/*--qla4xxx_interrupt_service_routine--*/
irqreturn_t qla4xxx_intr_handler ( int irq , void * dev_id ) ; 
/*--qla4xxx_intr_handler--*/
void qla4xxx_process_aen ( struct scsi_qla_host * ha , uint8_t process_aen ) ; 
/*--qla4xxx_process_aen--*/
u16 rd_nvram_word ( struct scsi_qla_host * ha , int offset ) ; 
/*--rd_nvram_word--*/
int qla4xxx_is_nvram_configuration_valid ( struct scsi_qla_host * ha ) ; 
/*--qla4xxx_is_nvram_configuration_valid--*/
int ql4xxx_sem_spinlock ( struct scsi_qla_host * ha , u32 sem_mask , u32 sem_bits ) ; 
/*--ql4xxx_sem_spinlock--*/
void ql4xxx_sem_unlock ( struct scsi_qla_host * ha , u32 sem_mask ) ; 
/*--ql4xxx_sem_unlock--*/
int ql4xxx_sem_lock ( struct scsi_qla_host * ha , u32 sem_mask , u32 sem_bits ) ; 
/*--ql4xxx_sem_lock--*/
void qla4xxx_dump_buffer ( void * b , uint32_t size ) ; 
/*--qla4xxx_dump_buffer--*/
struct sym_fw * sym_find_firmware ( struct sym_chip * chip ) ; 
/*--sym_find_firmware--*/
void sym_fw_bind_script ( struct sym_hcb * np , u32 * start , int len ) ; 
/*--sym_fw_bind_script--*/
void sym_xpt_done ( struct sym_hcb * np , struct scsi_cmnd * cmd ) ; 
/*--sym_xpt_done--*/
void sym_xpt_async_bus_reset ( struct sym_hcb * np ) ; 
/*--sym_xpt_async_bus_reset--*/
void sym_set_cam_result_error ( struct sym_hcb * np , struct sym_ccb * cp , int resid ) ; 
/*--sym_set_cam_result_error--*/
int sym_setup_data_and_start ( struct sym_hcb * np , struct scsi_cmnd * cmd , struct sym_ccb * cp ) ; 
/*--sym_setup_data_and_start--*/
void sym_log_bus_error ( struct Scsi_Host * shost ) ; 
/*--sym_log_bus_error--*/
void sym_print_xerr ( struct scsi_cmnd * cmd , int x_status ) ; 
/*--sym_print_xerr--*/
int sym_reset_scsi_bus ( struct sym_hcb * np , int enab_int ) ; 
/*--sym_reset_scsi_bus--*/
void sym_dump_registers ( struct Scsi_Host * shost ) ; 
/*--sym_dump_registers--*/
struct sym_chip * sym_lookup_chip_table ( u_short device_id , u_char revision ) ; 
/*--sym_lookup_chip_table--*/
void sym_put_start_queue ( struct sym_hcb * np , struct sym_ccb * cp ) ; 
/*--sym_put_start_queue--*/
void sym_start_up ( struct Scsi_Host * shost , int reason ) ; 
/*--sym_start_up--*/
irqreturn_t sym_interrupt ( struct Scsi_Host * shost ) ; 
/*--sym_interrupt--*/
int sym_clear_tasks ( struct sym_hcb * np , int cam_status , int target , int lun , int task ) ; 
/*--sym_clear_tasks--*/
int sym_compute_residual ( struct sym_hcb * np , struct sym_ccb * cp ) ; 
/*--sym_compute_residual--*/
struct sym_ccb * sym_get_ccb ( struct sym_hcb * np , struct scsi_cmnd * cmd , u_char tag_order ) ; 
/*--sym_get_ccb--*/
void sym_free_ccb ( struct sym_hcb * np , struct sym_ccb * cp ) ; 
/*--sym_free_ccb--*/
struct sym_lcb * sym_alloc_lcb ( struct sym_hcb * np , u_char tn , u_char ln ) ; 
/*--sym_alloc_lcb--*/
int sym_free_lcb ( struct sym_hcb * np , u_char tn , u_char ln ) ; 
/*--sym_free_lcb--*/
int sym_queue_scsiio ( struct sym_hcb * np , struct scsi_cmnd * cmd , struct sym_ccb * cp ) ; 
/*--sym_queue_scsiio--*/
int sym_reset_scsi_target ( struct sym_hcb * np , int target ) ; 
/*--sym_reset_scsi_target--*/
int sym_abort_scsiio ( struct sym_hcb * np , struct scsi_cmnd * cmd , int timed_out ) ; 
/*--sym_abort_scsiio--*/
void sym_complete_error ( struct sym_hcb * np , struct sym_ccb * cp ) ; 
/*--sym_complete_error--*/
void sym_complete_ok ( struct sym_hcb * np , struct sym_ccb * cp ) ; 
/*--sym_complete_ok--*/
int sym_hcb_attach ( struct Scsi_Host * shost , struct sym_fw * fw , struct sym_nvram * nvram ) ; 
/*--sym_hcb_attach--*/
void sym_hcb_free ( struct sym_hcb * np ) ; 
/*--sym_hcb_free--*/
void * __sym_calloc_dma ( m_pool_ident_t dev_dmat , int size , char * name ) ; 
/*--__sym_calloc_dma--*/
void __sym_mfree_dma ( m_pool_ident_t dev_dmat , void * m , int size , char * name ) ; 
/*--__sym_mfree_dma--*/
dma_addr_t __vtobus ( m_pool_ident_t dev_dmat , void * m ) ; 
/*--__vtobus--*/
void sym_nvram_setup_host ( struct Scsi_Host * shost , struct sym_hcb * np , struct sym_nvram * nvram ) ; 
/*--sym_nvram_setup_host--*/
void sym_nvram_setup_target ( struct sym_tcb * tp , int target , struct sym_nvram * nvp ) ; 
/*--sym_nvram_setup_target--*/
int sym_read_nvram ( struct sym_device * np , struct sym_nvram * nvp ) ; 
/*--sym_read_nvram--*/
char * sym_nvram_type ( struct sym_nvram * nvp ) ; 
/*--sym_nvram_type--*/
struct scsi_cmnd * scsi_host_get_command ( struct Scsi_Host * shost , enum dma_data_direction data_dir , gfp_t gfp_mask ) ; 
/*--scsi_host_get_command--*/
void scsi_host_put_command ( struct Scsi_Host * shost , struct scsi_cmnd * cmd ) ; 
/*--scsi_host_put_command--*/
int scsi_tgt_alloc_queue ( struct Scsi_Host * shost ) ; 
/*--scsi_tgt_alloc_queue--*/
void scsi_tgt_free_queue ( struct Scsi_Host * shost ) ; 
/*--scsi_tgt_free_queue--*/
struct Scsi_Host * scsi_tgt_cmd_to_host ( struct scsi_cmnd * cmd ) ; 
/*--scsi_tgt_cmd_to_host--*/
int scsi_tgt_queue_command ( struct scsi_cmnd * cmd , u64 itn_id , struct scsi_lun * scsilun , u64 tag ) ; 
/*--scsi_tgt_queue_command--*/
int scsi_tgt_kspace_exec ( int host_no , u64 itn_id , int result , u64 tag , unsigned long uaddr , u32 len , unsigned long sense_uaddr , u32 sense_len , u8 rw ) ; 
/*--scsi_tgt_kspace_exec--*/
int scsi_tgt_tsk_mgmt_request ( struct Scsi_Host * shost , u64 itn_id , int function , u64 tag , struct scsi_lun * scsilun , void * data ) ; 
/*--scsi_tgt_tsk_mgmt_request--*/
int scsi_tgt_kspace_tsk_mgmt ( int host_no , u64 itn_id , u64 mid , int result ) ; 
/*--scsi_tgt_kspace_tsk_mgmt--*/
int scsi_tgt_it_nexus_create ( struct Scsi_Host * shost , u64 itn_id , char * initiator ) ; 
/*--scsi_tgt_it_nexus_create--*/
int scsi_tgt_it_nexus_destroy ( struct Scsi_Host * shost , u64 itn_id ) ; 
/*--scsi_tgt_it_nexus_destroy--*/
int scsi_tgt_kspace_it_nexus_rsp ( int host_no , u64 itn_id , int result ) ; 
/*--scsi_tgt_kspace_it_nexus_rsp--*/
int scsi_tgt_uspace_send_cmd ( struct scsi_cmnd * cmd , u64 itn_id , struct scsi_lun * lun , u64 tag ) ; 
/*--scsi_tgt_uspace_send_cmd--*/
int scsi_tgt_uspace_send_status ( struct scsi_cmnd * cmd , u64 itn_id , u64 tag ) ; 
/*--scsi_tgt_uspace_send_status--*/
int scsi_tgt_uspace_send_tsk_mgmt ( int host_no , u64 itn_id , int function , u64 tag , struct scsi_lun * scsilun , void * data ) ; 
/*--scsi_tgt_uspace_send_tsk_mgmt--*/
int scsi_tgt_uspace_send_it_nexus_request ( int host_no , u64 itn_id , int function , char * initiator_id ) ; 
/*--scsi_tgt_uspace_send_it_nexus_request--*/
void scsi_tgt_if_exit ( void ) ; 
/*--scsi_tgt_if_exit--*/
int scsi_tgt_if_init ( void ) ; 
/*--scsi_tgt_if_init--*/
int raid_component_add ( struct raid_template * r , struct device * raid_dev , struct device * component_dev ) ; 
/*--raid_component_add--*/
struct raid_template * raid_class_attach ( struct raid_function_template * ft ) ; 
/*--raid_class_attach--*/
void raid_class_release ( struct raid_template * r ) ; 
/*--raid_class_release--*/
void spi_dv_device ( struct scsi_device * sdev ) ; 
/*--spi_dv_device--*/
void spi_schedule_dv_device ( struct scsi_device * sdev ) ; 
/*--spi_schedule_dv_device--*/
void spi_display_xfer_agreement ( struct scsi_target * starget ) ; 
/*--spi_display_xfer_agreement--*/
int spi_populate_width_msg ( unsigned char * msg , int width ) ; 
/*--spi_populate_width_msg--*/
int spi_populate_sync_msg ( unsigned char * msg , int period , int offset ) ; 
/*--spi_populate_sync_msg--*/
int spi_populate_ppr_msg ( unsigned char * msg , int period , int offset , int width , int options ) ; 
/*--spi_populate_ppr_msg--*/
int spi_print_msg ( const unsigned char * msg ) ; 
/*--spi_print_msg--*/
struct scsi_transport_template * spi_attach_transport ( struct spi_function_template * ft ) ; 
/*--spi_attach_transport--*/
void spi_release_transport ( struct scsi_transport_template * t ) ; 
/*--spi_release_transport--*/
u32 fc_get_event_number ( void ) ; 
/*--fc_get_event_number--*/
void fc_host_post_event ( struct Scsi_Host * shost , u32 event_number , enum fc_host_event_code event_code , u32 event_data ) ; 
/*--fc_host_post_event--*/
void fc_host_post_vendor_event ( struct Scsi_Host * shost , u32 event_number , u32 data_len , char * data_buf , u64 vendor_id ) ; 
/*--fc_host_post_vendor_event--*/
int scsi_is_fc_rport ( const struct device * dev ) ; 
/*--scsi_is_fc_rport--*/
int scsi_is_fc_vport ( const struct device * dev ) ; 
/*--scsi_is_fc_vport--*/
struct scsi_transport_template * fc_attach_transport ( struct fc_function_template * ft ) ; 
/*--fc_attach_transport--*/
void fc_release_transport ( struct scsi_transport_template * t ) ; 
/*--fc_release_transport--*/
void fc_remove_host ( struct Scsi_Host * shost ) ; 
/*--fc_remove_host--*/
struct fc_rport * fc_remote_port_add ( struct Scsi_Host * shost , int channel , struct fc_rport_identifiers * ids ) ; 
/*--fc_remote_port_add--*/
void fc_remote_port_delete ( struct fc_rport * rport ) ; 
/*--fc_remote_port_delete--*/
void fc_remote_port_rolechg ( struct fc_rport * rport , u32 roles ) ; 
/*--fc_remote_port_rolechg--*/
int fc_block_scsi_eh ( struct scsi_cmnd * cmnd ) ; 
/*--fc_block_scsi_eh--*/
struct fc_vport * fc_vport_create ( struct Scsi_Host * shost , int channel , struct fc_vport_identifiers * ids ) ; 
/*--fc_vport_create--*/
int fc_vport_terminate ( struct fc_vport * vport ) ; 
/*--fc_vport_terminate--*/
struct iscsi_endpoint * iscsi_create_endpoint ( int dd_size ) ; 
/*--iscsi_create_endpoint--*/
void iscsi_destroy_endpoint ( struct iscsi_endpoint * ep ) ; 
/*--iscsi_destroy_endpoint--*/
struct iscsi_endpoint * iscsi_lookup_endpoint ( u64 handle ) ; 
/*--iscsi_lookup_endpoint--*/
int iscsi_session_chkready ( struct iscsi_cls_session * session ) ; 
/*--iscsi_session_chkready--*/
void iscsi_host_for_each_session ( struct Scsi_Host * shost , void ( * fn ) ( struct iscsi_cls_session * ) ) ; 
/*--iscsi_host_for_each_session--*/
int iscsi_scan_finished ( struct Scsi_Host * shost , unsigned long time ) ; 
/*--iscsi_scan_finished--*/
void iscsi_unblock_session ( struct iscsi_cls_session * session ) ; 
/*--iscsi_unblock_session--*/
void iscsi_block_session ( struct iscsi_cls_session * session ) ; 
/*--iscsi_block_session--*/
struct iscsi_cls_session * iscsi_alloc_session ( struct Scsi_Host * shost , struct iscsi_transport * transport , int dd_size ) ; 
/*--iscsi_alloc_session--*/
int iscsi_add_session ( struct iscsi_cls_session * session , unsigned int target_id ) ; 
/*--iscsi_add_session--*/
struct iscsi_cls_session * iscsi_create_session ( struct Scsi_Host * shost , struct iscsi_transport * transport , int dd_size , unsigned int target_id ) ; 
/*--iscsi_create_session--*/
void iscsi_remove_session ( struct iscsi_cls_session * session ) ; 
/*--iscsi_remove_session--*/
void iscsi_free_session ( struct iscsi_cls_session * session ) ; 
/*--iscsi_free_session--*/
int iscsi_destroy_session ( struct iscsi_cls_session * session ) ; 
/*--iscsi_destroy_session--*/
struct iscsi_cls_conn * iscsi_create_conn ( struct iscsi_cls_session * session , int dd_size , uint32_t cid ) ; 
/*--iscsi_create_conn--*/
int iscsi_destroy_conn ( struct iscsi_cls_conn * conn ) ; 
/*--iscsi_destroy_conn--*/
int iscsi_recv_pdu ( struct iscsi_cls_conn * conn , struct iscsi_hdr * hdr , char * data , uint32_t data_size ) ; 
/*--iscsi_recv_pdu--*/
int iscsi_offload_mesg ( struct Scsi_Host * shost , struct iscsi_transport * transport , uint32_t type , char * data , uint16_t data_size ) ; 
/*--iscsi_offload_mesg--*/
void iscsi_conn_error_event ( struct iscsi_cls_conn * conn , enum iscsi_err error ) ; 
/*--iscsi_conn_error_event--*/
int iscsi_session_event ( struct iscsi_cls_session * session , enum iscsi_uevent_e event ) ; 
/*--iscsi_session_event--*/
struct scsi_transport_template * iscsi_register_transport ( struct iscsi_transport * tt ) ; 
/*--iscsi_register_transport--*/
int iscsi_unregister_transport ( struct iscsi_transport * tt ) ; 
/*--iscsi_unregister_transport--*/
void sas_remove_children ( struct device * dev ) ; 
/*--sas_remove_children--*/
void sas_remove_host ( struct Scsi_Host * shost ) ; 
/*--sas_remove_host--*/
unsigned int sas_tlr_supported ( struct scsi_device * sdev ) ; 
/*--sas_tlr_supported--*/
void sas_disable_tlr ( struct scsi_device * sdev ) ; 
/*--sas_disable_tlr--*/
void sas_enable_tlr ( struct scsi_device * sdev ) ; 
/*--sas_enable_tlr--*/
unsigned int sas_is_tlr_enabled ( struct scsi_device * sdev ) ; 
/*--sas_is_tlr_enabled--*/
struct sas_phy * sas_phy_alloc ( struct device * parent , int number ) ; 
/*--sas_phy_alloc--*/
int sas_phy_add ( struct sas_phy * phy ) ; 
/*--sas_phy_add--*/
void sas_phy_free ( struct sas_phy * phy ) ; 
/*--sas_phy_free--*/
void sas_phy_delete ( struct sas_phy * phy ) ; 
/*--sas_phy_delete--*/
int scsi_is_sas_phy ( const struct device * dev ) ; 
/*--scsi_is_sas_phy--*/
struct sas_port * sas_port_alloc ( struct device * parent , int port_id ) ; 
/*--sas_port_alloc--*/
struct sas_port * sas_port_alloc_num ( struct device * parent ) ; 
/*--sas_port_alloc_num--*/
int sas_port_add ( struct sas_port * port ) ; 
/*--sas_port_add--*/
void sas_port_free ( struct sas_port * port ) ; 
/*--sas_port_free--*/
void sas_port_delete ( struct sas_port * port ) ; 
/*--sas_port_delete--*/
int scsi_is_sas_port ( const struct device * dev ) ; 
/*--scsi_is_sas_port--*/
void sas_port_add_phy ( struct sas_port * port , struct sas_phy * phy ) ; 
/*--sas_port_add_phy--*/
void sas_port_delete_phy ( struct sas_port * port , struct sas_phy * phy ) ; 
/*--sas_port_delete_phy--*/
void sas_port_mark_backlink ( struct sas_port * port ) ; 
/*--sas_port_mark_backlink--*/
int sas_read_port_mode_page ( struct scsi_device * sdev ) ; 
/*--sas_read_port_mode_page--*/
struct sas_rphy * sas_end_device_alloc ( struct sas_port * parent ) ; 
/*--sas_end_device_alloc--*/
struct sas_rphy * sas_expander_alloc ( struct sas_port * parent , enum sas_device_type type ) ; 
/*--sas_expander_alloc--*/
int sas_rphy_add ( struct sas_rphy * rphy ) ; 
/*--sas_rphy_add--*/
void sas_rphy_free ( struct sas_rphy * rphy ) ; 
/*--sas_rphy_free--*/
void sas_rphy_delete ( struct sas_rphy * rphy ) ; 
/*--sas_rphy_delete--*/
void sas_rphy_remove ( struct sas_rphy * rphy ) ; 
/*--sas_rphy_remove--*/
int scsi_is_sas_rphy ( const struct device * dev ) ; 
/*--scsi_is_sas_rphy--*/
struct scsi_transport_template * sas_attach_transport ( struct sas_function_template * ft ) ; 
/*--sas_attach_transport--*/
void sas_release_transport ( struct scsi_transport_template * t ) ; 
/*--sas_release_transport--*/
struct srp_rport * srp_rport_add ( struct Scsi_Host * shost , struct srp_rport_identifiers * ids ) ; 
/*--srp_rport_add--*/
void srp_rport_del ( struct srp_rport * rport ) ; 
/*--srp_rport_del--*/
void srp_remove_host ( struct Scsi_Host * shost ) ; 
/*--srp_remove_host--*/
struct scsi_transport_template * srp_attach_transport ( struct srp_function_template * ft ) ; 
/*--srp_attach_transport--*/
void srp_release_transport ( struct scsi_transport_template * t ) ; 
/*--srp_release_transport--*/
void iscsi_update_cmdsn ( struct iscsi_session * session , struct iscsi_nopin * hdr ) ; 
/*--iscsi_update_cmdsn--*/
void iscsi_prep_data_out_pdu ( struct iscsi_task * task , struct iscsi_r2t_info * r2t , struct iscsi_data * hdr ) ; 
/*--iscsi_prep_data_out_pdu--*/
void __iscsi_get_task ( struct iscsi_task * task ) ; 
/*--__iscsi_get_task--*/
void iscsi_put_task ( struct iscsi_task * task ) ; 
/*--iscsi_put_task--*/
void iscsi_complete_scsi_task ( struct iscsi_task * task , uint32_t exp_cmdsn , uint32_t max_cmdsn ) ; 
/*--iscsi_complete_scsi_task--*/
int iscsi_conn_send_pdu ( struct iscsi_cls_conn * cls_conn , struct iscsi_hdr * hdr , char * data , uint32_t data_size ) ; 
/*--iscsi_conn_send_pdu--*/
struct iscsi_task * iscsi_itt_to_task ( struct iscsi_conn * conn , itt_t itt ) ; 
/*--iscsi_itt_to_task--*/
int __iscsi_complete_pdu ( struct iscsi_conn * conn , struct iscsi_hdr * hdr , char * data , int datalen ) ; 
/*--__iscsi_complete_pdu--*/
int iscsi_complete_pdu ( struct iscsi_conn * conn , struct iscsi_hdr * hdr , char * data , int datalen ) ; 
/*--iscsi_complete_pdu--*/
int iscsi_verify_itt ( struct iscsi_conn * conn , itt_t itt ) ; 
/*--iscsi_verify_itt--*/
struct iscsi_task * iscsi_itt_to_ctask ( struct iscsi_conn * conn , itt_t itt ) ; 
/*--iscsi_itt_to_ctask--*/
void iscsi_session_failure ( struct iscsi_session * session , enum iscsi_err err ) ; 
/*--iscsi_session_failure--*/
void iscsi_conn_failure ( struct iscsi_conn * conn , enum iscsi_err err ) ; 
/*--iscsi_conn_failure--*/
void iscsi_requeue_task ( struct iscsi_task * task ) ; 
/*--iscsi_requeue_task--*/
int iscsi_queuecommand ( struct scsi_cmnd * sc , void ( * done ) ( struct scsi_cmnd * ) ) ; 
/*--iscsi_queuecommand--*/
int iscsi_change_queue_depth ( struct scsi_device * sdev , int depth , int reason ) ; 
/*--iscsi_change_queue_depth--*/
int iscsi_target_alloc ( struct scsi_target * starget ) ; 
/*--iscsi_target_alloc--*/
void iscsi_suspend_queue ( struct iscsi_conn * conn ) ; 
/*--iscsi_suspend_queue--*/
void iscsi_suspend_tx ( struct iscsi_conn * conn ) ; 
/*--iscsi_suspend_tx--*/
int iscsi_eh_abort ( struct scsi_cmnd * sc ) ; 
/*--iscsi_eh_abort--*/
int iscsi_eh_device_reset ( struct scsi_cmnd * sc ) ; 
/*--iscsi_eh_device_reset--*/
void iscsi_session_recovery_timedout ( struct iscsi_cls_session * cls_session ) ; 
/*--iscsi_session_recovery_timedout--*/
int iscsi_eh_session_reset ( struct scsi_cmnd * sc ) ; 
/*--iscsi_eh_session_reset--*/
int iscsi_eh_target_reset ( struct scsi_cmnd * sc ) ; 
/*--iscsi_eh_target_reset--*/
int iscsi_eh_recover_target ( struct scsi_cmnd * sc ) ; 
/*--iscsi_eh_recover_target--*/
int iscsi_pool_init ( struct iscsi_pool * q , int max , void * * * items , int item_size ) ; 
/*--iscsi_pool_init--*/
void iscsi_pool_free ( struct iscsi_pool * q ) ; 
/*--iscsi_pool_free--*/
int iscsi_host_add ( struct Scsi_Host * shost , struct device * pdev ) ; 
/*--iscsi_host_add--*/
struct Scsi_Host * iscsi_host_alloc ( struct scsi_host_template * sht , int dd_data_size , bool xmit_can_sleep ) ; 
/*--iscsi_host_alloc--*/
void iscsi_host_remove ( struct Scsi_Host * shost ) ; 
/*--iscsi_host_remove--*/
void iscsi_host_free ( struct Scsi_Host * shost ) ; 
/*--iscsi_host_free--*/
struct iscsi_cls_session * iscsi_session_setup ( struct iscsi_transport * iscsit , struct Scsi_Host * shost , uint16_t cmds_max , int dd_size , int cmd_task_size , uint32_t initial_cmdsn , unsigned int id ) ; 
/*--iscsi_session_setup--*/
void iscsi_session_teardown ( struct iscsi_cls_session * cls_session ) ; 
/*--iscsi_session_teardown--*/
struct iscsi_cls_conn * iscsi_conn_setup ( struct iscsi_cls_session * cls_session , int dd_size , uint32_t conn_idx ) ; 
/*--iscsi_conn_setup--*/
void iscsi_conn_teardown ( struct iscsi_cls_conn * cls_conn ) ; 
/*--iscsi_conn_teardown--*/
int iscsi_conn_start ( struct iscsi_cls_conn * cls_conn ) ; 
/*--iscsi_conn_start--*/
void iscsi_conn_stop ( struct iscsi_cls_conn * cls_conn , int flag ) ; 
/*--iscsi_conn_stop--*/
int iscsi_conn_bind ( struct iscsi_cls_session * cls_session , struct iscsi_cls_conn * cls_conn , int is_leading ) ; 
/*--iscsi_conn_bind--*/
int iscsi_set_param ( struct iscsi_cls_conn * cls_conn , enum iscsi_param param , char * buf , int buflen ) ; 
/*--iscsi_set_param--*/
int iscsi_session_get_param ( struct iscsi_cls_session * cls_session , enum iscsi_param param , char * buf ) ; 
/*--iscsi_session_get_param--*/
int iscsi_conn_get_param ( struct iscsi_cls_conn * cls_conn , enum iscsi_param param , char * buf ) ; 
/*--iscsi_conn_get_param--*/
int iscsi_host_get_param ( struct Scsi_Host * shost , enum iscsi_host_param param , char * buf ) ; 
/*--iscsi_host_get_param--*/
int iscsi_host_set_param ( struct Scsi_Host * shost , enum iscsi_host_param param , char * buf , int buflen ) ; 
/*--iscsi_host_set_param--*/
void iscsi_tcp_segment_unmap ( struct iscsi_segment * segment ) ; 
/*--iscsi_tcp_segment_unmap--*/
int iscsi_tcp_segment_done ( struct iscsi_tcp_conn * tcp_conn , struct iscsi_segment * segment , int recv , unsigned copied ) ; 
/*--iscsi_tcp_segment_done--*/
void iscsi_tcp_hdr_recv_prep ( struct iscsi_tcp_conn * tcp_conn ) ; 
/*--iscsi_tcp_hdr_recv_prep--*/
void iscsi_tcp_cleanup_task ( struct iscsi_task * task ) ; 
/*--iscsi_tcp_cleanup_task--*/
int iscsi_tcp_recv_skb ( struct iscsi_conn * conn , struct sk_buff * skb , unsigned int offset , bool offloaded , int * status ) ; 
/*--iscsi_tcp_recv_skb--*/
int iscsi_tcp_task_init ( struct iscsi_task * task ) ; 
/*--iscsi_tcp_task_init--*/
int iscsi_tcp_task_xmit ( struct iscsi_task * task ) ; 
/*--iscsi_tcp_task_xmit--*/
struct iscsi_cls_conn * iscsi_tcp_conn_setup ( struct iscsi_cls_session * cls_session , int dd_data_size , uint32_t conn_idx ) ; 
/*--iscsi_tcp_conn_setup--*/
void iscsi_tcp_conn_teardown ( struct iscsi_cls_conn * cls_conn ) ; 
/*--iscsi_tcp_conn_teardown--*/
int iscsi_tcp_r2tpool_alloc ( struct iscsi_session * session ) ; 
/*--iscsi_tcp_r2tpool_alloc--*/
void iscsi_tcp_r2tpool_free ( struct iscsi_session * session ) ; 
/*--iscsi_tcp_r2tpool_free--*/
void iscsi_tcp_conn_get_stats ( struct iscsi_cls_conn * cls_conn , struct iscsi_stats * stats ) ; 
/*--iscsi_tcp_conn_get_stats--*/
int ips_eh_abort ( struct scsi_cmnd * SC ) ; 
/*--ips_eh_abort--*/
int ips_intr_copperhead ( ips_ha_t * ha ) ; 
/*--ips_intr_copperhead--*/
int ips_intr_morpheus ( ips_ha_t * ha ) ; 
/*--ips_intr_morpheus--*/
irqreturn_t qlogicfas408_ihandl ( int irq , void * dev_id ) ; 
/*--qlogicfas408_ihandl--*/
int qlogicfas408_queuecommand ( struct scsi_cmnd * cmd , void ( * done ) ( struct scsi_cmnd * ) ) ; 
/*--qlogicfas408_queuecommand--*/
int qlogicfas408_biosparam ( struct scsi_device * disk , struct block_device * dev , sector_t capacity , int ip [ ] ) ; 
/*--qlogicfas408_biosparam--*/
int qlogicfas408_abort ( struct scsi_cmnd * cmd ) ; 
/*--qlogicfas408_abort--*/
int qlogicfas408_bus_reset ( struct scsi_cmnd * cmd ) ; 
/*--qlogicfas408_bus_reset--*/
const char * qlogicfas408_info ( struct Scsi_Host * host ) ; 
/*--qlogicfas408_info--*/
int qlogicfas408_get_chip_type ( int qbase , int int_type ) ; 
/*--qlogicfas408_get_chip_type--*/
void qlogicfas408_setup ( int qbase , int id , int int_type ) ; 
/*--qlogicfas408_setup--*/
int qlogicfas408_detect ( int qbase , int int_type ) ; 
/*--qlogicfas408_detect--*/
void qlogicfas408_disable_ints ( struct qlogicfas408_priv * priv ) ; 
/*--qlogicfas408_disable_ints--*/
int eata2x_bios_param ( struct scsi_device * sdev , struct block_device * bdev , sector_t capacity , int * dkinfo ) ; 
/*--eata2x_bios_param--*/
const char * megaraid_info ( struct Scsi_Host * host ) ; 
/*--megaraid_info--*/
int gdth_proc_info ( struct Scsi_Host * host , char * buffer , char * * start , off_t offset , int length , int inout ) ; 
/*--gdth_proc_info--*/
int __gdth_execute ( struct scsi_device * sdev , gdth_cmd_str * gdtcmd , char * cmnd , int timeout , u32 * info ) ; 
/*--__gdth_execute--*/
int gdth_execute ( struct Scsi_Host * shost , gdth_cmd_str * gdtcmd , char * cmnd , int timeout , u32 * info ) ; 
/*--gdth_execute--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) option_setup ( char * str ) ; 
/*--option_setup--*/
void initio_se2_ew_en ( unsigned long base ) ; 
/*--initio_se2_ew_en--*/
void initio_se2_ew_ds ( unsigned long base ) ; 
/*--initio_se2_ew_ds--*/
struct scsi_ctrl_blk * initio_find_busy_scb ( struct initio_host * host , u16 tarlun ) ; 
/*--initio_find_busy_scb--*/
struct scsi_ctrl_blk * initio_find_done_scb ( struct initio_host * host ) ; 
/*--initio_find_done_scb--*/
int initio_state_7 ( struct initio_host * host ) ; 
/*--initio_state_7--*/
int initio_xpad_in ( struct initio_host * host ) ; 
/*--initio_xpad_in--*/
int initio_xpad_out ( struct initio_host * host ) ; 
/*--initio_xpad_out--*/
int initio_status_msg ( struct initio_host * host ) ; 
/*--initio_status_msg--*/
int int_initio_busfree ( struct initio_host * host ) ; 
/*--int_initio_busfree--*/
int int_initio_resel ( struct initio_host * host ) ; 
/*--int_initio_resel--*/
int initio_bus_device_reset ( struct initio_host * host ) ; 
/*--initio_bus_device_reset--*/
int srp_target_alloc ( struct srp_target * target , struct device * dev , size_t nr , size_t iu_size ) ; 
/*--srp_target_alloc--*/
void srp_target_free ( struct srp_target * target ) ; 
/*--srp_target_free--*/
struct iu_entry * srp_iu_get ( struct srp_target * target ) ; 
/*--srp_iu_get--*/
void srp_iu_put ( struct iu_entry * iue ) ; 
/*--srp_iu_put--*/
int srp_transfer_data ( struct scsi_cmnd * sc , struct srp_cmd * cmd , srp_rdma_t rdma_io , int dma_map , int ext_desc ) ; 
/*--srp_transfer_data--*/
int srp_cmd_queue ( struct Scsi_Host * shost , struct srp_cmd * cmd , void * info , u64 itn_id , u64 addr ) ; 
/*--srp_cmd_queue--*/
void hptiop_iop_request_callback_itl ( struct hptiop_hba * hba , u32 tag ) ; 
/*--hptiop_iop_request_callback_itl--*/
void pmcraid_init_cmdblk ( struct pmcraid_cmd * cmd , int index ) ; 
/*--pmcraid_init_cmdblk--*/
void pmcraid_return_cmd ( struct pmcraid_cmd * cmd ) ; 
/*--pmcraid_return_cmd--*/
void pmcraid_ioasc_logger ( u32 ioasc , struct pmcraid_cmd * cmd ) ; 
/*--pmcraid_ioasc_logger--*/
struct pmcraid_ioadl_desc * pmcraid_init_ioadls ( struct pmcraid_cmd * cmd , int sgcount ) ; 
/*--pmcraid_init_ioadls--*/
void pmcraid_tasklet_function ( unsigned long instance ) ; 
/*--pmcraid_tasklet_function--*/
void dump_sector ( unsigned char * buf , int len ) ; 
/*--dump_sector--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) jsm_tty_init ( struct jsm_board * brd ) ; 
/*--jsm_tty_init--*/
int jsm_uart_port_init ( struct jsm_board * brd ) ; 
/*--jsm_uart_port_init--*/
int jsm_remove_uart_port ( struct jsm_board * brd ) ; 
/*--jsm_remove_uart_port--*/
void jsm_input ( struct jsm_channel * ch ) ; 
/*--jsm_input--*/
void jsm_check_queue_flow_control ( struct jsm_channel * ch ) ; 
/*--jsm_check_queue_flow_control--*/
int jsm_tty_write ( struct uart_port * port ) ; 
/*--jsm_tty_write--*/
int spi_bitbang_setup_transfer ( struct spi_device * spi , struct spi_transfer * t ) ; 
/*--spi_bitbang_setup_transfer--*/
int spi_bitbang_setup ( struct spi_device * spi ) ; 
/*--spi_bitbang_setup--*/
void spi_bitbang_cleanup ( struct spi_device * spi ) ; 
/*--spi_bitbang_cleanup--*/
int spi_bitbang_transfer ( struct spi_device * spi , struct spi_message * m ) ; 
/*--spi_bitbang_transfer--*/
int spi_bitbang_start ( struct spi_bitbang * bitbang ) ; 
/*--spi_bitbang_start--*/
int spi_bitbang_stop ( struct spi_bitbang * bitbang ) ; 
/*--spi_bitbang_stop--*/
struct ssb_bus * ssb_pci_dev_to_bus ( struct pci_dev * pdev ) ; 
/*--ssb_pci_dev_to_bus--*/
struct ssb_bus * ssb_sdio_func_to_bus ( struct sdio_func * func ) ; 
/*--ssb_sdio_func_to_bus--*/
int ssb_for_each_bus_call ( unsigned long data , int ( * func ) ( struct ssb_bus * bus , unsigned long data ) ) ; 
/*--ssb_for_each_bus_call--*/
int ssb_bus_resume ( struct ssb_bus * bus ) ; 
/*--ssb_bus_resume--*/
int ssb_bus_suspend ( struct ssb_bus * bus ) ; 
/*--ssb_bus_suspend--*/
int ssb_devices_freeze ( struct ssb_bus * bus , struct ssb_freeze_context * ctx ) ; 
/*--ssb_devices_freeze--*/
int ssb_devices_thaw ( struct ssb_freeze_context * ctx ) ; 
/*--ssb_devices_thaw--*/
void ssb_bus_unregister ( struct ssb_bus * bus ) ; 
/*--ssb_bus_unregister--*/
int ssb_bus_pcibus_register ( struct ssb_bus * bus , struct pci_dev * host_pci ) ; 
/*--ssb_bus_pcibus_register--*/
int ssb_bus_sdiobus_register ( struct ssb_bus * bus , struct sdio_func * func , unsigned int quirks ) ; 
/*--ssb_bus_sdiobus_register--*/
int ssb_bus_ssbbus_register ( struct ssb_bus * bus , unsigned long baseaddr , ssb_invariants_func_t get_invariants ) ; 
/*--ssb_bus_ssbbus_register--*/
int __ssb_driver_register ( struct ssb_driver * drv , struct module * owner ) ; 
/*--__ssb_driver_register--*/
void ssb_driver_unregister ( struct ssb_driver * drv ) ; 
/*--ssb_driver_unregister--*/
void ssb_set_devtypedata ( struct ssb_device * dev , void * data ) ; 
/*--ssb_set_devtypedata--*/
u32 ssb_calc_clock_rate ( u32 plltype , u32 n , u32 m ) ; 
/*--ssb_calc_clock_rate--*/
u32 ssb_clockspeed ( struct ssb_bus * bus ) ; 
/*--ssb_clockspeed--*/
int ssb_device_is_enabled ( struct ssb_device * dev ) ; 
/*--ssb_device_is_enabled--*/
void ssb_device_enable ( struct ssb_device * dev , u32 core_specific_flags ) ; 
/*--ssb_device_enable--*/
void ssb_device_disable ( struct ssb_device * dev , u32 core_specific_flags ) ; 
/*--ssb_device_disable--*/
u32 ssb_dma_translation ( struct ssb_device * dev ) ; 
/*--ssb_dma_translation--*/
int ssb_dma_set_mask ( struct ssb_device * dev , u64 mask ) ; 
/*--ssb_dma_set_mask--*/
void * ssb_dma_alloc_consistent ( struct ssb_device * dev , size_t size , dma_addr_t * dma_handle , gfp_t gfp_flags ) ; 
/*--ssb_dma_alloc_consistent--*/
void ssb_dma_free_consistent ( struct ssb_device * dev , size_t size , void * vaddr , dma_addr_t dma_handle , gfp_t gfp_flags ) ; 
/*--ssb_dma_free_consistent--*/
int ssb_bus_may_powerdown ( struct ssb_bus * bus ) ; 
/*--ssb_bus_may_powerdown--*/
int ssb_bus_powerup ( struct ssb_bus * bus , bool dynamic_pctl ) ; 
/*--ssb_bus_powerup--*/
u32 ssb_admatch_base ( u32 adm ) ; 
/*--ssb_admatch_base--*/
u32 ssb_admatch_size ( u32 adm ) ; 
/*--ssb_admatch_size--*/
const char * ssb_core_name ( u16 coreid ) ; 
/*--ssb_core_name--*/
void ssb_iounmap ( struct ssb_bus * bus ) ; 
/*--ssb_iounmap--*/
int ssb_bus_scan ( struct ssb_bus * bus , unsigned long baseaddr ) ; 
/*--ssb_bus_scan--*/
ssize_t ssb_attr_sprom_show ( struct ssb_bus * bus , char * buf , int ( * sprom_read ) ( struct ssb_bus * bus , u16 * sprom ) ) ; 
/*--ssb_attr_sprom_show--*/
ssize_t ssb_attr_sprom_store ( struct ssb_bus * bus , const char * buf , size_t count , int ( * sprom_check_crc ) ( const u16 * sprom , size_t size ) , int ( * sprom_write ) ( struct ssb_bus * bus , const u16 * sprom ) ) ; 
/*--ssb_attr_sprom_store--*/
int ssb_arch_set_fallback_sprom ( const struct ssb_sprom * sprom ) ; 
/*--ssb_arch_set_fallback_sprom--*/
const struct ssb_sprom * ssb_get_fallback_sprom ( void ) ; 
/*--ssb_get_fallback_sprom--*/
bool ssb_is_sprom_available ( struct ssb_bus * bus ) ; 
/*--ssb_is_sprom_available--*/
int ssb_pci_switch_coreidx ( struct ssb_bus * bus , u8 coreidx ) ; 
/*--ssb_pci_switch_coreidx--*/
int ssb_pci_switch_core ( struct ssb_bus * bus , struct ssb_device * dev ) ; 
/*--ssb_pci_switch_core--*/
int ssb_pci_xtal ( struct ssb_bus * bus , u32 what , int turn_on ) ; 
/*--ssb_pci_xtal--*/
int ssb_pci_get_invariants ( struct ssb_bus * bus , struct ssb_init_invariants * iv ) ; 
/*--ssb_pci_get_invariants--*/
void ssb_pci_exit ( struct ssb_bus * bus ) ; 
/*--ssb_pci_exit--*/
int ssb_pci_init ( struct ssb_bus * bus ) ; 
/*--ssb_pci_init--*/
int ssb_pcihost_register ( struct pci_driver * driver ) ; 
/*--ssb_pcihost_register--*/
u32 ssb_sdio_scan_read32 ( struct ssb_bus * bus , u16 offset ) ; 
/*--ssb_sdio_scan_read32--*/
int ssb_sdio_scan_switch_coreidx ( struct ssb_bus * bus , u8 coreidx ) ; 
/*--ssb_sdio_scan_switch_coreidx--*/
int ssb_sdio_switch_core ( struct ssb_bus * bus , struct ssb_device * dev ) ; 
/*--ssb_sdio_switch_core--*/
int ssb_sdio_get_invariants ( struct ssb_bus * bus , struct ssb_init_invariants * iv ) ; 
/*--ssb_sdio_get_invariants--*/
void ssb_sdio_exit ( struct ssb_bus * bus ) ; 
/*--ssb_sdio_exit--*/
int ssb_sdio_init ( struct ssb_bus * bus ) ; 
/*--ssb_sdio_init--*/
void ssb_chipco_set_clockmode ( struct ssb_chipcommon * cc , enum ssb_clkmode mode ) ; 
/*--ssb_chipco_set_clockmode--*/
void ssb_chipcommon_init ( struct ssb_chipcommon * cc ) ; 
/*--ssb_chipcommon_init--*/
void ssb_chipco_suspend ( struct ssb_chipcommon * cc ) ; 
/*--ssb_chipco_suspend--*/
void ssb_chipco_resume ( struct ssb_chipcommon * cc ) ; 
/*--ssb_chipco_resume--*/
void ssb_chipco_get_clockcpu ( struct ssb_chipcommon * cc , u32 * plltype , u32 * n , u32 * m ) ; 
/*--ssb_chipco_get_clockcpu--*/
void ssb_chipco_get_clockcontrol ( struct ssb_chipcommon * cc , u32 * plltype , u32 * n , u32 * m ) ; 
/*--ssb_chipco_get_clockcontrol--*/
void ssb_chipco_timing_init ( struct ssb_chipcommon * cc , unsigned long ns ) ; 
/*--ssb_chipco_timing_init--*/
void ssb_chipco_watchdog_timer_set ( struct ssb_chipcommon * cc , u32 ticks ) ; 
/*--ssb_chipco_watchdog_timer_set--*/
void ssb_chipco_irq_mask ( struct ssb_chipcommon * cc , u32 mask , u32 value ) ; 
/*--ssb_chipco_irq_mask--*/
u32 ssb_chipco_irq_status ( struct ssb_chipcommon * cc , u32 mask ) ; 
/*--ssb_chipco_irq_status--*/
u32 ssb_chipco_gpio_in ( struct ssb_chipcommon * cc , u32 mask ) ; 
/*--ssb_chipco_gpio_in--*/
u32 ssb_chipco_gpio_out ( struct ssb_chipcommon * cc , u32 mask , u32 value ) ; 
/*--ssb_chipco_gpio_out--*/
u32 ssb_chipco_gpio_outen ( struct ssb_chipcommon * cc , u32 mask , u32 value ) ; 
/*--ssb_chipco_gpio_outen--*/
u32 ssb_chipco_gpio_control ( struct ssb_chipcommon * cc , u32 mask , u32 value ) ; 
/*--ssb_chipco_gpio_control--*/
u32 ssb_chipco_gpio_intmask ( struct ssb_chipcommon * cc , u32 mask , u32 value ) ; 
/*--ssb_chipco_gpio_intmask--*/
u32 ssb_chipco_gpio_polarity ( struct ssb_chipcommon * cc , u32 mask , u32 value ) ; 
/*--ssb_chipco_gpio_polarity--*/
void ssb_pmu_init ( struct ssb_chipcommon * cc ) ; 
/*--ssb_pmu_init--*/
void ssb_pmu_set_ldo_voltage ( struct ssb_chipcommon * cc , enum ssb_pmu_ldo_volt_id id , u32 voltage ) ; 
/*--ssb_pmu_set_ldo_voltage--*/
void ssb_pmu_set_ldo_paref ( struct ssb_chipcommon * cc , bool on ) ; 
/*--ssb_pmu_set_ldo_paref--*/
void ssb_pcicore_init ( struct ssb_pcicore * pc ) ; 
/*--ssb_pcicore_init--*/
int ssb_pcicore_dev_irqvecs_enable ( struct ssb_pcicore * pc , struct ssb_device * dev ) ; 
/*--ssb_pcicore_dev_irqvecs_enable--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) b43_pci_ssb_bridge_init ( void ) ; 
/*--b43_pci_ssb_bridge_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) b43_pci_ssb_bridge_exit ( void ) ; 
/*--b43_pci_ssb_bridge_exit--*/
void do_become_nonbusy ( struct comedi_device * dev , struct comedi_subdevice * s ) ; 
/*--do_become_nonbusy--*/
; void comedi_error ( const struct comedi_device * dev , const char * s ) ; 
/*--comedi_error--*/
void comedi_event ( struct comedi_device * dev , struct comedi_subdevice * s ) ; 
/*--comedi_event--*/
unsigned comedi_get_subdevice_runflags ( struct comedi_subdevice * s ) ; 
/*--comedi_get_subdevice_runflags--*/
int comedi_alloc_board_minor ( struct device * hardware_device ) ; 
/*--comedi_alloc_board_minor--*/
void comedi_free_board_minor ( unsigned minor ) ; 
/*--comedi_free_board_minor--*/
int comedi_alloc_subdevice_minor ( struct comedi_device * dev , struct comedi_subdevice * s ) ; 
/*--comedi_alloc_subdevice_minor--*/
void comedi_free_subdevice_minor ( struct comedi_subdevice * s ) ; 
/*--comedi_free_subdevice_minor--*/
struct comedi_device_file_info * comedi_get_device_file_info ( unsigned minor ) ; 
/*--comedi_get_device_file_info--*/
void comedi_proc_init ( void ) ; 
/*--comedi_proc_init--*/
void comedi_proc_cleanup ( void ) ; 
/*--comedi_proc_cleanup--*/
int do_rangeinfo_ioctl ( struct comedi_device * dev , struct comedi_rangeinfo * arg ) ; 
/*--do_rangeinfo_ioctl--*/
int comedi_check_chanlist ( struct comedi_subdevice * s , int n , unsigned int * chanlist ) ; 
/*--comedi_check_chanlist--*/
void comedi_device_detach ( struct comedi_device * dev ) ; 
/*--comedi_device_detach--*/
int comedi_device_attach ( struct comedi_device * dev , struct comedi_devconfig * it ) ; 
/*--comedi_device_attach--*/
int comedi_driver_register ( struct comedi_driver * driver ) ; 
/*--comedi_driver_register--*/
int comedi_driver_unregister ( struct comedi_driver * driver ) ; 
/*--comedi_driver_unregister--*/
int insn_inval ( struct comedi_device * dev , struct comedi_subdevice * s , struct comedi_insn * insn , unsigned int * data ) ; 
/*--insn_inval--*/
int comedi_buf_alloc ( struct comedi_device * dev , struct comedi_subdevice * s , unsigned long new_size ) ; 
/*--comedi_buf_alloc--*/
unsigned int comedi_buf_write_n_available ( struct comedi_async * async ) ; 
/*--comedi_buf_write_n_available--*/
unsigned int comedi_buf_write_alloc ( struct comedi_async * async , unsigned int nbytes ) ; 
/*--comedi_buf_write_alloc--*/
unsigned int comedi_buf_write_alloc_strict ( struct comedi_async * async , unsigned int nbytes ) ; 
/*--comedi_buf_write_alloc_strict--*/
unsigned comedi_buf_write_free ( struct comedi_async * async , unsigned int nbytes ) ; 
/*--comedi_buf_write_free--*/
unsigned comedi_buf_read_alloc ( struct comedi_async * async , unsigned nbytes ) ; 
/*--comedi_buf_read_alloc--*/
unsigned comedi_buf_read_free ( struct comedi_async * async , unsigned int nbytes ) ; 
/*--comedi_buf_read_free--*/
void comedi_buf_memcpy_to ( struct comedi_async * async , unsigned int offset , const void * data , unsigned int num_bytes ) ; 
/*--comedi_buf_memcpy_to--*/
void comedi_buf_memcpy_from ( struct comedi_async * async , unsigned int offset , void * dest , unsigned int nbytes ) ; 
/*--comedi_buf_memcpy_from--*/
unsigned int comedi_buf_read_n_available ( struct comedi_async * async ) ; 
/*--comedi_buf_read_n_available--*/
int comedi_buf_get ( struct comedi_async * async , short * x ) ; 
/*--comedi_buf_get--*/
int comedi_buf_put ( struct comedi_async * async , short x ) ; 
/*--comedi_buf_put--*/
void comedi_reset_async_buf ( struct comedi_async * async ) ; 
/*--comedi_reset_async_buf--*/
int comedi_pci_auto_config ( struct pci_dev * pcidev , const char * board_name ) ; 
/*--comedi_pci_auto_config--*/
void comedi_pci_auto_unconfig ( struct pci_dev * pcidev ) ; 
/*--comedi_pci_auto_unconfig--*/
int comedi_usb_auto_config ( struct usb_device * usbdev , const char * board_name ) ; 
/*--comedi_usb_auto_config--*/
void comedi_usb_auto_unconfig ( struct usb_device * usbdev ) ; 
/*--comedi_usb_auto_unconfig--*/
long comedi_compat_ioctl ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--comedi_compat_ioctl--*/
int comedi_pcm_cmdtest ( struct comedi_device * dev , struct comedi_subdevice * s , struct comedi_cmd * cmd ) ; 
/*--comedi_pcm_cmdtest--*/
void subdev_8255_interrupt ( struct comedi_device * dev , struct comedi_subdevice * s ) ; 
/*--subdev_8255_interrupt--*/
int subdev_8255_init ( struct comedi_device * dev , struct comedi_subdevice * s , int ( * cb ) ( int , int , int , unsigned long ) , unsigned long arg ) ; 
/*--subdev_8255_init--*/
int subdev_8255_init_irq ( struct comedi_device * dev , struct comedi_subdevice * s , int ( * cb ) ( int , int , int , unsigned long ) , unsigned long arg ) ; 
/*--subdev_8255_init_irq--*/
void subdev_8255_cleanup ( struct comedi_device * dev , struct comedi_subdevice * s ) ; 
/*--subdev_8255_cleanup--*/
void cx_i2c_read_print ( struct cx25821_dev * dev , u32 reg , const char * reg_string ) ; 
/*--cx_i2c_read_print--*/
int cx25821_sram_channel_setup ( struct cx25821_dev * dev , struct sram_channel * ch , unsigned int bpl , u32 risc ) ; 
/*--cx25821_sram_channel_setup--*/
int cx25821_sram_channel_setup_audio ( struct cx25821_dev * dev , struct sram_channel * ch , unsigned int bpl , u32 risc ) ; 
/*--cx25821_sram_channel_setup_audio--*/
void cx25821_sram_channel_dump ( struct cx25821_dev * dev , struct sram_channel * ch ) ; 
/*--cx25821_sram_channel_dump--*/
void cx25821_sram_channel_dump_audio ( struct cx25821_dev * dev , struct sram_channel * ch ) ; 
/*--cx25821_sram_channel_dump_audio--*/
void cx25821_set_pixel_format ( struct cx25821_dev * dev , int channel_select , u32 format ) ; 
/*--cx25821_set_pixel_format--*/
void cx25821_start_upstream_video_ch1 ( struct cx25821_dev * dev , struct upstream_user_struct * up_data ) ; 
/*--cx25821_start_upstream_video_ch1--*/
void cx25821_start_upstream_video_ch2 ( struct cx25821_dev * dev , struct upstream_user_struct * up_data ) ; 
/*--cx25821_start_upstream_video_ch2--*/
void cx25821_start_upstream_audio ( struct cx25821_dev * dev , struct upstream_user_struct * up_data ) ; 
/*--cx25821_start_upstream_audio--*/
void cx25821_dev_unregister ( struct cx25821_dev * dev ) ; 
/*--cx25821_dev_unregister--*/
int cx25821_risc_buffer ( struct pci_dev * pci , struct btcx_riscmem * risc , struct scatterlist * sglist , unsigned int top_offset , unsigned int bottom_offset , unsigned int bpl , unsigned int padding , unsigned int lines ) ; 
/*--cx25821_risc_buffer--*/
int cx25821_risc_databuffer_audio ( struct pci_dev * pci , struct btcx_riscmem * risc , struct scatterlist * sglist , unsigned int bpl , unsigned int lines , unsigned int lpi ) ; 
/*--cx25821_risc_databuffer_audio--*/
int cx25821_risc_stopper ( struct pci_dev * pci , struct btcx_riscmem * risc , u32 reg , u32 mask , u32 value ) ; 
/*--cx25821_risc_stopper--*/
void cx25821_free_buffer ( struct videobuf_queue * q , struct cx25821_buffer * buf ) ; 
/*--cx25821_free_buffer--*/
void cx25821_print_irqbits ( char * name , char * tag , char * * strings , int len , u32 bits , u32 mask ) ; 
/*--cx25821_print_irqbits--*/
struct cx25821_dev * cx25821_dev_get ( struct pci_dev * pci ) ; 
/*--cx25821_dev_get--*/
void cx25821_card_setup ( struct cx25821_dev * dev ) ; 
/*--cx25821_card_setup--*/
int cx25821_i2c_register ( struct cx25821_i2c * bus ) ; 
/*--cx25821_i2c_register--*/
int cx25821_i2c_unregister ( struct cx25821_i2c * bus ) ; 
/*--cx25821_i2c_unregister--*/
void cx25821_av_clk ( struct cx25821_dev * dev , int enable ) ; 
/*--cx25821_av_clk--*/
int cx25821_i2c_read ( struct cx25821_i2c * bus , u16 reg_addr , int * value ) ; 
/*--cx25821_i2c_read--*/
int cx25821_i2c_write ( struct cx25821_i2c * bus , u16 reg_addr , int value ) ; 
/*--cx25821_i2c_write--*/
void cx25821_set_gpiopin_direction ( struct cx25821_dev * dev , int pin_number , int pin_logic_value ) ; 
/*--cx25821_set_gpiopin_direction--*/
void cx25821_gpio_init ( struct cx25821_dev * dev ) ; 
/*--cx25821_gpio_init--*/
int medusa_set_videostandard ( struct cx25821_dev * dev ) ; 
/*--medusa_set_videostandard--*/
void medusa_set_resolution ( struct cx25821_dev * dev , int width , int decoder_select ) ; 
/*--medusa_set_resolution--*/
int medusa_set_brightness ( struct cx25821_dev * dev , int brightness , int decoder ) ; 
/*--medusa_set_brightness--*/
int medusa_set_contrast ( struct cx25821_dev * dev , int contrast , int decoder ) ; 
/*--medusa_set_contrast--*/
int medusa_set_hue ( struct cx25821_dev * dev , int hue , int decoder ) ; 
/*--medusa_set_hue--*/
int medusa_set_saturation ( struct cx25821_dev * dev , int saturation , int decoder ) ; 
/*--medusa_set_saturation--*/
int medusa_video_init ( struct cx25821_dev * dev ) ; 
/*--medusa_video_init--*/
int cx25821_get_format_size ( void ) ; 
/*--cx25821_get_format_size--*/
struct cx25821_fmt * format_by_fourcc ( unsigned int fourcc ) ; 
void cx25821_dump_video_queue ( struct cx25821_dev * dev , struct cx25821_dmaqueue * q ) ; 
/*--cx25821_dump_video_queue--*/
void cx25821_video_wakeup ( struct cx25821_dev * dev , struct cx25821_dmaqueue * q , u32 count ) ; 
/*--cx25821_video_wakeup--*/
int cx25821_set_tvnorm ( struct cx25821_dev * dev , v4l2_std_id norm ) ; 
/*--cx25821_set_tvnorm--*/
struct video_device * cx25821_vdev_init ( struct cx25821_dev * dev , struct pci_dev * pci , struct video_device * template , char * type ) ; 
/*--cx25821_vdev_init--*/
int cx25821_res_get ( struct cx25821_dev * dev , struct cx25821_fh * fh , unsigned int bit ) ; 
/*--cx25821_res_get--*/
int cx25821_res_check ( struct cx25821_fh * fh , unsigned int bit ) ; 
/*--cx25821_res_check--*/
int cx25821_res_locked ( struct cx25821_dev * dev , unsigned int bit ) ; 
/*--cx25821_res_locked--*/
void cx25821_res_free ( struct cx25821_dev * dev , struct cx25821_fh * fh , unsigned int bits ) ; 
/*--cx25821_res_free--*/
int cx25821_video_mux ( struct cx25821_dev * dev , unsigned int input ) ; 
/*--cx25821_video_mux--*/
int cx25821_start_video_dma ( struct cx25821_dev * dev , struct cx25821_dmaqueue * q , struct cx25821_buffer * buf , struct sram_channel * channel ) ; 
/*--cx25821_start_video_dma--*/
int cx25821_restart_video_queue ( struct cx25821_dev * dev , struct cx25821_dmaqueue * q , struct sram_channel * channel ) ; 
/*--cx25821_restart_video_queue--*/
void cx25821_vid_timeout ( unsigned long data ) ; 
/*--cx25821_vid_timeout--*/
int cx25821_video_irq ( struct cx25821_dev * dev , int chan_num , u32 status ) ; 
/*--cx25821_video_irq--*/
void cx25821_videoioctl_unregister ( struct cx25821_dev * dev ) ; 
/*--cx25821_videoioctl_unregister--*/
void cx25821_video_unregister ( struct cx25821_dev * dev , int chan_num ) ; 
/*--cx25821_video_unregister--*/
int cx25821_video_register ( struct cx25821_dev * dev , int chan_num , struct video_device * video_template ) ; 
/*--cx25821_video_register--*/
int cx25821_buffer_setup ( struct videobuf_queue * q , unsigned int * count , unsigned int * size ) ; 
/*--cx25821_buffer_setup--*/
int cx25821_buffer_prepare ( struct videobuf_queue * q , struct videobuf_buffer * vb , enum v4l2_field field ) ; 
/*--cx25821_buffer_prepare--*/
void cx25821_buffer_release ( struct videobuf_queue * q , struct videobuf_buffer * vb ) ; 
/*--cx25821_buffer_release--*/
struct videobuf_queue * get_queue ( struct cx25821_fh * fh ) ; 
/*--get_queue--*/
int cx25821_get_resource ( struct cx25821_fh * fh , int resource ) ; 
/*--cx25821_get_resource--*/
int cx25821_video_mmap ( struct file * file , struct vm_area_struct * vma ) ; 
/*--cx25821_video_mmap--*/
int cx25821_vidioc_g_fmt_vid_cap ( struct file * file , void * priv , struct v4l2_format * f ) ; 
/*--cx25821_vidioc_g_fmt_vid_cap--*/
int cx25821_vidioc_try_fmt_vid_cap ( struct file * file , void * priv , struct v4l2_format * f ) ; 
/*--cx25821_vidioc_try_fmt_vid_cap--*/
int cx25821_vidioc_querycap ( struct file * file , void * priv , struct v4l2_capability * cap ) ; 
/*--cx25821_vidioc_querycap--*/
int cx25821_vidioc_enum_fmt_vid_cap ( struct file * file , void * priv , struct v4l2_fmtdesc * f ) ; 
/*--cx25821_vidioc_enum_fmt_vid_cap--*/
int cx25821_vidiocgmbuf ( struct file * file , void * priv , struct video_mbuf * mbuf ) ; 
/*--cx25821_vidiocgmbuf--*/
int cx25821_vidioc_reqbufs ( struct file * file , void * priv , struct v4l2_requestbuffers * p ) ; 
/*--cx25821_vidioc_reqbufs--*/
int cx25821_vidioc_querybuf ( struct file * file , void * priv , struct v4l2_buffer * p ) ; 
/*--cx25821_vidioc_querybuf--*/
int cx25821_vidioc_qbuf ( struct file * file , void * priv , struct v4l2_buffer * p ) ; 
/*--cx25821_vidioc_qbuf--*/
int cx25821_vidioc_g_priority ( struct file * file , void * f , enum v4l2_priority * p ) ; 
/*--cx25821_vidioc_g_priority--*/
int cx25821_vidioc_s_priority ( struct file * file , void * f , enum v4l2_priority prio ) ; 
/*--cx25821_vidioc_s_priority--*/
int cx25821_vidioc_s_std ( struct file * file , void * priv , v4l2_std_id * tvnorms ) ; 
/*--cx25821_vidioc_s_std--*/
int cx25821_enum_input ( struct cx25821_dev * dev , struct v4l2_input * i ) ; 
/*--cx25821_enum_input--*/
int cx25821_vidioc_enum_input ( struct file * file , void * priv , struct v4l2_input * i ) ; 
/*--cx25821_vidioc_enum_input--*/
int cx25821_vidioc_g_input ( struct file * file , void * priv , unsigned int * i ) ; 
/*--cx25821_vidioc_g_input--*/
int cx25821_vidioc_s_input ( struct file * file , void * priv , unsigned int i ) ; 
/*--cx25821_vidioc_s_input--*/
int cx25821_vidioc_g_frequency ( struct file * file , void * priv , struct v4l2_frequency * f ) ; 
/*--cx25821_vidioc_g_frequency--*/
int cx25821_set_freq ( struct cx25821_dev * dev , struct v4l2_frequency * f ) ; 
/*--cx25821_set_freq--*/
int cx25821_vidioc_s_frequency ( struct file * file , void * priv , struct v4l2_frequency * f ) ; 
/*--cx25821_vidioc_s_frequency--*/
int cx25821_vidioc_g_tuner ( struct file * file , void * priv , struct v4l2_tuner * t ) ; 
/*--cx25821_vidioc_g_tuner--*/
int cx25821_vidioc_s_tuner ( struct file * file , void * priv , struct v4l2_tuner * t ) ; 
/*--cx25821_vidioc_s_tuner--*/
int cx25821_vidioc_queryctrl ( struct file * file , void * priv , struct v4l2_queryctrl * qctrl ) ; 
/*--cx25821_vidioc_queryctrl--*/
int cx25821_vidioc_g_ctrl ( struct file * file , void * priv , struct v4l2_control * ctl ) ; 
/*--cx25821_vidioc_g_ctrl--*/
int cx25821_set_control ( struct cx25821_dev * dev , struct v4l2_control * ctl , int chan_num ) ; 
/*--cx25821_set_control--*/
int cx25821_vidioc_cropcap ( struct file * file , void * priv , struct v4l2_cropcap * cropcap ) ; 
/*--cx25821_vidioc_cropcap--*/
int cx25821_vidioc_s_crop ( struct file * file , void * priv , struct v4l2_crop * crop ) ; 
/*--cx25821_vidioc_s_crop--*/
int cx25821_vidioc_g_crop ( struct file * file , void * priv , struct v4l2_crop * crop ) ; 
/*--cx25821_vidioc_g_crop--*/
int cx25821_vidioc_querystd ( struct file * file , void * priv , v4l2_std_id * norm ) ; 
/*--cx25821_vidioc_querystd--*/
int cx25821_is_valid_width ( u32 width , v4l2_std_id tvnorm ) ; 
/*--cx25821_is_valid_width--*/
int cx25821_is_valid_height ( u32 height , v4l2_std_id tvnorm ) ; 
/*--cx25821_is_valid_height--*/
int cx25821_sram_channel_setup_upstream ( struct cx25821_dev * dev , struct sram_channel * ch , unsigned int bpl , u32 risc ) ; 
/*--cx25821_sram_channel_setup_upstream--*/
int cx25821_risc_buffer_upstream ( struct cx25821_dev * dev , struct pci_dev * pci , unsigned int top_offset , unsigned int bpl , unsigned int lines ) ; 
/*--cx25821_risc_buffer_upstream--*/
void cx25821_stop_upstream_video_ch1 ( struct cx25821_dev * dev ) ; 
/*--cx25821_stop_upstream_video_ch1--*/
void cx25821_free_mem_upstream_ch1 ( struct cx25821_dev * dev ) ; 
/*--cx25821_free_mem_upstream_ch1--*/
int cx25821_get_frame ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_get_frame--*/
int cx25821_openfile ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_openfile--*/
int cx25821_upstream_buffer_prepare ( struct cx25821_dev * dev , struct sram_channel * sram_ch , int bpl ) ; 
/*--cx25821_upstream_buffer_prepare--*/
int cx25821_video_upstream_irq ( struct cx25821_dev * dev , int chan_num , u32 status ) ; 
/*--cx25821_video_upstream_irq--*/
void cx25821_set_pixelengine ( struct cx25821_dev * dev , struct sram_channel * ch , int pix_format ) ; 
/*--cx25821_set_pixelengine--*/
int cx25821_start_video_dma_upstream ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_start_video_dma_upstream--*/
int cx25821_vidupstream_init_ch1 ( struct cx25821_dev * dev , int channel_select , int pixel_format ) ; 
/*--cx25821_vidupstream_init_ch1--*/
int cx25821_risc_buffer_upstream_ch2 ( struct cx25821_dev * dev , struct pci_dev * pci , unsigned int top_offset , unsigned int bpl , unsigned int lines ) ; 
/*--cx25821_risc_buffer_upstream_ch2--*/
void cx25821_stop_upstream_video_ch2 ( struct cx25821_dev * dev ) ; 
/*--cx25821_stop_upstream_video_ch2--*/
void cx25821_free_mem_upstream_ch2 ( struct cx25821_dev * dev ) ; 
/*--cx25821_free_mem_upstream_ch2--*/
int cx25821_get_frame_ch2 ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_get_frame_ch2--*/
int cx25821_openfile_ch2 ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_openfile_ch2--*/
int cx25821_video_upstream_irq_ch2 ( struct cx25821_dev * dev , int chan_num , u32 status ) ; 
/*--cx25821_video_upstream_irq_ch2--*/
int cx25821_start_video_dma_upstream_ch2 ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_start_video_dma_upstream_ch2--*/
int cx25821_vidupstream_init_ch2 ( struct cx25821_dev * dev , int channel_select , int pixel_format ) ; 
/*--cx25821_vidupstream_init_ch2--*/
int cx25821_sram_channel_setup_upstream_audio ( struct cx25821_dev * dev , struct sram_channel * ch , unsigned int bpl , u32 risc ) ; 
/*--cx25821_sram_channel_setup_upstream_audio--*/
int cx25821_risc_buffer_upstream_audio ( struct cx25821_dev * dev , struct pci_dev * pci , unsigned int bpl , unsigned int lines ) ; 
/*--cx25821_risc_buffer_upstream_audio--*/
void cx25821_free_memory_audio ( struct cx25821_dev * dev ) ; 
/*--cx25821_free_memory_audio--*/
void cx25821_stop_upstream_audio ( struct cx25821_dev * dev ) ; 
/*--cx25821_stop_upstream_audio--*/
void cx25821_free_mem_upstream_audio ( struct cx25821_dev * dev ) ; 
/*--cx25821_free_mem_upstream_audio--*/
int cx25821_get_audio_data ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_get_audio_data--*/
int cx25821_openfile_audio ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_openfile_audio--*/
int cx25821_audio_upstream_irq ( struct cx25821_dev * dev , int chan_num , u32 status ) ; 
/*--cx25821_audio_upstream_irq--*/
int cx25821_start_audio_dma_upstream ( struct cx25821_dev * dev , struct sram_channel * sram_ch ) ; 
/*--cx25821_start_audio_dma_upstream--*/
int cx25821_audio_upstream_init ( struct cx25821_dev * dev , int channel_select ) ; 
/*--cx25821_audio_upstream_init--*/
struct oslec_state * oslec_create ( int len , int adaption_mode ) ; 
/*--oslec_create--*/
void oslec_free ( struct oslec_state * ec ) ; 
/*--oslec_free--*/
void oslec_adaption_mode ( struct oslec_state * ec , int adaption_mode ) ; 
/*--oslec_adaption_mode--*/
void oslec_flush ( struct oslec_state * ec ) ; 
/*--oslec_flush--*/
void oslec_snapshot ( struct oslec_state * ec ) ; 
/*--oslec_snapshot--*/
int16_t oslec_update ( struct oslec_state * ec , int16_t tx , int16_t rx ) ; 
/*--oslec_update--*/
int16_t oslec_hpf_tx ( struct oslec_state * ec , int16_t tx ) ; 
/*--oslec_hpf_tx--*/
int et131x_init_eeprom ( struct et131x_adapter * etdev ) ; 
/*--et131x_init_eeprom--*/
void ConfigMACRegs1 ( struct et131x_adapter * etdev ) ; 
/*--ConfigMACRegs1--*/
void ConfigMACRegs2 ( struct et131x_adapter * etdev ) ; 
/*--ConfigMACRegs2--*/
void ConfigRxMacRegs ( struct et131x_adapter * etdev ) ; 
/*--ConfigRxMacRegs--*/
void ConfigTxMacRegs ( struct et131x_adapter * etdev ) ; 
/*--ConfigTxMacRegs--*/
void ConfigMacStatRegs ( struct et131x_adapter * etdev ) ; 
/*--ConfigMacStatRegs--*/
void ConfigFlowControl ( struct et131x_adapter * etdev ) ; 
/*--ConfigFlowControl--*/
void UpdateMacStatHostCounters ( struct et131x_adapter * etdev ) ; 
/*--UpdateMacStatHostCounters--*/
void HandleMacStatInterrupt ( struct et131x_adapter * etdev ) ; 
/*--HandleMacStatInterrupt--*/
void SetupDeviceForMulticast ( struct et131x_adapter * etdev ) ; 
/*--SetupDeviceForMulticast--*/
void SetupDeviceForUnicast ( struct et131x_adapter * etdev ) ; 
/*--SetupDeviceForUnicast--*/
int PhyMiRead ( struct et131x_adapter * etdev , u8 xcvrAddr , u8 xcvrReg , u16 * value ) ; 
/*--PhyMiRead--*/
int MiWrite ( struct et131x_adapter * etdev , u8 xcvrReg , u16 value ) ; 
/*--MiWrite--*/
int et131x_xcvr_find ( struct et131x_adapter * etdev ) ; 
/*--et131x_xcvr_find--*/
void ET1310_PhyReset ( struct et131x_adapter * etdev ) ; 
/*--ET1310_PhyReset--*/
void ET1310_PhyPowerDown ( struct et131x_adapter * etdev , bool down ) ; 
/*--ET1310_PhyPowerDown--*/
void ET1310_PhyAccessMiBit ( struct et131x_adapter * etdev , u16 action , u16 regnum , u16 bitnum , u8 * value ) ; 
/*--ET1310_PhyAccessMiBit--*/
void ET1310_PhyAdvertise1000BaseT ( struct et131x_adapter * etdev , u16 duplex ) ; 
/*--ET1310_PhyAdvertise1000BaseT--*/
void et131x_setphy_normal ( struct et131x_adapter * etdev ) ; 
/*--et131x_setphy_normal--*/
void et131x_Mii_check ( struct et131x_adapter * etdev , MI_BMSR_t bmsr , MI_BMSR_t bmsr_ints ) ; 
/*--et131x_Mii_check--*/
void ET1310_PhyInit ( struct et131x_adapter * etdev ) ; 
/*--ET1310_PhyInit--*/
void EnablePhyComa ( struct et131x_adapter * etdev ) ; 
/*--EnablePhyComa--*/
void DisablePhyComa ( struct et131x_adapter * etdev ) ; 
/*--DisablePhyComa--*/
int et131x_rx_dma_memory_alloc ( struct et131x_adapter * adapter ) ; 
/*--et131x_rx_dma_memory_alloc--*/
void et131x_rx_dma_memory_free ( struct et131x_adapter * adapter ) ; 
/*--et131x_rx_dma_memory_free--*/
int et131x_init_recv ( struct et131x_adapter * adapter ) ; 
/*--et131x_init_recv--*/
void ConfigRxDmaRegs ( struct et131x_adapter * etdev ) ; 
/*--ConfigRxDmaRegs--*/
void SetRxDmaTimer ( struct et131x_adapter * etdev ) ; 
/*--SetRxDmaTimer--*/
void et131x_rx_dma_disable ( struct et131x_adapter * etdev ) ; 
/*--et131x_rx_dma_disable--*/
void et131x_rx_dma_enable ( struct et131x_adapter * etdev ) ; 
/*--et131x_rx_dma_enable--*/
PMP_RFD nic_rx_pkts ( struct et131x_adapter * etdev ) ; 
/*--nic_rx_pkts--*/
void et131x_reset_recv ( struct et131x_adapter * etdev ) ; 
/*--et131x_reset_recv--*/
void et131x_handle_recv_interrupt ( struct et131x_adapter * etdev ) ; 
/*--et131x_handle_recv_interrupt--*/
void nic_return_rfd ( struct et131x_adapter * etdev , PMP_RFD rfd ) ; 
/*--nic_return_rfd--*/
int et131x_tx_dma_memory_alloc ( struct et131x_adapter * adapter ) ; 
/*--et131x_tx_dma_memory_alloc--*/
void et131x_tx_dma_memory_free ( struct et131x_adapter * adapter ) ; 
/*--et131x_tx_dma_memory_free--*/
void ConfigTxDmaRegs ( struct et131x_adapter * etdev ) ; 
/*--ConfigTxDmaRegs--*/
void et131x_tx_dma_disable ( struct et131x_adapter * etdev ) ; 
/*--et131x_tx_dma_disable--*/
void et131x_tx_dma_enable ( struct et131x_adapter * etdev ) ; 
/*--et131x_tx_dma_enable--*/
void et131x_init_send ( struct et131x_adapter * adapter ) ; 
/*--et131x_init_send--*/
int et131x_send_packets ( struct sk_buff * skb , struct net_device * netdev ) ; 
/*--et131x_send_packets--*/
void et131x_free_busy_send_packets ( struct et131x_adapter * etdev ) ; 
/*--et131x_free_busy_send_packets--*/
void et131x_handle_send_interrupt ( struct et131x_adapter * etdev ) ; 
/*--et131x_handle_send_interrupt--*/
void et131x_hwaddr_init ( struct et131x_adapter * adapter ) ; 
/*--et131x_hwaddr_init--*/
void et131x_error_timer_handler ( unsigned long data ) ; 
/*--et131x_error_timer_handler--*/
void et131x_link_detection_handler ( unsigned long data ) ; 
/*--et131x_link_detection_handler--*/
void ConfigGlobalRegs ( struct et131x_adapter * etdev ) ; 
/*--ConfigGlobalRegs--*/
int et131x_adapter_setup ( struct et131x_adapter * etdev ) ; 
/*--et131x_adapter_setup--*/
void et131x_soft_reset ( struct et131x_adapter * adapter ) ; 
/*--et131x_soft_reset--*/
void et131x_align_allocated_memory ( struct et131x_adapter * adapter , uint64_t * phys_addr , uint64_t * offset , uint64_t mask ) ; 
/*--et131x_align_allocated_memory--*/
int et131x_adapter_memory_alloc ( struct et131x_adapter * adapter ) ; 
/*--et131x_adapter_memory_alloc--*/
void et131x_adapter_memory_free ( struct et131x_adapter * adapter ) ; 
/*--et131x_adapter_memory_free--*/
void et131x_enable_interrupts ( struct et131x_adapter * adapter ) ; 
/*--et131x_enable_interrupts--*/
void et131x_disable_interrupts ( struct et131x_adapter * adapter ) ; 
/*--et131x_disable_interrupts--*/
irqreturn_t et131x_isr ( int irq , void * dev_id ) ; 
/*--et131x_isr--*/
void et131x_isr_handler ( struct work_struct * work ) ; 
/*--et131x_isr_handler--*/
struct net_device * et131x_device_alloc ( void ) ; 
/*--et131x_device_alloc--*/
struct net_device_stats * et131x_stats ( struct net_device * netdev ) ; 
/*--et131x_stats--*/
int et131x_open ( struct net_device * netdev ) ; 
/*--et131x_open--*/
int et131x_close ( struct net_device * netdev ) ; 
/*--et131x_close--*/
int et131x_ioctl_mii ( struct net_device * netdev , struct ifreq * reqbuf , int cmd ) ; 
/*--et131x_ioctl_mii--*/
int et131x_ioctl ( struct net_device * netdev , struct ifreq * reqbuf , int cmd ) ; 
/*--et131x_ioctl--*/
int et131x_set_packet_filter ( struct et131x_adapter * adapter ) ; 
/*--et131x_set_packet_filter--*/
void et131x_multicast ( struct net_device * netdev ) ; 
/*--et131x_multicast--*/
int et131x_tx ( struct sk_buff * skb , struct net_device * netdev ) ; 
/*--et131x_tx--*/
void et131x_tx_timeout ( struct net_device * netdev ) ; 
/*--et131x_tx_timeout--*/
int et131x_change_mtu ( struct net_device * netdev , int new_mtu ) ; 
/*--et131x_change_mtu--*/
int et131x_set_mac_addr ( struct net_device * netdev , void * new_mac ) ; 
/*--et131x_set_mac_addr--*/
int go7007_v4l2_init ( struct go7007 * go ) ; 
/*--go7007_v4l2_init--*/
void go7007_v4l2_remove ( struct go7007 * go ) ; 
/*--go7007_v4l2_remove--*/
int go7007_read_interrupt ( struct go7007 * go , u16 * value , u16 * data ) ; 
/*--go7007_read_interrupt--*/
int go7007_read_addr ( struct go7007 * go , u16 addr , u16 * data ) ; 
/*--go7007_read_addr--*/
int go7007_boot_encoder ( struct go7007 * go , int init_i2c ) ; 
/*--go7007_boot_encoder--*/
int go7007_reset_encoder ( struct go7007 * go ) ; 
/*--go7007_reset_encoder--*/
int go7007_register_encoder ( struct go7007 * go ) ; 
/*--go7007_register_encoder--*/
int go7007_start_encoder ( struct go7007 * go ) ; 
/*--go7007_start_encoder--*/
void go7007_parse_video_stream ( struct go7007 * go , u8 * buf , int length ) ; 
/*--go7007_parse_video_stream--*/
struct go7007 * go7007_alloc ( struct go7007_board_info * board , struct device * dev ) ; 
/*--go7007_alloc--*/
void go7007_remove ( struct go7007 * go ) ; 
/*--go7007_remove--*/
int go7007_i2c_init ( struct go7007 * go ) ; 
/*--go7007_i2c_init--*/
int go7007_construct_fw_image ( struct go7007 * go , u8 * * fw , int * fwlen ) ; 
/*--go7007_construct_fw_image--*/
int go7007_snd_init ( struct go7007 * go ) ; 
/*--go7007_snd_init--*/
int go7007_snd_remove ( struct go7007 * go ) ; 
/*--go7007_snd_remove--*/
int StorVscOnHostReset ( struct hv_device * Device ) ; 
/*--StorVscOnHostReset--*/
int StorVscInitialize ( struct hv_driver * Driver ) ; 
/*--StorVscInitialize--*/
int BlkVscInitialize ( struct hv_driver * Driver ) ; 
/*--BlkVscInitialize--*/
int NetVscInitialize ( struct hv_driver * drv ) ; 
/*--NetVscInitialize--*/
int RndisFilterInit ( struct netvsc_driver * Driver ) ; 
/*--RndisFilterInit--*/
int RndisFilterOnOpen ( struct hv_device * Device ) ; 
/*--RndisFilterOnOpen--*/
int RndisFilterOnClose ( struct hv_device * Device ) ; 
/*--RndisFilterOnClose--*/
int vmbus_child_driver_register ( struct driver_context * driver_ctx ) ; 
/*--vmbus_child_driver_register--*/
void vmbus_child_driver_unregister ( struct driver_context * driver_ctx ) ; 
/*--vmbus_child_driver_unregister--*/
void vmbus_get_interface ( struct vmbus_channel_interface * interface ) ; 
/*--vmbus_get_interface--*/
void * osd_VirtualAllocExec ( unsigned int size ) ; 
/*--osd_VirtualAllocExec--*/
void * osd_PageAlloc ( unsigned int count ) ; 
/*--osd_PageAlloc--*/
void osd_PageFree ( void * page , unsigned int count ) ; 
/*--osd_PageFree--*/
struct osd_waitevent * osd_WaitEventCreate ( void ) ; 
/*--osd_WaitEventCreate--*/
void osd_WaitEventSet ( struct osd_waitevent * waitEvent ) ; 
/*--osd_WaitEventSet--*/
int osd_WaitEventWait ( struct osd_waitevent * waitEvent ) ; 
/*--osd_WaitEventWait--*/
int osd_WaitEventWaitEx ( struct osd_waitevent * waitEvent , u32 TimeoutInMs ) ; 
/*--osd_WaitEventWaitEx--*/
int osd_schedule_callback ( struct workqueue_struct * wq , void ( * func ) ( void * ) , void * data ) ; 
/*--osd_schedule_callback--*/
struct hv_device * VmbusChildDeviceCreate ( struct hv_guid * DeviceType , struct hv_guid * DeviceInstance , void * Context ) ; 
/*--VmbusChildDeviceCreate--*/
int VmbusChildDeviceAdd ( struct hv_device * ChildDevice ) ; 
/*--VmbusChildDeviceAdd--*/
void VmbusChildDeviceRemove ( struct hv_device * ChildDevice ) ; 
/*--VmbusChildDeviceRemove--*/
int VmbusInitialize ( struct hv_driver * drv ) ; 
/*--VmbusInitialize--*/
int HvInit ( void ) ; 
/*--HvInit--*/
void HvCleanup ( void ) ; 
/*--HvCleanup--*/
u16 HvPostMessage ( union hv_connection_id connectionId , enum hv_message_type messageType , void * payload , size_t payloadSize ) ; 
/*--HvPostMessage--*/
u16 HvSignalEvent ( void ) ; 
/*--HvSignalEvent--*/
void HvSynicInit ( void * irqarg ) ; 
/*--HvSynicInit--*/
void HvSynicCleanup ( void * arg ) ; 
/*--HvSynicCleanup--*/
int VmbusConnect ( void ) ; 
/*--VmbusConnect--*/
int VmbusDisconnect ( void ) ; 
/*--VmbusDisconnect--*/
struct vmbus_channel * GetChannelFromRelId ( u32 relId ) ; 
/*--GetChannelFromRelId--*/
void VmbusOnEvents ( void ) ; 
/*--VmbusOnEvents--*/
int VmbusPostMessage ( void * buffer , size_t bufferLen ) ; 
/*--VmbusPostMessage--*/
int VmbusSetEvent ( u32 childRelId ) ; 
/*--VmbusSetEvent--*/
void VmbusChannelGetDebugInfo ( struct vmbus_channel * Channel , struct vmbus_channel_debug_info * DebugInfo ) ; 
/*--VmbusChannelGetDebugInfo--*/
int VmbusChannelOpen ( struct vmbus_channel * NewChannel , u32 SendRingBufferSize , u32 RecvRingBufferSize , void * UserData , u32 UserDataLen , void ( * OnChannelCallback ) ( void * context ) , void * Context ) ; 
/*--VmbusChannelOpen--*/
int VmbusChannelEstablishGpadl ( struct vmbus_channel * Channel , void * Kbuffer , u32 Size , u32 * GpadlHandle ) ; 
/*--VmbusChannelEstablishGpadl--*/
int VmbusChannelTeardownGpadl ( struct vmbus_channel * Channel , u32 GpadlHandle ) ; 
/*--VmbusChannelTeardownGpadl--*/
void VmbusChannelClose ( struct vmbus_channel * Channel ) ; 
/*--VmbusChannelClose--*/
int VmbusChannelSendPacket ( struct vmbus_channel * Channel , const void * Buffer , u32 BufferLen , u64 RequestId , enum vmbus_packet_type Type , u32 Flags ) ; 
/*--VmbusChannelSendPacket--*/
int VmbusChannelSendPacketPageBuffer ( struct vmbus_channel * Channel , struct hv_page_buffer PageBuffers [ ] , u32 PageCount , void * Buffer , u32 BufferLen , u64 RequestId ) ; 
/*--VmbusChannelSendPacketPageBuffer--*/
int VmbusChannelSendPacketMultiPageBuffer ( struct vmbus_channel * Channel , struct hv_multipage_buffer * MultiPageBuffer , void * Buffer , u32 BufferLen , u64 RequestId ) ; 
/*--VmbusChannelSendPacketMultiPageBuffer--*/
int VmbusChannelRecvPacket ( struct vmbus_channel * Channel , void * Buffer , u32 BufferLen , u32 * BufferActualLen , u64 * RequestId ) ; 
/*--VmbusChannelRecvPacket--*/
int VmbusChannelRecvPacketRaw ( struct vmbus_channel * Channel , void * Buffer , u32 BufferLen , u32 * BufferActualLen , u64 * RequestId ) ; 
/*--VmbusChannelRecvPacketRaw--*/
void VmbusChannelOnChannelEvent ( struct vmbus_channel * Channel ) ; 
/*--VmbusChannelOnChannelEvent--*/
void VmbusChannelOnTimer ( unsigned long data ) ; 
/*--VmbusChannelOnTimer--*/
void prep_negotiate_resp ( struct icmsg_hdr * icmsghdrp , struct icmsg_negotiate * negop , u8 * buf ) ; 
/*--prep_negotiate_resp--*/
void chn_cb_negotiate ( void * context ) ; 
/*--chn_cb_negotiate--*/
struct vmbus_channel * AllocVmbusChannel ( void ) ; 
/*--AllocVmbusChannel--*/
void FreeVmbusChannel ( struct vmbus_channel * Channel ) ; 
/*--FreeVmbusChannel--*/
void VmbusOnChannelMessage ( void * Context ) ; 
/*--VmbusOnChannelMessage--*/
int VmbusChannelRequestOffers ( void ) ; 
/*--VmbusChannelRequestOffers--*/
void VmbusChannelReleaseUnattachedChannels ( void ) ; 
/*--VmbusChannelReleaseUnattachedChannels--*/
void GetChannelInterface ( struct vmbus_channel_interface * iface ) ; 
/*--GetChannelInterface--*/
void GetChannelInfo ( struct hv_device * device , struct hv_device_info * info ) ; 
/*--GetChannelInfo--*/
void DumpRingInfo ( RING_BUFFER_INFO * RingInfo , char * Prefix ) ; 
/*--DumpRingInfo--*/
void RingBufferGetDebugInfo ( RING_BUFFER_INFO * RingInfo , RING_BUFFER_DEBUG_INFO * DebugInfo ) ; 
/*--RingBufferGetDebugInfo--*/
u32 GetRingBufferInterruptMask ( RING_BUFFER_INFO * rbi ) ; 
/*--GetRingBufferInterruptMask--*/
int RingBufferInit ( RING_BUFFER_INFO * RingInfo , void * Buffer , u32 BufferLen ) ; 
/*--RingBufferInit--*/
void RingBufferCleanup ( RING_BUFFER_INFO * RingInfo ) ; 
/*--RingBufferCleanup--*/
int RingBufferWrite ( RING_BUFFER_INFO * OutRingInfo , struct scatterlist * sglist , u32 sgcount ) ; 
/*--RingBufferWrite--*/
int RingBufferPeek ( RING_BUFFER_INFO * InRingInfo , void * Buffer , u32 BufferLen ) ; 
/*--RingBufferPeek--*/
int RingBufferRead ( RING_BUFFER_INFO * InRingInfo , void * Buffer , u32 BufferLen , u32 Offset ) ; 
/*--RingBufferRead--*/
int lis3l02dq_spi_read_reg_8 ( struct device * dev , u8 reg_address , u8 * val ) ; 
/*--lis3l02dq_spi_read_reg_8--*/
int lis3l02dq_spi_write_reg_8 ( struct device * dev , u8 reg_address , u8 * val ) ; 
/*--lis3l02dq_spi_write_reg_8--*/
ssize_t lis3l02dq_read_accel_from_ring ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--lis3l02dq_read_accel_from_ring--*/
int lis3l02dq_probe_trigger ( struct iio_dev * indio_dev ) ; 
/*--lis3l02dq_probe_trigger--*/
void lis3l02dq_remove_trigger ( struct iio_dev * indio_dev ) ; 
/*--lis3l02dq_remove_trigger--*/
void lis3l02dq_unconfigure_ring ( struct iio_dev * indio_dev ) ; 
/*--lis3l02dq_unconfigure_ring--*/
int lis3l02dq_configure_ring ( struct iio_dev * indio_dev ) ; 
/*--lis3l02dq_configure_ring--*/
int lis3l02dq_initialize_ring ( struct iio_ring_buffer * ring ) ; 
/*--lis3l02dq_initialize_ring--*/
void lis3l02dq_uninitialize_ring ( struct iio_ring_buffer * ring ) ; 
/*--lis3l02dq_uninitialize_ring--*/
int lis3l02dq_set_ring_length ( struct iio_dev * indio_dev , int length ) ; 
/*--lis3l02dq_set_ring_length--*/
const struct max1363_mode * max1363_match_mode ( u32 mask , const struct max1363_chip_info * ci ) ; 
/*--max1363_match_mode--*/
int max1363_set_scan_mode ( struct max1363_state * st ) ; 
/*--max1363_set_scan_mode--*/
int max1363_single_channel_from_ring ( long mask , struct max1363_state * st ) ; 
/*--max1363_single_channel_from_ring--*/
int max1363_register_ring_funcs_and_init ( struct iio_dev * indio_dev ) ; 
/*--max1363_register_ring_funcs_and_init--*/
void max1363_ring_cleanup ( struct iio_dev * indio_dev ) ; 
/*--max1363_ring_cleanup--*/
void max1363_uninitialize_ring ( struct iio_ring_buffer * ring ) ; 
/*--max1363_uninitialize_ring--*/
int max1363_initialize_ring ( struct iio_ring_buffer * ring ) ; 
/*--max1363_initialize_ring--*/
void __iio_change_event ( struct iio_detected_event_list * ev , int ev_code , s64 timestamp ) ; 
/*--__iio_change_event--*/
int __iio_push_event ( struct iio_event_interface * ev_int , int ev_code , s64 timestamp , struct iio_shared_ev_pointer * shared_pointer_p ) ; 
/*--__iio_push_event--*/
int iio_push_event ( struct iio_dev * dev_info , int ev_line , int ev_code , s64 timestamp ) ; 
/*--iio_push_event--*/
int iio_register_interrupt_line ( unsigned int irq , struct iio_dev * dev_info , int line_number , unsigned long type , const char * name ) ; 
/*--iio_register_interrupt_line--*/
ssize_t iio_read_const_attr ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--iio_read_const_attr--*/
void iio_unregister_interrupt_line ( struct iio_dev * dev_info , int line_number ) ; 
/*--iio_unregister_interrupt_line--*/
void iio_add_event_to_list ( struct iio_event_handler_list * el , struct list_head * head ) ; 
/*--iio_add_event_to_list--*/
void iio_remove_event_from_list ( struct iio_event_handler_list * el , struct list_head * head ) ; 
/*--iio_remove_event_from_list--*/
int iio_device_get_chrdev_minor ( void ) ; 
/*--iio_device_get_chrdev_minor--*/
void iio_device_free_chrdev_minor ( int val ) ; 
/*--iio_device_free_chrdev_minor--*/
int iio_setup_ev_int ( struct iio_event_interface * ev_int , const char * name , struct module * owner , struct device * dev ) ; 
/*--iio_setup_ev_int--*/
void iio_free_ev_int ( struct iio_event_interface * ev_int ) ; 
/*--iio_free_ev_int--*/
int iio_get_new_idr_val ( struct idr * this_idr ) ; 
/*--iio_get_new_idr_val--*/
void iio_free_idr_val ( struct idr * this_idr , int id ) ; 
/*--iio_free_idr_val--*/
struct iio_dev * iio_allocate_device ( void ) ; 
/*--iio_allocate_device--*/
void iio_free_device ( struct iio_dev * dev ) ; 
/*--iio_free_device--*/
int iio_device_register ( struct iio_dev * dev_info ) ; 
/*--iio_device_register--*/
void iio_device_unregister ( struct iio_dev * dev_info ) ; 
/*--iio_device_unregister--*/
void iio_put ( void ) ; 
/*--iio_put--*/
void iio_get ( void ) ; 
/*--iio_get--*/
int iio_push_ring_event ( struct iio_ring_buffer * ring_buf , int event_code , s64 timestamp ) ; 
/*--iio_push_ring_event--*/
int iio_push_or_escallate_ring_event ( struct iio_ring_buffer * ring_buf , int event_code , s64 timestamp ) ; 
/*--iio_push_or_escallate_ring_event--*/
void iio_ring_buffer_init ( struct iio_ring_buffer * ring , struct iio_dev * dev_info ) ; 
/*--iio_ring_buffer_init--*/
int iio_ring_buffer_register ( struct iio_ring_buffer * ring , int id ) ; 
/*--iio_ring_buffer_register--*/
void iio_ring_buffer_unregister ( struct iio_ring_buffer * ring ) ; 
/*--iio_ring_buffer_unregister--*/
ssize_t iio_read_ring_length ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--iio_read_ring_length--*/
ssize_t iio_write_ring_length ( struct device * dev , struct device_attribute * attr , const char * buf , size_t len ) ; 
/*--iio_write_ring_length--*/
ssize_t iio_read_ring_bps ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--iio_read_ring_bps--*/
ssize_t iio_store_ring_enable ( struct device * dev , struct device_attribute * attr , const char * buf , size_t len ) ; 
/*--iio_store_ring_enable--*/
ssize_t iio_show_ring_enable ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--iio_show_ring_enable--*/
ssize_t iio_scan_el_show ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--iio_scan_el_show--*/
ssize_t iio_scan_el_store ( struct device * dev , struct device_attribute * attr , const char * buf , size_t len ) ; 
/*--iio_scan_el_store--*/
ssize_t iio_scan_el_ts_show ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--iio_scan_el_ts_show--*/
ssize_t iio_scan_el_ts_store ( struct device * dev , struct device_attribute * attr , const char * buf , size_t len ) ; 
/*--iio_scan_el_ts_store--*/
int iio_trigger_register ( struct iio_trigger * trig_info ) ; 
/*--iio_trigger_register--*/
void iio_trigger_unregister ( struct iio_trigger * trig_info ) ; 
/*--iio_trigger_unregister--*/
struct iio_trigger * iio_trigger_find_by_name ( const char * name , size_t len ) ; 
/*--iio_trigger_find_by_name--*/
void iio_trigger_poll ( struct iio_trigger * trig ) ; 
/*--iio_trigger_poll--*/
void iio_trigger_notify_done ( struct iio_trigger * trig ) ; 
/*--iio_trigger_notify_done--*/
ssize_t iio_trigger_read_name ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--iio_trigger_read_name--*/
int iio_trigger_attach_poll_func ( struct iio_trigger * trig , struct iio_poll_func * pf ) ; 
/*--iio_trigger_attach_poll_func--*/
int iio_trigger_dettach_poll_func ( struct iio_trigger * trig , struct iio_poll_func * pf ) ; 
/*--iio_trigger_dettach_poll_func--*/
struct iio_trigger * iio_allocate_trigger ( void ) ; 
/*--iio_allocate_trigger--*/
void iio_free_trigger ( struct iio_trigger * trig ) ; 
/*--iio_free_trigger--*/
int iio_device_register_trigger_consumer ( struct iio_dev * dev_info ) ; 
/*--iio_device_register_trigger_consumer--*/
int iio_device_unregister_trigger_consumer ( struct iio_dev * dev_info ) ; 
/*--iio_device_unregister_trigger_consumer--*/
void iio_mark_sw_rb_in_use ( struct iio_ring_buffer * r ) ; 
/*--iio_mark_sw_rb_in_use--*/
void iio_unmark_sw_rb_in_use ( struct iio_ring_buffer * r ) ; 
/*--iio_unmark_sw_rb_in_use--*/
int iio_rip_sw_rb ( struct iio_ring_buffer * r , size_t count , u8 * * data , int * dead_offset ) ; 
/*--iio_rip_sw_rb--*/
int iio_store_to_sw_rb ( struct iio_ring_buffer * r , u8 * data , s64 timestamp ) ; 
/*--iio_store_to_sw_rb--*/
int iio_read_last_from_sw_rb ( struct iio_ring_buffer * r , unsigned char * data ) ; 
/*--iio_read_last_from_sw_rb--*/
int iio_request_update_sw_rb ( struct iio_ring_buffer * r ) ; 
/*--iio_request_update_sw_rb--*/
int iio_get_bpd_sw_rb ( struct iio_ring_buffer * r ) ; 
/*--iio_get_bpd_sw_rb--*/
int iio_set_bpd_sw_rb ( struct iio_ring_buffer * r , size_t bpd ) ; 
/*--iio_set_bpd_sw_rb--*/
int iio_get_length_sw_rb ( struct iio_ring_buffer * r ) ; 
/*--iio_get_length_sw_rb--*/
int iio_set_length_sw_rb ( struct iio_ring_buffer * r , int length ) ; 
/*--iio_set_length_sw_rb--*/
int iio_mark_update_needed_sw_rb ( struct iio_ring_buffer * r ) ; 
/*--iio_mark_update_needed_sw_rb--*/
struct iio_ring_buffer * iio_sw_rb_allocate ( struct iio_dev * indio_dev ) ; 
/*--iio_sw_rb_allocate--*/
void iio_sw_rb_free ( struct iio_ring_buffer * r ) ; 
/*--iio_sw_rb_free--*/
int line6_init_audio ( struct usb_line6 * line6 ) ; 
/*--line6_init_audio--*/
int line6_register_audio ( struct usb_line6 * line6 ) ; 
/*--line6_register_audio--*/
void line6_cleanup_audio ( struct usb_line6 * line6 ) ; 
/*--line6_cleanup_audio--*/
void unlink_wait_clear_audio_in_urbs ( struct snd_line6_pcm * line6pcm ) ; 
/*--unlink_wait_clear_audio_in_urbs--*/
int snd_line6_capture_trigger ( struct snd_pcm_substream * substream , int cmd ) ; 
/*--snd_line6_capture_trigger--*/
int create_audio_in_urbs ( struct snd_line6_pcm * line6pcm ) ; 
/*--create_audio_in_urbs--*/
int pod_create_files ( int firmware , int type , struct device * dev ) ; 
/*--pod_create_files--*/
void pod_remove_files ( int firmware , int type , struct device * dev ) ; 
/*--pod_remove_files--*/
int variax_create_files ( int firmware , int type , struct device * dev ) ; 
/*--variax_create_files--*/
void variax_remove_files ( int firmware , int type , struct device * dev ) ; 
/*--variax_remove_files--*/
int line6_send_raw_message ( struct usb_line6 * line6 , const char * buffer , int size ) ; 
/*--line6_send_raw_message--*/
int line6_send_raw_message_async ( struct usb_line6 * line6 , const char * buffer , int size ) ; 
/*--line6_send_raw_message_async--*/
int line6_send_sysex_message ( struct usb_line6 * line6 , const char * buffer , int size ) ; 
/*--line6_send_sysex_message--*/
char * line6_alloc_sysex_buffer ( struct usb_line6 * line6 , int code1 , int code2 , int size ) ; 
/*--line6_alloc_sysex_buffer--*/
int line6_send_program ( struct usb_line6 * line6 , int value ) ; 
/*--line6_send_program--*/
int line6_transmit_parameter ( struct usb_line6 * line6 , int param , int value ) ; 
/*--line6_transmit_parameter--*/
int line6_read_data ( struct usb_line6 * line6 , int address , void * data , size_t datalen ) ; 
/*--line6_read_data--*/
int line6_write_data ( struct usb_line6 * line6 , int address , void * data , size_t datalen ) ; 
/*--line6_write_data--*/
int line6_read_serial_number ( struct usb_line6 * line6 , int * serial_number ) ; 
/*--line6_read_serial_number--*/
ssize_t line6_nop_read ( struct device * dev , struct device_attribute * attr , char * buf ) ; 
/*--line6_nop_read--*/
ssize_t line6_nop_write ( struct device * dev , struct device_attribute * attr , const char * buf , size_t count ) ; 
/*--line6_nop_write--*/
void line6_dump_started ( struct line6_dump_request * l6dr , int dest ) ; 
/*--line6_dump_started--*/
void line6_invalidate_current ( struct line6_dump_request * l6dr ) ; 
/*--line6_invalidate_current--*/
void line6_dump_finished ( struct line6_dump_request * l6dr ) ; 
/*--line6_dump_finished--*/
int line6_dump_request_async ( struct line6_dump_request * l6dr , struct usb_line6 * line6 , int num ) ; 
/*--line6_dump_request_async--*/
void line6_startup_delayed ( struct line6_dump_request * l6dr , int seconds , void ( * function ) ( unsigned long ) , void * data ) ; 
/*--line6_startup_delayed--*/
int line6_wait_dump ( struct line6_dump_request * l6dr , int nonblock ) ; 
/*--line6_wait_dump--*/
int line6_dumpreq_initbuf ( struct line6_dump_request * l6dr , const void * buf , size_t len , int num ) ; 
/*--line6_dumpreq_initbuf--*/
int line6_dumpreq_init ( struct line6_dump_request * l6dr , const void * buf , size_t len ) ; 
/*--line6_dumpreq_init--*/
void line6_dumpreq_destructbuf ( struct line6_dump_request * l6dr , int num ) ; 
/*--line6_dumpreq_destructbuf--*/
void line6_dumpreq_destruct ( struct line6_dump_request * l6dr ) ; 
/*--line6_dumpreq_destruct--*/
void line6_midi_receive ( struct usb_line6 * line6 , unsigned char * data , int length ) ; 
/*--line6_midi_receive--*/
int line6_init_midi ( struct usb_line6 * line6 ) ; 
/*--line6_init_midi--*/
void midibuf_reset ( struct MidiBuffer * this ) ; 
/*--midibuf_reset--*/
int midibuf_init ( struct MidiBuffer * this , int size , int split ) ; 
/*--midibuf_init--*/
void midibuf_status ( struct MidiBuffer * this ) ; 
/*--midibuf_status--*/
int midibuf_bytes_free ( struct MidiBuffer * this ) ; 
/*--midibuf_bytes_free--*/
int midibuf_bytes_used ( struct MidiBuffer * this ) ; 
/*--midibuf_bytes_used--*/
int midibuf_write ( struct MidiBuffer * this , unsigned char * data , int length ) ; 
/*--midibuf_write--*/
int midibuf_read ( struct MidiBuffer * this , unsigned char * data , int length ) ; 
/*--midibuf_read--*/
int midibuf_ignore ( struct MidiBuffer * this , int length ) ; 
/*--midibuf_ignore--*/
int midibuf_skip_message ( struct MidiBuffer * this , unsigned short mask ) ; 
/*--midibuf_skip_message--*/
void midibuf_destroy ( struct MidiBuffer * this ) ; 
/*--midibuf_destroy--*/
int snd_line6_trigger ( struct snd_pcm_substream * substream , int cmd ) ; 
/*--snd_line6_trigger--*/
int line6_init_pcm ( struct usb_line6 * line6 , struct line6_pcm_properties * properties ) ; 
/*--line6_init_pcm--*/
int snd_line6_prepare ( struct snd_pcm_substream * substream ) ; 
/*--snd_line6_prepare--*/
void unlink_wait_clear_audio_out_urbs ( struct snd_line6_pcm * line6pcm ) ; 
/*--unlink_wait_clear_audio_out_urbs--*/
int snd_line6_playback_trigger ( struct snd_pcm_substream * substream , int cmd ) ; 
/*--snd_line6_playback_trigger--*/
int create_audio_out_urbs ( struct snd_line6_pcm * line6pcm ) ; 
/*--create_audio_out_urbs--*/
void pod_process_message ( struct usb_line6_pod * pod ) ; 
/*--pod_process_message--*/
void pod_midi_postprocess ( struct usb_line6_pod * pod , unsigned char * data , int length ) ; 
/*--pod_midi_postprocess--*/
void pod_transmit_parameter ( struct usb_line6_pod * pod , int param , int value ) ; 
/*--pod_transmit_parameter--*/
int pod_init ( struct usb_interface * interface , struct usb_line6_pod * pod ) ; 
/*--pod_init--*/
void pod_disconnect ( struct usb_interface * interface ) ; 
/*--pod_disconnect--*/
int toneport_init ( struct usb_interface * interface , struct usb_line6_toneport * toneport ) ; 
/*--toneport_init--*/
void toneport_disconnect ( struct usb_interface * interface ) ; 
/*--toneport_disconnect--*/
void variax_process_message ( struct usb_line6_variax * variax ) ; 
/*--variax_process_message--*/
int variax_init ( struct usb_interface * interface , struct usb_line6_variax * variax ) ; 
/*--variax_init--*/
void variax_disconnect ( struct usb_interface * interface ) ; 
/*--variax_disconnect--*/
void pin_to_bits ( int pin , unsigned char * d_val , unsigned char * c_val ) ; 
/*--pin_to_bits--*/
void panel_lcd_print ( char * s ) ; 
/*--panel_lcd_print--*/
void lcd_init ( void ) ; 
/*--lcd_init--*/
int panel_init ( void ) ; 
/*--panel_init--*/
void pohmelfs_inode_del_inode ( struct pohmelfs_sb * psb , struct pohmelfs_inode * pi ) ; 
/*--pohmelfs_inode_del_inode--*/
int pohmelfs_write_inode_create ( struct inode * inode , struct netfs_trans * trans ) ; 
/*--pohmelfs_write_inode_create--*/
int pohmelfs_write_create_inode ( struct pohmelfs_inode * pi ) ; 
/*--pohmelfs_write_create_inode--*/
int pohmelfs_remove_child ( struct pohmelfs_inode * pi , struct pohmelfs_name * n ) ; 
/*--pohmelfs_remove_child--*/
ssize_t pohmelfs_write ( struct file * file , const char * buf , size_t len , loff_t * ppos ) ; 
/*--pohmelfs_write--*/
int pohmelfs_setattr_raw ( struct inode * inode , struct iattr * attr ) ; 
/*--pohmelfs_setattr_raw--*/
int pohmelfs_setattr ( struct dentry * dentry , struct iattr * attr ) ; 
/*--pohmelfs_setattr--*/
void pohmelfs_fill_inode ( struct inode * inode , struct netfs_inode_info * info ) ; 
/*--pohmelfs_fill_inode--*/
int pohmelfs_meta_command_data ( struct pohmelfs_inode * pi , u64 id , unsigned int cmd_op , char * addon , unsigned int flags , netfs_trans_complete_t complete , void * priv , u64 start ) ; 
/*--pohmelfs_meta_command_data--*/
int pohmelfs_meta_command ( struct pohmelfs_inode * pi , unsigned int cmd_op , unsigned int flags , netfs_trans_complete_t complete , void * priv , u64 start ) ; 
/*--pohmelfs_meta_command--*/
int pohmelfs_copy_config ( struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_copy_config--*/
int pohmelfs_copy_crypto ( struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_copy_crypto--*/
int pohmelfs_config_check ( struct pohmelfs_config * config , int idx ) ; 
/*--pohmelfs_config_check--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) pohmelfs_config_init ( void ) ; 
/*--pohmelfs_config_init--*/
void pohmelfs_config_exit ( void ) ; 
/*--pohmelfs_config_exit--*/
struct pohmelfs_name * pohmelfs_search_hash ( struct pohmelfs_inode * pi , u32 hash ) ; 
/*--pohmelfs_search_hash--*/
void pohmelfs_free_names ( struct pohmelfs_inode * parent ) ; 
/*--pohmelfs_free_names--*/
void pohmelfs_name_del ( struct pohmelfs_inode * parent , struct pohmelfs_name * node ) ; 
/*--pohmelfs_name_del--*/
struct pohmelfs_inode * pohmelfs_new_inode ( struct pohmelfs_sb * psb , struct pohmelfs_inode * parent , struct qstr * str , struct netfs_inode_info * info , int link ) ; 
/*--pohmelfs_new_inode--*/
struct dentry * pohmelfs_lookup ( struct inode * dir , struct dentry * dentry , struct nameidata * nd ) ; 
/*--pohmelfs_lookup--*/
struct pohmelfs_inode * pohmelfs_create_entry_local ( struct pohmelfs_sb * psb , struct pohmelfs_inode * parent , struct qstr * str , u64 start , int mode ) ; 
/*--pohmelfs_create_entry_local--*/
int pohmelfs_data_recv_and_check ( struct netfs_state * st , void * data , unsigned int size ) ; 
/*--pohmelfs_data_recv_and_check--*/
int pohmelfs_data_lock_response ( struct netfs_state * st ) ; 
/*--pohmelfs_data_lock_response--*/
int netfs_state_init ( struct netfs_state * st ) ; 
/*--netfs_state_init--*/
void netfs_state_exit ( struct netfs_state * st ) ; 
/*--netfs_state_exit--*/
int pohmelfs_state_init_one ( struct pohmelfs_sb * psb , struct pohmelfs_config * conf ) ; 
/*--pohmelfs_state_init_one--*/
void pohmelfs_state_flush_transactions ( struct netfs_state * st ) ; 
/*--pohmelfs_state_flush_transactions--*/
int pohmelfs_state_init ( struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_state_init--*/
void pohmelfs_state_exit ( struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_state_exit--*/
void pohmelfs_switch_active ( struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_switch_active--*/
void pohmelfs_check_states ( struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_check_states--*/
int pohmelfs_construct_path_string ( struct pohmelfs_inode * pi , void * data , int len ) ; 
/*--pohmelfs_construct_path_string--*/
int pohmelfs_path_length ( struct pohmelfs_inode * pi ) ; 
/*--pohmelfs_path_length--*/
int netfs_trans_send ( struct netfs_trans * t , struct netfs_state * st ) ; 
/*--netfs_trans_send--*/
struct netfs_trans_dst * netfs_trans_search ( struct netfs_state * st , unsigned int gen ) ; 
/*--netfs_trans_search--*/
int netfs_trans_remove_nolock ( struct netfs_trans_dst * dst , struct netfs_state * st ) ; 
/*--netfs_trans_remove_nolock--*/
void netfs_trans_drop_dst ( struct netfs_trans_dst * dst ) ; 
/*--netfs_trans_drop_dst--*/
void netfs_trans_drop_dst_nostate ( struct netfs_trans_dst * dst ) ; 
/*--netfs_trans_drop_dst_nostate--*/
void netfs_trans_drop_trans ( struct netfs_trans * t , struct netfs_state * st ) ; 
/*--netfs_trans_drop_trans--*/
void netfs_trans_drop_last ( struct netfs_trans * t , struct netfs_state * st ) ; 
/*--netfs_trans_drop_last--*/
int netfs_trans_finish_send ( struct netfs_trans * t , struct pohmelfs_sb * psb ) ; 
/*--netfs_trans_finish_send--*/
int netfs_trans_finish ( struct netfs_trans * t , struct pohmelfs_sb * psb ) ; 
/*--netfs_trans_finish--*/
int netfs_trans_resend ( struct netfs_trans * t , struct pohmelfs_sb * psb ) ; 
/*--netfs_trans_resend--*/
void * netfs_trans_add ( struct netfs_trans * t , unsigned int size ) ; 
/*--netfs_trans_add--*/
void netfs_trans_free ( struct netfs_trans * t ) ; 
/*--netfs_trans_free--*/
struct netfs_trans * netfs_trans_alloc ( struct pohmelfs_sb * psb , unsigned int size , unsigned int flags , unsigned int nr ) ; 
/*--netfs_trans_alloc--*/
int netfs_trans_init ( void ) ; 
/*--netfs_trans_init--*/
void netfs_trans_exit ( void ) ; 
/*--netfs_trans_exit--*/
int pohmelfs_crypto_engine_init ( struct pohmelfs_crypto_engine * e , struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_crypto_engine_init--*/
void pohmelfs_crypto_engine_exit ( struct pohmelfs_crypto_engine * e ) ; 
/*--pohmelfs_crypto_engine_exit--*/
int pohmelfs_crypto_process_input_data ( struct pohmelfs_crypto_engine * e , u64 cmd_iv , void * data , struct page * page , unsigned int size ) ; 
/*--pohmelfs_crypto_process_input_data--*/
void pohmelfs_crypto_thread_make_ready ( struct pohmelfs_crypto_thread * th ) ; 
/*--pohmelfs_crypto_thread_make_ready--*/
void pohmelfs_crypto_exit ( struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_crypto_exit--*/
int pohmelfs_crypto_init ( struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_crypto_init--*/
int pohmelfs_trans_crypt ( struct netfs_trans * trans , struct pohmelfs_sb * psb ) ; 
/*--pohmelfs_trans_crypt--*/
int pohmelfs_crypto_process_input_page ( struct pohmelfs_crypto_engine * e , struct page * page , unsigned int size , u64 iv ) ; 
/*--pohmelfs_crypto_process_input_page--*/
int pohmelfs_data_lock ( struct pohmelfs_inode * pi , u64 start , u32 size , int type ) ; 
/*--pohmelfs_data_lock--*/
int pohmelfs_data_unlock ( struct pohmelfs_inode * pi , u64 start , u32 size , int type ) ; 
/*--pohmelfs_data_unlock--*/
struct pohmelfs_mcache * pohmelfs_mcache_search ( struct pohmelfs_sb * psb , u64 gen ) ; 
/*--pohmelfs_mcache_search--*/
void pohmelfs_mcache_remove_locked ( struct pohmelfs_sb * psb , struct pohmelfs_mcache * m ) ; 
/*--pohmelfs_mcache_remove_locked--*/
struct pohmelfs_mcache * pohmelfs_mcache_alloc ( struct pohmelfs_sb * psb , u64 start , unsigned int size , void * data ) ; 
/*--pohmelfs_mcache_alloc--*/
void pohmelfs_mcache_free ( struct pohmelfs_sb * psb , struct pohmelfs_mcache * m ) ; 
/*--pohmelfs_mcache_free--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) pohmelfs_mcache_init ( void ) ; 
/*--pohmelfs_mcache_init--*/
void pohmelfs_mcache_exit ( void ) ; 
/*--pohmelfs_mcache_exit--*/
int qt2_open ( struct tty_struct * tty , struct usb_serial_port * port ) ; 
/*--qt2_open--*/
int rar_get_address ( int rar_index , dma_addr_t * start , dma_addr_t * end ) ; 
/*--rar_get_address--*/
int rar_lock ( int rar_index ) ; 
/*--rar_lock--*/
int register_rar ( int num , int ( * callback ) ( unsigned long data ) , unsigned long data ) ; 
/*--register_rar--*/
void unregister_rar ( int num ) ; 
/*--unregister_rar--*/
void MD5_Init ( struct rt_md5_ctx_struc * pMD5_CTX ) ; 
/*--MD5_Init--*/
void MD5_Hash ( struct rt_md5_ctx_struc * pMD5_CTX ) ; 
/*--MD5_Hash--*/
void MD5_Append ( struct rt_md5_ctx_struc * pMD5_CTX , const u8 Message [ ] , u32 MessageLen ) ; 
/*--MD5_Append--*/
void MD5_End ( struct rt_md5_ctx_struc * pMD5_CTX , u8 DigestMessage [ ] ) ; 
/*--MD5_End--*/
void RT_MD5 ( const u8 Message [ ] , u32 MessageLen , u8 DigestMessage [ ] ) ; 
/*--RT_MD5--*/
void RT_SHA1_Init ( struct rt_sha1_ctx * pSHA_CTX ) ; 
/*--RT_SHA1_Init--*/
void SHA1_Hash ( struct rt_sha1_ctx * pSHA_CTX ) ; 
/*--SHA1_Hash--*/
void SHA1_Append ( struct rt_sha1_ctx * pSHA_CTX , const u8 Message [ ] , u32 MessageLen ) ; 
/*--SHA1_Append--*/
void SHA1_End ( struct rt_sha1_ctx * pSHA_CTX , u8 DigestMessage [ ] ) ; 
/*--SHA1_End--*/
void RT_SHA1 ( const u8 Message [ ] , u32 MessageLen , u8 DigestMessage [ ] ) ; 
/*--RT_SHA1--*/
void HMAC_SHA1 ( const u8 Key [ ] , u32 KeyLen , const u8 Message [ ] , u32 MessageLen , u8 MAC [ ] , u32 MACLen ) ; 
/*--HMAC_SHA1--*/
void HMAC_MD5 ( const u8 Key [ ] , u32 KeyLen , const u8 Message [ ] , u32 MessageLen , u8 MAC [ ] , u32 MACLen ) ; 
/*--HMAC_MD5--*/
int MlmeInit ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeInit--*/
void MlmeHandler ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeHandler--*/
void MlmeHalt ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeHalt--*/
void MlmeResetRalinkCounters ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeResetRalinkCounters--*/
void MlmePeriodicExec ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--MlmePeriodicExec--*/
BOOLEAN MlmeValidateSSID ( u8 * pSsid , u8 SsidLen ) ; 
/*--MlmeValidateSSID--*/
void MlmeSelectTxRateTable ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , u8 * * ppTable , u8 * pTableSize , u8 * pInitTxRateIdx ) ; 
/*--MlmeSelectTxRateTable--*/
void STAMlmePeriodicExec ( struct rt_rtmp_adapter * pAd ) ; 
/*--STAMlmePeriodicExec--*/
void LinkDownExec ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--LinkDownExec--*/
void MlmeAutoScan ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeAutoScan--*/
void MlmeAutoReconnectLastSSID ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeAutoReconnectLastSSID--*/
void MlmeCheckForRoaming ( struct rt_rtmp_adapter * pAd , unsigned long Now32 ) ; 
/*--MlmeCheckForRoaming--*/
BOOLEAN MlmeCheckForFastRoaming ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeCheckForFastRoaming--*/
void MlmeSetTxRate ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_rtmp_tx_rate_switch * pTxRate ) ; 
/*--MlmeSetTxRate--*/
void MlmeDynamicTxRateSwitching ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeDynamicTxRateSwitching--*/
void StaQuickResponeForRateUpExec ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--StaQuickResponeForRateUpExec--*/
void MlmeCheckPsmChange ( struct rt_rtmp_adapter * pAd , unsigned long Now32 ) ; 
/*--MlmeCheckPsmChange--*/
void MlmeSetPsmBit ( struct rt_rtmp_adapter * pAd , u16 psm ) ; 
/*--MlmeSetPsmBit--*/
void MlmeCalculateChannelQuality ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pMacEntry , unsigned long Now32 ) ; 
/*--MlmeCalculateChannelQuality--*/
void MlmeSetTxPreamble ( struct rt_rtmp_adapter * pAd , u16 TxPreamble ) ; 
/*--MlmeSetTxPreamble--*/
void UpdateBasicRateBitmap ( struct rt_rtmp_adapter * pAdapter ) ; 
/*--UpdateBasicRateBitmap--*/
void MlmeUpdateTxRates ( struct rt_rtmp_adapter * pAd , BOOLEAN bLinkUp , u8 apidx ) ; 
/*--MlmeUpdateTxRates--*/
void MlmeUpdateHtTxRates ( struct rt_rtmp_adapter * pAd , u8 apidx ) ; 
/*--MlmeUpdateHtTxRates--*/
void BATableInit ( struct rt_rtmp_adapter * pAd , struct rt_ba_table * Tab ) ; 
/*--BATableInit--*/
void MlmeRadioOff ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeRadioOff--*/
void MlmeRadioOn ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeRadioOn--*/
void BssTableInit ( struct rt_bss_table * Tab ) ; 
/*--BssTableInit--*/
unsigned long BssTableSearch ( struct rt_bss_table * Tab , u8 * pBssid , u8 Channel ) ; 
/*--BssTableSearch--*/
unsigned long BssSsidTableSearch ( struct rt_bss_table * Tab , u8 * pBssid , u8 * pSsid , u8 SsidLen , u8 Channel ) ; 
/*--BssSsidTableSearch--*/
unsigned long BssTableSearchWithSSID ( struct rt_bss_table * Tab , u8 * Bssid , u8 * pSsid , u8 SsidLen , u8 Channel ) ; 
/*--BssTableSearchWithSSID--*/
unsigned long BssSsidTableSearchBySSID ( struct rt_bss_table * Tab , u8 * pSsid , u8 SsidLen ) ; 
/*--BssSsidTableSearchBySSID--*/
void BssTableDeleteEntry ( struct rt_bss_table * Tab , u8 * pBssid , u8 Channel ) ; 
/*--BssTableDeleteEntry--*/
void BATableDeleteORIEntry ( struct rt_rtmp_adapter * pAd , struct rt_ba_ori_entry * pBAORIEntry ) ; 
/*--BATableDeleteORIEntry--*/
void BssEntrySet ( struct rt_rtmp_adapter * pAd , struct rt_bss_entry * pBss , u8 * pBssid , char Ssid [ ] , u8 SsidLen , u8 BssType , u16 BeaconPeriod , struct rt_cf_parm * pCfParm , u16 AtimWin , u16 CapabilityInfo , u8 SupRate [ ] , u8 SupRateLen , u8 ExtRate [ ] , u8 ExtRateLen , struct rt_ht_capability_ie * pHtCapability , struct rt_add_ht_info_ie * pAddHtInfo , u8 HtCapabilityLen , u8 AddHtInfoLen , u8 NewExtChanOffset , u8 Channel , char Rssi , LARGE_INTEGER TimeStamp , u8 CkipFlag , struct rt_edca_parm * pEdcaParm , struct rt_qos_capability_parm * pQosCapability , struct rt_qbss_load_parm * pQbssLoad , u16 LengthVIE , struct rt_ndis_802_11_variable_ies * pVIE ) ; 
/*--BssEntrySet--*/
unsigned long BssTableSetEntry ( struct rt_rtmp_adapter * pAd , struct rt_bss_table * Tab , u8 * pBssid , char Ssid [ ] , u8 SsidLen , u8 BssType , u16 BeaconPeriod , struct rt_cf_parm * CfParm , u16 AtimWin , u16 CapabilityInfo , u8 SupRate [ ] , u8 SupRateLen , u8 ExtRate [ ] , u8 ExtRateLen , struct rt_ht_capability_ie * pHtCapability , struct rt_add_ht_info_ie * pAddHtInfo , u8 HtCapabilityLen , u8 AddHtInfoLen , u8 NewExtChanOffset , u8 ChannelNo , char Rssi , LARGE_INTEGER TimeStamp , u8 CkipFlag , struct rt_edca_parm * pEdcaParm , struct rt_qos_capability_parm * pQosCapability , struct rt_qbss_load_parm * pQbssLoad , u16 LengthVIE , struct rt_ndis_802_11_variable_ies * pVIE ) ; 
/*--BssTableSetEntry--*/
void BssTableSsidSort ( struct rt_rtmp_adapter * pAd , struct rt_bss_table * OutTab , char Ssid [ ] , u8 SsidLen ) ; 
/*--BssTableSsidSort--*/
void BssTableSortByRssi ( struct rt_bss_table * OutTab ) ; 
/*--BssTableSortByRssi--*/
void BssCipherParse ( struct rt_bss_entry * pBss ) ; 
/*--BssCipherParse--*/
void MacAddrRandomBssid ( struct rt_rtmp_adapter * pAd , u8 * pAddr ) ; 
/*--MacAddrRandomBssid--*/
void MgtMacHeaderInit ( struct rt_rtmp_adapter * pAd , struct rt_header_802_11 * pHdr80211 , u8 SubType , u8 ToDs , u8 * pDA , u8 * pBssid ) ; 
/*--MgtMacHeaderInit--*/
unsigned long MakeOutgoingFrame ( u8 * Buffer , unsigned long * FrameLen , ... ) ; 
/*--MakeOutgoingFrame--*/
int MlmeQueueInit ( struct rt_mlme_queue * Queue ) ; 
/*--MlmeQueueInit--*/
BOOLEAN MlmeEnqueue ( struct rt_rtmp_adapter * pAd , unsigned long Machine , unsigned long MsgType , unsigned long MsgLen , void * Msg ) ; 
/*--MlmeEnqueue--*/
BOOLEAN MlmeEnqueueForRecv ( struct rt_rtmp_adapter * pAd , unsigned long Wcid , unsigned long TimeStampHigh , unsigned long TimeStampLow , u8 Rssi0 , u8 Rssi1 , u8 Rssi2 , unsigned long MsgLen , void * Msg , u8 Signal ) ; 
/*--MlmeEnqueueForRecv--*/
BOOLEAN MlmeDequeue ( struct rt_mlme_queue * Queue , struct rt_mlme_queue_elem * * Elem ) ; 
/*--MlmeDequeue--*/
void MlmeRestartStateMachine ( struct rt_rtmp_adapter * pAd ) ; 
/*--MlmeRestartStateMachine--*/
BOOLEAN MlmeQueueEmpty ( struct rt_mlme_queue * Queue ) ; 
/*--MlmeQueueEmpty--*/
BOOLEAN MlmeQueueFull ( struct rt_mlme_queue * Queue ) ; 
/*--MlmeQueueFull--*/
void MlmeQueueDestroy ( struct rt_mlme_queue * pQueue ) ; 
/*--MlmeQueueDestroy--*/
BOOLEAN MsgTypeSubst ( struct rt_rtmp_adapter * pAd , struct rt_frame_802_11 * pFrame , int * Machine , int * MsgType ) ; 
/*--MsgTypeSubst--*/
void StateMachineInit ( struct rt_state_machine * S , STATE_MACHINE_FUNC Trans [ ] , unsigned long StNr , unsigned long MsgNr , STATE_MACHINE_FUNC DefFunc , unsigned long InitState , unsigned long Base ) ; 
/*--StateMachineInit--*/
void StateMachineSetAction ( struct rt_state_machine * S , unsigned long St , unsigned long Msg , STATE_MACHINE_FUNC Func ) ; 
/*--StateMachineSetAction--*/
void StateMachinePerformAction ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * S , struct rt_mlme_queue_elem * Elem ) ; 
/*--StateMachinePerformAction--*/
void Drop ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--Drop--*/
void LfsrInit ( struct rt_rtmp_adapter * pAd , unsigned long Seed ) ; 
/*--LfsrInit--*/
u8 RandomByte ( struct rt_rtmp_adapter * pAd ) ; 
/*--RandomByte--*/
void RTMPCheckRates ( struct rt_rtmp_adapter * pAd , u8 SupRate [ ] , u8 * SupRateLen ) ; 
/*--RTMPCheckRates--*/
BOOLEAN RTMPCheckChannel ( struct rt_rtmp_adapter * pAd , u8 CentralChannel , u8 Channel ) ; 
/*--RTMPCheckChannel--*/
BOOLEAN RTMPCheckHt ( struct rt_rtmp_adapter * pAd , u8 Wcid , struct rt_ht_capability_ie * pHtCapability , struct rt_add_ht_info_ie * pAddHtInfo ) ; 
/*--RTMPCheckHt--*/
void RTMPUpdateMlmeRate ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPUpdateMlmeRate--*/
char RTMPMaxRssi ( struct rt_rtmp_adapter * pAd , char Rssi0 , char Rssi1 , char Rssi2 ) ; 
/*--RTMPMaxRssi--*/
void AsicEvaluateRxAnt ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicEvaluateRxAnt--*/
void AsicRxAntEvalTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--AsicRxAntEvalTimeout--*/
void APSDPeriodicExec ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--APSDPeriodicExec--*/
void RTMPSetPiggyBack ( struct rt_rtmp_adapter * pAd , BOOLEAN bPiggyBack ) ; 
/*--RTMPSetPiggyBack--*/
BOOLEAN RTMPCheckEntryEnableAutoRateSwitch ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry ) ; 
/*--RTMPCheckEntryEnableAutoRateSwitch--*/
BOOLEAN RTMPAutoRateSwitchCheck ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPAutoRateSwitchCheck--*/
u8 RTMPStaFixedTxMode ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry ) ; 
/*--RTMPStaFixedTxMode--*/
void RTMPUpdateLegacyTxSetting ( u8 fixed_tx_mode , struct rt_mac_table_entry * pEntry ) ; 
/*--RTMPUpdateLegacyTxSetting--*/
void AsicStaBbpTuning ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicStaBbpTuning--*/
void RTMPSetAGCInitValue ( struct rt_rtmp_adapter * pAd , u8 BandWidth ) ; 
/*--RTMPSetAGCInitValue--*/
void RTMPInitWepEngine ( struct rt_rtmp_adapter * pAd , u8 * pKey , u8 KeyId , u8 KeyLen , u8 * pDest ) ; 
/*--RTMPInitWepEngine--*/
void RTMPEncryptData ( struct rt_rtmp_adapter * pAd , u8 * pSrc , u8 * pDest , u32 Len ) ; 
/*--RTMPEncryptData--*/
BOOLEAN RTMPSoftDecryptWEP ( struct rt_rtmp_adapter * pAd , u8 * pData , unsigned long DataByteCnt , struct rt_cipher_key * pGroupKey ) ; 
/*--RTMPSoftDecryptWEP--*/
void ARCFOUR_INIT ( struct rt_arcfourcontext * Ctx , u8 * pKey , u32 KeyLen ) ; 
/*--ARCFOUR_INIT--*/
u8 ARCFOUR_BYTE ( struct rt_arcfourcontext * Ctx ) ; 
/*--ARCFOUR_BYTE--*/
void ARCFOUR_DECRYPT ( struct rt_arcfourcontext * Ctx , u8 * pDest , u8 * pSrc , u32 Len ) ; 
/*--ARCFOUR_DECRYPT--*/
void ARCFOUR_ENCRYPT ( struct rt_arcfourcontext * Ctx , u8 * pDest , u8 * pSrc , u32 Len ) ; 
/*--ARCFOUR_ENCRYPT--*/
void WPAARCFOUR_ENCRYPT ( struct rt_arcfourcontext * Ctx , u8 * pDest , u8 * pSrc , u32 Len ) ; 
/*--WPAARCFOUR_ENCRYPT--*/
u32 RTMP_CALC_FCS32 ( u32 Fcs , u8 * Cp , int Len ) ; 
/*--RTMP_CALC_FCS32--*/
void RTMPSetICV ( struct rt_rtmp_adapter * pAd , u8 * pDest ) ; 
/*--RTMPSetICV--*/
void ActionStateMachineInit ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * S , STATE_MACHINE_FUNC Trans [ ] ) ; 
/*--ActionStateMachineInit--*/
void MlmeADDBAAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeADDBAAction--*/
void MlmeDELBAAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeDELBAAction--*/
void MlmeQOSAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeQOSAction--*/
void MlmeDLSAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeDLSAction--*/
void MlmeInvalidAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeInvalidAction--*/
void PeerQOSAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerQOSAction--*/
void PeerBAAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerBAAction--*/
void PeerPublicAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerPublicAction--*/
void PeerRMAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerRMAction--*/
void PeerHTAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerHTAction--*/
void ORIBATimerTimeout ( struct rt_rtmp_adapter * pAd ) ; 
/*--ORIBATimerTimeout--*/
void SendRefreshBAR ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry ) ; 
/*--SendRefreshBAR--*/
void ActHeaderInit ( struct rt_rtmp_adapter * pAd , struct rt_header_802_11 * pHdr80211 , u8 * Addr1 , u8 * Addr2 , u8 * Addr3 ) ; 
/*--ActHeaderInit--*/
void BarHeaderInit ( struct rt_rtmp_adapter * pAd , struct rt_frame_bar * pCntlBar , u8 * pDA , u8 * pSA ) ; 
/*--BarHeaderInit--*/
void InsertActField ( struct rt_rtmp_adapter * pAd , u8 * pFrameBuf , unsigned long * pFrameLen , u8 Category , u8 ActCode ) ; 
/*--InsertActField--*/
int MiniportMMRequest ( struct rt_rtmp_adapter * pAd , u8 QueIdx , u8 * pData , u32 Length ) ; 
/*--MiniportMMRequest--*/
int MlmeHardTransmit ( struct rt_rtmp_adapter * pAd , u8 QueIdx , void * pPacket ) ; 
/*--MlmeHardTransmit--*/
int MlmeHardTransmitMgmtRing ( struct rt_rtmp_adapter * pAd , u8 QueIdx , void * pPacket ) ; 
/*--MlmeHardTransmitMgmtRing--*/
BOOLEAN RTMP_FillTxBlkInfo ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk ) ; 
/*--RTMP_FillTxBlkInfo--*/
BOOLEAN CanDoAggregateTransmit ( struct rt_rtmp_adapter * pAd , char * pPacket , struct rt_tx_blk * pTxBlk ) ; 
/*--CanDoAggregateTransmit--*/
void RTMPDeQueuePacket ( struct rt_rtmp_adapter * pAd , BOOLEAN bIntContext , u8 QIdx , u8 Max_Tx_Packets ) ; 
/*--RTMPDeQueuePacket--*/
u16 RTMPCalcDuration ( struct rt_rtmp_adapter * pAd , u8 Rate , unsigned long Size ) ; 
/*--RTMPCalcDuration--*/
void RTMPWriteTxWI ( struct rt_rtmp_adapter * pAd , struct rt_txwi * pOutTxWI , BOOLEAN FRAG , BOOLEAN CFACK , BOOLEAN InsTimestamp , BOOLEAN AMPDU , BOOLEAN Ack , BOOLEAN NSeq , u8 BASize , u8 WCID , unsigned long Length , u8 PID , u8 TID , u8 TxRate , u8 Txopmode , BOOLEAN CfAck , HTTRANSMIT_SETTING * pTransmit ) ; 
/*--RTMPWriteTxWI--*/
void RTMPWriteTxWI_Data ( struct rt_rtmp_adapter * pAd , struct rt_txwi * pTxWI , struct rt_tx_blk * pTxBlk ) ; 
/*--RTMPWriteTxWI_Data--*/
void RTMPWriteTxWI_Cache ( struct rt_rtmp_adapter * pAd , struct rt_txwi * pTxWI , struct rt_tx_blk * pTxBlk ) ; 
/*--RTMPWriteTxWI_Cache--*/
BOOLEAN TxFrameIsAggregatible ( struct rt_rtmp_adapter * pAd , u8 * pPrevAddr1 , u8 * p8023hdr ) ; 
/*--TxFrameIsAggregatible--*/
BOOLEAN PeerIsAggreOn ( struct rt_rtmp_adapter * pAd , unsigned long TxRate , struct rt_mac_table_entry * pMacEntry ) ; 
/*--PeerIsAggreOn--*/
struct rt_queue_header * RTMPCheckTxSwQueue ( struct rt_rtmp_adapter * pAd , u8 * pQueIdx ) ; 
/*--RTMPCheckTxSwQueue--*/
void RTMPSuspendMsduTransmission ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPSuspendMsduTransmission--*/
void RTMPResumeMsduTransmission ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPResumeMsduTransmission--*/
u32 deaggregate_AMSDU_announce ( struct rt_rtmp_adapter * pAd , void * pPacket , u8 * pData , unsigned long DataSize ) ; 
/*--deaggregate_AMSDU_announce--*/
u32 BA_Reorder_AMSDU_Annnounce ( struct rt_rtmp_adapter * pAd , void * pPacket ) ; 
/*--BA_Reorder_AMSDU_Annnounce--*/
struct rt_mac_table_entry * MacTableLookup ( struct rt_rtmp_adapter * pAd , u8 * pAddr ) ; 
/*--MacTableLookup--*/
struct rt_mac_table_entry * MacTableInsertEntry ( struct rt_rtmp_adapter * pAd , u8 * pAddr , u8 apidx , BOOLEAN CleanAll ) ; 
/*--MacTableInsertEntry--*/
BOOLEAN MacTableDeleteEntry ( struct rt_rtmp_adapter * pAd , u16 wcid , u8 * pAddr ) ; 
/*--MacTableDeleteEntry--*/
void MacTableReset ( struct rt_rtmp_adapter * pAd ) ; 
/*--MacTableReset--*/
void AssocParmFill ( struct rt_rtmp_adapter * pAd , struct rt_mlme_assoc_req * AssocReq , u8 * pAddr , u16 CapabilityInfo , unsigned long Timeout , u16 ListenIntv ) ; 
/*--AssocParmFill--*/
void DisassocParmFill ( struct rt_rtmp_adapter * pAd , struct rt_mlme_disassoc_req * DisassocReq , u8 * pAddr , u16 Reason ) ; 
/*--DisassocParmFill--*/
BOOLEAN RTMPCheckDHCPFrame ( struct rt_rtmp_adapter * pAd , void * pPacket ) ; 
/*--RTMPCheckDHCPFrame--*/
BOOLEAN RTMPCheckEtherType ( struct rt_rtmp_adapter * pAd , void * pPacket ) ; 
/*--RTMPCheckEtherType--*/
void Update_Rssi_Sample ( struct rt_rtmp_adapter * pAd , struct rt_rssi_sample * pRssi , struct rt_rxwi * pRxWI ) ; 
/*--Update_Rssi_Sample--*/
void Indicate_Legacy_Packet ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--Indicate_Legacy_Packet--*/
void CmmRxnonRalinkFrameIndicate ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--CmmRxnonRalinkFrameIndicate--*/
void CmmRxRalinkFrameIndicate ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--CmmRxRalinkFrameIndicate--*/
void * RTMPDeFragmentDataFrame ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk ) ; 
/*--RTMPDeFragmentDataFrame--*/
void Indicate_AMSDU_Packet ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--Indicate_AMSDU_Packet--*/
void Indicate_EAPOL_Packet ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--Indicate_EAPOL_Packet--*/
void ReSyncBeaconTime ( struct rt_rtmp_adapter * pAd ) ; 
/*--ReSyncBeaconTime--*/
int RTMPAllocAdapterBlock ( void * handle , struct rt_rtmp_adapter * * ppAdapter ) ; 
/*--RTMPAllocAdapterBlock--*/
void RTMPReadTxPwrPerRate ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPReadTxPwrPerRate--*/
void RTMPReadChannelPwr ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPReadChannelPwr--*/
int NICReadRegParameters ( struct rt_rtmp_adapter * pAd , void * WrapperConfigurationContext ) ; 
/*--NICReadRegParameters--*/
void NICReadEEPROMParameters ( struct rt_rtmp_adapter * pAd , u8 * mac_addr ) ; 
/*--NICReadEEPROMParameters--*/
void NICInitAsicFromEEPROM ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICInitAsicFromEEPROM--*/
int NICInitializeAdapter ( struct rt_rtmp_adapter * pAd , BOOLEAN bHardReset ) ; 
/*--NICInitializeAdapter--*/
int NICInitializeAsic ( struct rt_rtmp_adapter * pAd , BOOLEAN bHardReset ) ; 
/*--NICInitializeAsic--*/
void NICIssueReset ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICIssueReset--*/
BOOLEAN NICCheckForHang ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICCheckForHang--*/
void NICUpdateFifoStaCounters ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICUpdateFifoStaCounters--*/
void NICUpdateRawCounters ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICUpdateRawCounters--*/
void NICResetFromError ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICResetFromError--*/
int NICLoadFirmware ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICLoadFirmware--*/
void NICEraseFirmware ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICEraseFirmware--*/
int NICLoadRateSwitchingParams ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICLoadRateSwitchingParams--*/
unsigned long RTMPCompareMemory ( void * pSrc1 , void * pSrc2 , unsigned long Length ) ; 
/*--RTMPCompareMemory--*/
void RTMPZeroMemory ( void * pSrc , unsigned long Length ) ; 
/*--RTMPZeroMemory--*/
void RTMPMoveMemory ( void * pDest , void * pSrc , unsigned long Length ) ; 
/*--RTMPMoveMemory--*/
void UserCfgInit ( struct rt_rtmp_adapter * pAd ) ; 
/*--UserCfgInit--*/
void AtoH ( char * src , u8 * dest , int destlen ) ; 
/*--AtoH--*/
void RTMPInitTimer ( struct rt_rtmp_adapter * pAd , struct rt_ralink_timer * pTimer , void * pTimerFunc , void * pData , BOOLEAN Repeat ) ; 
/*--RTMPInitTimer--*/
void RTMPSetTimer ( struct rt_ralink_timer * pTimer , unsigned long Value ) ; 
/*--RTMPSetTimer--*/
void RTMPModTimer ( struct rt_ralink_timer * pTimer , unsigned long Value ) ; 
/*--RTMPModTimer--*/
void RTMPCancelTimer ( struct rt_ralink_timer * pTimer , BOOLEAN * pCancelled ) ; 
/*--RTMPCancelTimer--*/
void RTMPSetLED ( struct rt_rtmp_adapter * pAd , u8 Status ) ; 
/*--RTMPSetLED--*/
void RTMPSetSignalLED ( struct rt_rtmp_adapter * pAd , NDIS_802_11_RSSI Dbm ) ; 
/*--RTMPSetSignalLED--*/
void RTMPEnableRxTx ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPEnableRxTx--*/
void CfgInitHook ( struct rt_rtmp_adapter * pAd ) ; 
/*--CfgInitHook--*/
int rt28xx_init ( struct rt_rtmp_adapter * pAd , char * pDefaultMac , char * pHostName ) ; 
/*--rt28xx_init--*/
int RtmpRaDevCtrlInit ( struct rt_rtmp_adapter * pAd , RTMP_INF_TYPE infType ) ; 
/*--RtmpRaDevCtrlInit--*/
BOOLEAN RtmpRaDevCtrlExit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpRaDevCtrlExit--*/
struct net_device * get_netdev_from_bssid ( struct rt_rtmp_adapter * pAd , u8 FromWhichBSSID ) ; 
/*--get_netdev_from_bssid--*/
unsigned long RTMPTkipGetUInt32 ( u8 * pMICKey ) ; 
/*--RTMPTkipGetUInt32--*/
void RTMPTkipPutUInt32 ( u8 * pDst , unsigned long val ) ; 
/*--RTMPTkipPutUInt32--*/
void RTMPTkipSetMICKey ( struct rt_tkip_key_info * pTkip , u8 * pMICKey ) ; 
/*--RTMPTkipSetMICKey--*/
void RTMPTkipAppendByte ( struct rt_tkip_key_info * pTkip , u8 uChar ) ; 
/*--RTMPTkipAppendByte--*/
void RTMPTkipAppend ( struct rt_tkip_key_info * pTkip , u8 * pSrc , u32 nBytes ) ; 
/*--RTMPTkipAppend--*/
void RTMPTkipGetMIC ( struct rt_tkip_key_info * pTkip ) ; 
/*--RTMPTkipGetMIC--*/
void RTMPInitTkipEngine ( struct rt_rtmp_adapter * pAd , u8 * pKey , u8 KeyId , u8 * pTA , u8 * pMICKey , u8 * pTSC , unsigned long * pIV16 , unsigned long * pIV32 ) ; 
/*--RTMPInitTkipEngine--*/
void RTMPInitMICEngine ( struct rt_rtmp_adapter * pAd , u8 * pKey , u8 * pDA , u8 * pSA , u8 UserPriority , u8 * pMICKey ) ; 
/*--RTMPInitMICEngine--*/
BOOLEAN RTMPTkipCompareMICValue ( struct rt_rtmp_adapter * pAd , u8 * pSrc , u8 * pDA , u8 * pSA , u8 * pMICKey , u8 UserPriority , u32 Len ) ; 
/*--RTMPTkipCompareMICValue--*/
void RTMPCalculateMICValue ( struct rt_rtmp_adapter * pAd , void * pPacket , u8 * pEncap , struct rt_cipher_key * pKey , u8 apidx ) ; 
/*--RTMPCalculateMICValue--*/
u32 tkip_sbox ( u32 index ) ; 
/*--tkip_sbox--*/
u32 rotr1 ( u32 a ) ; 
/*--rotr1--*/
void RTMPTkipMixKey ( u8 * key , u8 * ta , unsigned long pnl , unsigned long pnh , u8 * rc4key , u32 * p1k ) ; 
/*--RTMPTkipMixKey--*/
BOOLEAN RTMPSoftDecryptTKIP ( struct rt_rtmp_adapter * pAd , u8 * pData , unsigned long DataByteCnt , u8 UserPriority , struct rt_cipher_key * pWpaKey ) ; 
/*--RTMPSoftDecryptTKIP--*/
void xor_32 ( u8 * a , u8 * b , u8 * out ) ; 
/*--xor_32--*/
void xor_128 ( u8 * a , u8 * b , u8 * out ) ; 
/*--xor_128--*/
u8 RTMPCkipSbox ( u8 a ) ; 
/*--RTMPCkipSbox--*/
void next_key ( u8 * key , int round ) ; 
/*--next_key--*/
void byte_sub ( u8 * in , u8 * out ) ; 
/*--byte_sub--*/
void bitwise_xor ( unsigned char * ina , unsigned char * inb , unsigned char * out ) ; 
/*--bitwise_xor--*/
void shift_row ( u8 * in , u8 * out ) ; 
/*--shift_row--*/
void mix_column ( u8 * in , u8 * out ) ; 
/*--mix_column--*/
void construct_mic_header1 ( unsigned char * mic_header1 , int header_length , unsigned char * mpdu ) ; 
/*--construct_mic_header1--*/
void construct_mic_header2 ( unsigned char * mic_header2 , unsigned char * mpdu , int a4_exists , int qc_exists ) ; 
/*--construct_mic_header2--*/
void construct_mic_iv ( unsigned char * mic_iv , int qc_exists , int a4_exists , unsigned char * mpdu , unsigned int payload_length , unsigned char * pn_vector ) ; 
/*--construct_mic_iv--*/
void aes128k128d ( unsigned char * key , unsigned char * data , unsigned char * ciphertext ) ; 
/*--aes128k128d--*/
void construct_ctr_preload ( unsigned char * ctr_preload , int a4_exists , int qc_exists , unsigned char * mpdu , unsigned char * pn_vector , int c ) ; 
/*--construct_ctr_preload--*/
BOOLEAN RTMPSoftDecryptAES ( struct rt_rtmp_adapter * pAd , u8 * pData , unsigned long DataByteCnt , struct rt_cipher_key * pWpaKey ) ; 
/*--RTMPSoftDecryptAES--*/
int rt_aes_set_key ( struct aes_context * ctx , unsigned char * key , int nbits ) ; 
/*--rt_aes_set_key--*/
void rt_aes_encrypt ( struct aes_context * ctx , unsigned char input [ 16 ] , unsigned char output [ 16 ] ) ; 
/*--rt_aes_encrypt--*/
void rt_aes_decrypt ( struct aes_context * ctx , unsigned char input [ 16 ] , unsigned char output [ 16 ] ) ; 
/*--rt_aes_decrypt--*/
void AES_GTK_KEY_WRAP ( u8 * key , u8 * plaintext , u32 p_len , u8 * ciphertext ) ; 
/*--AES_GTK_KEY_WRAP--*/
void AES_GTK_KEY_UNWRAP ( u8 * key , u8 * plaintext , u32 c_len , u8 * ciphertext ) ; 
/*--AES_GTK_KEY_UNWRAP--*/
void BuildChannelList ( struct rt_rtmp_adapter * pAd ) ; 
/*--BuildChannelList--*/
u8 FirstChannel ( struct rt_rtmp_adapter * pAd ) ; 
/*--FirstChannel--*/
u8 NextChannel ( struct rt_rtmp_adapter * pAd , u8 channel ) ; 
/*--NextChannel--*/
void ChangeToCellPowerLimit ( struct rt_rtmp_adapter * pAd , u8 AironetCellPowerLimit ) ; 
/*--ChangeToCellPowerLimit--*/
char ConvertToRssi ( struct rt_rtmp_adapter * pAd , char Rssi , u8 RssiNumber ) ; 
/*--ConvertToRssi--*/
void ScanNextChannel ( struct rt_rtmp_adapter * pAd ) ; 
/*--ScanNextChannel--*/
void MgtProbReqMacHeaderInit ( struct rt_rtmp_adapter * pAd , struct rt_header_802_11 * pHdr80211 , u8 SubType , u8 ToDs , u8 * pDA , u8 * pBssid ) ; 
/*--MgtProbReqMacHeaderInit--*/
int RtmpChipOpsEepromHook ( struct rt_rtmp_adapter * pAd , int infType ) ; 
/*--RtmpChipOpsEepromHook--*/
BOOLEAN MlmeAddBAReqSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 * pAddr2 ) ; 
/*--MlmeAddBAReqSanity--*/
BOOLEAN MlmeDelBAReqSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen ) ; 
/*--MlmeDelBAReqSanity--*/
BOOLEAN PeerAddBAReqActionSanity ( struct rt_rtmp_adapter * pAd , void * pMsg , unsigned long MsgLen , u8 * pAddr2 ) ; 
/*--PeerAddBAReqActionSanity--*/
BOOLEAN PeerAddBARspActionSanity ( struct rt_rtmp_adapter * pAd , void * pMsg , unsigned long MsgLen ) ; 
/*--PeerAddBARspActionSanity--*/
BOOLEAN PeerDelBAActionSanity ( struct rt_rtmp_adapter * pAd , u8 Wcid , void * pMsg , unsigned long MsgLen ) ; 
/*--PeerDelBAActionSanity--*/
BOOLEAN PeerBeaconAndProbeRspSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 MsgChannel , u8 * pAddr2 , u8 * pBssid , char Ssid [ ] , u8 * pSsidLen , u8 * pBssType , u16 * pBeaconPeriod , u8 * pChannel , u8 * pNewChannel , LARGE_INTEGER * pTimestamp , struct rt_cf_parm * pCfParm , u16 * pAtimWin , u16 * pCapabilityInfo , u8 * pErp , u8 * pDtimCount , u8 * pDtimPeriod , u8 * pBcastFlag , u8 * pMessageToMe , u8 SupRate [ ] , u8 * pSupRateLen , u8 ExtRate [ ] , u8 * pExtRateLen , u8 * pCkipFlag , u8 * pAironetCellPowerLimit , struct rt_edca_parm * pEdcaParm , struct rt_qbss_load_parm * pQbssLoad , struct rt_qos_capability_parm * pQosCapability , unsigned long * pRalinkIe , u8 * pHtCapabilityLen , u8 * pPreNHtCapabilityLen , struct rt_ht_capability_ie * pHtCapability , u8 * AddHtInfoLen , struct rt_add_ht_info_ie * AddHtInfo , u8 * NewExtChannelOffset , u16 * LengthVIE , struct rt_ndis_802_11_variable_ies * pVIE ) ; 
/*--PeerBeaconAndProbeRspSanity--*/
BOOLEAN MlmeScanReqSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 * pBssType , char Ssid [ ] , u8 * pSsidLen , u8 * pScanType ) ; 
/*--MlmeScanReqSanity--*/
u8 ChannelSanity ( struct rt_rtmp_adapter * pAd , u8 channel ) ; 
/*--ChannelSanity--*/
BOOLEAN PeerDeauthSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 * pAddr2 , u16 * pReason ) ; 
/*--PeerDeauthSanity--*/
BOOLEAN PeerAuthSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 * pAddr , u16 * pAlg , u16 * pSeq , u16 * pStatus , char * pChlgText ) ; 
/*--PeerAuthSanity--*/
BOOLEAN MlmeAuthReqSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 * pAddr , unsigned long * pTimeout , u16 * pAlg ) ; 
/*--MlmeAuthReqSanity--*/
BOOLEAN MlmeAssocReqSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 * pApAddr , u16 * pCapabilityInfo , unsigned long * pTimeout , u16 * pListenIntv ) ; 
/*--MlmeAssocReqSanity--*/
BOOLEAN PeerDisassocSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 * pAddr2 , u16 * pReason ) ; 
/*--PeerDisassocSanity--*/
NDIS_802_11_NETWORK_TYPE NetworkTypeInUseSanity ( struct rt_bss_entry * pBss ) ; 
/*--NetworkTypeInUseSanity--*/
BOOLEAN PeerWpaMessageSanity ( struct rt_rtmp_adapter * pAd , struct rt_eapol_packet * pMsg , unsigned long MsgLen , u8 MsgType , struct rt_mac_table_entry * pEntry ) ; 
/*--PeerWpaMessageSanity--*/
void RTMPSetDesiredRates ( struct rt_rtmp_adapter * pAdapter , long Rates ) ; 
/*--RTMPSetDesiredRates--*/
void RTMPWPARemoveAllKeys ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPWPARemoveAllKeys--*/
void RTMPSetPhyMode ( struct rt_rtmp_adapter * pAd , unsigned long phymode ) ; 
/*--RTMPSetPhyMode--*/
void RTMPSetHT ( struct rt_rtmp_adapter * pAd , struct rt_oid_set_ht_phymode * pHTPhyMode ) ; 
/*--RTMPSetHT--*/
void RTMPSetIndividualHT ( struct rt_rtmp_adapter * pAd , u8 apidx ) ; 
/*--RTMPSetIndividualHT--*/
void RTMPUpdateHTIE ( struct rt_ht_capability * pRtHt , u8 * pMcsSet , struct rt_ht_capability_ie * pHtCapability , struct rt_add_ht_info_ie * pAddHtInfo ) ; 
/*--RTMPUpdateHTIE--*/
void RTMPAddWcidAttributeEntry ( struct rt_rtmp_adapter * pAd , u8 BssIdx , u8 KeyIdx , u8 CipherAlg , struct rt_mac_table_entry * pEntry ) ; 
/*--RTMPAddWcidAttributeEntry--*/
char * GetEncryptType ( char enc ) ; 
/*--GetEncryptType--*/
char * GetAuthMode ( char auth ) ; 
/*--GetAuthMode--*/
int SetCommonHT ( struct rt_rtmp_adapter * pAd ) ; 
/*--SetCommonHT--*/
char * RTMPGetRalinkEncryModeStr ( u16 encryMode ) ; 
/*--RTMPGetRalinkEncryModeStr--*/
char * GetPhyMode ( int Mode ) ; 
/*--GetPhyMode--*/
char * GetBW ( int BW ) ; 
/*--GetBW--*/
int RT_CfgSetCountryRegion ( struct rt_rtmp_adapter * pAd , char * arg , int band ) ; 
/*--RT_CfgSetCountryRegion--*/
int RT_CfgSetWirelessMode ( struct rt_rtmp_adapter * pAd , char * arg ) ; 
/*--RT_CfgSetWirelessMode--*/
int RT_CfgSetShortSlot ( struct rt_rtmp_adapter * pAd , char * arg ) ; 
/*--RT_CfgSetShortSlot--*/
int RT_CfgSetWepKey ( struct rt_rtmp_adapter * pAd , char * keyString , struct rt_cipher_key * pSharedKey , int keyIdx ) ; 
/*--RT_CfgSetWepKey--*/
int RT_CfgSetWPAPSKKey ( struct rt_rtmp_adapter * pAd , char * keyString , u8 * pHashStr , int hashStrLen , u8 * pPMKBuf ) ; 
/*--RT_CfgSetWPAPSKKey--*/
void WpaStateMachineInit ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * S , STATE_MACHINE_FUNC Trans [ ] ) ; 
/*--WpaStateMachineInit--*/
void WpaEAPPacketAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--WpaEAPPacketAction--*/
void WpaEAPOLASFAlertAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--WpaEAPOLASFAlertAction--*/
void WpaEAPOLLogoffAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--WpaEAPOLLogoffAction--*/
void WpaEAPOLStartAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--WpaEAPOLStartAction--*/
void WpaEAPOLKeyAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--WpaEAPOLKeyAction--*/
void RTMPToWirelessSta ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , u8 * pHeader802_3 , u32 HdrLen , u8 * pData , u32 DataLen , BOOLEAN bClearFrame ) ; 
/*--RTMPToWirelessSta--*/
void WPAStart4WayHS ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , unsigned long TimeInterval ) ; 
/*--WPAStart4WayHS--*/
void PeerPairMsg1Action ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerPairMsg1Action--*/
void PeerPairMsg2Action ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerPairMsg2Action--*/
void PeerPairMsg3Action ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerPairMsg3Action--*/
void PeerPairMsg4Action ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerPairMsg4Action--*/
void WPAStart2WayGroupHS ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry ) ; 
/*--WPAStart2WayGroupHS--*/
void PeerGroupMsg1Action ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerGroupMsg1Action--*/
void PeerGroupMsg2Action ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , void * Msg , u32 MsgLen ) ; 
/*--PeerGroupMsg2Action--*/
BOOLEAN WpaMsgTypeSubst ( u8 EAPType , int * MsgType ) ; 
/*--WpaMsgTypeSubst--*/
void PRF ( u8 * key , int key_len , u8 * prefix , int prefix_len , u8 * data , int data_len , u8 * output , int len ) ; 
/*--PRF--*/
int PasswordHash ( char * password , u8 * ssid , int ssidlength , u8 * output ) ; 
/*--PasswordHash--*/
void WpaDerivePTK ( struct rt_rtmp_adapter * pAd , u8 * PMK , u8 * ANonce , u8 * AA , u8 * SNonce , u8 * SA , u8 * output , u32 len ) ; 
/*--WpaDerivePTK--*/
void GenRandom ( struct rt_rtmp_adapter * pAd , u8 * macAddr , u8 * random ) ; 
/*--GenRandom--*/
void RTMPMakeRSNIE ( struct rt_rtmp_adapter * pAd , u32 AuthMode , u32 WepStatus , u8 apidx ) ; 
/*--RTMPMakeRSNIE--*/
BOOLEAN RTMPCheckWPAframe ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , u8 * pData , unsigned long DataByteCount , u8 FromWhichBSSID ) ; 
/*--RTMPCheckWPAframe--*/
char * GetEapolMsgType ( char msg ) ; 
/*--GetEapolMsgType--*/
BOOLEAN RTMPCheckRSNIE ( struct rt_rtmp_adapter * pAd , u8 * pData , u8 DataLen , struct rt_mac_table_entry * pEntry , u8 * Offset ) ; 
/*--RTMPCheckRSNIE--*/
BOOLEAN RTMPParseEapolKeyData ( struct rt_rtmp_adapter * pAd , u8 * pKeyData , u8 KeyDataLen , u8 GroupKeyIndex , u8 MsgType , BOOLEAN bWPA2 , struct rt_mac_table_entry * pEntry ) ; 
/*--RTMPParseEapolKeyData--*/
void ConstructEapolMsg ( struct rt_mac_table_entry * pEntry , u8 GroupKeyWepStatus , u8 MsgType , u8 DefaultKeyIdx , u8 * KeyNonce , u8 * TxRSC , u8 * GTK , u8 * RSNIE , u8 RSNIE_Len , struct rt_eapol_packet * pMsg ) ; 
/*--ConstructEapolMsg--*/
void ConstructEapolKeyData ( struct rt_mac_table_entry * pEntry , u8 GroupKeyWepStatus , u8 keyDescVer , u8 MsgType , u8 DefaultKeyIdx , u8 * GTK , u8 * RSNIE , u8 RSNIE_LEN , struct rt_eapol_packet * pMsg ) ; 
/*--ConstructEapolKeyData--*/
int RTMPSoftDecryptBroadCastData ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , NDIS_802_11_ENCRYPTION_STATUS GroupCipher , struct rt_cipher_key * pShard_key ) ; 
/*--RTMPSoftDecryptBroadCastData--*/
u8 * GetSuiteFromRSNIE ( u8 * rsnie , u32 rsnie_len , u8 type , u8 * count ) ; 
/*--GetSuiteFromRSNIE--*/
void WpaShowAllsuite ( u8 * rsnie , u32 rsnie_len ) ; 
/*--WpaShowAllsuite--*/
void RTMPInsertRSNIE ( u8 * pFrameBuf , unsigned long * pFrameLen , u8 * rsnie_ptr , u8 rsnie_len , u8 * pmkid_ptr , u8 pmkid_len ) ; 
/*--RTMPInsertRSNIE--*/
BOOLEAN RadarChannelCheck ( struct rt_rtmp_adapter * pAd , u8 Ch ) ; 
/*--RadarChannelCheck--*/
char RTMP_GetTxPwr ( struct rt_rtmp_adapter * pAd , HTTRANSMIT_SETTING HTTxMode ) ; 
/*--RTMP_GetTxPwr--*/
void MeasureReqTabInit ( struct rt_rtmp_adapter * pAd ) ; 
/*--MeasureReqTabInit--*/
void MeasureReqTabExit ( struct rt_rtmp_adapter * pAd ) ; 
/*--MeasureReqTabExit--*/
struct rt_measure_req_entry * MeasureReqLookUp ( struct rt_rtmp_adapter * pAd , u8 DialogToken ) ; 
/*--MeasureReqLookUp--*/
struct rt_measure_req_entry * MeasureReqInsert ( struct rt_rtmp_adapter * pAd , u8 DialogToken ) ; 
/*--MeasureReqInsert--*/
void MeasureReqDelete ( struct rt_rtmp_adapter * pAd , u8 DialogToken ) ; 
/*--MeasureReqDelete--*/
void TpcReqTabInit ( struct rt_rtmp_adapter * pAd ) ; 
/*--TpcReqTabInit--*/
void TpcReqTabExit ( struct rt_rtmp_adapter * pAd ) ; 
/*--TpcReqTabExit--*/
void InsertChannelRepIE ( struct rt_rtmp_adapter * pAd , u8 * pFrameBuf , unsigned long * pFrameLen , char * pCountry , u8 RegulatoryClass ) ; 
/*--InsertChannelRepIE--*/
void InsertDialogToken ( struct rt_rtmp_adapter * pAd , u8 * pFrameBuf , unsigned long * pFrameLen , u8 DialogToken ) ; 
/*--InsertDialogToken--*/
void InsertTpcReportIE ( struct rt_rtmp_adapter * pAd , u8 * pFrameBuf , unsigned long * pFrameLen , u8 TxPwr , u8 LinkMargin ) ; 
/*--InsertTpcReportIE--*/
void MakeMeasurementReqFrame ( struct rt_rtmp_adapter * pAd , u8 * pOutBuffer , unsigned long * pFrameLen , u8 TotalLen , u8 Category , u8 Action , u8 MeasureToken , u8 MeasureReqMode , u8 MeasureReqType , u8 NumOfRepetitions ) ; 
/*--MakeMeasurementReqFrame--*/
void EnqueueMeasurementRep ( struct rt_rtmp_adapter * pAd , u8 * pDA , u8 DialogToken , u8 MeasureToken , u8 MeasureReqMode , u8 MeasureReqType , u8 ReportInfoLen , u8 * pReportInfo ) ; 
/*--EnqueueMeasurementRep--*/
void EnqueueTPCReq ( struct rt_rtmp_adapter * pAd , u8 * pDA , u8 DialogToken ) ; 
/*--EnqueueTPCReq--*/
void EnqueueTPCRep ( struct rt_rtmp_adapter * pAd , u8 * pDA , u8 DialogToken , u8 TxPwr , u8 LinkMargin ) ; 
/*--EnqueueTPCRep--*/
void EnqueueChSwAnn ( struct rt_rtmp_adapter * pAd , u8 * pDA , u8 ChSwMode , u8 NewCh ) ; 
/*--EnqueueChSwAnn--*/
void NotifyChSwAnnToPeerAPs ( struct rt_rtmp_adapter * pAd , u8 * pRA , u8 * pTA , u8 ChSwMode , u8 Channel ) ; 
/*--NotifyChSwAnnToPeerAPs--*/
void PeerSpectrumAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerSpectrumAction--*/
int Set_MeasureReq_Proc ( struct rt_rtmp_adapter * pAd , char * arg ) ; 
/*--Set_MeasureReq_Proc--*/
int Set_TpcReq_Proc ( struct rt_rtmp_adapter * pAd , char * arg ) ; 
/*--Set_TpcReq_Proc--*/
void rtmp_timer_MlmePeriodicExec ( unsigned long data ) ; 
/*--rtmp_timer_MlmePeriodicExec--*/
void rtmp_timer_AsicRxAntEvalTimeout ( unsigned long data ) ; 
/*--rtmp_timer_AsicRxAntEvalTimeout--*/
void rtmp_timer_APSDPeriodicExec ( unsigned long data ) ; 
/*--rtmp_timer_APSDPeriodicExec--*/
void rtmp_timer_AsicRfTuningExec ( unsigned long data ) ; 
/*--rtmp_timer_AsicRfTuningExec--*/
void rtmp_timer_BeaconTimeout ( unsigned long data ) ; 
/*--rtmp_timer_BeaconTimeout--*/
void rtmp_timer_ScanTimeout ( unsigned long data ) ; 
/*--rtmp_timer_ScanTimeout--*/
void rtmp_timer_AuthTimeout ( unsigned long data ) ; 
/*--rtmp_timer_AuthTimeout--*/
void rtmp_timer_AssocTimeout ( unsigned long data ) ; 
/*--rtmp_timer_AssocTimeout--*/
void rtmp_timer_ReassocTimeout ( unsigned long data ) ; 
/*--rtmp_timer_ReassocTimeout--*/
void rtmp_timer_DisassocTimeout ( unsigned long data ) ; 
/*--rtmp_timer_DisassocTimeout--*/
void rtmp_timer_LinkDownExec ( unsigned long data ) ; 
/*--rtmp_timer_LinkDownExec--*/
void rtmp_timer_StaQuickResponeForRateUpExec ( unsigned long data ) ; 
/*--rtmp_timer_StaQuickResponeForRateUpExec--*/
void rtmp_timer_WpaDisassocApAndBlockAssoc ( unsigned long data ) ; 
/*--rtmp_timer_WpaDisassocApAndBlockAssoc--*/
void rtmp_timer_PsPollWakeExec ( unsigned long data ) ; 
/*--rtmp_timer_PsPollWakeExec--*/
void rtmp_timer_RadioOnExec ( unsigned long data ) ; 
/*--rtmp_timer_RadioOnExec--*/
void BuildChannelListEx ( struct rt_rtmp_adapter * pAd ) ; 
/*--BuildChannelListEx--*/
void BuildBeaconChList ( struct rt_rtmp_adapter * pAd , u8 * pBuf , unsigned long * pBufLen ) ; 
/*--BuildBeaconChList--*/
void N_ChannelCheck ( struct rt_rtmp_adapter * pAd ) ; 
/*--N_ChannelCheck--*/
void N_SetCenCh ( struct rt_rtmp_adapter * pAd ) ; 
/*--N_SetCenCh--*/
u8 GetCuntryMaxTxPwr ( struct rt_rtmp_adapter * pAd , u8 channel ) ; 
/*--GetCuntryMaxTxPwr--*/
void AsicUpdateAutoFallBackTable ( struct rt_rtmp_adapter * pAd , u8 * pRateTable ) ; 
/*--AsicUpdateAutoFallBackTable--*/
void AsicUpdateProtect ( struct rt_rtmp_adapter * pAd , u16 OperationMode , u8 SetMask , BOOLEAN bDisableBGProtect , BOOLEAN bNonGFExist ) ; 
/*--AsicUpdateProtect--*/
void AsicSwitchChannel ( struct rt_rtmp_adapter * pAd , u8 Channel , BOOLEAN bScan ) ; 
/*--AsicSwitchChannel--*/
void AsicResetBBPAgent ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicResetBBPAgent--*/
void AsicLockChannel ( struct rt_rtmp_adapter * pAd , u8 Channel ) ; 
/*--AsicLockChannel--*/
void AsicRfTuningExec ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--AsicRfTuningExec--*/
void AsicAdjustTxPower ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicAdjustTxPower--*/
void AsicSleepThenAutoWakeup ( struct rt_rtmp_adapter * pAd , u16 TbttNumToNextWakeUp ) ; 
/*--AsicSleepThenAutoWakeup--*/
void AsicForceSleep ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicForceSleep--*/
void AsicForceWakeup ( struct rt_rtmp_adapter * pAd , BOOLEAN bFromTx ) ; 
/*--AsicForceWakeup--*/
void AsicSetBssid ( struct rt_rtmp_adapter * pAd , u8 * pBssid ) ; 
/*--AsicSetBssid--*/
void AsicSetMcastWC ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicSetMcastWC--*/
void AsicDelWcidTab ( struct rt_rtmp_adapter * pAd , u8 Wcid ) ; 
/*--AsicDelWcidTab--*/
void AsicEnableRDG ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicEnableRDG--*/
void AsicDisableRDG ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicDisableRDG--*/
void AsicDisableSync ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicDisableSync--*/
void AsicEnableBssSync ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicEnableBssSync--*/
void AsicEnableIbssSync ( struct rt_rtmp_adapter * pAd ) ; 
/*--AsicEnableIbssSync--*/
void AsicSetEdcaParm ( struct rt_rtmp_adapter * pAd , struct rt_edca_parm * pEdcaParm ) ; 
/*--AsicSetEdcaParm--*/
void AsicSetSlotTime ( struct rt_rtmp_adapter * pAd , BOOLEAN bUseShortSlotTime ) ; 
/*--AsicSetSlotTime--*/
void AsicAddSharedKeyEntry ( struct rt_rtmp_adapter * pAd , u8 BssIndex , u8 KeyIdx , u8 CipherAlg , u8 * pKey , u8 * pTxMic , u8 * pRxMic ) ; 
/*--AsicAddSharedKeyEntry--*/
void AsicRemoveSharedKeyEntry ( struct rt_rtmp_adapter * pAd , u8 BssIndex , u8 KeyIdx ) ; 
/*--AsicRemoveSharedKeyEntry--*/
void AsicUpdateWCIDAttribute ( struct rt_rtmp_adapter * pAd , u16 WCID , u8 BssIndex , u8 CipherAlg , BOOLEAN bUsePairewiseKeyTable ) ; 
/*--AsicUpdateWCIDAttribute--*/
void AsicUpdateWCIDIVEIV ( struct rt_rtmp_adapter * pAd , u16 WCID , unsigned long uIV , unsigned long uEIV ) ; 
/*--AsicUpdateWCIDIVEIV--*/
void AsicUpdateRxWCIDTable ( struct rt_rtmp_adapter * pAd , u16 WCID , u8 * pAddr ) ; 
/*--AsicUpdateRxWCIDTable--*/
void AsicAddKeyEntry ( struct rt_rtmp_adapter * pAd , u16 WCID , u8 BssIndex , u8 KeyIdx , struct rt_cipher_key * pCipherKey , BOOLEAN bUsePairewiseKeyTable , BOOLEAN bTxKey ) ; 
/*--AsicAddKeyEntry--*/
void AsicAddPairwiseKeyEntry ( struct rt_rtmp_adapter * pAd , u8 * pAddr , u8 WCID , struct rt_cipher_key * pCipherKey ) ; 
/*--AsicAddPairwiseKeyEntry--*/
void AsicRemovePairwiseKeyEntry ( struct rt_rtmp_adapter * pAd , u8 BssIdx , u8 Wcid ) ; 
/*--AsicRemovePairwiseKeyEntry--*/
BOOLEAN AsicSendCommandToMcu ( struct rt_rtmp_adapter * pAd , u8 Command , u8 Token , u8 Arg0 , u8 Arg1 ) ; 
/*--AsicSendCommandToMcu--*/
void AsicSetRxAnt ( struct rt_rtmp_adapter * pAd , u8 Ant ) ; 
/*--AsicSetRxAnt--*/
void AsicTurnOffRFClk ( struct rt_rtmp_adapter * pAd , u8 Channel ) ; 
/*--AsicTurnOffRFClk--*/
void AsicTurnOnRFClk ( struct rt_rtmp_adapter * pAd , u8 Channel ) ; 
/*--AsicTurnOnRFClk--*/
void AssocStateMachineInit ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * S , STATE_MACHINE_FUNC Trans [ ] ) ; 
/*--AssocStateMachineInit--*/
void AssocTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--AssocTimeout--*/
void ReassocTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--ReassocTimeout--*/
void DisassocTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--DisassocTimeout--*/
void MlmeAssocReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeAssocReqAction--*/
void MlmeReassocReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeReassocReqAction--*/
void MlmeDisassocReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeDisassocReqAction--*/
void PeerAssocRspAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerAssocRspAction--*/
void PeerReassocRspAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerReassocRspAction--*/
void AssocPostProc ( struct rt_rtmp_adapter * pAd , u8 * pAddr2 , u16 CapabilityInfo , u16 Aid , u8 SupRate [ ] , u8 SupRateLen , u8 ExtRate [ ] , u8 ExtRateLen , struct rt_edca_parm * pEdcaParm , struct rt_ht_capability_ie * pHtCapability , u8 HtCapabilityLen , struct rt_add_ht_info_ie * pAddHtInfo ) ; 
/*--AssocPostProc--*/
void PeerDisassocAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerDisassocAction--*/
void AssocTimeoutAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--AssocTimeoutAction--*/
void ReassocTimeoutAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--ReassocTimeoutAction--*/
void DisassocTimeoutAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--DisassocTimeoutAction--*/
void InvalidStateWhenAssoc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--InvalidStateWhenAssoc--*/
void InvalidStateWhenReassoc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--InvalidStateWhenReassoc--*/
void InvalidStateWhenDisassociate ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--InvalidStateWhenDisassociate--*/
void Cls3errAction ( struct rt_rtmp_adapter * pAd , u8 * pAddr ) ; 
/*--Cls3errAction--*/
int wext_notify_event_assoc ( struct rt_rtmp_adapter * pAd ) ; 
/*--wext_notify_event_assoc--*/
BOOLEAN StaAddMacTableEntry ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , u8 MaxSupportedRateIn500Kbps , struct rt_ht_capability_ie * pHtCapability , u8 HtCapabilityLen , struct rt_add_ht_info_ie * pAddHtInfo , u8 AddHtInfoLen , u16 CapabilityInfo ) ; 
/*--StaAddMacTableEntry--*/
void AuthStateMachineInit ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * Sm , STATE_MACHINE_FUNC Trans [ ] ) ; 
/*--AuthStateMachineInit--*/
void AuthTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--AuthTimeout--*/
void MlmeAuthReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeAuthReqAction--*/
void PeerAuthRspAtSeq2Action ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerAuthRspAtSeq2Action--*/
void PeerAuthRspAtSeq4Action ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerAuthRspAtSeq4Action--*/
void MlmeDeauthReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeDeauthReqAction--*/
void AuthTimeoutAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--AuthTimeoutAction--*/
void InvalidStateWhenAuth ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--InvalidStateWhenAuth--*/
void Cls2errAction ( struct rt_rtmp_adapter * pAd , u8 * pAddr ) ; 
/*--Cls2errAction--*/
BOOLEAN AUTH_ReqSend ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * pElem , struct rt_ralink_timer * pAuthTimer , char * pSMName , u16 SeqNo , u8 * pNewElement , unsigned long ElementLen ) ; 
/*--AUTH_ReqSend--*/
void AuthRspStateMachineInit ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * Sm , STATE_MACHINE_FUNC Trans [ ] ) ; 
/*--AuthRspStateMachineInit--*/
void PeerAuthSimpleRspGenAndSend ( struct rt_rtmp_adapter * pAd , struct rt_header_802_11 * pHdr80211 , u16 Alg , u16 Seq , u16 Reason , u16 Status ) ; 
/*--PeerAuthSimpleRspGenAndSend--*/
void PeerDeauthAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerDeauthAction--*/
void SyncStateMachineInit ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * Sm , STATE_MACHINE_FUNC Trans [ ] ) ; 
/*--SyncStateMachineInit--*/
void BeaconTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--BeaconTimeout--*/
void ScanTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--ScanTimeout--*/
void MlmeScanReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeScanReqAction--*/
void MlmeJoinReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeJoinReqAction--*/
void MlmeStartReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeStartReqAction--*/
void PeerBeaconAtScanAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerBeaconAtScanAction--*/
void PeerBeaconAtJoinAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerBeaconAtJoinAction--*/
void PeerBeacon ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerBeacon--*/
void PeerProbeReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerProbeReqAction--*/
void BeaconTimeoutAtJoinAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--BeaconTimeoutAtJoinAction--*/
void ScanTimeoutAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--ScanTimeoutAction--*/
void InvalidStateWhenScan ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--InvalidStateWhenScan--*/
void InvalidStateWhenJoin ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--InvalidStateWhenJoin--*/
void InvalidStateWhenStart ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--InvalidStateWhenStart--*/
void EnqueuePsPoll ( struct rt_rtmp_adapter * pAd ) ; 
/*--EnqueuePsPoll--*/
void EnqueueProbeRequest ( struct rt_rtmp_adapter * pAd ) ; 
/*--EnqueueProbeRequest--*/
BOOLEAN ScanRunning ( struct rt_rtmp_adapter * pAd ) ; 
/*--ScanRunning--*/
BOOLEAN MlmeStartReqSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , char Ssid [ ] , u8 * pSsidLen ) ; 
/*--MlmeStartReqSanity--*/
BOOLEAN PeerAssocRspSanity ( struct rt_rtmp_adapter * pAd , void * pMsg , unsigned long MsgLen , u8 * pAddr2 , u16 * pCapabilityInfo , u16 * pStatus , u16 * pAid , u8 SupRate [ ] , u8 * pSupRateLen , u8 ExtRate [ ] , u8 * pExtRateLen , struct rt_ht_capability_ie * pHtCapability , struct rt_add_ht_info_ie * pAddHtInfo , u8 * pHtCapabilityLen , u8 * pAddHtInfoLen , u8 * pNewExtChannelOffset , struct rt_edca_parm * pEdcaParm , u8 * pCkipFlag ) ; 
/*--PeerAssocRspSanity--*/
BOOLEAN PeerProbeReqSanity ( struct rt_rtmp_adapter * pAd , void * Msg , unsigned long MsgLen , u8 * pAddr2 , char Ssid [ ] , u8 * pSsidLen ) ; 
/*--PeerProbeReqSanity--*/
BOOLEAN GetTimBit ( char * Ptr , u16 Aid , u8 * TimLen , u8 * BcastFlag , u8 * DtimCount , u8 * DtimPeriod , u8 * MessageToMe ) ; 
/*--GetTimBit--*/
void STARxEAPOLFrameIndicate ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--STARxEAPOLFrameIndicate--*/
void STARxDataFrameAnnounce ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--STARxDataFrameAnnounce--*/
BOOLEAN STACheckTkipMICValue ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_rx_blk * pRxBlk ) ; 
/*--STACheckTkipMICValue--*/
void STAHandleRxDataFrame ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk ) ; 
/*--STAHandleRxDataFrame--*/
void STAHandleRxMgmtFrame ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk ) ; 
/*--STAHandleRxMgmtFrame--*/
void STAHandleRxControlFrame ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk ) ; 
/*--STAHandleRxControlFrame--*/
BOOLEAN STARxDoneInterruptHandle ( struct rt_rtmp_adapter * pAd , BOOLEAN argc ) ; 
/*--STARxDoneInterruptHandle--*/
void RTMPHandleTwakeupInterrupt ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPHandleTwakeupInterrupt--*/
void STASendPackets ( void * MiniportAdapterContext , void * * ppPacketArray , u32 NumberOfPackets ) ; 
/*--STASendPackets--*/
int STASendPacket ( struct rt_rtmp_adapter * pAd , void * pPacket ) ; 
/*--STASendPacket--*/
int RTMPFreeTXDRequest ( struct rt_rtmp_adapter * pAd , u8 QueIdx , u8 NumberRequired , u8 * FreeNumberIs ) ; 
/*--RTMPFreeTXDRequest--*/
void RTMPSendDisassociationFrame ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPSendDisassociationFrame--*/
void RTMPSendNullFrame ( struct rt_rtmp_adapter * pAd , u8 TxRate , BOOLEAN bQosNull ) ; 
/*--RTMPSendNullFrame--*/
void RTMPSendRTSFrame ( struct rt_rtmp_adapter * pAd , u8 * pDA , unsigned int NextMpduSize , u8 TxRate , u8 RTSRate , u16 AckDuration , u8 QueIdx , u8 FrameGap ) ; 
/*--RTMPSendRTSFrame--*/
void STAFindCipherAlgorithm ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk ) ; 
/*--STAFindCipherAlgorithm--*/
void STABuildCommon802_11Header ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk ) ; 
/*--STABuildCommon802_11Header--*/
void STABuildCache802_11Header ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u8 * pHeader ) ; 
/*--STABuildCache802_11Header--*/
void STA_AMPDU_Frame_Tx ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk ) ; 
/*--STA_AMPDU_Frame_Tx--*/
void STA_AMSDU_Frame_Tx ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk ) ; 
/*--STA_AMSDU_Frame_Tx--*/
void STA_Legacy_Frame_Tx ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk ) ; 
/*--STA_Legacy_Frame_Tx--*/
void STA_ARalink_Frame_Tx ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk ) ; 
/*--STA_ARalink_Frame_Tx--*/
void STA_Fragment_Frame_Tx ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk ) ; 
/*--STA_Fragment_Frame_Tx--*/
int STAHardTransmit ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u8 QueIdx ) ; 
/*--STAHardTransmit--*/
unsigned long HashBytesPolynomial ( u8 * value , unsigned int len ) ; 
/*--HashBytesPolynomial--*/
void Sta_Announce_or_Forward_802_3_Packet ( struct rt_rtmp_adapter * pAd , void * pPacket , u8 FromWhichBSSID ) ; 
/*--Sta_Announce_or_Forward_802_3_Packet--*/
void MlmeCntlInit ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * S , STATE_MACHINE_FUNC Trans [ ] ) ; 
/*--MlmeCntlInit--*/
void MlmeCntlMachinePerformAction ( struct rt_rtmp_adapter * pAd , struct rt_state_machine * S , struct rt_mlme_queue_elem * Elem ) ; 
/*--MlmeCntlMachinePerformAction--*/
void CntlIdleProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlIdleProc--*/
void CntlOidScanProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlOidScanProc--*/
void CntlOidSsidProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlOidSsidProc--*/
void CntlOidRTBssidProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlOidRTBssidProc--*/
void CntlMlmeRoamingProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlMlmeRoamingProc--*/
void CntlWaitDisassocProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlWaitDisassocProc--*/
void CntlWaitJoinProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlWaitJoinProc--*/
void CntlWaitStartProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlWaitStartProc--*/
void CntlWaitAuthProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlWaitAuthProc--*/
void CntlWaitAuthProc2 ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlWaitAuthProc2--*/
void CntlWaitAssocProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlWaitAssocProc--*/
void CntlWaitReassocProc ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--CntlWaitReassocProc--*/
void AdhocTurnOnQos ( struct rt_rtmp_adapter * pAd ) ; 
/*--AdhocTurnOnQos--*/
void LinkUp ( struct rt_rtmp_adapter * pAd , u8 BssType ) ; 
/*--LinkUp--*/
void LinkDown ( struct rt_rtmp_adapter * pAd , BOOLEAN IsReqFromAP ) ; 
/*--LinkDown--*/
void IterateOnBssTab ( struct rt_rtmp_adapter * pAd ) ; 
/*--IterateOnBssTab--*/
void IterateOnBssTab2 ( struct rt_rtmp_adapter * pAd ) ; 
/*--IterateOnBssTab2--*/
void JoinParmFill ( struct rt_rtmp_adapter * pAd , struct rt_mlme_join_req * JoinReq , unsigned long BssIdx ) ; 
/*--JoinParmFill--*/
void ScanParmFill ( struct rt_rtmp_adapter * pAd , struct rt_mlme_scan_req * ScanReq , char Ssid [ ] , u8 SsidLen , u8 BssType , u8 ScanType ) ; 
/*--ScanParmFill--*/
void StartParmFill ( struct rt_rtmp_adapter * pAd , struct rt_mlme_start_req * StartReq , char Ssid [ ] , u8 SsidLen ) ; 
/*--StartParmFill--*/
void AuthParmFill ( struct rt_rtmp_adapter * pAd , struct rt_mlme_auth_req * AuthReq , u8 * pAddr , u16 Alg ) ; 
/*--AuthParmFill--*/
void ComposePsPoll ( struct rt_rtmp_adapter * pAd ) ; 
/*--ComposePsPoll--*/
void ComposeNullFrame ( struct rt_rtmp_adapter * pAd ) ; 
/*--ComposeNullFrame--*/
unsigned long MakeIbssBeacon ( struct rt_rtmp_adapter * pAd ) ; 
/*--MakeIbssBeacon--*/
void RTMPReportMicError ( struct rt_rtmp_adapter * pAd , struct rt_cipher_key * pWpaKey ) ; 
/*--RTMPReportMicError--*/
int WpaCheckEapCode ( struct rt_rtmp_adapter * pAd , u8 * pFrame , u16 FrameLen , u16 OffSet ) ; 
/*--WpaCheckEapCode--*/
void WpaSendMicFailureToWpaSupplicant ( struct rt_rtmp_adapter * pAd , BOOLEAN bUnicast ) ; 
/*--WpaSendMicFailureToWpaSupplicant--*/
void WpaMicFailureReportFrame ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--WpaMicFailureReportFrame--*/
void inc_byte_array ( u8 * counter , int len ) ; 
/*--inc_byte_array--*/
void WpaDisassocApAndBlockAssoc ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--WpaDisassocApAndBlockAssoc--*/
void WpaStaPairwiseKeySetting ( struct rt_rtmp_adapter * pAd ) ; 
/*--WpaStaPairwiseKeySetting--*/
void WpaStaGroupKeySetting ( struct rt_rtmp_adapter * pAd ) ; 
/*--WpaStaGroupKeySetting--*/
void RTMP_SetPeriodicTimer ( struct timer_list * pTimer , unsigned long timeout ) ; 
/*--RTMP_SetPeriodicTimer--*/
void RTMP_OS_Init_Timer ( struct rt_rtmp_adapter * pAd , struct timer_list * pTimer , TIMER_FUNCTION function , void * data ) ; 
/*--RTMP_OS_Init_Timer--*/
void RTMP_OS_Add_Timer ( struct timer_list * pTimer , unsigned long timeout ) ; 
/*--RTMP_OS_Add_Timer--*/
void RTMP_OS_Mod_Timer ( struct timer_list * pTimer , unsigned long timeout ) ; 
/*--RTMP_OS_Mod_Timer--*/
void RTMP_OS_Del_Timer ( struct timer_list * pTimer , BOOLEAN * pCancelled ) ; 
/*--RTMP_OS_Del_Timer--*/
void RTMP_OS_Release_Packet ( struct rt_rtmp_adapter * pAd , struct rt_queue_entry * pEntry ) ; 
/*--RTMP_OS_Release_Packet--*/
void RTMPusecDelay ( unsigned long usec ) ; 
/*--RTMPusecDelay--*/
void RTMP_GetCurrentSystemTime ( LARGE_INTEGER * time ) ; 
/*--RTMP_GetCurrentSystemTime--*/
int os_alloc_mem ( struct rt_rtmp_adapter * pAd , u8 * * mem , unsigned long size ) ; 
/*--os_alloc_mem--*/
int os_free_mem ( struct rt_rtmp_adapter * pAd , void * mem ) ; 
/*--os_free_mem--*/
void * RtmpOSNetPktAlloc ( struct rt_rtmp_adapter * pAd , int size ) ; 
/*--RtmpOSNetPktAlloc--*/
void * RTMP_AllocateFragPacketBuffer ( struct rt_rtmp_adapter * pAd , unsigned long Length ) ; 
/*--RTMP_AllocateFragPacketBuffer--*/
void * RTMP_AllocateTxPacketBuffer ( struct rt_rtmp_adapter * pAd , unsigned long Length , BOOLEAN Cached , void * * VirtualAddress ) ; 
/*--RTMP_AllocateTxPacketBuffer--*/
void build_tx_packet ( struct rt_rtmp_adapter * pAd , void * pPacket , u8 * pFrame , unsigned long FrameLen ) ; 
/*--build_tx_packet--*/
void RTMPFreeAdapter ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPFreeAdapter--*/
BOOLEAN OS_Need_Clone_Packet ( void ) ; 
/*--OS_Need_Clone_Packet--*/
int RTMPCloneNdisPacket ( struct rt_rtmp_adapter * pAd , BOOLEAN pInsAMSDUHdr , void * pInPacket , void * * ppOutPacket ) ; 
/*--RTMPCloneNdisPacket--*/
int RTMPAllocateNdisPacket ( struct rt_rtmp_adapter * pAd , void * * ppPacket , u8 * pHeader , u32 HeaderLen , u8 * pData , u32 DataLen ) ; 
/*--RTMPAllocateNdisPacket--*/
void RTMPFreeNdisPacket ( struct rt_rtmp_adapter * pAd , void * pPacket ) ; 
/*--RTMPFreeNdisPacket--*/
int Sniff2BytesFromNdisBuffer ( char * pFirstBuffer , u8 DesiredOffset , u8 * pByte0 , u8 * pByte1 ) ; 
/*--Sniff2BytesFromNdisBuffer--*/
void RTMP_QueryPacketInfo ( void * pPacket , struct rt_packet_info * pPacketInfo , u8 * * pSrcBufVA , u32 * pSrcBufLen ) ; 
/*--RTMP_QueryPacketInfo--*/
void RTMP_QueryNextPacketInfo ( void * * ppPacket , struct rt_packet_info * pPacketInfo , u8 * * pSrcBufVA , u32 * pSrcBufLen ) ; 
/*--RTMP_QueryNextPacketInfo--*/
void * DuplicatePacket ( struct rt_rtmp_adapter * pAd , void * pPacket , u8 FromWhichBSSID ) ; 
/*--DuplicatePacket--*/
void * duplicate_pkt ( struct rt_rtmp_adapter * pAd , u8 * pHeader802_3 , u32 HdrLen , u8 * pData , unsigned long DataSize , u8 FromWhichBSSID ) ; 
/*--duplicate_pkt--*/
void * duplicate_pkt_with_TKIP_MIC ( struct rt_rtmp_adapter * pAd , void * pPacket ) ; 
/*--duplicate_pkt_with_TKIP_MIC--*/
void * ClonePacket ( struct rt_rtmp_adapter * pAd , void * pPacket , u8 * pData , unsigned long DataSize ) ; 
/*--ClonePacket--*/
void update_os_packet_info ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--update_os_packet_info--*/
void wlan_802_11_to_802_3_packet ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , u8 * pHeader802_3 , u8 FromWhichBSSID ) ; 
/*--wlan_802_11_to_802_3_packet--*/
void announce_802_3_packet ( struct rt_rtmp_adapter * pAd , void * pPacket ) ; 
/*--announce_802_3_packet--*/
struct rt_rtmp_sg_list * rt_get_sg_list_from_packet ( void * pPacket , struct rt_rtmp_sg_list * sg ) ; 
/*--rt_get_sg_list_from_packet--*/
void hex_dump ( char * str , unsigned char * pSrcBufVA , unsigned int SrcBufLen ) ; 
/*--hex_dump--*/
void RTMPSendWirelessEvent ( struct rt_rtmp_adapter * pAd , u16 Event_flag , u8 * pAddr , u8 BssIdx , char Rssi ) ; 
/*--RTMPSendWirelessEvent--*/
void send_monitor_packets ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk ) ; 
/*--send_monitor_packets--*/
int RtmpOSIRQRequest ( struct net_device * pNetDev ) ; 
/*--RtmpOSIRQRequest--*/
int RtmpOSIRQRelease ( struct net_device * pNetDev ) ; 
/*--RtmpOSIRQRelease--*/
struct file * RtmpOSFileOpen ( char * pPath , int flag , int mode ) ; 
/*--RtmpOSFileOpen--*/
int RtmpOSFileClose ( struct file * osfd ) ; 
/*--RtmpOSFileClose--*/
void RtmpOSFileSeek ( struct file * osfd , int offset ) ; 
/*--RtmpOSFileSeek--*/
int RtmpOSFileRead ( struct file * osfd , char * pDataPtr , int readLen ) ; 
/*--RtmpOSFileRead--*/
int RtmpOSFileWrite ( struct file * osfd , char * pDataPtr , int writeLen ) ; 
/*--RtmpOSFileWrite--*/
int RtmpOSTaskKill ( struct rt_rtmp_os_task * pTask ) ; 
/*--RtmpOSTaskKill--*/
int RtmpOSTaskNotifyToExit ( struct rt_rtmp_os_task * pTask ) ; 
/*--RtmpOSTaskNotifyToExit--*/
void RtmpOSTaskCustomize ( struct rt_rtmp_os_task * pTask ) ; 
/*--RtmpOSTaskCustomize--*/
int RtmpOSTaskAttach ( struct rt_rtmp_os_task * pTask , int ( * fn ) ( void * ) , void * arg ) ; 
/*--RtmpOSTaskAttach--*/
int RtmpOSTaskInit ( struct rt_rtmp_os_task * pTask , char * pTaskName , void * pPriv ) ; 
/*--RtmpOSTaskInit--*/
void RTMP_IndicateMediaState ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMP_IndicateMediaState--*/
int RtmpOSWrielessEventSend ( struct rt_rtmp_adapter * pAd , u32 eventType , int flags , u8 * pSrcMac , u8 * pData , u32 dataLen ) ; 
/*--RtmpOSWrielessEventSend--*/
int RtmpOSNetDevAddrSet ( struct net_device * pNetDev , u8 * pMacAddr ) ; 
/*--RtmpOSNetDevAddrSet--*/
void RtmpOSNetDevClose ( struct net_device * pNetDev ) ; 
/*--RtmpOSNetDevClose--*/
void RtmpOSNetDevFree ( struct net_device * pNetDev ) ; 
/*--RtmpOSNetDevFree--*/
int RtmpOSNetDevAlloc ( struct net_device * * new_dev_p , u32 privDataSize ) ; 
/*--RtmpOSNetDevAlloc--*/
struct net_device * RtmpOSNetDevGetByName ( struct net_device * pNetDev , char * pDevName ) ; 
/*--RtmpOSNetDevGetByName--*/
void RtmpOSNetDeviceRefPut ( struct net_device * pNetDev ) ; 
/*--RtmpOSNetDeviceRefPut--*/
int RtmpOSNetDevDestory ( struct rt_rtmp_adapter * pAd , struct net_device * pNetDev ) ; 
/*--RtmpOSNetDevDestory--*/
void RtmpOSNetDevDetach ( struct net_device * pNetDev ) ; 
/*--RtmpOSNetDevDetach--*/
int RtmpOSNetDevAttach ( struct net_device * pNetDev , struct rt_rtmp_os_netdev_op_hook * pDevOpHook ) ; 
/*--RtmpOSNetDevAttach--*/
struct net_device * RtmpOSNetDevCreate ( struct rt_rtmp_adapter * pAd , int devType , int devNum , int privMemSize , char * pNamePrefix ) ; 
/*--RtmpOSNetDevCreate--*/
int MainVirtualIF_close ( struct net_device * net_dev ) ; 
/*--MainVirtualIF_close--*/
int MainVirtualIF_open ( struct net_device * net_dev ) ; 
/*--MainVirtualIF_open--*/
int rt28xx_close ( struct net_device * dev ) ; 
/*--rt28xx_close--*/
int rt28xx_open ( struct net_device * dev ) ; 
/*--rt28xx_open--*/
struct net_device * RtmpPhyNetDevInit ( struct rt_rtmp_adapter * pAd , struct rt_rtmp_os_netdev_op_hook * pNetDevHook ) ; 
/*--RtmpPhyNetDevInit--*/
int rt28xx_packet_xmit ( struct sk_buff * skb ) ; 
/*--rt28xx_packet_xmit--*/
struct iw_statistics * rt28xx_get_wireless_stats ( struct net_device * net_dev ) ; 
/*--rt28xx_get_wireless_stats--*/
void tbtt_tasklet ( unsigned long data ) ; 
/*--tbtt_tasklet--*/
BOOLEAN RtmpPhyNetDevExit ( struct rt_rtmp_adapter * pAd , struct net_device * net_dev ) ; 
/*--RtmpPhyNetDevExit--*/
int AdapterBlockAllocateMemory ( void * handle , void * * ppAd ) ; 
/*--AdapterBlockAllocateMemory--*/
void RTMPAddKey ( struct rt_rtmp_adapter * pAd , struct rt_ndis_802_11_key * pKey ) ; 
/*--RTMPAddKey--*/
char * rtstrchr ( const char * s , int c ) ; 
/*--rtstrchr--*/
int rt_ioctl_giwname ( struct net_device * dev , struct iw_request_info * info , char * name , char * extra ) ; 
/*--rt_ioctl_giwname--*/
int rt_ioctl_siwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * freq , char * extra ) ; 
/*--rt_ioctl_siwfreq--*/
int rt_ioctl_giwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * freq , char * extra ) ; 
/*--rt_ioctl_giwfreq--*/
int rt_ioctl_siwmode ( struct net_device * dev , struct iw_request_info * info , __u32 * mode , char * extra ) ; 
/*--rt_ioctl_siwmode--*/
int rt_ioctl_giwmode ( struct net_device * dev , struct iw_request_info * info , __u32 * mode , char * extra ) ; 
/*--rt_ioctl_giwmode--*/
int rt_ioctl_siwsens ( struct net_device * dev , struct iw_request_info * info , char * name , char * extra ) ; 
/*--rt_ioctl_siwsens--*/
int rt_ioctl_giwsens ( struct net_device * dev , struct iw_request_info * info , char * name , char * extra ) ; 
/*--rt_ioctl_giwsens--*/
int rt_ioctl_giwrange ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--rt_ioctl_giwrange--*/
int rt_ioctl_siwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * ap_addr , char * extra ) ; 
/*--rt_ioctl_siwap--*/
int rt_ioctl_giwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * ap_addr , char * extra ) ; 
/*--rt_ioctl_giwap--*/
int rt_ioctl_iwaplist ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--rt_ioctl_iwaplist--*/
int rt_ioctl_siwscan ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--rt_ioctl_siwscan--*/
int rt_ioctl_giwscan ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--rt_ioctl_giwscan--*/
int rt_ioctl_siwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * essid ) ; 
/*--rt_ioctl_siwessid--*/
int rt_ioctl_giwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * essid ) ; 
/*--rt_ioctl_giwessid--*/
int rt_ioctl_siwnickn ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * nickname ) ; 
/*--rt_ioctl_siwnickn--*/
int rt_ioctl_giwnickn ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * nickname ) ; 
/*--rt_ioctl_giwnickn--*/
int rt_ioctl_siwrts ( struct net_device * dev , struct iw_request_info * info , struct iw_param * rts , char * extra ) ; 
/*--rt_ioctl_siwrts--*/
int rt_ioctl_giwrts ( struct net_device * dev , struct iw_request_info * info , struct iw_param * rts , char * extra ) ; 
/*--rt_ioctl_giwrts--*/
int rt_ioctl_siwfrag ( struct net_device * dev , struct iw_request_info * info , struct iw_param * frag , char * extra ) ; 
/*--rt_ioctl_siwfrag--*/
int rt_ioctl_giwfrag ( struct net_device * dev , struct iw_request_info * info , struct iw_param * frag , char * extra ) ; 
/*--rt_ioctl_giwfrag--*/
int rt_ioctl_siwencode ( struct net_device * dev , struct iw_request_info * info , struct iw_point * erq , char * extra ) ; 
/*--rt_ioctl_siwencode--*/
int rt_ioctl_giwencode ( struct net_device * dev , struct iw_request_info * info , struct iw_point * erq , char * key ) ; 
/*--rt_ioctl_giwencode--*/
void getBaInfo ( struct rt_rtmp_adapter * pAd , char * pOutBuf ) ; 
/*--getBaInfo--*/
int rt_ioctl_siwmlme ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_siwmlme--*/
int rt_ioctl_siwauth ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_siwauth--*/
int rt_ioctl_giwauth ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_giwauth--*/
void fnSetCipherKey ( struct rt_rtmp_adapter * pAdapter , int keyIdx , u8 CipherAlg , BOOLEAN bGTK , struct iw_encode_ext * ext ) ; 
/*--fnSetCipherKey--*/
int rt_ioctl_siwencodeext ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_siwencodeext--*/
int rt_ioctl_giwencodeext ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_giwencodeext--*/
int rt_ioctl_siwgenie ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_siwgenie--*/
int rt_ioctl_giwgenie ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_giwgenie--*/
int rt_ioctl_siwpmksa ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_siwpmksa--*/
int rt_ioctl_siwrate ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_siwrate--*/
int rt_ioctl_giwrate ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--rt_ioctl_giwrate--*/
int rt28xx_sta_ioctl ( struct net_device * net_dev , struct ifreq * rq , int cmd ) ; 
/*--rt28xx_sta_ioctl--*/
int Set_SSID_Proc ( struct rt_rtmp_adapter * pAdapter , char * arg ) ; 
/*--Set_SSID_Proc--*/
int Set_NetworkType_Proc ( struct rt_rtmp_adapter * pAdapter , char * arg ) ; 
/*--Set_NetworkType_Proc--*/
void rtmp_timer_BAOriSessionSetupTimeout ( unsigned long data ) ; 
/*--rtmp_timer_BAOriSessionSetupTimeout--*/
void rtmp_timer_BARecSessionIdleTimeout ( unsigned long data ) ; 
/*--rtmp_timer_BARecSessionIdleTimeout--*/
void BA_MaxWinSizeReasign ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntryPeer , u8 * pWinSize ) ; 
/*--BA_MaxWinSizeReasign--*/
void Announce_Reordering_Packet ( struct rt_rtmp_adapter * pAd , struct reordering_mpdu * mpdu ) ; 
/*--Announce_Reordering_Packet--*/
BOOLEAN ba_reordering_mpdu_insertsorted ( struct reordering_list * list , struct reordering_mpdu * mpdu ) ; 
/*--ba_reordering_mpdu_insertsorted--*/
void ba_reordering_resource_release ( struct rt_rtmp_adapter * pAd ) ; 
/*--ba_reordering_resource_release--*/
BOOLEAN ba_reordering_resource_init ( struct rt_rtmp_adapter * pAd , int num ) ; 
/*--ba_reordering_resource_init--*/
void ba_flush_reordering_timeout_mpdus ( struct rt_rtmp_adapter * pAd , struct rt_ba_rec_entry * pBAEntry , unsigned long Now32 ) ; 
/*--ba_flush_reordering_timeout_mpdus--*/
void BAOriSessionSetUp ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , u8 TID , u16 TimeOut , unsigned long DelayTime , BOOLEAN isForced ) ; 
/*--BAOriSessionSetUp--*/
void BAOriSessionAdd ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_frame_addba_rsp * pFrame ) ; 
/*--BAOriSessionAdd--*/
BOOLEAN BARecSessionAdd ( struct rt_rtmp_adapter * pAd , struct rt_mac_table_entry * pEntry , struct rt_frame_addba_req * pFrame ) ; 
/*--BARecSessionAdd--*/
struct rt_ba_rec_entry * BATableAllocRecEntry ( struct rt_rtmp_adapter * pAd , u16 * Idx ) ; 
/*--BATableAllocRecEntry--*/
struct rt_ba_ori_entry * BATableAllocOriEntry ( struct rt_rtmp_adapter * pAd , u16 * Idx ) ; 
/*--BATableAllocOriEntry--*/
void BATableFreeOriEntry ( struct rt_rtmp_adapter * pAd , unsigned long Idx ) ; 
/*--BATableFreeOriEntry--*/
void BATableFreeRecEntry ( struct rt_rtmp_adapter * pAd , unsigned long Idx ) ; 
/*--BATableFreeRecEntry--*/
void BAOriSessionTearDown ( struct rt_rtmp_adapter * pAd , u8 Wcid , u8 TID , BOOLEAN bPassive , BOOLEAN bForceSend ) ; 
/*--BAOriSessionTearDown--*/
void BARecSessionTearDown ( struct rt_rtmp_adapter * pAd , u8 Wcid , u8 TID , BOOLEAN bPassive ) ; 
/*--BARecSessionTearDown--*/
void BASessionTearDownALL ( struct rt_rtmp_adapter * pAd , u8 Wcid ) ; 
/*--BASessionTearDownALL--*/
void BAOriSessionSetupTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--BAOriSessionSetupTimeout--*/
void BARecSessionIdleTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--BARecSessionIdleTimeout--*/
void PeerAddBAReqAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerAddBAReqAction--*/
void PeerAddBARspAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerAddBARspAction--*/
void PeerDelBAAction ( struct rt_rtmp_adapter * pAd , struct rt_mlme_queue_elem * Elem ) ; 
/*--PeerDelBAAction--*/
BOOLEAN CntlEnqueueForRecv ( struct rt_rtmp_adapter * pAd , unsigned long Wcid , unsigned long MsgLen , struct rt_frame_ba_req * pMsg ) ; 
/*--CntlEnqueueForRecv--*/
void SendPSMPAction ( struct rt_rtmp_adapter * pAd , u8 Wcid , u8 Psmp ) ; 
/*--SendPSMPAction--*/
void convert_reordering_packet_to_preAMSDU_or_802_3_packet ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--convert_reordering_packet_to_preAMSDU_or_802_3_packet--*/
void Indicate_AMPDU_Packet ( struct rt_rtmp_adapter * pAd , struct rt_rx_blk * pRxBlk , u8 FromWhichBSSID ) ; 
/*--Indicate_AMPDU_Packet--*/
void RT2860RejectPendingPackets ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT2860RejectPendingPackets--*/
BOOLEAN RT28XXChipsetCheck ( void * _dev_p ) ; 
/*--RT28XXChipsetCheck--*/
void RTMPInitPCIeLinkCtrlValue ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPInitPCIeLinkCtrlValue--*/
void RTMPFindHostPCIDev ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPFindHostPCIDev--*/
void RTMPPCIeLinkCtrlValueRestore ( struct rt_rtmp_adapter * pAd , u8 Level ) ; 
/*--RTMPPCIeLinkCtrlValueRestore--*/
void RTMPPCIeLinkCtrlSetting ( struct rt_rtmp_adapter * pAd , u16 Max ) ; 
/*--RTMPPCIeLinkCtrlSetting--*/
void RTMPrt3xSetPCIePowerLinkCtrl ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPrt3xSetPCIePowerLinkCtrl--*/
void RTMP_AllocateTxDescMemory ( struct rt_rtmp_adapter * pAd , u32 Index , unsigned long Length , BOOLEAN Cached , void * * VirtualAddress , dma_addr_t * PhysicalAddress ) ; 
/*--RTMP_AllocateTxDescMemory--*/
void RTMP_AllocateMgmtDescMemory ( struct rt_rtmp_adapter * pAd , unsigned long Length , BOOLEAN Cached , void * * VirtualAddress , dma_addr_t * PhysicalAddress ) ; 
/*--RTMP_AllocateMgmtDescMemory--*/
void RTMP_AllocateRxDescMemory ( struct rt_rtmp_adapter * pAd , unsigned long Length , BOOLEAN Cached , void * * VirtualAddress , dma_addr_t * PhysicalAddress ) ; 
/*--RTMP_AllocateRxDescMemory--*/
void RTMP_FreeDescMemory ( struct rt_rtmp_adapter * pAd , unsigned long Length , void * VirtualAddress , dma_addr_t PhysicalAddress ) ; 
/*--RTMP_FreeDescMemory--*/
void RTMP_AllocateFirstTxBuffer ( struct rt_rtmp_adapter * pAd , u32 Index , unsigned long Length , BOOLEAN Cached , void * * VirtualAddress , dma_addr_t * PhysicalAddress ) ; 
/*--RTMP_AllocateFirstTxBuffer--*/
void RTMP_FreeFirstTxBuffer ( struct rt_rtmp_adapter * pAd , unsigned long Length , BOOLEAN Cached , void * VirtualAddress , dma_addr_t PhysicalAddress ) ; 
/*--RTMP_FreeFirstTxBuffer--*/
void RTMP_AllocateSharedMemory ( struct rt_rtmp_adapter * pAd , unsigned long Length , BOOLEAN Cached , void * * VirtualAddress , dma_addr_t * PhysicalAddress ) ; 
/*--RTMP_AllocateSharedMemory--*/
void * RTMP_AllocateRxPacketBuffer ( struct rt_rtmp_adapter * pAd , unsigned long Length , BOOLEAN Cached , void * * VirtualAddress , dma_addr_t * PhysicalAddress ) ; 
/*--RTMP_AllocateRxPacketBuffer--*/
void Invalid_Remaining_Packet ( struct rt_rtmp_adapter * pAd , unsigned long VirtualAddress ) ; 
/*--Invalid_Remaining_Packet--*/
int RtmpNetTaskInit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpNetTaskInit--*/
void RtmpNetTaskExit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpNetTaskExit--*/
int RtmpMgmtTaskInit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpMgmtTaskInit--*/
void RtmpMgmtTaskExit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpMgmtTaskExit--*/
void fifo_statistic_full_tasklet ( unsigned long data ) ; 
/*--fifo_statistic_full_tasklet--*/
irqreturn_t rt2860_interrupt ( int irq , void * dev_instance ) ; 
/*--rt2860_interrupt--*/
dma_addr_t linux_pci_map_single ( struct rt_rtmp_adapter * pAd , void * ptr , size_t size , int sd_idx , int direction ) ; 
/*--linux_pci_map_single--*/
void linux_pci_unmap_single ( struct rt_rtmp_adapter * pAd , dma_addr_t dma_addr , size_t size , int direction ) ; 
/*--linux_pci_unmap_single--*/
int RTMPAllocTxRxRingMemory ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPAllocTxRxRingMemory--*/
void RTMPRingCleanUp ( struct rt_rtmp_adapter * pAd , u8 RingType ) ; 
/*--RTMPRingCleanUp--*/
void RTMPFreeTxRxRingMemory ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPFreeTxRxRingMemory--*/
void RT28XXDMADisable ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT28XXDMADisable--*/
void RT28XXDMAEnable ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT28XXDMAEnable--*/
BOOLEAN AsicCheckCommanOk ( struct rt_rtmp_adapter * pAd , u8 Command ) ; 
/*--AsicCheckCommanOk--*/
void RT28xx_UpdateBeaconToAsic ( struct rt_rtmp_adapter * pAd , int apidx , unsigned long FrameLen , unsigned long UpdatePos ) ; 
/*--RT28xx_UpdateBeaconToAsic--*/
void RT28xxPciStaAsicForceWakeup ( struct rt_rtmp_adapter * pAd , BOOLEAN bFromTx ) ; 
/*--RT28xxPciStaAsicForceWakeup--*/
void RT28xxPciStaAsicSleepThenAutoWakeup ( struct rt_rtmp_adapter * pAd , u16 TbttNumToNextWakeUp ) ; 
/*--RT28xxPciStaAsicSleepThenAutoWakeup--*/
void PsPollWakeExec ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--PsPollWakeExec--*/
void RadioOnExec ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--RadioOnExec--*/
BOOLEAN RT28xxPciAsicRadioOn ( struct rt_rtmp_adapter * pAd , u8 Level ) ; 
/*--RT28xxPciAsicRadioOn--*/
BOOLEAN RT28xxPciAsicRadioOff ( struct rt_rtmp_adapter * pAd , u8 Level , u16 TbttNumToNextWakeUp ) ; 
/*--RT28xxPciAsicRadioOff--*/
void RT28xxPciMlmeRadioOn ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT28xxPciMlmeRadioOn--*/
void RT28xxPciMlmeRadioOFF ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT28xxPciMlmeRadioOFF--*/
u16 RtmpPCI_WriteTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , BOOLEAN bIsLast , u16 * FreeNumber ) ; 
/*--RtmpPCI_WriteTxResource--*/
u16 RtmpPCI_WriteSingleTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , BOOLEAN bIsLast , u16 * FreeNumber ) ; 
/*--RtmpPCI_WriteSingleTxResource--*/
u16 RtmpPCI_WriteMultiTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u8 frameNum , u16 * FreeNumber ) ; 
/*--RtmpPCI_WriteMultiTxResource--*/
void RtmpPCI_FinalWriteTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u16 totalMPDUSize , u16 FirstTxIdx ) ; 
/*--RtmpPCI_FinalWriteTxResource--*/
void RtmpPCIDataLastTxIdx ( struct rt_rtmp_adapter * pAd , u8 QueIdx , u16 LastTxIdx ) ; 
/*--RtmpPCIDataLastTxIdx--*/
u16 RtmpPCI_WriteFragTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u8 fragNum , u16 * FreeNumber ) ; 
/*--RtmpPCI_WriteFragTxResource--*/
int RtmpPCIMgmtKickOut ( struct rt_rtmp_adapter * pAd , u8 QueIdx , void * pPacket , u8 * pSrcBufVA , u32 SrcBufLen ) ; 
/*--RtmpPCIMgmtKickOut--*/
int RTMPCheckRxError ( struct rt_rtmp_adapter * pAd , struct rt_header_802_11 * pHeader , struct rt_rxwi * pRxWI , PRT28XX_RXD_STRUC pRxD ) ; 
/*--RTMPCheckRxError--*/
BOOLEAN RTMPFreeTXDUponTxDmaDone ( struct rt_rtmp_adapter * pAd , u8 QueIdx ) ; 
/*--RTMPFreeTXDUponTxDmaDone--*/
BOOLEAN RTMPHandleTxRingDmaDoneInterrupt ( struct rt_rtmp_adapter * pAd , INT_SOURCE_CSR_STRUC TxRingBitmap ) ; 
/*--RTMPHandleTxRingDmaDoneInterrupt--*/
void RTMPHandleMgmtRingDmaDoneInterrupt ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPHandleMgmtRingDmaDoneInterrupt--*/
void RTMPHandleTBTTInterrupt ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPHandleTBTTInterrupt--*/
void RTMPHandlePreTBTTInterrupt ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPHandlePreTBTTInterrupt--*/
void RTMPHandleRxCoherentInterrupt ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPHandleRxCoherentInterrupt--*/
void * GetPacketFromRxRing ( struct rt_rtmp_adapter * pAd , PRT28XX_RXD_STRUC pSaveRxD , BOOLEAN * pbReschedule , u32 * pRxPending ) ; 
/*--GetPacketFromRxRing--*/
int MlmeHardTransmitTxRing ( struct rt_rtmp_adapter * pAd , u8 QueIdx , void * pPacket ) ; 
/*--MlmeHardTransmitTxRing--*/
int MlmeDataHardTransmit ( struct rt_rtmp_adapter * pAd , u8 QueIdx , void * pPacket ) ; 
/*--MlmeDataHardTransmit--*/
void RTMPWriteTxDescriptor ( struct rt_rtmp_adapter * pAd , struct rt_txd * pTxD , BOOLEAN bWIV , u8 QueueSEL ) ; 
/*--RTMPWriteTxDescriptor--*/
int rtmp_ee_prom_read16 ( struct rt_rtmp_adapter * pAd , u16 Offset , u16 * pValue ) ; 
/*--rtmp_ee_prom_read16--*/
int RtmpAsicEraseFirmware ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpAsicEraseFirmware--*/
int RtmpAsicLoadFirmware ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpAsicLoadFirmware--*/
int RtmpAsicSendCommandToMcu ( struct rt_rtmp_adapter * pAd , u8 Command , u8 Token , u8 Arg0 , u8 Arg1 ) ; 
/*--RtmpAsicSendCommandToMcu--*/
u8 eFuseReadRegisters ( struct rt_rtmp_adapter * pAd , u16 Offset , u16 Length , u16 * pData ) ; 
/*--eFuseReadRegisters--*/
void eFusePhysicalReadRegisters ( struct rt_rtmp_adapter * pAd , u16 Offset , u16 Length , u16 * pData ) ; 
/*--eFusePhysicalReadRegisters--*/
int set_eFuseGetFreeBlockCount_Proc ( struct rt_rtmp_adapter * pAd , char * arg ) ; 
/*--set_eFuseGetFreeBlockCount_Proc--*/
int set_eFusedump_Proc ( struct rt_rtmp_adapter * pAd , char * arg ) ; 
/*--set_eFusedump_Proc--*/
int rtmp_ee_efuse_read16 ( struct rt_rtmp_adapter * pAd , u16 Offset , u16 * pValue ) ; 
/*--rtmp_ee_efuse_read16--*/
int RtmpEfuseSupportCheck ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpEfuseSupportCheck--*/
void eFuseGetFreeBlockCount ( struct rt_rtmp_adapter * pAd , u32 * EfuseFreeBlock ) ; 
/*--eFuseGetFreeBlockCount--*/
int eFuse_init ( struct rt_rtmp_adapter * pAd ) ; 
/*--eFuse_init--*/
void RT30xxSetRxAnt ( struct rt_rtmp_adapter * pAd , u8 Ant ) ; 
/*--RT30xxSetRxAnt--*/
void RTMPFilterCalibration ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTMPFilterCalibration--*/
void RT30xxLoadRFNormalModeSetup ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT30xxLoadRFNormalModeSetup--*/
void RT30xxLoadRFSleepModeSetup ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT30xxLoadRFSleepModeSetup--*/
void RT30xxReverseRFSleepModeSetup ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT30xxReverseRFSleepModeSetup--*/
void RT30xxHaltAction ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT30xxHaltAction--*/
int RT30xxWriteRFRegister ( struct rt_rtmp_adapter * pAd , u8 regID , u8 value ) ; 
/*--RT30xxWriteRFRegister--*/
int RT30xxReadRFRegister ( struct rt_rtmp_adapter * pAd , u8 regID , u8 * pValue ) ; 
/*--RT30xxReadRFRegister--*/
void NICInitRFRegisters ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICInitRFRegisters--*/
void RtmpChipOpsRFHook ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpChipOpsRFHook--*/
void NICInitRT3090RFRegisters ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICInitRT3090RFRegisters--*/
void rtmp_timer_BeaconUpdateExec ( unsigned long data ) ; 
/*--rtmp_timer_BeaconUpdateExec--*/
void rtmp_timer_RtmpUsbStaAsicForceWakeupTimeout ( unsigned long data ) ; 
/*--rtmp_timer_RtmpUsbStaAsicForceWakeupTimeout--*/
int RtmpTimerQThread ( void * Context ) ; 
/*--RtmpTimerQThread--*/
struct rt_rtmp_timer_task_entry * RtmpTimerQInsert ( struct rt_rtmp_adapter * pAd , struct rt_ralink_timer * pTimer ) ; 
/*--RtmpTimerQInsert--*/
BOOLEAN RtmpTimerQRemove ( struct rt_rtmp_adapter * pAd , struct rt_ralink_timer * pTimer ) ; 
/*--RtmpTimerQRemove--*/
void RtmpTimerQExit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpTimerQExit--*/
void RtmpTimerQInit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RtmpTimerQInit--*/
void MlmeCntlConfirm ( struct rt_rtmp_adapter * pAd , unsigned long MsgType , u16 Msg ) ; 
/*--MlmeCntlConfirm--*/
void RT2870RejectPendingPackets ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT2870RejectPendingPackets--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rtusb_init ( void ) ; 
/*--rtusb_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rtusb_exit ( void ) ; 
/*--rtusb_exit--*/
; int MlmeThread ( void * Context ) ; 
/*--MlmeThread--*/
int RTUSBCmdThread ( void * Context ) ; 
/*--RTUSBCmdThread--*/
void RTUSBWatchDog ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBWatchDog--*/
void dump_urb ( struct urb * purb ) ; 
/*--dump_urb--*/
int NICInitRecv ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICInitRecv--*/
int NICInitTransmit ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICInitTransmit--*/
int RTUSBWriteHWMACAddress ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBWriteHWMACAddress--*/
void RTUSBBssBeaconStop ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBBssBeaconStop--*/
void RTUSBBssBeaconStart ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBBssBeaconStart--*/
void RTUSBBssBeaconInit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBBssBeaconInit--*/
void RTUSBBssBeaconExit ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBBssBeaconExit--*/
void BeaconUpdateExec ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--BeaconUpdateExec--*/
void RT28xxUsbMlmeRadioOn ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT28xxUsbMlmeRadioOn--*/
void RT28xxUsbMlmeRadioOFF ( struct rt_rtmp_adapter * pAd ) ; 
/*--RT28xxUsbMlmeRadioOFF--*/
int RTUSBFirmwareWrite ( struct rt_rtmp_adapter * pAd , const u8 * pFwImage , unsigned long FwLen ) ; 
/*--RTUSBFirmwareWrite--*/
int RTUSBVenderReset ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBVenderReset--*/
int RTUSBMultiRead ( struct rt_rtmp_adapter * pAd , u16 Offset , u8 * pData , u16 length ) ; 
/*--RTUSBMultiRead--*/
int RTUSBMultiWrite_OneByte ( struct rt_rtmp_adapter * pAd , u16 Offset , const u8 * pData ) ; 
/*--RTUSBMultiWrite_OneByte--*/
int RTUSBMultiWrite ( struct rt_rtmp_adapter * pAd , u16 Offset , const u8 * pData , u16 length ) ; 
/*--RTUSBMultiWrite--*/
int RTUSBSingleWrite ( struct rt_rtmp_adapter * pAd , u16 Offset , u16 Value ) ; 
/*--RTUSBSingleWrite--*/
int RTUSBReadMACRegister ( struct rt_rtmp_adapter * pAd , u16 Offset , u32 * pValue ) ; 
/*--RTUSBReadMACRegister--*/
int RTUSBWriteMACRegister ( struct rt_rtmp_adapter * pAd , u16 Offset , u32 Value ) ; 
/*--RTUSBWriteMACRegister--*/
int RTUSBReadBBPRegister ( struct rt_rtmp_adapter * pAd , u8 Id , u8 * pValue ) ; 
/*--RTUSBReadBBPRegister--*/
int RTUSBWriteBBPRegister ( struct rt_rtmp_adapter * pAd , u8 Id , u8 Value ) ; 
/*--RTUSBWriteBBPRegister--*/
int RTUSBWriteRFRegister ( struct rt_rtmp_adapter * pAd , u32 Value ) ; 
/*--RTUSBWriteRFRegister--*/
int RTUSBReadEEPROM ( struct rt_rtmp_adapter * pAd , u16 Offset , u8 * pData , u16 length ) ; 
/*--RTUSBReadEEPROM--*/
int RTUSBWriteEEPROM ( struct rt_rtmp_adapter * pAd , u16 Offset , u8 * pData , u16 length ) ; 
/*--RTUSBWriteEEPROM--*/
int RTUSBReadEEPROM16 ( struct rt_rtmp_adapter * pAd , u16 offset , u16 * pData ) ; 
/*--RTUSBReadEEPROM16--*/
void RTUSBPutToSleep ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBPutToSleep--*/
int RTUSBWakeUp ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBWakeUp--*/
void RTUSBInitializeCmdQ ( struct rt_cmdq * cmdq ) ; 
/*--RTUSBInitializeCmdQ--*/
int RTUSBEnqueueCmdFromNdis ( struct rt_rtmp_adapter * pAd , u32 Oid , BOOLEAN SetInformation , void * pInformationBuffer , u32 InformationBufferLength ) ; 
/*--RTUSBEnqueueCmdFromNdis--*/
int RTUSBEnqueueInternalCmd ( struct rt_rtmp_adapter * pAd , u32 Oid , void * pInformationBuffer , u32 InformationBufferLength ) ; 
/*--RTUSBEnqueueInternalCmd--*/
void RTUSBDequeueCmd ( struct rt_cmdq * cmdq , struct rt_cmdqelmt * * pcmdqelmt ) ; 
/*--RTUSBDequeueCmd--*/
int RTUSB_VendorRequest ( struct rt_rtmp_adapter * pAd , u32 TransferFlags , u8 RequestType , u8 Request , u16 Value , u16 Index , void * TransferBuffer , u32 TransferBufferLength ) ; 
/*--RTUSB_VendorRequest--*/
int RTUSB_ResetDevice ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSB_ResetDevice--*/
void CMDHandler ( struct rt_rtmp_adapter * pAd ) ; 
/*--CMDHandler--*/
void RTUSB_FILL_BULK_URB ( struct urb * pUrb , struct usb_device * pUsb_Dev , unsigned int bulkpipe , void * pTransferBuf , int BufSize , usb_complete_t Complete , void * pContext ) ; 
/*--RTUSB_FILL_BULK_URB--*/
void RTUSBInitTxDesc ( struct rt_rtmp_adapter * pAd , struct rt_tx_context * pTxContext , u8 BulkOutPipeId , usb_complete_t Func ) ; 
/*--RTUSBInitTxDesc--*/
void RTUSBInitHTTxDesc ( struct rt_rtmp_adapter * pAd , struct rt_ht_tx_context * pTxContext , u8 BulkOutPipeId , unsigned long BulkOutSize , usb_complete_t Func ) ; 
/*--RTUSBInitHTTxDesc--*/
void RTUSBInitRxDesc ( struct rt_rtmp_adapter * pAd , struct rt_rx_context * pRxContext ) ; 
/*--RTUSBInitRxDesc--*/
void RTUSBBulkOutDataPacket ( struct rt_rtmp_adapter * pAd , u8 BulkOutPipeId , u8 Index ) ; 
/*--RTUSBBulkOutDataPacket--*/
void RTUSBBulkOutDataPacketComplete ( struct urb * pUrb , struct pt_regs * pt_regs ) ; 
/*--RTUSBBulkOutDataPacketComplete--*/
void RTUSBBulkOutNullFrame ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBBulkOutNullFrame--*/
void RTUSBBulkOutNullFrameComplete ( struct urb * pUrb , struct pt_regs * pt_regs ) ; 
/*--RTUSBBulkOutNullFrameComplete--*/
void RTUSBBulkOutMLMEPacket ( struct rt_rtmp_adapter * pAd , u8 Index ) ; 
/*--RTUSBBulkOutMLMEPacket--*/
void RTUSBBulkOutMLMEPacketComplete ( struct urb * pUrb , struct pt_regs * pt_regs ) ; 
/*--RTUSBBulkOutMLMEPacketComplete--*/
void RTUSBBulkOutPsPoll ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBBulkOutPsPoll--*/
void RTUSBBulkOutPsPollComplete ( struct urb * pUrb , struct pt_regs * pt_regs ) ; 
/*--RTUSBBulkOutPsPollComplete--*/
void DoBulkIn ( struct rt_rtmp_adapter * pAd ) ; 
/*--DoBulkIn--*/
void RTUSBBulkReceive ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBBulkReceive--*/
void RTUSBBulkRxComplete ( struct urb * pUrb , struct pt_regs * pt_regs ) ; 
/*--RTUSBBulkRxComplete--*/
void RTUSBKickBulkOut ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBKickBulkOut--*/
void RTUSBCleanUpDataBulkOutQueue ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBCleanUpDataBulkOutQueue--*/
void RTUSBCleanUpMLMEBulkOutQueue ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBCleanUpMLMEBulkOutQueue--*/
void RTUSBCancelPendingIRPs ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBCancelPendingIRPs--*/
void RTUSBCancelPendingBulkInIRP ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBCancelPendingBulkInIRP--*/
void RTUSBCancelPendingBulkOutIRP ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBCancelPendingBulkOutIRP--*/
void REPORT_AMSDU_FRAMES_TO_LLC ( struct rt_rtmp_adapter * pAd , u8 * pData , unsigned long DataSize ) ; 
/*--REPORT_AMSDU_FRAMES_TO_LLC--*/
int RTUSBFreeDescriptorRequest ( struct rt_rtmp_adapter * pAd , u8 BulkOutPipeId , u32 NumberRequired ) ; 
/*--RTUSBFreeDescriptorRequest--*/
int RTUSBFreeDescriptorRelease ( struct rt_rtmp_adapter * pAd , u8 BulkOutPipeId ) ; 
/*--RTUSBFreeDescriptorRelease--*/
BOOLEAN RTUSBNeedQueueBackForAgg ( struct rt_rtmp_adapter * pAd , u8 BulkOutPipeId ) ; 
/*--RTUSBNeedQueueBackForAgg--*/
void RTUSBRejectPendingPackets ( struct rt_rtmp_adapter * pAd ) ; 
/*--RTUSBRejectPendingPackets--*/
void RTMPWriteTxInfo ( struct rt_rtmp_adapter * pAd , struct rt_txinfo * pTxInfo , u16 USBDMApktLen , BOOLEAN bWiv , u8 QueueSel , u8 NextValid , u8 TxBurst ) ; 
/*--RTMPWriteTxInfo--*/
u16 RtmpUSB_WriteSubTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , BOOLEAN bIsLast , u16 * FreeNumber ) ; 
/*--RtmpUSB_WriteSubTxResource--*/
u16 RtmpUSB_WriteFragTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u8 fragNum , u16 * FreeNumber ) ; 
/*--RtmpUSB_WriteFragTxResource--*/
u16 RtmpUSB_WriteSingleTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , BOOLEAN bIsLast , u16 * FreeNumber ) ; 
/*--RtmpUSB_WriteSingleTxResource--*/
u16 RtmpUSB_WriteMultiTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u8 frameNum , u16 * FreeNumber ) ; 
/*--RtmpUSB_WriteMultiTxResource--*/
void RtmpUSB_FinalWriteTxResource ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u16 totalMPDUSize , u16 TxIdx ) ; 
/*--RtmpUSB_FinalWriteTxResource--*/
void RtmpUSBDataLastTxIdx ( struct rt_rtmp_adapter * pAd , u8 QueIdx , u16 TxIdx ) ; 
/*--RtmpUSBDataLastTxIdx--*/
void RtmpUSBDataKickOut ( struct rt_rtmp_adapter * pAd , struct rt_tx_blk * pTxBlk , u8 QueIdx ) ; 
/*--RtmpUSBDataKickOut--*/
int RtmpUSBMgmtKickOut ( struct rt_rtmp_adapter * pAd , u8 QueIdx , void * pPacket , u8 * pSrcBufVA , u32 SrcBufLen ) ; 
/*--RtmpUSBMgmtKickOut--*/
void RtmpUSBNullFrameKickOut ( struct rt_rtmp_adapter * pAd , u8 QueIdx , u8 * pNullFrame , u32 frameLen ) ; 
/*--RtmpUSBNullFrameKickOut--*/
int RTMPCheckRxError ( struct rt_rtmp_adapter * pAd , struct rt_header_802_11 * pHeader , struct rt_rxwi * pRxWI , PRT28XX_RXD_STRUC pRxINFO ) ; 
void RtmpUsbStaAsicForceWakeupTimeout ( void * SystemSpecific1 , void * FunctionContext , void * SystemSpecific2 , void * SystemSpecific3 ) ; 
/*--RtmpUsbStaAsicForceWakeupTimeout--*/
void RT28xxUsbStaAsicForceWakeup ( struct rt_rtmp_adapter * pAd , BOOLEAN bFromTx ) ; 
/*--RT28xxUsbStaAsicForceWakeup--*/
void RT28xxUsbStaAsicSleepThenAutoWakeup ( struct rt_rtmp_adapter * pAd , u16 TbttNumToNextWakeUp ) ; 
/*--RT28xxUsbStaAsicSleepThenAutoWakeup--*/
void NICInitRT3070RFRegisters ( struct rt_rtmp_adapter * pAd ) ; 
/*--NICInitRT3070RFRegisters--*/
void CamResetAllEntry ( struct net_device * dev ) ; 
/*--CamResetAllEntry--*/
void write_cam ( struct net_device * dev , u8 addr , u32 data ) ; 
/*--write_cam--*/
u32 read_cam ( struct net_device * dev , u8 addr ) ; 
/*--read_cam--*/
u8 read_nic_byte ( struct net_device * dev , int x ) ; 
/*--read_nic_byte--*/
u32 read_nic_dword ( struct net_device * dev , int x ) ; 
/*--read_nic_dword--*/
u16 read_nic_word ( struct net_device * dev , int x ) ; 
/*--read_nic_word--*/
void write_nic_byte ( struct net_device * dev , int x , u8 y ) ; 
/*--write_nic_byte--*/
void write_nic_dword ( struct net_device * dev , int x , u32 y ) ; 
/*--write_nic_dword--*/
void write_nic_word ( struct net_device * dev , int x , u16 y ) ; 
/*--write_nic_word--*/
u8 rtl8192e_ap_sec_type ( struct ieee80211_device * ieee ) ; 
/*--rtl8192e_ap_sec_type--*/
void rtl8192e_SetHwReg ( struct net_device * dev , u8 variable , u8 * val ) ; 
/*--rtl8192e_SetHwReg--*/
short check_nic_enough_desc ( struct net_device * dev , int prio ) ; 
/*--check_nic_enough_desc--*/
void rtl8192_irq_disable ( struct net_device * dev ) ; 
/*--rtl8192_irq_disable--*/
void rtl8192_update_msr ( struct net_device * dev ) ; 
/*--rtl8192_update_msr--*/
void rtl8192_set_chan ( struct net_device * dev , short ch ) ; 
/*--rtl8192_set_chan--*/
void rtl8192_rx_enable ( struct net_device * dev ) ; 
/*--rtl8192_rx_enable--*/
void rtl8192_tx_enable ( struct net_device * dev ) ; 
/*--rtl8192_tx_enable--*/
void PHY_SetRtl8192eRfOff ( struct net_device * dev ) ; 
/*--PHY_SetRtl8192eRfOff--*/
void rtl8192_halt_adapter ( struct net_device * dev , bool reset ) ; 
/*--rtl8192_halt_adapter--*/
void rtl819xE_tx_cmd ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--rtl819xE_tx_cmd--*/
short rtl8192_tx ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--rtl8192_tx--*/
void rtl8192_update_ratr_table ( struct net_device * dev ) ; 
/*--rtl8192_update_ratr_table--*/
short rtl8192_is_tx_queue_empty ( struct net_device * dev ) ; 
/*--rtl8192_is_tx_queue_empty--*/
void rtl8192_hw_wakeup_wq ( struct work_struct * work ) ; 
/*--rtl8192_hw_wakeup_wq--*/
void rtl8192_prepare_beacon ( struct r8192_priv * priv ) ; 
/*--rtl8192_prepare_beacon--*/
void rtl8192_start_beacon ( struct net_device * dev ) ; 
/*--rtl8192_start_beacon--*/
void InactivePsWorkItemCallback ( struct net_device * dev ) ; 
/*--InactivePsWorkItemCallback--*/
bool MgntActSet_802_11_PowerSaveMode ( struct net_device * dev , u8 rtPsMode ) ; 
/*--MgntActSet_802_11_PowerSaveMode--*/
void LeisurePSEnter ( struct net_device * dev ) ; 
/*--LeisurePSEnter--*/
void LeisurePSLeave ( struct net_device * dev ) ; 
/*--LeisurePSLeave--*/
void IPSEnter ( struct net_device * dev ) ; 
/*--IPSEnter--*/
void IPSLeave ( struct net_device * dev ) ; 
/*--IPSLeave--*/
void IPSLeave_wq ( void * data ) ; 
/*--IPSLeave_wq--*/
void ieee80211_ips_leave_wq ( struct net_device * dev ) ; 
/*--ieee80211_ips_leave_wq--*/
void ieee80211_ips_leave ( struct net_device * dev ) ; 
/*--ieee80211_ips_leave--*/
void rtl819x_watchdog_wqcallback ( struct work_struct * work ) ; 
/*--rtl819x_watchdog_wqcallback--*/
void watch_dog_timer_callback ( unsigned long data ) ; 
/*--watch_dog_timer_callback--*/
int _rtl8192_up ( struct net_device * dev ) ; 
/*--_rtl8192_up--*/
int rtl8192_up ( struct net_device * dev ) ; 
/*--rtl8192_up--*/
int rtl8192_down ( struct net_device * dev ) ; 
/*--rtl8192_down--*/
void rtl8192_commit ( struct net_device * dev ) ; 
/*--rtl8192_commit--*/
void rtl8192_restart ( struct work_struct * work ) ; 
/*--rtl8192_restart--*/
void rtl8192_irq_tx_tasklet ( struct r8192_priv * priv ) ; 
/*--rtl8192_irq_tx_tasklet--*/
void rtl8192_irq_rx_tasklet ( struct r8192_priv * priv ) ; 
/*--rtl8192_irq_rx_tasklet--*/
void rtl8192_cancel_deferred_work ( struct r8192_priv * priv ) ; 
/*--rtl8192_cancel_deferred_work--*/
irqreturn_t rtl8192_interrupt ( int irq , void * netdev ) ; 
/*--rtl8192_interrupt--*/
void rtl8192_try_wake_queue ( struct net_device * dev , int pri ) ; 
/*--rtl8192_try_wake_queue--*/
void EnableHWSecurityConfig8192 ( struct net_device * dev ) ; 
/*--EnableHWSecurityConfig8192--*/
void setKey ( struct net_device * dev , u8 EntryNo , u8 KeyIndex , u16 KeyType , u8 * MacAddr , u8 DefaultKey , u32 * KeyContent ) ; 
/*--setKey--*/
void CamPrintDbgReg ( struct net_device * dev ) ; 
/*--CamPrintDbgReg--*/
bool NicIFEnableNIC ( struct net_device * dev ) ; 
/*--NicIFEnableNIC--*/
bool NicIFDisableNIC ( struct net_device * dev ) ; 
/*--NicIFDisableNIC--*/
u32 eprom_read ( struct net_device * dev , u32 addr ) ; 
/*--eprom_read--*/
struct iw_statistics * r8192_get_wireless_stats ( struct net_device * dev ) ; 
/*--r8192_get_wireless_stats--*/
void PHY_SetRF8256Bandwidth ( struct net_device * dev , HT_CHANNEL_WIDTH Bandwidth ) ; 
/*--PHY_SetRF8256Bandwidth--*/
RT_STATUS PHY_RF8256_Config ( struct net_device * dev ) ; 
/*--PHY_RF8256_Config--*/
RT_STATUS phy_RF8256_Config_ParaFile ( struct net_device * dev ) ; 
/*--phy_RF8256_Config_ParaFile--*/
void PHY_SetRF8256CCKTxPower ( struct net_device * dev , u8 powerlevel ) ; 
/*--PHY_SetRF8256CCKTxPower--*/
void PHY_SetRF8256OFDMTxPower ( struct net_device * dev , u8 powerlevel ) ; 
/*--PHY_SetRF8256OFDMTxPower--*/
bool MgntActSet_RF_State ( struct net_device * dev , RT_RF_POWER_STATE StateToSet , RT_RF_CHANGE_SOURCE ChangeSource ) ; 
/*--MgntActSet_RF_State--*/
u8 rtl8192_phy_CheckIsLegalRFPath ( struct net_device * dev , u32 eRFPath ) ; 
/*--rtl8192_phy_CheckIsLegalRFPath--*/
void rtl8192_setBBreg ( struct net_device * dev , u32 dwRegAddr , u32 dwBitMask , u32 dwData ) ; 
/*--rtl8192_setBBreg--*/
u32 rtl8192_QueryBBReg ( struct net_device * dev , u32 dwRegAddr , u32 dwBitMask ) ; 
/*--rtl8192_QueryBBReg--*/
void rtl8192_phy_SetRFReg ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 RegAddr , u32 BitMask , u32 Data ) ; 
/*--rtl8192_phy_SetRFReg--*/
u32 rtl8192_phy_QueryRFReg ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 RegAddr , u32 BitMask ) ; 
/*--rtl8192_phy_QueryRFReg--*/
void rtl8192_phy_configmac ( struct net_device * dev ) ; 
/*--rtl8192_phy_configmac--*/
void rtl8192_phyConfigBB ( struct net_device * dev , u8 ConfigType ) ; 
/*--rtl8192_phyConfigBB--*/
RT_STATUS rtl8192_phy_checkBBAndRF ( struct net_device * dev , HW90_BLOCK_E CheckBlock , RF90_RADIO_PATH_E eRFPath ) ; 
/*--rtl8192_phy_checkBBAndRF--*/
RT_STATUS rtl8192_BBConfig ( struct net_device * dev ) ; 
/*--rtl8192_BBConfig--*/
void rtl8192_phy_getTxPower ( struct net_device * dev ) ; 
/*--rtl8192_phy_getTxPower--*/
void rtl8192_phy_setTxPower ( struct net_device * dev , u8 channel ) ; 
/*--rtl8192_phy_setTxPower--*/
RT_STATUS rtl8192_phy_RFConfig ( struct net_device * dev ) ; 
/*--rtl8192_phy_RFConfig--*/
void rtl8192_phy_updateInitGain ( struct net_device * dev ) ; 
/*--rtl8192_phy_updateInitGain--*/
u8 rtl8192_phy_ConfigRFWithHeaderFile ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath ) ; 
/*--rtl8192_phy_ConfigRFWithHeaderFile--*/
void rtl8192_SwChnl_WorkItem ( struct net_device * dev ) ; 
/*--rtl8192_SwChnl_WorkItem--*/
u8 rtl8192_phy_SwChnl ( struct net_device * dev , u8 channel ) ; 
/*--rtl8192_phy_SwChnl--*/
void rtl8192_SetBWModeWorkItem ( struct net_device * dev ) ; 
/*--rtl8192_SetBWModeWorkItem--*/
void rtl8192_SetBWMode ( struct net_device * dev , HT_CHANNEL_WIDTH Bandwidth , HT_EXTCHNL_OFFSET Offset ) ; 
/*--rtl8192_SetBWMode--*/
void InitialGain819xPci ( struct net_device * dev , u8 Operation ) ; 
/*--InitialGain819xPci--*/
void firmware_init_param ( struct net_device * dev ) ; 
/*--firmware_init_param--*/
bool init_firmware ( struct net_device * dev ) ; 
/*--init_firmware--*/
RT_STATUS cmpk_message_handle_tx ( struct net_device * dev , u8 * code_virtual_address , u32 packettype , u32 buffer_len ) ; 
/*--cmpk_message_handle_tx--*/
u32 cmpk_message_handle_rx ( struct net_device * dev , struct ieee80211_rx_stats * pstats ) ; 
/*--cmpk_message_handle_rx--*/
void init_hal_dm ( struct net_device * dev ) ; 
/*--init_hal_dm--*/
void deinit_hal_dm ( struct net_device * dev ) ; 
/*--deinit_hal_dm--*/
void dm_check_ac_dc_power ( struct net_device * dev ) ; 
/*--dm_check_ac_dc_power--*/
void hal_dm_watchdog ( struct net_device * dev ) ; 
/*--hal_dm_watchdog--*/
void init_rate_adaptive ( struct net_device * dev ) ; 
/*--init_rate_adaptive--*/
void dm_txpower_trackingcallback ( struct work_struct * work ) ; 
/*--dm_txpower_trackingcallback--*/
void dm_initialize_txpower_tracking ( struct net_device * dev ) ; 
/*--dm_initialize_txpower_tracking--*/
void dm_cck_txpower_adjust ( struct net_device * dev , bool binch14 ) ; 
/*--dm_cck_txpower_adjust--*/
void dm_restore_dynamic_mechanism_state ( struct net_device * dev ) ; 
/*--dm_restore_dynamic_mechanism_state--*/
void dm_backup_dynamic_mechanism_state ( struct net_device * dev ) ; 
/*--dm_backup_dynamic_mechanism_state--*/
void dm_change_dynamic_initgain_thresh ( struct net_device * dev , u32 dm_type , u32 dm_value ) ; 
/*--dm_change_dynamic_initgain_thresh--*/
void dm_init_edca_turbo ( struct net_device * dev ) ; 
/*--dm_init_edca_turbo--*/
void dm_gpio_change_rf_callback ( struct work_struct * work ) ; 
/*--dm_gpio_change_rf_callback--*/
void dm_rf_pathcheck_workitemcallback ( struct work_struct * work ) ; 
/*--dm_rf_pathcheck_workitemcallback--*/
void dm_fsync_timer_callback ( unsigned long data ) ; 
/*--dm_fsync_timer_callback--*/
void dm_check_fsync ( struct net_device * dev ) ; 
/*--dm_check_fsync--*/
void dm_shadow_init ( struct net_device * dev ) ; 
/*--dm_shadow_init--*/
int rtl8192E_save_state ( struct pci_dev * dev , pm_message_t state ) ; 
/*--rtl8192E_save_state--*/
int rtl8192E_suspend ( struct pci_dev * pdev , pm_message_t state ) ; 
/*--rtl8192E_suspend--*/
int rtl8192E_resume ( struct pci_dev * pdev ) ; 
/*--rtl8192E_resume--*/
int rtl8192E_enable_wake ( struct pci_dev * dev , pm_message_t state , int enable ) ; 
/*--rtl8192E_enable_wake--*/
bool AddReorderEntry ( PRX_TS_RECORD pTS , PRX_REORDER_ENTRY pReorderEntry ) ; 
/*--AddReorderEntry--*/
void ieee80211_indicate_packets ( struct ieee80211_device * ieee , struct ieee80211_rxb * * prxbIndicateArray , u8 index ) ; 
/*--ieee80211_indicate_packets--*/
void RxReorderIndicatePacket ( struct ieee80211_device * ieee , struct ieee80211_rxb * prxb , PRX_TS_RECORD pTS , u16 SeqNum ) ; 
/*--RxReorderIndicatePacket--*/
u8 parse_subframe ( struct ieee80211_device * ieee , struct sk_buff * skb , struct ieee80211_rx_stats * rx_stats , struct ieee80211_rxb * rxb , u8 * src , u8 * dst ) ; 
/*--parse_subframe--*/
int ieee80211_rtl_rx ( struct ieee80211_device * ieee , struct sk_buff * skb , struct ieee80211_rx_stats * rx_stats ) ; 
/*--ieee80211_rtl_rx--*/
int ieee80211_parse_info_param ( struct ieee80211_device * ieee , struct ieee80211_info_element * info_element , u16 length , struct ieee80211_network * network , struct ieee80211_rx_stats * stats ) ; 
/*--ieee80211_parse_info_param--*/
long ieee80211_translate_todbm ( u8 signal_strength_index ) ; 
/*--ieee80211_translate_todbm--*/
void ieee80211_rx_mgt_rsl ( struct ieee80211_device * ieee , struct ieee80211_hdr_4addr * header , struct ieee80211_rx_stats * stats ) ; 
/*--ieee80211_rx_mgt_rsl--*/
short ieee80211_is_54g_rsl ( struct ieee80211_network net ) ; 
/*--ieee80211_is_54g_rsl--*/
short ieee80211_is_shortslot_rsl ( struct ieee80211_network net ) ; 
/*--ieee80211_is_shortslot_rsl--*/
unsigned int ieee80211_MFIE_rate_len ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_MFIE_rate_len--*/
void ieee80211_MFIE_Brate ( struct ieee80211_device * ieee , u8 * * tag_p ) ; 
/*--ieee80211_MFIE_Brate--*/
void ieee80211_MFIE_Grate ( struct ieee80211_device * ieee , u8 * * tag_p ) ; 
/*--ieee80211_MFIE_Grate--*/
void ieee80211_WMM_Info ( struct ieee80211_device * ieee , u8 * * tag_p ) ; 
/*--ieee80211_WMM_Info--*/
void ieee80211_TURBO_Info ( struct ieee80211_device * ieee , u8 * * tag_p ) ; 
/*--ieee80211_TURBO_Info--*/
void enqueue_mgmt ( struct ieee80211_device * ieee , struct sk_buff * skb ) ; 
/*--enqueue_mgmt--*/
struct sk_buff * dequeue_mgmt ( struct ieee80211_device * ieee ) ; 
/*--dequeue_mgmt--*/
void init_mgmt_queue ( struct ieee80211_device * ieee ) ; 
/*--init_mgmt_queue--*/
u8 MgntQuery_MgntFrameTxRate ( struct ieee80211_device * ieee ) ; 
/*--MgntQuery_MgntFrameTxRate--*/
void ieee80211_send_beacon ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_send_beacon--*/
void ieee80211_send_beacon_cb ( unsigned long _ieee ) ; 
/*--ieee80211_send_beacon_cb--*/
void ieee80211_send_probe ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_send_probe--*/
void ieee80211_send_probe_requests_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_send_probe_requests_rsl--*/
void ieee80211_softmac_scan_syncro_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_scan_syncro_rsl--*/
void ieee80211_softmac_scan_wq ( struct work_struct * work ) ; 
/*--ieee80211_softmac_scan_wq--*/
void ieee80211_beacons_start ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_beacons_start--*/
void ieee80211_beacons_stop ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_beacons_stop--*/
void ieee80211_stop_send_beacons_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_stop_send_beacons_rsl--*/
void ieee80211_start_send_beacons_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_start_send_beacons_rsl--*/
void ieee80211_softmac_stop_scan ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_stop_scan--*/
void ieee80211_stop_scan_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_stop_scan_rsl--*/
void ieee80211_rtl_start_scan ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_rtl_start_scan--*/
void ieee80211_start_scan_syncro_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_start_scan_syncro_rsl--*/
struct sk_buff * ieee80211_assoc_resp ( struct ieee80211_device * ieee , u8 * dest ) ; 
/*--ieee80211_assoc_resp--*/
struct sk_buff * ieee80211_auth_resp ( struct ieee80211_device * ieee , int status , u8 * dest ) ; 
/*--ieee80211_auth_resp--*/
struct sk_buff * ieee80211_null_func ( struct ieee80211_device * ieee , short pwr ) ; 
/*--ieee80211_null_func--*/
struct sk_buff * ieee80211_pspoll_func ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_pspoll_func--*/
void ieee80211_resp_to_assoc_rq ( struct ieee80211_device * ieee , u8 * dest ) ; 
/*--ieee80211_resp_to_assoc_rq--*/
void ieee80211_resp_to_auth ( struct ieee80211_device * ieee , int s , u8 * dest ) ; 
/*--ieee80211_resp_to_auth--*/
void ieee80211_resp_to_probe ( struct ieee80211_device * ieee , u8 * dest ) ; 
/*--ieee80211_resp_to_probe--*/
void ieee80211_associate_abort ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_associate_abort--*/
void ieee80211_associate_abort_cb ( unsigned long dev ) ; 
/*--ieee80211_associate_abort_cb--*/
void ieee80211_associate_step1 ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_associate_step1--*/
void ieee80211_rtl_auth_challenge ( struct ieee80211_device * ieee , u8 * challenge , int chlen ) ; 
/*--ieee80211_rtl_auth_challenge--*/
void ieee80211_associate_step2 ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_associate_step2--*/
void ieee80211_associate_complete_wq ( struct work_struct * work ) ; 
/*--ieee80211_associate_complete_wq--*/
void ieee80211_associate_complete ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_associate_complete--*/
void ieee80211_associate_procedure_wq ( struct work_struct * work ) ; 
/*--ieee80211_associate_procedure_wq--*/
void ieee80211_softmac_check_all_nets ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_check_all_nets--*/
int auth_rq_parse ( struct sk_buff * skb , u8 * dest ) ; 
/*--auth_rq_parse--*/
int assoc_rq_parse ( struct sk_buff * skb , u8 * dest ) ; 
/*--assoc_rq_parse--*/
void ieee80211_sta_ps_send_null_frame ( struct ieee80211_device * ieee , short pwr ) ; 
/*--ieee80211_sta_ps_send_null_frame--*/
void ieee80211_sta_ps_send_pspoll_frame ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_sta_ps_send_pspoll_frame--*/
short ieee80211_sta_ps_sleep ( struct ieee80211_device * ieee , u32 * time_h , u32 * time_l ) ; 
/*--ieee80211_sta_ps_sleep--*/
void ieee80211_sta_wakeup ( struct ieee80211_device * ieee , short nl ) ; 
/*--ieee80211_sta_wakeup--*/
void ieee80211_ps_tx_ack_rsl ( struct ieee80211_device * ieee , short success ) ; 
/*--ieee80211_ps_tx_ack_rsl--*/
void ieee80211_process_action ( struct ieee80211_device * ieee , struct sk_buff * skb ) ; 
/*--ieee80211_process_action--*/
void ieee80211_softmac_xmit_rsl ( struct ieee80211_txb * txb , struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_xmit_rsl--*/
void ieee80211_resume_tx ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_resume_tx--*/
void ieee80211_reset_queue_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_reset_queue_rsl--*/
void ieee80211_rtl_wake_queue_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_rtl_wake_queue_rsl--*/
void ieee80211_rtl_stop_queue_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_rtl_stop_queue_rsl--*/
void ieee80211_start_master_bss ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_start_master_bss--*/
void ieee80211_start_monitor_mode ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_start_monitor_mode--*/
void ieee80211_start_ibss_wq ( struct work_struct * work ) ; 
/*--ieee80211_start_ibss_wq--*/
void ieee80211_start_bss ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_start_bss--*/
void ieee80211_disassociate_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_disassociate_rsl--*/
void ieee80211_associate_retry_wq ( struct work_struct * work ) ; 
/*--ieee80211_associate_retry_wq--*/
struct sk_buff * ieee80211_get_beacon_ ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_get_beacon_--*/
struct sk_buff * ieee80211_get_beacon_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_get_beacon_rsl--*/
void ieee80211_softmac_stop_protocol_rsl ( struct ieee80211_device * ieee , u8 shutdown ) ; 
/*--ieee80211_softmac_stop_protocol_rsl--*/
void ieee80211_stop_protocol ( struct ieee80211_device * ieee , u8 shutdown ) ; 
/*--ieee80211_stop_protocol--*/
void ieee80211_softmac_start_protocol_rsl ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_start_protocol_rsl--*/
void ieee80211_start_protocol ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_start_protocol--*/
void ieee80211_softmac_init ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_init--*/
void ieee80211_softmac_free ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_free--*/
void ieee80211_wpa_assoc_frame ( struct ieee80211_device * ieee , char * wpa_ie , int wpa_ie_len ) ; 
/*--ieee80211_wpa_assoc_frame--*/
void SendDisassociation_rsl ( struct ieee80211_device * ieee , u8 * asSta , u8 asRsn ) ; 
/*--SendDisassociation_rsl--*/
int ieee80211_wpa_supplicant_ioctl_rsl ( struct ieee80211_device * ieee , struct iw_point * p ) ; 
/*--ieee80211_wpa_supplicant_ioctl_rsl--*/
void notify_wx_assoc_event_rsl ( struct ieee80211_device * ieee ) ; 
/*--notify_wx_assoc_event_rsl--*/
int ieee80211_encrypt_fragment ( struct ieee80211_device * ieee , struct sk_buff * frag , int hdr_len ) ; 
/*--ieee80211_encrypt_fragment--*/
void ieee80211_txb_free_rsl ( struct ieee80211_txb * txb ) ; 
/*--ieee80211_txb_free_rsl--*/
struct ieee80211_txb * ieee80211_alloc_txb ( int nr_frags , int txb_size , int gfp_mask ) ; 
/*--ieee80211_alloc_txb--*/
void ieee80211_tx_query_agg_cap ( struct ieee80211_device * ieee , struct sk_buff * skb , cb_desc * tcb_desc ) ; 
/*--ieee80211_tx_query_agg_cap--*/
void ieee80211_qurey_ShortPreambleMode ( struct ieee80211_device * ieee , cb_desc * tcb_desc ) ; 
/*--ieee80211_qurey_ShortPreambleMode--*/
void ieee80211_query_HTCapShortGI ( struct ieee80211_device * ieee , cb_desc * tcb_desc ) ; 
/*--ieee80211_query_HTCapShortGI--*/
void ieee80211_query_BandwidthMode ( struct ieee80211_device * ieee , cb_desc * tcb_desc ) ; 
/*--ieee80211_query_BandwidthMode--*/
void ieee80211_query_protectionmode ( struct ieee80211_device * ieee , cb_desc * tcb_desc , struct sk_buff * skb ) ; 
/*--ieee80211_query_protectionmode--*/
void ieee80211_txrate_selectmode ( struct ieee80211_device * ieee , cb_desc * tcb_desc ) ; 
/*--ieee80211_txrate_selectmode--*/
void ieee80211_query_seqnum ( struct ieee80211_device * ieee , struct sk_buff * skb , u8 * dst ) ; 
/*--ieee80211_query_seqnum--*/
int ieee80211_rtl_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--ieee80211_rtl_xmit--*/
int ieee80211_wx_get_scan_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_scan_rsl--*/
int ieee80211_wx_set_encode_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * keybuf ) ; 
/*--ieee80211_wx_set_encode_rsl--*/
int ieee80211_wx_get_encode_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * keybuf ) ; 
/*--ieee80211_wx_get_encode_rsl--*/
int ieee80211_wx_set_encode_ext_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_encode_ext_rsl--*/
int ieee80211_wx_get_encode_ext_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_encode_ext_rsl--*/
int ieee80211_wx_set_mlme_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_mlme_rsl--*/
int ieee80211_wx_set_auth_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , struct iw_param * data , char * extra ) ; 
/*--ieee80211_wx_set_auth_rsl--*/
int ieee80211_wx_set_gen_ie_rsl ( struct ieee80211_device * ieee , u8 * ie , size_t len ) ; 
/*--ieee80211_wx_set_gen_ie_rsl--*/
struct net_device * alloc_ieee80211_rsl ( int sizeof_priv ) ; 
/*--alloc_ieee80211_rsl--*/
void free_ieee80211_rsl ( struct net_device * dev ) ; 
/*--free_ieee80211_rsl--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ieee80211_rtl_init ( void ) ; 
/*--ieee80211_rtl_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ieee80211_rtl_exit ( void ) ; 
/*--ieee80211_rtl_exit--*/
int ieee80211_wx_set_freq_rsl ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_set_freq_rsl--*/
int ieee80211_wx_get_freq_rsl ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_get_freq_rsl--*/
int ieee80211_wx_get_wap_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_wap_rsl--*/
int ieee80211_wx_set_wap_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * awrq , char * extra ) ; 
/*--ieee80211_wx_set_wap_rsl--*/
int ieee80211_wx_get_essid_rsl ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_get_essid_rsl--*/
int ieee80211_wx_set_rate_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_rate_rsl--*/
int ieee80211_wx_get_rate_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_rate_rsl--*/
int ieee80211_wx_set_rts_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_rts_rsl--*/
int ieee80211_wx_get_rts_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_rts_rsl--*/
int ieee80211_wx_set_mode_rsl ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_set_mode_rsl--*/
void ieee80211_wx_sync_scan_wq ( struct work_struct * work ) ; 
/*--ieee80211_wx_sync_scan_wq--*/
int ieee80211_wx_set_scan_rsl ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_set_scan_rsl--*/
int ieee80211_wx_set_essid_rsl ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_essid_rsl--*/
int ieee80211_wx_get_mode_rsl ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_get_mode_rsl--*/
int ieee80211_wx_set_rawtx_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_rawtx_rsl--*/
int ieee80211_wx_get_name_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_name_rsl--*/
int ieee80211_wx_set_power_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_power_rsl--*/
int ieee80211_wx_get_power_rsl ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_power_rsl--*/
void HTUpdateDefaultSetting ( struct ieee80211_device * ieee ) ; 
/*--HTUpdateDefaultSetting--*/
void HTDebugHTCapability ( u8 * CapIE , u8 * TitleString ) ; 
/*--HTDebugHTCapability--*/
void HTDebugHTInfo ( u8 * InfoIE , u8 * TitleString ) ; 
/*--HTDebugHTInfo--*/
bool IsHTHalfNmode40Bandwidth ( struct ieee80211_device * ieee ) ; 
/*--IsHTHalfNmode40Bandwidth--*/
bool IsHTHalfNmodeSGI ( struct ieee80211_device * ieee , bool is40MHz ) ; 
/*--IsHTHalfNmodeSGI--*/
u16 HTHalfMcsToDataRate ( struct ieee80211_device * ieee , u8 nMcsRate ) ; 
/*--HTHalfMcsToDataRate--*/
u16 HTMcsToDataRate ( struct ieee80211_device * ieee , u8 nMcsRate ) ; 
/*--HTMcsToDataRate--*/
u16 TxCountToDataRate ( struct ieee80211_device * ieee , u8 nDataRate ) ; 
/*--TxCountToDataRate--*/
bool IsHTHalfNmodeAPs ( struct ieee80211_device * ieee ) ; 
/*--IsHTHalfNmodeAPs--*/
void HTIOTPeerDetermine ( struct ieee80211_device * ieee ) ; 
/*--HTIOTPeerDetermine--*/
u8 HTIOTActIsDisableMCS14 ( struct ieee80211_device * ieee , u8 * PeerMacAddr ) ; 
/*--HTIOTActIsDisableMCS14--*/
u8 HTIOTActIsForcedCTS2Self ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActIsForcedCTS2Self--*/
bool HTIOTActIsDisableMCS15 ( struct ieee80211_device * ieee ) ; 
/*--HTIOTActIsDisableMCS15--*/
bool HTIOTActIsDisableMCSTwoSpatialStream ( struct ieee80211_device * ieee , u8 * PeerMacAddr ) ; 
/*--HTIOTActIsDisableMCSTwoSpatialStream--*/
u8 HTIOTActIsDisableEDCATurbo ( struct ieee80211_device * ieee , u8 * PeerMacAddr ) ; 
/*--HTIOTActIsDisableEDCATurbo--*/
u8 HTIOTActIsMgntUseCCK6M ( struct ieee80211_network * network ) ; 
/*--HTIOTActIsMgntUseCCK6M--*/
u8 HTIOTActIsCCDFsync ( u8 * PeerMacAddr ) ; 
/*--HTIOTActIsCCDFsync--*/
bool HTIOTActIsNullDataPowerSaving ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActIsNullDataPowerSaving--*/
void HTResetIOTSetting ( PRT_HIGH_THROUGHPUT pHTInfo ) ; 
/*--HTResetIOTSetting--*/
void HTConstructCapabilityElement ( struct ieee80211_device * ieee , u8 * posHTCap , u8 * len , u8 IsEncrypt ) ; 
/*--HTConstructCapabilityElement--*/
void HTConstructInfoElement ( struct ieee80211_device * ieee , u8 * posHTInfo , u8 * len , u8 IsEncrypt ) ; 
/*--HTConstructInfoElement--*/
void HTConstructRT2RTAggElement ( struct ieee80211_device * ieee , u8 * posRT2RTAgg , u8 * len ) ; 
/*--HTConstructRT2RTAggElement--*/
u8 HT_PickMCSRate ( struct ieee80211_device * ieee , u8 * pOperateMCS ) ; 
/*--HT_PickMCSRate--*/
u8 HTGetHighestMCSRate ( struct ieee80211_device * ieee , u8 * pMCSRateSet , u8 * pMCSFilter ) ; 
/*--HTGetHighestMCSRate--*/
u8 HTFilterMCSRate ( struct ieee80211_device * ieee , u8 * pSupportMCS , u8 * pOperateMCS ) ; 
/*--HTFilterMCSRate--*/
void HTOnAssocRsp ( struct ieee80211_device * ieee ) ; 
/*--HTOnAssocRsp--*/
void HTInitializeHTInfo ( struct ieee80211_device * ieee ) ; 
/*--HTInitializeHTInfo--*/
void HTInitializeBssDesc ( PBSS_HT pBssHT ) ; 
/*--HTInitializeBssDesc--*/
void HTResetSelfAndSavePeerSetting ( struct ieee80211_device * ieee , struct ieee80211_network * pNetwork ) ; 
/*--HTResetSelfAndSavePeerSetting--*/
void HTUpdateSelfAndPeerSetting ( struct ieee80211_device * ieee , struct ieee80211_network * pNetwork ) ; 
/*--HTUpdateSelfAndPeerSetting--*/
void HTUseDefaultSetting ( struct ieee80211_device * ieee ) ; 
/*--HTUseDefaultSetting--*/
u8 HTCCheck ( struct ieee80211_device * ieee , u8 * pFrame ) ; 
/*--HTCCheck--*/
void HTSetConnectBwMode ( struct ieee80211_device * ieee , HT_CHANNEL_WIDTH Bandwidth , HT_EXTCHNL_OFFSET Offset ) ; 
/*--HTSetConnectBwMode--*/
void HTSetConnectBwModeCallback ( struct ieee80211_device * ieee ) ; 
/*--HTSetConnectBwModeCallback--*/
void TsSetupTimeOut ( unsigned long data ) ; 
/*--TsSetupTimeOut--*/
void TsInactTimeout ( unsigned long data ) ; 
/*--TsInactTimeout--*/
void RxPktPendingTimeout ( unsigned long data ) ; 
/*--RxPktPendingTimeout--*/
void TsAddBaProcess ( unsigned long data ) ; 
/*--TsAddBaProcess--*/
void ResetTsCommonInfo ( PTS_COMMON_INFO pTsCommonInfo ) ; 
/*--ResetTsCommonInfo--*/
void ResetTxTsEntry ( PTX_TS_RECORD pTS ) ; 
/*--ResetTxTsEntry--*/
void ResetRxTsEntry ( PRX_TS_RECORD pTS ) ; 
/*--ResetRxTsEntry--*/
void TSInitialize ( struct ieee80211_device * ieee ) ; 
/*--TSInitialize--*/
void AdmitTS ( struct ieee80211_device * ieee , PTS_COMMON_INFO pTsCommonInfo , u32 InactTime ) ; 
/*--AdmitTS--*/
PTS_COMMON_INFO SearchAdmitTRStream ( struct ieee80211_device * ieee , u8 * Addr , u8 TID , TR_SELECT TxRxSelect ) ; 
/*--SearchAdmitTRStream--*/
void MakeTSEntry ( PTS_COMMON_INFO pTsCommonInfo , u8 * Addr , PTSPEC_BODY pTSPEC , PQOS_TCLAS pTCLAS , u8 TCLAS_Num , u8 TCLAS_Proc ) ; 
/*--MakeTSEntry--*/
bool GetTs ( struct ieee80211_device * ieee , PTS_COMMON_INFO * ppTS , u8 * Addr , u8 TID , TR_SELECT TxRxSelect , bool bAddNewTs ) ; 
/*--GetTs--*/
void RemoveTsEntry ( struct ieee80211_device * ieee , PTS_COMMON_INFO pTs , TR_SELECT TxRxSelect ) ; 
/*--RemoveTsEntry--*/
void RemovePeerTS ( struct ieee80211_device * ieee , u8 * Addr ) ; 
/*--RemovePeerTS--*/
void RemoveAllTS ( struct ieee80211_device * ieee ) ; 
/*--RemoveAllTS--*/
void TsStartAddBaProcess ( struct ieee80211_device * ieee , PTX_TS_RECORD pTxTS ) ; 
/*--TsStartAddBaProcess--*/
void ActivateBAEntry ( struct ieee80211_device * ieee , PBA_RECORD pBA , u16 Time ) ; 
/*--ActivateBAEntry--*/
void DeActivateBAEntry ( struct ieee80211_device * ieee , PBA_RECORD pBA ) ; 
/*--DeActivateBAEntry--*/
u8 TxTsDeleteBA ( struct ieee80211_device * ieee , PTX_TS_RECORD pTxTs ) ; 
/*--TxTsDeleteBA--*/
u8 RxTsDeleteBA ( struct ieee80211_device * ieee , PRX_TS_RECORD pRxTs ) ; 
/*--RxTsDeleteBA--*/
void ResetBaEntry ( PBA_RECORD pBA ) ; 
/*--ResetBaEntry--*/
void ieee80211_send_ADDBAReq ( struct ieee80211_device * ieee , u8 * dst , PBA_RECORD pBA ) ; 
/*--ieee80211_send_ADDBAReq--*/
void ieee80211_send_ADDBARsp ( struct ieee80211_device * ieee , u8 * dst , PBA_RECORD pBA , u16 StatusCode ) ; 
/*--ieee80211_send_ADDBARsp--*/
void ieee80211_send_DELBA ( struct ieee80211_device * ieee , u8 * dst , PBA_RECORD pBA , TR_SELECT TxRxSelect , u16 ReasonCode ) ; 
/*--ieee80211_send_DELBA--*/
int ieee80211_rx_ADDBAReq ( struct ieee80211_device * ieee , struct sk_buff * skb ) ; 
/*--ieee80211_rx_ADDBAReq--*/
int ieee80211_rx_ADDBARsp ( struct ieee80211_device * ieee , struct sk_buff * skb ) ; 
/*--ieee80211_rx_ADDBARsp--*/
int ieee80211_rx_DELBA ( struct ieee80211_device * ieee , struct sk_buff * skb ) ; 
/*--ieee80211_rx_DELBA--*/
void TsInitAddBA ( struct ieee80211_device * ieee , PTX_TS_RECORD pTS , u8 Policy , u8 bOverwritePending ) ; 
/*--TsInitAddBA--*/
void TsInitDelBA ( struct ieee80211_device * ieee , PTS_COMMON_INFO pTsCommonInfo , TR_SELECT TxRxSelect ) ; 
/*--TsInitDelBA--*/
void BaSetupTimeOut ( unsigned long data ) ; 
/*--BaSetupTimeOut--*/
void TxBaInactTimeout ( unsigned long data ) ; 
/*--TxBaInactTimeout--*/
void RxBaInactTimeout ( unsigned long data ) ; 
/*--RxBaInactTimeout--*/
void Dot11d_Init ( struct ieee80211_device * ieee ) ; 
/*--Dot11d_Init--*/
void Dot11d_Reset ( struct ieee80211_device * ieee ) ; 
/*--Dot11d_Reset--*/
void Dot11d_UpdateCountryIe ( struct ieee80211_device * dev , u8 * pTaddr , u16 CoutryIeLen , u8 * pCoutryIe ) ; 
/*--Dot11d_UpdateCountryIe--*/
u8 DOT11D_GetMaxTxPwrInDbm ( struct ieee80211_device * dev , u8 Channel ) ; 
/*--DOT11D_GetMaxTxPwrInDbm--*/
void DOT11D_ScanComplete ( struct ieee80211_device * dev ) ; 
/*--DOT11D_ScanComplete--*/
int IsLegalChannel ( struct ieee80211_device * dev , u8 channel ) ; 
/*--IsLegalChannel--*/
int ToLegalChannel ( struct ieee80211_device * dev , u8 channel ) ; 
/*--ToLegalChannel--*/
void ieee80211_crypt_deinit_entries_rsl ( struct ieee80211_device * ieee , int force ) ; 
/*--ieee80211_crypt_deinit_entries_rsl--*/
void ieee80211_crypt_deinit_handler_rsl ( unsigned long data ) ; 
/*--ieee80211_crypt_deinit_handler_rsl--*/
void ieee80211_crypt_delayed_deinit_rsl ( struct ieee80211_device * ieee , struct ieee80211_crypt_data * * crypt ) ; 
/*--ieee80211_crypt_delayed_deinit_rsl--*/
int ieee80211_register_crypto_ops_rsl ( struct ieee80211_crypto_ops * ops ) ; 
/*--ieee80211_register_crypto_ops_rsl--*/
int ieee80211_unregister_crypto_ops_rsl ( struct ieee80211_crypto_ops * ops ) ; 
/*--ieee80211_unregister_crypto_ops_rsl--*/
struct ieee80211_crypto_ops * ieee80211_get_crypto_ops_rsl ( const char * name ) ; 
/*--ieee80211_get_crypto_ops_rsl--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ieee80211_crypto_init ( void ) ; 
/*--ieee80211_crypto_init--*/
void ieee80211_crypto_deinit ( void ) ; 
/*--ieee80211_crypto_deinit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ieee80211_crypto_tkip_init ( void ) ; 
/*--ieee80211_crypto_tkip_init--*/
void ieee80211_crypto_tkip_exit ( void ) ; 
/*--ieee80211_crypto_tkip_exit--*/
void ieee80211_tkip_null_rsl ( void ) ; 
/*--ieee80211_tkip_null_rsl--*/
void ieee80211_ccmp_aes_encrypt ( struct crypto_tfm * tfm , const u8 pt [ 16 ] , u8 ct [ 16 ] ) ; 
/*--ieee80211_ccmp_aes_encrypt--*/
void ieee80211_ccmp_null_rsl ( void ) ; 
/*--ieee80211_ccmp_null_rsl--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ieee80211_crypto_ccmp_init ( void ) ; 
/*--ieee80211_crypto_ccmp_init--*/
void ieee80211_crypto_ccmp_exit ( void ) ; 
/*--ieee80211_crypto_ccmp_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ieee80211_crypto_wep_init ( void ) ; 
/*--ieee80211_crypto_wep_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ieee80211_crypto_wep_exit ( void ) ; 
/*--ieee80211_crypto_wep_exit--*/
void ieee80211_wep_null_rsl ( void ) ; 
/*--ieee80211_wep_null_rsl--*/
u32 phy_QueryUsbBBReg ( struct net_device * dev , u32 RegAddr ) ; 
/*--phy_QueryUsbBBReg--*/
void phy_SetUsbBBReg ( struct net_device * dev , u32 RegAddr , u32 Data ) ; 
/*--phy_SetUsbBBReg--*/
u32 phy_QueryUsbRFReg ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 Offset ) ; 
/*--phy_QueryUsbRFReg--*/
void phy_SetUsbRFReg ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 RegAddr , u32 Data ) ; 
/*--phy_SetUsbRFReg--*/
u32 rtl8192_QueryBBReg ( struct net_device * dev , u32 RegAddr , u32 BitMask ) ; 
void rtl8192_setBBreg ( struct net_device * dev , u32 RegAddr , u32 BitMask , u32 Data ) ; 
bool PHY_MACConfig8192S ( struct net_device * dev ) ; 
/*--PHY_MACConfig8192S--*/
bool PHY_BBConfig8192S ( struct net_device * dev ) ; 
/*--PHY_BBConfig8192S--*/
bool PHY_RFConfig8192S ( struct net_device * dev ) ; 
/*--PHY_RFConfig8192S--*/
RT_STATUS PHY_CheckBBAndRFOK ( struct net_device * dev , HW90_BLOCK_E CheckBlock , RF90_RADIO_PATH_E eRFPath ) ; 
/*--PHY_CheckBBAndRFOK--*/
void PHY_GetHWRegOriginalValue ( struct net_device * dev ) ; 
/*--PHY_GetHWRegOriginalValue--*/
bool PHY_SetRFPowerState ( struct net_device * dev , RT_RF_POWER_STATE eRFPowerState ) ; 
/*--PHY_SetRFPowerState--*/
void PHY_GetTxPowerLevel8192S ( struct net_device * dev , long * powerlevel ) ; 
/*--PHY_GetTxPowerLevel8192S--*/
void PHY_SetTxPowerLevel8192S ( struct net_device * dev , u8 channel ) ; 
/*--PHY_SetTxPowerLevel8192S--*/
bool PHY_UpdateTxPowerDbm8192S ( struct net_device * dev , long powerInDbm ) ; 
/*--PHY_UpdateTxPowerDbm8192S--*/
void PHY_SetBeaconHwReg ( struct net_device * dev , u16 BeaconInterval ) ; 
/*--PHY_SetBeaconHwReg--*/
void PHY_InitialGain8192S ( struct net_device * dev , u8 Operation ) ; 
/*--PHY_InitialGain8192S--*/
void PHY_SetBWModeCallback8192S ( struct net_device * dev ) ; 
/*--PHY_SetBWModeCallback8192S--*/
void PHY_SwChnlCallback8192S ( struct net_device * dev ) ; 
/*--PHY_SwChnlCallback8192S--*/
void PHY_SwChnlPhy8192S ( struct net_device * dev , u8 channel ) ; 
/*--PHY_SwChnlPhy8192S--*/
void PHY_IQCalibrate ( struct net_device * dev ) ; 
/*--PHY_IQCalibrate--*/
void PHY_IQCalibrateBcut ( struct net_device * dev ) ; 
/*--PHY_IQCalibrateBcut--*/
void SwChnlCallback8192SUsb ( struct net_device * dev ) ; 
/*--SwChnlCallback8192SUsb--*/
void SwChnlCallback8192SUsbWorkItem ( struct net_device * dev ) ; 
/*--SwChnlCallback8192SUsbWorkItem--*/
void SetBWModeCallback8192SUsb ( struct net_device * dev ) ; 
/*--SetBWModeCallback8192SUsb--*/
void SetBWModeCallback8192SUsbWorkItem ( struct net_device * dev ) ; 
/*--SetBWModeCallback8192SUsbWorkItem--*/
void InitialGain8192S ( struct net_device * dev , u8 Operation ) ; 
/*--InitialGain8192S--*/
void InitialGain819xUsb ( struct net_device * dev , u8 Operation ) ; 
/*--InitialGain819xUsb--*/
void InitialGainOperateWorkItemCallBack ( struct work_struct * work ) ; 
/*--InitialGainOperateWorkItemCallBack--*/
bool HalSetFwCmd8192S ( struct net_device * dev , FW_CMD_IO_TYPE FwCmdIO ) ; 
/*--HalSetFwCmd8192S--*/
void ChkFwCmdIoDone ( struct net_device * dev ) ; 
/*--ChkFwCmdIoDone--*/
void phy_SetFwCmdIOCallback ( struct net_device * dev ) ; 
/*--phy_SetFwCmdIOCallback--*/
void RF_ChangeTxPath ( struct net_device * dev , u16 DataRate ) ; 
/*--RF_ChangeTxPath--*/
void PHY_RF6052SetBandwidth ( struct net_device * dev , HT_CHANNEL_WIDTH Bandwidth ) ; 
/*--PHY_RF6052SetBandwidth--*/
void PHY_RF6052SetCckTxPower ( struct net_device * dev , u8 powerlevel ) ; 
/*--PHY_RF6052SetCckTxPower--*/
void PHY_RF6052SetOFDMTxPower ( struct net_device * dev , u8 powerlevel ) ; 
/*--PHY_RF6052SetOFDMTxPower--*/
RT_STATUS PHY_RF6052_Config ( struct net_device * dev ) ; 
/*--PHY_RF6052_Config--*/
void phy_RF6052_Config_HardCode ( struct net_device * dev ) ; 
/*--phy_RF6052_Config_HardCode--*/
RT_STATUS phy_RF6052_Config_ParaFile ( struct net_device * dev ) ; 
/*--phy_RF6052_Config_ParaFile--*/
u32 PHY_RFShadowRead ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 Offset ) ; 
/*--PHY_RFShadowRead--*/
void PHY_RFShadowWrite ( struct net_device * dev , u32 eRFPath , u32 Offset , u32 Data ) ; 
/*--PHY_RFShadowWrite--*/
void PHY_RFShadowCompare ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 Offset ) ; 
/*--PHY_RFShadowCompare--*/
void PHY_RFShadowRecorver ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 Offset ) ; 
/*--PHY_RFShadowRecorver--*/
void PHY_RFShadowCompareAll ( struct net_device * dev ) ; 
/*--PHY_RFShadowCompareAll--*/
void PHY_RFShadowRecorverAll ( struct net_device * dev ) ; 
/*--PHY_RFShadowRecorverAll--*/
void PHY_RFShadowCompareFlagSet ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 Offset , u8 Type ) ; 
/*--PHY_RFShadowCompareFlagSet--*/
void PHY_RFShadowRecorverFlagSet ( struct net_device * dev , RF90_RADIO_PATH_E eRFPath , u32 Offset , u8 Type ) ; 
/*--PHY_RFShadowRecorverFlagSet--*/
void PHY_RFShadowCompareFlagSetAll ( struct net_device * dev ) ; 
/*--PHY_RFShadowCompareFlagSetAll--*/
void PHY_RFShadowRecorverFlagSetAll ( struct net_device * dev ) ; 
/*--PHY_RFShadowRecorverFlagSetAll--*/
void PHY_RFShadowRefresh ( struct net_device * dev ) ; 
/*--PHY_RFShadowRefresh--*/
void PHY_SetRF8225OfdmTxPower ( struct net_device * dev , u8 powerlevel ) ; 
/*--PHY_SetRF8225OfdmTxPower--*/
void PHY_SetRF8225CckTxPower ( struct net_device * dev , u8 powerlevel ) ; 
/*--PHY_SetRF8225CckTxPower--*/
void PHY_SetRF0222DOfdmTxPower ( struct net_device * dev , u8 powerlevel ) ; 
/*--PHY_SetRF0222DOfdmTxPower--*/
void PHY_SetRF0222DCckTxPower ( struct net_device * dev , u8 powerlevel ) ; 
/*--PHY_SetRF0222DCckTxPower--*/
void PHY_SetRF0222DBandwidth ( struct net_device * dev , HT_CHANNEL_WIDTH Bandwidth ) ; 
/*--PHY_SetRF0222DBandwidth--*/
void PHY_SetRF8225Bandwidth ( struct net_device * dev , HT_CHANNEL_WIDTH Bandwidth ) ; 
/*--PHY_SetRF8225Bandwidth--*/
bool PHY_RF8225_Config ( struct net_device * dev ) ; 
/*--PHY_RF8225_Config--*/
void phy_RF8225_Config_HardCode ( struct net_device * dev ) ; 
/*--phy_RF8225_Config_HardCode--*/
bool phy_RF8225_Config_ParaFile ( struct net_device * dev ) ; 
/*--phy_RF8225_Config_ParaFile--*/
bool SendTxCommandPacket ( struct net_device * dev , void * pData , u32 DataLen ) ; 
/*--SendTxCommandPacket--*/
bool cmpk_message_handle_tx ( struct net_device * dev , u8 * codevirtualaddress , u32 packettype , u32 buffer_len ) ; 
void cmdpkt_beacontimerinterrupt_819xusb ( struct net_device * dev ) ; 
/*--cmdpkt_beacontimerinterrupt_819xusb--*/
void dm_change_fsync_setting ( struct net_device * dev , s32 DM_Type , s32 DM_Value ) ; 
/*--dm_change_fsync_setting--*/
void dm_change_rxpath_selection_setting ( struct net_device * dev , s32 DM_Type , s32 DM_Value ) ; 
/*--dm_change_rxpath_selection_setting--*/
void DM_CTSToSelfSetting ( struct net_device * dev , u32 DM_Type , u32 DM_Value ) ; 
/*--DM_CTSToSelfSetting--*/
bool FirmwareDownloadCode ( struct net_device * dev , u8 * code_virtual_address , u32 buffer_len ) ; 
/*--FirmwareDownloadCode--*/
bool FirmwareEnableCPU ( struct net_device * dev ) ; 
/*--FirmwareEnableCPU--*/
FIRMWARE_8192S_STATUS FirmwareGetNextStatus ( FIRMWARE_8192S_STATUS FWCurrentStatus ) ; 
/*--FirmwareGetNextStatus--*/
bool FirmwareCheckReady ( struct net_device * dev , u8 LoadFWStatus ) ; 
/*--FirmwareCheckReady--*/
u8 FirmwareHeaderMapRfType ( struct net_device * dev ) ; 
/*--FirmwareHeaderMapRfType--*/
void FirmwareHeaderPriveUpdate ( struct net_device * dev , PRT_8192S_FIRMWARE_PRIV pFwPriv ) ; 
/*--FirmwareHeaderPriveUpdate--*/
bool FirmwareRequest92S ( struct net_device * dev , rt_firmware * pFirmware ) ; 
/*--FirmwareRequest92S--*/
bool FirmwareDownload92S ( struct net_device * dev ) ; 
/*--FirmwareDownload92S--*/
extern void EFUSE_Initialize ( struct net_device * dev ) ; 
/*--EFUSE_Initialize--*/
u8 EFUSE_Read1Byte ( struct net_device * dev , u16 Address ) ; 
/*--EFUSE_Read1Byte--*/
void EFUSE_Write1Byte ( struct net_device * dev , u16 Address , u8 Value ) ; 
/*--EFUSE_Write1Byte--*/
void do_93c46 ( struct net_device * dev , u8 addorvalue ) ; 
/*--do_93c46--*/
u16 Read93C46 ( struct net_device * dev , u16 Reg ) ; 
/*--Read93C46--*/
void ReadEFuseByte ( struct net_device * dev , u16 _offset , u8 * pbuf ) ; 
/*--ReadEFuseByte--*/
void ReadEFuse ( struct net_device * dev , u16 _offset , u16 _size_byte , u8 * pbuf ) ; 
/*--ReadEFuse--*/
void EFUSE_ShadowRead ( struct net_device * dev , u8 Type , u16 Offset , u32 * Value ) ; 
/*--EFUSE_ShadowRead--*/
void EFUSE_ShadowWrite ( struct net_device * dev , u8 Type , u16 Offset , u32 Value ) ; 
/*--EFUSE_ShadowWrite--*/
void EFUSE_ShadowUpdate ( struct net_device * dev ) ; 
/*--EFUSE_ShadowUpdate--*/
void EFUSE_ShadowMapUpdate ( struct net_device * dev ) ; 
/*--EFUSE_ShadowMapUpdate--*/
void EFUSE_ForceWriteVendorId ( struct net_device * dev ) ; 
/*--EFUSE_ForceWriteVendorId--*/
bool IsHexDigit ( char chTmp ) ; 
/*--IsHexDigit--*/
u32 MapCharToHexDigit ( char chTmp ) ; 
/*--MapCharToHexDigit--*/
int efuse_one_byte_rw ( struct net_device * dev , u8 bRead , u16 addr , u8 * data ) ; 
/*--efuse_one_byte_rw--*/
void efuse_access ( struct net_device * dev , u8 bRead , u16 start_addr , u8 cnts , u8 * data ) ; 
/*--efuse_access--*/
void efuse_read_data ( struct net_device * dev , u8 efuse_read_item , u8 * data , u32 data_size ) ; 
/*--efuse_read_data--*/
void efuse_write_data ( struct net_device * dev , u8 efuse_write_item , u8 * data , u32 data_size , u32 bWordUnit ) ; 
/*--efuse_write_data--*/
void efuset_test_func_read ( struct net_device * dev ) ; 
/*--efuset_test_func_read--*/
void efuset_test_func_write ( struct net_device * dev ) ; 
/*--efuset_test_func_write--*/
void write_nic_byte_E ( struct net_device * dev , int indx , u8 data ) ; 
/*--write_nic_byte_E--*/
u8 read_nic_byte_E ( struct net_device * dev , int indx ) ; 
/*--read_nic_byte_E--*/
void write_nic_byte ( struct net_device * dev , int indx , u8 data ) ; 
void write_nic_word ( struct net_device * dev , int indx , u16 data ) ; 
void write_nic_dword ( struct net_device * dev , int indx , u32 data ) ; 
u8 read_nic_byte ( struct net_device * dev , int indx ) ; 
u16 read_nic_word ( struct net_device * dev , int indx ) ; 
u16 read_nic_word_E ( struct net_device * dev , int indx ) ; 
/*--read_nic_word_E--*/
u32 read_nic_dword ( struct net_device * dev , int indx ) ; 
void rtl8192_proc_module_init ( void ) ; 
/*--rtl8192_proc_module_init--*/
void rtl8192_proc_module_remove ( void ) ; 
/*--rtl8192_proc_module_remove--*/
void rtl8192_proc_remove_one ( struct net_device * dev ) ; 
/*--rtl8192_proc_remove_one--*/
void rtl8192_proc_init_one ( struct net_device * dev ) ; 
/*--rtl8192_proc_init_one--*/
void print_buffer ( u32 * buffer , int len ) ; 
/*--print_buffer--*/
short check_nic_enough_desc ( struct net_device * dev , int queue_index ) ; 
void tx_timeout ( struct net_device * dev ) ; 
/*--tx_timeout--*/
void rtl8192_dump_reg ( struct net_device * dev ) ; 
/*--rtl8192_dump_reg--*/
void rtl8192_set_mode ( struct net_device * dev , int mode ) ; 
/*--rtl8192_set_mode--*/
u32 get_rxpacket_shiftbytes_819xusb ( struct ieee80211_rx_stats * pstats ) ; 
/*--get_rxpacket_shiftbytes_819xusb--*/
void rtl8192_set_rxconf ( struct net_device * dev ) ; 
/*--rtl8192_set_rxconf--*/
void rtl8192_rtx_disable ( struct net_device * dev ) ; 
/*--rtl8192_rtx_disable--*/
int alloc_tx_beacon_desc_ring ( struct net_device * dev , int count ) ; 
/*--alloc_tx_beacon_desc_ring--*/
u32 rtl819xusb_rx_command_packet ( struct net_device * dev , struct ieee80211_rx_stats * pstats ) ; 
/*--rtl819xusb_rx_command_packet--*/
void rtl8192_data_hard_stop ( struct net_device * dev ) ; 
/*--rtl8192_data_hard_stop--*/
void rtl8192_data_hard_resume ( struct net_device * dev ) ; 
/*--rtl8192_data_hard_resume--*/
void rtl8192_hard_data_xmit ( struct sk_buff * skb , struct net_device * dev , int rate ) ; 
/*--rtl8192_hard_data_xmit--*/
int rtl8192_hard_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--rtl8192_hard_start_xmit--*/
void rtl8192_beacon_stop ( struct net_device * dev ) ; 
/*--rtl8192_beacon_stop--*/
void rtl8192_config_rate ( struct net_device * dev , u16 * rate_config ) ; 
/*--rtl8192_config_rate--*/
void rtl8192_update_cap ( struct net_device * dev , u16 cap ) ; 
/*--rtl8192_update_cap--*/
void rtl8192_net_update ( struct net_device * dev ) ; 
/*--rtl8192_net_update--*/
void rtl819xusb_beacon_tx ( struct net_device * dev , u16 tx_rate ) ; 
/*--rtl819xusb_beacon_tx--*/
u16 ComputeTxTime ( u16 FrameLength , u16 DataRate , u8 bManagementFrame , u8 bShortPreamble ) ; 
/*--ComputeTxTime--*/
u16 N_DBPSOfRate ( u16 DataRate ) ; 
/*--N_DBPSOfRate--*/
void rtl819xU_cmd_isr ( struct urb * tx_cmd_urb , struct pt_regs * regs ) ; 
/*--rtl819xU_cmd_isr--*/
unsigned int txqueue2outpipe ( struct r8192_priv * priv , unsigned int tx_queue ) ; 
/*--txqueue2outpipe--*/
short rtl8192SU_tx_cmd ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--rtl8192SU_tx_cmd--*/
u8 MapHwQueueToFirmwareQueue ( u8 QueueID ) ; 
/*--MapHwQueueToFirmwareQueue--*/
u8 MRateToHwRate8190Pci ( u8 rate ) ; 
/*--MRateToHwRate8190Pci--*/
u8 QueryIsShort ( u8 TxHT , u8 TxRate , cb_desc * tcb_desc ) ; 
/*--QueryIsShort--*/
short rtl8192SU_tx ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--rtl8192SU_tx--*/
void rtl8192SU_net_update ( struct net_device * dev ) ; 
/*--rtl8192SU_net_update--*/
void rtl8192SU_update_ratr_table ( struct net_device * dev ) ; 
/*--rtl8192SU_update_ratr_table--*/
void rtl8192SU_link_change ( struct net_device * dev ) ; 
/*--rtl8192SU_link_change--*/
void rtl8192_update_beacon ( struct work_struct * work ) ; 
/*--rtl8192_update_beacon--*/
void rtl8192_qos_activate ( struct work_struct * work ) ; 
/*--rtl8192_qos_activate--*/
bool GetNmodeSupportBySecCfg8192 ( struct net_device * dev ) ; 
/*--GetNmodeSupportBySecCfg8192--*/
bool GetHalfNmodeSupportByAPs819xUsb ( struct net_device * dev ) ; 
/*--GetHalfNmodeSupportByAPs819xUsb--*/
void rtl8192_refresh_supportrate ( struct r8192_priv * priv ) ; 
/*--rtl8192_refresh_supportrate--*/
u8 rtl8192_getSupportedWireleeMode ( struct net_device * dev ) ; 
/*--rtl8192_getSupportedWireleeMode--*/
void rtl8192_SetWirelessMode ( struct net_device * dev , u8 wireless_mode ) ; 
/*--rtl8192_SetWirelessMode--*/
void rtl8192_hw_sleep_down ( struct net_device * dev ) ; 
/*--rtl8192_hw_sleep_down--*/
void rtl8192_hw_sleep_wq ( struct work_struct * work ) ; 
/*--rtl8192_hw_sleep_wq--*/
void rtl8192_hw_wakeup ( struct net_device * dev ) ; 
/*--rtl8192_hw_wakeup--*/
void rtl8192_hw_to_sleep ( struct net_device * dev , u32 th , u32 tl ) ; 
/*--rtl8192_hw_to_sleep--*/
u8 rtl8192SU_UsbOptionToEndPointNumber ( u8 UsbOption ) ; 
/*--rtl8192SU_UsbOptionToEndPointNumber--*/
u8 rtl8192SU_BoardTypeToRFtype ( struct net_device * dev , u8 Boardtype ) ; 
/*--rtl8192SU_BoardTypeToRFtype--*/
void update_hal_variables ( struct r8192_priv * priv ) ; 
/*--update_hal_variables--*/
void rtl8192SU_ConfigAdapterInfo8192SForAutoLoadFail ( struct net_device * dev ) ; 
/*--rtl8192SU_ConfigAdapterInfo8192SForAutoLoadFail--*/
void rtl8192SU_ReadAdapterInfo8192SUsb ( struct net_device * dev ) ; 
/*--rtl8192SU_ReadAdapterInfo8192SUsb--*/
short rtl8192_get_channel_map ( struct net_device * dev ) ; 
/*--rtl8192_get_channel_map--*/
short rtl8192_init ( struct net_device * dev ) ; 
/*--rtl8192_init--*/
void rtl8192_hwconfig ( struct net_device * dev ) ; 
/*--rtl8192_hwconfig--*/
void rtl8192SU_HwConfigureRTL8192SUsb ( struct net_device * dev ) ; 
/*--rtl8192SU_HwConfigureRTL8192SUsb--*/
bool rtl8192SU_adapter_start ( struct net_device * dev ) ; 
/*--rtl8192SU_adapter_start--*/
bool HalTxCheckStuck819xUsb ( struct net_device * dev ) ; 
/*--HalTxCheckStuck819xUsb--*/
RESET_TYPE TxCheckStuck ( struct net_device * dev ) ; 
/*--TxCheckStuck--*/
bool HalRxCheckStuck819xUsb ( struct net_device * dev ) ; 
/*--HalRxCheckStuck819xUsb--*/
RESET_TYPE RxCheckStuck ( struct net_device * dev ) ; 
/*--RxCheckStuck--*/
RESET_TYPE rtl819x_ifcheck_resetornot ( struct net_device * dev ) ; 
/*--rtl819x_ifcheck_resetornot--*/
void CamRestoreAllEntry ( struct net_device * dev ) ; 
/*--CamRestoreAllEntry--*/
void rtl819x_ifsilentreset ( struct net_device * dev ) ; 
/*--rtl819x_ifsilentreset--*/
void CAM_read_entry ( struct net_device * dev , u32 iIndex ) ; 
/*--CAM_read_entry--*/
void rtl819x_update_rxcounts ( struct r8192_priv * priv , u32 * TotalRxBcnNum , u32 * TotalRxDataNum ) ; 
/*--rtl819x_update_rxcounts--*/
int rtl8192_open ( struct net_device * dev ) ; 
/*--rtl8192_open--*/
int rtl8192_close ( struct net_device * dev ) ; 
/*--rtl8192_close--*/
int r8192_set_mac_adr ( struct net_device * dev , void * mac ) ; 
/*--r8192_set_mac_adr--*/
int rtl8192_ioctl ( struct net_device * dev , struct ifreq * rq , int cmd ) ; 
/*--rtl8192_ioctl--*/
u8 rtl8192SU_HwRateToMRate ( bool bIsHT , u8 rate , bool bFirstAMPDU ) ; 
/*--rtl8192SU_HwRateToMRate--*/
u8 HwRateToMRate90 ( bool bIsHT , u8 rate ) ; 
/*--HwRateToMRate90--*/
void UpdateRxPktTimeStamp8190 ( struct net_device * dev , struct ieee80211_rx_stats * stats ) ; 
/*--UpdateRxPktTimeStamp8190--*/
long rtl819x_translate_todbm ( u8 signal_strength_index ) ; 
/*--rtl819x_translate_todbm--*/
void rtl8192_process_phyinfo ( struct r8192_priv * priv , u8 * buffer , struct ieee80211_rx_stats * pprevious_stats , struct ieee80211_rx_stats * pcurrent_stats ) ; 
/*--rtl8192_process_phyinfo--*/
long rtl819x_signal_scale_mapping ( long currsig ) ; 
/*--rtl819x_signal_scale_mapping--*/
void rtl8192_record_rxdesc_forlateruse ( struct ieee80211_rx_stats * psrc_stats , struct ieee80211_rx_stats * ptarget_stats ) ; 
/*--rtl8192_record_rxdesc_forlateruse--*/
void rtl8192SU_TranslateRxSignalStuff ( struct sk_buff * skb , struct ieee80211_rx_stats * pstats , rx_desc_819x_usb * pDesc , rx_drvinfo_819x_usb * pdrvinfo ) ; 
/*--rtl8192SU_TranslateRxSignalStuff--*/
void UpdateReceivedRateHistogramStatistics8190 ( struct net_device * dev , struct ieee80211_rx_stats * stats ) ; 
/*--UpdateReceivedRateHistogramStatistics8190--*/
void rtl8192SU_query_rxdesc_status ( struct sk_buff * skb , struct ieee80211_rx_stats * stats , bool bIsRxAggrSubframe ) ; 
/*--rtl8192SU_query_rxdesc_status--*/
u32 GetRxPacketShiftBytes8192SU ( struct ieee80211_rx_stats * Status , bool bIsRxAggrSubframe ) ; 
/*--GetRxPacketShiftBytes8192SU--*/
void rtl8192SU_rx_nomal ( struct sk_buff * skb ) ; 
/*--rtl8192SU_rx_nomal--*/
void rtl819xusb_process_received_packet ( struct net_device * dev , struct ieee80211_rx_stats * pstats ) ; 
/*--rtl819xusb_process_received_packet--*/
void query_rx_cmdpkt_desc_status ( struct sk_buff * skb , struct ieee80211_rx_stats * stats ) ; 
/*--query_rx_cmdpkt_desc_status--*/
void rtl8192SU_rx_cmd ( struct sk_buff * skb ) ; 
/*--rtl8192SU_rx_cmd--*/
int rtl8192U_save_state ( struct pci_dev * dev , u32 state ) ; 
/*--rtl8192U_save_state--*/
int rtl8192U_suspend ( struct usb_interface * intf , pm_message_t state ) ; 
/*--rtl8192U_suspend--*/
int rtl8192U_resume ( struct usb_interface * intf ) ; 
/*--rtl8192U_resume--*/
int rtl8192U_enable_wake ( struct pci_dev * dev , u32 state , int enable ) ; 
/*--rtl8192U_enable_wake--*/
void InitLed819xUsb ( struct net_device * dev , PLED_819xUsb pLed , LED_PIN_819xUsb LedPin ) ; 
/*--InitLed819xUsb--*/
void DeInitLed819xUsb ( PLED_819xUsb pLed ) ; 
/*--DeInitLed819xUsb--*/
void SwLedOn ( struct net_device * dev , PLED_819xUsb pLed ) ; 
/*--SwLedOn--*/
void SwLedOff ( struct net_device * dev , PLED_819xUsb pLed ) ; 
/*--SwLedOff--*/
void InitSwLeds ( struct net_device * dev ) ; 
/*--InitSwLeds--*/
void DeInitSwLeds ( struct net_device * dev ) ; 
/*--DeInitSwLeds--*/
void SwLedBlink ( PLED_819xUsb pLed ) ; 
/*--SwLedBlink--*/
void SwLedBlink1 ( PLED_819xUsb pLed ) ; 
/*--SwLedBlink1--*/
void SwLedBlink2 ( PLED_819xUsb pLed ) ; 
/*--SwLedBlink2--*/
void SwLedBlink3 ( PLED_819xUsb pLed ) ; 
/*--SwLedBlink3--*/
void SwLedBlink4 ( PLED_819xUsb pLed ) ; 
/*--SwLedBlink4--*/
void SwLedBlink5 ( PLED_819xUsb pLed ) ; 
/*--SwLedBlink5--*/
void BlinkTimerCallback ( unsigned long data ) ; 
/*--BlinkTimerCallback--*/
void BlinkWorkItemCallback ( struct work_struct * work ) ; 
/*--BlinkWorkItemCallback--*/
void SwLedControlMode0 ( struct net_device * dev , LED_CTL_MODE LedAction ) ; 
/*--SwLedControlMode0--*/
void SwLedControlMode1 ( struct net_device * dev , LED_CTL_MODE LedAction ) ; 
/*--SwLedControlMode1--*/
void SwLedControlMode2 ( struct net_device * dev , LED_CTL_MODE LedAction ) ; 
/*--SwLedControlMode2--*/
void SwLedControlMode3 ( struct net_device * dev , LED_CTL_MODE LedAction ) ; 
/*--SwLedControlMode3--*/
void SwLedControlMode4 ( struct net_device * dev , LED_CTL_MODE LedAction ) ; 
/*--SwLedControlMode4--*/
void SwLedControlMode5 ( struct net_device * dev , LED_CTL_MODE LedAction ) ; 
/*--SwLedControlMode5--*/
void LedControl8192SUsb ( struct net_device * dev , LED_CTL_MODE LedAction ) ; 
/*--LedControl8192SUsb--*/
void ieee80211_crypt_deinit_entries ( struct ieee80211_device * ieee , int force ) ; 
/*--ieee80211_crypt_deinit_entries--*/
void ieee80211_crypt_deinit_handler ( unsigned long data ) ; 
/*--ieee80211_crypt_deinit_handler--*/
void ieee80211_crypt_delayed_deinit ( struct ieee80211_device * ieee , struct ieee80211_crypt_data * * crypt ) ; 
/*--ieee80211_crypt_delayed_deinit--*/
int ieee80211_register_crypto_ops ( struct ieee80211_crypto_ops * ops ) ; 
/*--ieee80211_register_crypto_ops--*/
int ieee80211_unregister_crypto_ops ( struct ieee80211_crypto_ops * ops ) ; 
/*--ieee80211_unregister_crypto_ops--*/
struct ieee80211_crypto_ops * ieee80211_get_crypto_ops ( const char * name ) ; 
/*--ieee80211_get_crypto_ops--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ieee80211_crypto_deinit ( void ) ; 
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ieee80211_crypto_tkip_exit ( void ) ; 
void ieee80211_tkip_null ( void ) ; 
/*--ieee80211_tkip_null--*/
void ieee80211_ccmp_null ( void ) ; 
/*--ieee80211_ccmp_null--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ieee80211_crypto_ccmp_exit ( void ) ; 
void ieee80211_wep_null ( void ) ; 
/*--ieee80211_wep_null--*/
u8 parse_subframe ( struct sk_buff * skb , struct ieee80211_rx_stats * rx_stats , struct ieee80211_rxb * rxb , u8 * src , u8 * dst ) ; 
void ieee80211_rx_mgt ( struct ieee80211_device * ieee , struct ieee80211_hdr_4addr * header , struct ieee80211_rx_stats * stats ) ; 
/*--ieee80211_rx_mgt--*/
short ieee80211_is_54g ( struct ieee80211_network net ) ; 
/*--ieee80211_is_54g--*/
short ieee80211_is_shortslot ( struct ieee80211_network net ) ; 
/*--ieee80211_is_shortslot--*/
void ieee80211_send_probe_requests ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_send_probe_requests--*/
void ieee80211_softmac_scan_syncro ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_scan_syncro--*/
void ieee80211_stop_send_beacons ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_stop_send_beacons--*/
void ieee80211_start_send_beacons ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_start_send_beacons--*/
void ieee80211_stop_scan ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_stop_scan--*/
void ieee80211_start_scan_syncro ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_start_scan_syncro--*/
void ieee80211_ps_tx_ack ( struct ieee80211_device * ieee , short success ) ; 
/*--ieee80211_ps_tx_ack--*/
void ieee80211_softmac_xmit ( struct ieee80211_txb * txb , struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_xmit--*/
void ieee80211_reset_queue ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_reset_queue--*/
void ieee80211_rtl_wake_queue ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_rtl_wake_queue--*/
void ieee80211_rtl_stop_queue ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_rtl_stop_queue--*/
void ieee80211_link_change_wq ( struct work_struct * work ) ; 
/*--ieee80211_link_change_wq--*/
void ieee80211_disassociate ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_disassociate--*/
struct sk_buff * ieee80211_get_beacon ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_get_beacon--*/
void ieee80211_softmac_stop_protocol ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_stop_protocol--*/
void ieee80211_stop_protocol ( struct ieee80211_device * ieee ) ; 
void ieee80211_softmac_start_protocol ( struct ieee80211_device * ieee ) ; 
/*--ieee80211_softmac_start_protocol--*/
void SendDisassociation ( struct ieee80211_device * ieee , u8 * asSta , u8 asRsn ) ; 
/*--SendDisassociation--*/
int ieee80211_wpa_supplicant_ioctl ( struct ieee80211_device * ieee , struct iw_point * p ) ; 
/*--ieee80211_wpa_supplicant_ioctl--*/
void notify_wx_assoc_event ( struct ieee80211_device * ieee ) ; 
/*--notify_wx_assoc_event--*/
void ieee80211_txb_free ( struct ieee80211_txb * txb ) ; 
/*--ieee80211_txb_free--*/
int rtl8192_ieee80211_rtl_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--rtl8192_ieee80211_rtl_xmit--*/
int ieee80211_wx_get_scan ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_scan--*/
int ieee80211_wx_set_encode ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * keybuf ) ; 
/*--ieee80211_wx_set_encode--*/
int ieee80211_wx_get_encode ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * keybuf ) ; 
/*--ieee80211_wx_get_encode--*/
int ieee80211_wx_set_encode_ext ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_encode_ext--*/
int ieee80211_wx_set_mlme ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_mlme--*/
int ieee80211_wx_set_auth ( struct ieee80211_device * ieee , struct iw_request_info * info , struct iw_param * data , char * extra ) ; 
/*--ieee80211_wx_set_auth--*/
int ieee80211_wx_set_gen_ie ( struct ieee80211_device * ieee , u8 * ie , size_t len ) ; 
/*--ieee80211_wx_set_gen_ie--*/
struct net_device * alloc_ieee80211 ( int sizeof_priv ) ; 
/*--alloc_ieee80211--*/
void free_ieee80211 ( struct net_device * dev ) ; 
/*--free_ieee80211--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ieee80211_debug_init ( void ) ; 
/*--ieee80211_debug_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ieee80211_debug_exit ( void ) ; 
/*--ieee80211_debug_exit--*/
int ieee80211_wx_set_freq ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_set_freq--*/
int ieee80211_wx_get_freq ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_get_freq--*/
int ieee80211_wx_get_wap ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_wap--*/
int ieee80211_wx_set_wap ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * awrq , char * extra ) ; 
/*--ieee80211_wx_set_wap--*/
int ieee80211_wx_get_essid ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_get_essid--*/
int ieee80211_wx_set_rate ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_rate--*/
int ieee80211_wx_get_rate ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_rate--*/
int ieee80211_wx_set_rts ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_rts--*/
int ieee80211_wx_get_rts ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_rts--*/
int ieee80211_wx_set_mode ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_set_mode--*/
int ieee80211_wx_set_scan ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_set_scan--*/
int ieee80211_wx_set_essid ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_essid--*/
int ieee80211_wx_get_mode ( struct ieee80211_device * ieee , struct iw_request_info * a , union iwreq_data * wrqu , char * b ) ; 
/*--ieee80211_wx_get_mode--*/
int ieee80211_wx_set_rawtx ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_rawtx--*/
int ieee80211_wx_get_name ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_name--*/
int ieee80211_wx_set_power ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_set_power--*/
int ieee80211_wx_get_power ( struct ieee80211_device * ieee , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--ieee80211_wx_get_power--*/
bool HTIOTActIsDisableMCSTwoSpatialStream ( struct ieee80211_device * ieee ) ; 
u8 HTIOTActIsForcedCTS2Self ( struct ieee80211_network * network ) ; 
u8 HTIOTActIsForcedRTSCTS ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActIsForcedRTSCTS--*/
u8 HTIOTActIsForcedAMSDU8K ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActIsForcedAMSDU8K--*/
u8 HTIOCActRejcectADDBARequest ( struct ieee80211_network * network ) ; 
/*--HTIOCActRejcectADDBARequest--*/
u8 HTIOTActIsEDCABiasRx ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActIsEDCABiasRx--*/
u8 HTIOTActDisableShortGI ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActDisableShortGI--*/
u8 HTIOTActDisableHighPower ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActDisableHighPower--*/
void HTIOTActDetermineRaFunc ( struct ieee80211_device * ieee , bool bPeerRx2ss ) ; 
/*--HTIOTActDetermineRaFunc--*/
u8 HTIOTActIsDisableTx40MHz ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActIsDisableTx40MHz--*/
u8 HTIOTActIsTxNoAggregation ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActIsTxNoAggregation--*/
u8 HTIOTActIsDisableTx2SS ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOTActIsDisableTx2SS--*/
bool HTIOCActAllowPeerAggOnePacket ( struct ieee80211_device * ieee , struct ieee80211_network * network ) ; 
/*--HTIOCActAllowPeerAggOnePacket--*/
int dlfb_handle_damage ( struct dlfb_data * dev , int x , int y , int width , int height , char * data ) ; 
/*--dlfb_handle_damage--*/
int match_busid ( const char * busid ) ; 
/*--match_busid--*/
void stub_device_cleanup_urbs ( struct stub_device * sdev ) ; 
/*--stub_device_cleanup_urbs--*/
void stub_rx_loop ( struct usbip_task * ut ) ; 
/*--stub_rx_loop--*/
void stub_enqueue_ret_unlink ( struct stub_device * sdev , __u32 seqnum , __u32 status ) ; 
/*--stub_enqueue_ret_unlink--*/
void stub_complete ( struct urb * urb ) ; 
/*--stub_complete--*/
void stub_tx_loop ( struct usbip_task * ut ) ; 
/*--stub_tx_loop--*/
void usbip_dump_urb ( struct urb * urb ) ; 
/*--usbip_dump_urb--*/
void usbip_dump_header ( struct usbip_header * pdu ) ; 
/*--usbip_dump_header--*/
int usbip_thread ( void * param ) ; 
/*--usbip_thread--*/
int usbip_start_threads ( struct usbip_device * ud ) ; 
/*--usbip_start_threads--*/
void usbip_stop_threads ( struct usbip_device * ud ) ; 
/*--usbip_stop_threads--*/
void usbip_task_init ( struct usbip_task * ut , char * name , void ( * loop_ops ) ( struct usbip_task * ) ) ; 
/*--usbip_task_init--*/
int usbip_xmit ( int send , struct socket * sock , char * buf , int size , int msg_flags ) ; 
/*--usbip_xmit--*/
struct socket * sockfd_to_socket ( unsigned int sockfd ) ; 
/*--sockfd_to_socket--*/
void usbip_pack_pdu ( struct usbip_header * pdu , struct urb * urb , int cmd , int pack ) ; 
/*--usbip_pack_pdu--*/
void usbip_header_correct_endian ( struct usbip_header * pdu , int send ) ; 
/*--usbip_header_correct_endian--*/
void * usbip_alloc_iso_desc_pdu ( struct urb * urb , ssize_t * bufflen ) ; 
/*--usbip_alloc_iso_desc_pdu--*/
int usbip_recv_iso ( struct usbip_device * ud , struct urb * urb ) ; 
/*--usbip_recv_iso--*/
int usbip_pad_iso ( struct usbip_device * ud , struct urb * urb ) ; 
/*--usbip_pad_iso--*/
int usbip_recv_xbuff ( struct usbip_device * ud , struct urb * urb ) ; 
/*--usbip_recv_xbuff--*/
int usbip_start_eh ( struct usbip_device * ud ) ; 
/*--usbip_start_eh--*/
void usbip_stop_eh ( struct usbip_device * ud ) ; 
/*--usbip_stop_eh--*/
void usbip_event_add ( struct usbip_device * ud , unsigned long event ) ; 
/*--usbip_event_add--*/
int usbip_event_happened ( struct usbip_device * ud ) ; 
/*--usbip_event_happened--*/
void vhci_tx_loop ( struct usbip_task * ut ) ; 
/*--vhci_tx_loop--*/
struct urb * pickup_urb_and_free_priv ( struct vhci_device * vdev , __u32 seqnum ) ; 
/*--pickup_urb_and_free_priv--*/
void vhci_rx_loop ( struct usbip_task * ut ) ; 
/*--vhci_rx_loop--*/
void rh_port_connect ( int rhport , enum usb_device_speed speed ) ; 
/*--rh_port_connect--*/
void rh_port_disconnect ( int rhport ) ; 
/*--rh_port_disconnect--*/
void ca91cx42_irq_set ( struct vme_bridge * ca91cx42_bridge , int level , int state , int sync ) ; 
/*--ca91cx42_irq_set--*/
int ca91cx42_irq_generate ( struct vme_bridge * ca91cx42_bridge , int level , int statid ) ; 
/*--ca91cx42_irq_generate--*/
int ca91cx42_slave_set ( struct vme_slave_resource * image , int enabled , unsigned long long vme_base , unsigned long long size , dma_addr_t pci_base , vme_address_t aspace , vme_cycle_t cycle ) ; 
/*--ca91cx42_slave_set--*/
int ca91cx42_slave_get ( struct vme_slave_resource * image , int * enabled , unsigned long long * vme_base , unsigned long long * size , dma_addr_t * pci_base , vme_address_t * aspace , vme_cycle_t * cycle ) ; 
/*--ca91cx42_slave_get--*/
int ca91cx42_master_set ( struct vme_master_resource * image , int enabled , unsigned long long vme_base , unsigned long long size , vme_address_t aspace , vme_cycle_t cycle , vme_width_t dwidth ) ; 
/*--ca91cx42_master_set--*/
int __ca91cx42_master_get ( struct vme_master_resource * image , int * enabled , unsigned long long * vme_base , unsigned long long * size , vme_address_t * aspace , vme_cycle_t * cycle , vme_width_t * dwidth ) ; 
/*--__ca91cx42_master_get--*/
int ca91cx42_master_get ( struct vme_master_resource * image , int * enabled , unsigned long long * vme_base , unsigned long long * size , vme_address_t * aspace , vme_cycle_t * cycle , vme_width_t * dwidth ) ; 
/*--ca91cx42_master_get--*/
ssize_t ca91cx42_master_read ( struct vme_master_resource * image , void * buf , size_t count , loff_t offset ) ; 
/*--ca91cx42_master_read--*/
ssize_t ca91cx42_master_write ( struct vme_master_resource * image , void * buf , size_t count , loff_t offset ) ; 
/*--ca91cx42_master_write--*/
unsigned int ca91cx42_master_rmw ( struct vme_master_resource * image , unsigned int mask , unsigned int compare , unsigned int swap , loff_t offset ) ; 
/*--ca91cx42_master_rmw--*/
int ca91cx42_dma_list_add ( struct vme_dma_list * list , struct vme_dma_attr * src , struct vme_dma_attr * dest , size_t count ) ; 
/*--ca91cx42_dma_list_add--*/
int ca91cx42_dma_list_exec ( struct vme_dma_list * list ) ; 
/*--ca91cx42_dma_list_exec--*/
int ca91cx42_dma_list_empty ( struct vme_dma_list * list ) ; 
/*--ca91cx42_dma_list_empty--*/
int ca91cx42_lm_set ( struct vme_lm_resource * lm , unsigned long long lm_base , vme_address_t aspace , vme_cycle_t cycle ) ; 
/*--ca91cx42_lm_set--*/
int ca91cx42_lm_get ( struct vme_lm_resource * lm , unsigned long long * lm_base , vme_address_t * aspace , vme_cycle_t * cycle ) ; 
/*--ca91cx42_lm_get--*/
int ca91cx42_lm_attach ( struct vme_lm_resource * lm , int monitor , void ( * callback ) ( int ) ) ; 
/*--ca91cx42_lm_attach--*/
int ca91cx42_lm_detach ( struct vme_lm_resource * lm , int monitor ) ; 
/*--ca91cx42_lm_detach--*/
int ca91cx42_slot_get ( struct vme_bridge * ca91cx42_bridge ) ; 
/*--ca91cx42_slot_get--*/
void ca91cx42_remove ( struct pci_dev * pdev ) ; 
/*--ca91cx42_remove--*/
int tsi148_iack_received ( struct tsi148_driver * bridge ) ; 
/*--tsi148_iack_received--*/
void tsi148_irq_set ( struct vme_bridge * tsi148_bridge , int level , int state , int sync ) ; 
/*--tsi148_irq_set--*/
int tsi148_irq_generate ( struct vme_bridge * tsi148_bridge , int level , int statid ) ; 
/*--tsi148_irq_generate--*/
int tsi148_slave_set ( struct vme_slave_resource * image , int enabled , unsigned long long vme_base , unsigned long long size , dma_addr_t pci_base , vme_address_t aspace , vme_cycle_t cycle ) ; 
/*--tsi148_slave_set--*/
int tsi148_slave_get ( struct vme_slave_resource * image , int * enabled , unsigned long long * vme_base , unsigned long long * size , dma_addr_t * pci_base , vme_address_t * aspace , vme_cycle_t * cycle ) ; 
/*--tsi148_slave_get--*/
int tsi148_master_set ( struct vme_master_resource * image , int enabled , unsigned long long vme_base , unsigned long long size , vme_address_t aspace , vme_cycle_t cycle , vme_width_t dwidth ) ; 
/*--tsi148_master_set--*/
int __tsi148_master_get ( struct vme_master_resource * image , int * enabled , unsigned long long * vme_base , unsigned long long * size , vme_address_t * aspace , vme_cycle_t * cycle , vme_width_t * dwidth ) ; 
/*--__tsi148_master_get--*/
int tsi148_master_get ( struct vme_master_resource * image , int * enabled , unsigned long long * vme_base , unsigned long long * size , vme_address_t * aspace , vme_cycle_t * cycle , vme_width_t * dwidth ) ; 
/*--tsi148_master_get--*/
ssize_t tsi148_master_read ( struct vme_master_resource * image , void * buf , size_t count , loff_t offset ) ; 
/*--tsi148_master_read--*/
ssize_t tsi148_master_write ( struct vme_master_resource * image , void * buf , size_t count , loff_t offset ) ; 
/*--tsi148_master_write--*/
unsigned int tsi148_master_rmw ( struct vme_master_resource * image , unsigned int mask , unsigned int compare , unsigned int swap , loff_t offset ) ; 
/*--tsi148_master_rmw--*/
int tsi148_dma_list_add ( struct vme_dma_list * list , struct vme_dma_attr * src , struct vme_dma_attr * dest , size_t count ) ; 
/*--tsi148_dma_list_add--*/
int tsi148_dma_list_exec ( struct vme_dma_list * list ) ; 
/*--tsi148_dma_list_exec--*/
int tsi148_dma_list_empty ( struct vme_dma_list * list ) ; 
/*--tsi148_dma_list_empty--*/
int tsi148_lm_set ( struct vme_lm_resource * lm , unsigned long long lm_base , vme_address_t aspace , vme_cycle_t cycle ) ; 
/*--tsi148_lm_set--*/
int tsi148_lm_get ( struct vme_lm_resource * lm , unsigned long long * lm_base , vme_address_t * aspace , vme_cycle_t * cycle ) ; 
/*--tsi148_lm_get--*/
int tsi148_lm_attach ( struct vme_lm_resource * lm , int monitor , void ( * callback ) ( int ) ) ; 
/*--tsi148_lm_attach--*/
int tsi148_lm_detach ( struct vme_lm_resource * lm , int monitor ) ; 
/*--tsi148_lm_detach--*/
int tsi148_slot_get ( struct vme_bridge * tsi148_bridge ) ; 
/*--tsi148_slot_get--*/
void * vme_alloc_consistent ( struct vme_resource * resource , size_t size , dma_addr_t * dma ) ; 
/*--vme_alloc_consistent--*/
void vme_free_consistent ( struct vme_resource * resource , size_t size , void * vaddr , dma_addr_t dma ) ; 
/*--vme_free_consistent--*/
size_t vme_get_size ( struct vme_resource * resource ) ; 
/*--vme_get_size--*/
struct vme_resource * vme_slave_request ( struct device * dev , vme_address_t address , vme_cycle_t cycle ) ; 
/*--vme_slave_request--*/
int vme_slave_set ( struct vme_resource * resource , int enabled , unsigned long long vme_base , unsigned long long size , dma_addr_t buf_base , vme_address_t aspace , vme_cycle_t cycle ) ; 
/*--vme_slave_set--*/
int vme_slave_get ( struct vme_resource * resource , int * enabled , unsigned long long * vme_base , unsigned long long * size , dma_addr_t * buf_base , vme_address_t * aspace , vme_cycle_t * cycle ) ; 
/*--vme_slave_get--*/
void vme_slave_free ( struct vme_resource * resource ) ; 
/*--vme_slave_free--*/
struct vme_resource * vme_master_request ( struct device * dev , vme_address_t address , vme_cycle_t cycle , vme_width_t dwidth ) ; 
/*--vme_master_request--*/
int vme_master_set ( struct vme_resource * resource , int enabled , unsigned long long vme_base , unsigned long long size , vme_address_t aspace , vme_cycle_t cycle , vme_width_t dwidth ) ; 
/*--vme_master_set--*/
int vme_master_get ( struct vme_resource * resource , int * enabled , unsigned long long * vme_base , unsigned long long * size , vme_address_t * aspace , vme_cycle_t * cycle , vme_width_t * dwidth ) ; 
/*--vme_master_get--*/
ssize_t vme_master_read ( struct vme_resource * resource , void * buf , size_t count , loff_t offset ) ; 
/*--vme_master_read--*/
ssize_t vme_master_write ( struct vme_resource * resource , void * buf , size_t count , loff_t offset ) ; 
/*--vme_master_write--*/
unsigned int vme_master_rmw ( struct vme_resource * resource , unsigned int mask , unsigned int compare , unsigned int swap , loff_t offset ) ; 
/*--vme_master_rmw--*/
void vme_master_free ( struct vme_resource * resource ) ; 
/*--vme_master_free--*/
struct vme_resource * vme_dma_request ( struct device * dev , vme_dma_route_t route ) ; 
/*--vme_dma_request--*/
struct vme_dma_list * vme_new_dma_list ( struct vme_resource * resource ) ; 
/*--vme_new_dma_list--*/
struct vme_dma_attr * vme_dma_pattern_attribute ( u32 pattern , vme_pattern_t type ) ; 
/*--vme_dma_pattern_attribute--*/
struct vme_dma_attr * vme_dma_pci_attribute ( dma_addr_t address ) ; 
/*--vme_dma_pci_attribute--*/
struct vme_dma_attr * vme_dma_vme_attribute ( unsigned long long address , vme_address_t aspace , vme_cycle_t cycle , vme_width_t dwidth ) ; 
/*--vme_dma_vme_attribute--*/
void vme_dma_free_attribute ( struct vme_dma_attr * attributes ) ; 
/*--vme_dma_free_attribute--*/
int vme_dma_list_add ( struct vme_dma_list * list , struct vme_dma_attr * src , struct vme_dma_attr * dest , size_t count ) ; 
/*--vme_dma_list_add--*/
int vme_dma_list_exec ( struct vme_dma_list * list ) ; 
/*--vme_dma_list_exec--*/
int vme_dma_list_free ( struct vme_dma_list * list ) ; 
/*--vme_dma_list_free--*/
int vme_dma_free ( struct vme_resource * resource ) ; 
/*--vme_dma_free--*/
void vme_irq_handler ( struct vme_bridge * bridge , int level , int statid ) ; 
/*--vme_irq_handler--*/
int vme_irq_request ( struct device * dev , int level , int statid , void ( * callback ) ( int , int , void * ) , void * priv_data ) ; 
/*--vme_irq_request--*/
void vme_irq_free ( struct device * dev , int level , int statid ) ; 
/*--vme_irq_free--*/
int vme_irq_generate ( struct device * dev , int level , int statid ) ; 
/*--vme_irq_generate--*/
struct vme_resource * vme_lm_request ( struct device * dev ) ; 
/*--vme_lm_request--*/
int vme_lm_count ( struct vme_resource * resource ) ; 
/*--vme_lm_count--*/
int vme_lm_set ( struct vme_resource * resource , unsigned long long lm_base , vme_address_t aspace , vme_cycle_t cycle ) ; 
/*--vme_lm_set--*/
int vme_lm_get ( struct vme_resource * resource , unsigned long long * lm_base , vme_address_t * aspace , vme_cycle_t * cycle ) ; 
/*--vme_lm_get--*/
int vme_lm_attach ( struct vme_resource * resource , int monitor , void ( * callback ) ( int ) ) ; 
/*--vme_lm_attach--*/
int vme_lm_detach ( struct vme_resource * resource , int monitor ) ; 
/*--vme_lm_detach--*/
void vme_lm_free ( struct vme_resource * resource ) ; 
/*--vme_lm_free--*/
int vme_slot_get ( struct device * bus ) ; 
/*--vme_slot_get--*/
int vme_register_bridge ( struct vme_bridge * bridge ) ; 
/*--vme_register_bridge--*/
void vme_unregister_bridge ( struct vme_bridge * bridge ) ; 
/*--vme_unregister_bridge--*/
int vme_register_driver ( struct vme_driver * drv ) ; 
/*--vme_register_driver--*/
void vme_unregister_driver ( struct vme_driver * drv ) ; 
/*--vme_unregister_driver--*/
BOOL device_alloc_frag_buf ( PSDevice pDevice , PSDeFragControlBlock pDeF ) ; 
/*--device_alloc_frag_buf--*/
BOOL CARDbSetMediaChannel ( void * pDeviceHandler , unsigned int uConnectionChannel ) ; 
/*--CARDbSetMediaChannel--*/
void CARDvCaculateOFDMRParameter ( WORD wRate , BYTE byBBType , PBYTE pbyTxRate , PBYTE pbyRsvTime ) ; 
/*--CARDvCaculateOFDMRParameter--*/
void CARDvSetRSPINF ( void * pDeviceHandler , BYTE byBBType ) ; 
/*--CARDvSetRSPINF--*/
void vUpdateIFS ( void * pDeviceHandler ) ; 
/*--vUpdateIFS--*/
void CARDvUpdateBasicTopRate ( void * pDeviceHandler ) ; 
/*--CARDvUpdateBasicTopRate--*/
BOOL CARDbAddBasicRate ( void * pDeviceHandler , WORD wRateIdx ) ; 
/*--CARDbAddBasicRate--*/
BOOL CARDbIsOFDMinBasicRate ( void * pDeviceHandler ) ; 
/*--CARDbIsOFDMinBasicRate--*/
BYTE CARDbyGetPktType ( void * pDeviceHandler ) ; 
/*--CARDbyGetPktType--*/
QWORD CARDqGetTSFOffset ( BYTE byRxRate , QWORD qwTSF1 , QWORD qwTSF2 ) ; 
/*--CARDqGetTSFOffset--*/
void CARDvAdjustTSF ( void * pDeviceHandler , BYTE byRxRate , QWORD qwBSSTimestamp , QWORD qwLocalTSF ) ; 
/*--CARDvAdjustTSF--*/
BOOL CARDbGetCurrentTSF ( void * pDeviceHandler , PQWORD pqwCurrTSF ) ; 
/*--CARDbGetCurrentTSF--*/
BOOL CARDbClearCurrentTSF ( void * pDeviceHandler ) ; 
/*--CARDbClearCurrentTSF--*/
QWORD CARDqGetNextTBTT ( QWORD qwTSF , WORD wBeaconInterval ) ; 
/*--CARDqGetNextTBTT--*/
void CARDvSetFirstNextTBTT ( void * pDeviceHandler , WORD wBeaconInterval ) ; 
/*--CARDvSetFirstNextTBTT--*/
void CARDvUpdateNextTBTT ( void * pDeviceHandler , QWORD qwTSF , WORD wBeaconInterval ) ; 
/*--CARDvUpdateNextTBTT--*/
BOOL CARDbRadioPowerOff ( void * pDeviceHandler ) ; 
/*--CARDbRadioPowerOff--*/
BOOL CARDbRadioPowerOn ( void * pDeviceHandler ) ; 
/*--CARDbRadioPowerOn--*/
void CARDvSetBSSMode ( void * pDeviceHandler ) ; 
/*--CARDvSetBSSMode--*/
BOOL CARDbChannelSwitch ( void * pDeviceHandler , BYTE byMode , BYTE byNewChannel , BYTE byCount ) ; 
/*--CARDbChannelSwitch--*/
void MACvSetMultiAddrByHash ( PSDevice pDevice , BYTE byHashIdx ) ; 
/*--MACvSetMultiAddrByHash--*/
void MACvWriteMultiAddr ( PSDevice pDevice , unsigned int uByteIdx , BYTE byData ) ; 
/*--MACvWriteMultiAddr--*/
BOOL MACbShutdown ( PSDevice pDevice ) ; 
/*--MACbShutdown--*/
void MACvSetBBType ( PSDevice pDevice , BYTE byType ) ; 
/*--MACvSetBBType--*/
void MACvSetMISCFifo ( PSDevice pDevice , WORD wOffset , DWORD dwData ) ; 
/*--MACvSetMISCFifo--*/
void MACvDisableKeyEntry ( PSDevice pDevice , unsigned int uEntryIdx ) ; 
/*--MACvDisableKeyEntry--*/
void MACvSetKeyEntry ( PSDevice pDevice , WORD wKeyCtl , unsigned int uEntryIdx , unsigned int uKeyIdx , PBYTE pbyAddr , PDWORD pdwKey ) ; 
/*--MACvSetKeyEntry--*/
void MACvRegBitsOff ( PSDevice pDevice , BYTE byRegOfs , BYTE byBits ) ; 
/*--MACvRegBitsOff--*/
void MACvRegBitsOn ( PSDevice pDevice , BYTE byRegOfs , BYTE byBits ) ; 
/*--MACvRegBitsOn--*/
void MACvWriteWord ( PSDevice pDevice , BYTE byRegOfs , WORD wData ) ; 
/*--MACvWriteWord--*/
void MACvWriteBSSIDAddress ( PSDevice pDevice , PBYTE pbyEtherAddr ) ; 
/*--MACvWriteBSSIDAddress--*/
void MACvEnableProtectMD ( PSDevice pDevice ) ; 
/*--MACvEnableProtectMD--*/
void MACvDisableProtectMD ( PSDevice pDevice ) ; 
/*--MACvDisableProtectMD--*/
void MACvEnableBarkerPreambleMd ( PSDevice pDevice ) ; 
/*--MACvEnableBarkerPreambleMd--*/
void MACvDisableBarkerPreambleMd ( PSDevice pDevice ) ; 
/*--MACvDisableBarkerPreambleMd--*/
void MACvWriteBeaconInterval ( PSDevice pDevice , WORD wInterval ) ; 
/*--MACvWriteBeaconInterval--*/
unsigned int BBuGetFrameTime ( BYTE byPreambleType , BYTE byPktType , unsigned int cbFrameLength , WORD wRate ) ; 
/*--BBuGetFrameTime--*/
void BBvCaculateParameter ( PSDevice pDevice , unsigned int cbFrameLength , WORD wRate , BYTE byPacketType , PWORD pwPhyLen , PBYTE pbyPhySrv , PBYTE pbyPhySgn ) ; 
/*--BBvCaculateParameter--*/
void BBvSetAntennaMode ( PSDevice pDevice , BYTE byAntennaMode ) ; 
/*--BBvSetAntennaMode--*/
BOOL BBbVT3184Init ( PSDevice pDevice ) ; 
/*--BBbVT3184Init--*/
void BBvLoopbackOn ( PSDevice pDevice ) ; 
/*--BBvLoopbackOn--*/
void BBvLoopbackOff ( PSDevice pDevice ) ; 
/*--BBvLoopbackOff--*/
void BBvSetShortSlotTime ( PSDevice pDevice ) ; 
/*--BBvSetShortSlotTime--*/
void BBvSetVGAGainOffset ( PSDevice pDevice , BYTE byData ) ; 
/*--BBvSetVGAGainOffset--*/
void BBvSoftwareReset ( PSDevice pDevice ) ; 
/*--BBvSoftwareReset--*/
void BBvSetDeepSleep ( PSDevice pDevice ) ; 
/*--BBvSetDeepSleep--*/
void BBvExitDeepSleep ( PSDevice pDevice ) ; 
/*--BBvExitDeepSleep--*/
void BBvAntennaDiversity ( PSDevice pDevice , BYTE byRxRate , BYTE bySQ3 ) ; 
/*--BBvAntennaDiversity--*/
void TimerSQ3CallBack ( void * hDeviceContext ) ; 
/*--TimerSQ3CallBack--*/
void TimerSQ3Tmax3CallBack ( void * hDeviceContext ) ; 
/*--TimerSQ3Tmax3CallBack--*/
void BBvUpdatePreEDThreshold ( PSDevice pDevice , BOOL bScanning ) ; 
/*--BBvUpdatePreEDThreshold--*/
BOOL WCTLbIsDuplicate ( PSCache pCache , PS802_11Header pMACHeader ) ; 
/*--WCTLbIsDuplicate--*/
unsigned int WCTLuSearchDFCB ( PSDevice pDevice , PS802_11Header pMACHeader ) ; 
/*--WCTLuSearchDFCB--*/
unsigned int WCTLuInsertDFCB ( PSDevice pDevice , PS802_11Header pMACHeader ) ; 
/*--WCTLuInsertDFCB--*/
BOOL WCTLbHandleFragment ( PSDevice pDevice , PS802_11Header pMACHeader , unsigned int cbFrameLength , BOOL bWEP , BOOL bExtIV ) ; 
/*--WCTLbHandleFragment--*/
void vMgrEncodeBeacon ( PWLAN_FR_BEACON pFrame ) ; 
/*--vMgrEncodeBeacon--*/
void vMgrDecodeBeacon ( PWLAN_FR_BEACON pFrame ) ; 
/*--vMgrDecodeBeacon--*/
void vMgrEncodeIBSSATIM ( PWLAN_FR_IBSSATIM pFrame ) ; 
/*--vMgrEncodeIBSSATIM--*/
void vMgrDecodeIBSSATIM ( PWLAN_FR_IBSSATIM pFrame ) ; 
/*--vMgrDecodeIBSSATIM--*/
void vMgrEncodeDisassociation ( PWLAN_FR_DISASSOC pFrame ) ; 
/*--vMgrEncodeDisassociation--*/
void vMgrDecodeDisassociation ( PWLAN_FR_DISASSOC pFrame ) ; 
/*--vMgrDecodeDisassociation--*/
void vMgrEncodeAssocRequest ( PWLAN_FR_ASSOCREQ pFrame ) ; 
/*--vMgrEncodeAssocRequest--*/
void vMgrDecodeAssocRequest ( PWLAN_FR_ASSOCREQ pFrame ) ; 
/*--vMgrDecodeAssocRequest--*/
void vMgrEncodeAssocResponse ( PWLAN_FR_ASSOCRESP pFrame ) ; 
/*--vMgrEncodeAssocResponse--*/
void vMgrDecodeAssocResponse ( PWLAN_FR_ASSOCRESP pFrame ) ; 
/*--vMgrDecodeAssocResponse--*/
void vMgrEncodeReassocRequest ( PWLAN_FR_REASSOCREQ pFrame ) ; 
/*--vMgrEncodeReassocRequest--*/
void vMgrDecodeReassocRequest ( PWLAN_FR_REASSOCREQ pFrame ) ; 
/*--vMgrDecodeReassocRequest--*/
void vMgrEncodeProbeRequest ( PWLAN_FR_PROBEREQ pFrame ) ; 
/*--vMgrEncodeProbeRequest--*/
void vMgrDecodeProbeRequest ( PWLAN_FR_PROBEREQ pFrame ) ; 
/*--vMgrDecodeProbeRequest--*/
void vMgrEncodeProbeResponse ( PWLAN_FR_PROBERESP pFrame ) ; 
/*--vMgrEncodeProbeResponse--*/
void vMgrDecodeProbeResponse ( PWLAN_FR_PROBERESP pFrame ) ; 
/*--vMgrDecodeProbeResponse--*/
void vMgrEncodeAuthen ( PWLAN_FR_AUTHEN pFrame ) ; 
/*--vMgrEncodeAuthen--*/
void vMgrDecodeAuthen ( PWLAN_FR_AUTHEN pFrame ) ; 
/*--vMgrDecodeAuthen--*/
void vMgrEncodeDeauthen ( PWLAN_FR_DEAUTHEN pFrame ) ; 
/*--vMgrEncodeDeauthen--*/
void vMgrDecodeDeauthen ( PWLAN_FR_DEAUTHEN pFrame ) ; 
/*--vMgrDecodeDeauthen--*/
void vMgrEncodeReassocResponse ( PWLAN_FR_REASSOCRESP pFrame ) ; 
/*--vMgrEncodeReassocResponse--*/
void vMgrDecodeReassocResponse ( PWLAN_FR_REASSOCRESP pFrame ) ; 
/*--vMgrDecodeReassocResponse--*/
PSTxMgmtPacket s_MgrMakeProbeRequest ( PSDevice pDevice , PSMgmtObject pMgmt , PBYTE pScanBSSID , PWLAN_IE_SSID pSSID , PWLAN_IE_SUPP_RATES pCurrRates , PWLAN_IE_SUPP_RATES pCurrExtSuppRates ) ; 
/*--s_MgrMakeProbeRequest--*/
void vCommandTimerWait ( void * hDeviceContext , unsigned int MSecond ) ; 
/*--vCommandTimerWait--*/
void vRunCommand ( void * hDeviceContext ) ; 
/*--vRunCommand--*/
BOOL bScheduleCommand ( void * hDeviceContext , CMD_CODE eCommand , PBYTE pbyItem0 ) ; 
/*--bScheduleCommand--*/
void vResetCommandTimer ( void * hDeviceContext ) ; 
/*--vResetCommandTimer--*/
void BSSvSecondTxData ( void * hDeviceContext ) ; 
/*--BSSvSecondTxData--*/
void vMgrObjectInit ( void * hDeviceContext ) ; 
/*--vMgrObjectInit--*/
void vMgrAssocBeginSta ( void * hDeviceContext , PSMgmtObject pMgmt , PCMD_STATUS pStatus ) ; 
/*--vMgrAssocBeginSta--*/
void vMgrReAssocBeginSta ( void * hDeviceContext , PSMgmtObject pMgmt , PCMD_STATUS pStatus ) ; 
/*--vMgrReAssocBeginSta--*/
void vMgrDisassocBeginSta ( void * hDeviceContext , PSMgmtObject pMgmt , PBYTE abyDestAddress , WORD wReason , PCMD_STATUS pStatus ) ; 
/*--vMgrDisassocBeginSta--*/
void vMgrAuthenBeginSta ( void * hDeviceContext , PSMgmtObject pMgmt , PCMD_STATUS pStatus ) ; 
/*--vMgrAuthenBeginSta--*/
void vMgrDeAuthenBeginSta ( void * hDeviceContext , PSMgmtObject pMgmt , PBYTE abyDestAddress , WORD wReason , PCMD_STATUS pStatus ) ; 
/*--vMgrDeAuthenBeginSta--*/
void vMgrCreateOwnIBSS ( void * hDeviceContext , PCMD_STATUS pStatus ) ; 
/*--vMgrCreateOwnIBSS--*/
void vMgrJoinBSSBegin ( void * hDeviceContext , PCMD_STATUS pStatus ) ; 
/*--vMgrJoinBSSBegin--*/
PSTxMgmtPacket s_MgrMakeProbeResponse ( PSDevice pDevice , PSMgmtObject pMgmt , WORD wCurrCapInfo , WORD wCurrBeaconPeriod , unsigned int uCurrChannel , WORD wCurrATIMWinodw , PBYTE pDstAddr , PWLAN_IE_SSID pCurrSSID , PBYTE pCurrBSSID , PWLAN_IE_SUPP_RATES pCurrSuppRates , PWLAN_IE_SUPP_RATES pCurrExtSuppRates , BYTE byPHYType ) ; 
/*--s_MgrMakeProbeResponse--*/
PSTxMgmtPacket s_MgrMakeAssocRequest ( PSDevice pDevice , PSMgmtObject pMgmt , PBYTE pDAddr , WORD wCurrCapInfo , WORD wListenInterval , PWLAN_IE_SSID pCurrSSID , PWLAN_IE_SUPP_RATES pCurrRates , PWLAN_IE_SUPP_RATES pCurrExtSuppRates ) ; 
/*--s_MgrMakeAssocRequest--*/
PSTxMgmtPacket s_MgrMakeReAssocRequest ( PSDevice pDevice , PSMgmtObject pMgmt , PBYTE pDAddr , WORD wCurrCapInfo , WORD wListenInterval , PWLAN_IE_SSID pCurrSSID , PWLAN_IE_SUPP_RATES pCurrRates , PWLAN_IE_SUPP_RATES pCurrExtSuppRates ) ; 
/*--s_MgrMakeReAssocRequest--*/
PSTxMgmtPacket s_MgrMakeAssocResponse ( PSDevice pDevice , PSMgmtObject pMgmt , WORD wCurrCapInfo , WORD wAssocStatus , WORD wAssocAID , PBYTE pDstAddr , PWLAN_IE_SUPP_RATES pCurrSuppRates , PWLAN_IE_SUPP_RATES pCurrExtSuppRates ) ; 
/*--s_MgrMakeAssocResponse--*/
PSTxMgmtPacket s_MgrMakeReAssocResponse ( PSDevice pDevice , PSMgmtObject pMgmt , WORD wCurrCapInfo , WORD wAssocStatus , WORD wAssocAID , PBYTE pDstAddr , PWLAN_IE_SUPP_RATES pCurrSuppRates , PWLAN_IE_SUPP_RATES pCurrExtSuppRates ) ; 
/*--s_MgrMakeReAssocResponse--*/
void vMgrRxManagePacket ( void * hDeviceContext , PSMgmtObject pMgmt , PSRxMgmtPacket pRxPacket ) ; 
/*--vMgrRxManagePacket--*/
BOOL bMgrPrepareBeaconToSend ( void * hDeviceContext , PSMgmtObject pMgmt ) ; 
/*--bMgrPrepareBeaconToSend--*/
BOOL bAdd_PMKID_Candidate ( void * hDeviceContext , PBYTE pbyBSSID , PSRSNCapObject psRSNCapObj ) ; 
/*--bAdd_PMKID_Candidate--*/
void vFlush_PMKID_Candidate ( void * hDeviceContext ) ; 
/*--vFlush_PMKID_Candidate--*/
PKnownBSS BSSpSearchBSSList ( void * hDeviceContext , PBYTE pbyDesireBSSID , PBYTE pbyDesireSSID , CARD_PHY_TYPE ePhyType ) ; 
/*--BSSpSearchBSSList--*/
void BSSvClearBSSList ( void * hDeviceContext , BOOL bKeepCurrBSSID ) ; 
/*--BSSvClearBSSList--*/
PKnownBSS BSSpAddrIsInBSSList ( void * hDeviceContext , PBYTE abyBSSID , PWLAN_IE_SSID pSSID ) ; 
/*--BSSpAddrIsInBSSList--*/
BOOL BSSbInsertToBSSList ( void * hDeviceContext , PBYTE abyBSSIDAddr , QWORD qwTimestamp , WORD wBeaconInterval , WORD wCapInfo , BYTE byCurrChannel , PWLAN_IE_SSID pSSID , PWLAN_IE_SUPP_RATES pSuppRates , PWLAN_IE_SUPP_RATES pExtSuppRates , PERPObject psERP , PWLAN_IE_RSN pRSN , PWLAN_IE_RSN_EXT pRSNWPA , PWLAN_IE_COUNTRY pIE_Country , PWLAN_IE_QUIET pIE_Quiet , unsigned int uIELength , PBYTE pbyIEs , void * pRxPacketContext ) ; 
/*--BSSbInsertToBSSList--*/
BOOL BSSbUpdateToBSSList ( void * hDeviceContext , QWORD qwTimestamp , WORD wBeaconInterval , WORD wCapInfo , BYTE byCurrChannel , BOOL bChannelHit , PWLAN_IE_SSID pSSID , PWLAN_IE_SUPP_RATES pSuppRates , PWLAN_IE_SUPP_RATES pExtSuppRates , PERPObject psERP , PWLAN_IE_RSN pRSN , PWLAN_IE_RSN_EXT pRSNWPA , PWLAN_IE_COUNTRY pIE_Country , PWLAN_IE_QUIET pIE_Quiet , PKnownBSS pBSSList , unsigned int uIELength , PBYTE pbyIEs , void * pRxPacketContext ) ; 
/*--BSSbUpdateToBSSList--*/
BOOL BSSbIsSTAInNodeDB ( void * hDeviceContext , PBYTE abyDstAddr , PUINT puNodeIndex ) ; 
/*--BSSbIsSTAInNodeDB--*/
void BSSvCreateOneNode ( void * hDeviceContext , PUINT puNodeIndex ) ; 
/*--BSSvCreateOneNode--*/
void BSSvRemoveOneNode ( void * hDeviceContext , unsigned int uNodeIndex ) ; 
/*--BSSvRemoveOneNode--*/
void BSSvUpdateAPNode ( void * hDeviceContext , PWORD pwCapInfo , PWLAN_IE_SUPP_RATES pSuppRates , PWLAN_IE_SUPP_RATES pExtSuppRates ) ; 
/*--BSSvUpdateAPNode--*/
void BSSvAddMulticastNode ( void * hDeviceContext ) ; 
/*--BSSvAddMulticastNode--*/
void BSSvSecondCallBack ( void * hDeviceContext ) ; 
/*--BSSvSecondCallBack--*/
void BSSvUpdateNodeTxCounter ( void * hDeviceContext , PSStatCounter pStatistic , BYTE byTSR , BYTE byPktNO ) ; 
/*--BSSvUpdateNodeTxCounter--*/
void BSSvClearNodeDBTable ( void * hDeviceContext , unsigned int uStartIndex ) ; 
/*--BSSvClearNodeDBTable--*/
void s_vCheckSensitivity ( void * hDeviceContext ) ; 
/*--s_vCheckSensitivity--*/
void s_uCalculateLinkQual ( void * hDeviceContext ) ; 
/*--s_uCalculateLinkQual--*/
void BSSvClearAnyBSSJoinRecord ( void * hDeviceContext ) ; 
/*--BSSvClearAnyBSSJoinRecord--*/
void s_vCheckPreEDThreshold ( void * hDeviceContext ) ; 
/*--s_vCheckPreEDThreshold--*/
void WPA2_ClearRSN ( PKnownBSS pBSSNode ) ; 
/*--WPA2_ClearRSN--*/
void WPA2vParseRSN ( PKnownBSS pBSSNode , PWLAN_IE_RSN pRSN ) ; 
/*--WPA2vParseRSN--*/
unsigned int WPA2uSetIEs ( void * pMgmtHandle , PWLAN_IE_RSN pRSNIEs ) ; 
/*--WPA2uSetIEs--*/
BOOL s_bPacketToWirelessUsb ( PSDevice pDevice , BYTE byPktType , PBYTE usbPacketBuf , BOOL bNeedEncryption , unsigned int uSkbPacketLen , unsigned int uDMAIdx , PSEthernetHeader psEthHeader , PBYTE pPacket , PSKeyItem pTransmitKey , unsigned int uNodeIndex , WORD wCurrentRate , unsigned int * pcbHeaderLen , unsigned int * pcbTotalLen ) ; 
/*--s_bPacketToWirelessUsb--*/
void s_vGenerateMACHeader ( PSDevice pDevice , PBYTE pbyBufferAddr , WORD wDuration , PSEthernetHeader psEthHeader , BOOL bNeedEncrypt , WORD wFragType , unsigned int uDMAIdx , unsigned int uFragIdx ) ; 
/*--s_vGenerateMACHeader--*/
CMD_STATUS csMgmt_xmit ( PSDevice pDevice , PSTxMgmtPacket pPacket ) ; 
/*--csMgmt_xmit--*/
CMD_STATUS csBeacon_xmit ( PSDevice pDevice , PSTxMgmtPacket pPacket ) ; 
/*--csBeacon_xmit--*/
void vDMA0_tx_80211 ( PSDevice pDevice , struct sk_buff * skb ) ; 
/*--vDMA0_tx_80211--*/
int nsDMA_tx_packet ( PSDevice pDevice , unsigned int uDMAIdx , struct sk_buff * skb ) ; 
/*--nsDMA_tx_packet--*/
BOOL bRelayPacketSend ( PSDevice pDevice , PBYTE pbySkbData , unsigned int uDataLen , unsigned int uNodeIndex ) ; 
/*--bRelayPacketSend--*/
BOOL RXbBulkInProcessData ( PSDevice pDevice , PRCB pRCB , unsigned long BytesToIndicate ) ; 
/*--RXbBulkInProcessData--*/
void RXvWorkItem ( void * Context ) ; 
/*--RXvWorkItem--*/
void RXvFreeRCB ( PRCB pRCB , BOOL bReAllocSkb ) ; 
/*--RXvFreeRCB--*/
void RXvMngWorkItem ( void * Context ) ; 
/*--RXvMngWorkItem--*/
void PSvEnablePowerSaving ( void * hDeviceContext , WORD wListenInterval ) ; 
/*--PSvEnablePowerSaving--*/
void PSvDisablePowerSaving ( void * hDeviceContext ) ; 
/*--PSvDisablePowerSaving--*/
BOOL PSbConsiderPowerDown ( void * hDeviceContext , BOOL bCheckRxDMA , BOOL bCheckCountToWakeUp ) ; 
/*--PSbConsiderPowerDown--*/
void PSvSendPSPOLL ( void * hDeviceContext ) ; 
/*--PSvSendPSPOLL--*/
BOOL PSbSendNullPacket ( void * hDeviceContext ) ; 
/*--PSbSendNullPacket--*/
BOOL PSbIsNextTBTTWakeUp ( void * hDeviceContext ) ; 
/*--PSbIsNextTBTTWakeUp--*/
void s_vResetCounter ( PKnownNodeDB psNodeDBTable ) ; 
/*--s_vResetCounter--*/
BYTE DATARATEbyGetRateIdx ( BYTE byRate ) ; 
/*--DATARATEbyGetRateIdx--*/
WORD RATEwGetRateIdx ( BYTE byRate ) ; 
/*--RATEwGetRateIdx--*/
void RATEvParseMaxRate ( void * pDeviceHandler , PWLAN_IE_SUPP_RATES pItemRates , PWLAN_IE_SUPP_RATES pItemExtRates , BOOL bUpdateBasicRate , PWORD pwMaxBasicRate , PWORD pwMaxSuppRate , PWORD pwSuppRate , PBYTE pbyTopCCKRate , PBYTE pbyTopOFDMRate ) ; 
/*--RATEvParseMaxRate--*/
void RATEvTxRateFallBack ( void * pDeviceHandler , PKnownNodeDB psNodeDBTable ) ; 
/*--RATEvTxRateFallBack--*/
BYTE RATEuSetIE ( PWLAN_IE_SUPP_RATES pSrcRates , PWLAN_IE_SUPP_RATES pDstRates , unsigned int uRateLen ) ; 
/*--RATEuSetIE--*/
void STAvClearAllCounter ( PSStatCounter pStatistic ) ; 
/*--STAvClearAllCounter--*/
void STAvUpdateIsrStatCounter ( PSStatCounter pStatistic , BYTE byIsr0 , BYTE byIsr1 ) ; 
/*--STAvUpdateIsrStatCounter--*/
void STAvUpdateRDStatCounter ( PSStatCounter pStatistic , BYTE byRSR , BYTE byNewRSR , BYTE byRxSts , BYTE byRxRate , PBYTE pbyBuffer , unsigned int cbFrameLength ) ; 
/*--STAvUpdateRDStatCounter--*/
void STAvUpdateRDStatCounterEx ( PSStatCounter pStatistic , BYTE byRSR , BYTE byNewRSR , BYTE byRxSts , BYTE byRxRate , PBYTE pbyBuffer , unsigned int cbFrameLength ) ; 
/*--STAvUpdateRDStatCounterEx--*/
void STAvUpdateTDStatCounter ( PSStatCounter pStatistic , BYTE byPktNum , BYTE byRate , BYTE byTSR ) ; 
/*--STAvUpdateTDStatCounter--*/
void STAvUpdate802_11Counter ( PSDot11Counters p802_11Counter , PSStatCounter pStatistic , BYTE byRTSSuccess , BYTE byRTSFail , BYTE byACKFail , BYTE byFCSErr ) ; 
/*--STAvUpdate802_11Counter--*/
void STAvClear802_11Counter ( PSDot11Counters p802_11Counter ) ; 
/*--STAvClear802_11Counter--*/
void STAvUpdateUSBCounter ( PSUSBCounter pUsbCounter , int ntStatus ) ; 
/*--STAvUpdateUSBCounter--*/
void rc4_init ( PRC4Ext pRC4 , PBYTE pbyKey , unsigned int cbKey_len ) ; 
/*--rc4_init--*/
unsigned int rc4_byte ( PRC4Ext pRC4 ) ; 
/*--rc4_byte--*/
void rc4_encrypt ( PRC4Ext pRC4 , PBYTE pbyDest , PBYTE pbySrc , unsigned int cbData_len ) ; 
/*--rc4_encrypt--*/
BYTE ETHbyGetHashIndexByCrc32 ( PBYTE pbyMultiAddr ) ; 
/*--ETHbyGetHashIndexByCrc32--*/
BOOL ETHbIsBufferCrc32Ok ( PBYTE pbyBuffer , unsigned int cbFrameLength ) ; 
/*--ETHbIsBufferCrc32Ok--*/
DWORD CRCdwCrc32 ( PBYTE pbyData , unsigned int cbByte , DWORD dwCrcSeed ) ; 
/*--CRCdwCrc32--*/
DWORD CRCdwGetCrc32 ( PBYTE pbyData , unsigned int cbByte ) ; 
/*--CRCdwGetCrc32--*/
DWORD CRCdwGetCrc32Ex ( PBYTE pbyData , unsigned int cbByte , DWORD dwPreCRC ) ; 
/*--CRCdwGetCrc32Ex--*/
int private_ioctl ( PSDevice pDevice , struct ifreq * rq ) ; 
/*--private_ioctl--*/
int vt6656_hostap_set_hostapd ( PSDevice pDevice , int val , int rtnl_locked ) ; 
/*--vt6656_hostap_set_hostapd--*/
int vt6656_hostap_ioctl ( PSDevice pDevice , struct iw_point * p ) ; 
/*--vt6656_hostap_ioctl--*/
void WPA_ClearRSN ( PKnownBSS pBSSList ) ; 
/*--WPA_ClearRSN--*/
void WPA_ParseRSN ( PKnownBSS pBSSList , PWLAN_IE_RSN_EXT pRSN ) ; 
/*--WPA_ParseRSN--*/
BOOL WPA_SearchRSN ( BYTE byCmd , BYTE byEncrypt , PKnownBSS pBSSList ) ; 
/*--WPA_SearchRSN--*/
BOOL WPAb_Is_RSN ( PWLAN_IE_RSN_EXT pRSN ) ; 
/*--WPAb_Is_RSN--*/
void KeyvInitTable ( void * pDeviceHandler , PSKeyManagement pTable ) ; 
/*--KeyvInitTable--*/
BOOL KeybGetKey ( PSKeyManagement pTable , PBYTE pbyBSSID , DWORD dwKeyIndex , PSKeyItem * pKey ) ; 
/*--KeybGetKey--*/
BOOL KeybSetKey ( void * pDeviceHandler , PSKeyManagement pTable , PBYTE pbyBSSID , DWORD dwKeyIndex , unsigned long uKeyLength , PQWORD pKeyRSC , PBYTE pbyKey , BYTE byKeyDecMode ) ; 
/*--KeybSetKey--*/
BOOL KeybRemoveKey ( void * pDeviceHandler , PSKeyManagement pTable , PBYTE pbyBSSID , DWORD dwKeyIndex ) ; 
/*--KeybRemoveKey--*/
BOOL KeybRemoveAllKey ( void * pDeviceHandler , PSKeyManagement pTable , PBYTE pbyBSSID ) ; 
/*--KeybRemoveAllKey--*/
void KeyvRemoveWEPKey ( void * pDeviceHandler , PSKeyManagement pTable , DWORD dwKeyIndex ) ; 
/*--KeyvRemoveWEPKey--*/
void KeyvRemoveAllWEPKey ( void * pDeviceHandler , PSKeyManagement pTable ) ; 
/*--KeyvRemoveAllWEPKey--*/
BOOL KeybGetTransmitKey ( PSKeyManagement pTable , PBYTE pbyBSSID , DWORD dwKeyType , PSKeyItem * pKey ) ; 
/*--KeybGetTransmitKey--*/
BOOL KeybCheckPairewiseKey ( PSKeyManagement pTable , PSKeyItem * pKey ) ; 
/*--KeybCheckPairewiseKey--*/
BOOL KeybSetDefaultKey ( void * pDeviceHandler , PSKeyManagement pTable , DWORD dwKeyIndex , unsigned long uKeyLength , PQWORD pKeyRSC , PBYTE pbyKey , BYTE byKeyDecMode ) ; 
/*--KeybSetDefaultKey--*/
BOOL KeybSetAllGroupKey ( void * pDeviceHandler , PSKeyManagement pTable , DWORD dwKeyIndex , unsigned long uKeyLength , PQWORD pKeyRSC , PBYTE pbyKey , BYTE byKeyDecMode ) ; 
/*--KeybSetAllGroupKey--*/
unsigned int tkip_sbox ( unsigned int index ) ; 
unsigned int rotr1 ( unsigned int a ) ; 
void TKIPvMixKey ( PBYTE pbyTKey , PBYTE pbyTA , WORD wTSC15_0 , DWORD dwTSC47_16 , PBYTE pbyRC4Key ) ; 
/*--TKIPvMixKey--*/
void MIC_vInit ( DWORD dwK0 , DWORD dwK1 ) ; 
/*--MIC_vInit--*/
void MIC_vUnInit ( void ) ; 
/*--MIC_vUnInit--*/
void MIC_vAppend ( PBYTE src , unsigned int nBytes ) ; 
/*--MIC_vAppend--*/
void MIC_vGetMIC ( PDWORD pdwL , PDWORD pdwR ) ; 
/*--MIC_vGetMIC--*/
BOOL IFRFbWriteEmbeded ( PSDevice pDevice , DWORD dwData ) ; 
/*--IFRFbWriteEmbeded--*/
BOOL RFbSetPower ( PSDevice pDevice , unsigned int uRATE , unsigned int uCH ) ; 
/*--RFbSetPower--*/
BOOL RFbRawSetPower ( PSDevice pDevice , BYTE byPwr , unsigned int uRATE ) ; 
/*--RFbRawSetPower--*/
void RFvRSSITodBm ( PSDevice pDevice , BYTE byCurrRSSI , long * pldBm ) ; 
/*--RFvRSSITodBm--*/
void RFbRFTableDownload ( PSDevice pDevice ) ; 
/*--RFbRFTableDownload--*/
BOOL s_bVT3226D0_11bLoCurrentAdjust ( PSDevice pDevice , BYTE byChannel , BOOL b11bMode ) ; 
/*--s_bVT3226D0_11bLoCurrentAdjust--*/
struct iw_statistics * iwctl_get_wireless_stats ( struct net_device * dev ) ; 
/*--iwctl_get_wireless_stats--*/
int iwctl_giwname ( struct net_device * dev , struct iw_request_info * info , char * wrq , char * extra ) ; 
/*--iwctl_giwname--*/
int iwctl_giwnwid ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_giwnwid--*/
int iwctl_siwscan ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_siwscan--*/
int iwctl_giwscan ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_giwscan--*/
int iwctl_siwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * wrq , char * extra ) ; 
/*--iwctl_siwfreq--*/
int iwctl_giwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * wrq , char * extra ) ; 
/*--iwctl_giwfreq--*/
int iwctl_siwmode ( struct net_device * dev , struct iw_request_info * info , __u32 * wmode , char * extra ) ; 
/*--iwctl_siwmode--*/
int iwctl_giwmode ( struct net_device * dev , struct iw_request_info * info , __u32 * wmode , char * extra ) ; 
/*--iwctl_giwmode--*/
int iwctl_giwrange ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_giwrange--*/
int iwctl_siwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * wrq , char * extra ) ; 
/*--iwctl_siwap--*/
int iwctl_giwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * wrq , char * extra ) ; 
/*--iwctl_giwap--*/
int iwctl_giwaplist ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_giwaplist--*/
int iwctl_siwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_siwessid--*/
int iwctl_giwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_giwessid--*/
int iwctl_siwrate ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_siwrate--*/
int iwctl_giwrate ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_giwrate--*/
int iwctl_siwrts ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_siwrts--*/
int iwctl_giwrts ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_giwrts--*/
int iwctl_siwfrag ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_siwfrag--*/
int iwctl_giwfrag ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_giwfrag--*/
int iwctl_siwretry ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_siwretry--*/
int iwctl_giwretry ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_giwretry--*/
int iwctl_siwencode ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_siwencode--*/
int iwctl_giwencode ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_giwencode--*/
int iwctl_siwpower ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_siwpower--*/
int iwctl_giwpower ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_giwpower--*/
int iwctl_giwsens ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_giwsens--*/
int iwctl_siwauth ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_siwauth--*/
int iwctl_giwauth ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--iwctl_giwauth--*/
int iwctl_siwgenie ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_siwgenie--*/
int iwctl_giwgenie ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_giwgenie--*/
int iwctl_siwencodeext ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_siwencodeext--*/
int iwctl_giwencodeext ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_giwencodeext--*/
int iwctl_siwmlme ( struct net_device * dev , struct iw_request_info * info , struct iw_point * wrq , char * extra ) ; 
/*--iwctl_siwmlme--*/
int wpa_set_wpadev ( PSDevice pDevice , int val ) ; 
/*--wpa_set_wpadev--*/
int wpa_set_keys ( PSDevice pDevice , void * ctx , BOOL fcpfkernel ) ; 
/*--wpa_set_keys--*/
int wpa_ioctl ( PSDevice pDevice , struct iw_point * p ) ; 
/*--wpa_ioctl--*/
void xor_128 ( BYTE * a , BYTE * b , BYTE * out ) ; 
void xor_32 ( BYTE * a , BYTE * b , BYTE * out ) ; 
void AddRoundKey ( BYTE * key , int round ) ; 
/*--AddRoundKey--*/
void SubBytes ( BYTE * in , BYTE * out ) ; 
/*--SubBytes--*/
void ShiftRows ( BYTE * in , BYTE * out ) ; 
/*--ShiftRows--*/
void MixColumns ( BYTE * in , BYTE * out ) ; 
/*--MixColumns--*/
void AESv128 ( BYTE * key , BYTE * data , BYTE * ciphertext ) ; 
/*--AESv128--*/
BOOL AESbGenCCMP ( PBYTE pbyRxKey , PBYTE pbyFrame , WORD wFrameSize ) ; 
/*--AESbGenCCMP--*/
int PIPEnsControlOutAsyn ( PSDevice pDevice , BYTE byRequest , WORD wValue , WORD wIndex , WORD wLength , PBYTE pbyBuffer ) ; 
/*--PIPEnsControlOutAsyn--*/
int PIPEnsControlOut ( PSDevice pDevice , BYTE byRequest , WORD wValue , WORD wIndex , WORD wLength , PBYTE pbyBuffer ) ; 
/*--PIPEnsControlOut--*/
int PIPEnsControlIn ( PSDevice pDevice , BYTE byRequest , WORD wValue , WORD wIndex , WORD wLength , PBYTE pbyBuffer ) ; 
/*--PIPEnsControlIn--*/
int PIPEnsInterruptRead ( PSDevice pDevice ) ; 
/*--PIPEnsInterruptRead--*/
int PIPEnsBulkInUsbRead ( PSDevice pDevice , PRCB pRCB ) ; 
/*--PIPEnsBulkInUsbRead--*/
int PIPEnsSendBulkOut ( PSDevice pDevice , PUSB_SEND_CONTEXT pContext ) ; 
/*--PIPEnsSendBulkOut--*/
BOOL ChannelValid ( unsigned int CountryCode , unsigned int ChannelIndex ) ; 
/*--ChannelValid--*/
BOOL CHvChannelGetList ( unsigned int uCountryCodeIdx , PBYTE pbyChannelTable ) ; 
/*--CHvChannelGetList--*/
void CHvInitChannelTable ( void * pDeviceHandler ) ; 
/*--CHvInitChannelTable--*/
BYTE CHbyGetChannelMapping ( BYTE byChannelNumber ) ; 
/*--CHbyGetChannelMapping--*/
void ControlvWriteByte ( PSDevice pDevice , BYTE byRegType , BYTE byRegOfs , BYTE byData ) ; 
/*--ControlvWriteByte--*/
void ControlvReadByte ( PSDevice pDevice , BYTE byRegType , BYTE byRegOfs , PBYTE pbyData ) ; 
/*--ControlvReadByte--*/
void ControlvMaskByte ( PSDevice pDevice , BYTE byRegType , BYTE byRegOfs , BYTE byMask , BYTE byData ) ; 
/*--ControlvMaskByte--*/
BOOL FIRMWAREbDownload ( PSDevice pDevice ) ; 
/*--FIRMWAREbDownload--*/
BOOL FIRMWAREbBrach2Sram ( PSDevice pDevice ) ; 
/*--FIRMWAREbBrach2Sram--*/
BOOL FIRMWAREbCheckVersion ( PSDevice pDevice ) ; 
/*--FIRMWAREbCheckVersion--*/
void INTvWorkItem ( void * Context ) ; 
/*--INTvWorkItem--*/
int INTnsProcessData ( PSDevice pDevice ) ; 
/*--INTnsProcessData--*/
unsigned char Mds_initial ( struct wbsoft_priv * adapter ) ; 
/*--Mds_initial--*/
void Mds_Destroy ( struct wbsoft_priv * adapter ) ; 
/*--Mds_Destroy--*/
void Mds_Tx ( struct wbsoft_priv * adapter ) ; 
/*--Mds_Tx--*/
void Mds_SendComplete ( struct wbsoft_priv * adapter , PT02_DESCRIPTOR pT02 ) ; 
/*--Mds_SendComplete--*/
u8 MLMESendFrame ( struct wbsoft_priv * adapter , u8 * pMMPDU , u16 len , u8 DataType ) ; 
/*--MLMESendFrame--*/
void MLME_GetNextPacket ( struct wbsoft_priv * adapter , struct wb35_descriptor * desc ) ; 
/*--MLME_GetNextPacket--*/
void MLME_SendComplete ( struct wbsoft_priv * adapter , u8 PacketID , unsigned char SendOK ) ; 
/*--MLME_SendComplete--*/
void MTO_Init ( struct wbsoft_priv * adapter ) ; 
/*--MTO_Init--*/
void MTO_SetTxCount ( struct wbsoft_priv * adapter , u8 tx_rate , u8 index ) ; 
/*--MTO_SetTxCount--*/
s32 _s13_to_s32 ( u32 data ) ; 
/*--_s13_to_s32--*/
u32 _s32_to_s13 ( s32 data ) ; 
/*--_s32_to_s13--*/
s32 _s4_to_s32 ( u32 data ) ; 
/*--_s4_to_s32--*/
u32 _s32_to_s4 ( s32 data ) ; 
/*--_s32_to_s4--*/
s32 _s5_to_s32 ( u32 data ) ; 
/*--_s5_to_s32--*/
u32 _s32_to_s5 ( s32 data ) ; 
/*--_s32_to_s5--*/
s32 _s6_to_s32 ( u32 data ) ; 
/*--_s6_to_s32--*/
u32 _s32_to_s6 ( s32 data ) ; 
/*--_s32_to_s6--*/
s32 _s9_to_s32 ( u32 data ) ; 
/*--_s9_to_s32--*/
u32 _s32_to_s9 ( s32 data ) ; 
/*--_s32_to_s9--*/
s32 _floor ( s32 n ) ; 
/*--_floor--*/
u32 _sqrt ( u32 sqsum ) ; 
/*--_sqrt--*/
void _sin_cos ( s32 angle , s32 * sin , s32 * cos ) ; 
/*--_sin_cos--*/
void _reset_rx_cal ( struct hw_data * phw_data ) ; 
/*--_reset_rx_cal--*/
void _rxadc_dc_offset_cancellation_winbond ( struct hw_data * phw_data , u32 frequency ) ; 
/*--_rxadc_dc_offset_cancellation_winbond--*/
void _txidac_dc_offset_cancellation_winbond ( struct hw_data * phw_data ) ; 
/*--_txidac_dc_offset_cancellation_winbond--*/
void _txqdac_dc_offset_cacellation_winbond ( struct hw_data * phw_data ) ; 
/*--_txqdac_dc_offset_cacellation_winbond--*/
u8 _tx_iq_calibration_loop_winbond ( struct hw_data * phw_data , s32 a_2_threshold , s32 b_2_threshold ) ; 
/*--_tx_iq_calibration_loop_winbond--*/
void _tx_iq_calibration_winbond ( struct hw_data * phw_data ) ; 
/*--_tx_iq_calibration_winbond--*/
u8 _rx_iq_calibration_loop_winbond ( struct hw_data * phw_data , u16 factor , u32 frequency ) ; 
/*--_rx_iq_calibration_loop_winbond--*/
void _rx_iq_calibration_winbond ( struct hw_data * phw_data , u32 frequency ) ; 
/*--_rx_iq_calibration_winbond--*/
void phy_calibration_winbond ( struct hw_data * phw_data , u32 frequency ) ; 
/*--phy_calibration_winbond--*/
void phy_set_rf_data ( struct hw_data * pHwData , u32 index , u32 value ) ; 
/*--phy_set_rf_data--*/
unsigned char adjust_TXVGA_for_iq_mag ( struct hw_data * phw_data ) ; 
/*--adjust_TXVGA_for_iq_mag--*/
void Uxx_ReadEthernetAddress ( struct hw_data * pHwData ) ; 
/*--Uxx_ReadEthernetAddress--*/
void CardGetMulticastBit ( u8 Address [ 6 ] , u8 * Byte , u8 * Value ) ; 
/*--CardGetMulticastBit--*/
void Uxx_power_on_procedure ( struct hw_data * pHwData ) ; 
/*--Uxx_power_on_procedure--*/
void Set_ChanIndep_RfData_al7230_24 ( struct hw_data * pHwData , u32 * pltmp , char number ) ; 
/*--Set_ChanIndep_RfData_al7230_24--*/
void Set_ChanIndep_RfData_al7230_50 ( struct hw_data * pHwData , u32 * pltmp , char number ) ; 
/*--Set_ChanIndep_RfData_al7230_50--*/
void RFSynthesizer_initial ( struct hw_data * pHwData ) ; 
/*--RFSynthesizer_initial--*/
void BBProcessor_AL7230_2400 ( struct hw_data * pHwData ) ; 
/*--BBProcessor_AL7230_2400--*/
void BBProcessor_AL7230_5000 ( struct hw_data * pHwData ) ; 
/*--BBProcessor_AL7230_5000--*/
void BBProcessor_initial ( struct hw_data * pHwData ) ; 
/*--BBProcessor_initial--*/
void set_tx_power_per_channel_max2829 ( struct hw_data * pHwData , struct chan_info Channel ) ; 
/*--set_tx_power_per_channel_max2829--*/
void set_tx_power_per_channel_al2230 ( struct hw_data * pHwData , struct chan_info Channel ) ; 
/*--set_tx_power_per_channel_al2230--*/
void set_tx_power_per_channel_al7230 ( struct hw_data * pHwData , struct chan_info Channel ) ; 
/*--set_tx_power_per_channel_al7230--*/
void set_tx_power_per_channel_wb242 ( struct hw_data * pHwData , struct chan_info Channel ) ; 
/*--set_tx_power_per_channel_wb242--*/
void RFSynthesizer_SwitchingChannel ( struct hw_data * pHwData , struct chan_info Channel ) ; 
/*--RFSynthesizer_SwitchingChannel--*/
u8 RFSynthesizer_SetPowerIndex ( struct hw_data * pHwData , u8 PowerIndex ) ; 
/*--RFSynthesizer_SetPowerIndex--*/
u8 RFSynthesizer_SetMaxim2828_24Power ( struct hw_data * pHwData , u8 index ) ; 
/*--RFSynthesizer_SetMaxim2828_24Power--*/
u8 RFSynthesizer_SetMaxim2828_50Power ( struct hw_data * pHwData , u8 index ) ; 
/*--RFSynthesizer_SetMaxim2828_50Power--*/
u8 RFSynthesizer_SetMaxim2827_24Power ( struct hw_data * pHwData , u8 index ) ; 
/*--RFSynthesizer_SetMaxim2827_24Power--*/
u8 RFSynthesizer_SetMaxim2827_50Power ( struct hw_data * pHwData , u8 index ) ; 
/*--RFSynthesizer_SetMaxim2827_50Power--*/
u8 RFSynthesizer_SetMaxim2825Power ( struct hw_data * pHwData , u8 index ) ; 
/*--RFSynthesizer_SetMaxim2825Power--*/
u8 RFSynthesizer_SetAiroha2230Power ( struct hw_data * pHwData , u8 index ) ; 
/*--RFSynthesizer_SetAiroha2230Power--*/
u8 RFSynthesizer_SetAiroha7230Power ( struct hw_data * pHwData , u8 index ) ; 
/*--RFSynthesizer_SetAiroha7230Power--*/
u8 RFSynthesizer_SetWinbond242Power ( struct hw_data * pHwData , u8 index ) ; 
/*--RFSynthesizer_SetWinbond242Power--*/
void Dxx_initial ( struct hw_data * pHwData ) ; 
/*--Dxx_initial--*/
void Mxx_initial ( struct hw_data * pHwData ) ; 
/*--Mxx_initial--*/
void Uxx_power_off_procedure ( struct hw_data * pHwData ) ; 
/*--Uxx_power_off_procedure--*/
void GetTxVgaFromEEPROM ( struct hw_data * pHwData ) ; 
/*--GetTxVgaFromEEPROM--*/
void EEPROMTxVgaAdjust ( struct hw_data * pHwData ) ; 
/*--EEPROMTxVgaAdjust--*/
void BBProcessor_RateChanging ( struct hw_data * pHwData , u8 rate ) ; 
/*--BBProcessor_RateChanging--*/
unsigned char Wb35Reg_BurstWrite ( struct hw_data * pHwData , u16 RegisterNo , u32 * pRegisterData , u8 NumberOfData , u8 Flag ) ; 
/*--Wb35Reg_BurstWrite--*/
void Wb35Reg_Update ( struct hw_data * pHwData , u16 RegisterNo , u32 RegisterValue ) ; 
/*--Wb35Reg_Update--*/
unsigned char Wb35Reg_WriteSync ( struct hw_data * pHwData , u16 RegisterNo , u32 RegisterValue ) ; 
/*--Wb35Reg_WriteSync--*/
unsigned char Wb35Reg_Write ( struct hw_data * pHwData , u16 RegisterNo , u32 RegisterValue ) ; 
/*--Wb35Reg_Write--*/
unsigned char Wb35Reg_WriteWithCallbackValue ( struct hw_data * pHwData , u16 RegisterNo , u32 RegisterValue , s8 * pValue , s8 Len ) ; 
/*--Wb35Reg_WriteWithCallbackValue--*/
unsigned char Wb35Reg_ReadSync ( struct hw_data * pHwData , u16 RegisterNo , u32 * pRegisterValue ) ; 
/*--Wb35Reg_ReadSync--*/
unsigned char Wb35Reg_Read ( struct hw_data * pHwData , u16 RegisterNo , u32 * pRegisterValue ) ; 
/*--Wb35Reg_Read--*/
void Wb35Reg_EP0VM_start ( struct hw_data * pHwData ) ; 
/*--Wb35Reg_EP0VM_start--*/
void Wb35Reg_EP0VM ( struct hw_data * pHwData ) ; 
/*--Wb35Reg_EP0VM--*/
void Wb35Reg_EP0VM_complete ( struct urb * urb ) ; 
/*--Wb35Reg_EP0VM_complete--*/
void Wb35Reg_destroy ( struct hw_data * pHwData ) ; 
/*--Wb35Reg_destroy--*/
unsigned char Wb35Reg_initial ( struct hw_data * pHwData ) ; 
/*--Wb35Reg_initial--*/
u32 CardComputeCrc ( u8 * Buffer , u32 Length ) ; 
/*--CardComputeCrc--*/
u32 BitReverse ( u32 dwData , u32 DataLength ) ; 
/*--BitReverse--*/
void Wb35Reg_phy_calibration ( struct hw_data * pHwData ) ; 
/*--Wb35Reg_phy_calibration--*/
void Wb35Rx_start ( struct ieee80211_hw * hw ) ; 
/*--Wb35Rx_start--*/
unsigned char Wb35Rx_initial ( struct hw_data * pHwData ) ; 
/*--Wb35Rx_initial--*/
void Wb35Rx_stop ( struct hw_data * pHwData ) ; 
/*--Wb35Rx_stop--*/
void Wb35Rx_destroy ( struct hw_data * pHwData ) ; 
/*--Wb35Rx_destroy--*/
unsigned char Wb35Tx_get_tx_buffer ( struct hw_data * pHwData , u8 * * pBuffer ) ; 
/*--Wb35Tx_get_tx_buffer--*/
void Wb35Tx_start ( struct wbsoft_priv * adapter ) ; 
/*--Wb35Tx_start--*/
unsigned char Wb35Tx_initial ( struct hw_data * pHwData ) ; 
/*--Wb35Tx_initial--*/
void Wb35Tx_stop ( struct hw_data * pHwData ) ; 
/*--Wb35Tx_stop--*/
void Wb35Tx_destroy ( struct hw_data * pHwData ) ; 
/*--Wb35Tx_destroy--*/
void Wb35Tx_CurrentTime ( struct wbsoft_priv * adapter , u32 TimeCount ) ; 
/*--Wb35Tx_CurrentTime--*/
void Wb35Tx_EP2VM_start ( struct wbsoft_priv * adapter ) ; 
/*--Wb35Tx_EP2VM_start--*/
u8 hal_get_antenna_number ( struct hw_data * pHwData ) ; 
/*--hal_get_antenna_number--*/
void hfa384x_create ( hfa384x_t * hw , struct usb_device * usb ) ; 
/*--hfa384x_create--*/
void hfa384x_destroy ( hfa384x_t * hw ) ; 
/*--hfa384x_destroy--*/
int hfa384x_cmd_initialize ( hfa384x_t * hw ) ; 
/*--hfa384x_cmd_initialize--*/
int hfa384x_cmd_disable ( hfa384x_t * hw , u16 macport ) ; 
/*--hfa384x_cmd_disable--*/
int hfa384x_cmd_enable ( hfa384x_t * hw , u16 macport ) ; 
/*--hfa384x_cmd_enable--*/
int hfa384x_cmd_monitor ( hfa384x_t * hw , u16 enable ) ; 
/*--hfa384x_cmd_monitor--*/
int hfa384x_cmd_download ( hfa384x_t * hw , u16 mode , u16 lowaddr , u16 highaddr , u16 codelen ) ; 
/*--hfa384x_cmd_download--*/
int hfa384x_corereset ( hfa384x_t * hw , int holdtime , int settletime , int genesis ) ; 
/*--hfa384x_corereset--*/
int hfa384x_drvr_commtallies ( hfa384x_t * hw ) ; 
/*--hfa384x_drvr_commtallies--*/
int hfa384x_drvr_disable ( hfa384x_t * hw , u16 macport ) ; 
/*--hfa384x_drvr_disable--*/
int hfa384x_drvr_enable ( hfa384x_t * hw , u16 macport ) ; 
/*--hfa384x_drvr_enable--*/
int hfa384x_drvr_flashdl_enable ( hfa384x_t * hw ) ; 
/*--hfa384x_drvr_flashdl_enable--*/
int hfa384x_drvr_flashdl_disable ( hfa384x_t * hw ) ; 
/*--hfa384x_drvr_flashdl_disable--*/
int hfa384x_drvr_flashdl_write ( hfa384x_t * hw , u32 daddr , void * buf , u32 len ) ; 
/*--hfa384x_drvr_flashdl_write--*/
int hfa384x_drvr_getconfig ( hfa384x_t * hw , u16 rid , void * buf , u16 len ) ; 
/*--hfa384x_drvr_getconfig--*/
int hfa384x_drvr_getconfig_async ( hfa384x_t * hw , u16 rid , ctlx_usercb_t usercb , void * usercb_data ) ; 
/*--hfa384x_drvr_getconfig_async--*/
int hfa384x_drvr_setconfig_async ( hfa384x_t * hw , u16 rid , void * buf , u16 len , ctlx_usercb_t usercb , void * usercb_data ) ; 
/*--hfa384x_drvr_setconfig_async--*/
int hfa384x_drvr_ramdl_disable ( hfa384x_t * hw ) ; 
/*--hfa384x_drvr_ramdl_disable--*/
int hfa384x_drvr_ramdl_enable ( hfa384x_t * hw , u32 exeaddr ) ; 
/*--hfa384x_drvr_ramdl_enable--*/
int hfa384x_drvr_ramdl_write ( hfa384x_t * hw , u32 daddr , void * buf , u32 len ) ; 
/*--hfa384x_drvr_ramdl_write--*/
int hfa384x_drvr_readpda ( hfa384x_t * hw , void * buf , unsigned int len ) ; 
/*--hfa384x_drvr_readpda--*/
int hfa384x_drvr_setconfig ( hfa384x_t * hw , u16 rid , void * buf , u16 len ) ; 
/*--hfa384x_drvr_setconfig--*/
int hfa384x_drvr_start ( hfa384x_t * hw ) ; 
/*--hfa384x_drvr_start--*/
int hfa384x_drvr_stop ( hfa384x_t * hw ) ; 
/*--hfa384x_drvr_stop--*/
int hfa384x_drvr_txframe ( hfa384x_t * hw , struct sk_buff * skb , p80211_hdr_t * p80211_hdr , p80211_metawep_t * p80211_wep ) ; 
/*--hfa384x_drvr_txframe--*/
void hfa384x_tx_timeout ( wlandevice_t * wlandev ) ; 
/*--hfa384x_tx_timeout--*/
int prism2mgmt_scan ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_scan--*/
int prism2mgmt_scan_results ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_scan_results--*/
int prism2mgmt_start ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_start--*/
int prism2mgmt_readpda ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_readpda--*/
int prism2mgmt_ramdl_state ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_ramdl_state--*/
int prism2mgmt_ramdl_write ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_ramdl_write--*/
int prism2mgmt_flashdl_state ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_flashdl_state--*/
int prism2mgmt_flashdl_write ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_flashdl_write--*/
int prism2mgmt_autojoin ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_autojoin--*/
int prism2mgmt_wlansniff ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_wlansniff--*/
int prism2mgmt_mibset_mibget ( wlandevice_t * wlandev , void * msgp ) ; 
/*--prism2mgmt_mibset_mibget--*/
void prism2mgmt_pstr2bytestr ( hfa384x_bytestr_t * bytestr , p80211pstrd_t * pstr ) ; 
/*--prism2mgmt_pstr2bytestr--*/
void prism2mgmt_pstr2bytearea ( u8 * bytearea , p80211pstrd_t * pstr ) ; 
/*--prism2mgmt_pstr2bytearea--*/
void prism2mgmt_bytestr2pstr ( hfa384x_bytestr_t * bytestr , p80211pstrd_t * pstr ) ; 
/*--prism2mgmt_bytestr2pstr--*/
void prism2mgmt_bytearea2pstr ( u8 * bytearea , p80211pstrd_t * pstr , int len ) ; 
/*--prism2mgmt_bytearea2pstr--*/
u32 prism2sta_ifstate ( wlandevice_t * wlandev , u32 ifstate ) ; 
/*--prism2sta_ifstate--*/
void prism2sta_processing_defer ( struct work_struct * data ) ; 
/*--prism2sta_processing_defer--*/
void prism2sta_ev_info ( wlandevice_t * wlandev , hfa384x_InfFrame_t * inf ) ; 
/*--prism2sta_ev_info--*/
void prism2sta_ev_txexc ( wlandevice_t * wlandev , u16 status ) ; 
/*--prism2sta_ev_txexc--*/
void prism2sta_ev_tx ( wlandevice_t * wlandev , u16 status ) ; 
/*--prism2sta_ev_tx--*/
void prism2sta_ev_rx ( wlandevice_t * wlandev , struct sk_buff * skb ) ; 
/*--prism2sta_ev_rx--*/
void prism2sta_ev_alloc ( wlandevice_t * wlandev ) ; 
/*--prism2sta_ev_alloc--*/
void prism2sta_commsqual_defer ( struct work_struct * data ) ; 
/*--prism2sta_commsqual_defer--*/
void prism2sta_commsqual_timer ( unsigned long data ) ; 
/*--prism2sta_commsqual_timer--*/
int prism2_fwtry ( struct usb_device * udev , wlandevice_t * wlandev ) ; 
/*--prism2_fwtry--*/
int prism2_fwapply ( const struct ihex_binrec * rfptr , wlandevice_t * wlandev ) ; 
/*--prism2_fwapply--*/
int crcimage ( imgchunk_t * fchunk , unsigned int nfchunks , s3crcrec_t * s3crc , unsigned int ns3crc ) ; 
/*--crcimage--*/
void free_chunks ( imgchunk_t * fchunk , unsigned int * nfchunks ) ; 
/*--free_chunks--*/
void free_srecs ( void ) ; 
/*--free_srecs--*/
int mkimage ( imgchunk_t * clist , unsigned int * ccnt ) ; 
/*--mkimage--*/
int mkpdrlist ( pda_t * pda ) ; 
/*--mkpdrlist--*/
int plugimage ( imgchunk_t * fchunk , unsigned int nfchunks , s3plugrec_t * s3plug , unsigned int ns3plug , pda_t * pda ) ; 
/*--plugimage--*/
int read_cardpda ( pda_t * pda , wlandevice_t * wlandev ) ; 
/*--read_cardpda--*/
int read_fwfile ( const struct ihex_binrec * record ) ; 
/*--read_fwfile--*/
int writeimage ( wlandevice_t * wlandev , imgchunk_t * fchunk , unsigned int nfchunks ) ; 
/*--writeimage--*/
int validate_identity ( void ) ; 
/*--validate_identity--*/
int skb_ether_to_p80211 ( wlandevice_t * wlandev , u32 ethconv , struct sk_buff * skb , p80211_hdr_t * p80211_hdr , p80211_metawep_t * p80211_wep ) ; 
/*--skb_ether_to_p80211--*/
int skb_p80211_to_ether ( wlandevice_t * wlandev , u32 ethconv , struct sk_buff * skb ) ; 
/*--skb_p80211_to_ether--*/
int p80211_stt_findproto ( u16 proto ) ; 
/*--p80211_stt_findproto--*/
void p80211skb_rxmeta_detach ( struct sk_buff * skb ) ; 
/*--p80211skb_rxmeta_detach--*/
int p80211skb_rxmeta_attach ( struct wlandevice * wlandev , struct sk_buff * skb ) ; 
/*--p80211skb_rxmeta_attach--*/
void p80211skb_free ( struct wlandevice * wlandev , struct sk_buff * skb ) ; 
/*--p80211skb_free--*/
int p80211req_dorequest ( wlandevice_t * wlandev , u8 * msgbuf ) ; 
/*--p80211req_dorequest--*/
int wep_change_key ( wlandevice_t * wlandev , int keynum , u8 * key , int keylen ) ; 
/*--wep_change_key--*/
int wep_decrypt ( wlandevice_t * wlandev , u8 * buf , u32 len , int key_override , u8 * iv , u8 * icv ) ; 
/*--wep_decrypt--*/
int wep_encrypt ( wlandevice_t * wlandev , u8 * buf , u8 * dst , u32 len , int keynum , u8 * iv , u8 * icv ) ; 
/*--wep_encrypt--*/
struct iw_statistics * p80211wext_get_wireless_stats ( netdevice_t * dev ) ; 
/*--p80211wext_get_wireless_stats--*/
int p80211wext_event_associated ( wlandevice_t * wlandev , int assoc ) ; 
/*--p80211wext_event_associated--*/
void p80211netdev_rx ( wlandevice_t * wlandev , struct sk_buff * skb ) ; 
/*--p80211netdev_rx--*/
int wlan_setup ( wlandevice_t * wlandev ) ; 
/*--wlan_setup--*/
int wlan_unsetup ( wlandevice_t * wlandev ) ; 
/*--wlan_unsetup--*/
int register_wlandev ( wlandevice_t * wlandev ) ; 
/*--register_wlandev--*/
int unregister_wlandev ( wlandevice_t * wlandev ) ; 
/*--unregister_wlandev--*/
void p80211netdev_hwremoved ( wlandevice_t * wlandev ) ; 
/*--p80211netdev_hwremoved--*/
int phone_register_device ( struct phone_device * p , int unit ) ; 
/*--phone_register_device--*/
void phone_unregister_device ( struct phone_device * pfd ) ; 
/*--phone_unregister_device--*/
IXJ * ixj_pcmcia_probe ( unsigned long dsp , unsigned long xilinx ) ; 
/*--ixj_pcmcia_probe--*/
void uio_event_notify ( struct uio_info * info ) ; 
/*--uio_event_notify--*/
int __uio_register_device ( struct module * owner , struct device * parent , struct uio_info * info ) ; 
/*--__uio_register_device--*/
void uio_unregister_device ( struct uio_info * info ) ; 
/*--uio_unregister_device--*/
int usbatm_usb_probe ( struct usb_interface * intf , const struct usb_device_id * id , struct usbatm_driver * driver ) ; 
/*--usbatm_usb_probe--*/
void usbatm_usb_disconnect ( struct usb_interface * intf ) ; 
/*--usbatm_usb_disconnect--*/
u16 c67x00_ll_hpi_status ( struct c67x00_device * dev ) ; 
/*--c67x00_ll_hpi_status--*/
void c67x00_ll_hpi_reg_init ( struct c67x00_device * dev ) ; 
/*--c67x00_ll_hpi_reg_init--*/
void c67x00_ll_hpi_enable_sofeop ( struct c67x00_sie * sie ) ; 
/*--c67x00_ll_hpi_enable_sofeop--*/
void c67x00_ll_hpi_disable_sofeop ( struct c67x00_sie * sie ) ; 
/*--c67x00_ll_hpi_disable_sofeop--*/
u16 c67x00_ll_fetch_siemsg ( struct c67x00_device * dev , int sie_num ) ; 
/*--c67x00_ll_fetch_siemsg--*/
u16 c67x00_ll_get_usb_ctl ( struct c67x00_sie * sie ) ; 
/*--c67x00_ll_get_usb_ctl--*/
void c67x00_ll_usb_clear_status ( struct c67x00_sie * sie , u16 bits ) ; 
/*--c67x00_ll_usb_clear_status--*/
u16 c67x00_ll_usb_get_status ( struct c67x00_sie * sie ) ; 
/*--c67x00_ll_usb_get_status--*/
void c67x00_ll_set_husb_eot ( struct c67x00_device * dev , u16 value ) ; 
/*--c67x00_ll_set_husb_eot--*/
void c67x00_ll_husb_reset ( struct c67x00_sie * sie , int port ) ; 
/*--c67x00_ll_husb_reset--*/
void c67x00_ll_husb_set_current_td ( struct c67x00_sie * sie , u16 addr ) ; 
/*--c67x00_ll_husb_set_current_td--*/
u16 c67x00_ll_husb_get_current_td ( struct c67x00_sie * sie ) ; 
/*--c67x00_ll_husb_get_current_td--*/
u16 c67x00_ll_husb_get_frame ( struct c67x00_sie * sie ) ; 
/*--c67x00_ll_husb_get_frame--*/
void c67x00_ll_husb_init_host_port ( struct c67x00_sie * sie ) ; 
/*--c67x00_ll_husb_init_host_port--*/
void c67x00_ll_husb_reset_port ( struct c67x00_sie * sie , int port ) ; 
/*--c67x00_ll_husb_reset_port--*/
void c67x00_ll_irq ( struct c67x00_device * dev , u16 int_status ) ; 
/*--c67x00_ll_irq--*/
int c67x00_ll_reset ( struct c67x00_device * dev ) ; 
/*--c67x00_ll_reset--*/
void c67x00_ll_write_mem_le16 ( struct c67x00_device * dev , u16 addr , void * data , int len ) ; 
/*--c67x00_ll_write_mem_le16--*/
void c67x00_ll_read_mem_le16 ( struct c67x00_device * dev , u16 addr , void * data , int len ) ; 
/*--c67x00_ll_read_mem_le16--*/
void c67x00_ll_init ( struct c67x00_device * dev ) ; 
/*--c67x00_ll_init--*/
void c67x00_ll_release ( struct c67x00_device * dev ) ; 
/*--c67x00_ll_release--*/
int c67x00_hcd_probe ( struct c67x00_sie * sie ) ; 
/*--c67x00_hcd_probe--*/
void c67x00_hcd_remove ( struct c67x00_sie * sie ) ; 
/*--c67x00_hcd_remove--*/
void c67x00_endpoint_disable ( struct usb_hcd * hcd , struct usb_host_endpoint * ep ) ; 
/*--c67x00_endpoint_disable--*/
int c67x00_urb_enqueue ( struct usb_hcd * hcd , struct urb * urb , gfp_t mem_flags ) ; 
/*--c67x00_urb_enqueue--*/
int c67x00_urb_dequeue ( struct usb_hcd * hcd , struct urb * urb , int status ) ; 
/*--c67x00_urb_dequeue--*/
void c67x00_sched_kick ( struct c67x00_hcd * c67x00 ) ; 
/*--c67x00_sched_kick--*/
int c67x00_sched_start_scheduler ( struct c67x00_hcd * c67x00 ) ; 
/*--c67x00_sched_start_scheduler--*/
void c67x00_sched_stop_scheduler ( struct c67x00_hcd * c67x00 ) ; 
/*--c67x00_sched_stop_scheduler--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) init_kmem_once ( void ) ; 
/*--init_kmem_once--*/
void deinit_kmem_cache ( void ) ; 
/*--deinit_kmem_cache--*/
struct usb_hcd * isp1760_register ( phys_addr_t res_start , resource_size_t res_len , int irq , unsigned long irqflags , struct device * dev , const char * busname , unsigned int devflags ) ; 
/*--isp1760_register--*/
void xhci_quiesce ( struct xhci_hcd * xhci ) ; 
/*--xhci_quiesce--*/
int xhci_halt ( struct xhci_hcd * xhci ) ; 
/*--xhci_halt--*/
int xhci_start ( struct xhci_hcd * xhci ) ; 
/*--xhci_start--*/
int xhci_reset ( struct xhci_hcd * xhci ) ; 
/*--xhci_reset--*/
int xhci_init ( struct usb_hcd * hcd ) ; 
/*--xhci_init--*/
irqreturn_t xhci_irq ( struct usb_hcd * hcd ) ; 
/*--xhci_irq--*/
int xhci_run ( struct usb_hcd * hcd ) ; 
/*--xhci_run--*/
void xhci_stop ( struct usb_hcd * hcd ) ; 
/*--xhci_stop--*/
void xhci_shutdown ( struct usb_hcd * hcd ) ; 
/*--xhci_shutdown--*/
unsigned int xhci_get_endpoint_index ( struct usb_endpoint_descriptor * desc ) ; 
/*--xhci_get_endpoint_index--*/
unsigned int xhci_get_endpoint_flag ( struct usb_endpoint_descriptor * desc ) ; 
/*--xhci_get_endpoint_flag--*/
unsigned int xhci_get_endpoint_flag_from_index ( unsigned int ep_index ) ; 
/*--xhci_get_endpoint_flag_from_index--*/
unsigned int xhci_last_valid_endpoint ( u32 added_ctxs ) ; 
/*--xhci_last_valid_endpoint--*/
int xhci_check_args ( struct usb_hcd * hcd , struct usb_device * udev , struct usb_host_endpoint * ep , int check_ep , const char * func ) ; 
/*--xhci_check_args--*/
int xhci_urb_enqueue ( struct usb_hcd * hcd , struct urb * urb , gfp_t mem_flags ) ; 
/*--xhci_urb_enqueue--*/
int xhci_urb_dequeue ( struct usb_hcd * hcd , struct urb * urb , int status ) ; 
/*--xhci_urb_dequeue--*/
int xhci_drop_endpoint ( struct usb_hcd * hcd , struct usb_device * udev , struct usb_host_endpoint * ep ) ; 
/*--xhci_drop_endpoint--*/
int xhci_add_endpoint ( struct usb_hcd * hcd , struct usb_device * udev , struct usb_host_endpoint * ep ) ; 
/*--xhci_add_endpoint--*/
int xhci_check_bandwidth ( struct usb_hcd * hcd , struct usb_device * udev ) ; 
/*--xhci_check_bandwidth--*/
void xhci_reset_bandwidth ( struct usb_hcd * hcd , struct usb_device * udev ) ; 
/*--xhci_reset_bandwidth--*/
void xhci_setup_input_ctx_for_quirk ( struct xhci_hcd * xhci , unsigned int slot_id , unsigned int ep_index , struct xhci_dequeue_state * deq_state ) ; 
/*--xhci_setup_input_ctx_for_quirk--*/
void xhci_cleanup_stalled_ring ( struct xhci_hcd * xhci , struct usb_device * udev , unsigned int ep_index ) ; 
/*--xhci_cleanup_stalled_ring--*/
void xhci_endpoint_reset ( struct usb_hcd * hcd , struct usb_host_endpoint * ep ) ; 
/*--xhci_endpoint_reset--*/
int xhci_alloc_streams ( struct usb_hcd * hcd , struct usb_device * udev , struct usb_host_endpoint * * eps , unsigned int num_eps , unsigned int num_streams , gfp_t mem_flags ) ; 
/*--xhci_alloc_streams--*/
int xhci_free_streams ( struct usb_hcd * hcd , struct usb_device * udev , struct usb_host_endpoint * * eps , unsigned int num_eps , gfp_t mem_flags ) ; 
/*--xhci_free_streams--*/
int xhci_reset_device ( struct usb_hcd * hcd , struct usb_device * udev ) ; 
/*--xhci_reset_device--*/
void xhci_free_dev ( struct usb_hcd * hcd , struct usb_device * udev ) ; 
/*--xhci_free_dev--*/
int xhci_alloc_dev ( struct usb_hcd * hcd , struct usb_device * udev ) ; 
/*--xhci_alloc_dev--*/
int xhci_address_device ( struct usb_hcd * hcd , struct usb_device * udev ) ; 
/*--xhci_address_device--*/
int xhci_update_hub_device ( struct usb_hcd * hcd , struct usb_device * hdev , struct usb_tt * tt , gfp_t mem_flags ) ; 
/*--xhci_update_hub_device--*/
int xhci_get_frame ( struct usb_hcd * hcd ) ; 
/*--xhci_get_frame--*/
void xhci_ring_free ( struct xhci_hcd * xhci , struct xhci_ring * ring ) ; 
/*--xhci_ring_free--*/
void xhci_free_or_cache_endpoint_ring ( struct xhci_hcd * xhci , struct xhci_virt_device * virt_dev , unsigned int ep_index ) ; 
/*--xhci_free_or_cache_endpoint_ring--*/
struct xhci_input_control_ctx * xhci_get_input_control_ctx ( struct xhci_hcd * xhci , struct xhci_container_ctx * ctx ) ; 
/*--xhci_get_input_control_ctx--*/
struct xhci_slot_ctx * xhci_get_slot_ctx ( struct xhci_hcd * xhci , struct xhci_container_ctx * ctx ) ; 
/*--xhci_get_slot_ctx--*/
struct xhci_ep_ctx * xhci_get_ep_ctx ( struct xhci_hcd * xhci , struct xhci_container_ctx * ctx , unsigned int ep_index ) ; 
/*--xhci_get_ep_ctx--*/
void xhci_free_stream_ctx ( struct xhci_hcd * xhci , unsigned int num_stream_ctxs , struct xhci_stream_ctx * stream_ctx , dma_addr_t dma ) ; 
/*--xhci_free_stream_ctx--*/
struct xhci_stream_ctx * xhci_alloc_stream_ctx ( struct xhci_hcd * xhci , unsigned int num_stream_ctxs , dma_addr_t * dma , gfp_t mem_flags ) ; 
/*--xhci_alloc_stream_ctx--*/
struct xhci_ring * xhci_dma_to_transfer_ring ( struct xhci_virt_ep * ep , u64 address ) ; 
/*--xhci_dma_to_transfer_ring--*/
struct xhci_ring * xhci_stream_id_to_ring ( struct xhci_virt_device * dev , unsigned int ep_index , unsigned int stream_id ) ; 
/*--xhci_stream_id_to_ring--*/
struct xhci_ring * xhci_triad_to_transfer_ring ( struct xhci_hcd * xhci , unsigned int slot_id , unsigned int ep_index , unsigned int stream_id ) ; 
/*--xhci_triad_to_transfer_ring--*/
struct xhci_ring * xhci_urb_to_transfer_ring ( struct xhci_hcd * xhci , struct urb * urb ) ; 
/*--xhci_urb_to_transfer_ring--*/
struct xhci_stream_info * xhci_alloc_stream_info ( struct xhci_hcd * xhci , unsigned int num_stream_ctxs , unsigned int num_streams , gfp_t mem_flags ) ; 
/*--xhci_alloc_stream_info--*/
void xhci_setup_streams_ep_input_ctx ( struct xhci_hcd * xhci , struct xhci_ep_ctx * ep_ctx , struct xhci_stream_info * stream_info ) ; 
/*--xhci_setup_streams_ep_input_ctx--*/
void xhci_setup_no_streams_ep_input_ctx ( struct xhci_hcd * xhci , struct xhci_ep_ctx * ep_ctx , struct xhci_virt_ep * ep ) ; 
/*--xhci_setup_no_streams_ep_input_ctx--*/
void xhci_free_stream_info ( struct xhci_hcd * xhci , struct xhci_stream_info * stream_info ) ; 
/*--xhci_free_stream_info--*/
void xhci_free_virt_device ( struct xhci_hcd * xhci , int slot_id ) ; 
/*--xhci_free_virt_device--*/
int xhci_alloc_virt_device ( struct xhci_hcd * xhci , int slot_id , struct usb_device * udev , gfp_t flags ) ; 
/*--xhci_alloc_virt_device--*/
void xhci_copy_ep0_dequeue_into_input_ctx ( struct xhci_hcd * xhci , struct usb_device * udev ) ; 
/*--xhci_copy_ep0_dequeue_into_input_ctx--*/
int xhci_setup_addressable_virt_dev ( struct xhci_hcd * xhci , struct usb_device * udev ) ; 
/*--xhci_setup_addressable_virt_dev--*/
int xhci_endpoint_init ( struct xhci_hcd * xhci , struct xhci_virt_device * virt_dev , struct usb_device * udev , struct usb_host_endpoint * ep , gfp_t mem_flags ) ; 
/*--xhci_endpoint_init--*/
void xhci_endpoint_zero ( struct xhci_hcd * xhci , struct xhci_virt_device * virt_dev , struct usb_host_endpoint * ep ) ; 
/*--xhci_endpoint_zero--*/
void xhci_endpoint_copy ( struct xhci_hcd * xhci , struct xhci_container_ctx * in_ctx , struct xhci_container_ctx * out_ctx , unsigned int ep_index ) ; 
/*--xhci_endpoint_copy--*/
void xhci_slot_copy ( struct xhci_hcd * xhci , struct xhci_container_ctx * in_ctx , struct xhci_container_ctx * out_ctx ) ; 
/*--xhci_slot_copy--*/
struct xhci_command * xhci_alloc_command ( struct xhci_hcd * xhci , bool allocate_in_ctx , bool allocate_completion , gfp_t mem_flags ) ; 
/*--xhci_alloc_command--*/
void xhci_free_command ( struct xhci_hcd * xhci , struct xhci_command * command ) ; 
/*--xhci_free_command--*/
void xhci_mem_cleanup ( struct xhci_hcd * xhci ) ; 
/*--xhci_mem_cleanup--*/
int xhci_mem_init ( struct xhci_hcd * xhci , gfp_t flags ) ; 
/*--xhci_mem_init--*/
int xhci_register_pci ( void ) ; 
/*--xhci_register_pci--*/
void xhci_unregister_pci ( void ) ; 
/*--xhci_unregister_pci--*/
dma_addr_t xhci_trb_virt_to_dma ( struct xhci_segment * seg , union xhci_trb * trb ) ; 
/*--xhci_trb_virt_to_dma--*/
void xhci_set_hc_event_deq ( struct xhci_hcd * xhci ) ; 
/*--xhci_set_hc_event_deq--*/
void xhci_ring_cmd_db ( struct xhci_hcd * xhci ) ; 
/*--xhci_ring_cmd_db--*/
void xhci_find_new_dequeue_state ( struct xhci_hcd * xhci , unsigned int slot_id , unsigned int ep_index , unsigned int stream_id , struct xhci_td * cur_td , struct xhci_dequeue_state * state ) ; 
/*--xhci_find_new_dequeue_state--*/
void xhci_queue_new_dequeue_state ( struct xhci_hcd * xhci , unsigned int slot_id , unsigned int ep_index , unsigned int stream_id , struct xhci_dequeue_state * deq_state ) ; 
/*--xhci_queue_new_dequeue_state--*/
void xhci_stop_endpoint_command_watchdog ( unsigned long arg ) ; 
/*--xhci_stop_endpoint_command_watchdog--*/
struct xhci_segment * trb_in_td ( struct xhci_segment * start_seg , union xhci_trb * start_trb , union xhci_trb * end_trb , dma_addr_t suspect_dma ) ; 
/*--trb_in_td--*/
int xhci_is_vendor_info_code ( struct xhci_hcd * xhci , unsigned int trb_comp_code ) ; 
/*--xhci_is_vendor_info_code--*/
void xhci_handle_event ( struct xhci_hcd * xhci ) ; 
/*--xhci_handle_event--*/
int xhci_queue_intr_tx ( struct xhci_hcd * xhci , gfp_t mem_flags , struct urb * urb , int slot_id , unsigned int ep_index ) ; 
/*--xhci_queue_intr_tx--*/
int xhci_queue_bulk_tx ( struct xhci_hcd * xhci , gfp_t mem_flags , struct urb * urb , int slot_id , unsigned int ep_index ) ; 
/*--xhci_queue_bulk_tx--*/
int xhci_queue_ctrl_tx ( struct xhci_hcd * xhci , gfp_t mem_flags , struct urb * urb , int slot_id , unsigned int ep_index ) ; 
/*--xhci_queue_ctrl_tx--*/
void * xhci_setup_one_noop ( struct xhci_hcd * xhci ) ; 
/*--xhci_setup_one_noop--*/
int xhci_queue_slot_control ( struct xhci_hcd * xhci , u32 trb_type , u32 slot_id ) ; 
/*--xhci_queue_slot_control--*/
int xhci_queue_address_device ( struct xhci_hcd * xhci , dma_addr_t in_ctx_ptr , u32 slot_id ) ; 
/*--xhci_queue_address_device--*/
int xhci_queue_vendor_command ( struct xhci_hcd * xhci , u32 field1 , u32 field2 , u32 field3 , u32 field4 ) ; 
/*--xhci_queue_vendor_command--*/
int xhci_queue_reset_device ( struct xhci_hcd * xhci , u32 slot_id ) ; 
/*--xhci_queue_reset_device--*/
int xhci_queue_configure_endpoint ( struct xhci_hcd * xhci , dma_addr_t in_ctx_ptr , u32 slot_id , bool command_must_succeed ) ; 
/*--xhci_queue_configure_endpoint--*/
int xhci_queue_evaluate_context ( struct xhci_hcd * xhci , dma_addr_t in_ctx_ptr , u32 slot_id ) ; 
/*--xhci_queue_evaluate_context--*/
int xhci_queue_stop_endpoint ( struct xhci_hcd * xhci , int slot_id , unsigned int ep_index ) ; 
/*--xhci_queue_stop_endpoint--*/
int xhci_queue_reset_ep ( struct xhci_hcd * xhci , int slot_id , unsigned int ep_index ) ; 
/*--xhci_queue_reset_ep--*/
int xhci_hub_control ( struct usb_hcd * hcd , u16 typeReq , u16 wValue , u16 wIndex , char * buf , u16 wLength ) ; 
/*--xhci_hub_control--*/
int xhci_hub_status_data ( struct usb_hcd * hcd , char * buf ) ; 
/*--xhci_hub_status_data--*/
void xhci_dbg_regs ( struct xhci_hcd * xhci ) ; 
/*--xhci_dbg_regs--*/
void xhci_print_ir_set ( struct xhci_hcd * xhci , struct xhci_intr_reg * ir_set , int set_num ) ; 
/*--xhci_print_ir_set--*/
void xhci_print_run_regs ( struct xhci_hcd * xhci ) ; 
/*--xhci_print_run_regs--*/
void xhci_print_registers ( struct xhci_hcd * xhci ) ; 
/*--xhci_print_registers--*/
void xhci_print_trb_offsets ( struct xhci_hcd * xhci , union xhci_trb * trb ) ; 
/*--xhci_print_trb_offsets--*/
void xhci_debug_trb ( struct xhci_hcd * xhci , union xhci_trb * trb ) ; 
/*--xhci_debug_trb--*/
void xhci_debug_segment ( struct xhci_hcd * xhci , struct xhci_segment * seg ) ; 
/*--xhci_debug_segment--*/
void xhci_dbg_ring_ptrs ( struct xhci_hcd * xhci , struct xhci_ring * ring ) ; 
/*--xhci_dbg_ring_ptrs--*/
void xhci_debug_ring ( struct xhci_hcd * xhci , struct xhci_ring * ring ) ; 
/*--xhci_debug_ring--*/
void xhci_dbg_ep_rings ( struct xhci_hcd * xhci , unsigned int slot_id , unsigned int ep_index , struct xhci_virt_ep * ep ) ; 
/*--xhci_dbg_ep_rings--*/
void xhci_dbg_erst ( struct xhci_hcd * xhci , struct xhci_erst * erst ) ; 
/*--xhci_dbg_erst--*/
void xhci_dbg_cmd_ptrs ( struct xhci_hcd * xhci ) ; 
/*--xhci_dbg_cmd_ptrs--*/
char * xhci_get_slot_state ( struct xhci_hcd * xhci , struct xhci_container_ctx * ctx ) ; 
/*--xhci_get_slot_state--*/
void xhci_dbg_slot_ctx ( struct xhci_hcd * xhci , struct xhci_container_ctx * ctx ) ; 
/*--xhci_dbg_slot_ctx--*/
void xhci_dbg_ep_ctx ( struct xhci_hcd * xhci , struct xhci_container_ctx * ctx , unsigned int last_ep ) ; 
/*--xhci_dbg_ep_ctx--*/
void xhci_dbg_ctx ( struct xhci_hcd * xhci , struct xhci_container_ctx * ctx , unsigned int last_ep ) ; 
/*--xhci_dbg_ctx--*/
void asl_start ( struct whc * whc ) ; 
/*--asl_start--*/
void asl_stop ( struct whc * whc ) ; 
/*--asl_stop--*/
void asl_update ( struct whc * whc , uint32_t wusbcmd ) ; 
/*--asl_update--*/
void scan_async_work ( struct work_struct * work ) ; 
/*--scan_async_work--*/
int asl_urb_enqueue ( struct whc * whc , struct urb * urb , gfp_t mem_flags ) ; 
/*--asl_urb_enqueue--*/
int asl_urb_dequeue ( struct whc * whc , struct urb * urb , int status ) ; 
/*--asl_urb_dequeue--*/
void asl_qset_delete ( struct whc * whc , struct whc_qset * qset ) ; 
/*--asl_qset_delete--*/
int asl_init ( struct whc * whc ) ; 
/*--asl_init--*/
void asl_clean_up ( struct whc * whc ) ; 
/*--asl_clean_up--*/
void whc_dbg_init ( struct whc * whc ) ; 
/*--whc_dbg_init--*/
void whc_dbg_clean_up ( struct whc * whc ) ; 
/*--whc_dbg_clean_up--*/
void whc_write_wusbcmd ( struct whc * whc , u32 mask , u32 val ) ; 
/*--whc_write_wusbcmd--*/
int whc_do_gencmd ( struct whc * whc , u32 cmd , u32 params , void * addr , size_t len ) ; 
/*--whc_do_gencmd--*/
void whc_hw_error ( struct whc * whc , const char * reason ) ; 
/*--whc_hw_error--*/
int whc_init ( struct whc * whc ) ; 
/*--whc_init--*/
void whc_clean_up ( struct whc * whc ) ; 
/*--whc_clean_up--*/
irqreturn_t whc_int_handler ( struct usb_hcd * hcd ) ; 
/*--whc_int_handler--*/
void whc_dn_work ( struct work_struct * work ) ; 
/*--whc_dn_work--*/
void pzl_start ( struct whc * whc ) ; 
/*--pzl_start--*/
void pzl_stop ( struct whc * whc ) ; 
/*--pzl_stop--*/
void pzl_update ( struct whc * whc , uint32_t wusbcmd ) ; 
/*--pzl_update--*/
void scan_periodic_work ( struct work_struct * work ) ; 
/*--scan_periodic_work--*/
int pzl_urb_enqueue ( struct whc * whc , struct urb * urb , gfp_t mem_flags ) ; 
/*--pzl_urb_enqueue--*/
int pzl_urb_dequeue ( struct whc * whc , struct urb * urb , int status ) ; 
/*--pzl_urb_dequeue--*/
void pzl_qset_delete ( struct whc * whc , struct whc_qset * qset ) ; 
/*--pzl_qset_delete--*/
int pzl_init ( struct whc * whc ) ; 
/*--pzl_init--*/
void pzl_clean_up ( struct whc * whc ) ; 
/*--pzl_clean_up--*/
struct whc_qset * qset_alloc ( struct whc * whc , gfp_t mem_flags ) ; 
/*--qset_alloc--*/
void qset_clear ( struct whc * whc , struct whc_qset * qset ) ; 
/*--qset_clear--*/
void qset_reset ( struct whc * whc , struct whc_qset * qset ) ; 
/*--qset_reset--*/
struct whc_qset * get_qset ( struct whc * whc , struct urb * urb , gfp_t mem_flags ) ; 
/*--get_qset--*/
void qset_remove_complete ( struct whc * whc , struct whc_qset * qset ) ; 
/*--qset_remove_complete--*/
enum whc_update qset_add_qtds ( struct whc * whc , struct whc_qset * qset ) ; 
/*--qset_add_qtds--*/
void qset_free_std ( struct whc * whc , struct whc_std * std ) ; 
/*--qset_free_std--*/
int qset_add_urb ( struct whc * whc , struct whc_qset * qset , struct urb * urb , gfp_t mem_flags ) ; 
/*--qset_add_urb--*/
void qset_remove_urb ( struct whc * whc , struct whc_qset * qset , struct urb * urb , int status ) ; 
/*--qset_remove_urb--*/
void process_inactive_qtd ( struct whc * whc , struct whc_qset * qset , struct whc_qtd * qtd ) ; 
/*--process_inactive_qtd--*/
void process_halted_qtd ( struct whc * whc , struct whc_qset * qset , struct whc_qtd * qtd ) ; 
/*--process_halted_qtd--*/
void qset_free ( struct whc * whc , struct whc_qset * qset ) ; 
/*--qset_free--*/
void qset_delete ( struct whc * whc , struct whc_qset * qset ) ; 
/*--qset_delete--*/
int whc_wusbhc_start ( struct wusbhc * wusbhc ) ; 
/*--whc_wusbhc_start--*/
void whc_wusbhc_stop ( struct wusbhc * wusbhc , int delay ) ; 
/*--whc_wusbhc_stop--*/
int whc_mmcie_add ( struct wusbhc * wusbhc , u8 interval , u8 repeat_cnt , u8 handle , struct wuie_hdr * wuie ) ; 
/*--whc_mmcie_add--*/
int whc_mmcie_rm ( struct wusbhc * wusbhc , u8 handle ) ; 
/*--whc_mmcie_rm--*/
int whc_bwa_set ( struct wusbhc * wusbhc , s8 stream_index , const struct uwb_mas_bm * mas_bm ) ; 
/*--whc_bwa_set--*/
int whc_dev_info_set ( struct wusbhc * wusbhc , struct wusb_dev * wusb_dev ) ; 
/*--whc_dev_info_set--*/
int whc_set_num_dnts ( struct wusbhc * wusbhc , u8 interval , u8 slots ) ; 
/*--whc_set_num_dnts--*/
int whc_set_ptk ( struct wusbhc * wusbhc , u8 port_idx , u32 tkid , const void * ptk , size_t key_size ) ; 
/*--whc_set_ptk--*/
int whc_set_gtk ( struct wusbhc * wusbhc , u32 tkid , const void * gtk , size_t key_size ) ; 
/*--whc_set_gtk--*/
int whc_set_cluster_id ( struct whc * whc , u8 bcid ) ; 
/*--whc_set_cluster_id--*/
void ftdi_elan_gone_away ( struct platform_device * pdev ) ; 
/*--ftdi_elan_gone_away--*/
int usb_ftdi_elan_write_pcimem ( struct platform_device * pdev , int mem_offset , u8 width , u32 data ) ; 
/*--usb_ftdi_elan_write_pcimem--*/
int usb_ftdi_elan_read_pcimem ( struct platform_device * pdev , int mem_offset , u8 width , u32 * data ) ; 
/*--usb_ftdi_elan_read_pcimem--*/
int usb_ftdi_elan_edset_setup ( struct platform_device * pdev , u8 ed_number , void * endp , struct urb * urb , u8 address , u8 ep_number , u8 toggle_bits , void ( * callback ) ( void * endp , struct urb * urb , u8 * buf , int len , int toggle_bits , int error_count , int condition_code , int repeat_number , int halted , int skipped , int actual , int non_null ) ) ; 
/*--usb_ftdi_elan_edset_setup--*/
int usb_ftdi_elan_edset_input ( struct platform_device * pdev , u8 ed_number , void * endp , struct urb * urb , u8 address , u8 ep_number , u8 toggle_bits , void ( * callback ) ( void * endp , struct urb * urb , u8 * buf , int len , int toggle_bits , int error_count , int condition_code , int repeat_number , int halted , int skipped , int actual , int non_null ) ) ; 
/*--usb_ftdi_elan_edset_input--*/
int usb_ftdi_elan_edset_empty ( struct platform_device * pdev , u8 ed_number , void * endp , struct urb * urb , u8 address , u8 ep_number , u8 toggle_bits , void ( * callback ) ( void * endp , struct urb * urb , u8 * buf , int len , int toggle_bits , int error_count , int condition_code , int repeat_number , int halted , int skipped , int actual , int non_null ) ) ; 
/*--usb_ftdi_elan_edset_empty--*/
int usb_ftdi_elan_edset_output ( struct platform_device * pdev , u8 ed_number , void * endp , struct urb * urb , u8 address , u8 ep_number , u8 toggle_bits , void ( * callback ) ( void * endp , struct urb * urb , u8 * buf , int len , int toggle_bits , int error_count , int condition_code , int repeat_number , int halted , int skipped , int actual , int non_null ) ) ; 
/*--usb_ftdi_elan_edset_output--*/
int usb_ftdi_elan_edset_single ( struct platform_device * pdev , u8 ed_number , void * endp , struct urb * urb , u8 address , u8 ep_number , u8 toggle_bits , void ( * callback ) ( void * endp , struct urb * urb , u8 * buf , int len , int toggle_bits , int error_count , int condition_code , int repeat_number , int halted , int skipped , int actual , int non_null ) ) ; 
/*--usb_ftdi_elan_edset_single--*/
int usb_ftdi_elan_edset_flush ( struct platform_device * pdev , u8 ed_number , void * endp ) ; 
/*--usb_ftdi_elan_edset_flush--*/
int sisusb_setidxreg ( struct sisusb_usb_data * sisusb , int port , u8 index , u8 data ) ; 
/*--sisusb_setidxreg--*/
int sisusb_getidxreg ( struct sisusb_usb_data * sisusb , int port , u8 index , u8 * data ) ; 
/*--sisusb_getidxreg--*/
int sisusb_setidxregandor ( struct sisusb_usb_data * sisusb , int port , u8 idx , u8 myand , u8 myor ) ; 
/*--sisusb_setidxregandor--*/
int sisusb_setidxregor ( struct sisusb_usb_data * sisusb , int port , u8 index , u8 myor ) ; 
/*--sisusb_setidxregor--*/
int sisusb_setidxregand ( struct sisusb_usb_data * sisusb , int port , u8 idx , u8 myand ) ; 
/*--sisusb_setidxregand--*/
void sisusb_delete ( struct kref * kref ) ; 
/*--sisusb_delete--*/
struct usb_serial * usb_serial_get_by_index ( unsigned index ) ; 
/*--usb_serial_get_by_index--*/
void usb_serial_put ( struct usb_serial * serial ) ; 
/*--usb_serial_put--*/
void usb_serial_port_softint ( struct usb_serial_port * port ) ; 
/*--usb_serial_port_softint--*/
int usb_serial_probe ( struct usb_interface * interface , const struct usb_device_id * id ) ; 
/*--usb_serial_probe--*/
void usb_serial_disconnect ( struct usb_interface * interface ) ; 
/*--usb_serial_disconnect--*/
int usb_serial_suspend ( struct usb_interface * intf , pm_message_t message ) ; 
/*--usb_serial_suspend--*/
int usb_serial_resume ( struct usb_interface * intf ) ; 
/*--usb_serial_resume--*/
int usb_serial_register ( struct usb_serial_driver * driver ) ; 
/*--usb_serial_register--*/
void usb_serial_deregister ( struct usb_serial_driver * device ) ; 
/*--usb_serial_deregister--*/
int usb_serial_generic_register ( int _debug ) ; 
/*--usb_serial_generic_register--*/
void usb_serial_generic_deregister ( void ) ; 
/*--usb_serial_generic_deregister--*/
int usb_serial_generic_open ( struct tty_struct * tty , struct usb_serial_port * port ) ; 
/*--usb_serial_generic_open--*/
void usb_serial_generic_close ( struct usb_serial_port * port ) ; 
/*--usb_serial_generic_close--*/
int usb_serial_generic_prepare_write_buffer ( struct usb_serial_port * port , void * dest , size_t size ) ; 
/*--usb_serial_generic_prepare_write_buffer--*/
int usb_serial_generic_write ( struct tty_struct * tty , struct usb_serial_port * port , const unsigned char * buf , int count ) ; 
/*--usb_serial_generic_write--*/
int usb_serial_generic_write_room ( struct tty_struct * tty ) ; 
/*--usb_serial_generic_write_room--*/
int usb_serial_generic_chars_in_buffer ( struct tty_struct * tty ) ; 
/*--usb_serial_generic_chars_in_buffer--*/
int usb_serial_generic_submit_read_urb ( struct usb_serial_port * port , gfp_t mem_flags ) ; 
/*--usb_serial_generic_submit_read_urb--*/
void usb_serial_generic_process_read_urb ( struct urb * urb ) ; 
/*--usb_serial_generic_process_read_urb--*/
void usb_serial_generic_read_bulk_callback ( struct urb * urb ) ; 
/*--usb_serial_generic_read_bulk_callback--*/
void usb_serial_generic_write_bulk_callback ( struct urb * urb ) ; 
/*--usb_serial_generic_write_bulk_callback--*/
void usb_serial_generic_throttle ( struct tty_struct * tty ) ; 
/*--usb_serial_generic_throttle--*/
void usb_serial_generic_unthrottle ( struct tty_struct * tty ) ; 
/*--usb_serial_generic_unthrottle--*/
int usb_serial_handle_sysrq_char ( struct tty_struct * tty , struct usb_serial_port * port , unsigned int ch ) ; 
/*--usb_serial_handle_sysrq_char--*/
int usb_serial_handle_break ( struct usb_serial_port * port ) ; 
/*--usb_serial_handle_break--*/
void usb_serial_handle_dcd_change ( struct usb_serial_port * usb_port , struct tty_struct * tty , unsigned int status ) ; 
/*--usb_serial_handle_dcd_change--*/
int usb_serial_generic_resume ( struct usb_serial * serial ) ; 
/*--usb_serial_generic_resume--*/
void usb_serial_generic_disconnect ( struct usb_serial * serial ) ; 
/*--usb_serial_generic_disconnect--*/
void usb_serial_generic_release ( struct usb_serial * serial ) ; 
/*--usb_serial_generic_release--*/
int usb_serial_bus_register ( struct usb_serial_driver * driver ) ; 
/*--usb_serial_bus_register--*/
void usb_serial_bus_deregister ( struct usb_serial_driver * driver ) ; 
/*--usb_serial_bus_deregister--*/
int ezusb_writememory ( struct usb_serial * serial , int address , unsigned char * data , int length , __u8 request ) ; 
/*--ezusb_writememory--*/
int ezusb_set_reset ( struct usb_serial * serial , unsigned char reset_bit ) ; 
/*--ezusb_set_reset--*/
void usb_wwan_dtr_rts ( struct usb_serial_port * port , int on ) ; 
/*--usb_wwan_dtr_rts--*/
void usb_wwan_set_termios ( struct tty_struct * tty , struct usb_serial_port * port , struct ktermios * old_termios ) ; 
/*--usb_wwan_set_termios--*/
int usb_wwan_tiocmget ( struct tty_struct * tty , struct file * file ) ; 
/*--usb_wwan_tiocmget--*/
int usb_wwan_tiocmset ( struct tty_struct * tty , struct file * file , unsigned int set , unsigned int clear ) ; 
/*--usb_wwan_tiocmset--*/
int usb_wwan_write ( struct tty_struct * tty , struct usb_serial_port * port , const unsigned char * buf , int count ) ; 
/*--usb_wwan_write--*/
int usb_wwan_write_room ( struct tty_struct * tty ) ; 
/*--usb_wwan_write_room--*/
int usb_wwan_chars_in_buffer ( struct tty_struct * tty ) ; 
/*--usb_wwan_chars_in_buffer--*/
int usb_wwan_open ( struct tty_struct * tty , struct usb_serial_port * port ) ; 
/*--usb_wwan_open--*/
void usb_wwan_close ( struct usb_serial_port * port ) ; 
/*--usb_wwan_close--*/
int usb_wwan_startup ( struct usb_serial * serial ) ; 
/*--usb_wwan_startup--*/
void usb_wwan_disconnect ( struct usb_serial * serial ) ; 
/*--usb_wwan_disconnect--*/
void usb_wwan_release ( struct usb_serial * serial ) ; 
/*--usb_wwan_release--*/
int usb_wwan_suspend ( struct usb_serial * serial , pm_message_t message ) ; 
/*--usb_wwan_suspend--*/
int usb_wwan_resume ( struct usb_serial * serial ) ; 
/*--usb_wwan_resume--*/
void usb_stor_report_device_reset ( struct us_data * us ) ; 
/*--usb_stor_report_device_reset--*/
void usb_stor_report_bus_reset ( struct us_data * us ) ; 
/*--usb_stor_report_bus_reset--*/
void usb_stor_pad12_command ( struct scsi_cmnd * srb , struct us_data * us ) ; 
/*--usb_stor_pad12_command--*/
void usb_stor_ufi_command ( struct scsi_cmnd * srb , struct us_data * us ) ; 
/*--usb_stor_ufi_command--*/
void usb_stor_transparent_scsi_command ( struct scsi_cmnd * srb , struct us_data * us ) ; 
/*--usb_stor_transparent_scsi_command--*/
unsigned int usb_stor_access_xfer_buf ( unsigned char * buffer , unsigned int buflen , struct scsi_cmnd * srb , struct scatterlist * * sgptr , unsigned int * offset , enum xfer_buf_dir dir ) ; 
/*--usb_stor_access_xfer_buf--*/
void usb_stor_set_xfer_buf ( unsigned char * buffer , unsigned int buflen , struct scsi_cmnd * srb ) ; 
/*--usb_stor_set_xfer_buf--*/
int usb_stor_control_msg ( struct us_data * us , unsigned int pipe , u8 request , u8 requesttype , u16 value , u16 index , void * data , u16 size , int timeout ) ; 
/*--usb_stor_control_msg--*/
int usb_stor_clear_halt ( struct us_data * us , unsigned int pipe ) ; 
/*--usb_stor_clear_halt--*/
int usb_stor_ctrl_transfer ( struct us_data * us , unsigned int pipe , u8 request , u8 requesttype , u16 value , u16 index , void * data , u16 size ) ; 
/*--usb_stor_ctrl_transfer--*/
int usb_stor_bulk_transfer_buf ( struct us_data * us , unsigned int pipe , void * buf , unsigned int length , unsigned int * act_len ) ; 
/*--usb_stor_bulk_transfer_buf--*/
int usb_stor_bulk_srb ( struct us_data * us , unsigned int pipe , struct scsi_cmnd * srb ) ; 
/*--usb_stor_bulk_srb--*/
int usb_stor_bulk_transfer_sg ( struct us_data * us , unsigned int pipe , void * buf , unsigned int length_left , int use_sg , int * residual ) ; 
/*--usb_stor_bulk_transfer_sg--*/
void usb_stor_invoke_transport ( struct scsi_cmnd * srb , struct us_data * us ) ; 
/*--usb_stor_invoke_transport--*/
void usb_stor_stop_transport ( struct us_data * us ) ; 
/*--usb_stor_stop_transport--*/
int usb_stor_CB_transport ( struct scsi_cmnd * srb , struct us_data * us ) ; 
/*--usb_stor_CB_transport--*/
int usb_stor_Bulk_max_lun ( struct us_data * us ) ; 
/*--usb_stor_Bulk_max_lun--*/
int usb_stor_Bulk_transport ( struct scsi_cmnd * srb , struct us_data * us ) ; 
/*--usb_stor_Bulk_transport--*/
int usb_stor_CB_reset ( struct us_data * us ) ; 
/*--usb_stor_CB_reset--*/
int usb_stor_Bulk_reset ( struct us_data * us ) ; 
/*--usb_stor_Bulk_reset--*/
int usb_stor_port_reset ( struct us_data * us ) ; 
/*--usb_stor_port_reset--*/
int usb_stor_suspend ( struct usb_interface * iface , pm_message_t message ) ; 
/*--usb_stor_suspend--*/
int usb_stor_resume ( struct usb_interface * iface ) ; 
/*--usb_stor_resume--*/
int usb_stor_reset_resume ( struct usb_interface * iface ) ; 
/*--usb_stor_reset_resume--*/
int usb_stor_pre_reset ( struct usb_interface * iface ) ; 
/*--usb_stor_pre_reset--*/
int usb_stor_post_reset ( struct usb_interface * iface ) ; 
/*--usb_stor_post_reset--*/
void fill_inquiry_response ( struct us_data * us , unsigned char * data , unsigned int data_len ) ; 
/*--fill_inquiry_response--*/
int usb_stor_probe1 ( struct us_data * * pus , struct usb_interface * intf , const struct usb_device_id * id , struct us_unusual_dev * unusual_dev ) ; 
/*--usb_stor_probe1--*/
int usb_stor_probe2 ( struct us_data * us ) ; 
/*--usb_stor_probe2--*/
void usb_stor_disconnect ( struct usb_interface * intf ) ; 
/*--usb_stor_disconnect--*/
int usb_stor_euscsi_init ( struct us_data * us ) ; 
/*--usb_stor_euscsi_init--*/
int usb_stor_ucr61s2b_init ( struct us_data * us ) ; 
/*--usb_stor_ucr61s2b_init--*/
int usb_stor_huawei_e220_init ( struct us_data * us ) ; 
/*--usb_stor_huawei_e220_init--*/
int sierra_ms_init ( struct us_data * us ) ; 
/*--sierra_ms_init--*/
int option_ms_init ( struct us_data * us ) ; 
/*--option_ms_init--*/
int usb_usual_ignore_device ( struct usb_interface * intf ) ; 
/*--usb_usual_ignore_device--*/
int wa_create ( struct wahc * wa , struct usb_interface * iface ) ; 
/*--wa_create--*/
void __wa_destroy ( struct wahc * wa ) ; 
/*--__wa_destroy--*/
void wa_reset_all ( struct wahc * wa ) ; 
/*--wa_reset_all--*/
int wa_nep_create ( struct wahc * wa , struct usb_interface * iface ) ; 
/*--wa_nep_create--*/
void wa_nep_destroy ( struct wahc * wa ) ; 
/*--wa_nep_destroy--*/
void rpipe_destroy ( struct kref * _rpipe ) ; 
/*--rpipe_destroy--*/
int rpipe_get_by_ep ( struct wahc * wa , struct usb_host_endpoint * ep , struct urb * urb , gfp_t gfp ) ; 
/*--rpipe_get_by_ep--*/
int wa_rpipes_create ( struct wahc * wa ) ; 
/*--wa_rpipes_create--*/
void wa_rpipes_destroy ( struct wahc * wa ) ; 
/*--wa_rpipes_destroy--*/
void rpipe_ep_disable ( struct wahc * wa , struct usb_host_endpoint * ep ) ; 
/*--rpipe_ep_disable--*/
void wa_urb_enqueue_run ( struct work_struct * ws ) ; 
/*--wa_urb_enqueue_run--*/
int wa_urb_enqueue ( struct wahc * wa , struct usb_host_endpoint * ep , struct urb * urb , gfp_t gfp ) ; 
/*--wa_urb_enqueue--*/
int wa_urb_dequeue ( struct wahc * wa , struct urb * urb ) ; 
/*--wa_urb_dequeue--*/
void wa_handle_notif_xfer ( struct wahc * wa , struct wa_notif_hdr * notif_hdr ) ; 
/*--wa_handle_notif_xfer--*/
ssize_t wusb_prf ( void * out , size_t out_size , const u8 key [ 16 ] , const struct aes_ccm_nonce * _n , const struct aes_ccm_label * a , const void * b , size_t blen , size_t len ) ; 
/*--wusb_prf--*/
int wusb_crypto_init ( void ) ; 
/*--wusb_crypto_init--*/
void wusb_crypto_exit ( void ) ; 
/*--wusb_crypto_exit--*/
void wusbhc_handle_dn ( struct wusbhc * wusbhc , u8 srcaddr , struct wusb_dn_hdr * dn_hdr , size_t size ) ; 
/*--wusbhc_handle_dn--*/
void __wusbhc_dev_disable ( struct wusbhc * wusbhc , u8 port_idx ) ; 
/*--__wusbhc_dev_disable--*/
int wusb_usb_ncb ( struct notifier_block * nb , unsigned long val , void * priv ) ; 
/*--wusb_usb_ncb--*/
struct wusb_dev * __wusb_dev_get_by_usb_dev ( struct wusbhc * wusbhc , struct usb_device * usb_dev ) ; 
/*--__wusb_dev_get_by_usb_dev--*/
void wusb_dev_destroy ( struct kref * _wusb_dev ) ; 
/*--wusb_dev_destroy--*/
int wusbhc_devconnect_create ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_devconnect_create--*/
void wusbhc_devconnect_destroy ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_devconnect_destroy--*/
int wusbhc_devconnect_start ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_devconnect_start--*/
void wusbhc_devconnect_stop ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_devconnect_stop--*/
int wusb_set_dev_addr ( struct wusbhc * wusbhc , struct wusb_dev * wusb_dev , u8 addr ) ; 
/*--wusb_set_dev_addr--*/
int wusb_dev_sysfs_add ( struct wusbhc * wusbhc , struct usb_device * usb_dev , struct wusb_dev * wusb_dev ) ; 
/*--wusb_dev_sysfs_add--*/
void wusb_dev_sysfs_rm ( struct wusb_dev * wusb_dev ) ; 
/*--wusb_dev_sysfs_rm--*/
int wusbhc_mmcie_create ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_mmcie_create--*/
void wusbhc_mmcie_destroy ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_mmcie_destroy--*/
int wusbhc_mmcie_set ( struct wusbhc * wusbhc , u8 interval , u8 repeat_cnt , struct wuie_hdr * wuie ) ; 
/*--wusbhc_mmcie_set--*/
void wusbhc_mmcie_rm ( struct wusbhc * wusbhc , struct wuie_hdr * wuie ) ; 
/*--wusbhc_mmcie_rm--*/
int wusbhc_start ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_start--*/
void wusbhc_stop ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_stop--*/
int wusbhc_chid_set ( struct wusbhc * wusbhc , const struct wusb_ckhdid * chid ) ; 
/*--wusbhc_chid_set--*/
int wusbhc_pal_register ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_pal_register--*/
void wusbhc_pal_unregister ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_pal_unregister--*/
int wusbhc_rh_status_data ( struct usb_hcd * usb_hcd , char * _buf ) ; 
/*--wusbhc_rh_status_data--*/
int wusbhc_rh_control ( struct usb_hcd * usb_hcd , u16 reqntype , u16 wValue , u16 wIndex , char * buf , u16 wLength ) ; 
/*--wusbhc_rh_control--*/
int wusbhc_rh_suspend ( struct usb_hcd * usb_hcd ) ; 
/*--wusbhc_rh_suspend--*/
int wusbhc_rh_resume ( struct usb_hcd * usb_hcd ) ; 
/*--wusbhc_rh_resume--*/
int wusbhc_rh_start_port_reset ( struct usb_hcd * usb_hcd , unsigned port_idx ) ; 
/*--wusbhc_rh_start_port_reset--*/
int wusbhc_rh_create ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_rh_create--*/
void wusbhc_rh_destroy ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_rh_destroy--*/
int wusbhc_rsv_establish ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_rsv_establish--*/
void wusbhc_rsv_terminate ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_rsv_terminate--*/
int wusbhc_sec_create ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_sec_create--*/
void wusbhc_sec_destroy ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_sec_destroy--*/
int wusbhc_sec_start ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_sec_start--*/
void wusbhc_sec_stop ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_sec_stop--*/
const char * wusb_et_name ( u8 x ) ; 
/*--wusb_et_name--*/
int wusb_dev_sec_add ( struct wusbhc * wusbhc , struct usb_device * usb_dev , struct wusb_dev * wusb_dev ) ; 
/*--wusb_dev_sec_add--*/
void wusb_dev_sec_rm ( struct wusb_dev * wusb_dev ) ; 
/*--wusb_dev_sec_rm--*/
int wusb_dev_update_address ( struct wusbhc * wusbhc , struct wusb_dev * wusb_dev ) ; 
/*--wusb_dev_update_address--*/
int wusb_dev_4way_handshake ( struct wusbhc * wusbhc , struct wusb_dev * wusb_dev , struct wusb_ckhdid * ck ) ; 
/*--wusb_dev_4way_handshake--*/
void wusbhc_gtk_rekey ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_gtk_rekey--*/
int wusbhc_create ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_create--*/
int wusbhc_b_create ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_b_create--*/
void wusbhc_b_destroy ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_b_destroy--*/
void wusbhc_destroy ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_destroy--*/
u8 wusb_cluster_id_get ( void ) ; 
/*--wusb_cluster_id_get--*/
void wusb_cluster_id_put ( u8 id ) ; 
/*--wusb_cluster_id_put--*/
void wusbhc_giveback_urb ( struct wusbhc * wusbhc , struct urb * urb , int status ) ; 
/*--wusbhc_giveback_urb--*/
void wusbhc_reset_all ( struct wusbhc * wusbhc ) ; 
/*--wusbhc_reset_all--*/
int usb_gadget_register_driver ( struct usb_gadget_driver * driver ) ; 
/*--usb_gadget_register_driver--*/
int usb_gadget_unregister_driver ( struct usb_gadget_driver * driver ) ; 
/*--usb_gadget_unregister_driver--*/
int net2280_set_fifo_mode ( struct usb_gadget * gadget , int mode ) ; 
/*--net2280_set_fifo_mode--*/
int usb_add_function ( struct usb_configuration * config , struct usb_function * function ) ; 
/*--usb_add_function--*/
int usb_function_deactivate ( struct usb_function * function ) ; 
/*--usb_function_deactivate--*/
int usb_function_activate ( struct usb_function * function ) ; 
/*--usb_function_activate--*/
int usb_interface_id ( struct usb_configuration * config , struct usb_function * function ) ; 
/*--usb_interface_id--*/
int usb_add_config ( struct usb_composite_dev * cdev , struct usb_configuration * config ) ; 
/*--usb_add_config--*/
int usb_string_id ( struct usb_composite_dev * cdev ) ; 
/*--usb_string_id--*/
int usb_composite_register ( struct usb_composite_driver * driver ) ; 
/*--usb_composite_register--*/
void usb_composite_unregister ( struct usb_composite_driver * driver ) ; 
/*--usb_composite_unregister--*/
int usb_gadget_get_string ( struct usb_gadget_strings * table , int id , u8 * buf ) ; 
/*--usb_gadget_get_string--*/
int usb_descriptor_fillbuf ( void * buf , unsigned buflen , const struct usb_descriptor_header * * src ) ; 
/*--usb_descriptor_fillbuf--*/
int usb_gadget_config_buf ( const struct usb_config_descriptor * config , void * buf , unsigned length , const struct usb_descriptor_header * * desc ) ; 
/*--usb_gadget_config_buf--*/
struct usb_descriptor_header * * usb_copy_descriptors ( struct usb_descriptor_header * * src ) ; 
/*--usb_copy_descriptors--*/
struct usb_endpoint_descriptor * usb_find_endpoint ( struct usb_descriptor_header * * src , struct usb_descriptor_header * * copy , struct usb_endpoint_descriptor * match ) ; 
/*--usb_find_endpoint--*/
struct usb_ep * usb_ep_autoconfig ( struct usb_gadget * gadget , struct usb_endpoint_descriptor * desc ) ; 
/*--usb_ep_autoconfig--*/
void usb_ep_autoconfig_reset ( struct usb_gadget * gadget ) ; 
/*--usb_ep_autoconfig_reset--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) gaudio_setup ( struct gaudio * card ) ; 
/*--gaudio_setup--*/
void gaudio_cleanup ( void ) ; 
/*--gaudio_cleanup--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) control_selector_init ( struct f_audio * audio ) ; 
/*--control_selector_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) audio_bind_config ( struct usb_configuration * c ) ; 
/*--audio_bind_config--*/
struct usb_request * gs_alloc_req ( struct usb_ep * ep , unsigned len , gfp_t kmalloc_flags ) ; 
/*--gs_alloc_req--*/
void gs_free_req ( struct usb_ep * ep , struct usb_request * req ) ; 
/*--gs_free_req--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) gserial_setup ( struct usb_gadget * g , unsigned count ) ; 
/*--gserial_setup--*/
void gserial_cleanup ( void ) ; 
/*--gserial_cleanup--*/
int gserial_connect ( struct gserial * gser , u8 port_num ) ; 
/*--gserial_connect--*/
void gserial_disconnect ( struct gserial * gser ) ; 
/*--gserial_disconnect--*/
int acm_bind_config ( struct usb_configuration * c , u8 port_num ) ; 
/*--acm_bind_config--*/
int ecm_bind_config ( struct usb_configuration * c , u8 ethaddr [ 6 ] ) ; 
/*--ecm_bind_config--*/
int gether_setup ( struct usb_gadget * g , u8 ethaddr [ 6 ] ) ; 
/*--gether_setup--*/
void gether_cleanup ( void ) ; 
/*--gether_cleanup--*/
struct net_device * gether_connect ( struct gether * link ) ; 
/*--gether_connect--*/
void gether_disconnect ( struct gether * link ) ; 
/*--gether_disconnect--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) geth_bind_config ( struct usb_configuration * c , u8 ethaddr [ 6 ] ) ; 
/*--geth_bind_config--*/
int rndis_bind_config ( struct usb_configuration * c , u8 ethaddr [ 6 ] ) ; 
/*--rndis_bind_config--*/
int rndis_signal_connect ( int configNr ) ; 
/*--rndis_signal_connect--*/
int rndis_signal_disconnect ( int configNr ) ; 
/*--rndis_signal_disconnect--*/
void rndis_uninit ( int configNr ) ; 
/*--rndis_uninit--*/
void rndis_set_host_mac ( int configNr , const u8 * addr ) ; 
/*--rndis_set_host_mac--*/
int rndis_msg_parser ( u8 configNr , u8 * buf ) ; 
/*--rndis_msg_parser--*/
int rndis_register ( void ( * resp_avail ) ( void * v ) , void * v ) ; 
/*--rndis_register--*/
void rndis_deregister ( int configNr ) ; 
/*--rndis_deregister--*/
int rndis_set_param_dev ( u8 configNr , struct net_device * dev , u16 * cdc_filter ) ; 
/*--rndis_set_param_dev--*/
int rndis_set_param_vendor ( u8 configNr , u32 vendorID , const char * vendorDescr ) ; 
/*--rndis_set_param_vendor--*/
int rndis_set_param_medium ( u8 configNr , u32 medium , u32 speed ) ; 
/*--rndis_set_param_medium--*/
void rndis_add_hdr ( struct sk_buff * skb ) ; 
/*--rndis_add_hdr--*/
void rndis_free_response ( int configNr , u8 * buf ) ; 
/*--rndis_free_response--*/
u8 * rndis_get_next_response ( int configNr , u32 * length ) ; 
/*--rndis_get_next_response--*/
int rndis_rm_hdr ( struct gether * port , struct sk_buff * skb , struct sk_buff_head * list ) ; 
/*--rndis_rm_hdr--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rndis_init ( void ) ; 
/*--rndis_init--*/
void rndis_exit ( void ) ; 
/*--rndis_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) eem_bind_config ( struct usb_configuration * c ) ; 
/*--eem_bind_config--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) obex_bind_config ( struct usb_configuration * c , u8 port_num ) ; 
/*--obex_bind_config--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) gser_bind_config ( struct usb_configuration * c , u8 port_num ) ; 
/*--gser_bind_config--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) sourcesink_add ( struct usb_composite_dev * cdev , bool autoresume ) ; 
/*--sourcesink_add--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) loopback_add ( struct usb_composite_dev * cdev , bool autoresume ) ; 
/*--loopback_add--*/
struct usb_request * alloc_ep_req ( struct usb_ep * ep ) ; 
/*--alloc_ep_req--*/
void free_ep_req ( struct usb_ep * ep , struct usb_request * req ) ; 
/*--free_ep_req--*/
void disable_endpoints ( struct usb_composite_dev * cdev , struct usb_ep * in , struct usb_ep * out ) ; 
/*--disable_endpoints--*/
void usb_nop_xceiv_register ( void ) ; 
/*--usb_nop_xceiv_register--*/
void usb_nop_xceiv_unregister ( void ) ; 
/*--usb_nop_xceiv_unregister--*/
int umc_controller_reset ( struct umc_dev * umc ) ; 
/*--umc_controller_reset--*/
int umc_match_pci_id ( struct umc_driver * umc_drv , struct umc_dev * umc ) ; 
/*--umc_match_pci_id--*/
struct umc_dev * umc_device_create ( struct device * parent , int n ) ; 
/*--umc_device_create--*/
int umc_device_register ( struct umc_dev * umc ) ; 
/*--umc_device_register--*/
void umc_device_unregister ( struct umc_dev * umc ) ; 
/*--umc_device_unregister--*/
int __umc_driver_register ( struct umc_driver * umc_drv , struct module * module , const char * mod_name ) ; 
/*--__umc_driver_register--*/
void umc_driver_unregister ( struct umc_driver * umc_drv ) ; 
/*--umc_driver_unregister--*/
int uwb_rc_mac_addr_get ( struct uwb_rc * rc , struct uwb_mac_addr * addr ) ; 
/*--uwb_rc_mac_addr_get--*/
int uwb_rc_dev_addr_get ( struct uwb_rc * rc , struct uwb_dev_addr * addr ) ; 
/*--uwb_rc_dev_addr_get--*/
int uwb_rc_mac_addr_set ( struct uwb_rc * rc , const struct uwb_mac_addr * addr ) ; 
/*--uwb_rc_mac_addr_set--*/
int uwb_rc_dev_addr_set ( struct uwb_rc * rc , const struct uwb_dev_addr * addr ) ; 
/*--uwb_rc_dev_addr_set--*/
int __uwb_mac_addr_assigned_check ( struct device * dev , void * _addr ) ; 
/*--__uwb_mac_addr_assigned_check--*/
int __uwb_dev_addr_assigned_check ( struct device * dev , void * _addr ) ; 
/*--__uwb_dev_addr_assigned_check--*/
int uwb_rc_dev_addr_assign ( struct uwb_rc * rc ) ; 
/*--uwb_rc_dev_addr_assign--*/
int uwbd_evt_handle_rc_dev_addr_conflict ( struct uwb_event * evt ) ; 
/*--uwbd_evt_handle_rc_dev_addr_conflict--*/
size_t __uwb_addr_print ( char * buf , size_t buf_size , const unsigned char * addr , int type ) ; 
/*--__uwb_addr_print--*/
int uwb_rsv_find_best_allocation ( struct uwb_rsv * rsv , struct uwb_mas_bm * available , struct uwb_mas_bm * result ) ; 
/*--uwb_rsv_find_best_allocation--*/
int uwb_rc_beacon ( struct uwb_rc * rc , int channel , unsigned bpst_offset ) ; 
/*--uwb_rc_beacon--*/
void uwb_bce_kfree ( struct kref * _bce ) ; 
/*--uwb_bce_kfree--*/
struct uwb_dev * uwb_dev_get_by_devaddr ( struct uwb_rc * rc , const struct uwb_dev_addr * devaddr ) ; 
/*--uwb_dev_get_by_devaddr--*/
struct uwb_dev * uwb_dev_get_by_macaddr ( struct uwb_rc * rc , const struct uwb_mac_addr * macaddr ) ; 
/*--uwb_dev_get_by_macaddr--*/
void uwb_beca_purge ( struct uwb_rc * rc ) ; 
/*--uwb_beca_purge--*/
void uwb_beca_release ( struct uwb_rc * rc ) ; 
/*--uwb_beca_release--*/
ssize_t uwb_bce_print_IEs ( struct uwb_dev * uwb_dev , struct uwb_beca_e * bce , char * buf , size_t size ) ; 
/*--uwb_bce_print_IEs--*/
int uwbd_evt_handle_rc_beacon ( struct uwb_event * evt ) ; 
/*--uwbd_evt_handle_rc_beacon--*/
int uwbd_evt_handle_rc_beacon_size ( struct uwb_event * evt ) ; 
/*--uwbd_evt_handle_rc_beacon_size--*/
int uwbd_evt_handle_rc_bp_slot_change ( struct uwb_event * evt ) ; 
/*--uwbd_evt_handle_rc_bp_slot_change--*/
int uwbd_evt_handle_rc_bpoie_change ( struct uwb_event * evt ) ; 
/*--uwbd_evt_handle_rc_bpoie_change--*/
int uwb_rc_send_all_drp_ie ( struct uwb_rc * rc ) ; 
/*--uwb_rc_send_all_drp_ie--*/
int uwbd_evt_handle_rc_drp ( struct uwb_event * evt ) ; 
/*--uwbd_evt_handle_rc_drp--*/
void uwb_drp_avail_init ( struct uwb_rc * rc ) ; 
/*--uwb_drp_avail_init--*/
void uwb_drp_available ( struct uwb_rc * rc , struct uwb_mas_bm * avail ) ; 
/*--uwb_drp_available--*/
int uwb_drp_avail_reserve_pending ( struct uwb_rc * rc , struct uwb_mas_bm * mas ) ; 
/*--uwb_drp_avail_reserve_pending--*/
void uwb_drp_avail_reserve ( struct uwb_rc * rc , struct uwb_mas_bm * mas ) ; 
/*--uwb_drp_avail_reserve--*/
void uwb_drp_avail_release ( struct uwb_rc * rc , struct uwb_mas_bm * mas ) ; 
/*--uwb_drp_avail_release--*/
void uwb_drp_avail_ie_update ( struct uwb_rc * rc ) ; 
/*--uwb_drp_avail_ie_update--*/
int uwbd_evt_handle_rc_drp_avail ( struct uwb_event * evt ) ; 
/*--uwbd_evt_handle_rc_drp_avail--*/
int uwb_rsv_reason_code ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_reason_code--*/
int uwb_rsv_companion_reason_code ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_companion_reason_code--*/
int uwb_rsv_status ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_status--*/
int uwb_rsv_companion_status ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_companion_status--*/
int uwb_drp_ie_update ( struct uwb_rsv * rsv ) ; 
/*--uwb_drp_ie_update--*/
void uwb_drp_ie_to_bm ( struct uwb_mas_bm * bm , const struct uwb_ie_drp * drp_ie ) ; 
/*--uwb_drp_ie_to_bm--*/
int uwb_est_create ( void ) ; 
/*--uwb_est_create--*/
void uwb_est_destroy ( void ) ; 
/*--uwb_est_destroy--*/
int uwb_est_register ( u8 type , u8 event_high , u16 vendor , u16 product , const struct uwb_est_entry * entry , size_t entries ) ; 
/*--uwb_est_register--*/
int uwb_est_unregister ( u8 type , u8 event_high , u16 vendor , u16 product , const struct uwb_est_entry * entry , size_t entries ) ; 
/*--uwb_est_unregister--*/
ssize_t uwb_est_find_size ( struct uwb_rc * rc , const struct uwb_rceb * rceb , size_t rceb_size ) ; 
/*--uwb_est_find_size--*/
struct uwb_ie_hdr * uwb_ie_next ( void * * ptr , size_t * len ) ; 
/*--uwb_ie_next--*/
int uwb_ie_dump_hex ( const struct uwb_ie_hdr * ies , size_t len , char * buf , size_t size ) ; 
/*--uwb_ie_dump_hex--*/
int uwb_rc_set_ie ( struct uwb_rc * rc , struct uwb_rc_cmd_set_ie * cmd ) ; 
/*--uwb_rc_set_ie--*/
void uwb_rc_ie_init ( struct uwb_rc * uwb_rc ) ; 
/*--uwb_rc_ie_init--*/
int uwb_rc_ie_setup ( struct uwb_rc * uwb_rc ) ; 
/*--uwb_rc_ie_setup--*/
void uwb_rc_ie_release ( struct uwb_rc * uwb_rc ) ; 
/*--uwb_rc_ie_release--*/
int uwb_rc_ie_add ( struct uwb_rc * uwb_rc , const struct uwb_ie_hdr * ies , size_t size ) ; 
/*--uwb_rc_ie_add--*/
int uwb_rc_ie_rm ( struct uwb_rc * uwb_rc , enum uwb_ie element_id ) ; 
/*--uwb_rc_ie_rm--*/
int uwbd_evt_handle_rc_ie_rcv ( struct uwb_event * evt ) ; 
/*--uwbd_evt_handle_rc_ie_rcv--*/
int uwb_notifs_register ( struct uwb_rc * rc , struct uwb_notifs_handler * new ) ; 
/*--uwb_notifs_register--*/
int uwb_notifs_deregister ( struct uwb_rc * rc , struct uwb_notifs_handler * entry ) ; 
/*--uwb_notifs_deregister--*/
void uwb_notify ( struct uwb_rc * rc , struct uwb_dev * uwb_dev , enum uwb_notifs event ) ; 
/*--uwb_notify--*/
void uwb_dev_init ( struct uwb_dev * uwb_dev ) ; 
/*--uwb_dev_init--*/
int uwb_dev_add ( struct uwb_dev * uwb_dev , struct device * parent_dev , struct uwb_rc * parent_rc ) ; 
/*--uwb_dev_add--*/
void uwb_dev_rm ( struct uwb_dev * uwb_dev ) ; 
/*--uwb_dev_rm--*/
struct uwb_dev * uwb_dev_try_get ( struct uwb_rc * rc , struct uwb_dev * uwb_dev ) ; 
/*--uwb_dev_try_get--*/
int __uwb_dev_offair ( struct uwb_dev * uwb_dev , struct uwb_rc * rc ) ; 
/*--__uwb_dev_offair--*/
void uwbd_dev_offair ( struct uwb_beca_e * bce ) ; 
/*--uwbd_dev_offair--*/
void uwbd_dev_onair ( struct uwb_rc * rc , struct uwb_beca_e * bce ) ; 
/*--uwbd_dev_onair--*/
int uwb_dev_for_each ( struct uwb_rc * rc , uwb_dev_for_each_f function , void * priv ) ; 
/*--uwb_dev_for_each--*/
void uwb_rc_init ( struct uwb_rc * rc ) ; 
/*--uwb_rc_init--*/
struct uwb_rc * uwb_rc_alloc ( void ) ; 
/*--uwb_rc_alloc--*/
int uwb_rc_add ( struct uwb_rc * rc , struct device * parent_dev , void * priv ) ; 
/*--uwb_rc_add--*/
void uwb_rc_rm ( struct uwb_rc * rc ) ; 
/*--uwb_rc_rm--*/
struct uwb_rc * __uwb_rc_try_get ( struct uwb_rc * target_rc ) ; 
/*--__uwb_rc_try_get--*/
struct uwb_rc * uwb_rc_get_by_grandpa ( const struct device * grandpa_dev ) ; 
/*--uwb_rc_get_by_grandpa--*/
struct uwb_rc * uwb_rc_get_by_dev ( const struct uwb_dev_addr * addr ) ; 
/*--uwb_rc_get_by_dev--*/
void uwb_rc_put ( struct uwb_rc * rc ) ; 
/*--uwb_rc_put--*/
void uwb_rc_neh_put ( struct uwb_rc_neh * neh ) ; 
/*--uwb_rc_neh_put--*/
struct uwb_rc_neh * uwb_rc_neh_add ( struct uwb_rc * rc , struct uwb_rccb * cmd , u8 expected_type , u16 expected_event , uwb_rc_cmd_cb_f cb , void * arg ) ; 
/*--uwb_rc_neh_add--*/
void uwb_rc_neh_rm ( struct uwb_rc * rc , struct uwb_rc_neh * neh ) ; 
/*--uwb_rc_neh_rm--*/
void uwb_rc_neh_arm ( struct uwb_rc * rc , struct uwb_rc_neh * neh ) ; 
/*--uwb_rc_neh_arm--*/
void uwb_rc_neh_grok ( struct uwb_rc * rc , void * buf , size_t buf_size ) ; 
/*--uwb_rc_neh_grok--*/
void uwb_rc_neh_error ( struct uwb_rc * rc , int error ) ; 
/*--uwb_rc_neh_error--*/
void uwb_rc_neh_create ( struct uwb_rc * rc ) ; 
/*--uwb_rc_neh_create--*/
void uwb_rc_neh_destroy ( struct uwb_rc * rc ) ; 
/*--uwb_rc_neh_destroy--*/
void uwb_pal_init ( struct uwb_pal * pal ) ; 
/*--uwb_pal_init--*/
int uwb_pal_register ( struct uwb_pal * pal ) ; 
/*--uwb_pal_register--*/
void uwb_pal_unregister ( struct uwb_pal * pal ) ; 
/*--uwb_pal_unregister--*/
void uwb_rc_pal_init ( struct uwb_rc * rc ) ; 
/*--uwb_rc_pal_init--*/
int uwb_radio_start ( struct uwb_pal * pal ) ; 
/*--uwb_radio_start--*/
void uwb_radio_stop ( struct uwb_pal * pal ) ; 
/*--uwb_radio_stop--*/
int uwb_radio_force_channel ( struct uwb_rc * rc , int channel ) ; 
/*--uwb_radio_force_channel--*/
int uwb_radio_setup ( struct uwb_rc * rc ) ; 
/*--uwb_radio_setup--*/
void uwb_radio_reset_state ( struct uwb_rc * rc ) ; 
/*--uwb_radio_reset_state--*/
void uwb_radio_shutdown ( struct uwb_rc * rc ) ; 
/*--uwb_radio_shutdown--*/
const char * uwb_rc_strerror ( unsigned code ) ; 
/*--uwb_rc_strerror--*/
int uwb_rc_cmd_async ( struct uwb_rc * rc , const char * cmd_name , struct uwb_rccb * cmd , size_t cmd_size , u8 expected_type , u16 expected_event , uwb_rc_cmd_cb_f cb , void * arg ) ; 
/*--uwb_rc_cmd_async--*/
ssize_t uwb_rc_cmd ( struct uwb_rc * rc , const char * cmd_name , struct uwb_rccb * cmd , size_t cmd_size , struct uwb_rceb * reply , size_t reply_size ) ; 
/*--uwb_rc_cmd--*/
ssize_t uwb_rc_vcmd ( struct uwb_rc * rc , const char * cmd_name , struct uwb_rccb * cmd , size_t cmd_size , u8 expected_type , u16 expected_event , struct uwb_rceb * * preply ) ; 
/*--uwb_rc_vcmd--*/
int uwb_rc_reset ( struct uwb_rc * rc ) ; 
/*--uwb_rc_reset--*/
int uwbd_msg_handle_reset ( struct uwb_event * evt ) ; 
/*--uwbd_msg_handle_reset--*/
void uwb_rc_reset_all ( struct uwb_rc * rc ) ; 
/*--uwb_rc_reset_all--*/
void uwb_rc_pre_reset ( struct uwb_rc * rc ) ; 
/*--uwb_rc_pre_reset--*/
int uwb_rc_post_reset ( struct uwb_rc * rc ) ; 
/*--uwb_rc_post_reset--*/
bool uwb_rsv_has_two_drp_ies ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_has_two_drp_ies--*/
const char * uwb_rsv_state_str ( enum uwb_rsv_state state ) ; 
/*--uwb_rsv_state_str--*/
const char * uwb_rsv_type_str ( enum uwb_drp_type type ) ; 
/*--uwb_rsv_type_str--*/
void uwb_rsv_dump ( char * text , struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_dump--*/
void uwb_rsv_get ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_get--*/
void uwb_rsv_put ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_put--*/
void uwb_rsv_backoff_win_timer ( unsigned long arg ) ; 
/*--uwb_rsv_backoff_win_timer--*/
void uwb_rsv_backoff_win_increment ( struct uwb_rc * rc ) ; 
/*--uwb_rsv_backoff_win_increment--*/
void uwb_rsv_set_state ( struct uwb_rsv * rsv , enum uwb_rsv_state new_state ) ; 
/*--uwb_rsv_set_state--*/
struct uwb_rsv * uwb_rsv_create ( struct uwb_rc * rc , uwb_rsv_cb_f cb , void * pal_priv ) ; 
/*--uwb_rsv_create--*/
void uwb_rsv_remove ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_remove--*/
void uwb_rsv_destroy ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_destroy--*/
int uwb_rsv_establish ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_establish--*/
int uwb_rsv_modify ( struct uwb_rsv * rsv , int max_mas , int min_mas , int max_interval ) ; 
/*--uwb_rsv_modify--*/
int uwb_rsv_try_move ( struct uwb_rsv * rsv , struct uwb_mas_bm * available ) ; 
/*--uwb_rsv_try_move--*/
void uwb_rsv_handle_drp_avail_change ( struct uwb_rc * rc ) ; 
/*--uwb_rsv_handle_drp_avail_change--*/
void uwb_rsv_terminate ( struct uwb_rsv * rsv ) ; 
/*--uwb_rsv_terminate--*/
void uwb_rsv_accept ( struct uwb_rsv * rsv , uwb_rsv_cb_f cb , void * pal_priv ) ; 
/*--uwb_rsv_accept--*/
void uwb_rsv_get_usable_mas ( struct uwb_rsv * rsv , struct uwb_mas_bm * mas ) ; 
/*--uwb_rsv_get_usable_mas--*/
struct uwb_rsv * uwb_rsv_find ( struct uwb_rc * rc , struct uwb_dev * src , struct uwb_ie_drp * drp_ie ) ; 
/*--uwb_rsv_find--*/
void uwb_rsv_queue_update ( struct uwb_rc * rc ) ; 
/*--uwb_rsv_queue_update--*/
void uwb_rsv_sched_update ( struct uwb_rc * rc ) ; 
/*--uwb_rsv_sched_update--*/
void uwb_rsv_remove_all ( struct uwb_rc * rc ) ; 
/*--uwb_rsv_remove_all--*/
void uwb_rsv_init ( struct uwb_rc * rc ) ; 
/*--uwb_rsv_init--*/
int uwb_rsv_setup ( struct uwb_rc * rc ) ; 
/*--uwb_rsv_setup--*/
void uwb_rsv_cleanup ( struct uwb_rc * rc ) ; 
/*--uwb_rsv_cleanup--*/
int uwb_rc_scan ( struct uwb_rc * rc , unsigned channel , enum uwb_scan_type type , unsigned bpst_offset ) ; 
/*--uwb_rc_scan--*/
void uwb_dbg_add_rc ( struct uwb_rc * rc ) ; 
/*--uwb_dbg_add_rc--*/
void uwb_dbg_del_rc ( struct uwb_rc * rc ) ; 
/*--uwb_dbg_del_rc--*/
void uwb_dbg_init ( void ) ; 
/*--uwb_dbg_init--*/
void uwb_dbg_exit ( void ) ; 
/*--uwb_dbg_exit--*/
struct dentry * uwb_dbg_create_pal_dir ( struct uwb_pal * pal ) ; 
/*--uwb_dbg_create_pal_dir--*/
void uwbd_start ( struct uwb_rc * rc ) ; 
/*--uwbd_start--*/
void uwbd_stop ( struct uwb_rc * rc ) ; 
/*--uwbd_stop--*/
void uwbd_event_queue ( struct uwb_event * evt ) ; 
/*--uwbd_event_queue--*/
void uwbd_flush ( struct uwb_rc * rc ) ; 
/*--uwbd_flush--*/
int whci_wait_for ( struct device * dev , u32 * reg , u32 mask , u32 result , unsigned long max_ms , const char * tag ) ; 
/*--whci_wait_for--*/
int i1480_rceb_check ( const struct i1480 * i1480 , const struct uwb_rceb * rceb , const char * cmd , u8 context , u8 expected_type , unsigned expected_event ) ; 
/*--i1480_rceb_check--*/
ssize_t i1480_cmd ( struct i1480 * i1480 , const char * cmd_name , size_t cmd_size , size_t reply_size ) ; 
/*--i1480_cmd--*/
int i1480_fw_upload ( struct i1480 * i1480 ) ; 
/*--i1480_fw_upload--*/
int i1480_pre_fw_upload ( struct i1480 * i1480 ) ; 
/*--i1480_pre_fw_upload--*/
int i1480_mac_fw_upload ( struct i1480 * i1480 ) ; 
/*--i1480_mac_fw_upload--*/
int i1480_phy_fw_upload ( struct i1480 * i1480 ) ; 
/*--i1480_phy_fw_upload--*/
void i1480u_bw_alloc_cb ( struct uwb_rsv * rsv ) ; 
/*--i1480u_bw_alloc_cb--*/
int i1480u_open ( struct net_device * net_dev ) ; 
/*--i1480u_open--*/
int i1480u_stop ( struct net_device * net_dev ) ; 
/*--i1480u_stop--*/
int i1480u_set_config ( struct net_device * net_dev , struct ifmap * map ) ; 
/*--i1480u_set_config--*/
int i1480u_change_mtu ( struct net_device * net_dev , int mtu ) ; 
/*--i1480u_change_mtu--*/
void i1480u_stop_queue ( struct wlp * wlp ) ; 
/*--i1480u_stop_queue--*/
void i1480u_start_queue ( struct wlp * wlp ) ; 
/*--i1480u_start_queue--*/
int i1480u_rx_setup ( struct i1480u * i1480u ) ; 
/*--i1480u_rx_setup--*/
void i1480u_rx_release ( struct i1480u * i1480u ) ; 
/*--i1480u_rx_release--*/
void i1480u_rx_cb ( struct urb * urb ) ; 
/*--i1480u_rx_cb--*/
ssize_t uwb_phy_rate_show ( const struct wlp_options * options , char * buf ) ; 
/*--uwb_phy_rate_show--*/
ssize_t uwb_phy_rate_store ( struct wlp_options * options , const char * buf , size_t size ) ; 
/*--uwb_phy_rate_store--*/
ssize_t uwb_rts_cts_show ( const struct wlp_options * options , char * buf ) ; 
/*--uwb_rts_cts_show--*/
ssize_t uwb_rts_cts_store ( struct wlp_options * options , const char * buf , size_t size ) ; 
/*--uwb_rts_cts_store--*/
ssize_t uwb_ack_policy_show ( const struct wlp_options * options , char * buf ) ; 
/*--uwb_ack_policy_show--*/
ssize_t uwb_ack_policy_store ( struct wlp_options * options , const char * buf , size_t size ) ; 
/*--uwb_ack_policy_store--*/
ssize_t uwb_pca_base_priority_show ( const struct wlp_options * options , char * buf ) ; 
/*--uwb_pca_base_priority_show--*/
ssize_t uwb_pca_base_priority_store ( struct wlp_options * options , const char * buf , size_t size ) ; 
/*--uwb_pca_base_priority_store--*/
int i1480u_sysfs_setup ( struct i1480u * i1480u ) ; 
/*--i1480u_sysfs_setup--*/
void i1480u_sysfs_release ( struct i1480u * i1480u ) ; 
/*--i1480u_sysfs_release--*/
int i1480u_xmit_frame ( struct wlp * wlp , struct sk_buff * skb , struct uwb_dev_addr * dst ) ; 
/*--i1480u_xmit_frame--*/
netdev_tx_t i1480u_hard_start_xmit ( struct sk_buff * skb , struct net_device * net_dev ) ; 
/*--i1480u_hard_start_xmit--*/
void i1480u_tx_timeout ( struct net_device * net_dev ) ; 
/*--i1480u_tx_timeout--*/
void i1480u_tx_release ( struct i1480u * i1480u ) ; 
/*--i1480u_tx_release--*/
void wlp_eda_init ( struct wlp_eda * eda ) ; 
/*--wlp_eda_init--*/
void wlp_eda_release ( struct wlp_eda * eda ) ; 
/*--wlp_eda_release--*/
int wlp_eda_create_node ( struct wlp_eda * eda , const unsigned char eth_addr [ 6 ] , const struct uwb_dev_addr * dev_addr ) ; 
/*--wlp_eda_create_node--*/
void wlp_eda_rm_node ( struct wlp_eda * eda , const struct uwb_dev_addr * dev_addr ) ; 
/*--wlp_eda_rm_node--*/
int wlp_eda_update_node ( struct wlp_eda * eda , const struct uwb_dev_addr * dev_addr , struct wlp_wss * wss , const unsigned char virt_addr [ 6 ] , const u8 tag , const enum wlp_wss_connect state ) ; 
/*--wlp_eda_update_node--*/
int wlp_eda_update_node_state ( struct wlp_eda * eda , const struct uwb_dev_addr * dev_addr , const enum wlp_wss_connect state ) ; 
/*--wlp_eda_update_node_state--*/
int wlp_copy_eda_node ( struct wlp_eda * eda , struct uwb_dev_addr * dev_addr , struct wlp_eda_node * eda_entry ) ; 
/*--wlp_copy_eda_node--*/
int wlp_eda_for_each ( struct wlp_eda * eda , wlp_eda_for_each_f function , void * priv ) ; 
/*--wlp_eda_for_each--*/
int wlp_eda_for_virtual ( struct wlp_eda * eda , const unsigned char virt_addr [ 6 ] , struct uwb_dev_addr * dev_addr , wlp_eda_for_each_f function , void * priv ) ; 
/*--wlp_eda_for_virtual--*/
ssize_t wlp_eda_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_eda_show--*/
ssize_t wlp_eda_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_eda_store--*/
ssize_t wlp_get_version ( struct wlp * wlp , struct wlp_attr_version * attr , u8 * value , ssize_t buflen ) ; 
/*--wlp_get_version--*/
ssize_t wlp_get_wssid ( struct wlp * wlp , struct wlp_attr_wssid * attr , struct wlp_uuid * value , ssize_t buflen ) ; 
/*--wlp_get_wssid--*/
int wlp_parse_f0 ( struct wlp * wlp , struct sk_buff * skb ) ; 
/*--wlp_parse_f0--*/
void wlp_handle_d1_frame ( struct work_struct * ws ) ; 
/*--wlp_handle_d1_frame--*/
int wlp_parse_d2_frame_to_cache ( struct wlp * wlp , struct sk_buff * skb , struct wlp_neighbor_e * neighbor ) ; 
/*--wlp_parse_d2_frame_to_cache--*/
int wlp_parse_d2_frame_to_enroll ( struct wlp_wss * wss , struct sk_buff * skb , struct wlp_neighbor_e * neighbor , struct wlp_uuid * wssid ) ; 
/*--wlp_parse_d2_frame_to_enroll--*/
int wlp_parse_c3c4_frame ( struct wlp * wlp , struct sk_buff * skb , struct wlp_uuid * wssid , u8 * tag , struct uwb_mac_addr * virt_addr ) ; 
/*--wlp_parse_c3c4_frame--*/
int wlp_send_assoc_frame ( struct wlp * wlp , struct wlp_wss * wss , struct uwb_dev_addr * dev_addr , enum wlp_assoc_type type ) ; 
/*--wlp_send_assoc_frame--*/
void wlp_handle_c1_frame ( struct work_struct * ws ) ; 
/*--wlp_handle_c1_frame--*/
void wlp_handle_c3_frame ( struct work_struct * ws ) ; 
/*--wlp_handle_c3_frame--*/
ssize_t wlp_neighborhood_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_neighborhood_show--*/
ssize_t wlp_wss_activate_show ( struct wlp_wss * wss , char * buf ) ; 
/*--wlp_wss_activate_show--*/
ssize_t wlp_wss_activate_store ( struct wlp_wss * wss , const char * buf , size_t size ) ; 
/*--wlp_wss_activate_store--*/
ssize_t wlp_uuid_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_uuid_show--*/
ssize_t wlp_uuid_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_uuid_store--*/
ssize_t wlp_dev_name_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_name_show--*/
ssize_t wlp_dev_model_name_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_model_name_show--*/
ssize_t wlp_dev_model_nr_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_model_nr_show--*/
ssize_t wlp_dev_manufacturer_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_manufacturer_show--*/
ssize_t wlp_dev_serial_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_serial_show--*/
ssize_t wlp_dev_name_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_name_store--*/
ssize_t wlp_dev_manufacturer_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_manufacturer_store--*/
ssize_t wlp_dev_model_name_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_model_name_store--*/
ssize_t wlp_dev_model_nr_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_model_nr_store--*/
ssize_t wlp_dev_serial_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_serial_store--*/
ssize_t wlp_dev_prim_category_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_prim_category_show--*/
ssize_t wlp_dev_prim_category_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_prim_category_store--*/
ssize_t wlp_dev_prim_OUI_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_prim_OUI_show--*/
ssize_t wlp_dev_prim_OUI_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_prim_OUI_store--*/
ssize_t wlp_dev_prim_OUI_sub_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_prim_OUI_sub_show--*/
ssize_t wlp_dev_prim_OUI_sub_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_prim_OUI_sub_store--*/
ssize_t wlp_dev_prim_subcat_show ( struct wlp * wlp , char * buf ) ; 
/*--wlp_dev_prim_subcat_show--*/
ssize_t wlp_dev_prim_subcat_store ( struct wlp * wlp , const char * buf , size_t size ) ; 
/*--wlp_dev_prim_subcat_store--*/
int wlp_receive_frame ( struct device * dev , struct wlp * wlp , struct sk_buff * skb , struct uwb_dev_addr * src ) ; 
/*--wlp_receive_frame--*/
int wlp_prepare_tx_frame ( struct device * dev , struct wlp * wlp , struct sk_buff * skb , struct uwb_dev_addr * dst ) ; 
/*--wlp_prepare_tx_frame--*/
int __wlp_alloc_device_info ( struct wlp * wlp ) ; 
/*--__wlp_alloc_device_info--*/
int __wlp_setup_device_info ( struct wlp * wlp ) ; 
/*--__wlp_setup_device_info--*/
void wlp_remove_neighbor_tmp_info ( struct wlp_neighbor_e * neighbor ) ; 
/*--wlp_remove_neighbor_tmp_info--*/
int wlp_enroll_neighbor ( struct wlp * wlp , struct wlp_neighbor_e * neighbor , struct wlp_wss * wss , struct wlp_uuid * wssid ) ; 
/*--wlp_enroll_neighbor--*/
ssize_t wlp_discover ( struct wlp * wlp ) ; 
/*--wlp_discover--*/
int wlp_setup ( struct wlp * wlp , struct uwb_rc * rc , struct net_device * ndev ) ; 
/*--wlp_setup--*/
void wlp_remove ( struct wlp * wlp ) ; 
/*--wlp_remove--*/
void wlp_reset_all ( struct wlp * wlp ) ; 
/*--wlp_reset_all--*/
size_t wlp_wss_key_print ( char * buf , size_t bufsize , u8 * key ) ; 
/*--wlp_wss_key_print--*/
void wlp_wss_reset ( struct wlp_wss * wss ) ; 
/*--wlp_wss_reset--*/
void wlp_wss_release ( struct kobject * kobj ) ; 
/*--wlp_wss_release--*/
int wlp_wss_enroll_activate ( struct wlp_wss * wss , struct wlp_uuid * wssid , struct uwb_dev_addr * devaddr ) ; 
/*--wlp_wss_enroll_activate--*/
int wlp_wss_create_activate ( struct wlp_wss * wss , struct wlp_uuid * wssid , char * name , unsigned sec_status , unsigned accept ) ; 
/*--wlp_wss_create_activate--*/
int wlp_wss_is_active ( struct wlp * wlp , struct wlp_wss * wss , struct uwb_dev_addr * dev_addr ) ; 
/*--wlp_wss_is_active--*/
int wlp_wss_prep_hdr ( struct wlp * wlp , struct wlp_eda_node * eda_entry , void * _skb ) ; 
/*--wlp_wss_prep_hdr--*/
int wlp_wss_connect_prep ( struct wlp * wlp , struct wlp_eda_node * eda_entry , void * _skb ) ; 
/*--wlp_wss_connect_prep--*/
int wlp_wss_send_copy ( struct wlp * wlp , struct wlp_eda_node * eda_entry , void * _skb ) ; 
/*--wlp_wss_send_copy--*/
int wlp_wss_setup ( struct net_device * net_dev , struct wlp_wss * wss ) ; 
/*--wlp_wss_setup--*/
void wlp_wss_remove ( struct wlp_wss * wss ) ; 
/*--wlp_wss_remove--*/
void aty_st_lcd ( int index , u32 val , const struct atyfb_par * par ) ; 
/*--aty_st_lcd--*/
u32 aty_ld_lcd ( int index , const struct atyfb_par * par ) ; 
/*--aty_ld_lcd--*/
void aty_reset_engine ( const struct atyfb_par * par ) ; 
/*--aty_reset_engine--*/
void aty_init_engine ( struct atyfb_par * par , struct fb_info * info ) ; 
/*--aty_init_engine--*/
void atyfb_copyarea ( struct fb_info * info , const struct fb_copyarea * area ) ; 
/*--atyfb_copyarea--*/
void atyfb_fillrect ( struct fb_info * info , const struct fb_fillrect * rect ) ; 
/*--atyfb_fillrect--*/
void atyfb_imageblit ( struct fb_info * info , const struct fb_image * image ) ; 
/*--atyfb_imageblit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) aty_init_cursor ( struct fb_info * info ) ; 
/*--aty_init_cursor--*/
u8 aty_ld_pll_ct ( int offset , const struct atyfb_par * par ) ; 
/*--aty_ld_pll_ct--*/
void aty_set_pll_ct ( const struct fb_info * info , const union aty_pll * pll ) ; 
/*--aty_set_pll_ct--*/
int radeon_screen_blank ( struct radeonfb_info * rinfo , int blank , int mode_switch ) ; 
/*--radeon_screen_blank--*/
void radeon_write_mode ( struct radeonfb_info * rinfo , struct radeon_regs * mode , int regs_only ) ; 
/*--radeon_write_mode--*/
int radeonfb_pci_suspend ( struct pci_dev * pdev , pm_message_t mesg ) ; 
/*--radeonfb_pci_suspend--*/
int radeonfb_pci_resume ( struct pci_dev * pdev ) ; 
/*--radeonfb_pci_resume--*/
void radeonfb_pm_init ( struct radeonfb_info * rinfo , int dynclk , int ignore_devlist , int force_sleep ) ; 
/*--radeonfb_pm_init--*/
void radeonfb_pm_exit ( struct radeonfb_info * rinfo ) ; 
/*--radeonfb_pm_exit--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) radeon_probe_screens ( struct radeonfb_info * rinfo , const char * monitor_layout , int ignore_edid ) ; 
/*--radeon_probe_screens--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) radeon_check_modes ( struct radeonfb_info * rinfo , const char * mode_option ) ; 
/*--radeon_check_modes--*/
int radeon_match_mode ( struct radeonfb_info * rinfo , struct fb_var_screeninfo * dest , const struct fb_var_screeninfo * src ) ; 
/*--radeon_match_mode--*/
void radeonfb_fillrect ( struct fb_info * info , const struct fb_fillrect * region ) ; 
/*--radeonfb_fillrect--*/
void radeonfb_copyarea ( struct fb_info * info , const struct fb_copyarea * area ) ; 
/*--radeonfb_copyarea--*/
void radeonfb_imageblit ( struct fb_info * info , const struct fb_image * image ) ; 
/*--radeonfb_imageblit--*/
int radeonfb_sync ( struct fb_info * info ) ; 
/*--radeonfb_sync--*/
void radeonfb_engine_reset ( struct radeonfb_info * rinfo ) ; 
/*--radeonfb_engine_reset--*/
void radeonfb_engine_init ( struct radeonfb_info * rinfo ) ; 
/*--radeonfb_engine_init--*/
void radeon_create_i2c_busses ( struct radeonfb_info * rinfo ) ; 
/*--radeon_create_i2c_busses--*/
void radeon_delete_i2c_busses ( struct radeonfb_info * rinfo ) ; 
/*--radeon_delete_i2c_busses--*/
int radeon_probe_i2c_connector ( struct radeonfb_info * rinfo , int conn , u8 * * out_edid ) ; 
/*--radeon_probe_i2c_connector--*/
void radeonfb_bl_init ( struct radeonfb_info * rinfo ) ; 
/*--radeonfb_bl_init--*/
void radeonfb_bl_exit ( struct radeonfb_info * rinfo ) ; 
/*--radeonfb_bl_exit--*/
struct lcd_device * lcd_device_register ( const char * name , struct device * parent , void * devdata , struct lcd_ops * ops ) ; 
/*--lcd_device_register--*/
void lcd_device_unregister ( struct lcd_device * ld ) ; 
/*--lcd_device_unregister--*/
int ili9320_write ( struct ili9320 * ili , unsigned int reg , unsigned int value ) ; 
/*--ili9320_write--*/
int ili9320_write_regs ( struct ili9320 * ili , struct ili9320_reg * values , int nr_values ) ; 
/*--ili9320_write_regs--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ili9320_probe_spi ( struct spi_device * spi , struct ili9320_client * client ) ; 
/*--ili9320_probe_spi--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ili9320_remove ( struct ili9320 * ili ) ; 
/*--ili9320_remove--*/
int ili9320_suspend ( struct ili9320 * lcd , pm_message_t state ) ; 
/*--ili9320_suspend--*/
int ili9320_resume ( struct ili9320 * lcd ) ; 
/*--ili9320_resume--*/
void ili9320_shutdown ( struct ili9320 * lcd ) ; 
/*--ili9320_shutdown--*/
void corgibl_limit_intensity ( int limit ) ; 
/*--corgibl_limit_intensity--*/
void fbcon_set_bitops ( struct fbcon_ops * ops ) ; 
/*--fbcon_set_bitops--*/
const struct font_desc * find_font ( const char * name ) ; 
/*--find_font--*/
const struct font_desc * get_default_font ( int xres , int yres , u32 font_w , u32 font_h ) ; 
/*--get_default_font--*/
int soft_cursor ( struct fb_info * info , struct fb_cursor * cursor ) ; 
/*--soft_cursor--*/
void fbcon_set_tileops ( struct vc_data * vc , struct fb_info * info ) ; 
/*--fbcon_set_tileops--*/
struct display_device * display_device_register ( struct display_driver * driver , struct device * parent , void * devdata ) ; 
/*--display_device_register--*/
void display_device_unregister ( struct display_device * ddev ) ; 
/*--display_device_unregister--*/
unsigned gx1_gx_base ( void ) ; 
/*--gx1_gx_base--*/
int gx1_frame_buffer_size ( void ) ; 
/*--gx1_frame_buffer_size--*/
unsigned int gx_frame_buffer_size ( void ) ; 
/*--gx_frame_buffer_size--*/
int gx_line_delta ( int xres , int bpp ) ; 
/*--gx_line_delta--*/
void gx_set_mode ( struct fb_info * info ) ; 
/*--gx_set_mode--*/
void gx_set_hw_palette_reg ( struct fb_info * info , unsigned regno , unsigned red , unsigned green , unsigned blue ) ; 
/*--gx_set_hw_palette_reg--*/
void gx_set_dclk_frequency ( struct fb_info * info ) ; 
/*--gx_set_dclk_frequency--*/
void gx_configure_display ( struct fb_info * info ) ; 
/*--gx_configure_display--*/
int gx_blank_display ( struct fb_info * info , int blank_mode ) ; 
/*--gx_blank_display--*/
int gx_powerdown ( struct fb_info * info ) ; 
/*--gx_powerdown--*/
int gx_powerup ( struct fb_info * info ) ; 
/*--gx_powerup--*/
unsigned int lx_framebuffer_size ( void ) ; 
/*--lx_framebuffer_size--*/
void lx_set_mode ( struct fb_info * info ) ; 
/*--lx_set_mode--*/
void lx_set_palette_reg ( struct fb_info * info , unsigned regno , unsigned red , unsigned green , unsigned blue ) ; 
/*--lx_set_palette_reg--*/
int lx_blank_display ( struct fb_info * info , int blank_mode ) ; 
/*--lx_blank_display--*/
int lx_powerdown ( struct fb_info * info ) ; 
/*--lx_powerdown--*/
int lx_powerup ( struct fb_info * info ) ; 
/*--lx_powerup--*/
int InitialiseRamdac ( volatile STG4000REG * pSTGReg , u32 displayDepth , u32 displayWidth , u32 displayHeight , s32 HSyncPolarity , s32 VSyncPolarity , u32 * pixelClock ) ; 
/*--InitialiseRamdac--*/
void DisableRamdacOutput ( volatile STG4000REG * pSTGReg ) ; 
/*--DisableRamdacOutput--*/
void EnableRamdacOutput ( volatile STG4000REG * pSTGReg ) ; 
/*--EnableRamdacOutput--*/
void DisableVGA ( volatile STG4000REG * pSTGReg ) ; 
/*--DisableVGA--*/
void StopVTG ( volatile STG4000REG * pSTGReg ) ; 
/*--StopVTG--*/
void StartVTG ( volatile STG4000REG * pSTGReg ) ; 
/*--StartVTG--*/
void SetupVTG ( volatile STG4000REG * pSTGReg , const struct kyrofb_info * pTiming ) ; 
/*--SetupVTG--*/
void ResetOverlayRegisters ( volatile STG4000REG * pSTGReg ) ; 
/*--ResetOverlayRegisters--*/
int CreateOverlaySurface ( volatile STG4000REG * pSTGReg , u32 inWidth , u32 inHeight , int bLinear , u32 ulOverlayOffset , u32 * retStride , u32 * retUVStride ) ; 
/*--CreateOverlaySurface--*/
int SetOverlayBlendMode ( volatile STG4000REG * pSTGReg , OVRL_BLEND_MODE mode , u32 ulAlpha , u32 ulColorKey ) ; 
/*--SetOverlayBlendMode--*/
void EnableOverlayPlane ( volatile STG4000REG * pSTGReg ) ; 
/*--EnableOverlayPlane--*/
int SetOverlayViewPort ( volatile STG4000REG * pSTGReg , u32 left , u32 top , u32 right , u32 bottom ) ; 
/*--SetOverlayViewPort--*/
u32 ProgramClock ( u32 refClock , u32 coreClock , u32 * FOut , u32 * ROut , u32 * POut ) ; 
/*--ProgramClock--*/
int SetCoreClockPLL ( volatile STG4000REG * pSTGReg , struct pci_dev * pDev ) ; 
/*--SetCoreClockPLL--*/
int matroxfb_enable_irq ( struct matrox_fb_info * minfo , int reenable ) ; 
/*--matroxfb_enable_irq--*/
int matroxfb_wait_for_sync ( struct matrox_fb_info * minfo , u_int32_t crtc ) ; 
/*--matroxfb_wait_for_sync--*/
int matroxfb_register_driver ( struct matroxfb_driver * drv ) ; 
/*--matroxfb_register_driver--*/
void matroxfb_unregister_driver ( struct matroxfb_driver * drv ) ; 
/*--matroxfb_unregister_driver--*/
void matrox_cfbX_init ( struct matrox_fb_info * minfo ) ; 
/*--matrox_cfbX_init--*/
void DAC1064_global_init ( struct matrox_fb_info * minfo ) ; 
/*--DAC1064_global_init--*/
void DAC1064_global_restore ( struct matrox_fb_info * minfo ) ; 
/*--DAC1064_global_restore--*/
void matroxfb_DAC_out ( const struct matrox_fb_info * minfo , int reg , int val ) ; 
/*--matroxfb_DAC_out--*/
int matroxfb_DAC_in ( const struct matrox_fb_info * minfo , int reg ) ; 
/*--matroxfb_DAC_in--*/
void matroxfb_var2my ( struct fb_var_screeninfo * var , struct my_timming * mt ) ; 
/*--matroxfb_var2my--*/
int matroxfb_PLL_calcclock ( const struct matrox_pll_features * pll , unsigned int freq , unsigned int fmax , unsigned int * in , unsigned int * feed , unsigned int * post ) ; 
/*--matroxfb_PLL_calcclock--*/
int matroxfb_vgaHWinit ( struct matrox_fb_info * minfo , struct my_timming * m ) ; 
/*--matroxfb_vgaHWinit--*/
void matroxfb_vgaHWrestore ( struct matrox_fb_info * minfo ) ; 
/*--matroxfb_vgaHWrestore--*/
void matroxfb_read_pins ( struct matrox_fb_info * minfo ) ; 
/*--matroxfb_read_pins--*/
unsigned int g450_mnp2f ( const struct matrox_fb_info * minfo , unsigned int mnp ) ; 
/*--g450_mnp2f--*/
void matroxfb_g450_setpll_cond ( struct matrox_fb_info * minfo , unsigned int mnp , unsigned int pll ) ; 
/*--matroxfb_g450_setpll_cond--*/
int matroxfb_g450_setclk ( struct matrox_fb_info * minfo , unsigned int fout , unsigned int pll ) ; 
/*--matroxfb_g450_setclk--*/
void matroxfb_g450_connect ( struct matrox_fb_info * minfo ) ; 
/*--matroxfb_g450_connect--*/
void matroxfb_g450_shutdown ( struct matrox_fb_info * minfo ) ; 
/*--matroxfb_g450_shutdown--*/
irqreturn_t mb862xx_intr ( int irq , void * dev_id ) ; 
/*--mb862xx_intr--*/
void mb862xxfb_init_accel ( struct fb_info * info , int xres ) ; 
/*--mb862xxfb_init_accel--*/
void NVLockUnlock ( struct nvidia_par * par , int Lock ) ; 
/*--NVLockUnlock--*/
int NVShowHideCursor ( struct nvidia_par * par , int ShowHide ) ; 
/*--NVShowHideCursor--*/
void NVCalcStateExt ( struct nvidia_par * par , RIVA_HW_STATE * state , int bpp , int width , int hDisplaySize , int height , int dotClock , int flags ) ; 
/*--NVCalcStateExt--*/
void NVLoadStateExt ( struct nvidia_par * par , RIVA_HW_STATE * state ) ; 
/*--NVLoadStateExt--*/
void NVUnloadStateExt ( struct nvidia_par * par , RIVA_HW_STATE * state ) ; 
/*--NVUnloadStateExt--*/
void NVSetStartAddress ( struct nvidia_par * par , u32 start ) ; 
/*--NVSetStartAddress--*/
void NVWriteCrtc ( struct nvidia_par * par , u8 index , u8 value ) ; 
/*--NVWriteCrtc--*/
u8 NVReadCrtc ( struct nvidia_par * par , u8 index ) ; 
/*--NVReadCrtc--*/
void NVWriteGr ( struct nvidia_par * par , u8 index , u8 value ) ; 
/*--NVWriteGr--*/
u8 NVReadGr ( struct nvidia_par * par , u8 index ) ; 
/*--NVReadGr--*/
void NVWriteSeq ( struct nvidia_par * par , u8 index , u8 value ) ; 
/*--NVWriteSeq--*/
u8 NVReadSeq ( struct nvidia_par * par , u8 index ) ; 
/*--NVReadSeq--*/
void NVWriteAttr ( struct nvidia_par * par , u8 index , u8 value ) ; 
/*--NVWriteAttr--*/
u8 NVReadAttr ( struct nvidia_par * par , u8 index ) ; 
/*--NVReadAttr--*/
void NVWriteMiscOut ( struct nvidia_par * par , u8 value ) ; 
/*--NVWriteMiscOut--*/
u8 NVReadMiscOut ( struct nvidia_par * par ) ; 
/*--NVReadMiscOut--*/
void NVWriteDacMask ( struct nvidia_par * par , u8 value ) ; 
/*--NVWriteDacMask--*/
void NVWriteDacReadAddr ( struct nvidia_par * par , u8 value ) ; 
/*--NVWriteDacReadAddr--*/
void NVWriteDacWriteAddr ( struct nvidia_par * par , u8 value ) ; 
/*--NVWriteDacWriteAddr--*/
void NVWriteDacData ( struct nvidia_par * par , u8 value ) ; 
/*--NVWriteDacData--*/
u8 NVReadDacData ( struct nvidia_par * par ) ; 
/*--NVReadDacData--*/
int NVCommonSetup ( struct fb_info * info ) ; 
/*--NVCommonSetup--*/
void NVResetGraphics ( struct fb_info * info ) ; 
/*--NVResetGraphics--*/
int nvidiafb_sync ( struct fb_info * info ) ; 
/*--nvidiafb_sync--*/
void nvidiafb_copyarea ( struct fb_info * info , const struct fb_copyarea * region ) ; 
/*--nvidiafb_copyarea--*/
void nvidiafb_fillrect ( struct fb_info * info , const struct fb_fillrect * rect ) ; 
/*--nvidiafb_fillrect--*/
void nvidiafb_imageblit ( struct fb_info * info , const struct fb_image * image ) ; 
/*--nvidiafb_imageblit--*/
void nvidia_create_i2c_busses ( struct nvidia_par * par ) ; 
/*--nvidia_create_i2c_busses--*/
void nvidia_delete_i2c_busses ( struct nvidia_par * par ) ; 
/*--nvidia_delete_i2c_busses--*/
int nvidia_probe_i2c_connector ( struct fb_info * info , int conn , u8 * * out_edid ) ; 
/*--nvidia_probe_i2c_connector--*/
void nvidia_bl_init ( struct nvidia_par * par ) ; 
/*--nvidia_bl_init--*/
void nvidia_bl_exit ( struct nvidia_par * par ) ; 
/*--nvidia_bl_exit--*/
int CalcStateExt ( RIVA_HW_INST * chip , RIVA_HW_STATE * state , int bpp , int width , int hDisplaySize , int height , int dotClock ) ; 
/*--CalcStateExt--*/
int RivaGetConfig ( RIVA_HW_INST * chip , unsigned int chipset ) ; 
/*--RivaGetConfig--*/
unsigned long riva_get_memlen ( struct riva_par * par ) ; 
/*--riva_get_memlen--*/
unsigned long riva_get_maxdclk ( struct riva_par * par ) ; 
/*--riva_get_maxdclk--*/
void riva_common_setup ( struct riva_par * par ) ; 
/*--riva_common_setup--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) riva_create_i2c_busses ( struct riva_par * par ) ; 
/*--riva_create_i2c_busses--*/
void riva_delete_i2c_busses ( struct riva_par * par ) ; 
/*--riva_delete_i2c_busses--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) riva_probe_i2c_connector ( struct riva_par * par , int conn , u8 * * out_edid ) ; 
/*--riva_probe_i2c_connector--*/
void savagefb_create_i2c_busses ( struct fb_info * info ) ; 
/*--savagefb_create_i2c_busses--*/
void savagefb_delete_i2c_busses ( struct fb_info * info ) ; 
/*--savagefb_delete_i2c_busses--*/
int savagefb_probe_i2c_connector ( struct fb_info * info , u8 * * out_edid ) ; 
/*--savagefb_probe_i2c_connector--*/
int savagefb_sync ( struct fb_info * info ) ; 
/*--savagefb_sync--*/
void savagefb_copyarea ( struct fb_info * info , const struct fb_copyarea * region ) ; 
/*--savagefb_copyarea--*/
void savagefb_fillrect ( struct fb_info * info , const struct fb_fillrect * rect ) ; 
/*--savagefb_fillrect--*/
void savagefb_imageblit ( struct fb_info * info , const struct fb_image * image ) ; 
/*--savagefb_imageblit--*/
unsigned int sisfb_read_nbridge_pci_dword ( struct SiS_Private * SiS_Pr , int reg ) ; 
/*--sisfb_read_nbridge_pci_dword--*/
void sisfb_write_nbridge_pci_dword ( struct SiS_Private * SiS_Pr , int reg , unsigned int val ) ; 
/*--sisfb_write_nbridge_pci_dword--*/
unsigned int sisfb_read_lpc_pci_dword ( struct SiS_Private * SiS_Pr , int reg ) ; 
/*--sisfb_read_lpc_pci_dword--*/
void sisfb_write_nbridge_pci_byte ( struct SiS_Private * SiS_Pr , int reg , unsigned char val ) ; 
/*--sisfb_write_nbridge_pci_byte--*/
unsigned int sisfb_read_mio_pci_word ( struct SiS_Private * SiS_Pr , int reg ) ; 
/*--sisfb_read_mio_pci_word--*/
void sis_malloc ( struct sis_memreq * req ) ; 
/*--sis_malloc--*/
void sis_malloc_new ( struct pci_dev * pdev , struct sis_memreq * req ) ; 
/*--sis_malloc_new--*/
void sis_free ( u32 base ) ; 
/*--sis_free--*/
void sis_free_new ( struct pci_dev * pdev , u32 base ) ; 
/*--sis_free_new--*/
int sisfb_initaccel ( struct sis_video_info * ivideo ) ; 
/*--sisfb_initaccel--*/
void sisfb_syncaccel ( struct sis_video_info * ivideo ) ; 
/*--sisfb_syncaccel--*/
int fbcon_sis_sync ( struct fb_info * info ) ; 
/*--fbcon_sis_sync--*/
void fbcon_sis_fillrect ( struct fb_info * info , const struct fb_fillrect * rect ) ; 
/*--fbcon_sis_fillrect--*/
void fbcon_sis_copyarea ( struct fb_info * info , const struct fb_copyarea * area ) ; 
/*--fbcon_sis_copyarea--*/
bool SiSInitPtr ( struct SiS_Private * SiS_Pr ) ; 
/*--SiSInitPtr--*/
unsigned short SiS_GetModeID_LCD ( int VGAEngine , unsigned int VBFlags , int HDisplay , int VDisplay , int Depth , bool FSTN , unsigned short CustomT , int LCDwidth , int LCDheight , unsigned int VBFlags2 ) ; 
/*--SiS_GetModeID_LCD--*/
unsigned short SiS_GetModeID_TV ( int VGAEngine , unsigned int VBFlags , int HDisplay , int VDisplay , int Depth , unsigned int VBFlags2 ) ; 
/*--SiS_GetModeID_TV--*/
unsigned short SiS_GetModeID_VGA2 ( int VGAEngine , unsigned int VBFlags , int HDisplay , int VDisplay , int Depth , unsigned int VBFlags2 ) ; 
/*--SiS_GetModeID_VGA2--*/
void SiS_SetReg ( SISIOADDRESS port , unsigned short index , unsigned short data ) ; 
/*--SiS_SetReg--*/
void SiS_SetRegByte ( SISIOADDRESS port , unsigned short data ) ; 
/*--SiS_SetRegByte--*/
void SiS_SetRegShort ( SISIOADDRESS port , unsigned short data ) ; 
/*--SiS_SetRegShort--*/
void SiS_SetRegLong ( SISIOADDRESS port , unsigned int data ) ; 
/*--SiS_SetRegLong--*/
unsigned char SiS_GetReg ( SISIOADDRESS port , unsigned short index ) ; 
/*--SiS_GetReg--*/
unsigned char SiS_GetRegByte ( SISIOADDRESS port ) ; 
/*--SiS_GetRegByte--*/
unsigned short SiS_GetRegShort ( SISIOADDRESS port ) ; 
/*--SiS_GetRegShort--*/
unsigned int SiS_GetRegLong ( SISIOADDRESS port ) ; 
/*--SiS_GetRegLong--*/
void SiS_SetRegANDOR ( SISIOADDRESS Port , unsigned short Index , unsigned short DataAND , unsigned short DataOR ) ; 
/*--SiS_SetRegANDOR--*/
void SiS_SetRegAND ( SISIOADDRESS Port , unsigned short Index , unsigned short DataAND ) ; 
/*--SiS_SetRegAND--*/
void SiS_SetRegOR ( SISIOADDRESS Port , unsigned short Index , unsigned short DataOR ) ; 
/*--SiS_SetRegOR--*/
void SiS_DisplayOn ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_DisplayOn--*/
void SiS_DisplayOff ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_DisplayOff--*/
void SiSRegInit ( struct SiS_Private * SiS_Pr , SISIOADDRESS BaseAddr ) ; 
/*--SiSRegInit--*/
void SiS_SetEnableDstn ( struct SiS_Private * SiS_Pr , int enable ) ; 
/*--SiS_SetEnableDstn--*/
void SiS_SetEnableFstn ( struct SiS_Private * SiS_Pr , int enable ) ; 
/*--SiS_SetEnableFstn--*/
unsigned short SiS_GetModeFlag ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_GetModeFlag--*/
bool SiSDetermineROMLayout661 ( struct SiS_Private * SiS_Pr ) ; 
/*--SiSDetermineROMLayout661--*/
bool SiS_SearchModeID ( struct SiS_Private * SiS_Pr , unsigned short * ModeNo , unsigned short * ModeIdIndex ) ; 
/*--SiS_SearchModeID--*/
unsigned short SiS_GetModePtr ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_GetModePtr--*/
unsigned short SiS_GetRefCRTVCLK ( struct SiS_Private * SiS_Pr , unsigned short Index , int UseWide ) ; 
/*--SiS_GetRefCRTVCLK--*/
unsigned short SiS_GetRefCRT1CRTC ( struct SiS_Private * SiS_Pr , unsigned short Index , int UseWide ) ; 
/*--SiS_GetRefCRT1CRTC--*/
unsigned short SiS_GetColorDepth ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_GetColorDepth--*/
unsigned short SiS_GetOffset ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex , unsigned short RRTI ) ; 
/*--SiS_GetOffset--*/
void SiS_GetFIFOThresholdIndex300 ( struct SiS_Private * SiS_Pr , unsigned short * idx1 , unsigned short * idx2 ) ; 
/*--SiS_GetFIFOThresholdIndex300--*/
unsigned short SiS_GetFIFOThresholdB300 ( unsigned short idx1 , unsigned short idx2 ) ; 
/*--SiS_GetFIFOThresholdB300--*/
unsigned short SiS_GetLatencyFactor630 ( struct SiS_Private * SiS_Pr , unsigned short index ) ; 
/*--SiS_GetLatencyFactor630--*/
void SiS_LoadDAC ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_LoadDAC--*/
bool SiSSetMode ( struct SiS_Private * SiS_Pr , unsigned short ModeNo ) ; 
/*--SiSSetMode--*/
void SiS_CalcCRRegisters ( struct SiS_Private * SiS_Pr , int depth ) ; 
/*--SiS_CalcCRRegisters--*/
void SiS_CalcLCDACRT1Timing ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_CalcLCDACRT1Timing--*/
void SiS_Generic_ConvertCRData ( struct SiS_Private * SiS_Pr , unsigned char * crdata , int xres , int yres , struct fb_var_screeninfo * var , bool writeres ) ; 
/*--SiS_Generic_ConvertCRData--*/
void SiS_UnLockCRT2 ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_UnLockCRT2--*/
unsigned short SiS_GetRatePtr ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_GetRatePtr--*/
void SiS_DDC2Delay ( struct SiS_Private * SiS_Pr , unsigned int delaytime ) ; 
/*--SiS_DDC2Delay--*/
void SiS_WaitRetrace1 ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_WaitRetrace1--*/
bool SiS_IsDualEdge ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_IsDualEdge--*/
bool SiS_IsVAMode ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_IsVAMode--*/
void SiS_SetChrontelGPIO ( struct SiS_Private * SiS_Pr , unsigned short myvbinfo ) ; 
/*--SiS_SetChrontelGPIO--*/
void SiS_GetVBInfo ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex , int checkcrt2mode ) ; 
/*--SiS_GetVBInfo--*/
void SiS_SetYPbPr ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_SetYPbPr--*/
void SiS_SetTVMode ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_SetTVMode--*/
void SiS_GetLCDResInfo ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_GetLCDResInfo--*/
unsigned short SiS_GetVCLK2Ptr ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex , unsigned short RefreshRateTableIndex ) ; 
/*--SiS_GetVCLK2Ptr--*/
unsigned short SiS_GetResInfo ( struct SiS_Private * SiS_Pr , unsigned short ModeNo , unsigned short ModeIdIndex ) ; 
/*--SiS_GetResInfo--*/
void SiS_DisableBridge ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_DisableBridge--*/
void SiS_Chrontel701xBLOn ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_Chrontel701xBLOn--*/
void SiS_Chrontel701xBLOff ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_Chrontel701xBLOff--*/
bool SiS_SetCRT2Group ( struct SiS_Private * SiS_Pr , unsigned short ModeNo ) ; 
/*--SiS_SetCRT2Group--*/
void SiS_SiS30xBLOn ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_SiS30xBLOn--*/
void SiS_SiS30xBLOff ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_SiS30xBLOff--*/
void SiS_SetCH700x ( struct SiS_Private * SiS_Pr , unsigned short reg , unsigned char val ) ; 
/*--SiS_SetCH700x--*/
void SiS_SetCH701x ( struct SiS_Private * SiS_Pr , unsigned short reg , unsigned char val ) ; 
/*--SiS_SetCH701x--*/
unsigned short SiS_GetCH700x ( struct SiS_Private * SiS_Pr , unsigned short tempbx ) ; 
/*--SiS_GetCH700x--*/
unsigned short SiS_GetCH701x ( struct SiS_Private * SiS_Pr , unsigned short tempbx ) ; 
/*--SiS_GetCH701x--*/
void SiS_SetCH70xxANDOR ( struct SiS_Private * SiS_Pr , unsigned short reg , unsigned char myor , unsigned short myand ) ; 
/*--SiS_SetCH70xxANDOR--*/
unsigned short SiS_HandleDDC ( struct SiS_Private * SiS_Pr , unsigned int VBFlags , int VGAEngine , unsigned short adaptnum , unsigned short DDCdatatype , unsigned char * buffer , unsigned int VBFlags2 ) ; 
/*--SiS_HandleDDC--*/
unsigned short SiS_ReadDDC1Bit ( struct SiS_Private * SiS_Pr ) ; 
/*--SiS_ReadDDC1Bit--*/
int sisfb_mode_rate_to_dclock ( struct SiS_Private * SiS_Pr , unsigned char modeno , unsigned char rateindex ) ; 
/*--sisfb_mode_rate_to_dclock--*/
int sisfb_mode_rate_to_ddata ( struct SiS_Private * SiS_Pr , unsigned char modeno , unsigned char rateindex , struct fb_var_screeninfo * var ) ; 
/*--sisfb_mode_rate_to_ddata--*/
bool sisfb_gettotalfrommode ( struct SiS_Private * SiS_Pr , unsigned char modeno , int * htotal , int * vtotal , unsigned char rateindex ) ; 
/*--sisfb_gettotalfrommode--*/
int vmlfb_register_subsys ( struct vml_sys * sys ) ; 
/*--vmlfb_register_subsys--*/
void vmlfb_unregister_subsys ( struct vml_sys * sys ) ; 
/*--vmlfb_unregister_subsys--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) via_fb_pci_probe ( struct viafb_dev * vdev ) ; 
/*--via_fb_pci_probe--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) via_fb_pci_remove ( struct pci_dev * pdev ) ; 
/*--via_fb_pci_remove--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) viafb_init ( void ) ; 
/*--viafb_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) viafb_exit ( void ) ; 
/*--viafb_exit--*/
void viafb_lock_crt ( void ) ; 
/*--viafb_lock_crt--*/
void viafb_unlock_crt ( void ) ; 
/*--viafb_unlock_crt--*/
void write_dac_reg ( u8 index , u8 r , u8 g , u8 b ) ; 
/*--write_dac_reg--*/
void viafb_set_iga_path ( void ) ; 
/*--viafb_set_iga_path--*/
void viafb_set_primary_color_register ( u8 index , u8 red , u8 green , u8 blue ) ; 
/*--viafb_set_primary_color_register--*/
void viafb_set_secondary_color_register ( u8 index , u8 red , u8 green , u8 blue ) ; 
/*--viafb_set_secondary_color_register--*/
void viafb_set_output_path ( int device , int set_iga , int output_interface ) ; 
/*--viafb_set_output_path--*/
void viafb_load_reg ( int timing_value , int viafb_load_reg_num , struct io_register * reg , int io_type ) ; 
/*--viafb_load_reg--*/
void viafb_write_regx ( struct io_reg RegTable [ ] , int ItemNum ) ; 
/*--viafb_write_regx--*/
void viafb_load_fetch_count_reg ( int h_addr , int bpp_byte , int set_iga ) ; 
/*--viafb_load_fetch_count_reg--*/
void viafb_load_FIFO_reg ( int set_iga , int hor_active , int ver_active ) ; 
/*--viafb_load_FIFO_reg--*/
u32 viafb_get_clk_value ( int clk ) ; 
/*--viafb_get_clk_value--*/
void viafb_set_vclock ( u32 CLK , int set_iga ) ; 
/*--viafb_set_vclock--*/
void viafb_load_crtc_timing ( struct display_timing device_timing , int set_iga ) ; 
/*--viafb_load_crtc_timing--*/
void viafb_fill_crtc_timing ( struct crt_mode_table * crt_table , struct VideoModeTable * video_mode , int bpp_byte , int set_iga ) ; 
/*--viafb_fill_crtc_timing--*/
void viafb_init_chip_info ( int chip_type ) ; 
/*--viafb_init_chip_info--*/
void viafb_update_device_setting ( int hres , int vres , int bpp , int vmode_refresh , int flag ) ; 
/*--viafb_update_device_setting--*/
void viafb_init_dac ( int set_iga ) ; 
/*--viafb_init_dac--*/
int viafb_setmode ( struct VideoModeTable * vmode_tbl , int video_bpp , struct VideoModeTable * vmode_tbl1 , int video_bpp1 ) ; 
/*--viafb_setmode--*/
int viafb_get_pixclock ( int hres , int vres , int vmode_refresh ) ; 
/*--viafb_get_pixclock--*/
int viafb_get_refresh ( int hres , int vres , u32 long_refresh ) ; 
/*--viafb_get_refresh--*/
void viafb_crt_disable ( void ) ; 
/*--viafb_crt_disable--*/
void viafb_crt_enable ( void ) ; 
/*--viafb_crt_enable--*/
void viafb_set_dpa_gfx ( int output_interface , struct GFX_DPA_SETTING * p_gfx_dpa_setting ) ; 
/*--viafb_set_dpa_gfx--*/
void viafb_fill_var_timing_info ( struct fb_var_screeninfo * var , int refresh , struct VideoModeTable * vmode_tbl ) ; 
/*--viafb_fill_var_timing_info--*/
int viafb_i2c_readbyte ( u8 adap , u8 slave_addr , u8 index , u8 * pdata ) ; 
/*--viafb_i2c_readbyte--*/
int viafb_i2c_writebyte ( u8 adap , u8 slave_addr , u8 index , u8 data ) ; 
/*--viafb_i2c_writebyte--*/
int viafb_i2c_readbytes ( u8 adap , u8 slave_addr , u8 index , u8 * buff , int buff_len ) ; 
/*--viafb_i2c_readbytes--*/
struct i2c_adapter * viafb_find_i2c_adapter ( enum viafb_i2c_adap which ) ; 
/*--viafb_find_i2c_adapter--*/
int viafb_i2c_init ( void ) ; 
/*--viafb_i2c_init--*/
void viafb_i2c_exit ( void ) ; 
/*--viafb_i2c_exit--*/
void viafb_init_dvi_size ( struct tmds_chip_information * tmds_chip , struct tmds_setting_information * tmds_setting ) ; 
/*--viafb_init_dvi_size--*/
int viafb_tmds_trasmitter_identify ( void ) ; 
/*--viafb_tmds_trasmitter_identify--*/
void viafb_dvi_set_mode ( struct VideoModeTable * mode , int mode_bpp , int set_iga ) ; 
/*--viafb_dvi_set_mode--*/
int viafb_dvi_sense ( void ) ; 
/*--viafb_dvi_sense--*/
void viafb_dvi_disable ( void ) ; 
/*--viafb_dvi_disable--*/
void viafb_dvi_enable ( void ) ; 
/*--viafb_dvi_enable--*/
void viafb_init_lcd_size ( void ) ; 
/*--viafb_init_lcd_size--*/
int viafb_lvds_trasmitter_identify ( void ) ; 
/*--viafb_lvds_trasmitter_identify--*/
void viafb_lcd_set_mode ( struct crt_mode_table * mode_crt_table , struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info ) ; 
/*--viafb_lcd_set_mode--*/
void viafb_lcd_disable ( void ) ; 
/*--viafb_lcd_disable--*/
void viafb_lcd_enable ( void ) ; 
/*--viafb_lcd_enable--*/
void viafb_init_lvds_output_interface ( struct lvds_chip_information * plvds_chip_info , struct lvds_setting_information * plvds_setting_info ) ; 
/*--viafb_init_lvds_output_interface--*/
bool viafb_lcd_get_mobile_state ( bool * mobile ) ; 
/*--viafb_lcd_get_mobile_state--*/
int viafb_ioctl_get_viafb_info ( u_long arg ) ; 
/*--viafb_ioctl_get_viafb_info--*/
int viafb_ioctl_hotplug ( int hres , int vres , int bpp ) ; 
/*--viafb_ioctl_hotplug--*/
int viafb_init_engine ( struct fb_info * info ) ; 
/*--viafb_init_engine--*/
void viafb_show_hw_cursor ( struct fb_info * info , int Status ) ; 
/*--viafb_show_hw_cursor--*/
void viafb_wait_engine_idle ( struct fb_info * info ) ; 
/*--viafb_wait_engine_idle--*/
void viafb_get_device_support_state ( u32 * support_state ) ; 
/*--viafb_get_device_support_state--*/
void viafb_get_device_connect_state ( u32 * connect_state ) ; 
/*--viafb_get_device_connect_state--*/
bool viafb_lcd_get_support_expand_state ( u32 xres , u32 yres ) ; 
/*--viafb_lcd_get_support_expand_state--*/
void viafb_set_gamma_table ( int bpp , unsigned int * gamma_table ) ; 
/*--viafb_set_gamma_table--*/
void viafb_get_gamma_table ( unsigned int * gamma_table ) ; 
/*--viafb_get_gamma_table--*/
void viafb_get_gamma_support_state ( int bpp , unsigned int * support_state ) ; 
/*--viafb_get_gamma_support_state--*/
u8 viafb_gpio_i2c_read_lvds ( struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info , u8 index ) ; 
/*--viafb_gpio_i2c_read_lvds--*/
void viafb_gpio_i2c_write_mask_lvds ( struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info , struct IODATA io_data ) ; 
/*--viafb_gpio_i2c_write_mask_lvds--*/
void viafb_init_lvds_vt1636 ( struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info ) ; 
/*--viafb_init_lvds_vt1636--*/
void viafb_enable_lvds_vt1636 ( struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info ) ; 
/*--viafb_enable_lvds_vt1636--*/
void viafb_disable_lvds_vt1636 ( struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info ) ; 
/*--viafb_disable_lvds_vt1636--*/
bool viafb_lvds_identify_vt1636 ( u8 i2c_adapter ) ; 
/*--viafb_lvds_identify_vt1636--*/
void viafb_vt1636_patch_skew_on_vt3324 ( struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info ) ; 
/*--viafb_vt1636_patch_skew_on_vt3324--*/
void viafb_vt1636_patch_skew_on_vt3327 ( struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info ) ; 
/*--viafb_vt1636_patch_skew_on_vt3327--*/
void viafb_vt1636_patch_skew_on_vt3364 ( struct lvds_setting_information * plvds_setting_info , struct lvds_chip_information * plvds_chip_info ) ; 
/*--viafb_vt1636_patch_skew_on_vt3364--*/
struct VideoModeTable * viafb_get_mode ( int hres , int vres ) ; 
/*--viafb_get_mode--*/
struct VideoModeTable * viafb_get_rb_mode ( int hres , int vres ) ; 
/*--viafb_get_rb_mode--*/
void viafb_irq_enable ( u32 mask ) ; 
/*--viafb_irq_enable--*/
void viafb_irq_disable ( u32 mask ) ; 
/*--viafb_irq_disable--*/
int viafb_request_dma ( void ) ; 
/*--viafb_request_dma--*/
void viafb_release_dma ( void ) ; 
/*--viafb_release_dma--*/
int viafb_dma_copy_out_sg ( unsigned int offset , struct scatterlist * sg , int nsg ) ; 
/*--viafb_dma_copy_out_sg--*/
int viafb_gpio_lookup ( const char * name ) ; 
/*--viafb_gpio_lookup--*/
int viafb_gpio_init ( void ) ; 
/*--viafb_gpio_init--*/
void viafb_gpio_exit ( void ) ; 
/*--viafb_gpio_exit--*/
void via_set_primary_address ( u32 addr ) ; 
/*--via_set_primary_address--*/
void via_set_secondary_address ( u32 addr ) ; 
/*--via_set_secondary_address--*/
void via_set_primary_pitch ( u32 pitch ) ; 
/*--via_set_primary_pitch--*/
void via_set_secondary_pitch ( u32 pitch ) ; 
/*--via_set_secondary_pitch--*/
void via_set_primary_color_depth ( u8 depth ) ; 
/*--via_set_primary_color_depth--*/
void via_set_secondary_color_depth ( u8 depth ) ; 
/*--via_set_secondary_color_depth--*/
int save_vga ( struct vgastate * state ) ; 
/*--save_vga--*/
int restore_vga ( struct vgastate * state ) ; 
/*--restore_vga--*/
void sys_fillrect ( struct fb_info * p , const struct fb_fillrect * rect ) ; 
/*--sys_fillrect--*/
void sys_copyarea ( struct fb_info * p , const struct fb_copyarea * area ) ; 
/*--sys_copyarea--*/
void sys_imageblit ( struct fb_info * p , const struct fb_image * image ) ; 
/*--sys_imageblit--*/
ssize_t fb_sys_read ( struct fb_info * info , char * buf , size_t count , loff_t * ppos ) ; 
/*--fb_sys_read--*/
ssize_t fb_sys_write ( struct fb_info * info , const char * buf , size_t count , loff_t * ppos ) ; 
/*--fb_sys_write--*/
void svga_wcrt_multi ( const struct vga_regset * regset , u32 value ) ; 
/*--svga_wcrt_multi--*/
void svga_wseq_multi ( const struct vga_regset * regset , u32 value ) ; 
/*--svga_wseq_multi--*/
void svga_set_default_gfx_regs ( void ) ; 
/*--svga_set_default_gfx_regs--*/
void svga_set_default_atc_regs ( void ) ; 
/*--svga_set_default_atc_regs--*/
void svga_set_default_seq_regs ( void ) ; 
/*--svga_set_default_seq_regs--*/
void svga_set_default_crt_regs ( void ) ; 
/*--svga_set_default_crt_regs--*/
void svga_set_textmode_vga_regs ( void ) ; 
/*--svga_set_textmode_vga_regs--*/
void svga_settile ( struct fb_info * info , struct fb_tilemap * map ) ; 
/*--svga_settile--*/
void svga_tilecopy ( struct fb_info * info , struct fb_tilearea * area ) ; 
/*--svga_tilecopy--*/
void svga_tilefill ( struct fb_info * info , struct fb_tilerect * rect ) ; 
/*--svga_tilefill--*/
void svga_tileblit ( struct fb_info * info , struct fb_tileblit * blit ) ; 
/*--svga_tileblit--*/
void svga_tilecursor ( struct fb_info * info , struct fb_tilecursor * cursor ) ; 
/*--svga_tilecursor--*/
int svga_get_tilemax ( struct fb_info * info ) ; 
/*--svga_get_tilemax--*/
void svga_get_caps ( struct fb_info * info , struct fb_blit_caps * caps , struct fb_var_screeninfo * var ) ; 
/*--svga_get_caps--*/
int svga_compute_pll ( const struct svga_pll * pll , u32 f_wanted , u16 * m , u16 * n , u16 * r , int node ) ; 
/*--svga_compute_pll--*/
int svga_check_timings ( const struct svga_timing_regs * tm , struct fb_var_screeninfo * var , int node ) ; 
/*--svga_check_timings--*/
void svga_set_timings ( const struct svga_timing_regs * tm , struct fb_var_screeninfo * var , u32 hmul , u32 hdiv , u32 vmul , u32 vdiv , u32 hborder , int node ) ; 
/*--svga_set_timings--*/
int svga_match_format ( const struct svga_fb_format * frm , struct fb_var_screeninfo * var , struct fb_fix_screeninfo * fix ) ; 
/*--svga_match_format--*/
unsigned char * fb_ddc_read ( struct i2c_adapter * adapter ) ; 
/*--fb_ddc_read--*/
void cyber2000fb_enable_extregs ( struct cfb_info * cfb ) ; 
/*--cyber2000fb_enable_extregs--*/
void cyber2000fb_disable_extregs ( struct cfb_info * cfb ) ; 
/*--cyber2000fb_disable_extregs--*/
void cyber2000fb_get_fb_var ( struct cfb_info * cfb , struct fb_var_screeninfo * var ) ; 
/*--cyber2000fb_get_fb_var--*/
int cyber2000fb_attach ( struct cyberpro_info * info , int idx ) ; 
/*--cyber2000fb_attach--*/
void cyber2000fb_detach ( int idx ) ; 
/*--cyber2000fb_detach--*/
int mac_vmode_to_var ( int vmode , int cmode , struct fb_var_screeninfo * var ) ; 
/*--mac_vmode_to_var--*/
int mac_var_to_vmode ( const struct fb_var_screeninfo * var , int * vmode , int * cmode ) ; 
/*--mac_var_to_vmode--*/
int mac_map_monitor_sense ( int sense ) ; 
/*--mac_map_monitor_sense--*/
int mac_find_mode ( struct fb_var_screeninfo * var , struct fb_info * info , const char * mode_option , unsigned int default_bpp ) ; 
/*--mac_find_mode--*/
struct output_device * video_output_register ( const char * name , struct device * dev , void * devdata , struct output_properties * op ) ; 
/*--video_output_register--*/
void video_output_unregister ( struct output_device * dev ) ; 
/*--video_output_unregister--*/
void virtio_check_driver_offered_feature ( const struct virtio_device * vdev , unsigned int fbit ) ; 
/*--virtio_check_driver_offered_feature--*/
int register_virtio_driver ( struct virtio_driver * driver ) ; 
/*--register_virtio_driver--*/
void unregister_virtio_driver ( struct virtio_driver * driver ) ; 
/*--unregister_virtio_driver--*/
int register_virtio_device ( struct virtio_device * dev ) ; 
/*--register_virtio_device--*/
void unregister_virtio_device ( struct virtio_device * dev ) ; 
/*--unregister_virtio_device--*/
int virtqueue_add_buf_gfp ( struct virtqueue * _vq , struct scatterlist sg [ ] , unsigned int out , unsigned int in , void * data , gfp_t gfp ) ; 
/*--virtqueue_add_buf_gfp--*/
void virtqueue_kick ( struct virtqueue * _vq ) ; 
/*--virtqueue_kick--*/
void * virtqueue_get_buf ( struct virtqueue * _vq , unsigned int * len ) ; 
/*--virtqueue_get_buf--*/
void virtqueue_disable_cb ( struct virtqueue * _vq ) ; 
/*--virtqueue_disable_cb--*/
bool virtqueue_enable_cb ( struct virtqueue * _vq ) ; 
/*--virtqueue_enable_cb--*/
void * virtqueue_detach_unused_buf ( struct virtqueue * _vq ) ; 
/*--virtqueue_detach_unused_buf--*/
irqreturn_t vring_interrupt ( int irq , void * _vq ) ; 
/*--vring_interrupt--*/
struct virtqueue * vring_new_virtqueue ( unsigned int num , unsigned int vring_align , struct virtio_device * vdev , void * pages , void ( * notify ) ( struct virtqueue * ) , void ( * callback ) ( struct virtqueue * ) , const char * name ) ; 
/*--vring_new_virtqueue--*/
void vring_del_virtqueue ( struct virtqueue * vq ) ; 
/*--vring_del_virtqueue--*/
void vring_transport_features ( struct virtio_device * vdev ) ; 
/*--vring_transport_features--*/
int w1_ds2760_read ( struct device * dev , char * buf , int addr , size_t count ) ; 
/*--w1_ds2760_read--*/
int w1_ds2760_write ( struct device * dev , char * buf , int addr , size_t count ) ; 
/*--w1_ds2760_write--*/
int w1_ds2760_store_eeprom ( struct device * dev , int addr ) ; 
/*--w1_ds2760_store_eeprom--*/
int w1_ds2760_recall_eeprom ( struct device * dev , int addr ) ; 
/*--w1_ds2760_recall_eeprom--*/
void w1_bq27000_write ( struct device * dev , u8 buf , u8 reg ) ; 
/*--w1_bq27000_write--*/
int w1_bq27000_read ( struct device * dev , u8 reg ) ; 
/*--w1_bq27000_read--*/
int w1_create_master_attributes ( struct w1_master * master ) ; 
/*--w1_create_master_attributes--*/
void w1_destroy_master_attributes ( struct w1_master * master ) ; 
/*--w1_destroy_master_attributes--*/
void w1_slave_detach ( struct w1_slave * sl ) ; 
/*--w1_slave_detach--*/
struct w1_master * w1_search_master_id ( u32 id ) ; 
/*--w1_search_master_id--*/
struct w1_slave * w1_search_slave ( struct w1_reg_num * id ) ; 
/*--w1_search_slave--*/
void w1_reconnect_slaves ( struct w1_family * f , int attach ) ; 
/*--w1_reconnect_slaves--*/
void w1_search ( struct w1_master * dev , u8 search_type , w1_slave_found_callback cb ) ; 
/*--w1_search--*/
void w1_search_process ( struct w1_master * dev , u8 search_type ) ; 
/*--w1_search_process--*/
int w1_process ( void * data ) ; 
/*--w1_process--*/
int w1_add_master_device ( struct w1_bus_master * master ) ; 
/*--w1_add_master_device--*/
void __w1_remove_master_device ( struct w1_master * dev ) ; 
/*--__w1_remove_master_device--*/
void w1_remove_master_device ( struct w1_bus_master * bm ) ; 
/*--w1_remove_master_device--*/
int w1_register_family ( struct w1_family * newf ) ; 
/*--w1_register_family--*/
void w1_unregister_family ( struct w1_family * fent ) ; 
/*--w1_unregister_family--*/
struct w1_family * w1_family_registered ( u8 fid ) ; 
/*--w1_family_registered--*/
void w1_family_put ( struct w1_family * f ) ; 
/*--w1_family_put--*/
void __w1_family_get ( struct w1_family * f ) ; 
/*--__w1_family_get--*/
void w1_netlink_send ( struct w1_master * dev , struct w1_netlink_msg * msg ) ; 
/*--w1_netlink_send--*/
int w1_init_netlink ( void ) ; 
/*--w1_init_netlink--*/
void w1_fini_netlink ( void ) ; 
/*--w1_fini_netlink--*/
void w1_write_8 ( struct w1_master * dev , u8 byte ) ; 
/*--w1_write_8--*/
u8 w1_triplet ( struct w1_master * dev , int bdir ) ; 
/*--w1_triplet--*/
u8 w1_read_8 ( struct w1_master * dev ) ; 
/*--w1_read_8--*/
void w1_write_block ( struct w1_master * dev , const u8 * buf , int len ) ; 
/*--w1_write_block--*/
void w1_touch_block ( struct w1_master * dev , u8 * buf , int len ) ; 
/*--w1_touch_block--*/
u8 w1_read_block ( struct w1_master * dev , u8 * buf , int len ) ; 
/*--w1_read_block--*/
int w1_reset_bus ( struct w1_master * dev ) ; 
/*--w1_reset_bus--*/
u8 w1_calc_crc8 ( u8 * data , int len ) ; 
/*--w1_calc_crc8--*/
void w1_search_devices ( struct w1_master * dev , u8 search_type , w1_slave_found_callback cb ) ; 
/*--w1_search_devices--*/
int w1_reset_select_slave ( struct w1_slave * sl ) ; 
/*--w1_reset_select_slave--*/
void w1_next_pullup ( struct w1_master * dev , int delay ) ; 
/*--w1_next_pullup--*/
void iTCO_vendor_pre_start ( unsigned long acpibase , unsigned int heartbeat ) ; 
/*--iTCO_vendor_pre_start--*/
void iTCO_vendor_pre_stop ( unsigned long acpibase ) ; 
/*--iTCO_vendor_pre_stop--*/
void iTCO_vendor_pre_keepalive ( unsigned long acpibase , unsigned int heartbeat ) ; 
/*--iTCO_vendor_pre_keepalive--*/
void iTCO_vendor_pre_set_heartbeat ( unsigned int heartbeat ) ; 
/*--iTCO_vendor_pre_set_heartbeat--*/
int iTCO_vendor_check_noreboot_on ( void ) ; 
/*--iTCO_vendor_check_noreboot_on--*/
irqreturn_t evtchn_interrupt ( int irq , void * data ) ; 
/*--evtchn_interrupt--*/
int register_sound_special_device ( const struct file_operations * fops , int unit , struct device * dev ) ; 
/*--register_sound_special_device--*/
int register_sound_special ( const struct file_operations * fops , int unit ) ; 
/*--register_sound_special--*/
int register_sound_mixer ( const struct file_operations * fops , int dev ) ; 
/*--register_sound_mixer--*/
int register_sound_midi ( const struct file_operations * fops , int dev ) ; 
/*--register_sound_midi--*/
int register_sound_dsp ( const struct file_operations * fops , int dev ) ; 
/*--register_sound_dsp--*/
void unregister_sound_special ( int unit ) ; 
/*--unregister_sound_special--*/
void unregister_sound_mixer ( int unit ) ; 
/*--unregister_sound_mixer--*/
void unregister_sound_midi ( int unit ) ; 
/*--unregister_sound_midi--*/
void unregister_sound_dsp ( int unit ) ; 
/*--unregister_sound_dsp--*/
int mod_firmware_load ( const char * fn , char * * fp ) ; 
/*--mod_firmware_load--*/
int snd_mixer_oss_ioctl_card ( struct snd_card * card , unsigned int cmd , unsigned long arg ) ; 
/*--snd_mixer_oss_ioctl_card--*/
int snd_pcm_plugin_append ( struct snd_pcm_plugin * plugin ) ; 
/*--snd_pcm_plugin_append--*/
snd_pcm_sframes_t snd_pcm_oss_write3 ( struct snd_pcm_substream * substream , const char * ptr , snd_pcm_uframes_t frames , int in_kernel ) ; 
/*--snd_pcm_oss_write3--*/
snd_pcm_sframes_t snd_pcm_oss_read3 ( struct snd_pcm_substream * substream , char * ptr , snd_pcm_uframes_t frames , int in_kernel ) ; 
/*--snd_pcm_oss_read3--*/
snd_pcm_sframes_t snd_pcm_oss_writev3 ( struct snd_pcm_substream * substream , void * * bufs , snd_pcm_uframes_t frames , int in_kernel ) ; 
/*--snd_pcm_oss_writev3--*/
snd_pcm_sframes_t snd_pcm_oss_readv3 ( struct snd_pcm_substream * substream , void * * bufs , snd_pcm_uframes_t frames , int in_kernel ) ; 
/*--snd_pcm_oss_readv3--*/
int snd_pcm_plug_alloc ( struct snd_pcm_substream * plug , snd_pcm_uframes_t frames ) ; 
/*--snd_pcm_plug_alloc--*/
snd_pcm_sframes_t snd_pcm_plugin_client_channels ( struct snd_pcm_plugin * plugin , snd_pcm_uframes_t frames , struct snd_pcm_plugin_channel * * channels ) ; 
/*--snd_pcm_plugin_client_channels--*/
int snd_pcm_plugin_build ( struct snd_pcm_substream * plug , const char * name , struct snd_pcm_plugin_format * src_format , struct snd_pcm_plugin_format * dst_format , size_t extra , struct snd_pcm_plugin * * ret ) ; 
/*--snd_pcm_plugin_build--*/
int snd_pcm_plugin_free ( struct snd_pcm_plugin * plugin ) ; 
/*--snd_pcm_plugin_free--*/
snd_pcm_sframes_t snd_pcm_plug_client_size ( struct snd_pcm_substream * plug , snd_pcm_uframes_t drv_frames ) ; 
/*--snd_pcm_plug_client_size--*/
snd_pcm_sframes_t snd_pcm_plug_slave_size ( struct snd_pcm_substream * plug , snd_pcm_uframes_t clt_frames ) ; 
/*--snd_pcm_plug_slave_size--*/
int snd_pcm_plug_slave_format ( int format , struct snd_mask * format_mask ) ; 
/*--snd_pcm_plug_slave_format--*/
int snd_pcm_plug_format_plugins ( struct snd_pcm_substream * plug , struct snd_pcm_hw_params * params , struct snd_pcm_hw_params * slave_params ) ; 
/*--snd_pcm_plug_format_plugins--*/
snd_pcm_sframes_t snd_pcm_plug_client_channels_buf ( struct snd_pcm_substream * plug , char * buf , snd_pcm_uframes_t count , struct snd_pcm_plugin_channel * * channels ) ; 
/*--snd_pcm_plug_client_channels_buf--*/
snd_pcm_sframes_t snd_pcm_plug_write_transfer ( struct snd_pcm_substream * plug , struct snd_pcm_plugin_channel * src_channels , snd_pcm_uframes_t size ) ; 
/*--snd_pcm_plug_write_transfer--*/
snd_pcm_sframes_t snd_pcm_plug_read_transfer ( struct snd_pcm_substream * plug , struct snd_pcm_plugin_channel * dst_channels_final , snd_pcm_uframes_t size ) ; 
/*--snd_pcm_plug_read_transfer--*/
int snd_pcm_area_silence ( const struct snd_pcm_channel_area * dst_area , size_t dst_offset , size_t samples , int format ) ; 
/*--snd_pcm_area_silence--*/
int snd_pcm_area_copy ( const struct snd_pcm_channel_area * src_area , size_t src_offset , const struct snd_pcm_channel_area * dst_area , size_t dst_offset , size_t samples , int format ) ; 
/*--snd_pcm_area_copy--*/
int snd_pcm_plugin_build_io ( struct snd_pcm_substream * plug , struct snd_pcm_hw_params * params , struct snd_pcm_plugin * * r_plugin ) ; 
/*--snd_pcm_plugin_build_io--*/
int snd_pcm_plugin_build_copy ( struct snd_pcm_substream * plug , struct snd_pcm_plugin_format * src_format , struct snd_pcm_plugin_format * dst_format , struct snd_pcm_plugin * * r_plugin ) ; 
/*--snd_pcm_plugin_build_copy--*/
int snd_pcm_plugin_build_linear ( struct snd_pcm_substream * plug , struct snd_pcm_plugin_format * src_format , struct snd_pcm_plugin_format * dst_format , struct snd_pcm_plugin * * r_plugin ) ; 
/*--snd_pcm_plugin_build_linear--*/
int snd_pcm_plugin_build_mulaw ( struct snd_pcm_substream * plug , struct snd_pcm_plugin_format * src_format , struct snd_pcm_plugin_format * dst_format , struct snd_pcm_plugin * * r_plugin ) ; 
/*--snd_pcm_plugin_build_mulaw--*/
int snd_pcm_plugin_build_route ( struct snd_pcm_substream * plug , struct snd_pcm_plugin_format * src_format , struct snd_pcm_plugin_format * dst_format , struct snd_pcm_plugin * * r_plugin ) ; 
/*--snd_pcm_plugin_build_route--*/
int snd_pcm_plugin_build_rate ( struct snd_pcm_substream * plug , struct snd_pcm_plugin_format * src_format , struct snd_pcm_plugin_format * dst_format , struct snd_pcm_plugin * * r_plugin ) ; 
/*--snd_pcm_plugin_build_rate--*/
void snd_seq_autoload_lock ( void ) ; 
/*--snd_seq_autoload_lock--*/
void snd_seq_autoload_unlock ( void ) ; 
/*--snd_seq_autoload_unlock--*/
void snd_seq_device_load_drivers ( void ) ; 
/*--snd_seq_device_load_drivers--*/
int snd_seq_device_new ( struct snd_card * card , int device , char * id , int argsize , struct snd_seq_device * * result ) ; 
/*--snd_seq_device_new--*/
int snd_seq_device_register_driver ( char * id , struct snd_seq_dev_ops * entry , int argsize ) ; 
/*--snd_seq_device_register_driver--*/
int snd_seq_device_unregister_driver ( char * id ) ; 
/*--snd_seq_device_unregister_driver--*/
void snd_midi_process_event ( struct snd_midi_op * ops , struct snd_seq_event * ev , struct snd_midi_channel_set * chanset ) ; 
/*--snd_midi_process_event--*/
void snd_midi_channel_set_clear ( struct snd_midi_channel_set * chset ) ; 
/*--snd_midi_channel_set_clear--*/
struct snd_midi_channel_set * snd_midi_channel_alloc_set ( int n ) ; 
/*--snd_midi_channel_alloc_set--*/
void snd_midi_channel_free_set ( struct snd_midi_channel_set * chset ) ; 
/*--snd_midi_channel_free_set--*/
int snd_midi_event_new ( int bufsize , struct snd_midi_event * * rdev ) ; 
/*--snd_midi_event_new--*/
void snd_midi_event_free ( struct snd_midi_event * dev ) ; 
/*--snd_midi_event_free--*/
void snd_midi_event_reset_encode ( struct snd_midi_event * dev ) ; 
/*--snd_midi_event_reset_encode--*/
void snd_midi_event_reset_decode ( struct snd_midi_event * dev ) ; 
/*--snd_midi_event_reset_decode--*/
void snd_midi_event_no_status ( struct snd_midi_event * dev , int on ) ; 
/*--snd_midi_event_no_status--*/
long snd_midi_event_encode ( struct snd_midi_event * dev , unsigned char * buf , long count , struct snd_seq_event * ev ) ; 
/*--snd_midi_event_encode--*/
int snd_midi_event_encode_byte ( struct snd_midi_event * dev , int c , struct snd_seq_event * ev ) ; 
/*--snd_midi_event_encode_byte--*/
long snd_midi_event_decode ( struct snd_midi_event * dev , unsigned char * buf , long count , struct snd_seq_event * ev ) ; 
/*--snd_midi_event_decode--*/
int snd_virmidi_new ( struct snd_card * card , int device , struct snd_rawmidi * * rrmidi ) ; 
/*--snd_virmidi_new--*/
void snd_use_lock_sync_helper ( snd_use_lock_t * lockp , const char * file , int line ) ; 
/*--snd_use_lock_sync_helper--*/
struct snd_seq_client * snd_seq_client_use_ptr ( int clientid ) ; 
/*--snd_seq_client_use_ptr--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) client_init_data ( void ) ; 
/*--client_init_data--*/
int snd_seq_dispatch_event ( struct snd_seq_event_cell * cell , int atomic , int hop ) ; 
/*--snd_seq_dispatch_event--*/
int snd_seq_client_notify_subscription ( int client , int port , struct snd_seq_port_subscribe * info , int evtype ) ; 
/*--snd_seq_client_notify_subscription--*/
int snd_seq_set_queue_tempo ( int client , struct snd_seq_queue_tempo * tempo ) ; 
/*--snd_seq_set_queue_tempo--*/
int snd_seq_create_kernel_client ( struct snd_card * card , int client_index , const char * name_fmt , ... ) ; 
/*--snd_seq_create_kernel_client--*/
int snd_seq_delete_kernel_client ( int client ) ; 
/*--snd_seq_delete_kernel_client--*/
int snd_seq_kernel_client_enqueue ( int client , struct snd_seq_event * ev , int atomic , int hop ) ; 
/*--snd_seq_kernel_client_enqueue--*/
int snd_seq_kernel_client_enqueue_blocking ( int client , struct snd_seq_event * ev , struct file * file , int atomic , int hop ) ; 
/*--snd_seq_kernel_client_enqueue_blocking--*/
int snd_seq_kernel_client_dispatch ( int client , struct snd_seq_event * ev , int atomic , int hop ) ; 
/*--snd_seq_kernel_client_dispatch--*/
int snd_seq_kernel_client_ctl ( int clientid , unsigned int cmd , void * arg ) ; 
/*--snd_seq_kernel_client_ctl--*/
int snd_seq_kernel_client_write_poll ( int clientid , struct file * file , poll_table * wait ) ; 
/*--snd_seq_kernel_client_write_poll--*/
void snd_seq_info_clients_read ( struct snd_info_entry * entry , struct snd_info_buffer * buffer ) ; 
/*--snd_seq_info_clients_read--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_sequencer_device_init ( void ) ; 
/*--snd_sequencer_device_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_sequencer_device_done ( void ) ; 
/*--snd_sequencer_device_done--*/
int snd_seq_dump_var_event ( const struct snd_seq_event * event , snd_seq_dump_func_t func , void * private_data ) ; 
/*--snd_seq_dump_var_event--*/
int snd_seq_expand_var_event ( const struct snd_seq_event * event , int count , char * buf , int in_kernel , int size_aligned ) ; 
/*--snd_seq_expand_var_event--*/
void snd_seq_cell_free ( struct snd_seq_event_cell * cell ) ; 
/*--snd_seq_cell_free--*/
int snd_seq_event_dup ( struct snd_seq_pool * pool , struct snd_seq_event * event , struct snd_seq_event_cell * * cellp , int nonblock , struct file * file ) ; 
/*--snd_seq_event_dup--*/
int snd_seq_pool_poll_wait ( struct snd_seq_pool * pool , struct file * file , poll_table * wait ) ; 
/*--snd_seq_pool_poll_wait--*/
int snd_seq_pool_init ( struct snd_seq_pool * pool ) ; 
/*--snd_seq_pool_init--*/
int snd_seq_pool_done ( struct snd_seq_pool * pool ) ; 
/*--snd_seq_pool_done--*/
struct snd_seq_pool * snd_seq_pool_new ( int poolsize ) ; 
/*--snd_seq_pool_new--*/
int snd_seq_pool_delete ( struct snd_seq_pool * * ppool ) ; 
/*--snd_seq_pool_delete--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_sequencer_memory_init ( void ) ; 
/*--snd_sequencer_memory_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_sequencer_memory_done ( void ) ; 
/*--snd_sequencer_memory_done--*/
void snd_seq_info_pool ( struct snd_info_buffer * buffer , struct snd_seq_pool * pool , char * space ) ; 
/*--snd_seq_info_pool--*/
int snd_seq_queue_get_cur_queues ( void ) ; 
/*--snd_seq_queue_get_cur_queues--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_seq_queues_init ( void ) ; 
/*--snd_seq_queues_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_seq_queues_delete ( void ) ; 
/*--snd_seq_queues_delete--*/
int snd_seq_queue_alloc ( int client , int locked , unsigned int info_flags ) ; 
/*--snd_seq_queue_alloc--*/
int snd_seq_queue_delete ( int client , int queueid ) ; 
/*--snd_seq_queue_delete--*/
struct snd_seq_queue * queueptr ( int queueid ) ; 
/*--queueptr--*/
struct snd_seq_queue * snd_seq_queue_find_name ( char * name ) ; 
/*--snd_seq_queue_find_name--*/
void snd_seq_check_queue ( struct snd_seq_queue * q , int atomic , int hop ) ; 
/*--snd_seq_check_queue--*/
int snd_seq_enqueue_event ( struct snd_seq_event_cell * cell , int atomic , int hop ) ; 
/*--snd_seq_enqueue_event--*/
int snd_seq_queue_check_access ( int queueid , int client ) ; 
/*--snd_seq_queue_check_access--*/
int snd_seq_queue_set_owner ( int queueid , int client , int locked ) ; 
/*--snd_seq_queue_set_owner--*/
int snd_seq_queue_timer_open ( int queueid ) ; 
/*--snd_seq_queue_timer_open--*/
int snd_seq_queue_timer_close ( int queueid ) ; 
/*--snd_seq_queue_timer_close--*/
int snd_seq_queue_timer_set_tempo ( int queueid , int client , struct snd_seq_queue_tempo * info ) ; 
/*--snd_seq_queue_timer_set_tempo--*/
int snd_seq_queue_use ( int queueid , int client , int use ) ; 
/*--snd_seq_queue_use--*/
int snd_seq_queue_is_used ( int queueid , int client ) ; 
/*--snd_seq_queue_is_used--*/
void snd_seq_queue_client_termination ( int client ) ; 
/*--snd_seq_queue_client_termination--*/
void snd_seq_queue_client_leave ( int client ) ; 
/*--snd_seq_queue_client_leave--*/
void snd_seq_queue_client_leave_cells ( int client ) ; 
/*--snd_seq_queue_client_leave_cells--*/
void snd_seq_queue_remove_cells ( int client , struct snd_seq_remove_events * info ) ; 
/*--snd_seq_queue_remove_cells--*/
int snd_seq_control_queue ( struct snd_seq_event * ev , int atomic , int hop ) ; 
/*--snd_seq_control_queue--*/
void snd_seq_info_queues_read ( struct snd_info_entry * entry , struct snd_info_buffer * buffer ) ; 
/*--snd_seq_info_queues_read--*/
struct snd_seq_fifo * snd_seq_fifo_new ( int poolsize ) ; 
/*--snd_seq_fifo_new--*/
void snd_seq_fifo_delete ( struct snd_seq_fifo * * fifo ) ; 
/*--snd_seq_fifo_delete--*/
void snd_seq_fifo_clear ( struct snd_seq_fifo * f ) ; 
/*--snd_seq_fifo_clear--*/
int snd_seq_fifo_event_in ( struct snd_seq_fifo * f , struct snd_seq_event * event ) ; 
/*--snd_seq_fifo_event_in--*/
int snd_seq_fifo_cell_out ( struct snd_seq_fifo * f , struct snd_seq_event_cell * * cellp , int nonblock ) ; 
/*--snd_seq_fifo_cell_out--*/
void snd_seq_fifo_cell_putback ( struct snd_seq_fifo * f , struct snd_seq_event_cell * cell ) ; 
/*--snd_seq_fifo_cell_putback--*/
int snd_seq_fifo_poll_wait ( struct snd_seq_fifo * f , struct file * file , poll_table * wait ) ; 
/*--snd_seq_fifo_poll_wait--*/
int snd_seq_fifo_resize ( struct snd_seq_fifo * f , int poolsize ) ; 
/*--snd_seq_fifo_resize--*/
struct snd_seq_prioq * snd_seq_prioq_new ( void ) ; 
/*--snd_seq_prioq_new--*/
void snd_seq_prioq_delete ( struct snd_seq_prioq * * fifo ) ; 
/*--snd_seq_prioq_delete--*/
int snd_seq_prioq_cell_in ( struct snd_seq_prioq * f , struct snd_seq_event_cell * cell ) ; 
/*--snd_seq_prioq_cell_in--*/
struct snd_seq_event_cell * snd_seq_prioq_cell_out ( struct snd_seq_prioq * f ) ; 
/*--snd_seq_prioq_cell_out--*/
int snd_seq_prioq_avail ( struct snd_seq_prioq * f ) ; 
/*--snd_seq_prioq_avail--*/
struct snd_seq_event_cell * snd_seq_prioq_cell_peek ( struct snd_seq_prioq * f ) ; 
/*--snd_seq_prioq_cell_peek--*/
void snd_seq_prioq_leave ( struct snd_seq_prioq * f , int client , int timestamp ) ; 
/*--snd_seq_prioq_leave--*/
void snd_seq_prioq_remove_events ( struct snd_seq_prioq * f , int client , struct snd_seq_remove_events * info ) ; 
/*--snd_seq_prioq_remove_events--*/
struct snd_seq_timer * snd_seq_timer_new ( void ) ; 
/*--snd_seq_timer_new--*/
void snd_seq_timer_delete ( struct snd_seq_timer * * tmr ) ; 
/*--snd_seq_timer_delete--*/
void snd_seq_timer_defaults ( struct snd_seq_timer * tmr ) ; 
/*--snd_seq_timer_defaults--*/
void snd_seq_timer_reset ( struct snd_seq_timer * tmr ) ; 
/*--snd_seq_timer_reset--*/
int snd_seq_timer_set_tempo ( struct snd_seq_timer * tmr , int tempo ) ; 
/*--snd_seq_timer_set_tempo--*/
int snd_seq_timer_set_ppq ( struct snd_seq_timer * tmr , int ppq ) ; 
/*--snd_seq_timer_set_ppq--*/
int snd_seq_timer_set_position_tick ( struct snd_seq_timer * tmr , snd_seq_tick_time_t position ) ; 
/*--snd_seq_timer_set_position_tick--*/
int snd_seq_timer_set_position_time ( struct snd_seq_timer * tmr , snd_seq_real_time_t position ) ; 
/*--snd_seq_timer_set_position_time--*/
int snd_seq_timer_set_skew ( struct snd_seq_timer * tmr , unsigned int skew , unsigned int base ) ; 
/*--snd_seq_timer_set_skew--*/
int snd_seq_timer_open ( struct snd_seq_queue * q ) ; 
/*--snd_seq_timer_open--*/
int snd_seq_timer_close ( struct snd_seq_queue * q ) ; 
/*--snd_seq_timer_close--*/
int snd_seq_timer_stop ( struct snd_seq_timer * tmr ) ; 
/*--snd_seq_timer_stop--*/
int snd_seq_timer_start ( struct snd_seq_timer * tmr ) ; 
/*--snd_seq_timer_start--*/
int snd_seq_timer_continue ( struct snd_seq_timer * tmr ) ; 
/*--snd_seq_timer_continue--*/
snd_seq_real_time_t snd_seq_timer_get_cur_time ( struct snd_seq_timer * tmr ) ; 
/*--snd_seq_timer_get_cur_time--*/
snd_seq_tick_time_t snd_seq_timer_get_cur_tick ( struct snd_seq_timer * tmr ) ; 
/*--snd_seq_timer_get_cur_tick--*/
void snd_seq_info_timer_read ( struct snd_info_entry * entry , struct snd_info_buffer * buffer ) ; 
/*--snd_seq_info_timer_read--*/
void snd_seq_system_broadcast ( int client , int port , int type ) ; 
/*--snd_seq_system_broadcast--*/
int snd_seq_system_notify ( int client , int port , struct snd_seq_event * ev ) ; 
/*--snd_seq_system_notify--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_seq_system_client_init ( void ) ; 
/*--snd_seq_system_client_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_seq_system_client_done ( void ) ; 
/*--snd_seq_system_client_done--*/
struct snd_seq_client_port * snd_seq_port_use_ptr ( struct snd_seq_client * client , int num ) ; 
/*--snd_seq_port_use_ptr--*/
struct snd_seq_client_port * snd_seq_port_query_nearest ( struct snd_seq_client * client , struct snd_seq_port_info * pinfo ) ; 
/*--snd_seq_port_query_nearest--*/
struct snd_seq_client_port * snd_seq_create_port ( struct snd_seq_client * client , int port ) ; 
/*--snd_seq_create_port--*/
int snd_seq_delete_port ( struct snd_seq_client * client , int port ) ; 
/*--snd_seq_delete_port--*/
int snd_seq_delete_all_ports ( struct snd_seq_client * client ) ; 
/*--snd_seq_delete_all_ports--*/
int snd_seq_set_port_info ( struct snd_seq_client_port * port , struct snd_seq_port_info * info ) ; 
/*--snd_seq_set_port_info--*/
int snd_seq_get_port_info ( struct snd_seq_client_port * port , struct snd_seq_port_info * info ) ; 
/*--snd_seq_get_port_info--*/
int snd_seq_port_connect ( struct snd_seq_client * connector , struct snd_seq_client * src_client , struct snd_seq_client_port * src_port , struct snd_seq_client * dest_client , struct snd_seq_client_port * dest_port , struct snd_seq_port_subscribe * info ) ; 
/*--snd_seq_port_connect--*/
int snd_seq_port_disconnect ( struct snd_seq_client * connector , struct snd_seq_client * src_client , struct snd_seq_client_port * src_port , struct snd_seq_client * dest_client , struct snd_seq_client_port * dest_port , struct snd_seq_port_subscribe * info ) ; 
/*--snd_seq_port_disconnect--*/
struct snd_seq_subscribers * snd_seq_port_get_subscription ( struct snd_seq_port_subs_info * src_grp , struct snd_seq_addr * dest_addr ) ; 
/*--snd_seq_port_get_subscription--*/
int snd_seq_event_port_attach ( int client , struct snd_seq_port_callback * pcbp , int cap , int type , int midi_channels , int midi_voices , char * portname ) ; 
/*--snd_seq_event_port_attach--*/
int snd_seq_event_port_detach ( int client , int port ) ; 
/*--snd_seq_event_port_detach--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_seq_info_init ( void ) ; 
/*--snd_seq_info_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_seq_info_done ( void ) ; 
/*--snd_seq_info_done--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_seq_oss_create_client ( void ) ; 
/*--snd_seq_oss_create_client--*/
int snd_seq_oss_delete_client ( void ) ; 
/*--snd_seq_oss_delete_client--*/
int snd_seq_oss_open ( struct file * file , int level ) ; 
/*--snd_seq_oss_open--*/
void snd_seq_oss_release ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_release--*/
void snd_seq_oss_drain_write ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_drain_write--*/
void snd_seq_oss_reset ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_reset--*/
char * enabled_str ( int bool ) ; 
/*--enabled_str--*/
void snd_seq_oss_system_info_read ( struct snd_info_buffer * buf ) ; 
/*--snd_seq_oss_system_info_read--*/
struct seq_oss_timer * snd_seq_oss_timer_new ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_timer_new--*/
void snd_seq_oss_timer_delete ( struct seq_oss_timer * rec ) ; 
/*--snd_seq_oss_timer_delete--*/
int snd_seq_oss_process_timer_event ( struct seq_oss_timer * rec , union evrec * ev ) ; 
/*--snd_seq_oss_process_timer_event--*/
int snd_seq_oss_timer_start ( struct seq_oss_timer * timer ) ; 
/*--snd_seq_oss_timer_start--*/
int snd_seq_oss_timer_stop ( struct seq_oss_timer * timer ) ; 
/*--snd_seq_oss_timer_stop--*/
int snd_seq_oss_timer_continue ( struct seq_oss_timer * timer ) ; 
/*--snd_seq_oss_timer_continue--*/
int snd_seq_oss_timer_tempo ( struct seq_oss_timer * timer , int value ) ; 
/*--snd_seq_oss_timer_tempo--*/
int snd_seq_oss_timer_ioctl ( struct seq_oss_timer * timer , unsigned int cmd , int * arg ) ; 
/*--snd_seq_oss_timer_ioctl--*/
int snd_seq_oss_ioctl ( struct seq_oss_devinfo * dp , unsigned int cmd , unsigned long carg ) ; 
/*--snd_seq_oss_ioctl--*/
int snd_seq_oss_process_event ( struct seq_oss_devinfo * dp , union evrec * q , struct snd_seq_event * ev ) ; 
/*--snd_seq_oss_process_event--*/
int snd_seq_oss_event_input ( struct snd_seq_event * ev , int direct , void * private_data , int atomic , int hop ) ; 
/*--snd_seq_oss_event_input--*/
int snd_seq_oss_read ( struct seq_oss_devinfo * dp , char * buf , int count ) ; 
/*--snd_seq_oss_read--*/
int snd_seq_oss_write ( struct seq_oss_devinfo * dp , const char * buf , int count , struct file * opt ) ; 
/*--snd_seq_oss_write--*/
unsigned int snd_seq_oss_poll ( struct seq_oss_devinfo * dp , struct file * file , poll_table * wait ) ; 
/*--snd_seq_oss_poll--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_seq_oss_synth_init ( void ) ; 
/*--snd_seq_oss_synth_init--*/
int snd_seq_oss_synth_register ( struct snd_seq_device * dev ) ; 
/*--snd_seq_oss_synth_register--*/
int snd_seq_oss_synth_unregister ( struct snd_seq_device * dev ) ; 
/*--snd_seq_oss_synth_unregister--*/
void snd_seq_oss_synth_setup ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_synth_setup--*/
void snd_seq_oss_synth_setup_midi ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_synth_setup_midi--*/
void snd_seq_oss_synth_cleanup ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_synth_cleanup--*/
void snd_seq_oss_synth_reset ( struct seq_oss_devinfo * dp , int dev ) ; 
/*--snd_seq_oss_synth_reset--*/
int snd_seq_oss_synth_load_patch ( struct seq_oss_devinfo * dp , int dev , int fmt , const char * buf , int p , int c ) ; 
/*--snd_seq_oss_synth_load_patch--*/
int snd_seq_oss_synth_is_valid ( struct seq_oss_devinfo * dp , int dev ) ; 
/*--snd_seq_oss_synth_is_valid--*/
int snd_seq_oss_synth_sysex ( struct seq_oss_devinfo * dp , int dev , unsigned char * buf , struct snd_seq_event * ev ) ; 
/*--snd_seq_oss_synth_sysex--*/
int snd_seq_oss_synth_addr ( struct seq_oss_devinfo * dp , int dev , struct snd_seq_event * ev ) ; 
/*--snd_seq_oss_synth_addr--*/
int snd_seq_oss_synth_ioctl ( struct seq_oss_devinfo * dp , int dev , unsigned int cmd , unsigned long addr ) ; 
/*--snd_seq_oss_synth_ioctl--*/
int snd_seq_oss_synth_raw_event ( struct seq_oss_devinfo * dp , int dev , unsigned char * data , struct snd_seq_event * ev ) ; 
/*--snd_seq_oss_synth_raw_event--*/
int snd_seq_oss_synth_make_info ( struct seq_oss_devinfo * dp , int dev , struct synth_info * inf ) ; 
/*--snd_seq_oss_synth_make_info--*/
void snd_seq_oss_synth_info_read ( struct snd_info_buffer * buf ) ; 
/*--snd_seq_oss_synth_info_read--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_seq_oss_midi_lookup_ports ( int client ) ; 
/*--snd_seq_oss_midi_lookup_ports--*/
int snd_seq_oss_midi_check_new_port ( struct snd_seq_port_info * pinfo ) ; 
/*--snd_seq_oss_midi_check_new_port--*/
int snd_seq_oss_midi_check_exit_port ( int client , int port ) ; 
/*--snd_seq_oss_midi_check_exit_port--*/
void snd_seq_oss_midi_clear_all ( void ) ; 
/*--snd_seq_oss_midi_clear_all--*/
void snd_seq_oss_midi_setup ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_midi_setup--*/
void snd_seq_oss_midi_cleanup ( struct seq_oss_devinfo * dp ) ; 
/*--snd_seq_oss_midi_cleanup--*/
void snd_seq_oss_midi_open_all ( struct seq_oss_devinfo * dp , int file_mode ) ; 
/*--snd_seq_oss_midi_open_all--*/
int snd_seq_oss_midi_open ( struct seq_oss_devinfo * dp , int dev , int fmode ) ; 
/*--snd_seq_oss_midi_open--*/
int snd_seq_oss_midi_close ( struct seq_oss_devinfo * dp , int dev ) ; 
/*--snd_seq_oss_midi_close--*/
int snd_seq_oss_midi_filemode ( struct seq_oss_devinfo * dp , int dev ) ; 
/*--snd_seq_oss_midi_filemode--*/
void snd_seq_oss_midi_reset ( struct seq_oss_devinfo * dp , int dev ) ; 
/*--snd_seq_oss_midi_reset--*/
void snd_seq_oss_midi_get_addr ( struct seq_oss_devinfo * dp , int dev , struct snd_seq_addr * addr ) ; 
/*--snd_seq_oss_midi_get_addr--*/
int snd_seq_oss_midi_input ( struct snd_seq_event * ev , int direct , void * private_data ) ; 
/*--snd_seq_oss_midi_input--*/
int snd_seq_oss_midi_putc ( struct seq_oss_devinfo * dp , int dev , unsigned char c , struct snd_seq_event * ev ) ; 
/*--snd_seq_oss_midi_putc--*/
int snd_seq_oss_midi_make_info ( struct seq_oss_devinfo * dp , int dev , struct midi_info * inf ) ; 
/*--snd_seq_oss_midi_make_info--*/
void snd_seq_oss_midi_info_read ( struct snd_info_buffer * buf ) ; 
/*--snd_seq_oss_midi_info_read--*/
struct seq_oss_readq * snd_seq_oss_readq_new ( struct seq_oss_devinfo * dp , int maxlen ) ; 
/*--snd_seq_oss_readq_new--*/
void snd_seq_oss_readq_delete ( struct seq_oss_readq * q ) ; 
/*--snd_seq_oss_readq_delete--*/
void snd_seq_oss_readq_clear ( struct seq_oss_readq * q ) ; 
/*--snd_seq_oss_readq_clear--*/
int snd_seq_oss_readq_puts ( struct seq_oss_readq * q , int dev , unsigned char * data , int len ) ; 
/*--snd_seq_oss_readq_puts--*/
int snd_seq_oss_readq_put_event ( struct seq_oss_readq * q , union evrec * ev ) ; 
/*--snd_seq_oss_readq_put_event--*/
int snd_seq_oss_readq_pick ( struct seq_oss_readq * q , union evrec * rec ) ; 
/*--snd_seq_oss_readq_pick--*/
void snd_seq_oss_readq_wait ( struct seq_oss_readq * q ) ; 
/*--snd_seq_oss_readq_wait--*/
void snd_seq_oss_readq_free ( struct seq_oss_readq * q ) ; 
/*--snd_seq_oss_readq_free--*/
unsigned int snd_seq_oss_readq_poll ( struct seq_oss_readq * q , struct file * file , poll_table * wait ) ; 
/*--snd_seq_oss_readq_poll--*/
int snd_seq_oss_readq_put_timestamp ( struct seq_oss_readq * q , unsigned long curt , int seq_mode ) ; 
/*--snd_seq_oss_readq_put_timestamp--*/
void snd_seq_oss_readq_info_read ( struct seq_oss_readq * q , struct snd_info_buffer * buf ) ; 
/*--snd_seq_oss_readq_info_read--*/
struct seq_oss_writeq * snd_seq_oss_writeq_new ( struct seq_oss_devinfo * dp , int maxlen ) ; 
/*--snd_seq_oss_writeq_new--*/
void snd_seq_oss_writeq_delete ( struct seq_oss_writeq * q ) ; 
/*--snd_seq_oss_writeq_delete--*/
void snd_seq_oss_writeq_clear ( struct seq_oss_writeq * q ) ; 
/*--snd_seq_oss_writeq_clear--*/
int snd_seq_oss_writeq_sync ( struct seq_oss_writeq * q ) ; 
/*--snd_seq_oss_writeq_sync--*/
void snd_seq_oss_writeq_wakeup ( struct seq_oss_writeq * q , abstime_t time ) ; 
/*--snd_seq_oss_writeq_wakeup--*/
int snd_seq_oss_writeq_get_free_size ( struct seq_oss_writeq * q ) ; 
/*--snd_seq_oss_writeq_get_free_size--*/
void snd_seq_oss_writeq_set_output ( struct seq_oss_writeq * q , int val ) ; 
/*--snd_seq_oss_writeq_set_output--*/
int snd_hwdep_new ( struct snd_card * card , char * id , int device , struct snd_hwdep * * rhwdep ) ; 
/*--snd_hwdep_new--*/
void * snd_malloc_pages ( size_t size , gfp_t gfp_flags ) ; 
/*--snd_malloc_pages--*/
void snd_free_pages ( void * ptr , size_t size ) ; 
/*--snd_free_pages--*/
int snd_dma_alloc_pages ( int type , struct device * device , size_t size , struct snd_dma_buffer * dmab ) ; 
/*--snd_dma_alloc_pages--*/
int snd_dma_alloc_pages_fallback ( int type , struct device * device , size_t size , struct snd_dma_buffer * dmab ) ; 
/*--snd_dma_alloc_pages_fallback--*/
void snd_dma_free_pages ( struct snd_dma_buffer * dmab ) ; 
/*--snd_dma_free_pages--*/
size_t snd_dma_get_reserved_buf ( struct snd_dma_buffer * dmab , unsigned int id ) ; 
/*--snd_dma_get_reserved_buf--*/
int snd_dma_reserve_buf ( struct snd_dma_buffer * dmab , unsigned int id ) ; 
/*--snd_dma_reserve_buf--*/
int snd_free_sgbuf_pages ( struct snd_dma_buffer * dmab ) ; 
/*--snd_free_sgbuf_pages--*/
void * snd_malloc_sgbuf_pages ( struct device * device , size_t size , struct snd_dma_buffer * dmab , size_t * res_size ) ; 
/*--snd_malloc_sgbuf_pages--*/
const char * snd_pcm_format_name ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_name--*/
int snd_pcm_new_stream ( struct snd_pcm * pcm , int stream , int substream_count ) ; 
/*--snd_pcm_new_stream--*/
int snd_pcm_new ( struct snd_card * card , const char * id , int device , int playback_count , int capture_count , struct snd_pcm * * rpcm ) ; 
/*--snd_pcm_new--*/
int snd_pcm_attach_substream ( struct snd_pcm * pcm , int stream , struct file * file , struct snd_pcm_substream * * rsubstream ) ; 
/*--snd_pcm_attach_substream--*/
void snd_pcm_detach_substream ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_detach_substream--*/
int snd_pcm_notify ( struct snd_pcm_notify * notify , int nfree ) ; 
/*--snd_pcm_notify--*/
int snd_pcm_info ( struct snd_pcm_substream * substream , struct snd_pcm_info * info ) ; 
/*--snd_pcm_info--*/
int snd_pcm_info_user ( struct snd_pcm_substream * substream , struct snd_pcm_info * _info ) ; 
/*--snd_pcm_info_user--*/
int snd_pcm_hw_refine ( struct snd_pcm_substream * substream , struct snd_pcm_hw_params * params ) ; 
/*--snd_pcm_hw_refine--*/
int snd_pcm_status ( struct snd_pcm_substream * substream , struct snd_pcm_status * status ) ; 
/*--snd_pcm_status--*/
int snd_pcm_start ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_start--*/
int snd_pcm_stop ( struct snd_pcm_substream * substream , int state ) ; 
/*--snd_pcm_stop--*/
int snd_pcm_drain_done ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_drain_done--*/
int snd_pcm_suspend ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_suspend--*/
int snd_pcm_suspend_all ( struct snd_pcm * pcm ) ; 
/*--snd_pcm_suspend_all--*/
int snd_pcm_hw_constraints_init ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_hw_constraints_init--*/
int snd_pcm_hw_constraints_complete ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_hw_constraints_complete--*/
void snd_pcm_release_substream ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_release_substream--*/
int snd_pcm_open_substream ( struct snd_pcm * pcm , int stream , struct file * file , struct snd_pcm_substream * * rsubstream ) ; 
/*--snd_pcm_open_substream--*/
int snd_pcm_kernel_ioctl ( struct snd_pcm_substream * substream , unsigned int cmd , void * arg ) ; 
/*--snd_pcm_kernel_ioctl--*/
int snd_pcm_lib_mmap_iomem ( struct snd_pcm_substream * substream , struct vm_area_struct * area ) ; 
/*--snd_pcm_lib_mmap_iomem--*/
int snd_pcm_lib_mmap_noncached ( struct snd_pcm_substream * substream , struct vm_area_struct * area ) ; 
/*--snd_pcm_lib_mmap_noncached--*/
int snd_pcm_mmap_data ( struct snd_pcm_substream * substream , struct file * file , struct vm_area_struct * area ) ; 
/*--snd_pcm_mmap_data--*/
void snd_pcm_playback_silence ( struct snd_pcm_substream * substream , snd_pcm_uframes_t new_hw_ptr ) ; 
/*--snd_pcm_playback_silence--*/
int snd_pcm_update_state ( struct snd_pcm_substream * substream , struct snd_pcm_runtime * runtime ) ; 
/*--snd_pcm_update_state--*/
int snd_pcm_update_hw_ptr ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_update_hw_ptr--*/
void snd_pcm_set_ops ( struct snd_pcm * pcm , int direction , struct snd_pcm_ops * ops ) ; 
/*--snd_pcm_set_ops--*/
void snd_pcm_set_sync ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_set_sync--*/
int snd_interval_refine ( struct snd_interval * i , const struct snd_interval * v ) ; 
/*--snd_interval_refine--*/
void snd_interval_mul ( const struct snd_interval * a , const struct snd_interval * b , struct snd_interval * c ) ; 
/*--snd_interval_mul--*/
void snd_interval_div ( const struct snd_interval * a , const struct snd_interval * b , struct snd_interval * c ) ; 
/*--snd_interval_div--*/
void snd_interval_muldivk ( const struct snd_interval * a , const struct snd_interval * b , unsigned int k , struct snd_interval * c ) ; 
/*--snd_interval_muldivk--*/
void snd_interval_mulkdiv ( const struct snd_interval * a , unsigned int k , const struct snd_interval * b , struct snd_interval * c ) ; 
/*--snd_interval_mulkdiv--*/
int snd_interval_ratnum ( struct snd_interval * i , unsigned int rats_count , struct snd_ratnum * rats , unsigned int * nump , unsigned int * denp ) ; 
/*--snd_interval_ratnum--*/
int snd_interval_list ( struct snd_interval * i , unsigned int count , unsigned int * list , unsigned int mask ) ; 
/*--snd_interval_list--*/
int snd_pcm_hw_rule_add ( struct snd_pcm_runtime * runtime , unsigned int cond , int var , snd_pcm_hw_rule_func_t func , void * private , int dep , ... ) ; 
/*--snd_pcm_hw_rule_add--*/
int snd_pcm_hw_constraint_mask ( struct snd_pcm_runtime * runtime , snd_pcm_hw_param_t var , u_int32_t mask ) ; 
/*--snd_pcm_hw_constraint_mask--*/
int snd_pcm_hw_constraint_mask64 ( struct snd_pcm_runtime * runtime , snd_pcm_hw_param_t var , u_int64_t mask ) ; 
/*--snd_pcm_hw_constraint_mask64--*/
int snd_pcm_hw_constraint_integer ( struct snd_pcm_runtime * runtime , snd_pcm_hw_param_t var ) ; 
/*--snd_pcm_hw_constraint_integer--*/
int snd_pcm_hw_constraint_minmax ( struct snd_pcm_runtime * runtime , snd_pcm_hw_param_t var , unsigned int min , unsigned int max ) ; 
/*--snd_pcm_hw_constraint_minmax--*/
int snd_pcm_hw_constraint_list ( struct snd_pcm_runtime * runtime , unsigned int cond , snd_pcm_hw_param_t var , struct snd_pcm_hw_constraint_list * l ) ; 
/*--snd_pcm_hw_constraint_list--*/
int snd_pcm_hw_constraint_ratnums ( struct snd_pcm_runtime * runtime , unsigned int cond , snd_pcm_hw_param_t var , struct snd_pcm_hw_constraint_ratnums * r ) ; 
/*--snd_pcm_hw_constraint_ratnums--*/
int snd_pcm_hw_constraint_ratdens ( struct snd_pcm_runtime * runtime , unsigned int cond , snd_pcm_hw_param_t var , struct snd_pcm_hw_constraint_ratdens * r ) ; 
/*--snd_pcm_hw_constraint_ratdens--*/
int snd_pcm_hw_constraint_msbits ( struct snd_pcm_runtime * runtime , unsigned int cond , unsigned int width , unsigned int msbits ) ; 
/*--snd_pcm_hw_constraint_msbits--*/
int snd_pcm_hw_constraint_step ( struct snd_pcm_runtime * runtime , unsigned int cond , snd_pcm_hw_param_t var , unsigned long step ) ; 
/*--snd_pcm_hw_constraint_step--*/
int snd_pcm_hw_constraint_pow2 ( struct snd_pcm_runtime * runtime , unsigned int cond , snd_pcm_hw_param_t var ) ; 
/*--snd_pcm_hw_constraint_pow2--*/
void _snd_pcm_hw_params_any ( struct snd_pcm_hw_params * params ) ; 
/*--_snd_pcm_hw_params_any--*/
int snd_pcm_hw_param_value ( const struct snd_pcm_hw_params * params , snd_pcm_hw_param_t var , int * dir ) ; 
/*--snd_pcm_hw_param_value--*/
void _snd_pcm_hw_param_setempty ( struct snd_pcm_hw_params * params , snd_pcm_hw_param_t var ) ; 
/*--_snd_pcm_hw_param_setempty--*/
int snd_pcm_hw_param_first ( struct snd_pcm_substream * pcm , struct snd_pcm_hw_params * params , snd_pcm_hw_param_t var , int * dir ) ; 
/*--snd_pcm_hw_param_first--*/
int snd_pcm_hw_param_last ( struct snd_pcm_substream * pcm , struct snd_pcm_hw_params * params , snd_pcm_hw_param_t var , int * dir ) ; 
/*--snd_pcm_hw_param_last--*/
int snd_pcm_hw_params_choose ( struct snd_pcm_substream * pcm , struct snd_pcm_hw_params * params ) ; 
/*--snd_pcm_hw_params_choose--*/
int snd_pcm_lib_ioctl ( struct snd_pcm_substream * substream , unsigned int cmd , void * arg ) ; 
/*--snd_pcm_lib_ioctl--*/
void snd_pcm_period_elapsed ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_period_elapsed--*/
snd_pcm_sframes_t snd_pcm_lib_write ( struct snd_pcm_substream * substream , const void * buf , snd_pcm_uframes_t size ) ; 
/*--snd_pcm_lib_write--*/
snd_pcm_sframes_t snd_pcm_lib_writev ( struct snd_pcm_substream * substream , void * * bufs , snd_pcm_uframes_t frames ) ; 
/*--snd_pcm_lib_writev--*/
snd_pcm_sframes_t snd_pcm_lib_read ( struct snd_pcm_substream * substream , void * buf , snd_pcm_uframes_t size ) ; 
/*--snd_pcm_lib_read--*/
snd_pcm_sframes_t snd_pcm_lib_readv ( struct snd_pcm_substream * substream , void * * bufs , snd_pcm_uframes_t frames ) ; 
/*--snd_pcm_lib_readv--*/
void snd_pcm_timer_resolution_change ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_timer_resolution_change--*/
void snd_pcm_timer_init ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_timer_init--*/
void snd_pcm_timer_done ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_timer_done--*/
int snd_pcm_format_signed ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_signed--*/
int snd_pcm_format_unsigned ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_unsigned--*/
int snd_pcm_format_linear ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_linear--*/
int snd_pcm_format_little_endian ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_little_endian--*/
int snd_pcm_format_big_endian ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_big_endian--*/
int snd_pcm_format_width ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_width--*/
int snd_pcm_format_physical_width ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_physical_width--*/
ssize_t snd_pcm_format_size ( snd_pcm_format_t format , size_t samples ) ; 
/*--snd_pcm_format_size--*/
const unsigned char * snd_pcm_format_silence_64 ( snd_pcm_format_t format ) ; 
/*--snd_pcm_format_silence_64--*/
int snd_pcm_format_set_silence ( snd_pcm_format_t format , void * data , unsigned int samples ) ; 
/*--snd_pcm_format_set_silence--*/
int snd_pcm_limit_hw_rates ( struct snd_pcm_runtime * runtime ) ; 
/*--snd_pcm_limit_hw_rates--*/
unsigned int snd_pcm_rate_to_rate_bit ( unsigned int rate ) ; 
/*--snd_pcm_rate_to_rate_bit--*/
int snd_pcm_lib_preallocate_free ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_lib_preallocate_free--*/
int snd_pcm_lib_preallocate_free_for_all ( struct snd_pcm * pcm ) ; 
/*--snd_pcm_lib_preallocate_free_for_all--*/
int snd_pcm_lib_preallocate_pages ( struct snd_pcm_substream * substream , int type , struct device * data , size_t size , size_t max ) ; 
/*--snd_pcm_lib_preallocate_pages--*/
int snd_pcm_lib_preallocate_pages_for_all ( struct snd_pcm * pcm , int type , void * data , size_t size , size_t max ) ; 
/*--snd_pcm_lib_preallocate_pages_for_all--*/
struct page * snd_pcm_sgbuf_ops_page ( struct snd_pcm_substream * substream , unsigned long offset ) ; 
/*--snd_pcm_sgbuf_ops_page--*/
unsigned int snd_pcm_sgbuf_get_chunk_size ( struct snd_pcm_substream * substream , unsigned int ofs , unsigned int size ) ; 
/*--snd_pcm_sgbuf_get_chunk_size--*/
int snd_pcm_lib_malloc_pages ( struct snd_pcm_substream * substream , size_t size ) ; 
/*--snd_pcm_lib_malloc_pages--*/
int snd_pcm_lib_free_pages ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_lib_free_pages--*/
int _snd_pcm_lib_alloc_vmalloc_buffer ( struct snd_pcm_substream * substream , size_t size , gfp_t gfp_flags ) ; 
/*--_snd_pcm_lib_alloc_vmalloc_buffer--*/
int snd_pcm_lib_free_vmalloc_buffer ( struct snd_pcm_substream * substream ) ; 
/*--snd_pcm_lib_free_vmalloc_buffer--*/
struct page * snd_pcm_lib_get_vmalloc_page ( struct snd_pcm_substream * substream , unsigned long offset ) ; 
/*--snd_pcm_lib_get_vmalloc_page--*/
int snd_rawmidi_drop_output ( struct snd_rawmidi_substream * substream ) ; 
/*--snd_rawmidi_drop_output--*/
int snd_rawmidi_drain_output ( struct snd_rawmidi_substream * substream ) ; 
/*--snd_rawmidi_drain_output--*/
int snd_rawmidi_drain_input ( struct snd_rawmidi_substream * substream ) ; 
/*--snd_rawmidi_drain_input--*/
int snd_rawmidi_kernel_open ( struct snd_card * card , int device , int subdevice , int mode , struct snd_rawmidi_file * rfile ) ; 
/*--snd_rawmidi_kernel_open--*/
int snd_rawmidi_kernel_release ( struct snd_rawmidi_file * rfile ) ; 
/*--snd_rawmidi_kernel_release--*/
int snd_rawmidi_info_select ( struct snd_card * card , struct snd_rawmidi_info * info ) ; 
/*--snd_rawmidi_info_select--*/
int snd_rawmidi_output_params ( struct snd_rawmidi_substream * substream , struct snd_rawmidi_params * params ) ; 
/*--snd_rawmidi_output_params--*/
int snd_rawmidi_input_params ( struct snd_rawmidi_substream * substream , struct snd_rawmidi_params * params ) ; 
/*--snd_rawmidi_input_params--*/
int snd_rawmidi_receive ( struct snd_rawmidi_substream * substream , const unsigned char * buffer , int count ) ; 
/*--snd_rawmidi_receive--*/
long snd_rawmidi_kernel_read ( struct snd_rawmidi_substream * substream , unsigned char * buf , long count ) ; 
/*--snd_rawmidi_kernel_read--*/
int snd_rawmidi_transmit_empty ( struct snd_rawmidi_substream * substream ) ; 
/*--snd_rawmidi_transmit_empty--*/
int snd_rawmidi_transmit_peek ( struct snd_rawmidi_substream * substream , unsigned char * buffer , int count ) ; 
/*--snd_rawmidi_transmit_peek--*/
int snd_rawmidi_transmit_ack ( struct snd_rawmidi_substream * substream , int count ) ; 
/*--snd_rawmidi_transmit_ack--*/
int snd_rawmidi_transmit ( struct snd_rawmidi_substream * substream , unsigned char * buffer , int count ) ; 
/*--snd_rawmidi_transmit--*/
long snd_rawmidi_kernel_write ( struct snd_rawmidi_substream * substream , const unsigned char * buf , long count ) ; 
/*--snd_rawmidi_kernel_write--*/
int snd_rawmidi_new ( struct snd_card * card , char * id , int device , int output_count , int input_count , struct snd_rawmidi * * rrawmidi ) ; 
/*--snd_rawmidi_new--*/
void snd_rawmidi_set_ops ( struct snd_rawmidi * rmidi , int stream , struct snd_rawmidi_ops * ops ) ; 
/*--snd_rawmidi_set_ops--*/
int snd_timer_open ( struct snd_timer_instance * * ti , char * owner , struct snd_timer_id * tid , unsigned int slave_id ) ; 
/*--snd_timer_open--*/
int snd_timer_close ( struct snd_timer_instance * timeri ) ; 
/*--snd_timer_close--*/
unsigned long snd_timer_resolution ( struct snd_timer_instance * timeri ) ; 
/*--snd_timer_resolution--*/
int snd_timer_start ( struct snd_timer_instance * timeri , unsigned int ticks ) ; 
/*--snd_timer_start--*/
int snd_timer_stop ( struct snd_timer_instance * timeri ) ; 
/*--snd_timer_stop--*/
int snd_timer_continue ( struct snd_timer_instance * timeri ) ; 
/*--snd_timer_continue--*/
int snd_timer_pause ( struct snd_timer_instance * timeri ) ; 
/*--snd_timer_pause--*/
void snd_timer_interrupt ( struct snd_timer * timer , unsigned long ticks_left ) ; 
/*--snd_timer_interrupt--*/
int snd_timer_new ( struct snd_card * card , char * id , struct snd_timer_id * tid , struct snd_timer * * rtimer ) ; 
/*--snd_timer_new--*/
void snd_timer_notify ( struct snd_timer * timer , int event , struct timespec * tstamp ) ; 
/*--snd_timer_notify--*/
int snd_timer_global_new ( char * id , int device , struct snd_timer * * rtimer ) ; 
/*--snd_timer_global_new--*/
int snd_timer_global_free ( struct snd_timer * timer ) ; 
/*--snd_timer_global_free--*/
int snd_timer_global_register ( struct snd_timer * timer ) ; 
/*--snd_timer_global_register--*/
void snd_request_card ( int card ) ; 
/*--snd_request_card--*/
void * snd_lookup_minor_data ( unsigned int minor , int type ) ; 
/*--snd_lookup_minor_data--*/
int snd_register_device_for_dev ( int type , struct snd_card * card , int dev , const struct file_operations * f_ops , void * private_data , const char * name , struct device * device ) ; 
/*--snd_register_device_for_dev--*/
int snd_unregister_device ( int type , struct snd_card * card , int dev ) ; 
/*--snd_unregister_device--*/
int snd_add_device_sysfs_file ( int type , struct snd_card * card , int dev , struct device_attribute * attr ) ; 
/*--snd_add_device_sysfs_file--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_minor_info_init ( void ) ; 
/*--snd_minor_info_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_minor_info_done ( void ) ; 
/*--snd_minor_info_done--*/
int snd_card_create ( int idx , const char * xid , struct module * module , int extra_size , struct snd_card * * card_ret ) ; 
/*--snd_card_create--*/
int snd_card_locked ( int card ) ; 
/*--snd_card_locked--*/
int snd_card_disconnect ( struct snd_card * card ) ; 
/*--snd_card_disconnect--*/
int snd_card_free_when_closed ( struct snd_card * card ) ; 
/*--snd_card_free_when_closed--*/
int snd_card_free ( struct snd_card * card ) ; 
/*--snd_card_free--*/
void snd_card_set_id ( struct snd_card * card , const char * nid ) ; 
/*--snd_card_set_id--*/
int snd_card_register ( struct snd_card * card ) ; 
/*--snd_card_register--*/
void snd_card_info_read_oss ( struct snd_info_buffer * buffer ) ; 
/*--snd_card_info_read_oss--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_card_info_init ( void ) ; 
/*--snd_card_info_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_card_info_done ( void ) ; 
/*--snd_card_info_done--*/
int snd_component_add ( struct snd_card * card , const char * component ) ; 
/*--snd_component_add--*/
int snd_card_file_add ( struct snd_card * card , struct file * file ) ; 
/*--snd_card_file_add--*/
int snd_card_file_remove ( struct snd_card * card , struct file * file ) ; 
/*--snd_card_file_remove--*/
int snd_power_wait ( struct snd_card * card , unsigned int power_state ) ; 
/*--snd_power_wait--*/
int copy_to_user_fromio ( void * dst , const volatile void * src , size_t count ) ; 
/*--copy_to_user_fromio--*/
int copy_from_user_toio ( volatile void * dst , const void * src , size_t count ) ; 
/*--copy_from_user_toio--*/
int snd_info_check_reserved_words ( const char * str ) ; 
/*--snd_info_check_reserved_words--*/
int snd_iprintf ( struct snd_info_buffer * buffer , const char * fmt , ... ) ; 
/*--snd_iprintf--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_info_init ( void ) ; 
/*--snd_info_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_info_done ( void ) ; 
/*--snd_info_done--*/
int snd_info_card_create ( struct snd_card * card ) ; 
/*--snd_info_card_create--*/
int snd_info_card_register ( struct snd_card * card ) ; 
/*--snd_info_card_register--*/
void snd_info_card_id_change ( struct snd_card * card ) ; 
/*--snd_info_card_id_change--*/
void snd_info_card_disconnect ( struct snd_card * card ) ; 
/*--snd_info_card_disconnect--*/
int snd_info_card_free ( struct snd_card * card ) ; 
/*--snd_info_card_free--*/
int snd_info_get_line ( struct snd_info_buffer * buffer , char * line , int len ) ; 
/*--snd_info_get_line--*/
const char * snd_info_get_str ( char * dest , const char * src , int len ) ; 
/*--snd_info_get_str--*/
struct snd_info_entry * snd_info_create_module_entry ( struct module * module , const char * name , struct snd_info_entry * parent ) ; 
/*--snd_info_create_module_entry--*/
struct snd_info_entry * snd_info_create_card_entry ( struct snd_card * card , const char * name , struct snd_info_entry * parent ) ; 
/*--snd_info_create_card_entry--*/
int snd_card_proc_new ( struct snd_card * card , const char * name , struct snd_info_entry * * entryp ) ; 
/*--snd_card_proc_new--*/
void snd_info_free_entry ( struct snd_info_entry * entry ) ; 
/*--snd_info_free_entry--*/
int snd_info_register ( struct snd_info_entry * entry ) ; 
/*--snd_info_register--*/
void snd_ctl_notify ( struct snd_card * card , unsigned int mask , struct snd_ctl_elem_id * id ) ; 
/*--snd_ctl_notify--*/
struct snd_kcontrol * snd_ctl_new1 ( const struct snd_kcontrol_new * ncontrol , void * private_data ) ; 
/*--snd_ctl_new1--*/
void snd_ctl_free_one ( struct snd_kcontrol * kcontrol ) ; 
/*--snd_ctl_free_one--*/
int snd_ctl_add ( struct snd_card * card , struct snd_kcontrol * kcontrol ) ; 
/*--snd_ctl_add--*/
int snd_ctl_remove ( struct snd_card * card , struct snd_kcontrol * kcontrol ) ; 
/*--snd_ctl_remove--*/
int snd_ctl_remove_id ( struct snd_card * card , struct snd_ctl_elem_id * id ) ; 
/*--snd_ctl_remove_id--*/
int snd_ctl_rename_id ( struct snd_card * card , struct snd_ctl_elem_id * src_id , struct snd_ctl_elem_id * dst_id ) ; 
/*--snd_ctl_rename_id--*/
struct snd_kcontrol * snd_ctl_find_numid ( struct snd_card * card , unsigned int numid ) ; 
/*--snd_ctl_find_numid--*/
struct snd_kcontrol * snd_ctl_find_id ( struct snd_card * card , struct snd_ctl_elem_id * id ) ; 
/*--snd_ctl_find_id--*/
int snd_ctl_register_ioctl ( snd_kctl_ioctl_func_t fcn ) ; 
/*--snd_ctl_register_ioctl--*/
int snd_ctl_register_ioctl_compat ( snd_kctl_ioctl_func_t fcn ) ; 
/*--snd_ctl_register_ioctl_compat--*/
int snd_ctl_unregister_ioctl ( snd_kctl_ioctl_func_t fcn ) ; 
/*--snd_ctl_unregister_ioctl--*/
int snd_ctl_unregister_ioctl_compat ( snd_kctl_ioctl_func_t fcn ) ; 
/*--snd_ctl_unregister_ioctl_compat--*/
int snd_ctl_create ( struct snd_card * card ) ; 
/*--snd_ctl_create--*/
int snd_ctl_boolean_mono_info ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_ctl_boolean_mono_info--*/
int snd_ctl_boolean_stereo_info ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_ctl_boolean_stereo_info--*/
void release_and_free_resource ( struct resource * res ) ; 
/*--release_and_free_resource--*/
const struct snd_pci_quirk * snd_pci_quirk_lookup_id ( u16 vendor , u16 device , const struct snd_pci_quirk * list ) ; 
/*--snd_pci_quirk_lookup_id--*/
const struct snd_pci_quirk * snd_pci_quirk_lookup ( struct pci_dev * pci , const struct snd_pci_quirk * list ) ; 
/*--snd_pci_quirk_lookup--*/
int snd_device_new ( struct snd_card * card , snd_device_type_t type , void * device_data , struct snd_device_ops * ops ) ; 
/*--snd_device_new--*/
int snd_device_free ( struct snd_card * card , void * device_data ) ; 
/*--snd_device_free--*/
int snd_device_disconnect ( struct snd_card * card , void * device_data ) ; 
/*--snd_device_disconnect--*/
int snd_device_register ( struct snd_card * card , void * device_data ) ; 
/*--snd_device_register--*/
int snd_device_register_all ( struct snd_card * card ) ; 
/*--snd_device_register_all--*/
int snd_device_disconnect_all ( struct snd_card * card ) ; 
/*--snd_device_disconnect_all--*/
int snd_device_free_all ( struct snd_card * card , snd_device_cmd_t cmd ) ; 
/*--snd_device_free_all--*/
void snd_dma_program ( unsigned long dma , unsigned long addr , unsigned int size , unsigned short mode ) ; 
/*--snd_dma_program--*/
void snd_dma_disable ( unsigned long dma ) ; 
/*--snd_dma_disable--*/
unsigned int snd_dma_pointer ( unsigned long dma , unsigned int size ) ; 
/*--snd_dma_pointer--*/
void * snd_lookup_oss_minor_data ( unsigned int minor , int type ) ; 
/*--snd_lookup_oss_minor_data--*/
int snd_register_oss_device ( int type , struct snd_card * card , int dev , const struct file_operations * f_ops , void * private_data , const char * name ) ; 
/*--snd_register_oss_device--*/
int snd_unregister_oss_device ( int type , struct snd_card * card , int dev ) ; 
/*--snd_unregister_oss_device--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) snd_minor_info_oss_init ( void ) ; 
/*--snd_minor_info_oss_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_minor_info_oss_done ( void ) ; 
/*--snd_minor_info_oss_done--*/
int snd_oss_info_register ( int dev , int num , char * string ) ; 
/*--snd_oss_info_register--*/
int snd_info_minor_register ( void ) ; 
/*--snd_info_minor_register--*/
int snd_info_minor_unregister ( void ) ; 
/*--snd_info_minor_unregister--*/
int _snd_ctl_add_slave ( struct snd_kcontrol * master , struct snd_kcontrol * slave , unsigned int flags ) ; 
/*--_snd_ctl_add_slave--*/
struct snd_kcontrol * snd_ctl_make_virtual_master ( char * name , const unsigned int * tlv ) ; 
/*--snd_ctl_make_virtual_master--*/
int snd_jack_new ( struct snd_card * card , const char * id , int type , struct snd_jack * * jjack ) ; 
/*--snd_jack_new--*/
void snd_jack_set_parent ( struct snd_jack * jack , struct device * parent ) ; 
/*--snd_jack_set_parent--*/
int snd_jack_set_key ( struct snd_jack * jack , enum snd_jack_types type , int keytype ) ; 
/*--snd_jack_set_key--*/
void snd_jack_report ( struct snd_jack * jack , int status ) ; 
/*--snd_jack_report--*/
irqreturn_t snd_mpu401_uart_interrupt ( int irq , void * dev_id ) ; 
/*--snd_mpu401_uart_interrupt--*/
irqreturn_t snd_mpu401_uart_interrupt_tx ( int irq , void * dev_id ) ; 
/*--snd_mpu401_uart_interrupt_tx--*/
int snd_mpu401_uart_new ( struct snd_card * card , int device , unsigned short hardware , unsigned long port , unsigned int info_flags , int irq , int irq_flags , struct snd_rawmidi * * rrawmidi ) ; 
/*--snd_mpu401_uart_new--*/
void snd_opl3_interrupt ( struct snd_hwdep * hw ) ; 
/*--snd_opl3_interrupt--*/
int snd_opl3_new ( struct snd_card * card , unsigned short hardware , struct snd_opl3 * * ropl3 ) ; 
/*--snd_opl3_new--*/
int snd_opl3_init ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_init--*/
int snd_opl3_create ( struct snd_card * card , unsigned long l_port , unsigned long r_port , unsigned short hardware , int integrated , struct snd_opl3 * * ropl3 ) ; 
/*--snd_opl3_create--*/
int snd_opl3_timer_new ( struct snd_opl3 * opl3 , int timer1_dev , int timer2_dev ) ; 
/*--snd_opl3_timer_new--*/
int snd_opl3_hwdep_new ( struct snd_opl3 * opl3 , int device , int seq_device , struct snd_hwdep * * rhwdep ) ; 
/*--snd_opl3_hwdep_new--*/
int snd_opl3_open ( struct snd_hwdep * hw , struct file * file ) ; 
/*--snd_opl3_open--*/
int snd_opl3_ioctl ( struct snd_hwdep * hw , struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--snd_opl3_ioctl--*/
int snd_opl3_release ( struct snd_hwdep * hw , struct file * file ) ; 
/*--snd_opl3_release--*/
long snd_opl3_write ( struct snd_hwdep * hw , const char * buf , long count , loff_t * offset ) ; 
/*--snd_opl3_write--*/
int snd_opl3_load_patch ( struct snd_opl3 * opl3 , int prog , int bank , int type , const char * name , const unsigned char * ext , const unsigned char * data ) ; 
/*--snd_opl3_load_patch--*/
struct fm_patch * snd_opl3_find_patch ( struct snd_opl3 * opl3 , int prog , int bank , int create_patch ) ; 
/*--snd_opl3_find_patch--*/
void snd_opl3_clear_patches ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_clear_patches--*/
void snd_opl3_reset ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_reset--*/
int snd_opl3_synth_use_inc ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_synth_use_inc--*/
void snd_opl3_synth_use_dec ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_synth_use_dec--*/
int snd_opl3_synth_setup ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_synth_setup--*/
void snd_opl3_synth_cleanup ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_synth_cleanup--*/
void snd_opl3_calc_volume ( unsigned char * volbyte , int vel , struct snd_midi_channel * chan ) ; 
/*--snd_opl3_calc_volume--*/
void snd_opl3_timer_func ( unsigned long data ) ; 
/*--snd_opl3_timer_func--*/
void snd_opl3_note_on ( void * p , int note , int vel , struct snd_midi_channel * chan ) ; 
/*--snd_opl3_note_on--*/
void snd_opl3_note_off ( void * p , int note , int vel , struct snd_midi_channel * chan ) ; 
/*--snd_opl3_note_off--*/
void snd_opl3_key_press ( void * p , int note , int vel , struct snd_midi_channel * chan ) ; 
/*--snd_opl3_key_press--*/
void snd_opl3_terminate_note ( void * p , int note , struct snd_midi_channel * chan ) ; 
/*--snd_opl3_terminate_note--*/
void snd_opl3_control ( void * p , int type , struct snd_midi_channel * chan ) ; 
/*--snd_opl3_control--*/
void snd_opl3_nrpn ( void * p , struct snd_midi_channel * chan , struct snd_midi_channel_set * chset ) ; 
/*--snd_opl3_nrpn--*/
void snd_opl3_sysex ( void * p , unsigned char * buf , int len , int parsed , struct snd_midi_channel_set * chset ) ; 
/*--snd_opl3_sysex--*/
void snd_opl3_load_drums ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_load_drums--*/
void snd_opl3_drum_switch ( struct snd_opl3 * opl3 , int note , int vel , int on_off , struct snd_midi_channel * chan ) ; 
/*--snd_opl3_drum_switch--*/
void snd_opl3_init_seq_oss ( struct snd_opl3 * opl3 , char * name ) ; 
/*--snd_opl3_init_seq_oss--*/
void snd_opl3_free_seq_oss ( struct snd_opl3 * opl3 ) ; 
/*--snd_opl3_free_seq_oss--*/
enum hrtimer_restart pcsp_do_timer ( struct hrtimer * handle ) ; 
/*--pcsp_do_timer--*/
void pcsp_sync_stop ( struct snd_pcsp * chip ) ; 
/*--pcsp_sync_stop--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_pcsp_new_pcm ( struct snd_pcsp * chip ) ; 
/*--snd_pcsp_new_pcm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_pcsp_new_mixer ( struct snd_pcsp * chip , int nopcm ) ; 
/*--snd_pcsp_new_mixer--*/
void pcspkr_stop_sound ( void ) ; 
/*--pcspkr_stop_sound--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) pcspkr_input_init ( struct input_dev * * rdev , struct device * dev ) ; 
/*--pcspkr_input_init--*/
int pcspkr_input_remove ( struct input_dev * dev ) ; 
/*--pcspkr_input_remove--*/
int snd_vx_check_reg_bit ( struct vx_core * chip , int reg , int mask , int bit , int time ) ; 
/*--snd_vx_check_reg_bit--*/
int vx_send_msg_nolock ( struct vx_core * chip , struct vx_rmh * rmh ) ; 
/*--vx_send_msg_nolock--*/
int vx_send_msg ( struct vx_core * chip , struct vx_rmh * rmh ) ; 
/*--vx_send_msg--*/
int vx_send_rih_nolock ( struct vx_core * chip , int cmd ) ; 
/*--vx_send_rih_nolock--*/
int vx_send_rih ( struct vx_core * chip , int cmd ) ; 
/*--vx_send_rih--*/
int snd_vx_load_boot_image ( struct vx_core * chip , const struct firmware * boot ) ; 
/*--snd_vx_load_boot_image--*/
irqreturn_t snd_vx_irq_handler ( int irq , void * dev ) ; 
/*--snd_vx_irq_handler--*/
int snd_vx_dsp_boot ( struct vx_core * chip , const struct firmware * boot ) ; 
/*--snd_vx_dsp_boot--*/
int snd_vx_dsp_load ( struct vx_core * chip , const struct firmware * dsp ) ; 
/*--snd_vx_dsp_load--*/
int snd_vx_suspend ( struct vx_core * chip , pm_message_t state ) ; 
/*--snd_vx_suspend--*/
int snd_vx_resume ( struct vx_core * chip ) ; 
/*--snd_vx_resume--*/
struct vx_core * snd_vx_create ( struct snd_card * card , struct snd_vx_hardware * hw , struct snd_vx_ops * ops , int extra_size ) ; 
/*--snd_vx_create--*/
int snd_vx_setup_firmware ( struct vx_core * chip ) ; 
/*--snd_vx_setup_firmware--*/
void snd_vx_free_firmware ( struct vx_core * chip ) ; 
/*--snd_vx_free_firmware--*/
void vx_pcm_update_intr ( struct vx_core * chip , unsigned int events ) ; 
/*--vx_pcm_update_intr--*/
int snd_vx_pcm_new ( struct vx_core * chip ) ; 
/*--snd_vx_pcm_new--*/
void vx_toggle_dac_mute ( struct vx_core * chip , int mute ) ; 
/*--vx_toggle_dac_mute--*/
void vx_reset_codec ( struct vx_core * chip , int cold_reset ) ; 
/*--vx_reset_codec--*/
int vx_sync_audio_source ( struct vx_core * chip ) ; 
/*--vx_sync_audio_source--*/
int vx_set_monitor_level ( struct vx_core * chip , int audio , int level , int active ) ; 
/*--vx_set_monitor_level--*/
int snd_vx_mixer_new ( struct vx_core * chip ) ; 
/*--snd_vx_mixer_new--*/
void vx_init_rmh ( struct vx_rmh * rmh , unsigned int cmd ) ; 
/*--vx_init_rmh--*/
void vx_set_internal_clock ( struct vx_core * chip , unsigned int freq ) ; 
/*--vx_set_internal_clock--*/
void vx_set_iec958_status ( struct vx_core * chip , unsigned int bits ) ; 
/*--vx_set_iec958_status--*/
int vx_set_clock ( struct vx_core * chip , unsigned int freq ) ; 
/*--vx_set_clock--*/
int vx_change_frequency ( struct vx_core * chip ) ; 
/*--vx_change_frequency--*/
int snd_cs8427_reg_write ( struct snd_i2c_device * device , unsigned char reg , unsigned char val ) ; 
/*--snd_cs8427_reg_write--*/
int snd_cs8427_create ( struct snd_i2c_bus * bus , unsigned char addr , unsigned int reset_timeout , struct snd_i2c_device * * r_cs8427 ) ; 
/*--snd_cs8427_create--*/
int snd_cs8427_iec958_build ( struct snd_i2c_device * cs8427 , struct snd_pcm_substream * play_substream , struct snd_pcm_substream * cap_substream ) ; 
/*--snd_cs8427_iec958_build--*/
int snd_cs8427_iec958_active ( struct snd_i2c_device * cs8427 , int active ) ; 
/*--snd_cs8427_iec958_active--*/
int snd_cs8427_iec958_pcm ( struct snd_i2c_device * cs8427 , unsigned int rate ) ; 
/*--snd_cs8427_iec958_pcm--*/
int snd_i2c_bus_create ( struct snd_card * card , const char * name , struct snd_i2c_bus * master , struct snd_i2c_bus * * ri2c ) ; 
/*--snd_i2c_bus_create--*/
int snd_i2c_device_create ( struct snd_i2c_bus * bus , const char * name , unsigned char addr , struct snd_i2c_device * * rdevice ) ; 
/*--snd_i2c_device_create--*/
int snd_i2c_device_free ( struct snd_i2c_device * device ) ; 
/*--snd_i2c_device_free--*/
int snd_i2c_sendbytes ( struct snd_i2c_device * device , unsigned char * bytes , int count ) ; 
/*--snd_i2c_sendbytes--*/
int snd_i2c_readbytes ( struct snd_i2c_device * device , unsigned char * bytes , int count ) ; 
/*--snd_i2c_readbytes--*/
int snd_i2c_probeaddr ( struct snd_i2c_bus * bus , unsigned short addr ) ; 
/*--snd_i2c_probeaddr--*/
int snd_ak4113_create ( struct snd_card * card , ak4113_read_t * read , ak4113_write_t * write , const unsigned char * pgm , void * private_data , struct ak4113 * * r_ak4113 ) ; 
/*--snd_ak4113_create--*/
void snd_ak4113_reg_write ( struct ak4113 * chip , unsigned char reg , unsigned char mask , unsigned char val ) ; 
/*--snd_ak4113_reg_write--*/
void snd_ak4113_reinit ( struct ak4113 * chip ) ; 
/*--snd_ak4113_reinit--*/
int snd_ak4113_build ( struct ak4113 * ak4113 , struct snd_pcm_substream * cap_substream ) ; 
/*--snd_ak4113_build--*/
int snd_ak4113_external_rate ( struct ak4113 * ak4113 ) ; 
/*--snd_ak4113_external_rate--*/
int snd_ak4113_check_rate_and_errors ( struct ak4113 * ak4113 , unsigned int flags ) ; 
/*--snd_ak4113_check_rate_and_errors--*/
int snd_ak4114_create ( struct snd_card * card , ak4114_read_t * read , ak4114_write_t * write , const unsigned char pgm [ 7 ] , const unsigned char txcsb [ 5 ] , void * private_data , struct ak4114 * * r_ak4114 ) ; 
/*--snd_ak4114_create--*/
void snd_ak4114_reg_write ( struct ak4114 * chip , unsigned char reg , unsigned char mask , unsigned char val ) ; 
/*--snd_ak4114_reg_write--*/
void snd_ak4114_reinit ( struct ak4114 * chip ) ; 
/*--snd_ak4114_reinit--*/
int snd_ak4114_build ( struct ak4114 * ak4114 , struct snd_pcm_substream * ply_substream , struct snd_pcm_substream * cap_substream ) ; 
/*--snd_ak4114_build--*/
int snd_ak4114_external_rate ( struct ak4114 * ak4114 ) ; 
/*--snd_ak4114_external_rate--*/
int snd_ak4114_check_rate_and_errors ( struct ak4114 * ak4114 , unsigned int flags ) ; 
/*--snd_ak4114_check_rate_and_errors--*/
int snd_ak4117_create ( struct snd_card * card , ak4117_read_t * read , ak4117_write_t * write , const unsigned char pgm [ 5 ] , void * private_data , struct ak4117 * * r_ak4117 ) ; 
/*--snd_ak4117_create--*/
void snd_ak4117_reg_write ( struct ak4117 * chip , unsigned char reg , unsigned char mask , unsigned char val ) ; 
/*--snd_ak4117_reg_write--*/
void snd_ak4117_reinit ( struct ak4117 * chip ) ; 
/*--snd_ak4117_reinit--*/
int snd_ak4117_build ( struct ak4117 * ak4117 , struct snd_pcm_substream * cap_substream ) ; 
/*--snd_ak4117_build--*/
int snd_ak4117_external_rate ( struct ak4117 * ak4117 ) ; 
/*--snd_ak4117_external_rate--*/
int snd_ak4117_check_rate_and_errors ( struct ak4117 * ak4117 , unsigned int flags ) ; 
/*--snd_ak4117_check_rate_and_errors--*/
void snd_akm4xxx_write ( struct snd_akm4xxx * ak , int chip , unsigned char reg , unsigned char val ) ; 
/*--snd_akm4xxx_write--*/
void snd_akm4xxx_reset ( struct snd_akm4xxx * ak , int state ) ; 
/*--snd_akm4xxx_reset--*/
void snd_akm4xxx_init ( struct snd_akm4xxx * ak ) ; 
/*--snd_akm4xxx_init--*/
int snd_akm4xxx_build_controls ( struct snd_akm4xxx * ak ) ; 
/*--snd_akm4xxx_build_controls--*/
int snd_pt2258_reset ( struct snd_pt2258 * pt ) ; 
/*--snd_pt2258_reset--*/
int snd_pt2258_build_controls ( struct snd_pt2258 * pt ) ; 
/*--snd_pt2258_build_controls--*/
void snd_tea575x_init ( struct snd_tea575x * tea ) ; 
/*--snd_tea575x_init--*/
void snd_tea575x_exit ( struct snd_tea575x * tea ) ; 
/*--snd_tea575x_exit--*/
int snd_sbdsp_command ( struct snd_sb * chip , unsigned char val ) ; 
/*--snd_sbdsp_command--*/
int snd_sbdsp_get_byte ( struct snd_sb * chip ) ; 
/*--snd_sbdsp_get_byte--*/
int snd_sbdsp_reset ( struct snd_sb * chip ) ; 
/*--snd_sbdsp_reset--*/
int snd_sbdsp_create ( struct snd_card * card , unsigned long port , int irq , irq_handler_t irq_handler , int dma8 , int dma16 , unsigned short hardware , struct snd_sb * * r_chip ) ; 
/*--snd_sbdsp_create--*/
void snd_sbmixer_write ( struct snd_sb * chip , unsigned char reg , unsigned char data ) ; 
/*--snd_sbmixer_write--*/
unsigned char snd_sbmixer_read ( struct snd_sb * chip , unsigned char reg ) ; 
/*--snd_sbmixer_read--*/
int snd_sbmixer_add_ctl ( struct snd_sb * chip , const char * name , int index , int type , unsigned long value ) ; 
/*--snd_sbmixer_add_ctl--*/
int snd_sbmixer_new ( struct snd_sb * chip ) ; 
/*--snd_sbmixer_new--*/
void snd_sbmixer_suspend ( struct snd_sb * chip ) ; 
/*--snd_sbmixer_suspend--*/
void snd_sbmixer_resume ( struct snd_sb * chip ) ; 
/*--snd_sbmixer_resume--*/
irqreturn_t snd_sb16dsp_interrupt ( int irq , void * dev_id ) ; 
/*--snd_sb16dsp_interrupt--*/
int snd_sb16dsp_configure ( struct snd_sb * chip ) ; 
/*--snd_sb16dsp_configure--*/
int snd_sb16dsp_pcm ( struct snd_sb * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_sb16dsp_pcm--*/
const struct snd_pcm_ops * snd_sb16dsp_get_pcm_ops ( int direction ) ; 
/*--snd_sb16dsp_get_pcm_ops--*/
unsigned char pas_read ( int ioaddr ) ; 
/*--pas_read--*/
void pas_write ( unsigned char data , int ioaddr ) ; 
/*--pas_write--*/
int pas_set_intr ( int mask ) ; 
/*--pas_set_intr--*/
int pas_remove_intr ( int mask ) ; 
/*--pas_remove_intr--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) pas_midi_init ( void ) ; 
/*--pas_midi_init--*/
void pas_midi_interrupt ( void ) ; 
/*--pas_midi_interrupt--*/
void mix_write ( unsigned char data , int ioaddr ) ; 
/*--mix_write--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) pas_init_mixer ( void ) ; 
/*--pas_init_mixer--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) pas_pcm_init ( struct address_info * hw_config ) ; 
/*--pas_pcm_init--*/
void pas_pcm_interrupt ( unsigned char status , int cause ) ; 
/*--pas_pcm_interrupt--*/
int sb_dsp_command ( sb_devc * devc , unsigned char val ) ; 
/*--sb_dsp_command--*/
int sb_dsp_get_byte ( sb_devc * devc ) ; 
/*--sb_dsp_get_byte--*/
int sb_dsp_reset ( sb_devc * devc ) ; 
/*--sb_dsp_reset--*/
int sb_dsp_detect ( struct address_info * hw_config , int pci , int pciio , struct sb_module_options * sbmo ) ; 
/*--sb_dsp_detect--*/
int sb_dsp_init ( struct address_info * hw_config , struct module * owner ) ; 
/*--sb_dsp_init--*/
void sb_dsp_unload ( struct address_info * hw_config , int sbmpu ) ; 
/*--sb_dsp_unload--*/
void sb_setmixer ( sb_devc * devc , unsigned int port , unsigned int value ) ; 
/*--sb_setmixer--*/
unsigned int sb_getmixer ( sb_devc * devc , unsigned int port ) ; 
/*--sb_getmixer--*/
void sb_chgmixer ( sb_devc * devc , unsigned int reg , unsigned int mask , unsigned int val ) ; 
/*--sb_chgmixer--*/
int probe_sbmpu ( struct address_info * hw_config , struct module * owner ) ; 
/*--probe_sbmpu--*/
void unload_sbmpu ( struct address_info * hw_config ) ; 
/*--unload_sbmpu--*/
int sb_audio_open ( int dev , int mode ) ; 
/*--sb_audio_open--*/
void sb_audio_close ( int dev ) ; 
/*--sb_audio_close--*/
void sb_audio_init ( sb_devc * devc , char * name , struct module * owner ) ; 
/*--sb_audio_init--*/
void sb_midi_interrupt ( sb_devc * devc ) ; 
/*--sb_midi_interrupt--*/
void sb_dsp_midi_init ( sb_devc * devc , struct module * owner ) ; 
/*--sb_dsp_midi_init--*/
void sb_mixer_set_stereo ( sb_devc * devc , int mode ) ; 
/*--sb_mixer_set_stereo--*/
void smw_mixer_init ( sb_devc * devc ) ; 
/*--smw_mixer_init--*/
int sb_common_mixer_set ( sb_devc * devc , int dev , int left , int right ) ; 
/*--sb_common_mixer_set--*/
int sb_mixer_init ( sb_devc * devc , struct module * owner ) ; 
/*--sb_mixer_init--*/
void sb_mixer_unload ( sb_devc * devc ) ; 
/*--sb_mixer_unload--*/
struct audio_driver * ess_audio_init ( sb_devc * devc , int * audio_flags , int * format_mask ) ; 
/*--ess_audio_init--*/
void ess_intr ( sb_devc * devc ) ; 
/*--ess_intr--*/
int ess_dsp_reset ( sb_devc * devc ) ; 
/*--ess_dsp_reset--*/
int ess_init ( sb_devc * devc , struct address_info * hw_config ) ; 
/*--ess_init--*/
int ess_dsp_init ( sb_devc * devc , struct address_info * hw_config ) ; 
/*--ess_dsp_init--*/
void ess_setmixer ( sb_devc * devc , unsigned int port , unsigned int value ) ; 
/*--ess_setmixer--*/
unsigned int ess_getmixer ( sb_devc * devc , unsigned int port ) ; 
/*--ess_getmixer--*/
void ess_mixer_init ( sb_devc * devc ) ; 
/*--ess_mixer_init--*/
int ess_mixer_set ( sb_devc * devc , int dev , int left , int right ) ; 
/*--ess_mixer_set--*/
void ess_mixer_reload ( sb_devc * devc , int dev ) ; 
/*--ess_mixer_reload--*/
int ess_set_recmask ( sb_devc * devc , int * mask ) ; 
/*--ess_set_recmask--*/
int ess_mixer_reset ( sb_devc * devc ) ; 
/*--ess_mixer_reset--*/
int ess_midi_init ( sb_devc * devc , struct address_info * hw_config ) ; 
/*--ess_midi_init--*/
int sound_install_audiodrv ( int vers , char * name , struct audio_driver * driver , int driver_size , int flags , unsigned int format_mask , void * devc , int dma1 , int dma2 ) ; 
/*--sound_install_audiodrv--*/
int sound_install_mixer ( int vers , char * name , struct mixer_operations * driver , int driver_size , void * devc ) ; 
/*--sound_install_mixer--*/
void sound_unload_audiodev ( int dev ) ; 
/*--sound_unload_audiodev--*/
int sound_alloc_mididev ( void ) ; 
/*--sound_alloc_mididev--*/
int sound_alloc_synthdev ( void ) ; 
/*--sound_alloc_synthdev--*/
int sound_alloc_mixerdev ( void ) ; 
/*--sound_alloc_mixerdev--*/
int sound_alloc_timerdev ( void ) ; 
/*--sound_alloc_timerdev--*/
void sound_unload_mixerdev ( int dev ) ; 
/*--sound_unload_mixerdev--*/
void sound_unload_mididev ( int dev ) ; 
/*--sound_unload_mididev--*/
void sound_unload_synthdev ( int dev ) ; 
/*--sound_unload_synthdev--*/
void sound_unload_timerdev ( int dev ) ; 
/*--sound_unload_timerdev--*/
int * load_mixer_volumes ( char * name , int * levels , int present ) ; 
/*--load_mixer_volumes--*/
int sound_alloc_dma ( int chn , char * deviceID ) ; 
/*--sound_alloc_dma--*/
int sound_open_dma ( int chn , char * deviceID ) ; 
/*--sound_open_dma--*/
void sound_free_dma ( int chn ) ; 
/*--sound_free_dma--*/
void sound_close_dma ( int chn ) ; 
/*--sound_close_dma--*/
void request_sound_timer ( int count ) ; 
/*--request_sound_timer--*/
void sound_stop_timer ( void ) ; 
/*--sound_stop_timer--*/
void conf_printf ( char * name , struct address_info * hw_config ) ; 
/*--conf_printf--*/
void conf_printf2 ( char * name , int base , int irq , int dma , int dma2 ) ; 
/*--conf_printf2--*/
int audio_open ( int dev , struct file * file ) ; 
/*--audio_open--*/
void audio_release ( int dev , struct file * file ) ; 
/*--audio_release--*/
int audio_write ( int dev , struct file * file , const char * buf , int count ) ; 
/*--audio_write--*/
int audio_read ( int dev , struct file * file , char * buf , int count ) ; 
/*--audio_read--*/
int audio_ioctl ( int dev , struct file * file , unsigned int cmd , void * arg ) ; 
/*--audio_ioctl--*/
void audio_init_devices ( void ) ; 
/*--audio_init_devices--*/
void reorganize_buffers ( int dev , struct dma_buffparms * dmap , int recording ) ; 
/*--reorganize_buffers--*/
int DMAbuf_open ( int dev , int mode ) ; 
/*--DMAbuf_open--*/
void DMAbuf_reset ( int dev ) ; 
/*--DMAbuf_reset--*/
void DMAbuf_launch_output ( int dev , struct dma_buffparms * dmap ) ; 
/*--DMAbuf_launch_output--*/
int DMAbuf_sync ( int dev ) ; 
/*--DMAbuf_sync--*/
int DMAbuf_release ( int dev , int mode ) ; 
/*--DMAbuf_release--*/
int DMAbuf_activate_recording ( int dev , struct dma_buffparms * dmap ) ; 
/*--DMAbuf_activate_recording--*/
int DMAbuf_getrdbuffer ( int dev , char * * buf , int * len , int dontblock ) ; 
/*--DMAbuf_getrdbuffer--*/
int DMAbuf_rmchars ( int dev , int buff_no , int c ) ; 
/*--DMAbuf_rmchars--*/
int DMAbuf_get_buffer_pointer ( int dev , struct dma_buffparms * dmap , int direction ) ; 
/*--DMAbuf_get_buffer_pointer--*/
void DMAbuf_start_devices ( unsigned int devmask ) ; 
/*--DMAbuf_start_devices--*/
int DMAbuf_space_in_queue ( int dev ) ; 
/*--DMAbuf_space_in_queue--*/
int DMAbuf_getwrbuffer ( int dev , char * * buf , int * size , int dontblock ) ; 
/*--DMAbuf_getwrbuffer--*/
int DMAbuf_move_wrpointer ( int dev , int l ) ; 
/*--DMAbuf_move_wrpointer--*/
int DMAbuf_start_dma ( int dev , unsigned long physaddr , int count , int dma_mode ) ; 
/*--DMAbuf_start_dma--*/
void DMAbuf_outputintr ( int dev , int notify_only ) ; 
/*--DMAbuf_outputintr--*/
void DMAbuf_inputintr ( int dev ) ; 
/*--DMAbuf_inputintr--*/
void DMAbuf_init ( int dev , int dma1 , int dma2 ) ; 
/*--DMAbuf_init--*/
unsigned int DMAbuf_poll ( struct file * file , int dev , poll_table * wait ) ; 
/*--DMAbuf_poll--*/
void DMAbuf_deinit ( int dev ) ; 
/*--DMAbuf_deinit--*/
void do_midi_msg ( int synthno , unsigned char * msg , int mlen ) ; 
/*--do_midi_msg--*/
int midi_synth_ioctl ( int dev , unsigned int cmd , void * arg ) ; 
/*--midi_synth_ioctl--*/
int midi_synth_kill_note ( int dev , int channel , int note , int velocity ) ; 
/*--midi_synth_kill_note--*/
int midi_synth_set_instr ( int dev , int channel , int instr_no ) ; 
/*--midi_synth_set_instr--*/
int midi_synth_start_note ( int dev , int channel , int note , int velocity ) ; 
/*--midi_synth_start_note--*/
void midi_synth_reset ( int dev ) ; 
/*--midi_synth_reset--*/
int midi_synth_open ( int dev , int mode ) ; 
/*--midi_synth_open--*/
void midi_synth_close ( int dev ) ; 
/*--midi_synth_close--*/
void midi_synth_hw_control ( int dev , unsigned char * event ) ; 
/*--midi_synth_hw_control--*/
int midi_synth_load_patch ( int dev , int format , const char * addr , int count , int pmgr_flag ) ; 
/*--midi_synth_load_patch--*/
void midi_synth_panning ( int dev , int channel , int pressure ) ; 
/*--midi_synth_panning--*/
void midi_synth_aftertouch ( int dev , int channel , int pressure ) ; 
/*--midi_synth_aftertouch--*/
void midi_synth_controller ( int dev , int channel , int ctrl_num , int value ) ; 
/*--midi_synth_controller--*/
void midi_synth_bender ( int dev , int channel , int value ) ; 
/*--midi_synth_bender--*/
void midi_synth_setup_voice ( int dev , int voice , int channel ) ; 
/*--midi_synth_setup_voice--*/
int midi_synth_send_sysex ( int dev , unsigned char * bytes , int len ) ; 
/*--midi_synth_send_sysex--*/
int MIDIbuf_open ( int dev , struct file * file ) ; 
/*--MIDIbuf_open--*/
void MIDIbuf_release ( int dev , struct file * file ) ; 
/*--MIDIbuf_release--*/
int MIDIbuf_write ( int dev , struct file * file , const char * buf , int count ) ; 
/*--MIDIbuf_write--*/
int MIDIbuf_read ( int dev , struct file * file , char * buf , int count ) ; 
/*--MIDIbuf_read--*/
int MIDIbuf_ioctl ( int dev , struct file * file , unsigned int cmd , void * arg ) ; 
/*--MIDIbuf_ioctl--*/
unsigned int MIDIbuf_poll ( int dev , struct file * file , poll_table * wait ) ; 
/*--MIDIbuf_poll--*/
int MIDIbuf_avail ( int dev ) ; 
/*--MIDIbuf_avail--*/
int sequencer_read ( int dev , struct file * file , char * buf , int count ) ; 
/*--sequencer_read--*/
void seq_copy_to_input ( unsigned char * event_rec , int len ) ; 
/*--seq_copy_to_input--*/
void seq_input_event ( unsigned char * event_rec , int len ) ; 
/*--seq_input_event--*/
int sequencer_write ( int dev , struct file * file , const char * buf , int count ) ; 
/*--sequencer_write--*/
int sequencer_open ( int dev , struct file * file ) ; 
/*--sequencer_open--*/
void sequencer_release ( int dev , struct file * file ) ; 
/*--sequencer_release--*/
int sequencer_ioctl ( int dev , struct file * file , unsigned int cmd , void * arg ) ; 
/*--sequencer_ioctl--*/
unsigned int sequencer_poll ( int dev , struct file * file , poll_table * wait ) ; 
/*--sequencer_poll--*/
void sequencer_timer ( unsigned long dummy ) ; 
/*--sequencer_timer--*/
int note_to_freq ( int note_num ) ; 
/*--note_to_freq--*/
unsigned long compute_finetune ( unsigned long base_freq , int bend , int range , int vibrato_cents ) ; 
/*--compute_finetune--*/
void sequencer_init ( void ) ; 
/*--sequencer_init--*/
void sequencer_unload ( void ) ; 
/*--sequencer_unload--*/
void reprogram_timer ( void ) ; 
/*--reprogram_timer--*/
void sound_timer_syncinterval ( unsigned int new_usecs ) ; 
/*--sound_timer_syncinterval--*/
void sound_timer_interrupt ( void ) ; 
/*--sound_timer_interrupt--*/
void sound_timer_init ( struct sound_lowlev_timer * t , char * name ) ; 
/*--sound_timer_init--*/
int ad1848_detect ( struct resource * ports , int * ad_flags , int * osp ) ; 
/*--ad1848_detect--*/
int ad1848_init ( char * name , struct resource * ports , int irq , int dma_playback , int dma_capture , int share_dma , int * osp , struct module * owner ) ; 
/*--ad1848_init--*/
int ad1848_control ( int cmd , int arg ) ; 
/*--ad1848_control--*/
void ad1848_unload ( int io_base , int irq , int dma_playback , int dma_capture , int share_dma ) ; 
/*--ad1848_unload--*/
int probe_ms_sound ( struct address_info * hw_config , struct resource * ports ) ; 
/*--probe_ms_sound--*/
void attach_ms_sound ( struct address_info * hw_config , struct resource * ports , struct module * owner ) ; 
/*--attach_ms_sound--*/
void unload_ms_sound ( struct address_info * hw_config ) ; 
/*--unload_ms_sound--*/
int attach_mpu401 ( struct address_info * hw_config , struct module * owner ) ; 
/*--attach_mpu401--*/
int probe_mpu401 ( struct address_info * hw_config , struct resource * ports ) ; 
/*--probe_mpu401--*/
void unload_mpu401 ( struct address_info * hw_config ) ; 
/*--unload_mpu401--*/
irqreturn_t uart401intr ( int irq , void * dev_id ) ; 
/*--uart401intr--*/
int probe_uart401 ( struct address_info * hw_config , struct module * owner ) ; 
/*--probe_uart401--*/
void unload_uart401 ( struct address_info * hw_config ) ; 
/*--unload_uart401--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ak4531_mixer ( struct snd_card * card , struct snd_ak4531 * _ak4531 , struct snd_ak4531 * * rak4531 ) ; 
/*--snd_ak4531_mixer--*/
void snd_ak4531_suspend ( struct snd_ak4531 * ak4531 ) ; 
/*--snd_ak4531_suspend--*/
void snd_ak4531_resume ( struct snd_ak4531 * ak4531 ) ; 
/*--snd_ak4531_resume--*/
void snd_ac97_write ( struct snd_ac97 * ac97 , unsigned short reg , unsigned short value ) ; 
/*--snd_ac97_write--*/
unsigned short snd_ac97_read ( struct snd_ac97 * ac97 , unsigned short reg ) ; 
/*--snd_ac97_read--*/
void snd_ac97_write_cache ( struct snd_ac97 * ac97 , unsigned short reg , unsigned short value ) ; 
/*--snd_ac97_write_cache--*/
int snd_ac97_update ( struct snd_ac97 * ac97 , unsigned short reg , unsigned short value ) ; 
/*--snd_ac97_update--*/
int snd_ac97_update_bits ( struct snd_ac97 * ac97 , unsigned short reg , unsigned short mask , unsigned short value ) ; 
/*--snd_ac97_update_bits--*/
int snd_ac97_update_bits_nolock ( struct snd_ac97 * ac97 , unsigned short reg , unsigned short mask , unsigned short value ) ; 
/*--snd_ac97_update_bits_nolock--*/
void snd_ac97_get_name ( struct snd_ac97 * ac97 , unsigned int id , char * name , int modem ) ; 
/*--snd_ac97_get_name--*/
const char * snd_ac97_get_short_name ( struct snd_ac97 * ac97 ) ; 
/*--snd_ac97_get_short_name--*/
int snd_ac97_bus ( struct snd_card * card , int num , struct snd_ac97_bus_ops * ops , void * private_data , struct snd_ac97_bus * * rbus ) ; 
/*--snd_ac97_bus--*/
int snd_ac97_mixer ( struct snd_ac97_bus * bus , struct snd_ac97_template * template , struct snd_ac97 * * rac97 ) ; 
/*--snd_ac97_mixer--*/
int snd_ac97_update_power ( struct snd_ac97 * ac97 , int reg , int powerup ) ; 
/*--snd_ac97_update_power--*/
void snd_ac97_suspend ( struct snd_ac97 * ac97 ) ; 
/*--snd_ac97_suspend--*/
void snd_ac97_resume ( struct snd_ac97 * ac97 ) ; 
/*--snd_ac97_resume--*/
int snd_ac97_tune_hardware ( struct snd_ac97 * ac97 , struct ac97_quirk * quirk , const char * override ) ; 
/*--snd_ac97_tune_hardware--*/
int snd_ac97_set_rate ( struct snd_ac97 * ac97 , int reg , unsigned int rate ) ; 
/*--snd_ac97_set_rate--*/
int snd_ac97_pcm_assign ( struct snd_ac97_bus * bus , unsigned short pcms_count , const struct ac97_pcm * pcms ) ; 
/*--snd_ac97_pcm_assign--*/
int snd_ac97_pcm_open ( struct ac97_pcm * pcm , unsigned int rate , enum ac97_pcm_cfg cfg , unsigned short slots ) ; 
/*--snd_ac97_pcm_open--*/
int snd_ac97_pcm_close ( struct ac97_pcm * pcm ) ; 
/*--snd_ac97_pcm_close--*/
int snd_ac97_pcm_double_rate_rules ( struct snd_pcm_runtime * runtime ) ; 
/*--snd_ac97_pcm_double_rate_rules--*/
void snd_ac97_proc_init ( struct snd_ac97 * ac97 ) ; 
/*--snd_ac97_proc_init--*/
void snd_ac97_proc_done ( struct snd_ac97 * ac97 ) ; 
/*--snd_ac97_proc_done--*/
void snd_ac97_bus_proc_init ( struct snd_ac97_bus * bus ) ; 
/*--snd_ac97_bus_proc_init--*/
void snd_ac97_bus_proc_done ( struct snd_ac97_bus * bus ) ; 
/*--snd_ac97_bus_proc_done--*/
int snd_aw2_saa7146_free ( struct snd_aw2_saa7146 * chip ) ; 
/*--snd_aw2_saa7146_free--*/
void snd_aw2_saa7146_setup ( struct snd_aw2_saa7146 * chip , void * pci_base_addr ) ; 
/*--snd_aw2_saa7146_setup--*/
void snd_aw2_saa7146_pcm_init_playback ( struct snd_aw2_saa7146 * chip , int stream_number , unsigned long dma_addr , unsigned long period_size , unsigned long buffer_size ) ; 
/*--snd_aw2_saa7146_pcm_init_playback--*/
void snd_aw2_saa7146_pcm_init_capture ( struct snd_aw2_saa7146 * chip , int stream_number , unsigned long dma_addr , unsigned long period_size , unsigned long buffer_size ) ; 
/*--snd_aw2_saa7146_pcm_init_capture--*/
void snd_aw2_saa7146_define_it_playback_callback ( unsigned int stream_number , snd_aw2_saa7146_it_cb p_it_callback , void * p_callback_param ) ; 
/*--snd_aw2_saa7146_define_it_playback_callback--*/
void snd_aw2_saa7146_define_it_capture_callback ( unsigned int stream_number , snd_aw2_saa7146_it_cb p_it_callback , void * p_callback_param ) ; 
/*--snd_aw2_saa7146_define_it_capture_callback--*/
void snd_aw2_saa7146_pcm_trigger_start_playback ( struct snd_aw2_saa7146 * chip , int stream_number ) ; 
/*--snd_aw2_saa7146_pcm_trigger_start_playback--*/
void snd_aw2_saa7146_pcm_trigger_stop_playback ( struct snd_aw2_saa7146 * chip , int stream_number ) ; 
/*--snd_aw2_saa7146_pcm_trigger_stop_playback--*/
void snd_aw2_saa7146_pcm_trigger_start_capture ( struct snd_aw2_saa7146 * chip , int stream_number ) ; 
/*--snd_aw2_saa7146_pcm_trigger_start_capture--*/
void snd_aw2_saa7146_pcm_trigger_stop_capture ( struct snd_aw2_saa7146 * chip , int stream_number ) ; 
/*--snd_aw2_saa7146_pcm_trigger_stop_capture--*/
irqreturn_t snd_aw2_saa7146_interrupt ( int irq , void * dev_id ) ; 
/*--snd_aw2_saa7146_interrupt--*/
unsigned int snd_aw2_saa7146_get_hw_ptr_playback ( struct snd_aw2_saa7146 * chip , int stream_number , unsigned char * start_addr , unsigned int buffer_size ) ; 
/*--snd_aw2_saa7146_get_hw_ptr_playback--*/
unsigned int snd_aw2_saa7146_get_hw_ptr_capture ( struct snd_aw2_saa7146 * chip , int stream_number , unsigned char * start_addr , unsigned int buffer_size ) ; 
/*--snd_aw2_saa7146_get_hw_ptr_capture--*/
void snd_aw2_saa7146_use_digital_input ( struct snd_aw2_saa7146 * chip , int use_digital ) ; 
/*--snd_aw2_saa7146_use_digital_input--*/
int snd_aw2_saa7146_is_using_digital_input ( struct snd_aw2_saa7146 * chip ) ; 
/*--snd_aw2_saa7146_is_using_digital_input--*/
unsigned int snd_ca0106_ptr_read ( struct snd_ca0106 * emu , unsigned int reg , unsigned int chn ) ; 
/*--snd_ca0106_ptr_read--*/
void snd_ca0106_ptr_write ( struct snd_ca0106 * emu , unsigned int reg , unsigned int chn , unsigned int data ) ; 
/*--snd_ca0106_ptr_write--*/
int snd_ca0106_spi_write ( struct snd_ca0106 * emu , unsigned int data ) ; 
/*--snd_ca0106_spi_write--*/
int snd_ca0106_i2c_write ( struct snd_ca0106 * emu , u32 reg , u32 value ) ; 
/*--snd_ca0106_i2c_write--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ca0106_proc_init ( struct snd_ca0106 * emu ) ; 
/*--snd_ca0106_proc_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ca0106_mixer ( struct snd_ca0106 * emu ) ; 
/*--snd_ca0106_mixer--*/
void snd_ca0106_mixer_suspend ( struct snd_ca0106 * chip ) ; 
/*--snd_ca0106_mixer_suspend--*/
void snd_ca0106_mixer_resume ( struct snd_ca0106 * chip ) ; 
/*--snd_ca0106_mixer_resume--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ca_midi_init ( void * dev_id , struct snd_ca_midi * midi , int device , char * name ) ; 
/*--ca_midi_init--*/
int snd_cs46xx_download ( struct snd_cs46xx * chip , u32 * src , unsigned long offset , unsigned long len ) ; 
/*--snd_cs46xx_download--*/
int snd_cs46xx_clear_BA1 ( struct snd_cs46xx * chip , unsigned long offset , unsigned long len ) ; 
/*--snd_cs46xx_clear_BA1--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_pcm ( struct snd_cs46xx * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_cs46xx_pcm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_pcm_rear ( struct snd_cs46xx * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_cs46xx_pcm_rear--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_pcm_center_lfe ( struct snd_cs46xx * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_cs46xx_pcm_center_lfe--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_pcm_iec958 ( struct snd_cs46xx * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_cs46xx_pcm_iec958--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_mixer ( struct snd_cs46xx * chip , int spdif_device ) ; 
/*--snd_cs46xx_mixer--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_midi ( struct snd_cs46xx * chip , int device , struct snd_rawmidi * * rrawmidi ) ; 
/*--snd_cs46xx_midi--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_gameport ( struct snd_cs46xx * chip ) ; 
/*--snd_cs46xx_gameport--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_start_dsp ( struct snd_cs46xx * chip ) ; 
/*--snd_cs46xx_start_dsp--*/
int snd_cs46xx_suspend ( struct pci_dev * pci , pm_message_t state ) ; 
/*--snd_cs46xx_suspend--*/
int snd_cs46xx_resume ( struct pci_dev * pci ) ; 
/*--snd_cs46xx_resume--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs46xx_create ( struct snd_card * card , struct pci_dev * pci , int external_amp , int thinkpad , struct snd_cs46xx * * rchip ) ; 
/*--snd_cs46xx_create--*/
struct dsp_spos_instance * cs46xx_dsp_spos_create ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_spos_create--*/
void cs46xx_dsp_spos_destroy ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_spos_destroy--*/
int cs46xx_dsp_load_module ( struct snd_cs46xx * chip , struct dsp_module_desc * module ) ; 
/*--cs46xx_dsp_load_module--*/
struct dsp_symbol_entry * cs46xx_dsp_lookup_symbol ( struct snd_cs46xx * chip , char * symbol_name , int symbol_type ) ; 
/*--cs46xx_dsp_lookup_symbol--*/
int cs46xx_dsp_proc_init ( struct snd_card * card , struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_proc_init--*/
int cs46xx_dsp_proc_done ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_proc_done--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_scb ( struct snd_cs46xx * chip , char * name , u32 * scb_data , u32 dest ) ; 
/*--cs46xx_dsp_create_scb--*/
int cs46xx_dsp_scb_and_task_init ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_scb_and_task_init--*/
int cs46xx_dsp_enable_spdif_hw ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_enable_spdif_hw--*/
int cs46xx_dsp_enable_spdif_in ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_enable_spdif_in--*/
int cs46xx_dsp_disable_spdif_in ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_disable_spdif_in--*/
int cs46xx_dsp_enable_pcm_capture ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_enable_pcm_capture--*/
int cs46xx_dsp_disable_pcm_capture ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_disable_pcm_capture--*/
int cs46xx_dsp_enable_adc_capture ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_enable_adc_capture--*/
int cs46xx_dsp_disable_adc_capture ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_disable_adc_capture--*/
int cs46xx_poke_via_dsp ( struct snd_cs46xx * chip , u32 address , u32 data ) ; 
/*--cs46xx_poke_via_dsp--*/
int cs46xx_dsp_set_dac_volume ( struct snd_cs46xx * chip , u16 left , u16 right ) ; 
/*--cs46xx_dsp_set_dac_volume--*/
int cs46xx_dsp_set_iec958_volume ( struct snd_cs46xx * chip , u16 left , u16 right ) ; 
/*--cs46xx_dsp_set_iec958_volume--*/
int cs46xx_dsp_resume ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_resume--*/
void cs46xx_dsp_remove_scb ( struct snd_cs46xx * chip , struct dsp_scb_descriptor * scb ) ; 
/*--cs46xx_dsp_remove_scb--*/
void cs46xx_dsp_proc_free_scb_desc ( struct dsp_scb_descriptor * scb ) ; 
/*--cs46xx_dsp_proc_free_scb_desc--*/
void cs46xx_dsp_proc_register_scb_desc ( struct snd_cs46xx * chip , struct dsp_scb_descriptor * scb ) ; 
/*--cs46xx_dsp_proc_register_scb_desc--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_timing_master_scb ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_create_timing_master_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_codec_out_scb ( struct snd_cs46xx * chip , char * codec_name , u16 channel_disp , u16 fifo_addr , u16 child_scb_addr , u32 dest , struct dsp_scb_descriptor * parent_scb , int scb_child_type ) ; 
/*--cs46xx_dsp_create_codec_out_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_codec_in_scb ( struct snd_cs46xx * chip , char * codec_name , u16 channel_disp , u16 fifo_addr , u16 sample_buffer_addr , u32 dest , struct dsp_scb_descriptor * parent_scb , int scb_child_type ) ; 
/*--cs46xx_dsp_create_codec_in_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_src_task_scb ( struct snd_cs46xx * chip , char * scb_name , int rate , u16 src_buffer_addr , u16 src_delay_buffer_addr , u32 dest , struct dsp_scb_descriptor * parent_scb , int scb_child_type , int pass_through ) ; 
/*--cs46xx_dsp_create_src_task_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_mix_only_scb ( struct snd_cs46xx * chip , char * scb_name , u16 mix_buffer_addr , u32 dest , struct dsp_scb_descriptor * parent_scb , int scb_child_type ) ; 
/*--cs46xx_dsp_create_mix_only_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_mix_to_ostream_scb ( struct snd_cs46xx * chip , char * scb_name , u16 mix_buffer_addr , u16 writeback_spb , u32 dest , struct dsp_scb_descriptor * parent_scb , int scb_child_type ) ; 
/*--cs46xx_dsp_create_mix_to_ostream_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_vari_decimate_scb ( struct snd_cs46xx * chip , char * scb_name , u16 vari_buffer_addr0 , u16 vari_buffer_addr1 , u32 dest , struct dsp_scb_descriptor * parent_scb , int scb_child_type ) ; 
/*--cs46xx_dsp_create_vari_decimate_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_asynch_fg_rx_scb ( struct snd_cs46xx * chip , char * scb_name , u32 dest , u16 hfg_scb_address , u16 asynch_buffer_address , struct dsp_scb_descriptor * parent_scb , int scb_child_type ) ; 
/*--cs46xx_dsp_create_asynch_fg_rx_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_spio_write_scb ( struct snd_cs46xx * chip , char * scb_name , u32 dest , struct dsp_scb_descriptor * parent_scb , int scb_child_type ) ; 
/*--cs46xx_dsp_create_spio_write_scb--*/
struct dsp_scb_descriptor * cs46xx_dsp_create_magic_snoop_scb ( struct snd_cs46xx * chip , char * scb_name , u32 dest , u16 snoop_buffer_address , struct dsp_scb_descriptor * snoop_scb , struct dsp_scb_descriptor * parent_scb , int scb_child_type ) ; 
/*--cs46xx_dsp_create_magic_snoop_scb--*/
struct dsp_pcm_channel_descriptor * cs46xx_dsp_create_pcm_channel ( struct snd_cs46xx * chip , u32 sample_rate , void * private_data , u32 hw_dma_addr , int pcm_channel_id ) ; 
/*--cs46xx_dsp_create_pcm_channel--*/
int cs46xx_dsp_pcm_channel_set_period ( struct snd_cs46xx * chip , struct dsp_pcm_channel_descriptor * pcm_channel , int period_size ) ; 
/*--cs46xx_dsp_pcm_channel_set_period--*/
int cs46xx_dsp_pcm_ostream_set_period ( struct snd_cs46xx * chip , int period_size ) ; 
/*--cs46xx_dsp_pcm_ostream_set_period--*/
void cs46xx_dsp_destroy_pcm_channel ( struct snd_cs46xx * chip , struct dsp_pcm_channel_descriptor * pcm_channel ) ; 
/*--cs46xx_dsp_destroy_pcm_channel--*/
int cs46xx_dsp_pcm_unlink ( struct snd_cs46xx * chip , struct dsp_pcm_channel_descriptor * pcm_channel ) ; 
/*--cs46xx_dsp_pcm_unlink--*/
int cs46xx_dsp_pcm_link ( struct snd_cs46xx * chip , struct dsp_pcm_channel_descriptor * pcm_channel ) ; 
/*--cs46xx_dsp_pcm_link--*/
struct dsp_scb_descriptor * cs46xx_add_record_source ( struct snd_cs46xx * chip , struct dsp_scb_descriptor * source , u16 addr , char * scb_name ) ; 
/*--cs46xx_add_record_source--*/
int cs46xx_src_unlink ( struct snd_cs46xx * chip , struct dsp_scb_descriptor * src ) ; 
/*--cs46xx_src_unlink--*/
int cs46xx_src_link ( struct snd_cs46xx * chip , struct dsp_scb_descriptor * src ) ; 
/*--cs46xx_src_link--*/
int cs46xx_dsp_enable_spdif_out ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_enable_spdif_out--*/
int cs46xx_dsp_disable_spdif_out ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_dsp_disable_spdif_out--*/
int cs46xx_iec958_pre_open ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_iec958_pre_open--*/
int cs46xx_iec958_post_close ( struct snd_cs46xx * chip ) ; 
/*--cs46xx_iec958_post_close--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_cs5535audio_pcm ( struct cs5535audio * cs5535au ) ; 
/*--snd_cs5535audio_pcm--*/
int snd_cs5535audio_suspend ( struct pci_dev * pci , pm_message_t state ) ; 
/*--snd_cs5535audio_suspend--*/
int snd_cs5535audio_resume ( struct pci_dev * pci ) ; 
/*--snd_cs5535audio_resume--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ct_atc_create_alsa_devs ( struct ct_atc * atc ) ; 
/*--ct_atc_create_alsa_devs--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ct_atc_create ( struct snd_card * card , struct pci_dev * pci , unsigned int rsr , unsigned int msr , int chip_type , unsigned int ssid , struct ct_atc * * ratc ) ; 
/*--ct_atc_create--*/
int ct_vm_create ( struct ct_vm * * rvm , struct pci_dev * pci ) ; 
/*--ct_vm_create--*/
void ct_vm_destroy ( struct ct_vm * vm ) ; 
/*--ct_vm_destroy--*/
int ct_alsa_pcm_create ( struct ct_atc * atc , enum CTALSADEVS device , const char * device_name ) ; 
/*--ct_alsa_pcm_create--*/
int ct_mixer_destroy ( struct ct_mixer * mixer ) ; 
/*--ct_mixer_destroy--*/
int ct_mixer_create ( struct ct_atc * atc , struct ct_mixer * * rmixer ) ; 
/*--ct_mixer_create--*/
int ct_alsa_mix_create ( struct ct_atc * atc , enum CTALSADEVS device , const char * device_name ) ; 
/*--ct_alsa_mix_create--*/
int mgr_get_resource ( struct rsc_mgr * mgr , unsigned int n , unsigned int * ridx ) ; 
/*--mgr_get_resource--*/
int mgr_put_resource ( struct rsc_mgr * mgr , unsigned int n , unsigned int idx ) ; 
/*--mgr_put_resource--*/
int rsc_init ( struct rsc * rsc , u32 idx , enum RSCTYP type , u32 msr , void * hw ) ; 
/*--rsc_init--*/
int rsc_uninit ( struct rsc * rsc ) ; 
/*--rsc_uninit--*/
int rsc_mgr_init ( struct rsc_mgr * mgr , enum RSCTYP type , unsigned int amount , void * hw_obj ) ; 
/*--rsc_mgr_init--*/
int rsc_mgr_uninit ( struct rsc_mgr * mgr ) ; 
/*--rsc_mgr_uninit--*/
int src_mgr_create ( void * hw , struct src_mgr * * rsrc_mgr ) ; 
/*--src_mgr_create--*/
int src_mgr_destroy ( struct src_mgr * src_mgr ) ; 
/*--src_mgr_destroy--*/
int srcimp_mgr_create ( void * hw , struct srcimp_mgr * * rsrcimp_mgr ) ; 
/*--srcimp_mgr_create--*/
int srcimp_mgr_destroy ( struct srcimp_mgr * srcimp_mgr ) ; 
/*--srcimp_mgr_destroy--*/
int amixer_mgr_create ( void * hw , struct amixer_mgr * * ramixer_mgr ) ; 
/*--amixer_mgr_create--*/
int amixer_mgr_destroy ( struct amixer_mgr * amixer_mgr ) ; 
/*--amixer_mgr_destroy--*/
int sum_mgr_create ( void * hw , struct sum_mgr * * rsum_mgr ) ; 
/*--sum_mgr_create--*/
int sum_mgr_destroy ( struct sum_mgr * sum_mgr ) ; 
/*--sum_mgr_destroy--*/
int daio_mgr_create ( void * hw , struct daio_mgr * * rdaio_mgr ) ; 
/*--daio_mgr_create--*/
int daio_mgr_destroy ( struct daio_mgr * daio_mgr ) ; 
/*--daio_mgr_destroy--*/
int input_mapper_add ( struct list_head * mappers , struct imapper * entry , int ( * map_op ) ( void * , struct imapper * ) , void * data ) ; 
/*--input_mapper_add--*/
int input_mapper_delete ( struct list_head * mappers , struct imapper * entry , int ( * map_op ) ( void * , struct imapper * ) , void * data ) ; 
/*--input_mapper_delete--*/
void free_input_mapper_list ( struct list_head * head ) ; 
/*--free_input_mapper_list--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) create_hw_obj ( struct pci_dev * pci , enum CHIPTYP chip_type , enum CTCARDS model , struct hw * * rhw ) ; 
/*--create_hw_obj--*/
int destroy_hw_obj ( struct hw * hw ) ; 
/*--destroy_hw_obj--*/
unsigned int get_field ( unsigned int data , unsigned int field ) ; 
/*--get_field--*/
void set_field ( unsigned int * data , unsigned int field , unsigned int value ) ; 
/*--set_field--*/
struct ct_timer_instance * ct_timer_instance_new ( struct ct_timer * atimer , struct ct_atc_pcm * apcm ) ; 
/*--ct_timer_instance_new--*/
void ct_timer_prepare ( struct ct_timer_instance * ti ) ; 
/*--ct_timer_prepare--*/
void ct_timer_start ( struct ct_timer_instance * ti ) ; 
/*--ct_timer_start--*/
void ct_timer_stop ( struct ct_timer_instance * ti ) ; 
/*--ct_timer_stop--*/
void ct_timer_instance_free ( struct ct_timer_instance * ti ) ; 
/*--ct_timer_instance_free--*/
struct ct_timer * ct_timer_new ( struct ct_atc * atc ) ; 
/*--ct_timer_new--*/
void ct_timer_free ( struct ct_timer * atimer ) ; 
/*--ct_timer_free--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) create_20k2_hw_obj ( struct hw * * rhw ) ; 
/*--create_20k2_hw_obj--*/
int destroy_20k2_hw_obj ( struct hw * hw ) ; 
/*--destroy_20k2_hw_obj--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) create_20k1_hw_obj ( struct hw * * rhw ) ; 
/*--create_20k1_hw_obj--*/
int destroy_20k1_hw_obj ( struct hw * hw ) ; 
/*--destroy_20k1_hw_obj--*/
void snd_emu10k1_ops_setup ( struct snd_emux * emux ) ; 
/*--snd_emu10k1_ops_setup--*/
int snd_emu10k1_synth_get_voice ( struct snd_emu10k1 * hw ) ; 
/*--snd_emu10k1_synth_get_voice--*/
int snd_emu10k1_sample_new ( struct snd_emux * rec , struct snd_sf_sample * sp , struct snd_util_memhdr * hdr , const void * data , long count ) ; 
/*--snd_emu10k1_sample_new--*/
int snd_emu10k1_sample_free ( struct snd_emux * rec , struct snd_sf_sample * sp , struct snd_util_memhdr * hdr ) ; 
/*--snd_emu10k1_sample_free--*/
void snd_emu10k1_voice_init ( struct snd_emu10k1 * emu , int ch ) ; 
/*--snd_emu10k1_voice_init--*/
int snd_emu10k1_done ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_done--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_create ( struct snd_card * card , struct pci_dev * pci , unsigned short extin_mask , unsigned short extout_mask , long max_cache_bytes , int enable_ir , uint subsystem , struct snd_emu10k1 * * remu ) ; 
/*--snd_emu10k1_create--*/
void snd_emu10k1_suspend_regs ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_suspend_regs--*/
void snd_emu10k1_resume_init ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_resume_init--*/
void snd_emu10k1_resume_regs ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_resume_regs--*/
irqreturn_t snd_emu10k1_interrupt ( int irq , void * dev_id ) ; 
/*--snd_emu10k1_interrupt--*/
int snd_emu10k1_memblk_map ( struct snd_emu10k1 * emu , struct snd_emu10k1_memblk * blk ) ; 
/*--snd_emu10k1_memblk_map--*/
struct snd_util_memblk * snd_emu10k1_alloc_pages ( struct snd_emu10k1 * emu , struct snd_pcm_substream * substream ) ; 
/*--snd_emu10k1_alloc_pages--*/
int snd_emu10k1_free_pages ( struct snd_emu10k1 * emu , struct snd_util_memblk * blk ) ; 
/*--snd_emu10k1_free_pages--*/
struct snd_util_memblk * snd_emu10k1_synth_alloc ( struct snd_emu10k1 * hw , unsigned int size ) ; 
/*--snd_emu10k1_synth_alloc--*/
int snd_emu10k1_synth_free ( struct snd_emu10k1 * emu , struct snd_util_memblk * memblk ) ; 
/*--snd_emu10k1_synth_free--*/
int snd_emu10k1_synth_bzero ( struct snd_emu10k1 * emu , struct snd_util_memblk * blk , int offset , int size ) ; 
/*--snd_emu10k1_synth_bzero--*/
int snd_emu10k1_synth_copy_from_user ( struct snd_emu10k1 * emu , struct snd_util_memblk * blk , int offset , const char * data , int size ) ; 
/*--snd_emu10k1_synth_copy_from_user--*/
int snd_emu10k1_voice_alloc ( struct snd_emu10k1 * emu , int type , int number , struct snd_emu10k1_voice * * rvoice ) ; 
/*--snd_emu10k1_voice_alloc--*/
int snd_emu10k1_voice_free ( struct snd_emu10k1 * emu , struct snd_emu10k1_voice * pvoice ) ; 
/*--snd_emu10k1_voice_free--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_midi ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_midi--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_audigy_midi ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_audigy_midi--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_pcm ( struct snd_emu10k1 * emu , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_emu10k1_pcm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_pcm_multi ( struct snd_emu10k1 * emu , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_emu10k1_pcm_multi--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_pcm_mic ( struct snd_emu10k1 * emu , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_emu10k1_pcm_mic--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_pcm_efx ( struct snd_emu10k1 * emu , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_emu10k1_pcm_efx--*/
unsigned int snd_emu10k1_ptr_read ( struct snd_emu10k1 * emu , unsigned int reg , unsigned int chn ) ; 
/*--snd_emu10k1_ptr_read--*/
void snd_emu10k1_ptr_write ( struct snd_emu10k1 * emu , unsigned int reg , unsigned int chn , unsigned int data ) ; 
/*--snd_emu10k1_ptr_write--*/
unsigned int snd_emu10k1_ptr20_read ( struct snd_emu10k1 * emu , unsigned int reg , unsigned int chn ) ; 
/*--snd_emu10k1_ptr20_read--*/
void snd_emu10k1_ptr20_write ( struct snd_emu10k1 * emu , unsigned int reg , unsigned int chn , unsigned int data ) ; 
/*--snd_emu10k1_ptr20_write--*/
int snd_emu10k1_spi_write ( struct snd_emu10k1 * emu , unsigned int data ) ; 
/*--snd_emu10k1_spi_write--*/
int snd_emu10k1_i2c_write ( struct snd_emu10k1 * emu , u32 reg , u32 value ) ; 
/*--snd_emu10k1_i2c_write--*/
int snd_emu1010_fpga_write ( struct snd_emu10k1 * emu , u32 reg , u32 value ) ; 
/*--snd_emu1010_fpga_write--*/
int snd_emu1010_fpga_read ( struct snd_emu10k1 * emu , u32 reg , u32 * value ) ; 
/*--snd_emu1010_fpga_read--*/
int snd_emu1010_fpga_link_dst_src_write ( struct snd_emu10k1 * emu , u32 dst , u32 src ) ; 
/*--snd_emu1010_fpga_link_dst_src_write--*/
void snd_emu10k1_intr_enable ( struct snd_emu10k1 * emu , unsigned int intrenb ) ; 
/*--snd_emu10k1_intr_enable--*/
void snd_emu10k1_intr_disable ( struct snd_emu10k1 * emu , unsigned int intrenb ) ; 
/*--snd_emu10k1_intr_disable--*/
void snd_emu10k1_voice_intr_enable ( struct snd_emu10k1 * emu , unsigned int voicenum ) ; 
/*--snd_emu10k1_voice_intr_enable--*/
void snd_emu10k1_voice_intr_disable ( struct snd_emu10k1 * emu , unsigned int voicenum ) ; 
/*--snd_emu10k1_voice_intr_disable--*/
void snd_emu10k1_voice_intr_ack ( struct snd_emu10k1 * emu , unsigned int voicenum ) ; 
/*--snd_emu10k1_voice_intr_ack--*/
void snd_emu10k1_voice_half_loop_intr_enable ( struct snd_emu10k1 * emu , unsigned int voicenum ) ; 
/*--snd_emu10k1_voice_half_loop_intr_enable--*/
void snd_emu10k1_voice_half_loop_intr_disable ( struct snd_emu10k1 * emu , unsigned int voicenum ) ; 
/*--snd_emu10k1_voice_half_loop_intr_disable--*/
void snd_emu10k1_voice_half_loop_intr_ack ( struct snd_emu10k1 * emu , unsigned int voicenum ) ; 
/*--snd_emu10k1_voice_half_loop_intr_ack--*/
void snd_emu10k1_voice_set_loop_stop ( struct snd_emu10k1 * emu , unsigned int voicenum ) ; 
/*--snd_emu10k1_voice_set_loop_stop--*/
void snd_emu10k1_voice_clear_loop_stop ( struct snd_emu10k1 * emu , unsigned int voicenum ) ; 
/*--snd_emu10k1_voice_clear_loop_stop--*/
void snd_emu10k1_wait ( struct snd_emu10k1 * emu , unsigned int wait ) ; 
/*--snd_emu10k1_wait--*/
unsigned short snd_emu10k1_ac97_read ( struct snd_ac97 * ac97 , unsigned short reg ) ; 
/*--snd_emu10k1_ac97_read--*/
void snd_emu10k1_ac97_write ( struct snd_ac97 * ac97 , unsigned short reg , unsigned short data ) ; 
/*--snd_emu10k1_ac97_write--*/
unsigned int snd_emu10k1_rate_to_pitch ( unsigned int rate ) ; 
/*--snd_emu10k1_rate_to_pitch--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_proc_init ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_proc_init--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_mixer ( struct snd_emu10k1 * emu , int pcm_device , int multi_device ) ; 
/*--snd_emu10k1_mixer--*/
int snd_emu10k1_fx8010_register_irq_handler ( struct snd_emu10k1 * emu , snd_fx8010_irq_handler_t * handler , unsigned char gpr_running , void * private_data , struct snd_emu10k1_fx8010_irq * * r_irq ) ; 
/*--snd_emu10k1_fx8010_register_irq_handler--*/
int snd_emu10k1_fx8010_unregister_irq_handler ( struct snd_emu10k1 * emu , struct snd_emu10k1_fx8010_irq * irq ) ; 
/*--snd_emu10k1_fx8010_unregister_irq_handler--*/
unsigned int snd_emu10k1_efx_read ( struct snd_emu10k1 * emu , unsigned int pc ) ; 
/*--snd_emu10k1_efx_read--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_init_efx ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_init_efx--*/
void snd_emu10k1_free_efx ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_free_efx--*/
int snd_emu10k1_fx8010_tram_setup ( struct snd_emu10k1 * emu , u32 size ) ; 
/*--snd_emu10k1_fx8010_tram_setup--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_fx8010_new ( struct snd_emu10k1 * emu , int device , struct snd_hwdep * * rhwdep ) ; 
/*--snd_emu10k1_fx8010_new--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_efx_alloc_pm_buffer ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_efx_alloc_pm_buffer--*/
void snd_emu10k1_efx_free_pm_buffer ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_efx_free_pm_buffer--*/
void snd_emu10k1_efx_suspend ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_efx_suspend--*/
void snd_emu10k1_efx_resume ( struct snd_emu10k1 * emu ) ; 
/*--snd_emu10k1_efx_resume--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_emu10k1_timer ( struct snd_emu10k1 * emu , int device ) ; 
/*--snd_emu10k1_timer--*/
int snd_p16v_free ( struct snd_emu10k1 * chip ) ; 
/*--snd_p16v_free--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_p16v_pcm ( struct snd_emu10k1 * emu , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_p16v_pcm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_p16v_mixer ( struct snd_emu10k1 * emu ) ; 
/*--snd_p16v_mixer--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_p16v_alloc_pm_buffer ( struct snd_emu10k1 * emu ) ; 
/*--snd_p16v_alloc_pm_buffer--*/
void snd_p16v_free_pm_buffer ( struct snd_emu10k1 * emu ) ; 
/*--snd_p16v_free_pm_buffer--*/
void snd_p16v_suspend ( struct snd_emu10k1 * emu ) ; 
/*--snd_p16v_suspend--*/
void snd_p16v_resume ( struct snd_emu10k1 * emu ) ; 
/*--snd_p16v_resume--*/
int snd_hda_add_codec_preset ( struct hda_codec_preset_list * preset ) ; 
/*--snd_hda_add_codec_preset--*/
int snd_hda_delete_codec_preset ( struct hda_codec_preset_list * preset ) ; 
/*--snd_hda_delete_codec_preset--*/
const char * snd_hda_get_jack_location ( u32 cfg ) ; 
/*--snd_hda_get_jack_location--*/
const char * snd_hda_get_jack_connectivity ( u32 cfg ) ; 
/*--snd_hda_get_jack_connectivity--*/
const char * snd_hda_get_jack_type ( u32 cfg ) ; 
/*--snd_hda_get_jack_type--*/
unsigned int snd_hda_codec_read ( struct hda_codec * codec , hda_nid_t nid , int direct , unsigned int verb , unsigned int parm ) ; 
/*--snd_hda_codec_read--*/
int snd_hda_codec_write ( struct hda_codec * codec , hda_nid_t nid , int direct , unsigned int verb , unsigned int parm ) ; 
/*--snd_hda_codec_write--*/
void snd_hda_sequence_write ( struct hda_codec * codec , const struct hda_verb * seq ) ; 
/*--snd_hda_sequence_write--*/
int snd_hda_get_sub_nodes ( struct hda_codec * codec , hda_nid_t nid , hda_nid_t * start_id ) ; 
/*--snd_hda_get_sub_nodes--*/
int snd_hda_get_connections ( struct hda_codec * codec , hda_nid_t nid , hda_nid_t * conn_list , int max_conns ) ; 
/*--snd_hda_get_connections--*/
int snd_hda_queue_unsol_event ( struct hda_bus * bus , u32 res , u32 res_ex ) ; 
/*--snd_hda_queue_unsol_event--*/
int snd_hda_bus_new ( struct snd_card * card , const struct hda_bus_template * temp , struct hda_bus * * busp ) ; 
/*--snd_hda_bus_new--*/
int snd_hda_add_pincfg ( struct hda_codec * codec , struct snd_array * list , hda_nid_t nid , unsigned int cfg ) ; 
/*--snd_hda_add_pincfg--*/
int snd_hda_codec_set_pincfg ( struct hda_codec * codec , hda_nid_t nid , unsigned int cfg ) ; 
/*--snd_hda_codec_set_pincfg--*/
unsigned int snd_hda_codec_get_pincfg ( struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hda_codec_get_pincfg--*/
void snd_hda_shutup_pins ( struct hda_codec * codec ) ; 
/*--snd_hda_shutup_pins--*/
int snd_hda_codec_new ( struct hda_bus * bus , unsigned int codec_addr , struct hda_codec * * codecp ) ; 
/*--snd_hda_codec_new--*/
int snd_hda_codec_configure ( struct hda_codec * codec ) ; 
/*--snd_hda_codec_configure--*/
void snd_hda_codec_setup_stream ( struct hda_codec * codec , hda_nid_t nid , u32 stream_tag , int channel_id , int format ) ; 
/*--snd_hda_codec_setup_stream--*/
void snd_hda_codec_cleanup_stream ( struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hda_codec_cleanup_stream--*/
u32 query_amp_caps ( struct hda_codec * codec , hda_nid_t nid , int direction ) ; 
/*--query_amp_caps--*/
int snd_hda_override_amp_caps ( struct hda_codec * codec , hda_nid_t nid , int dir , unsigned int caps ) ; 
/*--snd_hda_override_amp_caps--*/
u32 snd_hda_query_pin_caps ( struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hda_query_pin_caps--*/
u32 snd_hda_pin_sense ( struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hda_pin_sense--*/
int snd_hda_jack_detect ( struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hda_jack_detect--*/
int snd_hda_codec_amp_read ( struct hda_codec * codec , hda_nid_t nid , int ch , int direction , int index ) ; 
/*--snd_hda_codec_amp_read--*/
int snd_hda_codec_amp_update ( struct hda_codec * codec , hda_nid_t nid , int ch , int direction , int idx , int mask , int val ) ; 
/*--snd_hda_codec_amp_update--*/
int snd_hda_codec_amp_stereo ( struct hda_codec * codec , hda_nid_t nid , int direction , int idx , int mask , int val ) ; 
/*--snd_hda_codec_amp_stereo--*/
void snd_hda_codec_resume_amp ( struct hda_codec * codec ) ; 
/*--snd_hda_codec_resume_amp--*/
int snd_hda_mixer_amp_volume_info ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_hda_mixer_amp_volume_info--*/
int snd_hda_mixer_amp_volume_get ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_amp_volume_get--*/
int snd_hda_mixer_amp_volume_put ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_amp_volume_put--*/
int snd_hda_mixer_amp_tlv ( struct snd_kcontrol * kcontrol , int op_flag , unsigned int size , unsigned int * _tlv ) ; 
/*--snd_hda_mixer_amp_tlv--*/
void snd_hda_set_vmaster_tlv ( struct hda_codec * codec , hda_nid_t nid , int dir , unsigned int * tlv ) ; 
/*--snd_hda_set_vmaster_tlv--*/
struct snd_kcontrol * snd_hda_find_mixer_ctl ( struct hda_codec * codec , const char * name ) ; 
/*--snd_hda_find_mixer_ctl--*/
int snd_hda_ctl_add ( struct hda_codec * codec , hda_nid_t nid , struct snd_kcontrol * kctl ) ; 
/*--snd_hda_ctl_add--*/
int snd_hda_add_nid ( struct hda_codec * codec , struct snd_kcontrol * kctl , unsigned int index , hda_nid_t nid ) ; 
/*--snd_hda_add_nid--*/
void snd_hda_ctls_clear ( struct hda_codec * codec ) ; 
/*--snd_hda_ctls_clear--*/
int snd_hda_codec_reset ( struct hda_codec * codec ) ; 
/*--snd_hda_codec_reset--*/
int snd_hda_add_vmaster ( struct hda_codec * codec , char * name , unsigned int * tlv , const char * * slaves ) ; 
/*--snd_hda_add_vmaster--*/
int snd_hda_mixer_amp_switch_info ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_hda_mixer_amp_switch_info--*/
int snd_hda_mixer_amp_switch_get ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_amp_switch_get--*/
int snd_hda_mixer_amp_switch_put ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_amp_switch_put--*/
int snd_hda_mixer_amp_switch_put_beep ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_amp_switch_put_beep--*/
int snd_hda_mixer_bind_switch_get ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_bind_switch_get--*/
int snd_hda_mixer_bind_switch_put ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_bind_switch_put--*/
int snd_hda_mixer_bind_ctls_info ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_hda_mixer_bind_ctls_info--*/
int snd_hda_mixer_bind_ctls_get ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_bind_ctls_get--*/
int snd_hda_mixer_bind_ctls_put ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_hda_mixer_bind_ctls_put--*/
int snd_hda_mixer_bind_tlv ( struct snd_kcontrol * kcontrol , int op_flag , unsigned int size , unsigned int * tlv ) ; 
/*--snd_hda_mixer_bind_tlv--*/
int snd_hda_create_spdif_out_ctls ( struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hda_create_spdif_out_ctls--*/
int snd_hda_create_spdif_share_sw ( struct hda_codec * codec , struct hda_multi_out * mout ) ; 
/*--snd_hda_create_spdif_share_sw--*/
int snd_hda_create_spdif_in_ctls ( struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hda_create_spdif_in_ctls--*/
int snd_hda_codec_write_cache ( struct hda_codec * codec , hda_nid_t nid , int direct , unsigned int verb , unsigned int parm ) ; 
/*--snd_hda_codec_write_cache--*/
int snd_hda_codec_update_cache ( struct hda_codec * codec , hda_nid_t nid , int direct , unsigned int verb , unsigned int parm ) ; 
/*--snd_hda_codec_update_cache--*/
void snd_hda_codec_resume_cache ( struct hda_codec * codec ) ; 
/*--snd_hda_codec_resume_cache--*/
void snd_hda_sequence_write_cache ( struct hda_codec * codec , const struct hda_verb * seq ) ; 
/*--snd_hda_sequence_write_cache--*/
int snd_hda_build_controls ( struct hda_bus * bus ) ; 
/*--snd_hda_build_controls--*/
int snd_hda_codec_build_controls ( struct hda_codec * codec ) ; 
/*--snd_hda_codec_build_controls--*/
unsigned int snd_hda_calc_stream_format ( unsigned int rate , unsigned int channels , unsigned int format , unsigned int maxbps ) ; 
/*--snd_hda_calc_stream_format--*/
int snd_hda_is_supported_format ( struct hda_codec * codec , hda_nid_t nid , unsigned int format ) ; 
/*--snd_hda_is_supported_format--*/
int snd_hda_codec_build_pcms ( struct hda_codec * codec ) ; 
/*--snd_hda_codec_build_pcms--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_hda_build_pcms ( struct hda_bus * bus ) ; 
/*--snd_hda_build_pcms--*/
int snd_hda_check_board_config ( struct hda_codec * codec , int num_configs , const char * * models , const struct snd_pci_quirk * tbl ) ; 
/*--snd_hda_check_board_config--*/
int snd_hda_check_board_codec_sid_config ( struct hda_codec * codec , int num_configs , const char * * models , const struct snd_pci_quirk * tbl ) ; 
/*--snd_hda_check_board_codec_sid_config--*/
int snd_hda_add_new_ctls ( struct hda_codec * codec , struct snd_kcontrol_new * knew ) ; 
/*--snd_hda_add_new_ctls--*/
void snd_hda_update_power_acct ( struct hda_codec * codec ) ; 
/*--snd_hda_update_power_acct--*/
void snd_hda_power_up ( struct hda_codec * codec ) ; 
/*--snd_hda_power_up--*/
void snd_hda_power_down ( struct hda_codec * codec ) ; 
/*--snd_hda_power_down--*/
int snd_hda_check_amp_list_power ( struct hda_codec * codec , struct hda_loopback_check * check , hda_nid_t nid ) ; 
/*--snd_hda_check_amp_list_power--*/
int snd_hda_ch_mode_info ( struct hda_codec * codec , struct snd_ctl_elem_info * uinfo , const struct hda_channel_mode * chmode , int num_chmodes ) ; 
/*--snd_hda_ch_mode_info--*/
int snd_hda_ch_mode_get ( struct hda_codec * codec , struct snd_ctl_elem_value * ucontrol , const struct hda_channel_mode * chmode , int num_chmodes , int max_channels ) ; 
/*--snd_hda_ch_mode_get--*/
int snd_hda_ch_mode_put ( struct hda_codec * codec , struct snd_ctl_elem_value * ucontrol , const struct hda_channel_mode * chmode , int num_chmodes , int * max_channelsp ) ; 
/*--snd_hda_ch_mode_put--*/
int snd_hda_input_mux_info ( const struct hda_input_mux * imux , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_hda_input_mux_info--*/
int snd_hda_input_mux_put ( struct hda_codec * codec , const struct hda_input_mux * imux , struct snd_ctl_elem_value * ucontrol , hda_nid_t nid , unsigned int * cur_val ) ; 
/*--snd_hda_input_mux_put--*/
void snd_hda_bus_reboot_notify ( struct hda_bus * bus ) ; 
/*--snd_hda_bus_reboot_notify--*/
int snd_hda_multi_out_dig_open ( struct hda_codec * codec , struct hda_multi_out * mout ) ; 
/*--snd_hda_multi_out_dig_open--*/
int snd_hda_multi_out_dig_prepare ( struct hda_codec * codec , struct hda_multi_out * mout , unsigned int stream_tag , unsigned int format , struct snd_pcm_substream * substream ) ; 
/*--snd_hda_multi_out_dig_prepare--*/
int snd_hda_multi_out_dig_cleanup ( struct hda_codec * codec , struct hda_multi_out * mout ) ; 
/*--snd_hda_multi_out_dig_cleanup--*/
int snd_hda_multi_out_dig_close ( struct hda_codec * codec , struct hda_multi_out * mout ) ; 
/*--snd_hda_multi_out_dig_close--*/
int snd_hda_multi_out_analog_open ( struct hda_codec * codec , struct hda_multi_out * mout , struct snd_pcm_substream * substream , struct hda_pcm_stream * hinfo ) ; 
/*--snd_hda_multi_out_analog_open--*/
int snd_hda_multi_out_analog_prepare ( struct hda_codec * codec , struct hda_multi_out * mout , unsigned int stream_tag , unsigned int format , struct snd_pcm_substream * substream ) ; 
/*--snd_hda_multi_out_analog_prepare--*/
int snd_hda_multi_out_analog_cleanup ( struct hda_codec * codec , struct hda_multi_out * mout ) ; 
/*--snd_hda_multi_out_analog_cleanup--*/
int snd_hda_parse_pin_def_config ( struct hda_codec * codec , struct auto_pin_cfg * cfg , hda_nid_t * ignore_nids ) ; 
/*--snd_hda_parse_pin_def_config--*/
int snd_hda_suspend ( struct hda_bus * bus ) ; 
/*--snd_hda_suspend--*/
int snd_hda_resume ( struct hda_bus * bus ) ; 
/*--snd_hda_resume--*/
void * snd_array_new ( struct snd_array * array ) ; 
/*--snd_array_new--*/
void snd_array_free ( struct snd_array * array ) ; 
/*--snd_array_free--*/
void snd_print_pcm_rates ( int pcm , char * buf , int buflen ) ; 
/*--snd_print_pcm_rates--*/
void snd_print_pcm_bits ( int pcm , char * buf , int buflen ) ; 
/*--snd_print_pcm_bits--*/
int snd_hda_parse_generic_codec ( struct hda_codec * codec ) ; 
/*--snd_hda_parse_generic_codec--*/
int snd_hda_codec_proc_new ( struct hda_codec * codec ) ; 
/*--snd_hda_codec_proc_new--*/
int snd_hdmi_get_eld_size ( struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hdmi_get_eld_size--*/
int snd_hdmi_get_eld ( struct hdmi_eld * eld , struct hda_codec * codec , hda_nid_t nid ) ; 
/*--snd_hdmi_get_eld--*/
void snd_print_channel_allocation ( int spk_alloc , char * buf , int buflen ) ; 
/*--snd_print_channel_allocation--*/
void snd_hdmi_show_eld ( struct hdmi_eld * e ) ; 
/*--snd_hdmi_show_eld--*/
int snd_hda_eld_proc_new ( struct hda_codec * codec , struct hdmi_eld * eld , int index ) ; 
/*--snd_hda_eld_proc_new--*/
void snd_hda_eld_proc_free ( struct hda_codec * codec , struct hdmi_eld * eld ) ; 
/*--snd_hda_eld_proc_free--*/
int snd_hda_create_hwdep ( struct hda_codec * codec ) ; 
/*--snd_hda_create_hwdep--*/
int snd_hda_hwdep_add_power_sysfs ( struct hda_codec * codec ) ; 
/*--snd_hda_hwdep_add_power_sysfs--*/
int snd_hda_hwdep_add_sysfs ( struct hda_codec * codec ) ; 
/*--snd_hda_hwdep_add_sysfs--*/
const char * snd_hda_get_hint ( struct hda_codec * codec , const char * key ) ; 
/*--snd_hda_get_hint--*/
int snd_hda_get_bool_hint ( struct hda_codec * codec , const char * key ) ; 
/*--snd_hda_get_bool_hint--*/
int snd_hda_load_patch ( struct hda_bus * bus , const char * patch ) ; 
/*--snd_hda_load_patch--*/
int snd_hda_enable_beep_device ( struct hda_codec * codec , int enable ) ; 
/*--snd_hda_enable_beep_device--*/
int snd_hda_attach_beep_device ( struct hda_codec * codec , int nid ) ; 
/*--snd_hda_attach_beep_device--*/
void snd_hda_detach_beep_device ( struct hda_codec * codec ) ; 
/*--snd_hda_detach_beep_device--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ice1712_init_cs8427 ( struct snd_ice1712 * ice , int addr ) ; 
/*--snd_ice1712_init_cs8427--*/
int snd_ice1712_gpio_get ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_ice1712_gpio_get--*/
int snd_ice1712_gpio_put ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_ice1712_gpio_put--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ice1712_spdif_build_controls ( struct snd_ice1712 * ice ) ; 
/*--snd_ice1712_spdif_build_controls--*/
int snd_ice1724_get_route_val ( struct snd_ice1712 * ice , int shift ) ; 
/*--snd_ice1724_get_route_val--*/
int snd_ice1724_put_route_val ( struct snd_ice1712 * ice , unsigned int val , int shift ) ; 
/*--snd_ice1724_put_route_val--*/
unsigned char snd_vt1724_read_i2c ( struct snd_ice1712 * ice , unsigned char dev , unsigned char addr ) ; 
/*--snd_vt1724_read_i2c--*/
void snd_vt1724_write_i2c ( struct snd_ice1712 * ice , unsigned char dev , unsigned char addr , unsigned char data ) ; 
/*--snd_vt1724_write_i2c--*/
int snd_ice1712_akm4xxx_init ( struct snd_akm4xxx * ak , const struct snd_akm4xxx * temp , const struct snd_ak4xxx_private * _priv , struct snd_ice1712 * ice ) ; 
/*--snd_ice1712_akm4xxx_init--*/
void snd_ice1712_akm4xxx_free ( struct snd_ice1712 * ice ) ; 
/*--snd_ice1712_akm4xxx_free--*/
int snd_ice1712_akm4xxx_build_controls ( struct snd_ice1712 * ice ) ; 
/*--snd_ice1712_akm4xxx_build_controls--*/
unsigned long lx_dsp_reg_read ( struct lx6464es * chip , int port ) ; 
/*--lx_dsp_reg_read--*/
void lx_dsp_reg_readbuf ( struct lx6464es * chip , int port , u32 * data , u32 len ) ; 
/*--lx_dsp_reg_readbuf--*/
void lx_dsp_reg_write ( struct lx6464es * chip , int port , unsigned data ) ; 
/*--lx_dsp_reg_write--*/
void lx_dsp_reg_writebuf ( struct lx6464es * chip , int port , const u32 * data , u32 len ) ; 
/*--lx_dsp_reg_writebuf--*/
unsigned long lx_plx_reg_read ( struct lx6464es * chip , int port ) ; 
/*--lx_plx_reg_read--*/
void lx_plx_reg_write ( struct lx6464es * chip , int port , u32 data ) ; 
/*--lx_plx_reg_write--*/
u32 lx_plx_mbox_read ( struct lx6464es * chip , int mbox_nr ) ; 
/*--lx_plx_mbox_read--*/
int lx_plx_mbox_write ( struct lx6464es * chip , int mbox_nr , u32 value ) ; 
/*--lx_plx_mbox_write--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) lx_dsp_get_version ( struct lx6464es * chip , u32 * rdsp_version ) ; 
/*--lx_dsp_get_version--*/
int lx_dsp_get_clock_frequency ( struct lx6464es * chip , u32 * rfreq ) ; 
/*--lx_dsp_get_clock_frequency--*/
int lx_dsp_get_mac ( struct lx6464es * chip , u8 * mac_address ) ; 
/*--lx_dsp_get_mac--*/
int lx_dsp_set_granularity ( struct lx6464es * chip , u32 gran ) ; 
/*--lx_dsp_set_granularity--*/
int lx_dsp_read_async_events ( struct lx6464es * chip , u32 * data ) ; 
/*--lx_dsp_read_async_events--*/
int lx_dsp_es_check_pipeline ( struct lx6464es * chip ) ; 
/*--lx_dsp_es_check_pipeline--*/
int lx_pipe_allocate ( struct lx6464es * chip , u32 pipe , int is_capture , int channels ) ; 
/*--lx_pipe_allocate--*/
int lx_pipe_release ( struct lx6464es * chip , u32 pipe , int is_capture ) ; 
/*--lx_pipe_release--*/
int lx_buffer_ask ( struct lx6464es * chip , u32 pipe , int is_capture , u32 * r_needed , u32 * r_freed , u32 * size_array ) ; 
/*--lx_buffer_ask--*/
int lx_pipe_stop ( struct lx6464es * chip , u32 pipe , int is_capture ) ; 
/*--lx_pipe_stop--*/
int lx_pipe_start ( struct lx6464es * chip , u32 pipe , int is_capture ) ; 
/*--lx_pipe_start--*/
int lx_pipe_pause ( struct lx6464es * chip , u32 pipe , int is_capture ) ; 
/*--lx_pipe_pause--*/
int lx_pipe_sample_count ( struct lx6464es * chip , u32 pipe , int is_capture , u64 * rsample_count ) ; 
/*--lx_pipe_sample_count--*/
int lx_pipe_state ( struct lx6464es * chip , u32 pipe , int is_capture , u16 * rstate ) ; 
/*--lx_pipe_state--*/
int lx_pipe_wait_for_start ( struct lx6464es * chip , u32 pipe , int is_capture ) ; 
/*--lx_pipe_wait_for_start--*/
int lx_pipe_wait_for_idle ( struct lx6464es * chip , u32 pipe , int is_capture ) ; 
/*--lx_pipe_wait_for_idle--*/
int lx_stream_set_state ( struct lx6464es * chip , u32 pipe , int is_capture , enum stream_state_t state ) ; 
/*--lx_stream_set_state--*/
int lx_stream_set_format ( struct lx6464es * chip , struct snd_pcm_runtime * runtime , u32 pipe , int is_capture ) ; 
/*--lx_stream_set_format--*/
int lx_stream_state ( struct lx6464es * chip , u32 pipe , int is_capture , int * rstate ) ; 
/*--lx_stream_state--*/
int lx_stream_sample_position ( struct lx6464es * chip , u32 pipe , int is_capture , u64 * r_bytepos ) ; 
/*--lx_stream_sample_position--*/
int lx_buffer_give ( struct lx6464es * chip , u32 pipe , int is_capture , u32 buffer_size , u32 buf_address_lo , u32 buf_address_hi , u32 * r_buffer_index ) ; 
/*--lx_buffer_give--*/
int lx_buffer_free ( struct lx6464es * chip , u32 pipe , int is_capture , u32 * r_buffer_size ) ; 
/*--lx_buffer_free--*/
int lx_buffer_cancel ( struct lx6464es * chip , u32 pipe , int is_capture , u32 buffer_index ) ; 
/*--lx_buffer_cancel--*/
int lx_level_unmute ( struct lx6464es * chip , int is_capture , int unmute ) ; 
/*--lx_level_unmute--*/
int lx_level_peaks ( struct lx6464es * chip , int is_capture , int channels , u32 * r_levels ) ; 
/*--lx_level_peaks--*/
void lx_tasklet_playback ( unsigned long data ) ; 
/*--lx_tasklet_playback--*/
void lx_tasklet_capture ( unsigned long data ) ; 
/*--lx_tasklet_capture--*/
irqreturn_t lx_interrupt ( int irq , void * dev_id ) ; 
/*--lx_interrupt--*/
void lx_irq_enable ( struct lx6464es * chip ) ; 
/*--lx_irq_enable--*/
void lx_irq_disable ( struct lx6464es * chip ) ; 
/*--lx_irq_disable--*/
struct mixart_pipe * snd_mixart_add_ref_pipe ( struct snd_mixart * chip , int pcm_number , int capture , int monitoring ) ; 
/*--snd_mixart_add_ref_pipe--*/
int snd_mixart_kill_ref_pipe ( struct mixart_mgr * mgr , struct mixart_pipe * pipe , int monitoring ) ; 
/*--snd_mixart_kill_ref_pipe--*/
int snd_mixart_create_pcm ( struct snd_mixart * chip ) ; 
/*--snd_mixart_create_pcm--*/
int snd_mixart_send_msg ( struct mixart_mgr * mgr , struct mixart_msg * request , int max_resp_size , void * resp_data ) ; 
/*--snd_mixart_send_msg--*/
int snd_mixart_send_msg_wait_notif ( struct mixart_mgr * mgr , struct mixart_msg * request , u32 notif_event ) ; 
/*--snd_mixart_send_msg_wait_notif--*/
int snd_mixart_send_msg_nonblock ( struct mixart_mgr * mgr , struct mixart_msg * request ) ; 
/*--snd_mixart_send_msg_nonblock--*/
void snd_mixart_msg_tasklet ( unsigned long arg ) ; 
/*--snd_mixart_msg_tasklet--*/
irqreturn_t snd_mixart_interrupt ( int irq , void * dev_id ) ; 
/*--snd_mixart_interrupt--*/
void snd_mixart_init_mailbox ( struct mixart_mgr * mgr ) ; 
/*--snd_mixart_init_mailbox--*/
void snd_mixart_exit_mailbox ( struct mixart_mgr * mgr ) ; 
/*--snd_mixart_exit_mailbox--*/
void snd_mixart_reset_board ( struct mixart_mgr * mgr ) ; 
/*--snd_mixart_reset_board--*/
int snd_mixart_setup_firmware ( struct mixart_mgr * mgr ) ; 
/*--snd_mixart_setup_firmware--*/
int mixart_update_playback_stream_level ( struct snd_mixart * chip , int is_aes , int idx ) ; 
/*--mixart_update_playback_stream_level--*/
int mixart_update_capture_stream_level ( struct snd_mixart * chip , int is_aes ) ; 
/*--mixart_update_capture_stream_level--*/
int snd_mixart_create_mixer ( struct mixart_mgr * mgr ) ; 
/*--snd_mixart_create_mixer--*/
u8 oxygen_read8 ( struct oxygen * chip , unsigned int reg ) ; 
/*--oxygen_read8--*/
u16 oxygen_read16 ( struct oxygen * chip , unsigned int reg ) ; 
/*--oxygen_read16--*/
u32 oxygen_read32 ( struct oxygen * chip , unsigned int reg ) ; 
/*--oxygen_read32--*/
void oxygen_write8 ( struct oxygen * chip , unsigned int reg , u8 value ) ; 
/*--oxygen_write8--*/
void oxygen_write16 ( struct oxygen * chip , unsigned int reg , u16 value ) ; 
/*--oxygen_write16--*/
void oxygen_write32 ( struct oxygen * chip , unsigned int reg , u32 value ) ; 
/*--oxygen_write32--*/
void oxygen_write8_masked ( struct oxygen * chip , unsigned int reg , u8 value , u8 mask ) ; 
/*--oxygen_write8_masked--*/
void oxygen_write16_masked ( struct oxygen * chip , unsigned int reg , u16 value , u16 mask ) ; 
/*--oxygen_write16_masked--*/
void oxygen_write32_masked ( struct oxygen * chip , unsigned int reg , u32 value , u32 mask ) ; 
/*--oxygen_write32_masked--*/
void oxygen_write_ac97 ( struct oxygen * chip , unsigned int codec , unsigned int index , u16 data ) ; 
/*--oxygen_write_ac97--*/
u16 oxygen_read_ac97 ( struct oxygen * chip , unsigned int codec , unsigned int index ) ; 
/*--oxygen_read_ac97--*/
void oxygen_write_ac97_masked ( struct oxygen * chip , unsigned int codec , unsigned int index , u16 data , u16 mask ) ; 
/*--oxygen_write_ac97_masked--*/
void oxygen_write_spi ( struct oxygen * chip , u8 control , unsigned int data ) ; 
/*--oxygen_write_spi--*/
void oxygen_write_i2c ( struct oxygen * chip , u8 device , u8 map , u8 data ) ; 
/*--oxygen_write_i2c--*/
void oxygen_reset_uart ( struct oxygen * chip ) ; 
/*--oxygen_reset_uart--*/
void oxygen_write_uart ( struct oxygen * chip , u8 data ) ; 
/*--oxygen_write_uart--*/
u16 oxygen_read_eeprom ( struct oxygen * chip , unsigned int index ) ; 
/*--oxygen_read_eeprom--*/
void oxygen_write_eeprom ( struct oxygen * chip , unsigned int index , u16 value ) ; 
/*--oxygen_write_eeprom--*/
int oxygen_pci_probe ( struct pci_dev * pci , int index , char * id , struct module * owner , const struct pci_device_id * ids , int ( * get_model ) ( struct oxygen * chip , const struct pci_device_id * id ) ) ; 
/*--oxygen_pci_probe--*/
void oxygen_pci_remove ( struct pci_dev * pci ) ; 
/*--oxygen_pci_remove--*/
int oxygen_pci_suspend ( struct pci_dev * pci , pm_message_t state ) ; 
/*--oxygen_pci_suspend--*/
int oxygen_pci_resume ( struct pci_dev * pci ) ; 
/*--oxygen_pci_resume--*/
void oxygen_pci_shutdown ( struct pci_dev * pci ) ; 
/*--oxygen_pci_shutdown--*/
void oxygen_update_dac_routing ( struct oxygen * chip ) ; 
/*--oxygen_update_dac_routing--*/
void oxygen_update_spdif_source ( struct oxygen * chip ) ; 
/*--oxygen_update_spdif_source--*/
int oxygen_mixer_init ( struct oxygen * chip ) ; 
/*--oxygen_mixer_init--*/
unsigned int oxygen_default_i2s_mclk ( struct oxygen * chip , unsigned int channel , struct snd_pcm_hw_params * hw_params ) ; 
/*--oxygen_default_i2s_mclk--*/
int oxygen_pcm_init ( struct oxygen * chip ) ; 
/*--oxygen_pcm_init--*/
void xonar_enable_output ( struct oxygen * chip ) ; 
/*--xonar_enable_output--*/
void xonar_disable_output ( struct oxygen * chip ) ; 
/*--xonar_disable_output--*/
void xonar_init_ext_power ( struct oxygen * chip ) ; 
/*--xonar_init_ext_power--*/
void xonar_init_cs53x1 ( struct oxygen * chip ) ; 
/*--xonar_init_cs53x1--*/
void xonar_set_cs53x1_params ( struct oxygen * chip , struct snd_pcm_hw_params * params ) ; 
/*--xonar_set_cs53x1_params--*/
int xonar_gpio_bit_switch_get ( struct snd_kcontrol * ctl , struct snd_ctl_elem_value * value ) ; 
/*--xonar_gpio_bit_switch_get--*/
int xonar_gpio_bit_switch_put ( struct snd_kcontrol * ctl , struct snd_ctl_elem_value * value ) ; 
/*--xonar_gpio_bit_switch_put--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) get_xonar_pcm179x_model ( struct oxygen * chip , const struct pci_device_id * id ) ; 
/*--get_xonar_pcm179x_model--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) get_xonar_cs43xx_model ( struct oxygen * chip , const struct pci_device_id * id ) ; 
/*--get_xonar_cs43xx_model--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) get_xonar_wm87x6_model ( struct oxygen * chip , const struct pci_device_id * id ) ; 
/*--get_xonar_wm87x6_model--*/
void xonar_hdmi_init ( struct oxygen * chip , struct xonar_hdmi * hdmi ) ; 
/*--xonar_hdmi_init--*/
void xonar_hdmi_cleanup ( struct oxygen * chip ) ; 
/*--xonar_hdmi_cleanup--*/
void xonar_hdmi_resume ( struct oxygen * chip , struct xonar_hdmi * hdmi ) ; 
/*--xonar_hdmi_resume--*/
void xonar_hdmi_pcm_hardware_filter ( unsigned int channel , struct snd_pcm_hardware * hardware ) ; 
/*--xonar_hdmi_pcm_hardware_filter--*/
void xonar_set_hdmi_params ( struct oxygen * chip , struct xonar_hdmi * hdmi , struct snd_pcm_hw_params * params ) ; 
/*--xonar_set_hdmi_params--*/
void xonar_hdmi_uart_input ( struct oxygen * chip ) ; 
/*--xonar_hdmi_uart_input--*/
int pcxhr_set_clock ( struct pcxhr_mgr * mgr , unsigned int rate ) ; 
/*--pcxhr_set_clock--*/
int pcxhr_get_external_clock ( struct pcxhr_mgr * mgr , enum pcxhr_clock_type clock_type , int * sample_rate ) ; 
/*--pcxhr_get_external_clock--*/
int pcxhr_create_pcm ( struct snd_pcxhr * chip ) ; 
/*--pcxhr_create_pcm--*/
void pcxhr_reset_board ( struct pcxhr_mgr * mgr ) ; 
/*--pcxhr_reset_board--*/
int pcxhr_setup_firmware ( struct pcxhr_mgr * mgr ) ; 
/*--pcxhr_setup_firmware--*/
int pcxhr_create_mixer ( struct pcxhr_mgr * mgr ) ; 
/*--pcxhr_create_mixer--*/
void pcxhr_reset_xilinx_com ( struct pcxhr_mgr * mgr ) ; 
/*--pcxhr_reset_xilinx_com--*/
void pcxhr_reset_dsp ( struct pcxhr_mgr * mgr ) ; 
/*--pcxhr_reset_dsp--*/
void pcxhr_enable_dsp ( struct pcxhr_mgr * mgr ) ; 
/*--pcxhr_enable_dsp--*/
int pcxhr_load_xilinx_binary ( struct pcxhr_mgr * mgr , const struct firmware * xilinx , int second ) ; 
/*--pcxhr_load_xilinx_binary--*/
int pcxhr_load_eeprom_binary ( struct pcxhr_mgr * mgr , const struct firmware * eeprom ) ; 
/*--pcxhr_load_eeprom_binary--*/
int pcxhr_load_boot_binary ( struct pcxhr_mgr * mgr , const struct firmware * boot ) ; 
/*--pcxhr_load_boot_binary--*/
int pcxhr_load_dsp_binary ( struct pcxhr_mgr * mgr , const struct firmware * dsp ) ; 
/*--pcxhr_load_dsp_binary--*/
void pcxhr_init_rmh ( struct pcxhr_rmh * rmh , int cmd ) ; 
/*--pcxhr_init_rmh--*/
void pcxhr_set_pipe_cmd_params ( struct pcxhr_rmh * rmh , int capture , unsigned int param1 , unsigned int param2 , unsigned int param3 ) ; 
/*--pcxhr_set_pipe_cmd_params--*/
int pcxhr_send_msg ( struct pcxhr_mgr * mgr , struct pcxhr_rmh * rmh ) ; 
/*--pcxhr_send_msg--*/
int pcxhr_set_pipe_state ( struct pcxhr_mgr * mgr , int playback_mask , int capture_mask , int start ) ; 
/*--pcxhr_set_pipe_state--*/
int pcxhr_write_io_num_reg_cont ( struct pcxhr_mgr * mgr , unsigned int mask , unsigned int value , int * changed ) ; 
/*--pcxhr_write_io_num_reg_cont--*/
void pcxhr_msg_tasklet ( unsigned long arg ) ; 
/*--pcxhr_msg_tasklet--*/
irqreturn_t pcxhr_interrupt ( int irq , void * dev_id ) ; 
/*--pcxhr_interrupt--*/
int hr222_sub_init ( struct pcxhr_mgr * mgr ) ; 
/*--hr222_sub_init--*/
int hr222_sub_set_clock ( struct pcxhr_mgr * mgr , unsigned int rate , int * changed ) ; 
/*--hr222_sub_set_clock--*/
int hr222_get_external_clock ( struct pcxhr_mgr * mgr , enum pcxhr_clock_type clock_type , int * sample_rate ) ; 
/*--hr222_get_external_clock--*/
int hr222_read_gpio ( struct pcxhr_mgr * mgr , int is_gpi , int * value ) ; 
/*--hr222_read_gpio--*/
int hr222_write_gpo ( struct pcxhr_mgr * mgr , int value ) ; 
/*--hr222_write_gpo--*/
int hr222_update_analog_audio_level ( struct snd_pcxhr * chip , int is_capture , int channel ) ; 
/*--hr222_update_analog_audio_level--*/
int hr222_set_audio_source ( struct snd_pcxhr * chip ) ; 
/*--hr222_set_audio_source--*/
int hr222_iec958_capture_byte ( struct snd_pcxhr * chip , int aes_idx , unsigned char * aes_bits ) ; 
/*--hr222_iec958_capture_byte--*/
int hr222_iec958_update_byte ( struct snd_pcxhr * chip , int aes_idx , unsigned char aes_bits ) ; 
/*--hr222_iec958_update_byte--*/
int hr222_add_mic_controls ( struct snd_pcxhr * chip ) ; 
/*--hr222_add_mic_controls--*/
void snd_trident_start_voice ( struct snd_trident * trident , unsigned int voice ) ; 
/*--snd_trident_start_voice--*/
void snd_trident_stop_voice ( struct snd_trident * trident , unsigned int voice ) ; 
/*--snd_trident_stop_voice--*/
void snd_trident_write_voice_regs ( struct snd_trident * trident , struct snd_trident_voice * voice ) ; 
/*--snd_trident_write_voice_regs--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_trident_pcm ( struct snd_trident * trident , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_trident_pcm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_trident_foldback_pcm ( struct snd_trident * trident , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_trident_foldback_pcm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_trident_spdif_pcm ( struct snd_trident * trident , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_trident_spdif_pcm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_trident_create_gameport ( struct snd_trident * chip ) ; 
/*--snd_trident_create_gameport--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_trident_create ( struct snd_card * card , struct pci_dev * pci , int pcm_streams , int pcm_spdif_device , int max_wavetable_size , struct snd_trident * * rtrident ) ; 
/*--snd_trident_create--*/
struct snd_trident_voice * snd_trident_alloc_voice ( struct snd_trident * trident , int type , int client , int port ) ; 
/*--snd_trident_alloc_voice--*/
void snd_trident_free_voice ( struct snd_trident * trident , struct snd_trident_voice * voice ) ; 
/*--snd_trident_free_voice--*/
int snd_trident_suspend ( struct pci_dev * pci , pm_message_t state ) ; 
/*--snd_trident_suspend--*/
int snd_trident_resume ( struct pci_dev * pci ) ; 
/*--snd_trident_resume--*/
struct snd_util_memblk * snd_trident_alloc_pages ( struct snd_trident * trident , struct snd_pcm_substream * substream ) ; 
/*--snd_trident_alloc_pages--*/
int snd_trident_free_pages ( struct snd_trident * trident , struct snd_util_memblk * blk ) ; 
/*--snd_trident_free_pages--*/
void snd_ymfpci_free_gameport ( struct snd_ymfpci * chip ) ; 
/*--snd_ymfpci_free_gameport--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ymfpci_pcm ( struct snd_ymfpci * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_ymfpci_pcm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ymfpci_pcm2 ( struct snd_ymfpci * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_ymfpci_pcm2--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ymfpci_pcm_spdif ( struct snd_ymfpci * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_ymfpci_pcm_spdif--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ymfpci_pcm_4ch ( struct snd_ymfpci * chip , int device , struct snd_pcm * * rpcm ) ; 
/*--snd_ymfpci_pcm_4ch--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ymfpci_mixer ( struct snd_ymfpci * chip , int rear_switch ) ; 
/*--snd_ymfpci_mixer--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ymfpci_timer ( struct snd_ymfpci * chip , int device ) ; 
/*--snd_ymfpci_timer--*/
int snd_ymfpci_suspend ( struct pci_dev * pci , pm_message_t state ) ; 
/*--snd_ymfpci_suspend--*/
int snd_ymfpci_resume ( struct pci_dev * pci ) ; 
/*--snd_ymfpci_resume--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_ymfpci_create ( struct snd_card * card , struct pci_dev * pci , unsigned short old_legacy_ctrl , struct snd_ymfpci * * rchip ) ; 
/*--snd_ymfpci_create--*/
void pdacf_reinit ( struct snd_pdacf * chip , int resume ) ; 
/*--pdacf_reinit--*/
struct snd_pdacf * snd_pdacf_create ( struct snd_card * card ) ; 
/*--snd_pdacf_create--*/
int snd_pdacf_ak4117_create ( struct snd_pdacf * chip ) ; 
/*--snd_pdacf_ak4117_create--*/
void snd_pdacf_powerdown ( struct snd_pdacf * chip ) ; 
/*--snd_pdacf_powerdown--*/
int snd_pdacf_suspend ( struct snd_pdacf * chip , pm_message_t state ) ; 
/*--snd_pdacf_suspend--*/
int snd_pdacf_resume ( struct snd_pdacf * chip ) ; 
/*--snd_pdacf_resume--*/
irqreturn_t pdacf_interrupt ( int irq , void * dev ) ; 
/*--pdacf_interrupt--*/
void pdacf_tasklet ( unsigned long private_data ) ; 
/*--pdacf_tasklet--*/
int snd_pdacf_pcm_new ( struct snd_pdacf * chip ) ; 
/*--snd_pdacf_pcm_new--*/
void vx_set_mic_boost ( struct vx_core * chip , int boost ) ; 
/*--vx_set_mic_boost--*/
void vx_set_mic_level ( struct vx_core * chip , int level ) ; 
/*--vx_set_mic_level--*/
int vxp_add_mic_controls ( struct vx_core * _chip ) ; 
/*--vxp_add_mic_controls--*/
int snd_soc_codec_volatile_register ( struct snd_soc_codec * codec , int reg ) ; 
/*--snd_soc_codec_volatile_register--*/
int snd_soc_new_ac97_codec ( struct snd_soc_codec * codec , struct snd_ac97_bus_ops * ops , int num ) ; 
/*--snd_soc_new_ac97_codec--*/
void snd_soc_free_ac97_codec ( struct snd_soc_codec * codec ) ; 
/*--snd_soc_free_ac97_codec--*/
int snd_soc_update_bits ( struct snd_soc_codec * codec , unsigned short reg , unsigned int mask , unsigned int value ) ; 
/*--snd_soc_update_bits--*/
int snd_soc_update_bits_locked ( struct snd_soc_codec * codec , unsigned short reg , unsigned int mask , unsigned int value ) ; 
/*--snd_soc_update_bits_locked--*/
int snd_soc_test_bits ( struct snd_soc_codec * codec , unsigned short reg , unsigned int mask , unsigned int value ) ; 
/*--snd_soc_test_bits--*/
int snd_soc_new_pcms ( struct snd_soc_device * socdev , int idx , const char * xid ) ; 
/*--snd_soc_new_pcms--*/
void snd_soc_free_pcms ( struct snd_soc_device * socdev ) ; 
/*--snd_soc_free_pcms--*/
int snd_soc_set_runtime_hwparams ( struct snd_pcm_substream * substream , const struct snd_pcm_hardware * hw ) ; 
/*--snd_soc_set_runtime_hwparams--*/
struct snd_kcontrol * snd_soc_cnew ( const struct snd_kcontrol_new * _template , void * data , char * long_name ) ; 
/*--snd_soc_cnew--*/
int snd_soc_add_controls ( struct snd_soc_codec * codec , const struct snd_kcontrol_new * controls , int num_controls ) ; 
/*--snd_soc_add_controls--*/
int snd_soc_info_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_soc_info_enum_double--*/
int snd_soc_get_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_get_enum_double--*/
int snd_soc_put_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_put_enum_double--*/
int snd_soc_get_value_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_get_value_enum_double--*/
int snd_soc_put_value_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_put_value_enum_double--*/
int snd_soc_info_enum_ext ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_soc_info_enum_ext--*/
int snd_soc_info_volsw_ext ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_soc_info_volsw_ext--*/
int snd_soc_info_volsw ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_soc_info_volsw--*/
int snd_soc_get_volsw ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_get_volsw--*/
int snd_soc_put_volsw ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_put_volsw--*/
int snd_soc_info_volsw_2r ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_soc_info_volsw_2r--*/
int snd_soc_get_volsw_2r ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_get_volsw_2r--*/
int snd_soc_put_volsw_2r ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_put_volsw_2r--*/
int snd_soc_info_volsw_s8 ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_soc_info_volsw_s8--*/
int snd_soc_get_volsw_s8 ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_get_volsw_s8--*/
int snd_soc_put_volsw_s8 ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_put_volsw_s8--*/
int snd_soc_limit_volume ( struct snd_soc_codec * codec , const char * name , int max ) ; 
/*--snd_soc_limit_volume--*/
int snd_soc_dai_set_sysclk ( struct snd_soc_dai * dai , int clk_id , unsigned int freq , int dir ) ; 
/*--snd_soc_dai_set_sysclk--*/
int snd_soc_dai_set_clkdiv ( struct snd_soc_dai * dai , int div_id , int div ) ; 
/*--snd_soc_dai_set_clkdiv--*/
int snd_soc_dai_set_pll ( struct snd_soc_dai * dai , int pll_id , int source , unsigned int freq_in , unsigned int freq_out ) ; 
/*--snd_soc_dai_set_pll--*/
int snd_soc_dai_set_fmt ( struct snd_soc_dai * dai , unsigned int fmt ) ; 
/*--snd_soc_dai_set_fmt--*/
int snd_soc_dai_set_tdm_slot ( struct snd_soc_dai * dai , unsigned int tx_mask , unsigned int rx_mask , int slots , int slot_width ) ; 
/*--snd_soc_dai_set_tdm_slot--*/
int snd_soc_dai_set_channel_map ( struct snd_soc_dai * dai , unsigned int tx_num , unsigned int * tx_slot , unsigned int rx_num , unsigned int * rx_slot ) ; 
/*--snd_soc_dai_set_channel_map--*/
int snd_soc_dai_set_tristate ( struct snd_soc_dai * dai , int tristate ) ; 
/*--snd_soc_dai_set_tristate--*/
int snd_soc_dai_digital_mute ( struct snd_soc_dai * dai , int mute ) ; 
/*--snd_soc_dai_digital_mute--*/
int snd_soc_register_dai ( struct snd_soc_dai * dai ) ; 
/*--snd_soc_register_dai--*/
void snd_soc_unregister_dai ( struct snd_soc_dai * dai ) ; 
/*--snd_soc_unregister_dai--*/
int snd_soc_register_dais ( struct snd_soc_dai * dai , size_t count ) ; 
/*--snd_soc_register_dais--*/
void snd_soc_unregister_dais ( struct snd_soc_dai * dai , size_t count ) ; 
/*--snd_soc_unregister_dais--*/
int snd_soc_register_platform ( struct snd_soc_platform * platform ) ; 
/*--snd_soc_register_platform--*/
void snd_soc_unregister_platform ( struct snd_soc_platform * platform ) ; 
/*--snd_soc_unregister_platform--*/
int snd_soc_register_codec ( struct snd_soc_codec * codec ) ; 
/*--snd_soc_register_codec--*/
void snd_soc_unregister_codec ( struct snd_soc_codec * codec ) ; 
/*--snd_soc_unregister_codec--*/
int dapm_reg_event ( struct snd_soc_dapm_widget * w , struct snd_kcontrol * kcontrol , int event ) ; 
/*--dapm_reg_event--*/
void snd_soc_dapm_debugfs_init ( struct snd_soc_codec * codec ) ; 
/*--snd_soc_dapm_debugfs_init--*/
int snd_soc_dapm_sys_add ( struct device * dev ) ; 
/*--snd_soc_dapm_sys_add--*/
int snd_soc_dapm_sync ( struct snd_soc_codec * codec ) ; 
/*--snd_soc_dapm_sync--*/
int snd_soc_dapm_add_routes ( struct snd_soc_codec * codec , const struct snd_soc_dapm_route * route , int num ) ; 
/*--snd_soc_dapm_add_routes--*/
int snd_soc_dapm_new_widgets ( struct snd_soc_codec * codec ) ; 
/*--snd_soc_dapm_new_widgets--*/
int snd_soc_dapm_get_volsw ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_get_volsw--*/
int snd_soc_dapm_put_volsw ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_put_volsw--*/
int snd_soc_dapm_get_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_get_enum_double--*/
int snd_soc_dapm_put_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_put_enum_double--*/
int snd_soc_dapm_get_enum_virt ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_get_enum_virt--*/
int snd_soc_dapm_put_enum_virt ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_put_enum_virt--*/
int snd_soc_dapm_get_value_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_get_value_enum_double--*/
int snd_soc_dapm_put_value_enum_double ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_put_value_enum_double--*/
int snd_soc_dapm_info_pin_switch ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_info * uinfo ) ; 
/*--snd_soc_dapm_info_pin_switch--*/
int snd_soc_dapm_get_pin_switch ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_get_pin_switch--*/
int snd_soc_dapm_put_pin_switch ( struct snd_kcontrol * kcontrol , struct snd_ctl_elem_value * ucontrol ) ; 
/*--snd_soc_dapm_put_pin_switch--*/
int snd_soc_dapm_new_control ( struct snd_soc_codec * codec , const struct snd_soc_dapm_widget * widget ) ; 
/*--snd_soc_dapm_new_control--*/
int snd_soc_dapm_new_controls ( struct snd_soc_codec * codec , const struct snd_soc_dapm_widget * widget , int num ) ; 
/*--snd_soc_dapm_new_controls--*/
int snd_soc_dapm_stream_event ( struct snd_soc_codec * codec , char * stream , int event ) ; 
/*--snd_soc_dapm_stream_event--*/
int snd_soc_dapm_enable_pin ( struct snd_soc_codec * codec , const char * pin ) ; 
/*--snd_soc_dapm_enable_pin--*/
int snd_soc_dapm_force_enable_pin ( struct snd_soc_codec * codec , const char * pin ) ; 
/*--snd_soc_dapm_force_enable_pin--*/
int snd_soc_dapm_disable_pin ( struct snd_soc_codec * codec , const char * pin ) ; 
/*--snd_soc_dapm_disable_pin--*/
int snd_soc_dapm_nc_pin ( struct snd_soc_codec * codec , const char * pin ) ; 
/*--snd_soc_dapm_nc_pin--*/
int snd_soc_dapm_get_pin_status ( struct snd_soc_codec * codec , const char * pin ) ; 
/*--snd_soc_dapm_get_pin_status--*/
int snd_soc_dapm_ignore_suspend ( struct snd_soc_codec * codec , const char * pin ) ; 
/*--snd_soc_dapm_ignore_suspend--*/
void snd_soc_dapm_free ( struct snd_soc_device * socdev ) ; 
/*--snd_soc_dapm_free--*/
void snd_soc_dapm_shutdown ( struct snd_soc_device * socdev ) ; 
/*--snd_soc_dapm_shutdown--*/
int snd_soc_jack_new ( struct snd_soc_card * card , const char * id , int type , struct snd_soc_jack * jack ) ; 
/*--snd_soc_jack_new--*/
void snd_soc_jack_report ( struct snd_soc_jack * jack , int status , int mask ) ; 
/*--snd_soc_jack_report--*/
int snd_soc_jack_add_pins ( struct snd_soc_jack * jack , int count , struct snd_soc_jack_pin * pins ) ; 
/*--snd_soc_jack_add_pins--*/
void snd_soc_jack_notifier_register ( struct snd_soc_jack * jack , struct notifier_block * nb ) ; 
/*--snd_soc_jack_notifier_register--*/
void snd_soc_jack_notifier_unregister ( struct snd_soc_jack * jack , struct notifier_block * nb ) ; 
/*--snd_soc_jack_notifier_unregister--*/
int snd_soc_jack_add_gpios ( struct snd_soc_jack * jack , int count , struct snd_soc_jack_gpio * gpios ) ; 
/*--snd_soc_jack_add_gpios--*/
void snd_soc_jack_free_gpios ( struct snd_soc_jack * jack , int count , struct snd_soc_jack_gpio * gpios ) ; 
/*--snd_soc_jack_free_gpios--*/
int snd_soc_codec_set_cache_io ( struct snd_soc_codec * codec , int addr_bits , int data_bits , enum snd_soc_control_type control ) ; 
/*--snd_soc_codec_set_cache_io--*/
int snd_soc_calc_frame_size ( int sample_size , int channels , int tdm_slots ) ; 
/*--snd_soc_calc_frame_size--*/
int snd_soc_params_to_frame_size ( struct snd_pcm_hw_params * params ) ; 
/*--snd_soc_params_to_frame_size--*/
int snd_soc_calc_bclk ( int fs , int sample_size , int channels , int tdm_slots ) ; 
/*--snd_soc_calc_bclk--*/
int snd_soc_params_to_bclk ( struct snd_pcm_hw_params * params ) ; 
/*--snd_soc_params_to_bclk--*/
int l3_write ( struct l3_pins * adap , u8 addr , u8 * data , int len ) ; 
/*--l3_write--*/
int max9877_add_controls ( struct snd_soc_codec * codec ) ; 
/*--max9877_add_controls--*/
void aic3x_set_gpio ( struct snd_soc_codec * codec , int gpio , int state ) ; 
/*--aic3x_set_gpio--*/
int aic3x_get_gpio ( struct snd_soc_codec * codec , int gpio ) ; 
/*--aic3x_get_gpio--*/
void aic3x_set_headset_detection ( struct snd_soc_codec * codec , int detect , int headset_debounce , int button_debounce ) ; 
/*--aic3x_set_headset_detection--*/
int aic3x_headset_detected ( struct snd_soc_codec * codec ) ; 
/*--aic3x_headset_detected--*/
int aic3x_button_pressed ( struct snd_soc_codec * codec ) ; 
/*--aic3x_button_pressed--*/
int tpa6130a2_add_controls ( struct snd_soc_codec * codec ) ; 
/*--tpa6130a2_add_controls--*/
int wm_hubs_add_analogue_controls ( struct snd_soc_codec * codec ) ; 
/*--wm_hubs_add_analogue_controls--*/
int wm_hubs_add_analogue_routes ( struct snd_soc_codec * codec , int lineout1_diff , int lineout2_diff ) ; 
/*--wm_hubs_add_analogue_routes--*/
int wm_hubs_handle_analogue_pdata ( struct snd_soc_codec * codec , int lineout1_diff , int lineout2_diff , int lineout1fb , int lineout2fb , int jd_scthr , int jd_thr , int micbias1_lvl , int micbias2_lvl ) ; 
/*--wm_hubs_handle_analogue_pdata--*/
int wm2000_add_controls ( struct snd_soc_codec * codec ) ; 
/*--wm2000_add_controls--*/
int wm8903_mic_detect ( struct snd_soc_codec * codec , struct snd_soc_jack * jack , int det , int shrt ) ; 
/*--wm8903_mic_detect--*/
struct snd_util_memhdr * snd_util_memhdr_new ( int memsize ) ; 
/*--snd_util_memhdr_new--*/
void snd_util_memhdr_free ( struct snd_util_memhdr * hdr ) ; 
/*--snd_util_memhdr_free--*/
struct snd_util_memblk * __snd_util_mem_alloc ( struct snd_util_memhdr * hdr , int size ) ; 
/*--__snd_util_mem_alloc--*/
struct snd_util_memblk * __snd_util_memblk_new ( struct snd_util_memhdr * hdr , unsigned int units , struct list_head * prev ) ; 
/*--__snd_util_memblk_new--*/
struct snd_util_memblk * snd_util_mem_alloc ( struct snd_util_memhdr * hdr , int size ) ; 
/*--snd_util_mem_alloc--*/
void __snd_util_mem_free ( struct snd_util_memhdr * hdr , struct snd_util_memblk * blk ) ; 
/*--__snd_util_mem_free--*/
int snd_util_mem_free ( struct snd_util_memhdr * hdr , struct snd_util_memblk * blk ) ; 
/*--snd_util_mem_free--*/
int snd_util_mem_avail ( struct snd_util_memhdr * hdr ) ; 
/*--snd_util_mem_avail--*/
int snd_emux_new ( struct snd_emux * * remu ) ; 
/*--snd_emux_new--*/
int snd_emux_register ( struct snd_emux * emu , struct snd_card * card , int index , char * name ) ; 
/*--snd_emux_register--*/
int snd_emux_free ( struct snd_emux * emu ) ; 
/*--snd_emux_free--*/
void snd_emux_note_on ( void * p , int note , int vel , struct snd_midi_channel * chan ) ; 
/*--snd_emux_note_on--*/
void snd_emux_note_off ( void * p , int note , int vel , struct snd_midi_channel * chan ) ; 
/*--snd_emux_note_off--*/
void snd_emux_timer_callback ( unsigned long data ) ; 
/*--snd_emux_timer_callback--*/
void snd_emux_key_press ( void * p , int note , int vel , struct snd_midi_channel * chan ) ; 
/*--snd_emux_key_press--*/
void snd_emux_update_channel ( struct snd_emux_port * port , struct snd_midi_channel * chan , int update ) ; 
/*--snd_emux_update_channel--*/
void snd_emux_update_port ( struct snd_emux_port * port , int update ) ; 
/*--snd_emux_update_port--*/
void snd_emux_control ( void * p , int type , struct snd_midi_channel * chan ) ; 
/*--snd_emux_control--*/
void snd_emux_terminate_note ( void * p , int note , struct snd_midi_channel * chan ) ; 
/*--snd_emux_terminate_note--*/
void snd_emux_terminate_all ( struct snd_emux * emu ) ; 
/*--snd_emux_terminate_all--*/
void snd_emux_sounds_off_all ( struct snd_emux_port * port ) ; 
/*--snd_emux_sounds_off_all--*/
void snd_emux_init_voices ( struct snd_emux * emu ) ; 
/*--snd_emux_init_voices--*/
void snd_emux_lock_voice ( struct snd_emux * emu , int voice ) ; 
/*--snd_emux_lock_voice--*/
void snd_emux_unlock_voice ( struct snd_emux * emu , int voice ) ; 
/*--snd_emux_unlock_voice--*/
int snd_emux_init_seq ( struct snd_emux * emu , struct snd_card * card , int index ) ; 
/*--snd_emux_init_seq--*/
void snd_emux_detach_seq ( struct snd_emux * emu ) ; 
/*--snd_emux_detach_seq--*/
struct snd_emux_port * snd_emux_create_port ( struct snd_emux * emu , char * name , int max_channels , int oss_port , struct snd_seq_port_callback * callback ) ; 
/*--snd_emux_create_port--*/
void snd_emux_reset_port ( struct snd_emux_port * port ) ; 
/*--snd_emux_reset_port--*/
int snd_emux_event_input ( struct snd_seq_event * ev , int direct , void * private_data , int atomic , int hop ) ; 
/*--snd_emux_event_input--*/
int snd_emux_inc_count ( struct snd_emux * emu ) ; 
/*--snd_emux_inc_count--*/
void snd_emux_dec_count ( struct snd_emux * emu ) ; 
/*--snd_emux_dec_count--*/
int snd_emux_init_virmidi ( struct snd_emux * emu , struct snd_card * card ) ; 
/*--snd_emux_init_virmidi--*/
int snd_emux_delete_virmidi ( struct snd_emux * emu ) ; 
/*--snd_emux_delete_virmidi--*/
void snd_emux_nrpn ( void * p , struct snd_midi_channel * chan , struct snd_midi_channel_set * chset ) ; 
/*--snd_emux_nrpn--*/
int snd_emux_xg_control ( struct snd_emux_port * port , struct snd_midi_channel * chan , int param ) ; 
/*--snd_emux_xg_control--*/
void snd_emux_sysex ( void * p , unsigned char * buf , int len , int parsed , struct snd_midi_channel_set * chset ) ; 
/*--snd_emux_sysex--*/
void snd_emux_send_effect_oss ( struct snd_emux_port * port , struct snd_midi_channel * chan , int type , int val ) ; 
/*--snd_emux_send_effect_oss--*/
void snd_emux_send_effect ( struct snd_emux_port * port , struct snd_midi_channel * chan , int type , int val , int mode ) ; 
/*--snd_emux_send_effect--*/
void snd_emux_setup_effect ( struct snd_emux_voice * vp ) ; 
/*--snd_emux_setup_effect--*/
void snd_emux_create_effect ( struct snd_emux_port * p ) ; 
/*--snd_emux_create_effect--*/
void snd_emux_delete_effect ( struct snd_emux_port * p ) ; 
/*--snd_emux_delete_effect--*/
void snd_emux_clear_effect ( struct snd_emux_port * p ) ; 
/*--snd_emux_clear_effect--*/
void snd_emux_proc_init ( struct snd_emux * emu , struct snd_card * card , int device ) ; 
/*--snd_emux_proc_init--*/
void snd_emux_proc_free ( struct snd_emux * emu ) ; 
/*--snd_emux_proc_free--*/
int snd_emux_init_hwdep ( struct snd_emux * emu ) ; 
/*--snd_emux_init_hwdep--*/
void snd_emux_delete_hwdep ( struct snd_emux * emu ) ; 
/*--snd_emux_delete_hwdep--*/
int snd_soundfont_close_check ( struct snd_sf_list * sflist , int client ) ; 
/*--snd_soundfont_close_check--*/
int snd_soundfont_load ( struct snd_sf_list * sflist , const void * data , long count , int client ) ; 
/*--snd_soundfont_load--*/
int snd_sf_linear_to_log ( unsigned int amount , int offset , int ratio ) ; 
/*--snd_sf_linear_to_log--*/
int snd_sf_calc_parm_hold ( int msec ) ; 
/*--snd_sf_calc_parm_hold--*/
int snd_sf_calc_parm_attack ( int msec ) ; 
/*--snd_sf_calc_parm_attack--*/
int snd_sf_calc_parm_decay ( int msec ) ; 
/*--snd_sf_calc_parm_decay--*/
int snd_soundfont_load_guspatch ( struct snd_sf_list * sflist , const char * data , long count , int client ) ; 
/*--snd_soundfont_load_guspatch--*/
int snd_soundfont_search_zone ( struct snd_sf_list * sflist , int * notep , int vel , int preset , int bank , int def_preset , int def_bank , struct snd_sf_zone * * table , int max_layers ) ; 
/*--snd_soundfont_search_zone--*/
struct snd_sf_list * snd_sf_new ( struct snd_sf_callback * callback , struct snd_util_memhdr * hdr ) ; 
/*--snd_sf_new--*/
void snd_sf_free ( struct snd_sf_list * sflist ) ; 
/*--snd_sf_free--*/
int snd_soundfont_remove_samples ( struct snd_sf_list * sflist ) ; 
/*--snd_soundfont_remove_samples--*/
int snd_soundfont_remove_unlocked ( struct snd_sf_list * sflist ) ; 
/*--snd_soundfont_remove_unlocked--*/
void snd_emux_init_seq_oss ( struct snd_emux * emu ) ; 
/*--snd_emux_init_seq_oss--*/
void snd_emux_detach_seq_oss ( struct snd_emux * emu ) ; 
/*--snd_emux_detach_seq_oss--*/
int snd_usb_mixer_set_ctl_value ( struct usb_mixer_elem_info * cval , int request , int validx , int value_set ) ; 
/*--snd_usb_mixer_set_ctl_value--*/
void snd_usb_mixer_notify_id ( struct usb_mixer_interface * mixer , int unitid ) ; 
/*--snd_usb_mixer_notify_id--*/
int snd_usb_create_mixer ( struct snd_usb_audio * chip , int ctrlif , int ignore_error ) ; 
/*--snd_usb_create_mixer--*/
void snd_usb_mixer_disconnect ( struct list_head * p ) ; 
/*--snd_usb_mixer_disconnect--*/
void snd_emuusb_set_samplerate ( struct snd_usb_audio * chip , unsigned char samplerate_id ) ; 
/*--snd_emuusb_set_samplerate--*/
int snd_usb_mixer_apply_create_quirk ( struct usb_mixer_interface * mixer ) ; 
/*--snd_usb_mixer_apply_create_quirk--*/
void snd_usb_mixer_rc_memory_change ( struct usb_mixer_interface * mixer , int unitid ) ; 
/*--snd_usb_mixer_rc_memory_change--*/
void snd_usb_audio_create_proc ( struct snd_usb_audio * chip ) ; 
/*--snd_usb_audio_create_proc--*/
void snd_usb_proc_pcm_format_add ( struct snd_usb_stream * stream ) ; 
/*--snd_usb_proc_pcm_format_add--*/
int snd_usb_create_quirk ( struct snd_usb_audio * chip , struct usb_interface * iface , struct usb_driver * driver , const struct snd_usb_audio_quirk * quirk ) ; 
/*--snd_usb_create_quirk--*/
int snd_usb_apply_interface_quirk ( struct snd_usb_audio * chip , int iface , int altno ) ; 
/*--snd_usb_apply_interface_quirk--*/
int snd_usb_apply_boot_quirk ( struct usb_device * dev , struct usb_interface * intf , const struct snd_usb_audio_quirk * quirk ) ; 
/*--snd_usb_apply_boot_quirk--*/
int snd_usb_is_big_endian_format ( struct snd_usb_audio * chip , struct audioformat * fp ) ; 
/*--snd_usb_is_big_endian_format--*/
void snd_usb_set_format_quirk ( struct snd_usb_substream * subs , struct audioformat * fmt ) ; 
/*--snd_usb_set_format_quirk--*/
int snd_usb_parse_audio_format ( struct snd_usb_audio * chip , struct audioformat * fp , int format , struct uac_format_type_i_continuous_descriptor * fmt , int stream , struct usb_host_interface * iface ) ; 
/*--snd_usb_parse_audio_format--*/
int snd_usb_add_audio_endpoint ( struct snd_usb_audio * chip , int stream , struct audioformat * fp ) ; 
/*--snd_usb_add_audio_endpoint--*/
int snd_usb_parse_audio_endpoints ( struct snd_usb_audio * chip , int iface_no ) ; 
/*--snd_usb_parse_audio_endpoints--*/
void snd_usb_release_substream_urbs ( struct snd_usb_substream * subs , int force ) ; 
/*--snd_usb_release_substream_urbs--*/
int snd_usb_init_substream_urbs ( struct snd_usb_substream * subs , unsigned int period_bytes , unsigned int rate , unsigned int frame_bits ) ; 
/*--snd_usb_init_substream_urbs--*/
void snd_usb_init_substream ( struct snd_usb_stream * as , int stream , struct audioformat * fp ) ; 
/*--snd_usb_init_substream--*/
int snd_usb_substream_playback_trigger ( struct snd_pcm_substream * substream , int cmd ) ; 
/*--snd_usb_substream_playback_trigger--*/
int snd_usb_substream_capture_trigger ( struct snd_pcm_substream * substream , int cmd ) ; 
/*--snd_usb_substream_capture_trigger--*/
int snd_usb_substream_prepare ( struct snd_usb_substream * subs , struct snd_pcm_runtime * runtime ) ; 
/*--snd_usb_substream_prepare--*/
int snd_usb_init_pitch ( struct snd_usb_audio * chip , int iface , struct usb_host_interface * alts , struct audioformat * fmt ) ; 
/*--snd_usb_init_pitch--*/
void snd_usb_set_pcm_ops ( struct snd_pcm * pcm , int stream ) ; 
/*--snd_usb_set_pcm_ops--*/
unsigned int snd_usb_combine_bytes ( unsigned char * bytes , int size ) ; 
/*--snd_usb_combine_bytes--*/
void * snd_usb_find_desc ( void * descstart , int desclen , void * after , u8 dtype ) ; 
/*--snd_usb_find_desc--*/
void * snd_usb_find_csint_desc ( void * buffer , int buflen , void * after , u8 dsubtype ) ; 
/*--snd_usb_find_csint_desc--*/
int snd_usb_ctl_msg ( struct usb_device * dev , unsigned int pipe , __u8 request , __u8 requesttype , __u16 value , __u16 index , void * data , __u16 size , int timeout ) ; 
/*--snd_usb_ctl_msg--*/
unsigned char snd_usb_parse_datainterval ( struct snd_usb_audio * chip , struct usb_host_interface * alts ) ; 
/*--snd_usb_parse_datainterval--*/
int snd_usb_clock_find_source ( struct snd_usb_audio * chip , struct usb_host_interface * host_iface , int entity_id ) ; 
/*--snd_usb_clock_find_source--*/
int snd_usb_init_sample_rate ( struct snd_usb_audio * chip , int iface , struct usb_host_interface * alts , struct audioformat * fmt , int rate ) ; 
/*--snd_usb_init_sample_rate--*/
void snd_usbmidi_disconnect ( struct list_head * p ) ; 
/*--snd_usbmidi_disconnect--*/
void snd_usbmidi_input_stop ( struct list_head * p ) ; 
/*--snd_usbmidi_input_stop--*/
void snd_usbmidi_input_start ( struct list_head * p ) ; 
/*--snd_usbmidi_input_start--*/
int snd_usbmidi_create ( struct snd_card * card , struct usb_interface * iface , struct list_head * midi_list , const struct snd_usb_audio_quirk * quirk ) ; 
/*--snd_usbmidi_create--*/
int snd_usb_caiaq_send_command ( struct snd_usb_caiaqdev * dev , unsigned char command , const unsigned char * buffer , int len ) ; 
/*--snd_usb_caiaq_send_command--*/
int snd_usb_caiaq_set_audio_params ( struct snd_usb_caiaqdev * dev , int rate , int depth , int bpp ) ; 
/*--snd_usb_caiaq_set_audio_params--*/
int snd_usb_caiaq_set_auto_msg ( struct snd_usb_caiaqdev * dev , int digital , int analog , int erp ) ; 
/*--snd_usb_caiaq_set_auto_msg--*/
int snd_usb_caiaq_audio_init ( struct snd_usb_caiaqdev * dev ) ; 
/*--snd_usb_caiaq_audio_init--*/
void snd_usb_caiaq_audio_free ( struct snd_usb_caiaqdev * dev ) ; 
/*--snd_usb_caiaq_audio_free--*/
void snd_usb_caiaq_midi_handle_input ( struct snd_usb_caiaqdev * dev , int port , const char * buf , int len ) ; 
/*--snd_usb_caiaq_midi_handle_input--*/
int snd_usb_caiaq_midi_init ( struct snd_usb_caiaqdev * device ) ; 
/*--snd_usb_caiaq_midi_init--*/
void snd_usb_caiaq_midi_output_done ( struct urb * urb ) ; 
/*--snd_usb_caiaq_midi_output_done--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) snd_usb_caiaq_control_init ( struct snd_usb_caiaqdev * dev ) ; 
/*--snd_usb_caiaq_control_init--*/
void snd_usb_caiaq_input_dispatch ( struct snd_usb_caiaqdev * dev , char * buf , unsigned int len ) ; 
/*--snd_usb_caiaq_input_dispatch--*/
int snd_usb_caiaq_input_init ( struct snd_usb_caiaqdev * dev ) ; 
/*--snd_usb_caiaq_input_init--*/
void snd_usb_caiaq_input_free ( struct snd_usb_caiaqdev * dev ) ; 
/*--snd_usb_caiaq_input_free--*/
void usb_stream_free ( struct usb_stream_kernel * sk ) ; 
/*--usb_stream_free--*/
struct usb_stream * usb_stream_new ( struct usb_stream_kernel * sk , struct usb_device * dev , unsigned in_endpoint , unsigned out_endpoint , unsigned sample_rate , unsigned use_packsize , unsigned period_frames , unsigned frame_size ) ; 
/*--usb_stream_new--*/
int usb_stream_start ( struct usb_stream_kernel * sk ) ; 
/*--usb_stream_start--*/
void usb_stream_stop ( struct usb_stream_kernel * sk ) ; 
/*--usb_stream_stop--*/
int usX2Y_AsyncSeq04_init ( struct usX2Ydev * usX2Y ) ; 
/*--usX2Y_AsyncSeq04_init--*/
int usX2Y_In04_init ( struct usX2Ydev * usX2Y ) ; 
/*--usX2Y_In04_init--*/
int usX2Y_hwdep_new ( struct snd_card * card , struct usb_device * device ) ; 
/*--usX2Y_hwdep_new--*/
int usX2Y_audio_create ( struct snd_card * card ) ; 
/*--usX2Y_audio_create--*/
int usX2Y_hwdep_pcm_new ( struct snd_card * card ) ; 
/*--usX2Y_hwdep_pcm_new--*/
int oprofile_setup ( void ) ; 
/*--oprofile_setup--*/
int oprofile_start ( void ) ; 
/*--oprofile_start--*/
void oprofile_stop ( void ) ; 
/*--oprofile_stop--*/
void oprofile_shutdown ( void ) ; 
/*--oprofile_shutdown--*/
int oprofile_set_backtrace ( unsigned long val ) ; 
/*--oprofile_set_backtrace--*/
unsigned long oprofile_get_cpu_buffer_size ( void ) ; 
/*--oprofile_get_cpu_buffer_size--*/
void oprofile_cpu_buffer_inc_smpl_lost ( void ) ; 
/*--oprofile_cpu_buffer_inc_smpl_lost--*/
void free_cpu_buffers ( void ) ; 
/*--free_cpu_buffers--*/
int alloc_cpu_buffers ( void ) ; 
/*--alloc_cpu_buffers--*/
void start_cpu_work ( void ) ; 
/*--start_cpu_work--*/
void end_cpu_work ( void ) ; 
/*--end_cpu_work--*/
struct op_sample * op_cpu_buffer_write_reserve ( struct op_entry * entry , unsigned long size ) ; 
/*--op_cpu_buffer_write_reserve--*/
int op_cpu_buffer_write_commit ( struct op_entry * entry ) ; 
/*--op_cpu_buffer_write_commit--*/
struct op_sample * op_cpu_buffer_read_entry ( struct op_entry * entry , int cpu ) ; 
/*--op_cpu_buffer_read_entry--*/
unsigned long op_cpu_buffer_entries ( int cpu ) ; 
/*--op_cpu_buffer_entries--*/
void oprofile_add_ext_sample ( unsigned long pc , struct pt_regs * const regs , unsigned long event , int is_kernel ) ; 
/*--oprofile_add_ext_sample--*/
void oprofile_add_sample ( struct pt_regs * const regs , unsigned long event ) ; 
/*--oprofile_add_sample--*/
void oprofile_write_reserve ( struct op_entry * entry , struct pt_regs * const regs , unsigned long pc , int code , int size ) ; 
/*--oprofile_write_reserve--*/
int oprofile_add_data ( struct op_entry * entry , unsigned long val ) ; 
/*--oprofile_add_data--*/
int oprofile_add_data64 ( struct op_entry * entry , u64 val ) ; 
/*--oprofile_add_data64--*/
int oprofile_write_commit ( struct op_entry * entry ) ; 
/*--oprofile_write_commit--*/
void oprofile_add_pc ( unsigned long pc , int is_kernel , unsigned long event ) ; 
/*--oprofile_add_pc--*/
void oprofile_add_trace ( unsigned long pc ) ; 
/*--oprofile_add_trace--*/
int sync_start ( void ) ; 
/*--sync_start--*/
void sync_stop ( void ) ; 
/*--sync_stop--*/
void sync_buffer ( int cpu ) ; 
/*--sync_buffer--*/
void oprofile_put_buff ( unsigned long * buf , unsigned int start , unsigned int stop , unsigned int max ) ; 
/*--oprofile_put_buff--*/
void add_event_entry ( unsigned long value ) ; 
/*--add_event_entry--*/
void wake_up_buffer_waiter ( void ) ; 
/*--wake_up_buffer_waiter--*/
int alloc_event_buffer ( void ) ; 
/*--alloc_event_buffer--*/
void free_event_buffer ( void ) ; 
/*--free_event_buffer--*/
void oprofile_create_files ( struct super_block * sb , struct dentry * root ) ; 
/*--oprofile_create_files--*/
ssize_t oprofilefs_str_to_user ( char const * str , char * buf , size_t count , loff_t * offset ) ; 
/*--oprofilefs_str_to_user--*/
ssize_t oprofilefs_ulong_to_user ( unsigned long val , char * buf , size_t count , loff_t * offset ) ; 
/*--oprofilefs_ulong_to_user--*/
int oprofilefs_ulong_from_user ( unsigned long * val , char const * buf , size_t count ) ; 
/*--oprofilefs_ulong_from_user--*/
int oprofilefs_create_ulong ( struct super_block * sb , struct dentry * root , char const * name , unsigned long * val ) ; 
/*--oprofilefs_create_ulong--*/
int oprofilefs_create_ro_ulong ( struct super_block * sb , struct dentry * root , char const * name , unsigned long * val ) ; 
/*--oprofilefs_create_ro_ulong--*/
int oprofilefs_create_ro_atomic ( struct super_block * sb , struct dentry * root , char const * name , atomic_t * val ) ; 
/*--oprofilefs_create_ro_atomic--*/
int oprofilefs_create_file ( struct super_block * sb , struct dentry * root , char const * name , const struct file_operations * fops ) ; 
/*--oprofilefs_create_file--*/
int oprofilefs_create_file_perm ( struct super_block * sb , struct dentry * root , char const * name , const struct file_operations * fops , int perm ) ; 
/*--oprofilefs_create_file_perm--*/
struct dentry * oprofilefs_mkdir ( struct super_block * sb , struct dentry * root , char const * name ) ; 
/*--oprofilefs_mkdir--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) oprofilefs_register ( void ) ; 
/*--oprofilefs_register--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) oprofilefs_unregister ( void ) ; 
/*--oprofilefs_unregister--*/
void oprofile_reset_stats ( void ) ; 
/*--oprofile_reset_stats--*/
void oprofile_create_stats_files ( struct super_block * sb , struct dentry * root ) ; 
/*--oprofile_create_stats_files--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) oprofile_timer_init ( struct oprofile_operations * ops ) ; 
/*--oprofile_timer_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) oprofile_timer_exit ( void ) ; 
/*--oprofile_timer_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) oprofile_arch_init ( struct oprofile_operations * ops ) ; 
/*--oprofile_arch_init--*/
void oprofile_arch_exit ( void ) ; 
/*--oprofile_arch_exit--*/
void x86_backtrace ( struct pt_regs * const regs , unsigned int depth ) ; 
/*--x86_backtrace--*/
u64 op_x86_get_ctrl ( struct op_x86_model_spec const * model , struct op_counter_config * counter_config ) ; 
/*--op_x86_get_ctrl--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) op_nmi_init ( struct oprofile_operations * ops ) ; 
/*--op_nmi_init--*/
void op_nmi_exit ( void ) ; 
/*--op_nmi_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) op_nmi_timer_init ( struct oprofile_operations * ops ) ; 
/*--op_nmi_timer_init--*/
struct datalink_proto * make_8023_client ( void ) ; 
/*--make_8023_client--*/
void destroy_8023_client ( struct datalink_proto * dl ) ; 
/*--destroy_8023_client--*/
int stp_proto_register ( const struct stp_proto * proto ) ; 
/*--stp_proto_register--*/
void stp_proto_unregister ( const struct stp_proto * proto ) ; 
/*--stp_proto_unregister--*/
int garp_request_join ( const struct net_device * dev , const struct garp_application * appl , const void * data , u8 len , u8 type ) ; 
/*--garp_request_join--*/
void garp_request_leave ( const struct net_device * dev , const struct garp_application * appl , const void * data , u8 len , u8 type ) ; 
/*--garp_request_leave--*/
int garp_init_applicant ( struct net_device * dev , struct garp_application * appl ) ; 
/*--garp_init_applicant--*/
void garp_uninit_applicant ( struct net_device * dev , struct garp_application * appl ) ; 
/*--garp_uninit_applicant--*/
int garp_register_application ( struct garp_application * appl ) ; 
/*--garp_register_application--*/
void garp_unregister_application ( struct garp_application * appl ) ; 
/*--garp_unregister_application--*/
struct net_device * __find_vlan_dev ( struct net_device * real_dev , u16 vlan_id ) ; 
/*--__find_vlan_dev--*/
void unregister_vlan_dev ( struct net_device * dev , struct list_head * head ) ; 
/*--unregister_vlan_dev--*/
int vlan_check_real_dev ( struct net_device * real_dev , u16 vlan_id ) ; 
/*--vlan_check_real_dev--*/
int register_vlan_dev ( struct net_device * dev ) ; 
/*--register_vlan_dev--*/
int vlan_skb_recv ( struct sk_buff * skb , struct net_device * dev , struct packet_type * ptype , struct net_device * orig_dev ) ; 
/*--vlan_skb_recv--*/
void vlan_dev_set_ingress_priority ( const struct net_device * dev , u32 skb_prio , u16 vlan_prio ) ; 
/*--vlan_dev_set_ingress_priority--*/
int vlan_dev_set_egress_priority ( const struct net_device * dev , u32 skb_prio , u16 vlan_prio ) ; 
/*--vlan_dev_set_egress_priority--*/
int vlan_dev_change_flags ( const struct net_device * dev , u32 flags , u32 mask ) ; 
/*--vlan_dev_change_flags--*/
void vlan_dev_get_realdev_name ( const struct net_device * dev , char * result ) ; 
/*--vlan_dev_get_realdev_name--*/
void vlan_setup ( struct net_device * dev ) ; 
/*--vlan_setup--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) vlan_netlink_init ( void ) ; 
/*--vlan_netlink_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) vlan_netlink_fini ( void ) ; 
/*--vlan_netlink_fini--*/
int vlan_gvrp_request_join ( const struct net_device * dev ) ; 
/*--vlan_gvrp_request_join--*/
void vlan_gvrp_request_leave ( const struct net_device * dev ) ; 
/*--vlan_gvrp_request_leave--*/
int vlan_gvrp_init_applicant ( struct net_device * dev ) ; 
/*--vlan_gvrp_init_applicant--*/
void vlan_gvrp_uninit_applicant ( struct net_device * dev ) ; 
/*--vlan_gvrp_uninit_applicant--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) vlan_gvrp_init ( void ) ; 
/*--vlan_gvrp_init--*/
void vlan_gvrp_uninit ( void ) ; 
/*--vlan_gvrp_uninit--*/
void vlan_proc_cleanup ( struct net * net ) ; 
/*--vlan_proc_cleanup--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) vlan_proc_init ( struct net * net ) ; 
/*--vlan_proc_init--*/
int vlan_proc_add_dev ( struct net_device * vlandev ) ; 
/*--vlan_proc_add_dev--*/
int vlan_proc_rem_dev ( struct net_device * vlandev ) ; 
/*--vlan_proc_rem_dev--*/
void v9fs_register_trans ( struct p9_trans_module * m ) ; 
/*--v9fs_register_trans--*/
void v9fs_unregister_trans ( struct p9_trans_module * m ) ; 
/*--v9fs_unregister_trans--*/
struct p9_trans_module * v9fs_get_trans_by_name ( const substring_t * name ) ; 
/*--v9fs_get_trans_by_name--*/
struct p9_trans_module * v9fs_get_default_trans ( void ) ; 
/*--v9fs_get_default_trans--*/
void v9fs_put_trans ( struct p9_trans_module * m ) ; 
/*--v9fs_put_trans--*/
struct p9_req_t * p9_tag_lookup ( struct p9_client * c , u16 tag ) ; 
/*--p9_tag_lookup--*/
void p9_client_cb ( struct p9_client * c , struct p9_req_t * req ) ; 
/*--p9_client_cb--*/
int p9_parse_header ( struct p9_fcall * pdu , int32_t * size , int8_t * type , int16_t * tag , int rewind ) ; 
/*--p9_parse_header--*/
int p9_client_version ( struct p9_client * c ) ; 
/*--p9_client_version--*/
struct p9_client * p9_client_create ( const char * dev_name , char * options ) ; 
/*--p9_client_create--*/
void p9_client_destroy ( struct p9_client * clnt ) ; 
/*--p9_client_destroy--*/
void p9_client_disconnect ( struct p9_client * clnt ) ; 
/*--p9_client_disconnect--*/
void p9_client_begin_disconnect ( struct p9_client * clnt ) ; 
/*--p9_client_begin_disconnect--*/
struct p9_fid * p9_client_attach ( struct p9_client * clnt , struct p9_fid * afid , char * uname , u32 n_uname , char * aname ) ; 
/*--p9_client_attach--*/
struct p9_fid * p9_client_auth ( struct p9_client * clnt , char * uname , u32 n_uname , char * aname ) ; 
/*--p9_client_auth--*/
struct p9_fid * p9_client_walk ( struct p9_fid * oldfid , int nwname , char * * wnames , int clone ) ; 
/*--p9_client_walk--*/
int p9_client_open ( struct p9_fid * fid , int mode ) ; 
/*--p9_client_open--*/
int p9_client_fcreate ( struct p9_fid * fid , char * name , u32 perm , int mode , char * extension ) ; 
/*--p9_client_fcreate--*/
int p9_client_clunk ( struct p9_fid * fid ) ; 
/*--p9_client_clunk--*/
int p9_client_remove ( struct p9_fid * fid ) ; 
/*--p9_client_remove--*/
int p9_client_read ( struct p9_fid * fid , char * data , char * udata , u64 offset , u32 count ) ; 
/*--p9_client_read--*/
int p9_client_write ( struct p9_fid * fid , char * data , const char * udata , u64 offset , u32 count ) ; 
/*--p9_client_write--*/
struct p9_wstat * p9_client_stat ( struct p9_fid * fid ) ; 
/*--p9_client_stat--*/
int p9_client_wstat ( struct p9_fid * fid , struct p9_wstat * wst ) ; 
/*--p9_client_wstat--*/
int p9_client_statfs ( struct p9_fid * fid , struct p9_rstatfs * sb ) ; 
/*--p9_client_statfs--*/
int p9_client_rename ( struct p9_fid * fid , struct p9_fid * newdirfid , char * name ) ; 
/*--p9_client_rename--*/
int p9_error_init ( void ) ; 
/*--p9_error_init--*/
int p9_errstr2errno ( char * errstr , int len ) ; 
/*--p9_errstr2errno--*/
struct p9_idpool * p9_idpool_create ( void ) ; 
/*--p9_idpool_create--*/
void p9_idpool_destroy ( struct p9_idpool * p ) ; 
/*--p9_idpool_destroy--*/
int p9_idpool_get ( struct p9_idpool * p ) ; 
/*--p9_idpool_get--*/
void p9_idpool_put ( int id , struct p9_idpool * p ) ; 
/*--p9_idpool_put--*/
int p9_idpool_check ( int id , struct p9_idpool * p ) ; 
/*--p9_idpool_check--*/
void p9pdu_dump ( int way , struct p9_fcall * pdu ) ; 
/*--p9pdu_dump--*/
void p9stat_free ( struct p9_wstat * stbuf ) ; 
/*--p9stat_free--*/
int p9pdu_vwritef ( struct p9_fcall * pdu , int proto_version , const char * fmt , va_list ap ) ; 
/*--p9pdu_vwritef--*/
int p9pdu_readf ( struct p9_fcall * pdu , int proto_version , const char * fmt , ... ) ; 
/*--p9pdu_readf--*/
int p9stat_read ( char * buf , int len , struct p9_wstat * st , int proto_version ) ; 
/*--p9stat_read--*/
int p9pdu_prepare ( struct p9_fcall * pdu , int16_t tag , int8_t type ) ; 
/*--p9pdu_prepare--*/
int p9pdu_finalize ( struct p9_fcall * pdu ) ; 
/*--p9pdu_finalize--*/
void p9pdu_reset ( struct p9_fcall * pdu ) ; 
/*--p9pdu_reset--*/
int p9_trans_fd_init ( void ) ; 
/*--p9_trans_fd_init--*/
void p9_trans_fd_exit ( void ) ; 
/*--p9_trans_fd_exit--*/
void aarp_proxy_remove ( struct net_device * dev , struct atalk_addr * sa ) ; 
/*--aarp_proxy_remove--*/
void aarp_probe_network ( struct atalk_iface * atif ) ; 
/*--aarp_probe_network--*/
int aarp_proxy_probe_network ( struct atalk_iface * atif , struct atalk_addr * sa ) ; 
/*--aarp_proxy_probe_network--*/
int aarp_send_ddp ( struct net_device * dev , struct sk_buff * skb , struct atalk_addr * sa , void * hwaddr ) ; 
/*--aarp_send_ddp--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) aarp_proto_init ( void ) ; 
/*--aarp_proto_init--*/
void aarp_device_down ( struct net_device * dev ) ; 
/*--aarp_device_down--*/
void aarp_cleanup_module ( void ) ; 
/*--aarp_cleanup_module--*/
struct atalk_addr * atalk_find_dev_addr ( struct net_device * dev ) ; 
/*--atalk_find_dev_addr--*/
struct net_device * atrtr_get_dev ( struct atalk_addr * sa ) ; 
/*--atrtr_get_dev--*/
struct net_device * alloc_ltalkdev ( int sizeof_priv ) ; 
/*--alloc_ltalkdev--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) atalk_proc_init ( void ) ; 
/*--atalk_proc_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) atalk_proc_exit ( void ) ; 
/*--atalk_proc_exit--*/
void atalk_register_sysctl ( void ) ; 
/*--atalk_register_sysctl--*/
void atalk_unregister_sysctl ( void ) ; 
/*--atalk_unregister_sysctl--*/
void atm_reset_addr ( struct atm_dev * dev , enum atm_addr_type_t atype ) ; 
/*--atm_reset_addr--*/
int atm_add_addr ( struct atm_dev * dev , const struct sockaddr_atmsvc * addr , enum atm_addr_type_t atype ) ; 
/*--atm_add_addr--*/
int atm_del_addr ( struct atm_dev * dev , const struct sockaddr_atmsvc * addr , enum atm_addr_type_t atype ) ; 
/*--atm_del_addr--*/
int atm_get_addr ( struct atm_dev * dev , struct sockaddr_atmsvc * buf , size_t size , enum atm_addr_type_t atype ) ; 
/*--atm_get_addr--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) atmpvc_init ( void ) ; 
/*--atmpvc_init--*/
void atmpvc_exit ( void ) ; 
/*--atmpvc_exit--*/
void sigd_enq2 ( struct atm_vcc * vcc , enum atmsvc_msg_type type , struct atm_vcc * listen_vcc , const struct sockaddr_atmpvc * pvc , const struct sockaddr_atmsvc * svc , const struct atm_qos * qos , int reply ) ; 
/*--sigd_enq2--*/
void sigd_enq ( struct atm_vcc * vcc , enum atmsvc_msg_type type , struct atm_vcc * listen_vcc , const struct sockaddr_atmpvc * pvc , const struct sockaddr_atmsvc * svc ) ; 
/*--sigd_enq--*/
int sigd_attach ( struct atm_vcc * vcc ) ; 
/*--sigd_attach--*/
int svc_change_qos ( struct atm_vcc * vcc , struct atm_qos * qos ) ; 
/*--svc_change_qos--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) atmsvc_init ( void ) ; 
/*--atmsvc_init--*/
void atmsvc_exit ( void ) ; 
/*--atmsvc_exit--*/
void register_atm_ioctl ( struct atm_ioctl * ioctl ) ; 
/*--register_atm_ioctl--*/
void deregister_atm_ioctl ( struct atm_ioctl * ioctl ) ; 
/*--deregister_atm_ioctl--*/
int vcc_ioctl ( struct socket * sock , unsigned int cmd , unsigned long arg ) ; 
/*--vcc_ioctl--*/
int vcc_compat_ioctl ( struct socket * sock , unsigned int cmd , unsigned long arg ) ; 
/*--vcc_compat_ioctl--*/
void vcc_insert_socket ( struct sock * sk ) ; 
/*--vcc_insert_socket--*/
int vcc_create ( struct net * net , struct socket * sock , int protocol , int family ) ; 
/*--vcc_create--*/
int vcc_release ( struct socket * sock ) ; 
/*--vcc_release--*/
void vcc_release_async ( struct atm_vcc * vcc , int reply ) ; 
/*--vcc_release_async--*/
void atm_dev_release_vccs ( struct atm_dev * dev ) ; 
/*--atm_dev_release_vccs--*/
int vcc_connect ( struct socket * sock , int itf , short vpi , int vci ) ; 
/*--vcc_connect--*/
int vcc_recvmsg ( struct kiocb * iocb , struct socket * sock , struct msghdr * msg , size_t size , int flags ) ; 
/*--vcc_recvmsg--*/
int vcc_sendmsg ( struct kiocb * iocb , struct socket * sock , struct msghdr * m , size_t total_len ) ; 
/*--vcc_sendmsg--*/
unsigned int vcc_poll ( struct file * file , struct socket * sock , poll_table * wait ) ; 
/*--vcc_poll--*/
int vcc_setsockopt ( struct socket * sock , int level , int optname , char * optval , unsigned int optlen ) ; 
/*--vcc_setsockopt--*/
int vcc_getsockopt ( struct socket * sock , int level , int optname , char * optval , int * optlen ) ; 
/*--vcc_getsockopt--*/
int atm_charge ( struct atm_vcc * vcc , int truesize ) ; 
/*--atm_charge--*/
struct sk_buff * atm_alloc_charge ( struct atm_vcc * vcc , int pdu_size , gfp_t gfp_flags ) ; 
/*--atm_alloc_charge--*/
int atm_pcr_goal ( const struct atm_trafprm * tp ) ; 
/*--atm_pcr_goal--*/
void sonet_copy_stats ( struct k_sonet_stats * from , struct sonet_stats * to ) ; 
/*--sonet_copy_stats--*/
void sonet_subtract_stats ( struct k_sonet_stats * from , struct sonet_stats * to ) ; 
/*--sonet_subtract_stats--*/
int atm_init_aal0 ( struct atm_vcc * vcc ) ; 
/*--atm_init_aal0--*/
int atm_init_aal34 ( struct atm_vcc * vcc ) ; 
/*--atm_init_aal34--*/
int atm_init_aal5 ( struct atm_vcc * vcc ) ; 
/*--atm_init_aal5--*/
struct atm_dev * atm_dev_lookup ( int number ) ; 
/*--atm_dev_lookup--*/
struct atm_dev * atm_dev_register ( const char * type , const struct atmdev_ops * ops , int number , unsigned long * flags ) ; 
/*--atm_dev_register--*/
void atm_dev_deregister ( struct atm_dev * dev ) ; 
/*--atm_dev_deregister--*/
int atm_dev_ioctl ( unsigned int cmd , void * arg , int compat ) ; 
/*--atm_dev_ioctl--*/
void * atm_dev_seq_start ( struct seq_file * seq , loff_t * pos ) ; 
/*--atm_dev_seq_start--*/
void atm_dev_seq_stop ( struct seq_file * seq , void * v ) ; 
/*--atm_dev_seq_stop--*/
void * atm_dev_seq_next ( struct seq_file * seq , void * v , loff_t * pos ) ; 
/*--atm_dev_seq_next--*/
int atm_register_sysfs ( struct atm_dev * adev ) ; 
/*--atm_register_sysfs--*/
void atm_unregister_sysfs ( struct atm_dev * adev ) ; 
/*--atm_unregister_sysfs--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) atm_sysfs_init ( void ) ; 
/*--atm_sysfs_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) atm_sysfs_exit ( void ) ; 
/*--atm_sysfs_exit--*/
int atm_proc_dev_register ( struct atm_dev * dev ) ; 
/*--atm_proc_dev_register--*/
void atm_proc_dev_deregister ( struct atm_dev * dev ) ; 
/*--atm_proc_dev_deregister--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) atm_proc_init ( void ) ; 
/*--atm_proc_init--*/
void atm_proc_exit ( void ) ; 
/*--atm_proc_exit--*/
struct atm_mpoa_qos * atm_mpoa_add_qos ( __be32 dst_ip , struct atm_qos * qos ) ; 
/*--atm_mpoa_add_qos--*/
struct atm_mpoa_qos * atm_mpoa_search_qos ( __be32 dst_ip ) ; 
/*--atm_mpoa_search_qos--*/
int atm_mpoa_delete_qos ( struct atm_mpoa_qos * entry ) ; 
/*--atm_mpoa_delete_qos--*/
void atm_mpoa_disp_qos ( struct seq_file * m ) ; 
/*--atm_mpoa_disp_qos--*/
int msg_to_mpoad ( struct k_message * mesg , struct mpoa_client * mpc ) ; 
/*--msg_to_mpoad--*/
void atm_mpoa_init_cache ( struct mpoa_client * mpc ) ; 
/*--atm_mpoa_init_cache--*/
int mpc_proc_init ( void ) ; 
/*--mpc_proc_init--*/
void mpc_proc_clean ( void ) ; 
/*--mpc_proc_clean--*/
char * ax2asc ( char * buf , const ax25_address * a ) ; 
/*--ax2asc--*/
void asc2ax ( ax25_address * addr , const char * callsign ) ; 
/*--asc2ax--*/
int ax25cmp ( const ax25_address * a , const ax25_address * b ) ; 
/*--ax25cmp--*/
int ax25digicmp ( const ax25_digi * digi1 , const ax25_digi * digi2 ) ; 
/*--ax25digicmp--*/
const unsigned char * ax25_addr_parse ( const unsigned char * buf , int len , ax25_address * src , ax25_address * dest , ax25_digi * digi , int * flags , int * dama ) ; 
/*--ax25_addr_parse--*/
int ax25_addr_build ( unsigned char * buf , const ax25_address * src , const ax25_address * dest , const ax25_digi * d , int flag , int modulus ) ; 
/*--ax25_addr_build--*/
int ax25_addr_size ( const ax25_digi * dp ) ; 
/*--ax25_addr_size--*/
void ax25_digi_invert ( const ax25_digi * in , ax25_digi * out ) ; 
/*--ax25_digi_invert--*/
ax25_dev * ax25_addr_ax25dev ( ax25_address * addr ) ; 
/*--ax25_addr_ax25dev--*/
void ax25_dev_device_up ( struct net_device * dev ) ; 
/*--ax25_dev_device_up--*/
void ax25_dev_device_down ( struct net_device * dev ) ; 
/*--ax25_dev_device_down--*/
int ax25_fwd_ioctl ( unsigned int cmd , struct ax25_fwd_struct * fwd ) ; 
/*--ax25_fwd_ioctl--*/
struct net_device * ax25_fwd_dev ( struct net_device * dev ) ; 
/*--ax25_fwd_dev--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ax25_dev_free ( void ) ; 
/*--ax25_dev_free--*/
void ax25_register_pid ( struct ax25_protocol * ap ) ; 
/*--ax25_register_pid--*/
void ax25_protocol_release ( unsigned int pid ) ; 
/*--ax25_protocol_release--*/
void ax25_linkfail_register ( struct ax25_linkfail * lf ) ; 
/*--ax25_linkfail_register--*/
void ax25_linkfail_release ( struct ax25_linkfail * lf ) ; 
/*--ax25_linkfail_release--*/
int ax25_listen_register ( ax25_address * callsign , struct net_device * dev ) ; 
/*--ax25_listen_register--*/
void ax25_listen_release ( ax25_address * callsign , struct net_device * dev ) ; 
/*--ax25_listen_release--*/
int ( * ax25_protocol_function ( unsigned int pid ) ) ( struct sk_buff * , ax25_cb * ) ; 
/*--pid--*/
int ax25_listen_mine ( ax25_address * callsign , struct net_device * dev ) ; 
/*--ax25_listen_mine--*/
void ax25_link_failed ( ax25_cb * ax25 , int reason ) ; 
/*--ax25_link_failed--*/
int ax25_protocol_is_registered ( unsigned int pid ) ; 
/*--ax25_protocol_is_registered--*/
int ax25_rx_iframe ( ax25_cb * ax25 , struct sk_buff * skb ) ; 
/*--ax25_rx_iframe--*/
int ax25_kiss_rcv ( struct sk_buff * skb , struct net_device * dev , struct packet_type * ptype , struct net_device * orig_dev ) ; 
/*--ax25_kiss_rcv--*/
int ax25_hard_header ( struct sk_buff * skb , struct net_device * dev , unsigned short type , const void * daddr , const void * saddr , unsigned len ) ; 
/*--ax25_hard_header--*/
int ax25_rebuild_header ( struct sk_buff * skb ) ; 
/*--ax25_rebuild_header--*/
ax25_cb * ax25_send_frame ( struct sk_buff * skb , int paclen , ax25_address * src , ax25_address * dest , ax25_digi * digi , struct net_device * dev ) ; 
/*--ax25_send_frame--*/
void ax25_output ( ax25_cb * ax25 , int paclen , struct sk_buff * skb ) ; 
/*--ax25_output--*/
void ax25_kick ( ax25_cb * ax25 ) ; 
/*--ax25_kick--*/
void ax25_transmit_buffer ( ax25_cb * ax25 , struct sk_buff * skb , int type ) ; 
/*--ax25_transmit_buffer--*/
void ax25_queue_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--ax25_queue_xmit--*/
int ax25_check_iframes_acked ( ax25_cb * ax25 , unsigned short nr ) ; 
/*--ax25_check_iframes_acked--*/
void ax25_rt_device_down ( struct net_device * dev ) ; 
/*--ax25_rt_device_down--*/
void __ax25_put_route ( ax25_route * ax25_rt ) ; 
/*--__ax25_put_route--*/
int ax25_rt_ioctl ( unsigned int cmd , void * arg ) ; 
/*--ax25_rt_ioctl--*/
ax25_route * ax25_get_route ( ax25_address * addr , struct net_device * dev ) ; 
/*--ax25_get_route--*/
int ax25_rt_autobind ( ax25_cb * ax25 , ax25_address * addr ) ; 
/*--ax25_rt_autobind--*/
struct sk_buff * ax25_rt_build_path ( struct sk_buff * skb , ax25_address * src , ax25_address * dest , ax25_digi * digi ) ; 
/*--ax25_rt_build_path--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ax25_rt_free ( void ) ; 
/*--ax25_rt_free--*/
int ax25_std_frame_in ( ax25_cb * ax25 , struct sk_buff * skb , int type ) ; 
/*--ax25_std_frame_in--*/
void ax25_std_nr_error_recovery ( ax25_cb * ax25 ) ; 
/*--ax25_std_nr_error_recovery--*/
void ax25_std_establish_data_link ( ax25_cb * ax25 ) ; 
/*--ax25_std_establish_data_link--*/
void ax25_std_transmit_enquiry ( ax25_cb * ax25 ) ; 
/*--ax25_std_transmit_enquiry--*/
void ax25_std_enquiry_response ( ax25_cb * ax25 ) ; 
/*--ax25_std_enquiry_response--*/
void ax25_std_timeout_response ( ax25_cb * ax25 ) ; 
/*--ax25_std_timeout_response--*/
void ax25_std_heartbeat_expiry ( ax25_cb * ax25 ) ; 
/*--ax25_std_heartbeat_expiry--*/
void ax25_std_t2timer_expiry ( ax25_cb * ax25 ) ; 
/*--ax25_std_t2timer_expiry--*/
void ax25_std_t3timer_expiry ( ax25_cb * ax25 ) ; 
/*--ax25_std_t3timer_expiry--*/
void ax25_std_idletimer_expiry ( ax25_cb * ax25 ) ; 
/*--ax25_std_idletimer_expiry--*/
void ax25_std_t1timer_expiry ( ax25_cb * ax25 ) ; 
/*--ax25_std_t1timer_expiry--*/
void ax25_clear_queues ( ax25_cb * ax25 ) ; 
/*--ax25_clear_queues--*/
void ax25_frames_acked ( ax25_cb * ax25 , unsigned short nr ) ; 
/*--ax25_frames_acked--*/
void ax25_requeue_frames ( ax25_cb * ax25 ) ; 
/*--ax25_requeue_frames--*/
int ax25_validate_nr ( ax25_cb * ax25 , unsigned short nr ) ; 
/*--ax25_validate_nr--*/
int ax25_decode ( ax25_cb * ax25 , struct sk_buff * skb , int * ns , int * nr , int * pf ) ; 
/*--ax25_decode--*/
void ax25_send_control ( ax25_cb * ax25 , int frametype , int poll_bit , int type ) ; 
/*--ax25_send_control--*/
void ax25_return_dm ( struct net_device * dev , ax25_address * src , ax25_address * dest , ax25_digi * digi ) ; 
/*--ax25_return_dm--*/
void ax25_calculate_t1 ( ax25_cb * ax25 ) ; 
/*--ax25_calculate_t1--*/
void ax25_calculate_rtt ( ax25_cb * ax25 ) ; 
/*--ax25_calculate_rtt--*/
void ax25_disconnect ( ax25_cb * ax25 , int reason ) ; 
/*--ax25_disconnect--*/
void ax25_setup_timers ( ax25_cb * ax25 ) ; 
/*--ax25_setup_timers--*/
void ax25_start_heartbeat ( ax25_cb * ax25 ) ; 
/*--ax25_start_heartbeat--*/
void ax25_start_t1timer ( ax25_cb * ax25 ) ; 
/*--ax25_start_t1timer--*/
void ax25_start_t2timer ( ax25_cb * ax25 ) ; 
/*--ax25_start_t2timer--*/
void ax25_start_t3timer ( ax25_cb * ax25 ) ; 
/*--ax25_start_t3timer--*/
void ax25_start_idletimer ( ax25_cb * ax25 ) ; 
/*--ax25_start_idletimer--*/
void ax25_stop_heartbeat ( ax25_cb * ax25 ) ; 
/*--ax25_stop_heartbeat--*/
void ax25_stop_t1timer ( ax25_cb * ax25 ) ; 
/*--ax25_stop_t1timer--*/
void ax25_stop_t2timer ( ax25_cb * ax25 ) ; 
/*--ax25_stop_t2timer--*/
void ax25_stop_t3timer ( ax25_cb * ax25 ) ; 
/*--ax25_stop_t3timer--*/
void ax25_stop_idletimer ( ax25_cb * ax25 ) ; 
/*--ax25_stop_idletimer--*/
int ax25_t1timer_running ( ax25_cb * ax25 ) ; 
/*--ax25_t1timer_running--*/
unsigned long ax25_display_timer ( struct timer_list * timer ) ; 
/*--ax25_display_timer--*/
ax25_uid_assoc * ax25_findbyuid ( uid_t uid ) ; 
/*--ax25_findbyuid--*/
int ax25_uid_ioctl ( int cmd , struct sockaddr_ax25 * sax ) ; 
/*--ax25_uid_ioctl--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ax25_uid_free ( void ) ; 
/*--ax25_uid_free--*/
void ax25_cb_add ( ax25_cb * ax25 ) ; 
/*--ax25_cb_add--*/
struct sock * ax25_find_listener ( ax25_address * addr , int digi , struct net_device * dev , int type ) ; 
/*--ax25_find_listener--*/
struct sock * ax25_get_socket ( ax25_address * my_addr , ax25_address * dest_addr , int type ) ; 
/*--ax25_get_socket--*/
ax25_cb * ax25_find_cb ( ax25_address * src_addr , ax25_address * dest_addr , ax25_digi * digi , struct net_device * dev ) ; 
/*--ax25_find_cb--*/
void ax25_send_to_raw ( ax25_address * addr , struct sk_buff * skb , int proto ) ; 
/*--ax25_send_to_raw--*/
void ax25_destroy_socket ( ax25_cb * ax25 ) ; 
/*--ax25_destroy_socket--*/
void ax25_fillin_cb ( ax25_cb * ax25 , ax25_dev * ax25_dev ) ; 
/*--ax25_fillin_cb--*/
ax25_cb * ax25_create_cb ( void ) ; 
/*--ax25_create_cb--*/
struct sock * ax25_make_new ( struct sock * osk , struct ax25_dev * ax25_dev ) ; 
/*--ax25_make_new--*/
int ax25_ds_frame_in ( ax25_cb * ax25 , struct sk_buff * skb , int type ) ; 
/*--ax25_ds_frame_in--*/
void ax25_ds_nr_error_recovery ( ax25_cb * ax25 ) ; 
/*--ax25_ds_nr_error_recovery--*/
void ax25_ds_enquiry_response ( ax25_cb * ax25 ) ; 
/*--ax25_ds_enquiry_response--*/
void ax25_ds_establish_data_link ( ax25_cb * ax25 ) ; 
/*--ax25_ds_establish_data_link--*/
void ax25_dev_dama_off ( ax25_dev * ax25_dev ) ; 
/*--ax25_dev_dama_off--*/
void ax25_dama_on ( ax25_cb * ax25 ) ; 
/*--ax25_dama_on--*/
void ax25_dama_off ( ax25_cb * ax25 ) ; 
/*--ax25_dama_off--*/
void ax25_ds_setup_timer ( ax25_dev * ax25_dev ) ; 
/*--ax25_ds_setup_timer--*/
void ax25_ds_del_timer ( ax25_dev * ax25_dev ) ; 
/*--ax25_ds_del_timer--*/
void ax25_ds_set_timer ( ax25_dev * ax25_dev ) ; 
/*--ax25_ds_set_timer--*/
void ax25_ds_heartbeat_expiry ( ax25_cb * ax25 ) ; 
/*--ax25_ds_heartbeat_expiry--*/
void ax25_ds_t3timer_expiry ( ax25_cb * ax25 ) ; 
/*--ax25_ds_t3timer_expiry--*/
void ax25_ds_idletimer_expiry ( ax25_cb * ax25 ) ; 
/*--ax25_ds_idletimer_expiry--*/
void ax25_ds_t1_timeout ( ax25_cb * ax25 ) ; 
/*--ax25_ds_t1_timeout--*/
void ax25_register_sysctl ( void ) ; 
/*--ax25_register_sysctl--*/
void ax25_unregister_sysctl ( void ) ; 
/*--ax25_unregister_sysctl--*/
int bt_sock_register ( int proto , const struct net_proto_family * ops ) ; 
/*--bt_sock_register--*/
int bt_sock_unregister ( int proto ) ; 
/*--bt_sock_unregister--*/
void bt_sock_link ( struct bt_sock_list * l , struct sock * sk ) ; 
/*--bt_sock_link--*/
void bt_sock_unlink ( struct bt_sock_list * l , struct sock * sk ) ; 
/*--bt_sock_unlink--*/
void bt_accept_enqueue ( struct sock * parent , struct sock * sk ) ; 
/*--bt_accept_enqueue--*/
void bt_accept_unlink ( struct sock * sk ) ; 
/*--bt_accept_unlink--*/
struct sock * bt_accept_dequeue ( struct sock * parent , struct socket * newsock ) ; 
/*--bt_accept_dequeue--*/
int bt_sock_recvmsg ( struct kiocb * iocb , struct socket * sock , struct msghdr * msg , size_t len , int flags ) ; 
/*--bt_sock_recvmsg--*/
unsigned int bt_sock_poll ( struct file * file , struct socket * sock , poll_table * wait ) ; 
/*--bt_sock_poll--*/
int bt_sock_ioctl ( struct socket * sock , unsigned int cmd , unsigned long arg ) ; 
/*--bt_sock_ioctl--*/
int bt_sock_wait_state ( struct sock * sk , int state , unsigned long timeo ) ; 
/*--bt_sock_wait_state--*/
int hci_register_notifier ( struct notifier_block * nb ) ; 
/*--hci_register_notifier--*/
int hci_unregister_notifier ( struct notifier_block * nb ) ; 
/*--hci_unregister_notifier--*/
void hci_req_complete ( struct hci_dev * hdev , int result ) ; 
/*--hci_req_complete--*/
struct hci_dev * hci_dev_get ( int index ) ; 
/*--hci_dev_get--*/
struct inquiry_entry * hci_inquiry_cache_lookup ( struct hci_dev * hdev , bdaddr_t * bdaddr ) ; 
/*--hci_inquiry_cache_lookup--*/
void hci_inquiry_cache_update ( struct hci_dev * hdev , struct inquiry_data * data ) ; 
/*--hci_inquiry_cache_update--*/
int hci_inquiry ( void * arg ) ; 
/*--hci_inquiry--*/
int hci_dev_open ( __u16 dev ) ; 
/*--hci_dev_open--*/
int hci_dev_close ( __u16 dev ) ; 
/*--hci_dev_close--*/
int hci_dev_reset ( __u16 dev ) ; 
/*--hci_dev_reset--*/
int hci_dev_reset_stat ( __u16 dev ) ; 
/*--hci_dev_reset_stat--*/
int hci_dev_cmd ( unsigned int cmd , void * arg ) ; 
/*--hci_dev_cmd--*/
int hci_get_dev_list ( void * arg ) ; 
/*--hci_get_dev_list--*/
int hci_get_dev_info ( void * arg ) ; 
/*--hci_get_dev_info--*/
struct hci_dev * hci_alloc_dev ( void ) ; 
/*--hci_alloc_dev--*/
void hci_free_dev ( struct hci_dev * hdev ) ; 
/*--hci_free_dev--*/
int hci_register_dev ( struct hci_dev * hdev ) ; 
/*--hci_register_dev--*/
int hci_unregister_dev ( struct hci_dev * hdev ) ; 
/*--hci_unregister_dev--*/
int hci_suspend_dev ( struct hci_dev * hdev ) ; 
/*--hci_suspend_dev--*/
int hci_resume_dev ( struct hci_dev * hdev ) ; 
/*--hci_resume_dev--*/
int hci_recv_frame ( struct sk_buff * skb ) ; 
/*--hci_recv_frame--*/
int hci_recv_fragment ( struct hci_dev * hdev , int type , void * data , int count ) ; 
/*--hci_recv_fragment--*/
int hci_register_proto ( struct hci_proto * hp ) ; 
/*--hci_register_proto--*/
int hci_unregister_proto ( struct hci_proto * hp ) ; 
/*--hci_unregister_proto--*/
int hci_register_cb ( struct hci_cb * cb ) ; 
/*--hci_register_cb--*/
int hci_unregister_cb ( struct hci_cb * cb ) ; 
/*--hci_unregister_cb--*/
int hci_send_cmd ( struct hci_dev * hdev , __u16 opcode , __u32 plen , void * param ) ; 
/*--hci_send_cmd--*/
void * hci_sent_cmd_data ( struct hci_dev * hdev , __u16 opcode ) ; 
/*--hci_sent_cmd_data--*/
void hci_send_acl ( struct hci_conn * conn , struct sk_buff * skb , __u16 flags ) ; 
/*--hci_send_acl--*/
void hci_send_sco ( struct hci_conn * conn , struct sk_buff * skb ) ; 
/*--hci_send_sco--*/
void hci_acl_connect ( struct hci_conn * conn ) ; 
/*--hci_acl_connect--*/
void hci_acl_disconn ( struct hci_conn * conn , __u8 reason ) ; 
/*--hci_acl_disconn--*/
void hci_add_sco ( struct hci_conn * conn , __u16 handle ) ; 
/*--hci_add_sco--*/
void hci_setup_sync ( struct hci_conn * conn , __u16 handle ) ; 
/*--hci_setup_sync--*/
struct hci_conn * hci_conn_add ( struct hci_dev * hdev , int type , bdaddr_t * dst ) ; 
/*--hci_conn_add--*/
int hci_conn_del ( struct hci_conn * conn ) ; 
/*--hci_conn_del--*/
struct hci_dev * hci_get_route ( bdaddr_t * dst , bdaddr_t * src ) ; 
/*--hci_get_route--*/
struct hci_conn * hci_connect ( struct hci_dev * hdev , int type , bdaddr_t * dst , __u8 sec_level , __u8 auth_type ) ; 
/*--hci_connect--*/
int hci_conn_check_link_mode ( struct hci_conn * conn ) ; 
/*--hci_conn_check_link_mode--*/
int hci_conn_security ( struct hci_conn * conn , __u8 sec_level , __u8 auth_type ) ; 
/*--hci_conn_security--*/
int hci_conn_change_link_key ( struct hci_conn * conn ) ; 
/*--hci_conn_change_link_key--*/
int hci_conn_switch_role ( struct hci_conn * conn , __u8 role ) ; 
/*--hci_conn_switch_role--*/
void hci_conn_enter_active_mode ( struct hci_conn * conn ) ; 
/*--hci_conn_enter_active_mode--*/
void hci_conn_enter_sniff_mode ( struct hci_conn * conn ) ; 
/*--hci_conn_enter_sniff_mode--*/
void hci_conn_hash_flush ( struct hci_dev * hdev ) ; 
/*--hci_conn_hash_flush--*/
void hci_conn_check_pending ( struct hci_dev * hdev ) ; 
/*--hci_conn_check_pending--*/
void hci_conn_hold_device ( struct hci_conn * conn ) ; 
/*--hci_conn_hold_device--*/
void hci_conn_put_device ( struct hci_conn * conn ) ; 
/*--hci_conn_put_device--*/
int hci_get_conn_list ( void * arg ) ; 
/*--hci_get_conn_list--*/
int hci_get_conn_info ( struct hci_dev * hdev , void * arg ) ; 
/*--hci_get_conn_info--*/
int hci_get_auth_info ( struct hci_dev * hdev , void * arg ) ; 
/*--hci_get_auth_info--*/
void hci_event_packet ( struct hci_dev * hdev , struct sk_buff * skb ) ; 
/*--hci_event_packet--*/
void hci_si_event ( struct hci_dev * hdev , int type , int dlen , void * data ) ; 
/*--hci_si_event--*/
void hci_send_to_sock ( struct hci_dev * hdev , struct sk_buff * skb ) ; 
/*--hci_send_to_sock--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) hci_sock_init ( void ) ; 
/*--hci_sock_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) hci_sock_cleanup ( void ) ; 
/*--hci_sock_cleanup--*/
void hci_conn_init_sysfs ( struct hci_conn * conn ) ; 
/*--hci_conn_init_sysfs--*/
void hci_conn_add_sysfs ( struct hci_conn * conn ) ; 
/*--hci_conn_add_sysfs--*/
void hci_conn_del_sysfs ( struct hci_conn * conn ) ; 
/*--hci_conn_del_sysfs--*/
int hci_register_sysfs ( struct hci_dev * hdev ) ; 
/*--hci_register_sysfs--*/
void hci_unregister_sysfs ( struct hci_dev * hdev ) ; 
/*--hci_unregister_sysfs--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) bt_sysfs_init ( void ) ; 
/*--bt_sysfs_init--*/
void bt_sysfs_cleanup ( void ) ; 
/*--bt_sysfs_cleanup--*/
void baswap ( bdaddr_t * dst , bdaddr_t * src ) ; 
/*--baswap--*/
char * batostr ( bdaddr_t * ba ) ; 
/*--batostr--*/
int bt_err ( __u16 code ) ; 
/*--bt_err--*/
void l2cap_load ( void ) ; 
/*--l2cap_load--*/
int bnep_add_connection ( struct bnep_connadd_req * req , struct socket * sock ) ; 
/*--bnep_add_connection--*/
int bnep_del_connection ( struct bnep_conndel_req * req ) ; 
/*--bnep_del_connection--*/
int bnep_get_connlist ( struct bnep_connlist_req * req ) ; 
/*--bnep_get_connlist--*/
int bnep_get_conninfo ( struct bnep_conninfo * ci ) ; 
/*--bnep_get_conninfo--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) bnep_sock_init ( void ) ; 
/*--bnep_sock_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) bnep_sock_cleanup ( void ) ; 
/*--bnep_sock_cleanup--*/
void bnep_net_setup ( struct net_device * dev ) ; 
/*--bnep_net_setup--*/
int cmtp_add_connection ( struct cmtp_connadd_req * req , struct socket * sock ) ; 
/*--cmtp_add_connection--*/
int cmtp_del_connection ( struct cmtp_conndel_req * req ) ; 
/*--cmtp_del_connection--*/
int cmtp_get_connlist ( struct cmtp_connlist_req * req ) ; 
/*--cmtp_get_connlist--*/
int cmtp_get_conninfo ( struct cmtp_conninfo * ci ) ; 
/*--cmtp_get_conninfo--*/
int cmtp_init_sockets ( void ) ; 
/*--cmtp_init_sockets--*/
void cmtp_cleanup_sockets ( void ) ; 
/*--cmtp_cleanup_sockets--*/
void cmtp_recv_capimsg ( struct cmtp_session * session , struct sk_buff * skb ) ; 
/*--cmtp_recv_capimsg--*/
int cmtp_attach_device ( struct cmtp_session * session ) ; 
/*--cmtp_attach_device--*/
void cmtp_detach_device ( struct cmtp_session * session ) ; 
/*--cmtp_detach_device--*/
int hidp_add_connection ( struct hidp_connadd_req * req , struct socket * ctrl_sock , struct socket * intr_sock ) ; 
/*--hidp_add_connection--*/
int hidp_del_connection ( struct hidp_conndel_req * req ) ; 
/*--hidp_del_connection--*/
int hidp_get_connlist ( struct hidp_connlist_req * req ) ; 
/*--hidp_get_connlist--*/
int hidp_get_conninfo ( struct hidp_conninfo * ci ) ; 
/*--hidp_get_conninfo--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) hidp_init_sockets ( void ) ; 
/*--hidp_init_sockets--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) hidp_cleanup_sockets ( void ) ; 
/*--hidp_cleanup_sockets--*/
struct rfcomm_dlc * rfcomm_dlc_alloc ( gfp_t prio ) ; 
/*--rfcomm_dlc_alloc--*/
void rfcomm_dlc_free ( struct rfcomm_dlc * d ) ; 
/*--rfcomm_dlc_free--*/
int rfcomm_dlc_open ( struct rfcomm_dlc * d , bdaddr_t * src , bdaddr_t * dst , u8 channel ) ; 
/*--rfcomm_dlc_open--*/
int rfcomm_dlc_close ( struct rfcomm_dlc * d , int err ) ; 
/*--rfcomm_dlc_close--*/
int rfcomm_dlc_send ( struct rfcomm_dlc * d , struct sk_buff * skb ) ; 
/*--rfcomm_dlc_send--*/
void __rfcomm_dlc_throttle ( struct rfcomm_dlc * d ) ; 
/*--__rfcomm_dlc_throttle--*/
void __rfcomm_dlc_unthrottle ( struct rfcomm_dlc * d ) ; 
/*--__rfcomm_dlc_unthrottle--*/
int rfcomm_dlc_set_modem_status ( struct rfcomm_dlc * d , u8 v24_sig ) ; 
/*--rfcomm_dlc_set_modem_status--*/
int rfcomm_dlc_get_modem_status ( struct rfcomm_dlc * d , u8 * v24_sig ) ; 
/*--rfcomm_dlc_get_modem_status--*/
void rfcomm_session_getaddr ( struct rfcomm_session * s , bdaddr_t * src , bdaddr_t * dst ) ; 
/*--rfcomm_session_getaddr--*/
int rfcomm_send_rpn ( struct rfcomm_session * s , int cr , u8 dlci , u8 bit_rate , u8 data_bits , u8 stop_bits , u8 parity , u8 flow_ctrl_settings , u8 xon_char , u8 xoff_char , u16 param_mask ) ; 
/*--rfcomm_send_rpn--*/
void rfcomm_dlc_accept ( struct rfcomm_dlc * d ) ; 
/*--rfcomm_dlc_accept--*/
int rfcomm_connect_ind ( struct rfcomm_session * s , u8 channel , struct rfcomm_dlc * * d ) ; 
/*--rfcomm_connect_ind--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rfcomm_init_sockets ( void ) ; 
/*--rfcomm_init_sockets--*/
void rfcomm_cleanup_sockets ( void ) ; 
/*--rfcomm_cleanup_sockets--*/
int rfcomm_dev_ioctl ( struct sock * sk , unsigned int cmd , void * arg ) ; 
/*--rfcomm_dev_ioctl--*/
int rfcomm_init_ttys ( void ) ; 
/*--rfcomm_init_ttys--*/
void rfcomm_cleanup_ttys ( void ) ; 
/*--rfcomm_cleanup_ttys--*/
netdev_tx_t br_dev_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--br_dev_xmit--*/
void br_netpoll_cleanup ( struct net_device * dev ) ; 
/*--br_netpoll_cleanup--*/
void br_netpoll_disable ( struct net_bridge * br , struct net_device * dev ) ; 
/*--br_netpoll_disable--*/
void br_netpoll_enable ( struct net_bridge * br , struct net_device * dev ) ; 
/*--br_netpoll_enable--*/
void br_dev_setup ( struct net_device * dev ) ; 
/*--br_dev_setup--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) br_fdb_init ( void ) ; 
/*--br_fdb_init--*/
void br_fdb_fini ( void ) ; 
/*--br_fdb_fini--*/
void br_fdb_changeaddr ( struct net_bridge_port * p , const unsigned char * newaddr ) ; 
/*--br_fdb_changeaddr--*/
void br_fdb_cleanup ( unsigned long _data ) ; 
/*--br_fdb_cleanup--*/
void br_fdb_flush ( struct net_bridge * br ) ; 
/*--br_fdb_flush--*/
void br_fdb_delete_by_port ( struct net_bridge * br , const struct net_bridge_port * p , int do_all ) ; 
/*--br_fdb_delete_by_port--*/
struct net_bridge_fdb_entry * __br_fdb_get ( struct net_bridge * br , const unsigned char * addr ) ; 
/*--__br_fdb_get--*/
int br_fdb_test_addr ( struct net_device * dev , unsigned char * addr ) ; 
/*--br_fdb_test_addr--*/
int br_fdb_fillbuf ( struct net_bridge * br , void * buf , unsigned long maxnum , unsigned long skip ) ; 
/*--br_fdb_fillbuf--*/
int br_fdb_insert ( struct net_bridge * br , struct net_bridge_port * source , const unsigned char * addr ) ; 
/*--br_fdb_insert--*/
void br_fdb_update ( struct net_bridge * br , struct net_bridge_port * source , const unsigned char * addr ) ; 
/*--br_fdb_update--*/
int br_dev_queue_push_xmit ( struct sk_buff * skb ) ; 
/*--br_dev_queue_push_xmit--*/
int br_forward_finish ( struct sk_buff * skb ) ; 
/*--br_forward_finish--*/
void br_deliver ( const struct net_bridge_port * to , struct sk_buff * skb ) ; 
/*--br_deliver--*/
void br_forward ( const struct net_bridge_port * to , struct sk_buff * skb , struct sk_buff * skb0 ) ; 
/*--br_forward--*/
void br_flood_deliver ( struct net_bridge * br , struct sk_buff * skb ) ; 
/*--br_flood_deliver--*/
void br_flood_forward ( struct net_bridge * br , struct sk_buff * skb , struct sk_buff * skb2 ) ; 
/*--br_flood_forward--*/
void br_multicast_deliver ( struct net_bridge_mdb_entry * mdst , struct sk_buff * skb ) ; 
/*--br_multicast_deliver--*/
void br_multicast_forward ( struct net_bridge_mdb_entry * mdst , struct sk_buff * skb , struct sk_buff * skb2 ) ; 
/*--br_multicast_forward--*/
void br_port_carrier_check ( struct net_bridge_port * p ) ; 
/*--br_port_carrier_check--*/
int br_add_bridge ( struct net * net , const char * name ) ; 
/*--br_add_bridge--*/
int br_del_bridge ( struct net * net , const char * name ) ; 
/*--br_del_bridge--*/
int br_min_mtu ( const struct net_bridge * br ) ; 
/*--br_min_mtu--*/
void br_features_recompute ( struct net_bridge * br ) ; 
/*--br_features_recompute--*/
int br_add_if ( struct net_bridge * br , struct net_device * dev ) ; 
/*--br_add_if--*/
int br_del_if ( struct net_bridge * br , struct net_device * dev ) ; 
/*--br_del_if--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( noinline ) ) br_net_exit ( struct net * net ) ; 
/*--br_net_exit--*/
int br_handle_frame_finish ( struct sk_buff * skb ) ; 
/*--br_handle_frame_finish--*/
struct sk_buff * br_handle_frame ( struct net_bridge_port * p , struct sk_buff * skb ) ; 
/*--br_handle_frame--*/
int br_ioctl_deviceless_stub ( struct net * net , unsigned int cmd , void * uarg ) ; 
/*--br_ioctl_deviceless_stub--*/
int br_dev_ioctl ( struct net_device * dev , struct ifreq * rq , int cmd ) ; 
/*--br_dev_ioctl--*/
void br_log_state ( const struct net_bridge_port * p ) ; 
/*--br_log_state--*/
struct net_bridge_port * br_get_port ( struct net_bridge * br , u16 port_no ) ; 
/*--br_get_port--*/
void br_become_root_bridge ( struct net_bridge * br ) ; 
/*--br_become_root_bridge--*/
void br_transmit_config ( struct net_bridge_port * p ) ; 
/*--br_transmit_config--*/
void br_transmit_tcn ( struct net_bridge * br ) ; 
/*--br_transmit_tcn--*/
void br_topology_change_detection ( struct net_bridge * br ) ; 
/*--br_topology_change_detection--*/
void br_config_bpdu_generation ( struct net_bridge * br ) ; 
/*--br_config_bpdu_generation--*/
void br_configuration_update ( struct net_bridge * br ) ; 
/*--br_configuration_update--*/
void br_become_designated_port ( struct net_bridge_port * p ) ; 
/*--br_become_designated_port--*/
void br_port_state_selection ( struct net_bridge * br ) ; 
/*--br_port_state_selection--*/
void br_received_config_bpdu ( struct net_bridge_port * p , struct br_config_bpdu * bpdu ) ; 
/*--br_received_config_bpdu--*/
void br_received_tcn_bpdu ( struct net_bridge_port * p ) ; 
/*--br_received_tcn_bpdu--*/
void br_send_config_bpdu ( struct net_bridge_port * p , struct br_config_bpdu * bpdu ) ; 
/*--br_send_config_bpdu--*/
void br_send_tcn_bpdu ( struct net_bridge_port * p ) ; 
/*--br_send_tcn_bpdu--*/
void br_stp_rcv ( const struct stp_proto * proto , struct sk_buff * skb , struct net_device * dev ) ; 
/*--br_stp_rcv--*/
void br_init_port ( struct net_bridge_port * p ) ; 
/*--br_init_port--*/
void br_stp_enable_bridge ( struct net_bridge * br ) ; 
/*--br_stp_enable_bridge--*/
void br_stp_disable_bridge ( struct net_bridge * br ) ; 
/*--br_stp_disable_bridge--*/
void br_stp_enable_port ( struct net_bridge_port * p ) ; 
/*--br_stp_enable_port--*/
void br_stp_disable_port ( struct net_bridge_port * p ) ; 
/*--br_stp_disable_port--*/
void br_stp_set_enabled ( struct net_bridge * br , unsigned long val ) ; 
/*--br_stp_set_enabled--*/
void br_stp_change_bridge_id ( struct net_bridge * br , const unsigned char * addr ) ; 
/*--br_stp_change_bridge_id--*/
void br_stp_recalculate_bridge_id ( struct net_bridge * br ) ; 
/*--br_stp_recalculate_bridge_id--*/
void br_stp_set_bridge_priority ( struct net_bridge * br , u16 newprio ) ; 
/*--br_stp_set_bridge_priority--*/
void br_stp_set_port_priority ( struct net_bridge_port * p , u8 newprio ) ; 
/*--br_stp_set_port_priority--*/
void br_stp_set_path_cost ( struct net_bridge_port * p , u32 path_cost ) ; 
/*--br_stp_set_path_cost--*/
ssize_t br_show_bridge_id ( char * buf , const struct bridge_id * id ) ; 
/*--br_show_bridge_id--*/
void br_stp_timer_init ( struct net_bridge * br ) ; 
/*--br_stp_timer_init--*/
void br_stp_port_timer_init ( struct net_bridge_port * p ) ; 
/*--br_stp_port_timer_init--*/
unsigned long br_timer_value ( const struct timer_list * timer ) ; 
/*--br_timer_value--*/
void br_ifinfo_notify ( int event , struct net_bridge_port * port ) ; 
/*--br_ifinfo_notify--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) br_netlink_init ( void ) ; 
/*--br_netlink_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) br_netlink_fini ( void ) ; 
/*--br_netlink_fini--*/
int br_sysfs_addif ( struct net_bridge_port * p ) ; 
/*--br_sysfs_addif--*/
int br_sysfs_renameif ( struct net_bridge_port * p ) ; 
/*--br_sysfs_renameif--*/
int br_sysfs_addbr ( struct net_device * dev ) ; 
/*--br_sysfs_addbr--*/
void br_sysfs_delbr ( struct net_device * dev ) ; 
/*--br_sysfs_delbr--*/
void br_netfilter_rtable_init ( struct net_bridge * br ) ; 
/*--br_netfilter_rtable_init--*/
int nf_bridge_copy_header ( struct sk_buff * skb ) ; 
/*--nf_bridge_copy_header--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) br_netfilter_init ( void ) ; 
/*--br_netfilter_init--*/
void br_netfilter_fini ( void ) ; 
/*--br_netfilter_fini--*/
struct net_bridge_mdb_entry * br_mdb_get ( struct net_bridge * br , struct sk_buff * skb ) ; 
/*--br_mdb_get--*/
void br_multicast_add_port ( struct net_bridge_port * port ) ; 
/*--br_multicast_add_port--*/
void br_multicast_del_port ( struct net_bridge_port * port ) ; 
/*--br_multicast_del_port--*/
void br_multicast_enable_port ( struct net_bridge_port * port ) ; 
/*--br_multicast_enable_port--*/
void br_multicast_disable_port ( struct net_bridge_port * port ) ; 
/*--br_multicast_disable_port--*/
int br_multicast_rcv ( struct net_bridge * br , struct net_bridge_port * port , struct sk_buff * skb ) ; 
/*--br_multicast_rcv--*/
void br_multicast_init ( struct net_bridge * br ) ; 
/*--br_multicast_init--*/
void br_multicast_open ( struct net_bridge * br ) ; 
/*--br_multicast_open--*/
void br_multicast_stop ( struct net_bridge * br ) ; 
/*--br_multicast_stop--*/
int br_multicast_set_router ( struct net_bridge * br , unsigned long val ) ; 
/*--br_multicast_set_router--*/
int br_multicast_set_port_router ( struct net_bridge_port * p , unsigned long val ) ; 
/*--br_multicast_set_port_router--*/
int br_multicast_toggle ( struct net_bridge * br , unsigned long val ) ; 
/*--br_multicast_toggle--*/
int br_multicast_set_hash_max ( struct net_bridge * br , unsigned long val ) ; 
/*--br_multicast_set_hash_max--*/
unsigned int ebt_do_table ( unsigned int hook , struct sk_buff * skb , const struct net_device * in , const struct net_device * out , struct ebt_table * table ) ; 
/*--ebt_do_table--*/
struct ebt_table * ebt_register_table ( struct net * net , const struct ebt_table * input_table ) ; 
/*--ebt_register_table--*/
void ebt_unregister_table ( struct net * net , struct ebt_table * table ) ; 
/*--ebt_unregister_table--*/
int can_send ( struct sk_buff * skb , int loop ) ; 
/*--can_send--*/
int can_rx_register ( struct net_device * dev , canid_t can_id , canid_t mask , void ( * func ) ( struct sk_buff * , void * ) , void * data , char * ident ) ; 
/*--can_rx_register--*/
void can_rx_unregister ( struct net_device * dev , canid_t can_id , canid_t mask , void ( * func ) ( struct sk_buff * , void * ) , void * data ) ; 
/*--can_rx_unregister--*/
int can_proto_register ( struct can_proto * cp ) ; 
/*--can_proto_register--*/
void can_proto_unregister ( struct can_proto * cp ) ; 
/*--can_proto_unregister--*/
void can_stat_update ( unsigned long data ) ; 
/*--can_stat_update--*/
void can_init_proc ( void ) ; 
/*--can_init_proc--*/
void can_remove_proc ( void ) ; 
/*--can_remove_proc--*/
bool ccid_support_check ( u8 const * ccid_array , u8 array_len ) ; 
/*--ccid_support_check--*/
int ccid_get_builtin_ccids ( u8 * * ccid_array , u8 * array_len ) ; 
/*--ccid_get_builtin_ccids--*/
int ccid_getsockopt_builtin_ccids ( struct sock * sk , int len , char * optval , int * optlen ) ; 
/*--ccid_getsockopt_builtin_ccids--*/
struct ccid * ccid_new ( const u8 id , struct sock * sk , bool rx ) ; 
/*--ccid_new--*/
void ccid_hc_rx_delete ( struct ccid * ccid , struct sock * sk ) ; 
/*--ccid_hc_rx_delete--*/
void ccid_hc_tx_delete ( struct ccid * ccid , struct sock * sk ) ; 
/*--ccid_hc_tx_delete--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ccid_initialize_builtins ( void ) ; 
/*--ccid_initialize_builtins--*/
void ccid_cleanup_builtins ( void ) ; 
/*--ccid_cleanup_builtins--*/
void dccp_feat_list_purge ( struct list_head * fn_list ) ; 
/*--dccp_feat_list_purge--*/
int dccp_feat_clone_list ( struct list_head const * from , struct list_head * to ) ; 
/*--dccp_feat_clone_list--*/
int dccp_feat_insert_opts ( struct dccp_sock * dp , struct dccp_request_sock * dreq , struct sk_buff * skb ) ; 
/*--dccp_feat_insert_opts--*/
int dccp_feat_register_sp ( struct sock * sk , u8 feat , u8 is_local , u8 const * list , u8 len ) ; 
/*--dccp_feat_register_sp--*/
int dccp_feat_register_nn ( struct sock * sk , u8 feat , u64 val ) ; 
/*--dccp_feat_register_nn--*/
int dccp_feat_finalise_settings ( struct dccp_sock * dp ) ; 
/*--dccp_feat_finalise_settings--*/
int dccp_feat_server_ccid_dependencies ( struct dccp_request_sock * dreq ) ; 
/*--dccp_feat_server_ccid_dependencies--*/
int dccp_feat_parse_options ( struct sock * sk , struct dccp_request_sock * dreq , u8 mandatory , u8 opt , u8 feat , u8 * val , u8 len ) ; 
/*--dccp_feat_parse_options--*/
int dccp_feat_init ( struct sock * sk ) ; 
/*--dccp_feat_init--*/
int dccp_feat_activate_values ( struct sock * sk , struct list_head * fn_list ) ; 
/*--dccp_feat_activate_values--*/
int dccp_rcv_established ( struct sock * sk , struct sk_buff * skb , const struct dccp_hdr * dh , const unsigned len ) ; 
/*--dccp_rcv_established--*/
int dccp_rcv_state_process ( struct sock * sk , struct sk_buff * skb , struct dccp_hdr * dh , unsigned len ) ; 
/*--dccp_rcv_state_process--*/
u32 dccp_sample_rtt ( struct sock * sk , long delta ) ; 
/*--dccp_sample_rtt--*/
void dccp_time_wait ( struct sock * sk , int state , int timeo ) ; 
/*--dccp_time_wait--*/
struct sock * dccp_create_openreq_child ( struct sock * sk , const struct request_sock * req , const struct sk_buff * skb ) ; 
/*--dccp_create_openreq_child--*/
struct sock * dccp_check_req ( struct sock * sk , struct sk_buff * skb , struct request_sock * req , struct request_sock * * prev ) ; 
/*--dccp_check_req--*/
int dccp_child_process ( struct sock * parent , struct sock * child , struct sk_buff * skb ) ; 
/*--dccp_child_process--*/
void dccp_reqsk_send_ack ( struct sock * sk , struct sk_buff * skb , struct request_sock * rsk ) ; 
/*--dccp_reqsk_send_ack--*/
int dccp_reqsk_init ( struct request_sock * req , struct dccp_sock const * dp , struct sk_buff const * skb ) ; 
/*--dccp_reqsk_init--*/
u64 dccp_decode_value_var ( const u8 * bf , const u8 len ) ; 
/*--dccp_decode_value_var--*/
int dccp_parse_options ( struct sock * sk , struct dccp_request_sock * dreq , struct sk_buff * skb ) ; 
/*--dccp_parse_options--*/
void dccp_encode_value_var ( const u64 value , u8 * to , const u8 len ) ; 
/*--dccp_encode_value_var--*/
int dccp_insert_option ( struct sock * sk , struct sk_buff * skb , const unsigned char option , const void * value , const unsigned char len ) ; 
/*--dccp_insert_option--*/
int dccp_insert_option_elapsed_time ( struct sock * sk , struct sk_buff * skb , u32 elapsed_time ) ; 
/*--dccp_insert_option_elapsed_time--*/
int dccp_insert_option_timestamp ( struct sock * sk , struct sk_buff * skb ) ; 
/*--dccp_insert_option_timestamp--*/
int dccp_insert_option_mandatory ( struct sk_buff * skb ) ; 
/*--dccp_insert_option_mandatory--*/
int dccp_insert_fn_opt ( struct sk_buff * skb , u8 type , u8 feat , u8 * val , u8 len , bool repeat_first ) ; 
/*--dccp_insert_fn_opt--*/
int dccp_insert_options ( struct sock * sk , struct sk_buff * skb ) ; 
/*--dccp_insert_options--*/
int dccp_insert_options_rsk ( struct dccp_request_sock * dreq , struct sk_buff * skb ) ; 
/*--dccp_insert_options_rsk--*/
unsigned int dccp_sync_mss ( struct sock * sk , u32 pmtu ) ; 
/*--dccp_sync_mss--*/
void dccp_write_space ( struct sock * sk ) ; 
/*--dccp_write_space--*/
void dccp_write_xmit ( struct sock * sk , int block ) ; 
/*--dccp_write_xmit--*/
int dccp_retransmit_skb ( struct sock * sk ) ; 
/*--dccp_retransmit_skb--*/
struct sk_buff * dccp_make_response ( struct sock * sk , struct dst_entry * dst , struct request_sock * req ) ; 
/*--dccp_make_response--*/
struct sk_buff * dccp_ctl_make_reset ( struct sock * sk , struct sk_buff * rcv_skb ) ; 
/*--dccp_ctl_make_reset--*/
int dccp_send_reset ( struct sock * sk , enum dccp_reset_codes code ) ; 
/*--dccp_send_reset--*/
int dccp_connect ( struct sock * sk ) ; 
/*--dccp_connect--*/
void dccp_send_ack ( struct sock * sk ) ; 
/*--dccp_send_ack--*/
void dccp_send_sync ( struct sock * sk , const u64 ackno , const enum dccp_pkt_type pkt_type ) ; 
/*--dccp_send_sync--*/
void dccp_send_close ( struct sock * sk , const int active ) ; 
/*--dccp_send_close--*/
void dccp_set_state ( struct sock * sk , const int state ) ; 
/*--dccp_set_state--*/
void dccp_done ( struct sock * sk ) ; 
/*--dccp_done--*/
const char * dccp_packet_name ( const int type ) ; 
/*--dccp_packet_name--*/
const char * dccp_state_name ( const int state ) ; 
/*--dccp_state_name--*/
int dccp_init_sock ( struct sock * sk , const __u8 ctl_sock_initialized ) ; 
/*--dccp_init_sock--*/
void dccp_destroy_sock ( struct sock * sk ) ; 
/*--dccp_destroy_sock--*/
int dccp_disconnect ( struct sock * sk , int flags ) ; 
/*--dccp_disconnect--*/
unsigned int dccp_poll ( struct file * file , struct socket * sock , poll_table * wait ) ; 
/*--dccp_poll--*/
int dccp_ioctl ( struct sock * sk , int cmd , unsigned long arg ) ; 
/*--dccp_ioctl--*/
int dccp_setsockopt ( struct sock * sk , int level , int optname , char * optval , unsigned int optlen ) ; 
/*--dccp_setsockopt--*/
int compat_dccp_setsockopt ( struct sock * sk , int level , int optname , char * optval , unsigned int optlen ) ; 
/*--compat_dccp_setsockopt--*/
int dccp_getsockopt ( struct sock * sk , int level , int optname , char * optval , int * optlen ) ; 
/*--dccp_getsockopt--*/
int compat_dccp_getsockopt ( struct sock * sk , int level , int optname , char * optval , int * optlen ) ; 
/*--compat_dccp_getsockopt--*/
int dccp_sendmsg ( struct kiocb * iocb , struct sock * sk , struct msghdr * msg , size_t len ) ; 
/*--dccp_sendmsg--*/
int dccp_recvmsg ( struct kiocb * iocb , struct sock * sk , struct msghdr * msg , size_t len , int nonblock , int flags , int * addr_len ) ; 
/*--dccp_recvmsg--*/
int inet_dccp_listen ( struct socket * sock , int backlog ) ; 
/*--inet_dccp_listen--*/
void dccp_close ( struct sock * sk , long timeout ) ; 
/*--dccp_close--*/
void dccp_shutdown ( struct sock * sk , int how ) ; 
/*--dccp_shutdown--*/
void dccp_init_xmit_timers ( struct sock * sk ) ; 
/*--dccp_init_xmit_timers--*/
u32 dccp_timestamp ( void ) ; 
/*--dccp_timestamp--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dccp_timestamping_init ( void ) ; 
/*--dccp_timestamping_init--*/
int dccp_insert_option_ackvec ( struct sock * sk , struct sk_buff * skb ) ; 
/*--dccp_insert_option_ackvec--*/
struct dccp_ackvec * dccp_ackvec_alloc ( const gfp_t priority ) ; 
/*--dccp_ackvec_alloc--*/
void dccp_ackvec_free ( struct dccp_ackvec * av ) ; 
/*--dccp_ackvec_free--*/
int dccp_ackvec_add ( struct dccp_ackvec * av , const struct sock * sk , const u64 ackno , const u8 state ) ; 
/*--dccp_ackvec_add--*/
void dccp_ackvec_check_rcv_ackno ( struct dccp_ackvec * av , struct sock * sk , const u64 ackno ) ; 
/*--dccp_ackvec_check_rcv_ackno--*/
int dccp_ackvec_parse ( struct sock * sk , const struct sk_buff * skb , u64 * ackno , const u8 opt , const u8 * value , const u8 len ) ; 
/*--dccp_ackvec_parse--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dccp_ackvec_init ( void ) ; 
/*--dccp_ackvec_init--*/
void dccp_ackvec_exit ( void ) ; 
/*--dccp_ackvec_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) tfrc_lib_init ( void ) ; 
/*--tfrc_lib_init--*/
void tfrc_lib_exit ( void ) ; 
/*--tfrc_lib_exit--*/
u32 tfrc_calc_x ( u16 s , u32 R , u32 p ) ; 
/*--tfrc_calc_x--*/
u32 tfrc_calc_x_reverse_lookup ( u32 fvalue ) ; 
/*--tfrc_calc_x_reverse_lookup--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) tfrc_tx_packet_history_init ( void ) ; 
/*--tfrc_tx_packet_history_init--*/
void tfrc_tx_packet_history_exit ( void ) ; 
/*--tfrc_tx_packet_history_exit--*/
int tfrc_tx_hist_add ( struct tfrc_tx_hist_entry * * headp , u64 seqno ) ; 
/*--tfrc_tx_hist_add--*/
void tfrc_tx_hist_purge ( struct tfrc_tx_hist_entry * * headp ) ; 
/*--tfrc_tx_hist_purge--*/
u32 tfrc_tx_hist_rtt ( struct tfrc_tx_hist_entry * head , const u64 seqno , const ktime_t now ) ; 
/*--tfrc_tx_hist_rtt--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) tfrc_rx_packet_history_init ( void ) ; 
/*--tfrc_rx_packet_history_init--*/
void tfrc_rx_packet_history_exit ( void ) ; 
/*--tfrc_rx_packet_history_exit--*/
void tfrc_rx_hist_add_packet ( struct tfrc_rx_hist * h , const struct sk_buff * skb , const u64 ndp ) ; 
/*--tfrc_rx_hist_add_packet--*/
int tfrc_rx_hist_duplicate ( struct tfrc_rx_hist * h , struct sk_buff * skb ) ; 
/*--tfrc_rx_hist_duplicate--*/
int tfrc_rx_handle_loss ( struct tfrc_rx_hist * h , struct tfrc_loss_hist * lh , struct sk_buff * skb , const u64 ndp , u32 ( * calc_first_li ) ( struct sock * ) , struct sock * sk ) ; 
/*--tfrc_rx_handle_loss--*/
int tfrc_rx_hist_alloc ( struct tfrc_rx_hist * h ) ; 
/*--tfrc_rx_hist_alloc--*/
void tfrc_rx_hist_purge ( struct tfrc_rx_hist * h ) ; 
/*--tfrc_rx_hist_purge--*/
u32 tfrc_rx_hist_sample_rtt ( struct tfrc_rx_hist * h , const struct sk_buff * skb ) ; 
/*--tfrc_rx_hist_sample_rtt--*/
void tfrc_lh_cleanup ( struct tfrc_loss_hist * lh ) ; 
/*--tfrc_lh_cleanup--*/
u8 tfrc_lh_update_i_mean ( struct tfrc_loss_hist * lh , struct sk_buff * skb ) ; 
/*--tfrc_lh_update_i_mean--*/
int tfrc_lh_interval_add ( struct tfrc_loss_hist * lh , struct tfrc_rx_hist * rh , u32 ( * calc_first_li ) ( struct sock * ) , struct sock * sk ) ; 
/*--tfrc_lh_interval_add--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) tfrc_li_init ( void ) ; 
/*--tfrc_li_init--*/
void tfrc_li_exit ( void ) ; 
/*--tfrc_li_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dccp_sysctl_init ( void ) ; 
/*--dccp_sysctl_init--*/
void dccp_sysctl_exit ( void ) ; 
/*--dccp_sysctl_exit--*/
int dccp_v4_connect ( struct sock * sk , struct sockaddr * uaddr , int addr_len ) ; 
/*--dccp_v4_connect--*/
void dccp_v4_send_check ( struct sock * sk , struct sk_buff * skb ) ; 
/*--dccp_v4_send_check--*/
struct sock * dccp_v4_request_recv_sock ( struct sock * sk , struct sk_buff * skb , struct request_sock * req , struct dst_entry * dst ) ; 
/*--dccp_v4_request_recv_sock--*/
int dccp_v4_conn_request ( struct sock * sk , struct sk_buff * skb ) ; 
/*--dccp_v4_conn_request--*/
int dccp_v4_do_rcv ( struct sock * sk , struct sk_buff * skb ) ; 
/*--dccp_v4_do_rcv--*/
int dccp_invalid_packet ( struct sk_buff * skb ) ; 
/*--dccp_invalid_packet--*/
int dn_sockaddr2username ( struct sockaddr_dn * sdn , unsigned char * buf , unsigned char type ) ; 
/*--dn_sockaddr2username--*/
int dn_username2sockaddr ( unsigned char * data , int len , struct sockaddr_dn * sdn , unsigned char * fmt ) ; 
/*--dn_username2sockaddr--*/
struct sock * dn_sklist_find_listener ( struct sockaddr_dn * addr ) ; 
/*--dn_sklist_find_listener--*/
struct sock * dn_find_by_skb ( struct sk_buff * skb ) ; 
/*--dn_find_by_skb--*/
int dn_destroy_timer ( struct sock * sk ) ; 
/*--dn_destroy_timer--*/
char * dn_addr2asc ( __u16 addr , char * buf ) ; 
/*--dn_addr2asc--*/
unsigned dn_mss_from_pmtu ( struct net_device * dev , int mtu ) ; 
/*--dn_mss_from_pmtu--*/
int dn_nsp_rx ( struct sk_buff * skb ) ; 
/*--dn_nsp_rx--*/
int dn_nsp_backlog_rcv ( struct sock * sk , struct sk_buff * skb ) ; 
/*--dn_nsp_backlog_rcv--*/
struct sk_buff * dn_alloc_skb ( struct sock * sk , int size , gfp_t pri ) ; 
/*--dn_alloc_skb--*/
unsigned long dn_nsp_persist ( struct sock * sk ) ; 
/*--dn_nsp_persist--*/
void dn_nsp_output ( struct sock * sk ) ; 
/*--dn_nsp_output--*/
int dn_nsp_xmit_timeout ( struct sock * sk ) ; 
/*--dn_nsp_xmit_timeout--*/
void dn_nsp_queue_xmit ( struct sock * sk , struct sk_buff * skb , gfp_t gfp , int oth ) ; 
/*--dn_nsp_queue_xmit--*/
int dn_nsp_check_xmit_queue ( struct sock * sk , struct sk_buff * skb , struct sk_buff_head * q , unsigned short acknum ) ; 
/*--dn_nsp_check_xmit_queue--*/
void dn_nsp_send_data_ack ( struct sock * sk ) ; 
/*--dn_nsp_send_data_ack--*/
void dn_nsp_send_oth_ack ( struct sock * sk ) ; 
/*--dn_nsp_send_oth_ack--*/
void dn_send_conn_ack ( struct sock * sk ) ; 
/*--dn_send_conn_ack--*/
void dn_nsp_delayed_ack ( struct sock * sk ) ; 
/*--dn_nsp_delayed_ack--*/
void dn_send_conn_conf ( struct sock * sk , gfp_t gfp ) ; 
/*--dn_send_conn_conf--*/
void dn_nsp_send_disc ( struct sock * sk , unsigned char msgflg , unsigned short reason , gfp_t gfp ) ; 
/*--dn_nsp_send_disc--*/
void dn_nsp_return_disc ( struct sk_buff * skb , unsigned char msgflg , unsigned short reason ) ; 
/*--dn_nsp_return_disc--*/
void dn_nsp_send_link ( struct sock * sk , unsigned char lsflags , char fcval ) ; 
/*--dn_nsp_send_link--*/
void dn_nsp_send_conninit ( struct sock * sk , unsigned char msgflg ) ; 
/*--dn_nsp_send_conninit--*/
void dn_rt_cache_flush ( int delay ) ; 
/*--dn_rt_cache_flush--*/
int dn_route_rcv ( struct sk_buff * skb , struct net_device * dev , struct packet_type * pt , struct net_device * orig_dev ) ; 
/*--dn_route_rcv--*/
int dn_route_output_sock ( struct dst_entry * * pprt , struct flowi * fl , struct sock * sk , int flags ) ; 
/*--dn_route_output_sock--*/
int dn_cache_dump ( struct sk_buff * skb , struct netlink_callback * cb ) ; 
/*--dn_cache_dump--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dn_route_init ( void ) ; 
/*--dn_route_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) dn_route_cleanup ( void ) ; 
/*--dn_route_cleanup--*/
int dn_dev_ioctl ( unsigned int cmd , void * arg ) ; 
/*--dn_dev_ioctl--*/
struct net_device * dn_dev_get_default ( void ) ; 
/*--dn_dev_get_default--*/
int dn_dev_set_default ( struct net_device * dev , int force ) ; 
/*--dn_dev_set_default--*/
int dn_dev_bind_default ( __le16 * addr ) ; 
/*--dn_dev_bind_default--*/
void dn_dev_up ( struct net_device * dev ) ; 
/*--dn_dev_up--*/
void dn_dev_down ( struct net_device * dev ) ; 
/*--dn_dev_down--*/
void dn_dev_init_pkt ( struct sk_buff * skb ) ; 
/*--dn_dev_init_pkt--*/
void dn_dev_veri_pkt ( struct sk_buff * skb ) ; 
/*--dn_dev_veri_pkt--*/
void dn_dev_hello ( struct sk_buff * skb ) ; 
/*--dn_dev_hello--*/
void dn_dev_devices_off ( void ) ; 
/*--dn_dev_devices_off--*/
void dn_dev_devices_on ( void ) ; 
/*--dn_dev_devices_on--*/
int register_dnaddr_notifier ( struct notifier_block * nb ) ; 
/*--register_dnaddr_notifier--*/
int unregister_dnaddr_notifier ( struct notifier_block * nb ) ; 
/*--unregister_dnaddr_notifier--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dn_dev_init ( void ) ; 
/*--dn_dev_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) dn_dev_cleanup ( void ) ; 
/*--dn_dev_cleanup--*/
void dn_neigh_pointopoint_hello ( struct sk_buff * skb ) ; 
/*--dn_neigh_pointopoint_hello--*/
int dn_neigh_router_hello ( struct sk_buff * skb ) ; 
/*--dn_neigh_router_hello--*/
int dn_neigh_endnode_hello ( struct sk_buff * skb ) ; 
/*--dn_neigh_endnode_hello--*/
int dn_neigh_elist ( struct net_device * dev , unsigned char * ptr , int n ) ; 
/*--dn_neigh_elist--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) dn_neigh_init ( void ) ; 
/*--dn_neigh_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) dn_neigh_cleanup ( void ) ; 
/*--dn_neigh_cleanup--*/
void dn_start_slow_timer ( struct sock * sk ) ; 
/*--dn_start_slow_timer--*/
void dn_stop_slow_timer ( struct sock * sk ) ; 
/*--dn_stop_slow_timer--*/
void dn_register_sysctl ( void ) ; 
/*--dn_register_sysctl--*/
void dn_unregister_sysctl ( void ) ; 
/*--dn_unregister_sysctl--*/
struct net_device * ieee802154_get_dev ( struct net * net , struct ieee802154_addr * addr ) ; 
/*--ieee802154_get_dev--*/
void ieee802154_raw_deliver ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--ieee802154_raw_deliver--*/
int ieee802154_dgram_deliver ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--ieee802154_dgram_deliver--*/
struct sk_buff * ieee802154_nl_create ( int flags , u8 req ) ; 
/*--ieee802154_nl_create--*/
int ieee802154_nl_mcast ( struct sk_buff * msg , unsigned int group ) ; 
/*--ieee802154_nl_mcast--*/
struct sk_buff * ieee802154_nl_new_reply ( struct genl_info * info , int flags , u8 req ) ; 
/*--ieee802154_nl_new_reply--*/
int ieee802154_nl_reply ( struct sk_buff * msg , struct genl_info * info ) ; 
/*--ieee802154_nl_reply--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ieee802154_nl_init ( void ) ; 
/*--ieee802154_nl_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ieee802154_nl_exit ( void ) ; 
/*--ieee802154_nl_exit--*/
int ieee802154_nl_assoc_indic ( struct net_device * dev , struct ieee802154_addr * addr , u8 cap ) ; 
/*--ieee802154_nl_assoc_indic--*/
int ieee802154_nl_assoc_confirm ( struct net_device * dev , u16 short_addr , u8 status ) ; 
/*--ieee802154_nl_assoc_confirm--*/
int ieee802154_nl_disassoc_indic ( struct net_device * dev , struct ieee802154_addr * addr , u8 reason ) ; 
/*--ieee802154_nl_disassoc_indic--*/
int ieee802154_nl_disassoc_confirm ( struct net_device * dev , u8 status ) ; 
/*--ieee802154_nl_disassoc_confirm--*/
int ieee802154_nl_beacon_indic ( struct net_device * dev , u16 panid , u16 coord_addr ) ; 
/*--ieee802154_nl_beacon_indic--*/
int ieee802154_nl_scan_confirm ( struct net_device * dev , u8 status , u8 scan_type , u32 unscanned , u8 page , u8 * edl ) ; 
/*--ieee802154_nl_scan_confirm--*/
int ieee802154_nl_start_confirm ( struct net_device * dev , u8 status ) ; 
/*--ieee802154_nl_start_confirm--*/
int nl802154_mac_register ( void ) ; 
/*--nl802154_mac_register--*/
int nl802154_phy_register ( void ) ; 
/*--nl802154_phy_register--*/
struct wpan_phy * wpan_phy_find ( const char * str ) ; 
/*--wpan_phy_find--*/
int wpan_phy_for_each ( int ( * fn ) ( struct wpan_phy * phy , void * data ) , void * data ) ; 
/*--wpan_phy_for_each--*/
struct wpan_phy * wpan_phy_alloc ( size_t priv_size ) ; 
/*--wpan_phy_alloc--*/
int wpan_phy_register ( struct wpan_phy * phy ) ; 
/*--wpan_phy_register--*/
void wpan_phy_unregister ( struct wpan_phy * phy ) ; 
/*--wpan_phy_unregister--*/
void wpan_phy_free ( struct wpan_phy * phy ) ; 
/*--wpan_phy_free--*/
unsigned int alloc_null_binding ( struct nf_conn * ct , unsigned int hooknum ) ; 
/*--alloc_null_binding--*/
int nf_nat_rule_find ( struct sk_buff * skb , unsigned int hooknum , const struct net_device * in , const struct net_device * out , struct nf_conn * ct ) ; 
/*--nf_nat_rule_find--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nf_nat_rule_init ( void ) ; 
/*--nf_nat_rule_init--*/
void nf_nat_rule_cleanup ( void ) ; 
/*--nf_nat_rule_cleanup--*/
; void need_ipv4_conntrack ( void ) ; 
/*--need_ipv4_conntrack--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nf_conntrack_ipv4_compat_init ( void ) ; 
/*--nf_conntrack_ipv4_compat_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) nf_conntrack_ipv4_compat_fini ( void ) ; 
/*--nf_conntrack_ipv4_compat_fini--*/
const struct nf_nat_protocol * nf_nat_proto_find_get ( u_int8_t protonum ) ; 
/*--nf_nat_proto_find_get--*/
void nf_nat_proto_put ( const struct nf_nat_protocol * p ) ; 
/*--nf_nat_proto_put--*/
int nf_nat_used_tuple ( const struct nf_conntrack_tuple * tuple , const struct nf_conn * ignored_conntrack ) ; 
/*--nf_nat_used_tuple--*/
unsigned int nf_nat_setup_info ( struct nf_conn * ct , const struct nf_nat_range * range , enum nf_nat_manip_type maniptype ) ; 
/*--nf_nat_setup_info--*/
unsigned int nf_nat_packet ( struct nf_conn * ct , enum ip_conntrack_info ctinfo , unsigned int hooknum , struct sk_buff * skb ) ; 
/*--nf_nat_packet--*/
int nf_nat_icmp_reply_translation ( struct nf_conn * ct , enum ip_conntrack_info ctinfo , unsigned int hooknum , struct sk_buff * skb ) ; 
/*--nf_nat_icmp_reply_translation--*/
int nf_nat_protocol_register ( const struct nf_nat_protocol * proto ) ; 
/*--nf_nat_protocol_register--*/
void nf_nat_protocol_unregister ( const struct nf_nat_protocol * proto ) ; 
/*--nf_nat_protocol_unregister--*/
s16 nf_nat_get_offset ( const struct nf_conn * ct , enum ip_conntrack_dir dir , u32 seq ) ; 
/*--nf_nat_get_offset--*/
void nf_nat_set_seq_adjust ( struct nf_conn * ct , enum ip_conntrack_info ctinfo , __be32 seq , s16 off ) ; 
/*--nf_nat_set_seq_adjust--*/
int __nf_nat_mangle_tcp_packet ( struct sk_buff * skb , struct nf_conn * ct , enum ip_conntrack_info ctinfo , unsigned int match_offset , unsigned int match_len , const char * rep_buffer , unsigned int rep_len , bool adjust ) ; 
/*--__nf_nat_mangle_tcp_packet--*/
int nf_nat_mangle_udp_packet ( struct sk_buff * skb , struct nf_conn * ct , enum ip_conntrack_info ctinfo , unsigned int match_offset , unsigned int match_len , const char * rep_buffer , unsigned int rep_len ) ; 
/*--nf_nat_mangle_udp_packet--*/
int nf_nat_seq_adjust ( struct sk_buff * skb , struct nf_conn * ct , enum ip_conntrack_info ctinfo ) ; 
/*--nf_nat_seq_adjust--*/
void nf_nat_follow_master ( struct nf_conn * ct , struct nf_conntrack_expect * exp ) ; 
/*--nf_nat_follow_master--*/
bool nf_nat_proto_in_range ( const struct nf_conntrack_tuple * tuple , enum nf_nat_manip_type maniptype , const union nf_conntrack_man_proto * min , const union nf_conntrack_man_proto * max ) ; 
/*--nf_nat_proto_in_range--*/
bool nf_nat_proto_unique_tuple ( struct nf_conntrack_tuple * tuple , const struct nf_nat_range * range , enum nf_nat_manip_type maniptype , const struct nf_conn * ct , u_int16_t * rover ) ; 
/*--nf_nat_proto_unique_tuple--*/
int nf_nat_proto_range_to_nlattr ( struct sk_buff * skb , const struct nf_nat_range * range ) ; 
/*--nf_nat_proto_range_to_nlattr--*/
int nf_nat_proto_nlattr_to_range ( struct nlattr * tb [ ] , struct nf_nat_range * range ) ; 
/*--nf_nat_proto_nlattr_to_range--*/
void nf_defrag_ipv4_enable ( void ) ; 
/*--nf_defrag_ipv4_enable--*/
; void nf_nat_need_gre ( void ) ; 
/*--nf_nat_need_gre--*/
void * ipt_alloc_initial_table ( const struct xt_table * info ) ; 
/*--ipt_alloc_initial_table--*/
unsigned int ipt_do_table ( struct sk_buff * skb , unsigned int hook , const struct net_device * in , const struct net_device * out , struct xt_table * table ) ; 
/*--ipt_do_table--*/
struct xt_table * ipt_register_table ( struct net * net , const struct xt_table * table , const struct ipt_replace * repl ) ; 
/*--ipt_register_table--*/
void ipt_unregister_table ( struct net * net , struct xt_table * table ) ; 
/*--ipt_unregister_table--*/
void * arpt_alloc_initial_table ( const struct xt_table * info ) ; 
/*--arpt_alloc_initial_table--*/
unsigned int arpt_do_table ( struct sk_buff * skb , unsigned int hook , const struct net_device * in , const struct net_device * out , struct xt_table * table ) ; 
/*--arpt_do_table--*/
struct xt_table * arpt_register_table ( struct net * net , const struct xt_table * table , const struct arpt_replace * repl ) ; 
/*--arpt_register_table--*/
void arpt_unregister_table ( struct xt_table * table ) ; 
/*--arpt_unregister_table--*/
int xfrm4_tunnel_register ( struct xfrm_tunnel * handler , unsigned short family ) ; 
/*--xfrm4_tunnel_register--*/
int xfrm4_tunnel_deregister ( struct xfrm_tunnel * handler , unsigned short family ) ; 
/*--xfrm4_tunnel_deregister--*/
void tcp_vegas_init ( struct sock * sk ) ; 
/*--tcp_vegas_init--*/
void tcp_vegas_pkts_acked ( struct sock * sk , u32 cnt , s32 rtt_us ) ; 
/*--tcp_vegas_pkts_acked--*/
void tcp_vegas_state ( struct sock * sk , u8 ca_state ) ; 
/*--tcp_vegas_state--*/
void tcp_vegas_cwnd_event ( struct sock * sk , enum tcp_ca_event event ) ; 
/*--tcp_vegas_cwnd_event--*/
void tcp_vegas_get_info ( struct sock * sk , u32 ext , struct sk_buff * skb ) ; 
/*--tcp_vegas_get_info--*/
void * ip6t_alloc_initial_table ( const struct xt_table * info ) ; 
/*--ip6t_alloc_initial_table--*/
int ip6t_ext_hdr ( u8 nexthdr ) ; 
/*--ip6t_ext_hdr--*/
unsigned int ip6t_do_table ( struct sk_buff * skb , unsigned int hook , const struct net_device * in , const struct net_device * out , struct xt_table * table ) ; 
/*--ip6t_do_table--*/
struct xt_table * ip6t_register_table ( struct net * net , const struct xt_table * table , const struct ip6t_replace * repl ) ; 
/*--ip6t_register_table--*/
void ip6t_unregister_table ( struct net * net , struct xt_table * table ) ; 
/*--ip6t_unregister_table--*/
int ipv6_find_hdr ( const struct sk_buff * skb , unsigned int * offset , int target , unsigned short * fragoff ) ; 
/*--ipv6_find_hdr--*/
struct sk_buff * nf_ct_frag6_gather ( struct sk_buff * skb , u32 user ) ; 
/*--nf_ct_frag6_gather--*/
void nf_ct_frag6_output ( unsigned int hooknum , struct sk_buff * skb , struct net_device * in , struct net_device * out , int ( * okfn ) ( struct sk_buff * ) ) ; 
/*--nf_ct_frag6_output--*/
int nf_ct_frag6_init ( void ) ; 
/*--nf_ct_frag6_init--*/
void nf_ct_frag6_cleanup ( void ) ; 
/*--nf_ct_frag6_cleanup--*/
__be32 xfrm6_tunnel_spi_lookup ( struct net * net , xfrm_address_t * saddr ) ; 
/*--xfrm6_tunnel_spi_lookup--*/
__be32 xfrm6_tunnel_alloc_spi ( struct net * net , xfrm_address_t * saddr ) ; 
/*--xfrm6_tunnel_alloc_spi--*/
void xfrm6_tunnel_free_spi ( struct net * net , xfrm_address_t * saddr ) ; 
/*--xfrm6_tunnel_free_spi--*/
int xfrm6_tunnel_register ( struct xfrm6_tunnel * handler , unsigned short family ) ; 
/*--xfrm6_tunnel_register--*/
int xfrm6_tunnel_deregister ( struct xfrm6_tunnel * handler , unsigned short family ) ; 
/*--xfrm6_tunnel_deregister--*/
struct ipx_interface * ipx_interfaces_head ( void ) ; 
/*--ipx_interfaces_head--*/
struct ipx_interface * ipxitf_find_using_net ( __be32 net ) ; 
/*--ipxitf_find_using_net--*/
void ipxitf_down ( struct ipx_interface * intrfc ) ; 
/*--ipxitf_down--*/
int ipxitf_send ( struct ipx_interface * intrfc , struct sk_buff * skb , char * node ) ; 
/*--ipxitf_send--*/
__be16 ipx_cksum ( struct ipxhdr * packet , int length ) ; 
/*--ipx_cksum--*/
const char * ipx_frame_name ( __be16 frame ) ; 
/*--ipx_frame_name--*/
const char * ipx_device_name ( struct ipx_interface * intrfc ) ; 
/*--ipx_device_name--*/
struct ipx_route * ipxrtr_lookup ( __be32 net ) ; 
/*--ipxrtr_lookup--*/
int ipxrtr_add_route ( __be32 network , struct ipx_interface * intrfc , unsigned char * node ) ; 
/*--ipxrtr_add_route--*/
void ipxrtr_del_routes ( struct ipx_interface * intrfc ) ; 
/*--ipxrtr_del_routes--*/
int ipxrtr_route_skb ( struct sk_buff * skb ) ; 
/*--ipxrtr_route_skb--*/
int ipxrtr_route_packet ( struct sock * sk , struct sockaddr_ipx * usipx , struct iovec * iov , size_t len , int noblock ) ; 
/*--ipxrtr_route_packet--*/
int ipxrtr_ioctl ( unsigned int cmd , void * arg ) ; 
/*--ipxrtr_ioctl--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ipx_proc_init ( void ) ; 
/*--ipx_proc_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) ipx_proc_exit ( void ) ; 
/*--ipx_proc_exit--*/
void ipx_register_sysctl ( void ) ; 
/*--ipx_register_sysctl--*/
void ipx_unregister_sysctl ( void ) ; 
/*--ipx_unregister_sysctl--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) iriap_init ( void ) ; 
/*--iriap_init--*/
void iriap_cleanup ( void ) ; 
/*--iriap_cleanup--*/
struct iriap_cb * iriap_open ( __u8 slsap_sel , int mode , void * priv , CONFIRM_CALLBACK callback ) ; 
/*--iriap_open--*/
void iriap_close ( struct iriap_cb * self ) ; 
/*--iriap_close--*/
int iriap_getvaluebyclass_request ( struct iriap_cb * self , __u32 saddr , __u32 daddr , char * name , char * attr ) ; 
/*--iriap_getvaluebyclass_request--*/
void iriap_send_ack ( struct iriap_cb * self ) ; 
/*--iriap_send_ack--*/
void iriap_connect_request ( struct iriap_cb * self ) ; 
/*--iriap_connect_request--*/
void iriap_call_indication ( struct iriap_cb * self , struct sk_buff * skb ) ; 
/*--iriap_call_indication--*/
void iriap_next_client_state ( struct iriap_cb * self , IRIAP_STATE state ) ; 
/*--iriap_next_client_state--*/
void iriap_next_call_state ( struct iriap_cb * self , IRIAP_STATE state ) ; 
/*--iriap_next_call_state--*/
void iriap_next_server_state ( struct iriap_cb * self , IRIAP_STATE state ) ; 
/*--iriap_next_server_state--*/
void iriap_next_r_connect_state ( struct iriap_cb * self , IRIAP_STATE state ) ; 
/*--iriap_next_r_connect_state--*/
void iriap_do_client_event ( struct iriap_cb * self , IRIAP_EVENT event , struct sk_buff * skb ) ; 
/*--iriap_do_client_event--*/
void iriap_do_call_event ( struct iriap_cb * self , IRIAP_EVENT event , struct sk_buff * skb ) ; 
/*--iriap_do_call_event--*/
void iriap_do_server_event ( struct iriap_cb * self , IRIAP_EVENT event , struct sk_buff * skb ) ; 
/*--iriap_do_server_event--*/
void iriap_do_r_connect_event ( struct iriap_cb * self , IRIAP_EVENT event , struct sk_buff * skb ) ; 
/*--iriap_do_r_connect_event--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) irlmp_init ( void ) ; 
/*--irlmp_init--*/
void irlmp_cleanup ( void ) ; 
/*--irlmp_cleanup--*/
struct lsap_cb * irlmp_open_lsap ( __u8 slsap_sel , notify_t * notify , __u8 pid ) ; 
/*--irlmp_open_lsap--*/
void irlmp_close_lsap ( struct lsap_cb * self ) ; 
/*--irlmp_close_lsap--*/
void irlmp_register_link ( struct irlap_cb * irlap , __u32 saddr , notify_t * notify ) ; 
/*--irlmp_register_link--*/
void irlmp_unregister_link ( __u32 saddr ) ; 
/*--irlmp_unregister_link--*/
int irlmp_connect_request ( struct lsap_cb * self , __u8 dlsap_sel , __u32 saddr , __u32 daddr , struct qos_info * qos , struct sk_buff * userdata ) ; 
/*--irlmp_connect_request--*/
void irlmp_connect_indication ( struct lsap_cb * self , struct sk_buff * skb ) ; 
/*--irlmp_connect_indication--*/
int irlmp_connect_response ( struct lsap_cb * self , struct sk_buff * userdata ) ; 
/*--irlmp_connect_response--*/
void irlmp_connect_confirm ( struct lsap_cb * self , struct sk_buff * skb ) ; 
/*--irlmp_connect_confirm--*/
struct lsap_cb * irlmp_dup ( struct lsap_cb * orig , void * instance ) ; 
/*--irlmp_dup--*/
int irlmp_disconnect_request ( struct lsap_cb * self , struct sk_buff * userdata ) ; 
/*--irlmp_disconnect_request--*/
void irlmp_disconnect_indication ( struct lsap_cb * self , LM_REASON reason , struct sk_buff * skb ) ; 
/*--irlmp_disconnect_indication--*/
void irlmp_do_expiry ( void ) ; 
/*--irlmp_do_expiry--*/
void irlmp_do_discovery ( int nslots ) ; 
/*--irlmp_do_discovery--*/
void irlmp_discovery_request ( int nslots ) ; 
/*--irlmp_discovery_request--*/
struct irda_device_info * irlmp_get_discoveries ( int * pn , __u16 mask , int nslots ) ; 
/*--irlmp_get_discoveries--*/
void irlmp_discovery_confirm ( hashbin_t * log , DISCOVERY_MODE mode ) ; 
/*--irlmp_discovery_confirm--*/
void irlmp_discovery_expiry ( discinfo_t * expiries , int number ) ; 
/*--irlmp_discovery_expiry--*/
discovery_t * irlmp_get_discovery_response ( void ) ; 
/*--irlmp_get_discovery_response--*/
int irlmp_data_request ( struct lsap_cb * self , struct sk_buff * userdata ) ; 
/*--irlmp_data_request--*/
void irlmp_data_indication ( struct lsap_cb * self , struct sk_buff * skb ) ; 
/*--irlmp_data_indication--*/
int irlmp_udata_request ( struct lsap_cb * self , struct sk_buff * userdata ) ; 
/*--irlmp_udata_request--*/
void irlmp_udata_indication ( struct lsap_cb * self , struct sk_buff * skb ) ; 
/*--irlmp_udata_indication--*/
int irlmp_connless_data_request ( struct lsap_cb * self , struct sk_buff * userdata , __u8 pid ) ; 
/*--irlmp_connless_data_request--*/
void irlmp_connless_data_indication ( struct lsap_cb * self , struct sk_buff * skb ) ; 
/*--irlmp_connless_data_indication--*/
void irlmp_status_indication ( struct lap_cb * self , LINK_STATUS link , LOCK_STATUS lock ) ; 
/*--irlmp_status_indication--*/
void irlmp_flow_indication ( struct lap_cb * self , LOCAL_FLOW flow ) ; 
/*--irlmp_flow_indication--*/
__u16 irlmp_service_to_hint ( int service ) ; 
/*--irlmp_service_to_hint--*/
void * irlmp_register_service ( __u16 hints ) ; 
/*--irlmp_register_service--*/
int irlmp_unregister_service ( void * handle ) ; 
/*--irlmp_unregister_service--*/
void * irlmp_register_client ( __u16 hint_mask , DISCOVERY_CALLBACK1 disco_clb , DISCOVERY_CALLBACK2 expir_clb , void * priv ) ; 
/*--irlmp_register_client--*/
int irlmp_update_client ( void * handle , __u16 hint_mask , DISCOVERY_CALLBACK1 disco_clb , DISCOVERY_CALLBACK2 expir_clb , void * priv ) ; 
/*--irlmp_update_client--*/
int irlmp_unregister_client ( void * handle ) ; 
/*--irlmp_unregister_client--*/
LM_REASON irlmp_convert_lap_reason ( LAP_REASON lap_reason ) ; 
/*--irlmp_convert_lap_reason--*/
int irlmp_do_lsap_event ( struct lsap_cb * self , IRLMP_EVENT event , struct sk_buff * skb ) ; 
/*--irlmp_do_lsap_event--*/
void irlmp_do_lap_event ( struct lap_cb * self , IRLMP_EVENT event , struct sk_buff * skb ) ; 
/*--irlmp_do_lap_event--*/
void irlmp_discovery_timer_expired ( void * data ) ; 
/*--irlmp_discovery_timer_expired--*/
void irlmp_watchdog_timer_expired ( void * data ) ; 
/*--irlmp_watchdog_timer_expired--*/
void irlmp_idle_timer_expired ( void * data ) ; 
/*--irlmp_idle_timer_expired--*/
void irlmp_send_lcf_pdu ( struct lap_cb * self , __u8 dlsap , __u8 slsap , __u8 opcode , struct sk_buff * skb ) ; 
/*--irlmp_send_lcf_pdu--*/
void irlmp_link_data_indication ( struct lap_cb * self , struct sk_buff * skb , int unreliable ) ; 
/*--irlmp_link_data_indication--*/
void irlmp_link_unitdata_indication ( struct lap_cb * self , struct sk_buff * skb ) ; 
/*--irlmp_link_unitdata_indication--*/
void irlmp_link_disconnect_indication ( struct lap_cb * lap , struct irlap_cb * irlap , LAP_REASON reason , struct sk_buff * skb ) ; 
/*--irlmp_link_disconnect_indication--*/
void irlmp_link_connect_indication ( struct lap_cb * self , __u32 saddr , __u32 daddr , struct qos_info * qos , struct sk_buff * skb ) ; 
/*--irlmp_link_connect_indication--*/
void irlmp_link_connect_confirm ( struct lap_cb * self , struct qos_info * qos , struct sk_buff * skb ) ; 
/*--irlmp_link_connect_confirm--*/
void irlmp_link_discovery_indication ( struct lap_cb * self , discovery_t * discovery ) ; 
/*--irlmp_link_discovery_indication--*/
void irlmp_link_discovery_confirm ( struct lap_cb * self , hashbin_t * log ) ; 
/*--irlmp_link_discovery_confirm--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) irlap_init ( void ) ; 
/*--irlap_init--*/
void irlap_cleanup ( void ) ; 
/*--irlap_cleanup--*/
struct irlap_cb * irlap_open ( struct net_device * dev , struct qos_info * qos , const char * hw_name ) ; 
/*--irlap_open--*/
void irlap_close ( struct irlap_cb * self ) ; 
/*--irlap_close--*/
void irlap_connect_indication ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_connect_indication--*/
void irlap_connect_response ( struct irlap_cb * self , struct sk_buff * userdata ) ; 
/*--irlap_connect_response--*/
void irlap_connect_request ( struct irlap_cb * self , __u32 daddr , struct qos_info * qos_user , int sniff ) ; 
/*--irlap_connect_request--*/
void irlap_connect_confirm ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_connect_confirm--*/
void irlap_data_indication ( struct irlap_cb * self , struct sk_buff * skb , int unreliable ) ; 
/*--irlap_data_indication--*/
void irlap_data_request ( struct irlap_cb * self , struct sk_buff * skb , int unreliable ) ; 
/*--irlap_data_request--*/
void irlap_unitdata_request ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_unitdata_request--*/
void irlap_unitdata_indication ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_unitdata_indication--*/
void irlap_disconnect_request ( struct irlap_cb * self ) ; 
/*--irlap_disconnect_request--*/
void irlap_disconnect_indication ( struct irlap_cb * self , LAP_REASON reason ) ; 
/*--irlap_disconnect_indication--*/
void irlap_discovery_request ( struct irlap_cb * self , discovery_t * discovery ) ; 
/*--irlap_discovery_request--*/
void irlap_discovery_confirm ( struct irlap_cb * self , hashbin_t * discovery_log ) ; 
/*--irlap_discovery_confirm--*/
void irlap_discovery_indication ( struct irlap_cb * self , discovery_t * discovery ) ; 
/*--irlap_discovery_indication--*/
void irlap_status_indication ( struct irlap_cb * self , int quality_of_link ) ; 
/*--irlap_status_indication--*/
void irlap_reset_indication ( struct irlap_cb * self ) ; 
/*--irlap_reset_indication--*/
void irlap_reset_confirm ( void ) ; 
/*--irlap_reset_confirm--*/
int irlap_generate_rand_time_slot ( int S , int s ) ; 
/*--irlap_generate_rand_time_slot--*/
void irlap_update_nr_received ( struct irlap_cb * self , int nr ) ; 
/*--irlap_update_nr_received--*/
int irlap_validate_ns_received ( struct irlap_cb * self , int ns ) ; 
/*--irlap_validate_ns_received--*/
int irlap_validate_nr_received ( struct irlap_cb * self , int nr ) ; 
/*--irlap_validate_nr_received--*/
void irlap_initiate_connection_state ( struct irlap_cb * self ) ; 
/*--irlap_initiate_connection_state--*/
void irlap_wait_min_turn_around ( struct irlap_cb * self , struct qos_info * qos ) ; 
/*--irlap_wait_min_turn_around--*/
void irlap_flush_all_queues ( struct irlap_cb * self ) ; 
/*--irlap_flush_all_queues--*/
void irlap_apply_default_connection_parameters ( struct irlap_cb * self ) ; 
/*--irlap_apply_default_connection_parameters--*/
void irlap_apply_connection_parameters ( struct irlap_cb * self , int now ) ; 
/*--irlap_apply_connection_parameters--*/
void irlap_do_event ( struct irlap_cb * self , IRLAP_EVENT event , struct sk_buff * skb , struct irlap_info * info ) ; 
/*--irlap_do_event--*/
void irlap_queue_xmit ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_queue_xmit--*/
void irlap_send_snrm_frame ( struct irlap_cb * self , struct qos_info * qos ) ; 
/*--irlap_send_snrm_frame--*/
void irlap_send_ua_response_frame ( struct irlap_cb * self , struct qos_info * qos ) ; 
/*--irlap_send_ua_response_frame--*/
void irlap_send_dm_frame ( struct irlap_cb * self ) ; 
/*--irlap_send_dm_frame--*/
void irlap_send_disc_frame ( struct irlap_cb * self ) ; 
/*--irlap_send_disc_frame--*/
void irlap_send_discovery_xid_frame ( struct irlap_cb * self , int S , __u8 s , __u8 command , discovery_t * discovery ) ; 
/*--irlap_send_discovery_xid_frame--*/
void irlap_send_rr_frame ( struct irlap_cb * self , int command ) ; 
/*--irlap_send_rr_frame--*/
void irlap_send_rd_frame ( struct irlap_cb * self ) ; 
/*--irlap_send_rd_frame--*/
void irlap_send_data_primary ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_send_data_primary--*/
void irlap_send_data_primary_poll ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_send_data_primary_poll--*/
void irlap_send_data_secondary_final ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_send_data_secondary_final--*/
void irlap_send_data_secondary ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_send_data_secondary--*/
void irlap_resend_rejected_frames ( struct irlap_cb * self , int command ) ; 
/*--irlap_resend_rejected_frames--*/
void irlap_resend_rejected_frame ( struct irlap_cb * self , int command ) ; 
/*--irlap_resend_rejected_frame--*/
void irlap_send_ui_frame ( struct irlap_cb * self , struct sk_buff * skb , __u8 caddr , int command ) ; 
/*--irlap_send_ui_frame--*/
void irlap_send_test_frame ( struct irlap_cb * self , __u8 caddr , __u32 daddr , struct sk_buff * cmd ) ; 
/*--irlap_send_test_frame--*/
int irlap_driver_rcv ( struct sk_buff * skb , struct net_device * dev , struct packet_type * ptype , struct net_device * orig_dev ) ; 
/*--irlap_driver_rcv--*/
void irlap_start_slot_timer ( struct irlap_cb * self , int timeout ) ; 
/*--irlap_start_slot_timer--*/
void irlap_start_query_timer ( struct irlap_cb * self , int S , int s ) ; 
/*--irlap_start_query_timer--*/
void irlap_start_final_timer ( struct irlap_cb * self , int timeout ) ; 
/*--irlap_start_final_timer--*/
void irlap_start_wd_timer ( struct irlap_cb * self , int timeout ) ; 
/*--irlap_start_wd_timer--*/
void irlap_start_backoff_timer ( struct irlap_cb * self , int timeout ) ; 
/*--irlap_start_backoff_timer--*/
void irlap_start_mbusy_timer ( struct irlap_cb * self , int timeout ) ; 
/*--irlap_start_mbusy_timer--*/
void irlap_stop_mbusy_timer ( struct irlap_cb * self ) ; 
/*--irlap_stop_mbusy_timer--*/
void irlmp_start_watchdog_timer ( struct lsap_cb * self , int timeout ) ; 
/*--irlmp_start_watchdog_timer--*/
void irlmp_start_discovery_timer ( struct irlmp_cb * self , int timeout ) ; 
/*--irlmp_start_discovery_timer--*/
void irlmp_start_idle_timer ( struct lap_cb * self , int timeout ) ; 
/*--irlmp_start_idle_timer--*/
void irlmp_stop_idle_timer ( struct lap_cb * self ) ; 
/*--irlmp_stop_idle_timer--*/
void irda_qos_compute_intersection ( struct qos_info * qos , struct qos_info * new ) ; 
/*--irda_qos_compute_intersection--*/
void irda_init_max_qos_capabilies ( struct qos_info * qos ) ; 
/*--irda_init_max_qos_capabilies--*/
int irlap_qos_negotiate ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_qos_negotiate--*/
int irlap_insert_qos_negotiation_params ( struct irlap_cb * self , struct sk_buff * skb ) ; 
/*--irlap_insert_qos_negotiation_params--*/
__u32 irlap_max_line_capacity ( __u32 speed , __u32 max_turn_time ) ; 
/*--irlap_max_line_capacity--*/
void irda_qos_bits_to_value ( struct qos_info * qos ) ; 
/*--irda_qos_bits_to_value--*/
hashbin_t * hashbin_new ( int type ) ; 
/*--hashbin_new--*/
int hashbin_delete ( hashbin_t * hashbin , FREE_FUNC free_func ) ; 
/*--hashbin_delete--*/
void hashbin_insert ( hashbin_t * hashbin , irda_queue_t * entry , long hashv , const char * name ) ; 
/*--hashbin_insert--*/
void * hashbin_remove_first ( hashbin_t * hashbin ) ; 
/*--hashbin_remove_first--*/
void * hashbin_remove ( hashbin_t * hashbin , long hashv , const char * name ) ; 
/*--hashbin_remove--*/
void * hashbin_remove_this ( hashbin_t * hashbin , irda_queue_t * entry ) ; 
/*--hashbin_remove_this--*/
void * hashbin_find ( hashbin_t * hashbin , long hashv , const char * name ) ; 
/*--hashbin_find--*/
void * hashbin_lock_find ( hashbin_t * hashbin , long hashv , const char * name ) ; 
/*--hashbin_lock_find--*/
void * hashbin_find_next ( hashbin_t * hashbin , long hashv , const char * name , void * * pnext ) ; 
/*--hashbin_find_next--*/
irda_queue_t * hashbin_get_first ( hashbin_t * hashbin ) ; 
/*--hashbin_get_first--*/
irda_queue_t * hashbin_get_next ( hashbin_t * hashbin ) ; 
/*--hashbin_get_next--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) irttp_init ( void ) ; 
/*--irttp_init--*/
void irttp_cleanup ( void ) ; 
/*--irttp_cleanup--*/
struct tsap_cb * irttp_open_tsap ( __u8 stsap_sel , int credit , notify_t * notify ) ; 
/*--irttp_open_tsap--*/
int irttp_close_tsap ( struct tsap_cb * self ) ; 
/*--irttp_close_tsap--*/
int irttp_udata_request ( struct tsap_cb * self , struct sk_buff * skb ) ; 
/*--irttp_udata_request--*/
int irttp_data_request ( struct tsap_cb * self , struct sk_buff * skb ) ; 
/*--irttp_data_request--*/
void irttp_flow_request ( struct tsap_cb * self , LOCAL_FLOW flow ) ; 
/*--irttp_flow_request--*/
int irttp_connect_request ( struct tsap_cb * self , __u8 dtsap_sel , __u32 saddr , __u32 daddr , struct qos_info * qos , __u32 max_sdu_size , struct sk_buff * userdata ) ; 
/*--irttp_connect_request--*/
int irttp_connect_response ( struct tsap_cb * self , __u32 max_sdu_size , struct sk_buff * userdata ) ; 
/*--irttp_connect_response--*/
struct tsap_cb * irttp_dup ( struct tsap_cb * orig , void * instance ) ; 
/*--irttp_dup--*/
int irttp_disconnect_request ( struct tsap_cb * self , struct sk_buff * userdata , int priority ) ; 
/*--irttp_disconnect_request--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) irda_device_init ( void ) ; 
/*--irda_device_init--*/
void irda_device_cleanup ( void ) ; 
/*--irda_device_cleanup--*/
void irda_device_set_media_busy ( struct net_device * dev , int status ) ; 
/*--irda_device_set_media_busy--*/
int irda_device_is_receiving ( struct net_device * dev ) ; 
/*--irda_device_is_receiving--*/
struct net_device * alloc_irdadev ( int sizeof_priv ) ; 
/*--alloc_irdadev--*/
void irda_setup_dma ( int channel , dma_addr_t buffer , int count , int mode ) ; 
/*--irda_setup_dma--*/
struct ias_object * irias_new_object ( char * name , int id ) ; 
/*--irias_new_object--*/
void __irias_delete_object ( struct ias_object * obj ) ; 
/*--__irias_delete_object--*/
int irias_delete_object ( struct ias_object * obj ) ; 
/*--irias_delete_object--*/
int irias_delete_attrib ( struct ias_object * obj , struct ias_attrib * attrib , int cleanobject ) ; 
/*--irias_delete_attrib--*/
void irias_insert_object ( struct ias_object * obj ) ; 
/*--irias_insert_object--*/
struct ias_object * irias_find_object ( char * name ) ; 
/*--irias_find_object--*/
struct ias_attrib * irias_find_attrib ( struct ias_object * obj , char * name ) ; 
/*--irias_find_attrib--*/
int irias_object_change_attribute ( char * obj_name , char * attrib_name , struct ias_value * new_value ) ; 
/*--irias_object_change_attribute--*/
void irias_add_integer_attrib ( struct ias_object * obj , char * name , int value , int owner ) ; 
/*--irias_add_integer_attrib--*/
void irias_add_octseq_attrib ( struct ias_object * obj , char * name , __u8 * octets , int len , int owner ) ; 
/*--irias_add_octseq_attrib--*/
void irias_add_string_attrib ( struct ias_object * obj , char * name , char * value , int owner ) ; 
/*--irias_add_string_attrib--*/
struct ias_value * irias_new_integer_value ( int integer ) ; 
/*--irias_new_integer_value--*/
struct ias_value * irias_new_string_value ( char * string ) ; 
/*--irias_new_string_value--*/
struct ias_value * irias_new_octseq_value ( __u8 * octseq , int len ) ; 
/*--irias_new_octseq_value--*/
struct ias_value * irias_new_missing_value ( void ) ; 
/*--irias_new_missing_value--*/
void irias_delete_value ( struct ias_value * value ) ; 
/*--irias_delete_value--*/
int async_wrap_skb ( struct sk_buff * skb , __u8 * tx_buff , int buffsize ) ; 
/*--async_wrap_skb--*/
void async_unwrap_char ( struct net_device * dev , struct net_device_stats * stats , iobuff_t * rx_buff , __u8 byte ) ; 
/*--async_unwrap_char--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) irsock_init ( void ) ; 
/*--irsock_init--*/
void irsock_cleanup ( void ) ; 
/*--irsock_cleanup--*/
void irlmp_add_discovery ( hashbin_t * cachelog , discovery_t * new ) ; 
/*--irlmp_add_discovery--*/
void irlmp_add_discovery_log ( hashbin_t * cachelog , hashbin_t * log ) ; 
/*--irlmp_add_discovery_log--*/
void irlmp_expire_discoveries ( hashbin_t * log , __u32 saddr , int force ) ; 
/*--irlmp_expire_discoveries--*/
struct irda_device_info * irlmp_copy_discoveries ( hashbin_t * log , int * pn , __u16 mask , int old_entries ) ; 
/*--irlmp_copy_discoveries--*/
int irda_param_pack ( __u8 * buf , char * fmt , ... ) ; 
/*--irda_param_pack--*/
int irda_param_insert ( void * self , __u8 pi , __u8 * buf , int len , pi_param_info_t * info ) ; 
/*--irda_param_insert--*/
int irda_param_extract_all ( void * self , __u8 * buf , int len , pi_param_info_t * info ) ; 
/*--irda_param_extract_all--*/
int irda_nl_register ( void ) ; 
/*--irda_nl_register--*/
void irda_nl_unregister ( void ) ; 
/*--irda_nl_unregister--*/
void irda_notify_init ( notify_t * notify ) ; 
/*--irda_notify_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) irda_proc_register ( void ) ; 
/*--irda_proc_register--*/
void irda_proc_unregister ( void ) ; 
/*--irda_proc_unregister--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) irda_sysctl_register ( void ) ; 
/*--irda_sysctl_register--*/
void irda_sysctl_unregister ( void ) ; 
/*--irda_sysctl_unregister--*/
void ircomm_tty_start ( struct tty_struct * tty ) ; 
/*--ircomm_tty_start--*/
void ircomm_tty_check_modem_status ( struct ircomm_tty_cb * self ) ; 
/*--ircomm_tty_check_modem_status--*/
int ircomm_tty_attach_cable ( struct ircomm_tty_cb * self ) ; 
/*--ircomm_tty_attach_cable--*/
void ircomm_tty_detach_cable ( struct ircomm_tty_cb * self ) ; 
/*--ircomm_tty_detach_cable--*/
int ircomm_tty_send_initial_parameters ( struct ircomm_tty_cb * self ) ; 
/*--ircomm_tty_send_initial_parameters--*/
void ircomm_tty_disconnect_indication ( void * instance , void * sap , LM_REASON reason , struct sk_buff * skb ) ; 
/*--ircomm_tty_disconnect_indication--*/
void ircomm_tty_connect_confirm ( void * instance , void * sap , struct qos_info * qos , __u32 max_data_size , __u8 max_header_size , struct sk_buff * skb ) ; 
/*--ircomm_tty_connect_confirm--*/
void ircomm_tty_connect_indication ( void * instance , void * sap , struct qos_info * qos , __u32 max_data_size , __u8 max_header_size , struct sk_buff * skb ) ; 
/*--ircomm_tty_connect_indication--*/
void ircomm_tty_link_established ( struct ircomm_tty_cb * self ) ; 
/*--ircomm_tty_link_established--*/
int ircomm_tty_do_event ( struct ircomm_tty_cb * self , IRCOMM_TTY_EVENT event , struct sk_buff * skb , struct ircomm_tty_info * info ) ; 
/*--ircomm_tty_do_event--*/
void ircomm_tty_set_termios ( struct tty_struct * tty , struct ktermios * old_termios ) ; 
/*--ircomm_tty_set_termios--*/
int ircomm_tty_tiocmget ( struct tty_struct * tty , struct file * file ) ; 
/*--ircomm_tty_tiocmget--*/
int ircomm_tty_tiocmset ( struct tty_struct * tty , struct file * file , unsigned int set , unsigned int clear ) ; 
/*--ircomm_tty_tiocmset--*/
int ircomm_tty_ioctl ( struct tty_struct * tty , struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--ircomm_tty_ioctl--*/
int ircomm_param_request ( struct ircomm_tty_cb * self , __u8 pi , int flush ) ; 
/*--ircomm_param_request--*/
struct ircomm_cb * ircomm_open ( notify_t * notify , __u8 service_type , int line ) ; 
/*--ircomm_open--*/
int ircomm_close ( struct ircomm_cb * self ) ; 
/*--ircomm_close--*/
int ircomm_connect_request ( struct ircomm_cb * self , __u8 dlsap_sel , __u32 saddr , __u32 daddr , struct sk_buff * skb , __u8 service_type ) ; 
/*--ircomm_connect_request--*/
void ircomm_connect_indication ( struct ircomm_cb * self , struct sk_buff * skb , struct ircomm_info * info ) ; 
/*--ircomm_connect_indication--*/
int ircomm_connect_response ( struct ircomm_cb * self , struct sk_buff * userdata ) ; 
/*--ircomm_connect_response--*/
void ircomm_connect_confirm ( struct ircomm_cb * self , struct sk_buff * skb , struct ircomm_info * info ) ; 
/*--ircomm_connect_confirm--*/
int ircomm_data_request ( struct ircomm_cb * self , struct sk_buff * skb ) ; 
/*--ircomm_data_request--*/
void ircomm_data_indication ( struct ircomm_cb * self , struct sk_buff * skb ) ; 
/*--ircomm_data_indication--*/
void ircomm_process_data ( struct ircomm_cb * self , struct sk_buff * skb ) ; 
/*--ircomm_process_data--*/
int ircomm_control_request ( struct ircomm_cb * self , struct sk_buff * skb ) ; 
/*--ircomm_control_request--*/
int ircomm_disconnect_request ( struct ircomm_cb * self , struct sk_buff * userdata ) ; 
/*--ircomm_disconnect_request--*/
void ircomm_disconnect_indication ( struct ircomm_cb * self , struct sk_buff * skb , struct ircomm_info * info ) ; 
/*--ircomm_disconnect_indication--*/
void ircomm_flow_request ( struct ircomm_cb * self , LOCAL_FLOW flow ) ; 
/*--ircomm_flow_request--*/
int ircomm_do_event ( struct ircomm_cb * self , IRCOMM_EVENT event , struct sk_buff * skb , struct ircomm_info * info ) ; 
/*--ircomm_do_event--*/
void ircomm_next_state ( struct ircomm_cb * self , IRCOMM_STATE state ) ; 
/*--ircomm_next_state--*/
int ircomm_open_lsap ( struct ircomm_cb * self ) ; 
/*--ircomm_open_lsap--*/
int ircomm_open_tsap ( struct ircomm_cb * self ) ; 
/*--ircomm_open_tsap--*/
struct irlan_cb * irlan_get_any ( void ) ; 
/*--irlan_get_any--*/
void irlan_open_data_tsap ( struct irlan_cb * self ) ; 
/*--irlan_open_data_tsap--*/
void irlan_close_tsaps ( struct irlan_cb * self ) ; 
/*--irlan_close_tsaps--*/
void irlan_ias_register ( struct irlan_cb * self , __u8 tsap_sel ) ; 
/*--irlan_ias_register--*/
int irlan_run_ctrl_tx_queue ( struct irlan_cb * self ) ; 
/*--irlan_run_ctrl_tx_queue--*/
void irlan_get_provider_info ( struct irlan_cb * self ) ; 
/*--irlan_get_provider_info--*/
void irlan_open_data_channel ( struct irlan_cb * self ) ; 
/*--irlan_open_data_channel--*/
void irlan_close_data_channel ( struct irlan_cb * self ) ; 
/*--irlan_close_data_channel--*/
void irlan_set_broadcast_filter ( struct irlan_cb * self , int status ) ; 
/*--irlan_set_broadcast_filter--*/
void irlan_set_multicast_filter ( struct irlan_cb * self , int status ) ; 
/*--irlan_set_multicast_filter--*/
void irlan_get_media_char ( struct irlan_cb * self ) ; 
/*--irlan_get_media_char--*/
int irlan_insert_byte_param ( struct sk_buff * skb , char * param , __u8 value ) ; 
/*--irlan_insert_byte_param--*/
int irlan_insert_short_param ( struct sk_buff * skb , char * param , __u16 value ) ; 
/*--irlan_insert_short_param--*/
int irlan_insert_string_param ( struct sk_buff * skb , char * param , char * string ) ; 
/*--irlan_insert_string_param--*/
int irlan_insert_array_param ( struct sk_buff * skb , char * name , __u8 * array , __u16 array_len ) ; 
/*--irlan_insert_array_param--*/
int irlan_extract_param ( __u8 * buf , char * name , char * value , __u16 * len ) ; 
/*--irlan_extract_param--*/
struct net_device * alloc_irlandev ( const char * name ) ; 
/*--alloc_irlandev--*/
int irlan_eth_receive ( void * instance , void * sap , struct sk_buff * skb ) ; 
/*--irlan_eth_receive--*/
void irlan_eth_flow_indication ( void * instance , void * sap , LOCAL_FLOW flow ) ; 
/*--irlan_eth_flow_indication--*/
void irlan_next_client_state ( struct irlan_cb * self , IRLAN_STATE state ) ; 
/*--irlan_next_client_state--*/
void irlan_next_provider_state ( struct irlan_cb * self , IRLAN_STATE state ) ; 
/*--irlan_next_provider_state--*/
void irlan_client_wakeup ( struct irlan_cb * self , __u32 saddr , __u32 daddr ) ; 
/*--irlan_client_wakeup--*/
void irlan_client_discovery_indication ( discinfo_t * discovery , DISCOVERY_MODE mode , void * priv ) ; 
/*--irlan_client_discovery_indication--*/
void irlan_client_parse_response ( struct irlan_cb * self , struct sk_buff * skb ) ; 
/*--irlan_client_parse_response--*/
void irlan_client_get_value_confirm ( int result , __u16 obj_id , struct ias_value * value , void * priv ) ; 
/*--irlan_client_get_value_confirm--*/
void irlan_provider_connect_response ( struct irlan_cb * self , struct tsap_cb * tsap ) ; 
/*--irlan_provider_connect_response--*/
int irlan_parse_open_data_cmd ( struct irlan_cb * self , struct sk_buff * skb ) ; 
/*--irlan_parse_open_data_cmd--*/
int irlan_provider_parse_command ( struct irlan_cb * self , int cmd , struct sk_buff * skb ) ; 
/*--irlan_provider_parse_command--*/
void irlan_provider_send_reply ( struct irlan_cb * self , int command , int ret_code ) ; 
/*--irlan_provider_send_reply--*/
int irlan_provider_open_ctrl_tsap ( struct irlan_cb * self ) ; 
/*--irlan_provider_open_ctrl_tsap--*/
void irlan_filter_request ( struct irlan_cb * self , struct sk_buff * skb ) ; 
/*--irlan_filter_request--*/
void irlan_check_command_param ( struct irlan_cb * self , char * param , char * value ) ; 
/*--irlan_check_command_param--*/
void irlan_print_filter ( struct seq_file * seq , int filter_type ) ; 
/*--irlan_print_filter--*/
void irlan_do_provider_event ( struct irlan_cb * self , IRLAN_EVENT event , struct sk_buff * skb ) ; 
/*--irlan_do_provider_event--*/
void irlan_do_client_event ( struct irlan_cb * self , IRLAN_EVENT event , struct sk_buff * skb ) ; 
/*--irlan_do_client_event--*/
int irda_irnet_create ( irnet_socket * self ) ; 
/*--irda_irnet_create--*/
int irda_irnet_connect ( irnet_socket * self ) ; 
/*--irda_irnet_connect--*/
void irda_irnet_destroy ( irnet_socket * self ) ; 
/*--irda_irnet_destroy--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) irda_irnet_init ( void ) ; 
/*--irda_irnet_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) irda_irnet_cleanup ( void ) ; 
/*--irda_irnet_cleanup--*/
void lapb_data_input ( struct lapb_cb * lapb , struct sk_buff * skb ) ; 
/*--lapb_data_input--*/
void lapb_kick ( struct lapb_cb * lapb ) ; 
/*--lapb_kick--*/
void lapb_transmit_buffer ( struct lapb_cb * lapb , struct sk_buff * skb , int type ) ; 
/*--lapb_transmit_buffer--*/
void lapb_establish_data_link ( struct lapb_cb * lapb ) ; 
/*--lapb_establish_data_link--*/
void lapb_enquiry_response ( struct lapb_cb * lapb ) ; 
/*--lapb_enquiry_response--*/
void lapb_timeout_response ( struct lapb_cb * lapb ) ; 
/*--lapb_timeout_response--*/
void lapb_check_iframes_acked ( struct lapb_cb * lapb , unsigned short nr ) ; 
/*--lapb_check_iframes_acked--*/
void lapb_check_need_response ( struct lapb_cb * lapb , int type , int pf ) ; 
/*--lapb_check_need_response--*/
void lapb_clear_queues ( struct lapb_cb * lapb ) ; 
/*--lapb_clear_queues--*/
void lapb_frames_acked ( struct lapb_cb * lapb , unsigned short nr ) ; 
/*--lapb_frames_acked--*/
void lapb_requeue_frames ( struct lapb_cb * lapb ) ; 
/*--lapb_requeue_frames--*/
int lapb_validate_nr ( struct lapb_cb * lapb , unsigned short nr ) ; 
/*--lapb_validate_nr--*/
int lapb_decode ( struct lapb_cb * lapb , struct sk_buff * skb , struct lapb_frame * frame ) ; 
/*--lapb_decode--*/
void lapb_send_control ( struct lapb_cb * lapb , int frametype , int poll_bit , int type ) ; 
/*--lapb_send_control--*/
void lapb_transmit_frmr ( struct lapb_cb * lapb ) ; 
/*--lapb_transmit_frmr--*/
void lapb_start_t1timer ( struct lapb_cb * lapb ) ; 
/*--lapb_start_t1timer--*/
void lapb_start_t2timer ( struct lapb_cb * lapb ) ; 
/*--lapb_start_t2timer--*/
void lapb_stop_t1timer ( struct lapb_cb * lapb ) ; 
/*--lapb_stop_t1timer--*/
void lapb_stop_t2timer ( struct lapb_cb * lapb ) ; 
/*--lapb_stop_t2timer--*/
int lapb_t1timer_running ( struct lapb_cb * lapb ) ; 
/*--lapb_t1timer_running--*/
int lapb_register ( struct net_device * dev , struct lapb_register_struct * callbacks ) ; 
/*--lapb_register--*/
int lapb_unregister ( struct net_device * dev ) ; 
/*--lapb_unregister--*/
int lapb_getparms ( struct net_device * dev , struct lapb_parms_struct * parms ) ; 
/*--lapb_getparms--*/
int lapb_setparms ( struct net_device * dev , struct lapb_parms_struct * parms ) ; 
/*--lapb_setparms--*/
int lapb_connect_request ( struct net_device * dev ) ; 
/*--lapb_connect_request--*/
int lapb_disconnect_request ( struct net_device * dev ) ; 
/*--lapb_disconnect_request--*/
int lapb_data_request ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--lapb_data_request--*/
int lapb_data_received ( struct net_device * dev , struct sk_buff * skb ) ; 
/*--lapb_data_received--*/
void lapb_connect_confirmation ( struct lapb_cb * lapb , int reason ) ; 
/*--lapb_connect_confirmation--*/
void lapb_connect_indication ( struct lapb_cb * lapb , int reason ) ; 
/*--lapb_connect_indication--*/
void lapb_disconnect_confirmation ( struct lapb_cb * lapb , int reason ) ; 
/*--lapb_disconnect_confirmation--*/
void lapb_disconnect_indication ( struct lapb_cb * lapb , int reason ) ; 
/*--lapb_disconnect_indication--*/
int lapb_data_indication ( struct lapb_cb * lapb , struct sk_buff * skb ) ; 
/*--lapb_data_indication--*/
int lapb_data_transmit ( struct lapb_cb * lapb , struct sk_buff * skb ) ; 
/*--lapb_data_transmit--*/
int llc_build_and_send_pkt ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_build_and_send_pkt--*/
int llc_establish_connection ( struct sock * sk , u8 * lmac , u8 * dmac , u8 dsap ) ; 
/*--llc_establish_connection--*/
int llc_send_disc ( struct sock * sk ) ; 
/*--llc_send_disc--*/
int llc_conn_ev_conn_req ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_conn_req--*/
int llc_conn_ev_data_req ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_data_req--*/
int llc_conn_ev_disc_req ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_disc_req--*/
int llc_conn_ev_rst_req ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rst_req--*/
int llc_conn_ev_local_busy_detected ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_local_busy_detected--*/
int llc_conn_ev_local_busy_cleared ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_local_busy_cleared--*/
int llc_conn_ev_rx_bad_pdu ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_bad_pdu--*/
int llc_conn_ev_rx_disc_cmd_pbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_disc_cmd_pbit_set_x--*/
int llc_conn_ev_rx_dm_rsp_fbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_dm_rsp_fbit_set_x--*/
int llc_conn_ev_rx_frmr_rsp_fbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_frmr_rsp_fbit_set_x--*/
int llc_conn_ev_rx_i_cmd_pbit_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_cmd_pbit_set_0--*/
int llc_conn_ev_rx_i_cmd_pbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_cmd_pbit_set_1--*/
int llc_conn_ev_rx_i_cmd_pbit_set_0_unexpd_ns ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_cmd_pbit_set_0_unexpd_ns--*/
int llc_conn_ev_rx_i_cmd_pbit_set_1_unexpd_ns ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_cmd_pbit_set_1_unexpd_ns--*/
int llc_conn_ev_rx_i_cmd_pbit_set_x_inval_ns ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_cmd_pbit_set_x_inval_ns--*/
int llc_conn_ev_rx_i_rsp_fbit_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_rsp_fbit_set_0--*/
int llc_conn_ev_rx_i_rsp_fbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_rsp_fbit_set_1--*/
int llc_conn_ev_rx_i_rsp_fbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_rsp_fbit_set_x--*/
int llc_conn_ev_rx_i_rsp_fbit_set_0_unexpd_ns ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_rsp_fbit_set_0_unexpd_ns--*/
int llc_conn_ev_rx_i_rsp_fbit_set_1_unexpd_ns ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_rsp_fbit_set_1_unexpd_ns--*/
int llc_conn_ev_rx_i_rsp_fbit_set_x_unexpd_ns ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_rsp_fbit_set_x_unexpd_ns--*/
int llc_conn_ev_rx_i_rsp_fbit_set_x_inval_ns ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_i_rsp_fbit_set_x_inval_ns--*/
int llc_conn_ev_rx_rej_cmd_pbit_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rej_cmd_pbit_set_0--*/
int llc_conn_ev_rx_rej_cmd_pbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rej_cmd_pbit_set_1--*/
int llc_conn_ev_rx_rej_rsp_fbit_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rej_rsp_fbit_set_0--*/
int llc_conn_ev_rx_rej_rsp_fbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rej_rsp_fbit_set_1--*/
int llc_conn_ev_rx_rej_rsp_fbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rej_rsp_fbit_set_x--*/
int llc_conn_ev_rx_rnr_cmd_pbit_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rnr_cmd_pbit_set_0--*/
int llc_conn_ev_rx_rnr_cmd_pbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rnr_cmd_pbit_set_1--*/
int llc_conn_ev_rx_rnr_rsp_fbit_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rnr_rsp_fbit_set_0--*/
int llc_conn_ev_rx_rnr_rsp_fbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rnr_rsp_fbit_set_1--*/
int llc_conn_ev_rx_rr_cmd_pbit_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rr_cmd_pbit_set_0--*/
int llc_conn_ev_rx_rr_cmd_pbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rr_cmd_pbit_set_1--*/
int llc_conn_ev_rx_rr_rsp_fbit_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rr_rsp_fbit_set_0--*/
int llc_conn_ev_rx_rr_rsp_fbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_rr_rsp_fbit_set_1--*/
int llc_conn_ev_rx_sabme_cmd_pbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_sabme_cmd_pbit_set_x--*/
int llc_conn_ev_rx_ua_rsp_fbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_ua_rsp_fbit_set_x--*/
int llc_conn_ev_rx_xxx_cmd_pbit_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_xxx_cmd_pbit_set_1--*/
int llc_conn_ev_rx_xxx_cmd_pbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_xxx_cmd_pbit_set_x--*/
int llc_conn_ev_rx_xxx_rsp_fbit_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_xxx_rsp_fbit_set_x--*/
int llc_conn_ev_rx_zzz_cmd_pbit_set_x_inval_nr ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_zzz_cmd_pbit_set_x_inval_nr--*/
int llc_conn_ev_rx_zzz_rsp_fbit_set_x_inval_nr ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_zzz_rsp_fbit_set_x_inval_nr--*/
int llc_conn_ev_rx_any_frame ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rx_any_frame--*/
int llc_conn_ev_p_tmr_exp ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_p_tmr_exp--*/
int llc_conn_ev_ack_tmr_exp ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_ack_tmr_exp--*/
int llc_conn_ev_rej_tmr_exp ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_rej_tmr_exp--*/
int llc_conn_ev_busy_tmr_exp ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_busy_tmr_exp--*/
int llc_conn_ev_init_p_f_cycle ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_init_p_f_cycle--*/
int llc_conn_ev_tx_buffer_full ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_tx_buffer_full--*/
int llc_conn_ev_qlfy_data_flag_eq_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_data_flag_eq_1--*/
int llc_conn_ev_qlfy_data_flag_eq_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_data_flag_eq_0--*/
int llc_conn_ev_qlfy_data_flag_eq_2 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_data_flag_eq_2--*/
int llc_conn_ev_qlfy_p_flag_eq_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_p_flag_eq_1--*/
int llc_conn_ev_qlfy_last_frame_eq_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_last_frame_eq_1--*/
int llc_conn_ev_qlfy_last_frame_eq_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_last_frame_eq_0--*/
int llc_conn_ev_qlfy_p_flag_eq_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_p_flag_eq_0--*/
int llc_conn_ev_qlfy_p_flag_eq_f ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_p_flag_eq_f--*/
int llc_conn_ev_qlfy_remote_busy_eq_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_remote_busy_eq_0--*/
int llc_conn_ev_qlfy_remote_busy_eq_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_remote_busy_eq_1--*/
int llc_conn_ev_qlfy_retry_cnt_lt_n2 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_retry_cnt_lt_n2--*/
int llc_conn_ev_qlfy_retry_cnt_gte_n2 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_retry_cnt_gte_n2--*/
int llc_conn_ev_qlfy_s_flag_eq_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_s_flag_eq_1--*/
int llc_conn_ev_qlfy_s_flag_eq_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_s_flag_eq_0--*/
int llc_conn_ev_qlfy_cause_flag_eq_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_cause_flag_eq_1--*/
int llc_conn_ev_qlfy_cause_flag_eq_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_cause_flag_eq_0--*/
int llc_conn_ev_qlfy_set_status_conn ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_set_status_conn--*/
int llc_conn_ev_qlfy_set_status_disc ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_set_status_disc--*/
int llc_conn_ev_qlfy_set_status_failed ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_set_status_failed--*/
int llc_conn_ev_qlfy_set_status_remote_busy ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_set_status_remote_busy--*/
int llc_conn_ev_qlfy_set_status_refuse ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_set_status_refuse--*/
int llc_conn_ev_qlfy_set_status_conflict ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_set_status_conflict--*/
int llc_conn_ev_qlfy_set_status_rst_done ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ev_qlfy_set_status_rst_done--*/
int llc_conn_ac_clear_remote_busy ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_clear_remote_busy--*/
int llc_conn_ac_conn_ind ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_conn_ind--*/
int llc_conn_ac_conn_confirm ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_conn_confirm--*/
int llc_conn_ac_data_ind ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_data_ind--*/
int llc_conn_ac_disc_ind ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_disc_ind--*/
int llc_conn_ac_disc_confirm ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_disc_confirm--*/
int llc_conn_ac_rst_ind ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_rst_ind--*/
int llc_conn_ac_rst_confirm ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_rst_confirm--*/
int llc_conn_ac_clear_remote_busy_if_f_eq_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_clear_remote_busy_if_f_eq_1--*/
int llc_conn_ac_stop_rej_tmr_if_data_flag_eq_2 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_stop_rej_tmr_if_data_flag_eq_2--*/
int llc_conn_ac_send_disc_cmd_p_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_disc_cmd_p_set_x--*/
int llc_conn_ac_send_dm_rsp_f_set_p ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_dm_rsp_f_set_p--*/
int llc_conn_ac_send_dm_rsp_f_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_dm_rsp_f_set_1--*/
int llc_conn_ac_send_frmr_rsp_f_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_frmr_rsp_f_set_x--*/
int llc_conn_ac_resend_frmr_rsp_f_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_resend_frmr_rsp_f_set_0--*/
int llc_conn_ac_resend_frmr_rsp_f_set_p ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_resend_frmr_rsp_f_set_p--*/
int llc_conn_ac_send_i_cmd_p_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_i_cmd_p_set_1--*/
int llc_conn_ac_send_i_xxx_x_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_i_xxx_x_set_0--*/
int llc_conn_ac_resend_i_xxx_x_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_resend_i_xxx_x_set_0--*/
int llc_conn_ac_resend_i_xxx_x_set_0_or_send_rr ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_resend_i_xxx_x_set_0_or_send_rr--*/
int llc_conn_ac_resend_i_rsp_f_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_resend_i_rsp_f_set_1--*/
int llc_conn_ac_send_rej_cmd_p_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rej_cmd_p_set_1--*/
int llc_conn_ac_send_rej_rsp_f_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rej_rsp_f_set_1--*/
int llc_conn_ac_send_rej_xxx_x_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rej_xxx_x_set_0--*/
int llc_conn_ac_send_rnr_cmd_p_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rnr_cmd_p_set_1--*/
int llc_conn_ac_send_rnr_rsp_f_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rnr_rsp_f_set_1--*/
int llc_conn_ac_send_rnr_xxx_x_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rnr_xxx_x_set_0--*/
int llc_conn_ac_set_remote_busy ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_remote_busy--*/
int llc_conn_ac_opt_send_rnr_xxx_x_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_opt_send_rnr_xxx_x_set_0--*/
int llc_conn_ac_send_rr_cmd_p_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rr_cmd_p_set_1--*/
int llc_conn_ac_send_rr_rsp_f_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rr_rsp_f_set_1--*/
int llc_conn_ac_send_ack_rsp_f_set_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_ack_rsp_f_set_1--*/
int llc_conn_ac_send_rr_xxx_x_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_rr_xxx_x_set_0--*/
int llc_conn_ac_send_ack_xxx_x_set_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_ack_xxx_x_set_0--*/
void llc_conn_set_p_flag ( struct sock * sk , u8 value ) ; 
/*--llc_conn_set_p_flag--*/
int llc_conn_ac_send_sabme_cmd_p_set_x ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_sabme_cmd_p_set_x--*/
int llc_conn_ac_send_ua_rsp_f_set_p ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_ua_rsp_f_set_p--*/
int llc_conn_ac_set_s_flag_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_s_flag_0--*/
int llc_conn_ac_set_s_flag_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_s_flag_1--*/
int llc_conn_ac_start_p_timer ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_start_p_timer--*/
int llc_conn_ac_send_ack_if_needed ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_ack_if_needed--*/
int llc_conn_ac_rst_sendack_flag ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_rst_sendack_flag--*/
int llc_conn_ac_send_i_as_ack ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_send_i_as_ack--*/
int llc_conn_ac_adjust_npta_by_rr ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_adjust_npta_by_rr--*/
int llc_conn_ac_adjust_npta_by_rnr ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_adjust_npta_by_rnr--*/
int llc_conn_ac_dec_tx_win_size ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_dec_tx_win_size--*/
int llc_conn_ac_inc_tx_win_size ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_inc_tx_win_size--*/
int llc_conn_ac_stop_all_timers ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_stop_all_timers--*/
int llc_conn_ac_stop_other_timers ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_stop_other_timers--*/
int llc_conn_ac_start_ack_timer ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_start_ack_timer--*/
int llc_conn_ac_start_rej_timer ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_start_rej_timer--*/
int llc_conn_ac_start_ack_tmr_if_not_running ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_start_ack_tmr_if_not_running--*/
int llc_conn_ac_stop_ack_timer ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_stop_ack_timer--*/
int llc_conn_ac_stop_p_timer ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_stop_p_timer--*/
int llc_conn_ac_stop_rej_timer ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_stop_rej_timer--*/
int llc_conn_ac_upd_nr_received ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_upd_nr_received--*/
int llc_conn_ac_upd_p_flag ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_upd_p_flag--*/
int llc_conn_ac_set_data_flag_2 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_data_flag_2--*/
int llc_conn_ac_set_data_flag_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_data_flag_0--*/
int llc_conn_ac_set_data_flag_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_data_flag_1--*/
int llc_conn_ac_set_data_flag_1_if_data_flag_eq_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_data_flag_1_if_data_flag_eq_0--*/
int llc_conn_ac_set_p_flag_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_p_flag_0--*/
int llc_conn_ac_set_remote_busy_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_remote_busy_0--*/
int llc_conn_ac_set_cause_flag_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_cause_flag_0--*/
int llc_conn_ac_set_cause_flag_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_cause_flag_1--*/
int llc_conn_ac_set_retry_cnt_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_retry_cnt_0--*/
int llc_conn_ac_inc_retry_cnt_by_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_inc_retry_cnt_by_1--*/
int llc_conn_ac_set_vr_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_vr_0--*/
int llc_conn_ac_inc_vr_by_1 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_inc_vr_by_1--*/
int llc_conn_ac_set_vs_0 ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_vs_0--*/
int llc_conn_ac_set_vs_nr ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_set_vs_nr--*/
void llc_conn_pf_cycle_tmr_cb ( unsigned long timeout_data ) ; 
/*--llc_conn_pf_cycle_tmr_cb--*/
void llc_conn_busy_tmr_cb ( unsigned long timeout_data ) ; 
/*--llc_conn_busy_tmr_cb--*/
void llc_conn_ack_tmr_cb ( unsigned long timeout_data ) ; 
/*--llc_conn_ack_tmr_cb--*/
void llc_conn_rej_tmr_cb ( unsigned long timeout_data ) ; 
/*--llc_conn_rej_tmr_cb--*/
int llc_conn_ac_rst_vs ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_rst_vs--*/
int llc_conn_ac_upd_vs ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_ac_upd_vs--*/
int llc_conn_disc ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_disc--*/
int llc_conn_reset ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_reset--*/
u8 llc_circular_between ( u8 a , u8 b , u8 c ) ; 
/*--llc_circular_between--*/
int llc_conn_state_process ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_state_process--*/
void llc_conn_send_pdu ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_send_pdu--*/
void llc_conn_rtn_pdu ( struct sock * sk , struct sk_buff * skb ) ; 
/*--llc_conn_rtn_pdu--*/
void llc_conn_resend_i_pdu_as_cmd ( struct sock * sk , u8 nr , u8 first_p_bit ) ; 
/*--llc_conn_resend_i_pdu_as_cmd--*/
void llc_conn_resend_i_pdu_as_rsp ( struct sock * sk , u8 nr , u8 first_f_bit ) ; 
/*--llc_conn_resend_i_pdu_as_rsp--*/
int llc_conn_remove_acked_pdus ( struct sock * sk , u8 nr , u16 * how_many_unacked ) ; 
/*--llc_conn_remove_acked_pdus--*/
struct sock * llc_lookup_established ( struct llc_sap * sap , struct llc_addr * daddr , struct llc_addr * laddr ) ; 
/*--llc_lookup_established--*/
u8 llc_data_accept_state ( u8 state ) ; 
/*--llc_data_accept_state--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) llc_build_offset_table ( void ) ; 
/*--llc_build_offset_table--*/
void llc_sap_add_socket ( struct llc_sap * sap , struct sock * sk ) ; 
/*--llc_sap_add_socket--*/
void llc_sap_remove_socket ( struct llc_sap * sap , struct sock * sk ) ; 
/*--llc_sap_remove_socket--*/
void llc_conn_handler ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_conn_handler--*/
struct sock * llc_sk_alloc ( struct net * net , int family , gfp_t priority , struct proto * prot ) ; 
/*--llc_sk_alloc--*/
void llc_sk_free ( struct sock * sk ) ; 
/*--llc_sk_free--*/
void llc_sk_reset ( struct sock * sk ) ; 
/*--llc_sk_reset--*/
void llc_pdu_set_cmd_rsp ( struct sk_buff * skb , u8 pdu_type ) ; 
/*--llc_pdu_set_cmd_rsp--*/
void llc_pdu_set_pf_bit ( struct sk_buff * skb , u8 bit_value ) ; 
/*--llc_pdu_set_pf_bit--*/
void llc_pdu_decode_pf_bit ( struct sk_buff * skb , u8 * pf_bit ) ; 
/*--llc_pdu_decode_pf_bit--*/
void llc_pdu_init_as_disc_cmd ( struct sk_buff * skb , u8 p_bit ) ; 
/*--llc_pdu_init_as_disc_cmd--*/
void llc_pdu_init_as_i_cmd ( struct sk_buff * skb , u8 p_bit , u8 ns , u8 nr ) ; 
/*--llc_pdu_init_as_i_cmd--*/
void llc_pdu_init_as_rej_cmd ( struct sk_buff * skb , u8 p_bit , u8 nr ) ; 
/*--llc_pdu_init_as_rej_cmd--*/
void llc_pdu_init_as_rnr_cmd ( struct sk_buff * skb , u8 p_bit , u8 nr ) ; 
/*--llc_pdu_init_as_rnr_cmd--*/
void llc_pdu_init_as_rr_cmd ( struct sk_buff * skb , u8 p_bit , u8 nr ) ; 
/*--llc_pdu_init_as_rr_cmd--*/
void llc_pdu_init_as_sabme_cmd ( struct sk_buff * skb , u8 p_bit ) ; 
/*--llc_pdu_init_as_sabme_cmd--*/
void llc_pdu_init_as_dm_rsp ( struct sk_buff * skb , u8 f_bit ) ; 
/*--llc_pdu_init_as_dm_rsp--*/
void llc_pdu_init_as_frmr_rsp ( struct sk_buff * skb , struct llc_pdu_sn * prev_pdu , u8 f_bit , u8 vs , u8 vr , u8 vzyxw ) ; 
/*--llc_pdu_init_as_frmr_rsp--*/
void llc_pdu_init_as_rr_rsp ( struct sk_buff * skb , u8 f_bit , u8 nr ) ; 
/*--llc_pdu_init_as_rr_rsp--*/
void llc_pdu_init_as_rej_rsp ( struct sk_buff * skb , u8 f_bit , u8 nr ) ; 
/*--llc_pdu_init_as_rej_rsp--*/
void llc_pdu_init_as_rnr_rsp ( struct sk_buff * skb , u8 f_bit , u8 nr ) ; 
/*--llc_pdu_init_as_rnr_rsp--*/
void llc_pdu_init_as_ua_rsp ( struct sk_buff * skb , u8 f_bit ) ; 
/*--llc_pdu_init_as_ua_rsp--*/
struct sk_buff * llc_alloc_frame ( struct sock * sk , struct net_device * dev , u8 type , u32 data_size ) ; 
/*--llc_alloc_frame--*/
void llc_save_primitive ( struct sock * sk , struct sk_buff * skb , u8 prim ) ; 
/*--llc_save_primitive--*/
void llc_sap_rtn_pdu ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_rtn_pdu--*/
void llc_build_and_send_test_pkt ( struct llc_sap * sap , struct sk_buff * skb , u8 * dmac , u8 dsap ) ; 
/*--llc_build_and_send_test_pkt--*/
void llc_build_and_send_xid_pkt ( struct llc_sap * sap , struct sk_buff * skb , u8 * dmac , u8 dsap ) ; 
/*--llc_build_and_send_xid_pkt--*/
void llc_sap_handler ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_handler--*/
int llc_sap_action_unitdata_ind ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_unitdata_ind--*/
int llc_sap_action_send_ui ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_send_ui--*/
int llc_sap_action_send_xid_c ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_send_xid_c--*/
int llc_sap_action_send_xid_r ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_send_xid_r--*/
int llc_sap_action_send_test_c ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_send_test_c--*/
int llc_sap_action_send_test_r ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_send_test_r--*/
int llc_sap_action_report_status ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_report_status--*/
int llc_sap_action_xid_ind ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_xid_ind--*/
int llc_sap_action_test_ind ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_action_test_ind--*/
int llc_sap_ev_activation_req ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_activation_req--*/
int llc_sap_ev_rx_ui ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_rx_ui--*/
int llc_sap_ev_unitdata_req ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_unitdata_req--*/
int llc_sap_ev_xid_req ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_xid_req--*/
int llc_sap_ev_rx_xid_c ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_rx_xid_c--*/
int llc_sap_ev_rx_xid_r ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_rx_xid_r--*/
int llc_sap_ev_test_req ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_test_req--*/
int llc_sap_ev_rx_test_c ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_rx_test_c--*/
int llc_sap_ev_rx_test_r ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_rx_test_r--*/
int llc_sap_ev_deactivation_req ( struct llc_sap * sap , struct sk_buff * skb ) ; 
/*--llc_sap_ev_deactivation_req--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) llc_station_init ( void ) ; 
/*--llc_station_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) llc_station_exit ( void ) ; 
/*--llc_station_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) llc_proc_init ( void ) ; 
/*--llc_proc_init--*/
void llc_proc_exit ( void ) ; 
/*--llc_proc_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) llc_sysctl_init ( void ) ; 
/*--llc_sysctl_init--*/
void llc_sysctl_exit ( void ) ; 
/*--llc_sysctl_exit--*/
void ieee80211_configure_filter ( struct ieee80211_local * local ) ; 
/*--ieee80211_configure_filter--*/
int ieee80211_hw_config ( struct ieee80211_local * local , u32 changed ) ; 
/*--ieee80211_hw_config--*/
void ieee80211_bss_info_change_notify ( struct ieee80211_sub_if_data * sdata , u32 changed ) ; 
/*--ieee80211_bss_info_change_notify--*/
u32 ieee80211_reset_erp_info ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_reset_erp_info--*/
void ieee80211_restart_hw ( struct ieee80211_hw * hw ) ; 
/*--ieee80211_restart_hw--*/
struct ieee80211_hw * ieee80211_alloc_hw ( size_t priv_data_len , const struct ieee80211_ops * ops ) ; 
/*--ieee80211_alloc_hw--*/
int ieee80211_register_hw ( struct ieee80211_hw * hw ) ; 
/*--ieee80211_register_hw--*/
void ieee80211_unregister_hw ( struct ieee80211_hw * hw ) ; 
/*--ieee80211_unregister_hw--*/
void ieee80211_free_hw ( struct ieee80211_hw * hw ) ; 
/*--ieee80211_free_hw--*/
void ieee80211_tx_status_irqsafe ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--ieee80211_tx_status_irqsafe--*/
void ieee80211_tx_status ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--ieee80211_tx_status--*/
struct sta_info * sta_info_get ( struct ieee80211_sub_if_data * sdata , const u8 * addr ) ; 
/*--sta_info_get--*/
struct sta_info * sta_info_get_bss ( struct ieee80211_sub_if_data * sdata , const u8 * addr ) ; 
/*--sta_info_get_bss--*/
struct sta_info * sta_info_get_by_idx ( struct ieee80211_sub_if_data * sdata , int idx ) ; 
/*--sta_info_get_by_idx--*/
struct sta_info * sta_info_alloc ( struct ieee80211_sub_if_data * sdata , u8 * addr , gfp_t gfp ) ; 
/*--sta_info_alloc--*/
int sta_info_insert_rcu ( struct sta_info * sta ) ; 
/*--sta_info_insert_rcu--*/
int sta_info_insert ( struct sta_info * sta ) ; 
/*--sta_info_insert--*/
void sta_info_set_tim_bit ( struct sta_info * sta ) ; 
/*--sta_info_set_tim_bit--*/
void sta_info_clear_tim_bit ( struct sta_info * sta ) ; 
/*--sta_info_clear_tim_bit--*/
int sta_info_destroy_addr ( struct ieee80211_sub_if_data * sdata , const u8 * addr ) ; 
/*--sta_info_destroy_addr--*/
int sta_info_destroy_addr_bss ( struct ieee80211_sub_if_data * sdata , const u8 * addr ) ; 
/*--sta_info_destroy_addr_bss--*/
void sta_info_init ( struct ieee80211_local * local ) ; 
/*--sta_info_init--*/
int sta_info_start ( struct ieee80211_local * local ) ; 
/*--sta_info_start--*/
void sta_info_stop ( struct ieee80211_local * local ) ; 
/*--sta_info_stop--*/
int sta_info_flush ( struct ieee80211_local * local , struct ieee80211_sub_if_data * sdata ) ; 
/*--sta_info_flush--*/
void ieee80211_sta_expire ( struct ieee80211_sub_if_data * sdata , unsigned long exp_time ) ; 
/*--ieee80211_sta_expire--*/
struct ieee80211_sta * ieee80211_find_sta_by_hw ( struct ieee80211_hw * hw , const u8 * addr ) ; 
/*--ieee80211_find_sta_by_hw--*/
struct ieee80211_sta * ieee80211_find_sta ( struct ieee80211_vif * vif , const u8 * addr ) ; 
/*--ieee80211_find_sta--*/
void ieee80211_sta_ps_deliver_wakeup ( struct sta_info * sta ) ; 
/*--ieee80211_sta_ps_deliver_wakeup--*/
void ieee80211_sta_ps_deliver_poll_response ( struct sta_info * sta ) ; 
/*--ieee80211_sta_ps_deliver_poll_response--*/
void ieee80211_sta_block_awake ( struct ieee80211_hw * hw , struct ieee80211_sta * pubsta , bool block ) ; 
/*--ieee80211_sta_block_awake--*/
int ieee80211_wep_init ( struct ieee80211_local * local ) ; 
/*--ieee80211_wep_init--*/
void ieee80211_wep_free ( struct ieee80211_local * local ) ; 
/*--ieee80211_wep_free--*/
void ieee80211_wep_encrypt_data ( struct crypto_blkcipher * tfm , u8 * rc4key , size_t klen , u8 * data , size_t data_len ) ; 
/*--ieee80211_wep_encrypt_data--*/
int ieee80211_wep_encrypt ( struct ieee80211_local * local , struct sk_buff * skb , const u8 * key , int keylen , int keyidx ) ; 
/*--ieee80211_wep_encrypt--*/
int ieee80211_wep_decrypt_data ( struct crypto_blkcipher * tfm , u8 * rc4key , size_t klen , u8 * data , size_t data_len ) ; 
/*--ieee80211_wep_decrypt_data--*/
bool ieee80211_wep_is_weak_iv ( struct sk_buff * skb , struct ieee80211_key * key ) ; 
/*--ieee80211_wep_is_weak_iv--*/
ieee80211_rx_result ieee80211_crypto_wep_decrypt ( struct ieee80211_rx_data * rx ) ; 
/*--ieee80211_crypto_wep_decrypt--*/
ieee80211_tx_result ieee80211_crypto_wep_encrypt ( struct ieee80211_tx_data * tx ) ; 
/*--ieee80211_crypto_wep_encrypt--*/
ieee80211_tx_result ieee80211_tx_h_michael_mic_add ( struct ieee80211_tx_data * tx ) ; 
/*--ieee80211_tx_h_michael_mic_add--*/
ieee80211_rx_result ieee80211_rx_h_michael_mic_verify ( struct ieee80211_rx_data * rx ) ; 
/*--ieee80211_rx_h_michael_mic_verify--*/
ieee80211_tx_result ieee80211_crypto_tkip_encrypt ( struct ieee80211_tx_data * tx ) ; 
/*--ieee80211_crypto_tkip_encrypt--*/
ieee80211_rx_result ieee80211_crypto_tkip_decrypt ( struct ieee80211_rx_data * rx ) ; 
/*--ieee80211_crypto_tkip_decrypt--*/
ieee80211_tx_result ieee80211_crypto_ccmp_encrypt ( struct ieee80211_tx_data * tx ) ; 
/*--ieee80211_crypto_ccmp_encrypt--*/
ieee80211_rx_result ieee80211_crypto_ccmp_decrypt ( struct ieee80211_rx_data * rx ) ; 
/*--ieee80211_crypto_ccmp_decrypt--*/
ieee80211_tx_result ieee80211_crypto_aes_cmac_encrypt ( struct ieee80211_tx_data * tx ) ; 
/*--ieee80211_crypto_aes_cmac_encrypt--*/
ieee80211_rx_result ieee80211_crypto_aes_cmac_decrypt ( struct ieee80211_rx_data * rx ) ; 
/*--ieee80211_crypto_aes_cmac_decrypt--*/
struct ieee80211_bss * ieee80211_rx_bss_get ( struct ieee80211_local * local , u8 * bssid , int freq , u8 * ssid , u8 ssid_len ) ; 
/*--ieee80211_rx_bss_get--*/
void ieee80211_rx_bss_put ( struct ieee80211_local * local , struct ieee80211_bss * bss ) ; 
/*--ieee80211_rx_bss_put--*/
struct ieee80211_bss * ieee80211_bss_info_update ( struct ieee80211_local * local , struct ieee80211_rx_status * rx_status , struct ieee80211_mgmt * mgmt , size_t len , struct ieee802_11_elems * elems , struct ieee80211_channel * channel , bool beacon ) ; 
/*--ieee80211_bss_info_update--*/
ieee80211_rx_result ieee80211_scan_rx ( struct ieee80211_sub_if_data * sdata , struct sk_buff * skb ) ; 
/*--ieee80211_scan_rx--*/
void ieee80211_scan_completed ( struct ieee80211_hw * hw , bool aborted ) ; 
/*--ieee80211_scan_completed--*/
void ieee80211_scan_work ( struct work_struct * work ) ; 
/*--ieee80211_scan_work--*/
int ieee80211_request_scan ( struct ieee80211_sub_if_data * sdata , struct cfg80211_scan_request * req ) ; 
/*--ieee80211_request_scan--*/
int ieee80211_request_internal_scan ( struct ieee80211_sub_if_data * sdata , const u8 * ssid , u8 ssid_len , struct ieee80211_channel * chan ) ; 
/*--ieee80211_request_internal_scan--*/
void ieee80211_scan_cancel ( struct ieee80211_local * local ) ; 
/*--ieee80211_scan_cancel--*/
void ieee80211_offchannel_stop_beaconing ( struct ieee80211_local * local ) ; 
/*--ieee80211_offchannel_stop_beaconing--*/
void ieee80211_offchannel_stop_station ( struct ieee80211_local * local ) ; 
/*--ieee80211_offchannel_stop_station--*/
void ieee80211_offchannel_return ( struct ieee80211_local * local , bool enable_beaconing ) ; 
/*--ieee80211_offchannel_return--*/
void ieee80211_ht_cap_ie_to_sta_ht_cap ( struct ieee80211_supported_band * sband , struct ieee80211_ht_cap * ht_cap_ie , struct ieee80211_sta_ht_cap * ht_cap ) ; 
/*--ieee80211_ht_cap_ie_to_sta_ht_cap--*/
void ieee80211_sta_tear_down_BA_sessions ( struct sta_info * sta ) ; 
/*--ieee80211_sta_tear_down_BA_sessions--*/
void ieee80211_send_delba ( struct ieee80211_sub_if_data * sdata , const u8 * da , u16 tid , u16 initiator , u16 reason_code ) ; 
/*--ieee80211_send_delba--*/
void ieee80211_process_delba ( struct ieee80211_sub_if_data * sdata , struct sta_info * sta , struct ieee80211_mgmt * mgmt , size_t len ) ; 
/*--ieee80211_process_delba--*/
int ieee80211_send_smps_action ( struct ieee80211_sub_if_data * sdata , enum ieee80211_smps_mode smps , const u8 * da , const u8 * bssid ) ; 
/*--ieee80211_send_smps_action--*/
void ieee80211_send_bar ( struct ieee80211_sub_if_data * sdata , u8 * ra , u16 tid , u16 ssn ) ; 
/*--ieee80211_send_bar--*/
int ___ieee80211_stop_tx_ba_session ( struct sta_info * sta , u16 tid , enum ieee80211_back_parties initiator ) ; 
/*--___ieee80211_stop_tx_ba_session--*/
int ieee80211_start_tx_ba_session ( struct ieee80211_sta * pubsta , u16 tid ) ; 
/*--ieee80211_start_tx_ba_session--*/
void ieee80211_start_tx_ba_cb ( struct ieee80211_vif * vif , u8 * ra , u16 tid ) ; 
/*--ieee80211_start_tx_ba_cb--*/
void ieee80211_start_tx_ba_cb_irqsafe ( struct ieee80211_vif * vif , const u8 * ra , u16 tid ) ; 
/*--ieee80211_start_tx_ba_cb_irqsafe--*/
int __ieee80211_stop_tx_ba_session ( struct sta_info * sta , u16 tid , enum ieee80211_back_parties initiator ) ; 
/*--__ieee80211_stop_tx_ba_session--*/
int ieee80211_stop_tx_ba_session ( struct ieee80211_sta * pubsta , u16 tid , enum ieee80211_back_parties initiator ) ; 
/*--ieee80211_stop_tx_ba_session--*/
void ieee80211_stop_tx_ba_cb ( struct ieee80211_vif * vif , u8 * ra , u8 tid ) ; 
/*--ieee80211_stop_tx_ba_cb--*/
void ieee80211_stop_tx_ba_cb_irqsafe ( struct ieee80211_vif * vif , const u8 * ra , u16 tid ) ; 
/*--ieee80211_stop_tx_ba_cb_irqsafe--*/
void ieee80211_process_addba_resp ( struct ieee80211_local * local , struct sta_info * sta , struct ieee80211_mgmt * mgmt , size_t len ) ; 
/*--ieee80211_process_addba_resp--*/
void __ieee80211_stop_rx_ba_session ( struct sta_info * sta , u16 tid , u16 initiator , u16 reason ) ; 
/*--__ieee80211_stop_rx_ba_session--*/
void ieee80211_process_addba_request ( struct ieee80211_local * local , struct sta_info * sta , struct ieee80211_mgmt * mgmt , size_t len ) ; 
/*--ieee80211_process_addba_request--*/
struct sta_info * ieee80211_ibss_add_sta ( struct ieee80211_sub_if_data * sdata , u8 * bssid , u8 * addr , u32 supp_rates , gfp_t gfp ) ; 
/*--ieee80211_ibss_add_sta--*/
void ieee80211_ibss_quiesce ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_ibss_quiesce--*/
void ieee80211_ibss_restart ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_ibss_restart--*/
void ieee80211_ibss_setup_sdata ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_ibss_setup_sdata--*/
void ieee80211_ibss_notify_scan_completed ( struct ieee80211_local * local ) ; 
/*--ieee80211_ibss_notify_scan_completed--*/
ieee80211_rx_result ieee80211_ibss_rx_mgmt ( struct ieee80211_sub_if_data * sdata , struct sk_buff * skb ) ; 
/*--ieee80211_ibss_rx_mgmt--*/
int ieee80211_ibss_join ( struct ieee80211_sub_if_data * sdata , struct cfg80211_ibss_params * params ) ; 
/*--ieee80211_ibss_join--*/
int ieee80211_ibss_leave ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_ibss_leave--*/
void ieee80211_sta_reset_beacon_monitor ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_sta_reset_beacon_monitor--*/
void ieee80211_sta_reset_conn_monitor ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_sta_reset_conn_monitor--*/
void ieee80211_send_pspoll ( struct ieee80211_local * local , struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_send_pspoll--*/
void ieee80211_send_nullfunc ( struct ieee80211_local * local , struct ieee80211_sub_if_data * sdata , int powersave ) ; 
/*--ieee80211_send_nullfunc--*/
void ieee80211_chswitch_done ( struct ieee80211_vif * vif , bool success ) ; 
/*--ieee80211_chswitch_done--*/
void ieee80211_sta_process_chanswitch ( struct ieee80211_sub_if_data * sdata , struct ieee80211_channel_sw_ie * sw_elem , struct ieee80211_bss * bss , u64 timestamp ) ; 
/*--ieee80211_sta_process_chanswitch--*/
void ieee80211_recalc_ps ( struct ieee80211_local * local , s32 latency ) ; 
/*--ieee80211_recalc_ps--*/
void ieee80211_dynamic_ps_disable_work ( struct work_struct * work ) ; 
/*--ieee80211_dynamic_ps_disable_work--*/
void ieee80211_dynamic_ps_enable_work ( struct work_struct * work ) ; 
/*--ieee80211_dynamic_ps_enable_work--*/
void ieee80211_dynamic_ps_timer ( unsigned long data ) ; 
/*--ieee80211_dynamic_ps_timer--*/
void ieee80211_sta_rx_notify ( struct ieee80211_sub_if_data * sdata , struct ieee80211_hdr * hdr ) ; 
/*--ieee80211_sta_rx_notify--*/
void ieee80211_beacon_connection_loss_work ( struct work_struct * work ) ; 
/*--ieee80211_beacon_connection_loss_work--*/
void ieee80211_beacon_loss ( struct ieee80211_vif * vif ) ; 
/*--ieee80211_beacon_loss--*/
void ieee80211_connection_loss ( struct ieee80211_vif * vif ) ; 
/*--ieee80211_connection_loss--*/
ieee80211_rx_result ieee80211_sta_rx_mgmt ( struct ieee80211_sub_if_data * sdata , struct sk_buff * skb ) ; 
/*--ieee80211_sta_rx_mgmt--*/
void ieee80211_sta_quiesce ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_sta_quiesce--*/
void ieee80211_sta_restart ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_sta_restart--*/
void ieee80211_sta_setup_sdata ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_sta_setup_sdata--*/
void ieee80211_mlme_notify_scan_completed ( struct ieee80211_local * local ) ; 
/*--ieee80211_mlme_notify_scan_completed--*/
int ieee80211_max_network_latency ( struct notifier_block * nb , unsigned long data , void * dummy ) ; 
/*--ieee80211_max_network_latency--*/
int ieee80211_mgd_auth ( struct ieee80211_sub_if_data * sdata , struct cfg80211_auth_request * req ) ; 
/*--ieee80211_mgd_auth--*/
int ieee80211_mgd_assoc ( struct ieee80211_sub_if_data * sdata , struct cfg80211_assoc_request * req ) ; 
/*--ieee80211_mgd_assoc--*/
int ieee80211_mgd_deauth ( struct ieee80211_sub_if_data * sdata , struct cfg80211_deauth_request * req , void * cookie ) ; 
/*--ieee80211_mgd_deauth--*/
int ieee80211_mgd_disassoc ( struct ieee80211_sub_if_data * sdata , struct cfg80211_disassoc_request * req , void * cookie ) ; 
/*--ieee80211_mgd_disassoc--*/
int ieee80211_mgd_action ( struct ieee80211_sub_if_data * sdata , struct ieee80211_channel * chan , enum nl80211_channel_type channel_type , const u8 * buf , size_t len , u64 * cookie ) ; 
/*--ieee80211_mgd_action--*/
void ieee80211_cqm_rssi_notify ( struct ieee80211_vif * vif , enum nl80211_cqm_rssi_threshold_event rssi_event , gfp_t gfp ) ; 
/*--ieee80211_cqm_rssi_notify--*/
void free_work ( struct ieee80211_work * wk ) ; 
/*--free_work--*/
void ieee80211_add_work ( struct ieee80211_work * wk ) ; 
/*--ieee80211_add_work--*/
void ieee80211_work_init ( struct ieee80211_local * local ) ; 
/*--ieee80211_work_init--*/
void ieee80211_work_purge ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_work_purge--*/
ieee80211_rx_result ieee80211_work_rx_mgmt ( struct ieee80211_sub_if_data * sdata , struct sk_buff * skb ) ; 
/*--ieee80211_work_rx_mgmt--*/
int ieee80211_wk_remain_on_channel ( struct ieee80211_sub_if_data * sdata , struct ieee80211_channel * chan , enum nl80211_channel_type channel_type , unsigned int duration , u64 * cookie ) ; 
/*--ieee80211_wk_remain_on_channel--*/
int ieee80211_wk_cancel_remain_on_channel ( struct ieee80211_sub_if_data * sdata , u64 cookie ) ; 
/*--ieee80211_wk_cancel_remain_on_channel--*/
int ieee80211_if_change_type ( struct ieee80211_sub_if_data * sdata , enum nl80211_iftype type ) ; 
/*--ieee80211_if_change_type--*/
int ieee80211_if_add ( struct ieee80211_local * local , const char * name , struct net_device * * new_dev , enum nl80211_iftype type , struct vif_params * params ) ; 
/*--ieee80211_if_add--*/
void ieee80211_if_remove ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_if_remove--*/
void ieee80211_remove_interfaces ( struct ieee80211_local * local ) ; 
/*--ieee80211_remove_interfaces--*/
u32 __ieee80211_recalc_idle ( struct ieee80211_local * local ) ; 
/*--__ieee80211_recalc_idle--*/
void ieee80211_recalc_idle ( struct ieee80211_local * local ) ; 
/*--ieee80211_recalc_idle--*/
int ieee80211_iface_init ( void ) ; 
/*--ieee80211_iface_init--*/
void ieee80211_iface_exit ( void ) ; 
/*--ieee80211_iface_exit--*/
int ieee80211_rate_control_register ( struct rate_control_ops * ops ) ; 
/*--ieee80211_rate_control_register--*/
void ieee80211_rate_control_unregister ( struct rate_control_ops * ops ) ; 
/*--ieee80211_rate_control_unregister--*/
bool rate_control_send_low ( struct ieee80211_sta * sta , void * priv_sta , struct ieee80211_tx_rate_control * txrc ) ; 
/*--rate_control_send_low--*/
void rate_control_get_rate ( struct ieee80211_sub_if_data * sdata , struct sta_info * sta , struct ieee80211_tx_rate_control * txrc ) ; 
/*--rate_control_get_rate--*/
struct rate_control_ref * rate_control_get ( struct rate_control_ref * ref ) ; 
/*--rate_control_get--*/
void rate_control_put ( struct rate_control_ref * ref ) ; 
/*--rate_control_put--*/
int ieee80211_init_rate_ctrl_alg ( struct ieee80211_local * local , const char * name ) ; 
/*--ieee80211_init_rate_ctrl_alg--*/
void rate_control_deinitialize ( struct ieee80211_local * local ) ; 
/*--rate_control_deinitialize--*/
void michael_mic ( const u8 * key , struct ieee80211_hdr * hdr , const u8 * data , size_t data_len , u8 * mic ) ; 
/*--michael_mic--*/
u8 * ieee80211_tkip_add_iv ( u8 * pos , struct ieee80211_key * key , u16 iv16 ) ; 
/*--ieee80211_tkip_add_iv--*/
void ieee80211_get_tkip_key ( struct ieee80211_key_conf * keyconf , struct sk_buff * skb , enum ieee80211_tkip_key_type type , u8 * outkey ) ; 
/*--ieee80211_get_tkip_key--*/
void ieee80211_tkip_encrypt_data ( struct crypto_blkcipher * tfm , struct ieee80211_key * key , u8 * pos , size_t payload_len , u8 * ta ) ; 
/*--ieee80211_tkip_encrypt_data--*/
int ieee80211_tkip_decrypt_data ( struct crypto_blkcipher * tfm , struct ieee80211_key * key , u8 * payload , size_t payload_len , u8 * ta , u8 * ra , int only_iv , int queue , u32 * out_iv32 , u16 * out_iv16 ) ; 
/*--ieee80211_tkip_decrypt_data--*/
void ieee80211_aes_ccm_encrypt ( struct crypto_cipher * tfm , u8 * scratch , u8 * data , size_t data_len , u8 * cdata , u8 * mic ) ; 
/*--ieee80211_aes_ccm_encrypt--*/
int ieee80211_aes_ccm_decrypt ( struct crypto_cipher * tfm , u8 * scratch , u8 * cdata , size_t data_len , u8 * mic , u8 * data ) ; 
/*--ieee80211_aes_ccm_decrypt--*/
struct crypto_cipher * ieee80211_aes_key_setup_encrypt ( const u8 key [ ] ) ; 
/*--ieee80211_aes_key_setup_encrypt--*/
void ieee80211_aes_key_free ( struct crypto_cipher * tfm ) ; 
/*--ieee80211_aes_key_free--*/
void ieee80211_aes_cmac ( struct crypto_cipher * tfm , u8 * scratch , const u8 * aad , const u8 * data , size_t data_len , u8 * mic ) ; 
/*--ieee80211_aes_cmac--*/
struct crypto_cipher * ieee80211_aes_cmac_key_setup ( const u8 key [ ] ) ; 
/*--ieee80211_aes_cmac_key_setup--*/
void ieee80211_aes_cmac_key_free ( struct crypto_cipher * tfm ) ; 
/*--ieee80211_aes_cmac_key_free--*/
int __ieee80211_request_smps ( struct ieee80211_sub_if_data * sdata , enum ieee80211_smps_mode smps_mode ) ; 
/*--__ieee80211_request_smps--*/
void ieee80211_rx ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--ieee80211_rx--*/
void ieee80211_rx_irqsafe ( struct ieee80211_hw * hw , struct sk_buff * skb ) ; 
/*--ieee80211_rx_irqsafe--*/
void ieee80211_process_measurement_req ( struct ieee80211_sub_if_data * sdata , struct ieee80211_mgmt * mgmt , size_t len ) ; 
/*--ieee80211_process_measurement_req--*/
netdev_tx_t ieee80211_monitor_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--ieee80211_monitor_start_xmit--*/
netdev_tx_t ieee80211_subif_start_xmit ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--ieee80211_subif_start_xmit--*/
void ieee80211_clear_tx_pending ( struct ieee80211_local * local ) ; 
/*--ieee80211_clear_tx_pending--*/
void ieee80211_tx_pending ( unsigned long data ) ; 
/*--ieee80211_tx_pending--*/
struct sk_buff * ieee80211_beacon_get_tim ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , u16 * tim_offset , u16 * tim_length ) ; 
/*--ieee80211_beacon_get_tim--*/
struct sk_buff * ieee80211_pspoll_get ( struct ieee80211_hw * hw , struct ieee80211_vif * vif ) ; 
/*--ieee80211_pspoll_get--*/
struct sk_buff * ieee80211_nullfunc_get ( struct ieee80211_hw * hw , struct ieee80211_vif * vif ) ; 
/*--ieee80211_nullfunc_get--*/
struct sk_buff * ieee80211_probereq_get ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , const u8 * ssid , size_t ssid_len , const u8 * ie , size_t ie_len ) ; 
/*--ieee80211_probereq_get--*/
void ieee80211_rts_get ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , const void * frame , size_t frame_len , const struct ieee80211_tx_info * frame_txctl , struct ieee80211_rts * rts ) ; 
/*--ieee80211_rts_get--*/
void ieee80211_ctstoself_get ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , const void * frame , size_t frame_len , const struct ieee80211_tx_info * frame_txctl , struct ieee80211_cts * cts ) ; 
/*--ieee80211_ctstoself_get--*/
struct sk_buff * ieee80211_get_buffered_bc ( struct ieee80211_hw * hw , struct ieee80211_vif * vif ) ; 
/*--ieee80211_get_buffered_bc--*/
void ieee80211_tx_skb ( struct ieee80211_sub_if_data * sdata , struct sk_buff * skb ) ; 
/*--ieee80211_tx_skb--*/
void ieee80211_set_default_key ( struct ieee80211_sub_if_data * sdata , int idx ) ; 
/*--ieee80211_set_default_key--*/
void ieee80211_set_default_mgmt_key ( struct ieee80211_sub_if_data * sdata , int idx ) ; 
/*--ieee80211_set_default_mgmt_key--*/
struct ieee80211_key * ieee80211_key_alloc ( enum ieee80211_key_alg alg , int idx , size_t key_len , const u8 * key_data , size_t seq_len , const u8 * seq ) ; 
/*--ieee80211_key_alloc--*/
void ieee80211_key_link ( struct ieee80211_key * key , struct ieee80211_sub_if_data * sdata , struct sta_info * sta ) ; 
/*--ieee80211_key_link--*/
void ieee80211_key_free ( struct ieee80211_key * key ) ; 
/*--ieee80211_key_free--*/
void ieee80211_enable_keys ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_enable_keys--*/
void ieee80211_disable_keys ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_disable_keys--*/
void ieee80211_key_todo ( void ) ; 
/*--ieee80211_key_todo--*/
void ieee80211_free_keys ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_free_keys--*/
struct ieee80211_hw * wiphy_to_ieee80211_hw ( struct wiphy * wiphy ) ; 
/*--wiphy_to_ieee80211_hw--*/
u8 * ieee80211_get_bssid ( struct ieee80211_hdr * hdr , size_t len , enum nl80211_iftype type ) ; 
/*--ieee80211_get_bssid--*/
void ieee80211_tx_set_protected ( struct ieee80211_tx_data * tx ) ; 
/*--ieee80211_tx_set_protected--*/
int ieee80211_frame_duration ( struct ieee80211_local * local , size_t len , int rate , int erp , int short_preamble ) ; 
/*--ieee80211_frame_duration--*/
__le16 ieee80211_generic_frame_duration ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , size_t frame_len , struct ieee80211_rate * rate ) ; 
/*--ieee80211_generic_frame_duration--*/
__le16 ieee80211_rts_duration ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , size_t frame_len , const struct ieee80211_tx_info * frame_txctl ) ; 
/*--ieee80211_rts_duration--*/
__le16 ieee80211_ctstoself_duration ( struct ieee80211_hw * hw , struct ieee80211_vif * vif , size_t frame_len , const struct ieee80211_tx_info * frame_txctl ) ; 
/*--ieee80211_ctstoself_duration--*/
void ieee80211_wake_queue_by_reason ( struct ieee80211_hw * hw , int queue , enum queue_stop_reason reason ) ; 
/*--ieee80211_wake_queue_by_reason--*/
void ieee80211_wake_queue ( struct ieee80211_hw * hw , int queue ) ; 
/*--ieee80211_wake_queue--*/
void ieee80211_stop_queue_by_reason ( struct ieee80211_hw * hw , int queue , enum queue_stop_reason reason ) ; 
/*--ieee80211_stop_queue_by_reason--*/
void ieee80211_stop_queue ( struct ieee80211_hw * hw , int queue ) ; 
/*--ieee80211_stop_queue--*/
void ieee80211_add_pending_skb ( struct ieee80211_local * local , struct sk_buff * skb ) ; 
/*--ieee80211_add_pending_skb--*/
int ieee80211_add_pending_skbs ( struct ieee80211_local * local , struct sk_buff_head * skbs ) ; 
/*--ieee80211_add_pending_skbs--*/
void ieee80211_stop_queues_by_reason ( struct ieee80211_hw * hw , enum queue_stop_reason reason ) ; 
/*--ieee80211_stop_queues_by_reason--*/
void ieee80211_stop_queues ( struct ieee80211_hw * hw ) ; 
/*--ieee80211_stop_queues--*/
int ieee80211_queue_stopped ( struct ieee80211_hw * hw , int queue ) ; 
/*--ieee80211_queue_stopped--*/
void ieee80211_wake_queues_by_reason ( struct ieee80211_hw * hw , enum queue_stop_reason reason ) ; 
/*--ieee80211_wake_queues_by_reason--*/
void ieee80211_wake_queues ( struct ieee80211_hw * hw ) ; 
/*--ieee80211_wake_queues--*/
void ieee80211_iterate_active_interfaces ( struct ieee80211_hw * hw , void ( * iterator ) ( void * data , u8 * mac , struct ieee80211_vif * vif ) , void * data ) ; 
/*--ieee80211_iterate_active_interfaces--*/
void ieee80211_iterate_active_interfaces_atomic ( struct ieee80211_hw * hw , void ( * iterator ) ( void * data , u8 * mac , struct ieee80211_vif * vif ) , void * data ) ; 
/*--ieee80211_iterate_active_interfaces_atomic--*/
void ieee80211_queue_work ( struct ieee80211_hw * hw , struct work_struct * work ) ; 
/*--ieee80211_queue_work--*/
void ieee80211_queue_delayed_work ( struct ieee80211_hw * hw , struct delayed_work * dwork , unsigned long delay ) ; 
/*--ieee80211_queue_delayed_work--*/
void ieee802_11_parse_elems ( u8 * start , size_t len , struct ieee802_11_elems * elems ) ; 
/*--ieee802_11_parse_elems--*/
u32 ieee802_11_parse_elems_crc ( u8 * start , size_t len , struct ieee802_11_elems * elems , u64 filter , u32 crc ) ; 
/*--ieee802_11_parse_elems_crc--*/
void ieee80211_set_wmm_default ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_set_wmm_default--*/
void ieee80211_sta_def_wmm_params ( struct ieee80211_sub_if_data * sdata , const size_t supp_rates_len , const u8 * supp_rates ) ; 
/*--ieee80211_sta_def_wmm_params--*/
u32 ieee80211_mandatory_rates ( struct ieee80211_local * local , enum ieee80211_band band ) ; 
/*--ieee80211_mandatory_rates--*/
void ieee80211_send_auth ( struct ieee80211_sub_if_data * sdata , u16 transaction , u16 auth_alg , u8 * extra , size_t extra_len , const u8 * bssid , const u8 * key , u8 key_len , u8 key_idx ) ; 
/*--ieee80211_send_auth--*/
int ieee80211_build_preq_ies ( struct ieee80211_local * local , u8 * buffer , const u8 * ie , size_t ie_len , enum ieee80211_band band ) ; 
/*--ieee80211_build_preq_ies--*/
void ieee80211_send_probe_req ( struct ieee80211_sub_if_data * sdata , u8 * dst , const u8 * ssid , size_t ssid_len , const u8 * ie , size_t ie_len ) ; 
/*--ieee80211_send_probe_req--*/
u32 ieee80211_sta_get_rates ( struct ieee80211_local * local , struct ieee802_11_elems * elems , enum ieee80211_band band ) ; 
/*--ieee80211_sta_get_rates--*/
void ieee80211_stop_device ( struct ieee80211_local * local ) ; 
/*--ieee80211_stop_device--*/
int ieee80211_reconfig ( struct ieee80211_local * local ) ; 
/*--ieee80211_reconfig--*/
void ieee80211_recalc_smps ( struct ieee80211_local * local , struct ieee80211_sub_if_data * forsdata ) ; 
/*--ieee80211_recalc_smps--*/
size_t ieee80211_ie_split ( const u8 * ies , size_t ielen , const u8 * ids , int n_ids , size_t offset ) ; 
/*--ieee80211_ie_split--*/
size_t ieee80211_ie_split_vendor ( const u8 * ies , size_t ielen , size_t offset ) ; 
/*--ieee80211_ie_split_vendor--*/
u16 ieee80211_select_queue ( struct ieee80211_sub_if_data * sdata , struct sk_buff * skb ) ; 
/*--ieee80211_select_queue--*/
u16 ieee80211_downgrade_queue ( struct ieee80211_local * local , struct sk_buff * skb ) ; 
/*--ieee80211_downgrade_queue--*/
void ieee80211_set_qos_hdr ( struct ieee80211_local * local , struct sk_buff * skb ) ; 
/*--ieee80211_set_qos_hdr--*/
void mac80211_ev_michael_mic_failure ( struct ieee80211_sub_if_data * sdata , int keyidx , struct ieee80211_hdr * hdr , const u8 * tsc , gfp_t gfp ) ; 
/*--mac80211_ev_michael_mic_failure--*/
enum ieee80211_chan_mode ieee80211_get_channel_mode ( struct ieee80211_local * local , struct ieee80211_sub_if_data * ignore ) ; 
/*--ieee80211_get_channel_mode--*/
bool ieee80211_set_channel_type ( struct ieee80211_local * local , struct ieee80211_sub_if_data * sdata , enum nl80211_channel_type chantype ) ; 
/*--ieee80211_set_channel_type--*/
void ieee80211_led_rx ( struct ieee80211_local * local ) ; 
/*--ieee80211_led_rx--*/
void ieee80211_led_tx ( struct ieee80211_local * local , int q ) ; 
/*--ieee80211_led_tx--*/
void ieee80211_led_assoc ( struct ieee80211_local * local , bool associated ) ; 
/*--ieee80211_led_assoc--*/
void ieee80211_led_radio ( struct ieee80211_local * local , bool enabled ) ; 
/*--ieee80211_led_radio--*/
void ieee80211_led_init ( struct ieee80211_local * local ) ; 
/*--ieee80211_led_init--*/
void ieee80211_led_exit ( struct ieee80211_local * local ) ; 
/*--ieee80211_led_exit--*/
char * __ieee80211_get_radio_led_name ( struct ieee80211_hw * hw ) ; 
/*--__ieee80211_get_radio_led_name--*/
char * __ieee80211_get_assoc_led_name ( struct ieee80211_hw * hw ) ; 
/*--__ieee80211_get_assoc_led_name--*/
char * __ieee80211_get_tx_led_name ( struct ieee80211_hw * hw ) ; 
/*--__ieee80211_get_tx_led_name--*/
char * __ieee80211_get_rx_led_name ( struct ieee80211_hw * hw ) ; 
/*--__ieee80211_get_rx_led_name--*/
int mac80211_open_file_generic ( struct inode * inode , struct file * file ) ; 
/*--mac80211_open_file_generic--*/
void debugfs_hw_add ( struct ieee80211_local * local ) ; 
/*--debugfs_hw_add--*/
void ieee80211_sta_debugfs_add ( struct sta_info * sta ) ; 
/*--ieee80211_sta_debugfs_add--*/
void ieee80211_sta_debugfs_remove ( struct sta_info * sta ) ; 
/*--ieee80211_sta_debugfs_remove--*/
void ieee80211_debugfs_add_netdev ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_debugfs_add_netdev--*/
void ieee80211_debugfs_remove_netdev ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_debugfs_remove_netdev--*/
void ieee80211_debugfs_rename_netdev ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_debugfs_rename_netdev--*/
void ieee80211_debugfs_key_add ( struct ieee80211_key * key ) ; 
/*--ieee80211_debugfs_key_add--*/
void ieee80211_debugfs_key_remove ( struct ieee80211_key * key ) ; 
/*--ieee80211_debugfs_key_remove--*/
void ieee80211_debugfs_key_add_default ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_debugfs_key_add_default--*/
void ieee80211_debugfs_key_remove_default ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_debugfs_key_remove_default--*/
void ieee80211_debugfs_key_add_mgmt_default ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_debugfs_key_add_mgmt_default--*/
void ieee80211_debugfs_key_remove_mgmt_default ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_debugfs_key_remove_mgmt_default--*/
void ieee80211_debugfs_key_sta_del ( struct ieee80211_key * key , struct sta_info * sta ) ; 
/*--ieee80211_debugfs_key_sta_del--*/
void ieee80211s_init ( void ) ; 
/*--ieee80211s_init--*/
void ieee80211s_stop ( void ) ; 
/*--ieee80211s_stop--*/
bool mesh_matches_local ( struct ieee802_11_elems * ie , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_matches_local--*/
bool mesh_peer_accepts_plinks ( struct ieee802_11_elems * ie ) ; 
/*--mesh_peer_accepts_plinks--*/
void mesh_accept_plinks_update ( struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_accept_plinks_update--*/
void mesh_ids_set_default ( struct ieee80211_if_mesh * sta ) ; 
/*--mesh_ids_set_default--*/
int mesh_rmc_init ( struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_rmc_init--*/
void mesh_rmc_free ( struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_rmc_free--*/
int mesh_rmc_check ( u8 * sa , struct ieee80211s_hdr * mesh_hdr , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_rmc_check--*/
void mesh_mgmt_ies_add ( struct sk_buff * skb , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_mgmt_ies_add--*/
u32 mesh_table_hash ( u8 * addr , struct ieee80211_sub_if_data * sdata , struct mesh_table * tbl ) ; 
/*--mesh_table_hash--*/
struct mesh_table * mesh_table_alloc ( int size_order ) ; 
/*--mesh_table_alloc--*/
void ieee80211_mesh_root_setup ( struct ieee80211_if_mesh * ifmsh ) ; 
/*--ieee80211_mesh_root_setup--*/
int ieee80211_fill_mesh_addresses ( struct ieee80211_hdr * hdr , __le16 * fc , const u8 * meshda , const u8 * meshsa ) ; 
/*--ieee80211_fill_mesh_addresses--*/
int ieee80211_new_mesh_header ( struct ieee80211s_hdr * meshhdr , struct ieee80211_sub_if_data * sdata , char * addr4 , char * addr5 , char * addr6 ) ; 
/*--ieee80211_new_mesh_header--*/
void ieee80211_mesh_quiesce ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_mesh_quiesce--*/
void ieee80211_mesh_restart ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_mesh_restart--*/
void ieee80211_start_mesh ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_start_mesh--*/
void ieee80211_stop_mesh ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_stop_mesh--*/
void ieee80211_mesh_notify_scan_completed ( struct ieee80211_local * local ) ; 
/*--ieee80211_mesh_notify_scan_completed--*/
void ieee80211_mesh_init_sdata ( struct ieee80211_sub_if_data * sdata ) ; 
/*--ieee80211_mesh_init_sdata--*/
ieee80211_rx_result ieee80211_mesh_rx_mgmt ( struct ieee80211_sub_if_data * sdata , struct sk_buff * skb ) ; 
/*--ieee80211_mesh_rx_mgmt--*/
void mesh_table_free ( struct mesh_table * tbl , bool free_leafs ) ; 
/*--mesh_table_free--*/
void mesh_path_assign_nexthop ( struct mesh_path * mpath , struct sta_info * sta ) ; 
/*--mesh_path_assign_nexthop--*/
struct mesh_path * mesh_path_lookup ( u8 * dst , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_lookup--*/
struct mesh_path * mpp_path_lookup ( u8 * dst , struct ieee80211_sub_if_data * sdata ) ; 
/*--mpp_path_lookup--*/
struct mesh_path * mesh_path_lookup_by_idx ( int idx , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_lookup_by_idx--*/
int mesh_path_add ( u8 * dst , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_add--*/
void mesh_mpath_table_grow ( void ) ; 
/*--mesh_mpath_table_grow--*/
void mesh_mpp_table_grow ( void ) ; 
/*--mesh_mpp_table_grow--*/
int mpp_path_add ( u8 * dst , u8 * mpp , struct ieee80211_sub_if_data * sdata ) ; 
/*--mpp_path_add--*/
void mesh_plink_broken ( struct sta_info * sta ) ; 
/*--mesh_plink_broken--*/
void mesh_path_flush_by_nexthop ( struct sta_info * sta ) ; 
/*--mesh_path_flush_by_nexthop--*/
void mesh_path_flush ( struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_flush--*/
int mesh_path_del ( u8 * addr , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_del--*/
void mesh_path_tx_pending ( struct mesh_path * mpath ) ; 
/*--mesh_path_tx_pending--*/
void mesh_path_discard_frame ( struct sk_buff * skb , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_discard_frame--*/
void mesh_path_flush_pending ( struct mesh_path * mpath ) ; 
/*--mesh_path_flush_pending--*/
void mesh_path_fix_nexthop ( struct mesh_path * mpath , struct sta_info * next_hop ) ; 
/*--mesh_path_fix_nexthop--*/
int mesh_pathtbl_init ( void ) ; 
/*--mesh_pathtbl_init--*/
void mesh_path_expire ( struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_expire--*/
void mesh_pathtbl_unregister ( void ) ; 
/*--mesh_pathtbl_unregister--*/
void mesh_plink_deactivate ( struct sta_info * sta ) ; 
/*--mesh_plink_deactivate--*/
void mesh_neighbour_update ( u8 * hw_addr , u32 rates , struct ieee80211_sub_if_data * sdata , bool peer_accepting_plinks ) ; 
/*--mesh_neighbour_update--*/
void mesh_plink_quiesce ( struct sta_info * sta ) ; 
/*--mesh_plink_quiesce--*/
void mesh_plink_restart ( struct sta_info * sta ) ; 
/*--mesh_plink_restart--*/
int mesh_plink_open ( struct sta_info * sta ) ; 
/*--mesh_plink_open--*/
void mesh_plink_block ( struct sta_info * sta ) ; 
/*--mesh_plink_block--*/
void mesh_rx_plink_frame ( struct ieee80211_sub_if_data * sdata , struct ieee80211_mgmt * mgmt , size_t len , struct ieee80211_rx_status * rx_status ) ; 
/*--mesh_rx_plink_frame--*/
int mesh_path_error_tx ( u8 ttl , u8 * target , __le32 target_sn , __le16 target_rcode , const u8 * ra , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_error_tx--*/
void ieee80211s_update_metric ( struct ieee80211_local * local , struct sta_info * stainfo , struct sk_buff * skb ) ; 
/*--ieee80211s_update_metric--*/
void mesh_rx_path_sel_frame ( struct ieee80211_sub_if_data * sdata , struct ieee80211_mgmt * mgmt , size_t len ) ; 
/*--mesh_rx_path_sel_frame--*/
void mesh_path_start_discovery ( struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_start_discovery--*/
int mesh_nexthop_lookup ( struct sk_buff * skb , struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_nexthop_lookup--*/
void mesh_path_timer ( unsigned long data ) ; 
/*--mesh_path_timer--*/
void mesh_path_tx_root_frame ( struct ieee80211_sub_if_data * sdata ) ; 
/*--mesh_path_tx_root_frame--*/
int __ieee80211_suspend ( struct ieee80211_hw * hw ) ; 
/*--__ieee80211_suspend--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rc80211_minstrel_init ( void ) ; 
/*--rc80211_minstrel_init--*/
void rc80211_minstrel_exit ( void ) ; 
/*--rc80211_minstrel_exit--*/
int minstrel_stats_open ( struct inode * inode , struct file * file ) ; 
/*--minstrel_stats_open--*/
ssize_t minstrel_stats_read ( struct file * file , char * buf , size_t len , loff_t * ppos ) ; 
/*--minstrel_stats_read--*/
int minstrel_stats_release ( struct inode * inode , struct file * file ) ; 
/*--minstrel_stats_release--*/
void minstrel_add_sta_debugfs ( void * priv , void * priv_sta , struct dentry * dir ) ; 
/*--minstrel_add_sta_debugfs--*/
void minstrel_remove_sta_debugfs ( void * priv , void * priv_sta ) ; 
/*--minstrel_remove_sta_debugfs--*/
void nfnl_lock ( void ) ; 
/*--nfnl_lock--*/
void nfnl_unlock ( void ) ; 
/*--nfnl_unlock--*/
int nfnetlink_subsys_register ( const struct nfnetlink_subsystem * n ) ; 
/*--nfnetlink_subsys_register--*/
int nfnetlink_subsys_unregister ( const struct nfnetlink_subsystem * n ) ; 
/*--nfnetlink_subsys_unregister--*/
int nfnetlink_has_listeners ( struct net * net , unsigned int group ) ; 
/*--nfnetlink_has_listeners--*/
int nfnetlink_send ( struct sk_buff * skb , struct net * net , u32 pid , unsigned group , int echo , gfp_t flags ) ; 
/*--nfnetlink_send--*/
int nfnetlink_set_err ( struct net * net , u32 pid , u32 group , int error ) ; 
/*--nfnetlink_set_err--*/
int nfnetlink_unicast ( struct sk_buff * skb , struct net * net , u_int32_t pid , int flags ) ; 
/*--nfnetlink_unicast--*/
void nfulnl_log_packet ( u_int8_t pf , unsigned int hooknum , const struct sk_buff * skb , const struct net_device * in , const struct net_device * out , const struct nf_loginfo * li_user , const char * prefix ) ; 
/*--nfulnl_log_packet--*/
bool nf_ct_get_tuple ( const struct sk_buff * skb , unsigned int nhoff , unsigned int dataoff , u_int16_t l3num , u_int8_t protonum , struct nf_conntrack_tuple * tuple , const struct nf_conntrack_l3proto * l3proto , const struct nf_conntrack_l4proto * l4proto ) ; 
/*--nf_ct_get_tuple--*/
bool nf_ct_get_tuplepr ( const struct sk_buff * skb , unsigned int nhoff , u_int16_t l3num , struct nf_conntrack_tuple * tuple ) ; 
/*--nf_ct_get_tuplepr--*/
bool nf_ct_invert_tuple ( struct nf_conntrack_tuple * inverse , const struct nf_conntrack_tuple * orig , const struct nf_conntrack_l3proto * l3proto , const struct nf_conntrack_l4proto * l4proto ) ; 
/*--nf_ct_invert_tuple--*/
void nf_ct_delete_from_lists ( struct nf_conn * ct ) ; 
/*--nf_ct_delete_from_lists--*/
void nf_ct_insert_dying_list ( struct nf_conn * ct ) ; 
/*--nf_ct_insert_dying_list--*/
struct nf_conntrack_tuple_hash * __nf_conntrack_find ( struct net * net , u16 zone , const struct nf_conntrack_tuple * tuple ) ; 
/*--__nf_conntrack_find--*/
struct nf_conntrack_tuple_hash * nf_conntrack_find_get ( struct net * net , u16 zone , const struct nf_conntrack_tuple * tuple ) ; 
/*--nf_conntrack_find_get--*/
void nf_conntrack_hash_insert ( struct nf_conn * ct ) ; 
/*--nf_conntrack_hash_insert--*/
int __nf_conntrack_confirm ( struct sk_buff * skb ) ; 
/*--__nf_conntrack_confirm--*/
int nf_conntrack_tuple_taken ( const struct nf_conntrack_tuple * tuple , const struct nf_conn * ignored_conntrack ) ; 
/*--nf_conntrack_tuple_taken--*/
struct nf_conn * nf_conntrack_alloc ( struct net * net , u16 zone , const struct nf_conntrack_tuple * orig , const struct nf_conntrack_tuple * repl , gfp_t gfp ) ; 
/*--nf_conntrack_alloc--*/
void nf_conntrack_free ( struct nf_conn * ct ) ; 
/*--nf_conntrack_free--*/
unsigned int nf_conntrack_in ( struct net * net , u_int8_t pf , unsigned int hooknum , struct sk_buff * skb ) ; 
/*--nf_conntrack_in--*/
bool nf_ct_invert_tuplepr ( struct nf_conntrack_tuple * inverse , const struct nf_conntrack_tuple * orig ) ; 
/*--nf_ct_invert_tuplepr--*/
void nf_conntrack_alter_reply ( struct nf_conn * ct , const struct nf_conntrack_tuple * newreply ) ; 
/*--nf_conntrack_alter_reply--*/
void __nf_ct_refresh_acct ( struct nf_conn * ct , enum ip_conntrack_info ctinfo , const struct sk_buff * skb , unsigned long extra_jiffies , int do_acct ) ; 
/*--__nf_ct_refresh_acct--*/
bool __nf_ct_kill_acct ( struct nf_conn * ct , enum ip_conntrack_info ctinfo , const struct sk_buff * skb , int do_acct ) ; 
/*--__nf_ct_kill_acct--*/
int nf_ct_port_tuple_to_nlattr ( struct sk_buff * skb , const struct nf_conntrack_tuple * tuple ) ; 
/*--nf_ct_port_tuple_to_nlattr--*/
int nf_ct_port_nlattr_to_tuple ( struct nlattr * tb [ ] , struct nf_conntrack_tuple * t ) ; 
/*--nf_ct_port_nlattr_to_tuple--*/
int nf_ct_port_nlattr_tuple_size ( void ) ; 
/*--nf_ct_port_nlattr_tuple_size--*/
void nf_ct_iterate_cleanup ( struct net * net , int ( * iter ) ( struct nf_conn * i , void * data ) , void * data ) ; 
/*--nf_ct_iterate_cleanup--*/
void nf_ct_free_hashtable ( void * hash , int vmalloced , unsigned int size ) ; 
/*--nf_ct_free_hashtable--*/
void nf_conntrack_flush_report ( struct net * net , u32 pid , int report ) ; 
/*--nf_conntrack_flush_report--*/
void nf_conntrack_cleanup ( struct net * net ) ; 
/*--nf_conntrack_cleanup--*/
void * nf_ct_alloc_hashtable ( unsigned int * sizep , int * vmalloced , int nulls ) ; 
/*--nf_ct_alloc_hashtable--*/
int nf_conntrack_set_hashsize ( const char * val , struct kernel_param * kp ) ; 
/*--nf_conntrack_set_hashsize--*/
int nf_conntrack_init ( struct net * net ) ; 
/*--nf_conntrack_init--*/
int print_tuple ( struct seq_file * s , const struct nf_conntrack_tuple * tuple , const struct nf_conntrack_l3proto * l3proto , const struct nf_conntrack_l4proto * l4proto ) ; 
/*--print_tuple--*/
; void need_conntrack ( void ) ; 
/*--need_conntrack--*/
void nf_ct_unlink_expect ( struct nf_conntrack_expect * exp ) ; 
/*--nf_ct_unlink_expect--*/
struct nf_conntrack_expect * __nf_ct_expect_find ( struct net * net , u16 zone , const struct nf_conntrack_tuple * tuple ) ; 
/*--__nf_ct_expect_find--*/
struct nf_conntrack_expect * nf_ct_expect_find_get ( struct net * net , u16 zone , const struct nf_conntrack_tuple * tuple ) ; 
/*--nf_ct_expect_find_get--*/
struct nf_conntrack_expect * nf_ct_find_expectation ( struct net * net , u16 zone , const struct nf_conntrack_tuple * tuple ) ; 
/*--nf_ct_find_expectation--*/
void nf_ct_remove_expectations ( struct nf_conn * ct ) ; 
/*--nf_ct_remove_expectations--*/
void nf_ct_unexpect_related ( struct nf_conntrack_expect * exp ) ; 
/*--nf_ct_unexpect_related--*/
struct nf_conntrack_expect * nf_ct_expect_alloc ( struct nf_conn * me ) ; 
/*--nf_ct_expect_alloc--*/
void nf_ct_expect_init ( struct nf_conntrack_expect * exp , unsigned int class , u_int8_t family , const union nf_inet_addr * saddr , const union nf_inet_addr * daddr , u_int8_t proto , const __be16 * src , const __be16 * dst ) ; 
/*--nf_ct_expect_init--*/
void nf_ct_expect_put ( struct nf_conntrack_expect * exp ) ; 
/*--nf_ct_expect_put--*/
int nf_ct_expect_related_report ( struct nf_conntrack_expect * expect , u32 pid , int report ) ; 
/*--nf_ct_expect_related_report--*/
int nf_conntrack_expect_init ( struct net * net ) ; 
/*--nf_conntrack_expect_init--*/
void nf_conntrack_expect_fini ( struct net * net ) ; 
/*--nf_conntrack_expect_fini--*/
struct nf_conntrack_helper * __nf_conntrack_helper_find ( const char * name , u16 l3num , u8 protonum ) ; 
/*--__nf_conntrack_helper_find--*/
struct nf_conntrack_helper * nf_conntrack_helper_try_module_get ( const char * name , u16 l3num , u8 protonum ) ; 
/*--nf_conntrack_helper_try_module_get--*/
struct nf_conn_help * nf_ct_helper_ext_add ( struct nf_conn * ct , gfp_t gfp ) ; 
/*--nf_ct_helper_ext_add--*/
int __nf_ct_try_assign_helper ( struct nf_conn * ct , struct nf_conn * tmpl , gfp_t flags ) ; 
/*--__nf_ct_try_assign_helper--*/
void nf_ct_helper_destroy ( struct nf_conn * ct ) ; 
/*--nf_ct_helper_destroy--*/
int nf_conntrack_helper_register ( struct nf_conntrack_helper * me ) ; 
/*--nf_conntrack_helper_register--*/
void nf_conntrack_helper_unregister ( struct nf_conntrack_helper * me ) ; 
/*--nf_conntrack_helper_unregister--*/
int nf_conntrack_helper_init ( void ) ; 
/*--nf_conntrack_helper_init--*/
void nf_conntrack_helper_fini ( void ) ; 
/*--nf_conntrack_helper_fini--*/
struct nf_conntrack_l4proto * __nf_ct_l4proto_find ( u_int16_t l3proto , u_int8_t l4proto ) ; 
/*--__nf_ct_l4proto_find--*/
struct nf_conntrack_l3proto * nf_ct_l3proto_find_get ( u_int16_t l3proto ) ; 
/*--nf_ct_l3proto_find_get--*/
void nf_ct_l3proto_put ( struct nf_conntrack_l3proto * p ) ; 
/*--nf_ct_l3proto_put--*/
int nf_ct_l3proto_try_module_get ( unsigned short l3proto ) ; 
/*--nf_ct_l3proto_try_module_get--*/
void nf_ct_l3proto_module_put ( unsigned short l3proto ) ; 
/*--nf_ct_l3proto_module_put--*/
int nf_conntrack_l3proto_register ( struct nf_conntrack_l3proto * proto ) ; 
/*--nf_conntrack_l3proto_register--*/
void nf_conntrack_l3proto_unregister ( struct nf_conntrack_l3proto * proto ) ; 
/*--nf_conntrack_l3proto_unregister--*/
int nf_conntrack_l4proto_register ( struct nf_conntrack_l4proto * l4proto ) ; 
/*--nf_conntrack_l4proto_register--*/
void nf_conntrack_l4proto_unregister ( struct nf_conntrack_l4proto * l4proto ) ; 
/*--nf_conntrack_l4proto_unregister--*/
int nf_conntrack_proto_init ( void ) ; 
/*--nf_conntrack_proto_init--*/
void nf_conntrack_proto_fini ( void ) ; 
/*--nf_conntrack_proto_fini--*/
void __nf_ct_ext_destroy ( struct nf_conn * ct ) ; 
/*--__nf_ct_ext_destroy--*/
void * __nf_ct_ext_add ( struct nf_conn * ct , enum nf_ct_ext_id id , gfp_t gfp ) ; 
/*--__nf_ct_ext_add--*/
int nf_ct_extend_register ( struct nf_ct_ext_type * type ) ; 
/*--nf_ct_extend_register--*/
void nf_ct_extend_unregister ( struct nf_ct_ext_type * type ) ; 
/*--nf_ct_extend_unregister--*/
unsigned int seq_print_acct ( struct seq_file * s , const struct nf_conn * ct , int dir ) ; 
/*--seq_print_acct--*/
int nf_conntrack_acct_init ( struct net * net ) ; 
/*--nf_conntrack_acct_init--*/
void nf_conntrack_acct_fini ( struct net * net ) ; 
/*--nf_conntrack_acct_fini--*/
void nf_ct_deliver_cached_events ( struct nf_conn * ct ) ; 
/*--nf_ct_deliver_cached_events--*/
int nf_conntrack_register_notifier ( struct nf_ct_event_notifier * new ) ; 
/*--nf_conntrack_register_notifier--*/
void nf_conntrack_unregister_notifier ( struct nf_ct_event_notifier * new ) ; 
/*--nf_conntrack_unregister_notifier--*/
int nf_ct_expect_register_notifier ( struct nf_exp_event_notifier * new ) ; 
/*--nf_ct_expect_register_notifier--*/
void nf_ct_expect_unregister_notifier ( struct nf_exp_event_notifier * new ) ; 
/*--nf_ct_expect_unregister_notifier--*/
int nf_conntrack_ecache_init ( struct net * net ) ; 
/*--nf_conntrack_ecache_init--*/
void nf_conntrack_ecache_fini ( struct net * net ) ; 
/*--nf_conntrack_ecache_fini--*/
int get_h225_addr ( struct nf_conn * ct , unsigned char * data , TransportAddress * taddr , union nf_inet_addr * addr , __be16 * port ) ; 
/*--get_h225_addr--*/
int DecodeRasMessage ( unsigned char * buf , size_t sz , RasMessage * ras ) ; 
/*--DecodeRasMessage--*/
int DecodeMultimediaSystemControlMessage ( unsigned char * buf , size_t sz , MultimediaSystemControlMessage * mscm ) ; 
/*--DecodeMultimediaSystemControlMessage--*/
int DecodeQ931 ( unsigned char * buf , size_t sz , Q931 * q931 ) ; 
/*--DecodeQ931--*/
void nf_ct_gre_keymap_flush ( struct net * net ) ; 
/*--nf_ct_gre_keymap_flush--*/
int nf_ct_gre_keymap_add ( struct nf_conn * ct , enum ip_conntrack_dir dir , struct nf_conntrack_tuple * t ) ; 
/*--nf_ct_gre_keymap_add--*/
void nf_ct_gre_keymap_destroy ( struct nf_conn * ct ) ; 
/*--nf_ct_gre_keymap_destroy--*/
int ct_sip_parse_request ( const struct nf_conn * ct , const char * dptr , unsigned int datalen , unsigned int * matchoff , unsigned int * matchlen , union nf_inet_addr * addr , __be16 * port ) ; 
/*--ct_sip_parse_request--*/
int ct_sip_get_header ( const struct nf_conn * ct , const char * dptr , unsigned int dataoff , unsigned int datalen , enum sip_header_types type , unsigned int * matchoff , unsigned int * matchlen ) ; 
/*--ct_sip_get_header--*/
int ct_sip_parse_header_uri ( const struct nf_conn * ct , const char * dptr , unsigned int * dataoff , unsigned int datalen , enum sip_header_types type , int * in_header , unsigned int * matchoff , unsigned int * matchlen , union nf_inet_addr * addr , __be16 * port ) ; 
/*--ct_sip_parse_header_uri--*/
int ct_sip_parse_address_param ( const struct nf_conn * ct , const char * dptr , unsigned int dataoff , unsigned int datalen , const char * name , unsigned int * matchoff , unsigned int * matchlen , union nf_inet_addr * addr ) ; 
/*--ct_sip_parse_address_param--*/
int ct_sip_parse_numerical_param ( const struct nf_conn * ct , const char * dptr , unsigned int dataoff , unsigned int datalen , const char * name , unsigned int * matchoff , unsigned int * matchlen , unsigned int * val ) ; 
/*--ct_sip_parse_numerical_param--*/
int ct_sip_get_sdp_header ( const struct nf_conn * ct , const char * dptr , unsigned int dataoff , unsigned int datalen , enum sdp_header_types type , enum sdp_header_types term , unsigned int * matchoff , unsigned int * matchlen ) ; 
/*--ct_sip_get_sdp_header--*/
struct sock * nf_tproxy_get_sock_v4 ( struct net * net , const u8 protocol , const __be32 saddr , const __be32 daddr , const __be16 sport , const __be16 dport , const struct net_device * in , bool listening_only ) ; 
/*--nf_tproxy_get_sock_v4--*/
int nf_tproxy_assign_sock ( struct sk_buff * skb , struct sock * sk ) ; 
/*--nf_tproxy_assign_sock--*/
int xt_register_target ( struct xt_target * target ) ; 
/*--xt_register_target--*/
void xt_unregister_target ( struct xt_target * target ) ; 
/*--xt_unregister_target--*/
int xt_register_targets ( struct xt_target * target , unsigned int n ) ; 
/*--xt_register_targets--*/
void xt_unregister_targets ( struct xt_target * target , unsigned int n ) ; 
/*--xt_unregister_targets--*/
int xt_register_match ( struct xt_match * match ) ; 
/*--xt_register_match--*/
void xt_unregister_match ( struct xt_match * match ) ; 
/*--xt_unregister_match--*/
int xt_register_matches ( struct xt_match * match , unsigned int n ) ; 
/*--xt_register_matches--*/
void xt_unregister_matches ( struct xt_match * match , unsigned int n ) ; 
/*--xt_unregister_matches--*/
struct xt_match * xt_find_match ( u8 af , const char * name , u8 revision ) ; 
/*--xt_find_match--*/
struct xt_match * xt_request_find_match ( uint8_t nfproto , const char * name , uint8_t revision ) ; 
/*--xt_request_find_match--*/
struct xt_target * xt_find_target ( u8 af , const char * name , u8 revision ) ; 
/*--xt_find_target--*/
struct xt_target * xt_request_find_target ( u8 af , const char * name , u8 revision ) ; 
/*--xt_request_find_target--*/
int xt_find_revision ( u8 af , const char * name , u8 revision , int target , int * err ) ; 
/*--xt_find_revision--*/
int xt_check_match ( struct xt_mtchk_param * par , unsigned int size , u_int8_t proto , bool inv_proto ) ; 
/*--xt_check_match--*/
int xt_compat_add_offset ( u_int8_t af , unsigned int offset , short delta ) ; 
/*--xt_compat_add_offset--*/
void xt_compat_flush_offsets ( u_int8_t af ) ; 
/*--xt_compat_flush_offsets--*/
int xt_compat_calc_jump ( u_int8_t af , unsigned int offset ) ; 
/*--xt_compat_calc_jump--*/
int xt_compat_match_offset ( const struct xt_match * match ) ; 
/*--xt_compat_match_offset--*/
int xt_compat_match_from_user ( struct xt_entry_match * m , void * * dstptr , unsigned int * size ) ; 
/*--xt_compat_match_from_user--*/
int xt_compat_match_to_user ( const struct xt_entry_match * m , void * * dstptr , unsigned int * size ) ; 
/*--xt_compat_match_to_user--*/
int xt_check_target ( struct xt_tgchk_param * par , unsigned int size , u_int8_t proto , bool inv_proto ) ; 
/*--xt_check_target--*/
int xt_compat_target_offset ( const struct xt_target * target ) ; 
/*--xt_compat_target_offset--*/
void xt_compat_target_from_user ( struct xt_entry_target * t , void * * dstptr , unsigned int * size ) ; 
/*--xt_compat_target_from_user--*/
int xt_compat_target_to_user ( const struct xt_entry_target * t , void * * dstptr , unsigned int * size ) ; 
/*--xt_compat_target_to_user--*/
struct xt_table_info * xt_alloc_table_info ( unsigned int size ) ; 
/*--xt_alloc_table_info--*/
void xt_free_table_info ( struct xt_table_info * info ) ; 
/*--xt_free_table_info--*/
struct xt_table * xt_find_table_lock ( struct net * net , u_int8_t af , const char * name ) ; 
/*--xt_find_table_lock--*/
void xt_table_unlock ( struct xt_table * table ) ; 
/*--xt_table_unlock--*/
void xt_compat_lock ( u_int8_t af ) ; 
/*--xt_compat_lock--*/
void xt_compat_unlock ( u_int8_t af ) ; 
/*--xt_compat_unlock--*/
struct xt_table_info * xt_replace_table ( struct xt_table * table , unsigned int num_counters , struct xt_table_info * newinfo , int * error ) ; 
/*--xt_replace_table--*/
struct xt_table * xt_register_table ( struct net * net , const struct xt_table * input_table , struct xt_table_info * bootstrap , struct xt_table_info * newinfo ) ; 
/*--xt_register_table--*/
void * xt_unregister_table ( struct xt_table * table ) ; 
/*--xt_unregister_table--*/
struct nf_hook_ops * xt_hook_link ( const struct xt_table * table , nf_hookfn * fn ) ; 
/*--xt_hook_link--*/
void xt_hook_unlink ( const struct xt_table * table , struct nf_hook_ops * ops ) ; 
/*--xt_hook_unlink--*/
int xt_proto_init ( struct net * net , u_int8_t af ) ; 
/*--xt_proto_init--*/
void xt_proto_fini ( struct net * net , u_int8_t af ) ; 
/*--xt_proto_fini--*/
struct xt_rateest * xt_rateest_lookup ( const char * name ) ; 
/*--xt_rateest_lookup--*/
void xt_rateest_put ( struct xt_rateest * est ) ; 
/*--xt_rateest_put--*/
struct ip_vs_conn * ip_vs_conn_in_get ( int af , int protocol , const union nf_inet_addr * s_addr , __be16 s_port , const union nf_inet_addr * d_addr , __be16 d_port ) ; 
/*--ip_vs_conn_in_get--*/
struct ip_vs_conn * ip_vs_ct_in_get ( int af , int protocol , const union nf_inet_addr * s_addr , __be16 s_port , const union nf_inet_addr * d_addr , __be16 d_port ) ; 
/*--ip_vs_ct_in_get--*/
struct ip_vs_conn * ip_vs_conn_out_get ( int af , int protocol , const union nf_inet_addr * s_addr , __be16 s_port , const union nf_inet_addr * d_addr , __be16 d_port ) ; 
/*--ip_vs_conn_out_get--*/
void ip_vs_conn_put ( struct ip_vs_conn * cp ) ; 
/*--ip_vs_conn_put--*/
void ip_vs_conn_fill_cport ( struct ip_vs_conn * cp , __be16 cport ) ; 
/*--ip_vs_conn_fill_cport--*/
struct ip_vs_dest * ip_vs_try_bind_dest ( struct ip_vs_conn * cp ) ; 
/*--ip_vs_try_bind_dest--*/
int ip_vs_check_template ( struct ip_vs_conn * ct ) ; 
/*--ip_vs_check_template--*/
void ip_vs_conn_expire_now ( struct ip_vs_conn * cp ) ; 
/*--ip_vs_conn_expire_now--*/
struct ip_vs_conn * ip_vs_conn_new ( int af , int proto , const union nf_inet_addr * caddr , __be16 cport , const union nf_inet_addr * vaddr , __be16 vport , const union nf_inet_addr * daddr , __be16 dport , unsigned flags , struct ip_vs_dest * dest ) ; 
/*--ip_vs_conn_new--*/
void ip_vs_random_dropentry ( void ) ; 
/*--ip_vs_random_dropentry--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ip_vs_conn_init ( void ) ; 
/*--ip_vs_conn_init--*/
void ip_vs_conn_cleanup ( void ) ; 
/*--ip_vs_conn_cleanup--*/
const char * ip_vs_proto_name ( unsigned proto ) ; 
/*--ip_vs_proto_name--*/
void ip_vs_init_hash_table ( struct list_head * table , int rows ) ; 
/*--ip_vs_init_hash_table--*/
struct ip_vs_conn * ip_vs_schedule ( struct ip_vs_service * svc , const struct sk_buff * skb ) ; 
/*--ip_vs_schedule--*/
int ip_vs_leave ( struct ip_vs_service * svc , struct sk_buff * skb , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_leave--*/
__sum16 ip_vs_checksum_complete ( struct sk_buff * skb , int offset ) ; 
/*--ip_vs_checksum_complete--*/
void ip_vs_nat_icmp ( struct sk_buff * skb , struct ip_vs_protocol * pp , struct ip_vs_conn * cp , int inout ) ; 
/*--ip_vs_nat_icmp--*/
void ip_vs_nat_icmp_v6 ( struct sk_buff * skb , struct ip_vs_protocol * pp , struct ip_vs_conn * cp , int inout ) ; 
/*--ip_vs_nat_icmp_v6--*/
int ip_vs_use_count_inc ( void ) ; 
/*--ip_vs_use_count_inc--*/
void ip_vs_use_count_dec ( void ) ; 
/*--ip_vs_use_count_dec--*/
struct ip_vs_service * ip_vs_service_get ( int af , __u32 fwmark , __u16 protocol , const union nf_inet_addr * vaddr , __be16 vport ) ; 
/*--ip_vs_service_get--*/
struct ip_vs_dest * ip_vs_lookup_real_service ( int af , __u16 protocol , const union nf_inet_addr * daddr , __be16 dport ) ; 
/*--ip_vs_lookup_real_service--*/
struct ip_vs_dest * ip_vs_find_dest ( int af , const union nf_inet_addr * daddr , __be16 dport , const union nf_inet_addr * vaddr , __be16 vport , __u16 protocol ) ; 
/*--ip_vs_find_dest--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ip_vs_control_init ( void ) ; 
/*--ip_vs_control_init--*/
void ip_vs_control_cleanup ( void ) ; 
/*--ip_vs_control_cleanup--*/
int ip_vs_bind_scheduler ( struct ip_vs_service * svc , struct ip_vs_scheduler * scheduler ) ; 
/*--ip_vs_bind_scheduler--*/
int ip_vs_unbind_scheduler ( struct ip_vs_service * svc ) ; 
/*--ip_vs_unbind_scheduler--*/
struct ip_vs_scheduler * ip_vs_scheduler_get ( const char * sched_name ) ; 
/*--ip_vs_scheduler_get--*/
void ip_vs_scheduler_put ( struct ip_vs_scheduler * scheduler ) ; 
/*--ip_vs_scheduler_put--*/
int register_ip_vs_scheduler ( struct ip_vs_scheduler * scheduler ) ; 
/*--register_ip_vs_scheduler--*/
int unregister_ip_vs_scheduler ( struct ip_vs_scheduler * scheduler ) ; 
/*--unregister_ip_vs_scheduler--*/
void ip_vs_dst_reset ( struct ip_vs_dest * dest ) ; 
/*--ip_vs_dst_reset--*/
int ip_vs_null_xmit ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_null_xmit--*/
int ip_vs_bypass_xmit ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_bypass_xmit--*/
int ip_vs_bypass_xmit_v6 ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_bypass_xmit_v6--*/
int ip_vs_nat_xmit ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_nat_xmit--*/
int ip_vs_nat_xmit_v6 ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_nat_xmit_v6--*/
int ip_vs_tunnel_xmit ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_tunnel_xmit--*/
int ip_vs_tunnel_xmit_v6 ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_tunnel_xmit_v6--*/
int ip_vs_dr_xmit ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_dr_xmit--*/
int ip_vs_dr_xmit_v6 ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_dr_xmit_v6--*/
int ip_vs_icmp_xmit ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp , int offset ) ; 
/*--ip_vs_icmp_xmit--*/
int ip_vs_icmp_xmit_v6 ( struct sk_buff * skb , struct ip_vs_conn * cp , struct ip_vs_protocol * pp , int offset ) ; 
/*--ip_vs_icmp_xmit_v6--*/
int ip_vs_app_inc_get ( struct ip_vs_app * inc ) ; 
/*--ip_vs_app_inc_get--*/
void ip_vs_app_inc_put ( struct ip_vs_app * inc ) ; 
/*--ip_vs_app_inc_put--*/
int register_ip_vs_app_inc ( struct ip_vs_app * app , __u16 proto , __u16 port ) ; 
/*--register_ip_vs_app_inc--*/
int register_ip_vs_app ( struct ip_vs_app * app ) ; 
/*--register_ip_vs_app--*/
void unregister_ip_vs_app ( struct ip_vs_app * app ) ; 
/*--unregister_ip_vs_app--*/
int ip_vs_bind_app ( struct ip_vs_conn * cp , struct ip_vs_protocol * pp ) ; 
/*--ip_vs_bind_app--*/
void ip_vs_unbind_app ( struct ip_vs_conn * cp ) ; 
/*--ip_vs_unbind_app--*/
int ip_vs_app_pkt_out ( struct ip_vs_conn * cp , struct sk_buff * skb ) ; 
/*--ip_vs_app_pkt_out--*/
int ip_vs_app_pkt_in ( struct ip_vs_conn * cp , struct sk_buff * skb ) ; 
/*--ip_vs_app_pkt_in--*/
int ip_vs_skb_replace ( struct sk_buff * skb , gfp_t pri , char * o_buf , int o_len , char * n_buf , int n_len ) ; 
/*--ip_vs_skb_replace--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ip_vs_app_init ( void ) ; 
/*--ip_vs_app_init--*/
void ip_vs_app_cleanup ( void ) ; 
/*--ip_vs_app_cleanup--*/
void ip_vs_sync_conn ( struct ip_vs_conn * cp ) ; 
/*--ip_vs_sync_conn--*/
int start_sync_thread ( int state , char * mcast_ifn , __u8 syncid ) ; 
/*--start_sync_thread--*/
int stop_sync_thread ( int state ) ; 
/*--stop_sync_thread--*/
void ip_vs_new_estimator ( struct ip_vs_stats * stats ) ; 
/*--ip_vs_new_estimator--*/
void ip_vs_kill_estimator ( struct ip_vs_stats * stats ) ; 
/*--ip_vs_kill_estimator--*/
void ip_vs_zero_estimator ( struct ip_vs_stats * stats ) ; 
/*--ip_vs_zero_estimator--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ip_vs_estimator_init ( void ) ; 
/*--ip_vs_estimator_init--*/
void ip_vs_estimator_cleanup ( void ) ; 
/*--ip_vs_estimator_cleanup--*/
struct ip_vs_protocol * ip_vs_proto_get ( unsigned short proto ) ; 
/*--ip_vs_proto_get--*/
void ip_vs_protocol_timeout_change ( int flags ) ; 
/*--ip_vs_protocol_timeout_change--*/
int * ip_vs_create_timeout_table ( int * table , int size ) ; 
/*--ip_vs_create_timeout_table--*/
int ip_vs_set_state_timeout ( int * table , int num , const char * const * names , const char * name , int to ) ; 
/*--ip_vs_set_state_timeout--*/
const char * ip_vs_state_name ( __u16 proto , int state ) ; 
/*--ip_vs_state_name--*/
void ip_vs_tcpudp_debug_packet ( struct ip_vs_protocol * pp , const struct sk_buff * skb , int offset , const char * msg ) ; 
/*--ip_vs_tcpudp_debug_packet--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) ip_vs_protocol_init ( void ) ; 
/*--ip_vs_protocol_init--*/
void ip_vs_protocol_cleanup ( void ) ; 
/*--ip_vs_protocol_cleanup--*/
void ip_vs_tcp_conn_listen ( struct ip_vs_conn * cp ) ; 
/*--ip_vs_tcp_conn_listen--*/
void nr_destroy_socket ( struct sock * sk ) ; 
/*--nr_destroy_socket--*/
int nr_rx_frame ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--nr_rx_frame--*/
int nr_rx_ip ( struct sk_buff * skb , struct net_device * dev ) ; 
/*--nr_rx_ip--*/
void nr_setup ( struct net_device * dev ) ; 
/*--nr_setup--*/
int nr_process_rx_frame ( struct sock * sk , struct sk_buff * skb ) ; 
/*--nr_process_rx_frame--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nr_loopback_init ( void ) ; 
/*--nr_loopback_init--*/
int nr_loopback_queue ( struct sk_buff * skb ) ; 
/*--nr_loopback_queue--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) nr_loopback_clear ( void ) ; 
/*--nr_loopback_clear--*/
void nr_output ( struct sock * sk , struct sk_buff * skb ) ; 
/*--nr_output--*/
void nr_send_nak_frame ( struct sock * sk ) ; 
/*--nr_send_nak_frame--*/
void nr_kick ( struct sock * sk ) ; 
/*--nr_kick--*/
void nr_transmit_buffer ( struct sock * sk , struct sk_buff * skb ) ; 
/*--nr_transmit_buffer--*/
void nr_establish_data_link ( struct sock * sk ) ; 
/*--nr_establish_data_link--*/
void nr_enquiry_response ( struct sock * sk ) ; 
/*--nr_enquiry_response--*/
void nr_check_iframes_acked ( struct sock * sk , unsigned short nr ) ; 
/*--nr_check_iframes_acked--*/
void nr_rt_device_down ( struct net_device * dev ) ; 
/*--nr_rt_device_down--*/
struct net_device * nr_dev_first ( void ) ; 
/*--nr_dev_first--*/
struct net_device * nr_dev_get ( ax25_address * addr ) ; 
/*--nr_dev_get--*/
int nr_rt_ioctl ( unsigned int cmd , void * arg ) ; 
/*--nr_rt_ioctl--*/
void nr_link_failed ( ax25_cb * ax25 , int reason ) ; 
/*--nr_link_failed--*/
int nr_route_frame ( struct sk_buff * skb , ax25_cb * ax25 ) ; 
/*--nr_route_frame--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) nr_rt_free ( void ) ; 
/*--nr_rt_free--*/
void nr_clear_queues ( struct sock * sk ) ; 
/*--nr_clear_queues--*/
void nr_frames_acked ( struct sock * sk , unsigned short nr ) ; 
/*--nr_frames_acked--*/
void nr_requeue_frames ( struct sock * sk ) ; 
/*--nr_requeue_frames--*/
int nr_validate_nr ( struct sock * sk , unsigned short nr ) ; 
/*--nr_validate_nr--*/
int nr_in_rx_window ( struct sock * sk , unsigned short ns ) ; 
/*--nr_in_rx_window--*/
void nr_write_internal ( struct sock * sk , int frametype ) ; 
/*--nr_write_internal--*/
void __nr_transmit_reply ( struct sk_buff * skb , int mine , unsigned char cmdflags ) ; 
/*--__nr_transmit_reply--*/
void nr_disconnect ( struct sock * sk , int reason ) ; 
/*--nr_disconnect--*/
void nr_init_timers ( struct sock * sk ) ; 
/*--nr_init_timers--*/
void nr_start_t1timer ( struct sock * sk ) ; 
/*--nr_start_t1timer--*/
void nr_start_t2timer ( struct sock * sk ) ; 
/*--nr_start_t2timer--*/
void nr_start_t4timer ( struct sock * sk ) ; 
/*--nr_start_t4timer--*/
void nr_start_idletimer ( struct sock * sk ) ; 
/*--nr_start_idletimer--*/
void nr_start_heartbeat ( struct sock * sk ) ; 
/*--nr_start_heartbeat--*/
void nr_stop_t1timer ( struct sock * sk ) ; 
/*--nr_stop_t1timer--*/
void nr_stop_t2timer ( struct sock * sk ) ; 
/*--nr_stop_t2timer--*/
void nr_stop_t4timer ( struct sock * sk ) ; 
/*--nr_stop_t4timer--*/
void nr_stop_idletimer ( struct sock * sk ) ; 
/*--nr_stop_idletimer--*/
void nr_stop_heartbeat ( struct sock * sk ) ; 
/*--nr_stop_heartbeat--*/
int nr_t1timer_running ( struct sock * sk ) ; 
/*--nr_t1timer_running--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) nr_register_sysctl ( void ) ; 
/*--nr_register_sysctl--*/
void nr_unregister_sysctl ( void ) ; 
/*--nr_unregister_sysctl--*/
struct phonet_device_list * phonet_device_list ( struct net * net ) ; 
/*--phonet_device_list--*/
struct net_device * phonet_device_get ( struct net * net ) ; 
/*--phonet_device_get--*/
int phonet_address_add ( struct net_device * dev , u8 addr ) ; 
/*--phonet_address_add--*/
int phonet_address_del ( struct net_device * dev , u8 addr ) ; 
/*--phonet_address_del--*/
u8 phonet_address_get ( struct net_device * dev , u8 daddr ) ; 
/*--phonet_address_get--*/
int phonet_address_lookup ( struct net * net , u8 addr ) ; 
/*--phonet_address_lookup--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) phonet_device_init ( void ) ; 
/*--phonet_device_init--*/
void phonet_device_exit ( void ) ; 
/*--phonet_device_exit--*/
int phonet_route_add ( struct net_device * dev , u8 daddr ) ; 
/*--phonet_route_add--*/
int phonet_route_del ( struct net_device * dev , u8 daddr ) ; 
/*--phonet_route_del--*/
struct net_device * phonet_route_get ( struct net * net , u8 daddr ) ; 
/*--phonet_route_get--*/
struct net_device * phonet_route_output ( struct net * net , u8 daddr ) ; 
/*--phonet_route_output--*/
void phonet_address_notify ( int event , struct net_device * dev , u8 addr ) ; 
/*--phonet_address_notify--*/
void rtm_phonet_notify ( int event , struct net_device * dev , u8 dst ) ; 
/*--rtm_phonet_notify--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) phonet_netlink_register ( void ) ; 
/*--phonet_netlink_register--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) pn_sock_init ( void ) ; 
/*--pn_sock_init--*/
struct sock * pn_find_sock_by_sa ( struct net * net , const struct sockaddr_pn * spn ) ; 
/*--pn_find_sock_by_sa--*/
void pn_deliver_sock_broadcast ( struct net * net , struct sk_buff * skb ) ; 
/*--pn_deliver_sock_broadcast--*/
void pn_sock_hash ( struct sock * sk ) ; 
/*--pn_sock_hash--*/
void pn_sock_unhash ( struct sock * sk ) ; 
/*--pn_sock_unhash--*/
int pn_sock_get_port ( struct sock * sk , unsigned short sport ) ; 
/*--pn_sock_get_port--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) isi_register ( void ) ; 
/*--isi_register--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) isi_unregister ( void ) ; 
/*--isi_unregister--*/
void phonet_get_local_port_range ( int * min , int * max ) ; 
/*--phonet_get_local_port_range--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) phonet_sysctl_init ( void ) ; 
/*--phonet_sysctl_init--*/
void phonet_sysctl_exit ( void ) ; 
/*--phonet_sysctl_exit--*/
int pn_skb_send ( struct sock * sk , struct sk_buff * skb , const struct sockaddr_pn * target ) ; 
/*--pn_skb_send--*/
int phonet_proto_register ( int protocol , struct phonet_protocol * pp ) ; 
/*--phonet_proto_register--*/
void phonet_proto_unregister ( int protocol , struct phonet_protocol * pp ) ; 
/*--phonet_proto_unregister--*/
int pep_writeable ( struct sock * sk ) ; 
/*--pep_writeable--*/
int pep_write ( struct sock * sk , struct sk_buff * skb ) ; 
/*--pep_write--*/
struct sk_buff * pep_read ( struct sock * sk ) ; 
/*--pep_read--*/
int gprs_attach ( struct sock * sk ) ; 
/*--gprs_attach--*/
void gprs_detach ( struct sock * sk ) ; 
/*--gprs_detach--*/
void rds_wake_sk_sleep ( struct rds_sock * rs ) ; 
/*--rds_wake_sk_sleep--*/
void rds_sock_addref ( struct rds_sock * rs ) ; 
/*--rds_sock_addref--*/
void rds_sock_put ( struct rds_sock * rs ) ; 
/*--rds_sock_put--*/
struct rds_sock * rds_find_bound ( __be32 addr , __be16 port ) ; 
/*--rds_find_bound--*/
void rds_remove_bound ( struct rds_sock * rs ) ; 
/*--rds_remove_bound--*/
int rds_bind ( struct socket * sock , struct sockaddr * uaddr , int addr_len ) ; 
/*--rds_bind--*/
void rds_cong_add_conn ( struct rds_connection * conn ) ; 
/*--rds_cong_add_conn--*/
void rds_cong_remove_conn ( struct rds_connection * conn ) ; 
/*--rds_cong_remove_conn--*/
int rds_cong_get_maps ( struct rds_connection * conn ) ; 
/*--rds_cong_get_maps--*/
void rds_cong_queue_updates ( struct rds_cong_map * map ) ; 
/*--rds_cong_queue_updates--*/
void rds_cong_map_updated ( struct rds_cong_map * map , uint64_t portmask ) ; 
/*--rds_cong_map_updated--*/
int rds_cong_updated_since ( unsigned long * recent ) ; 
/*--rds_cong_updated_since--*/
void rds_cong_set_bit ( struct rds_cong_map * map , __be16 port ) ; 
/*--rds_cong_set_bit--*/
void rds_cong_clear_bit ( struct rds_cong_map * map , __be16 port ) ; 
/*--rds_cong_clear_bit--*/
void rds_cong_add_socket ( struct rds_sock * rs ) ; 
/*--rds_cong_add_socket--*/
void rds_cong_remove_socket ( struct rds_sock * rs ) ; 
/*--rds_cong_remove_socket--*/
int rds_cong_wait ( struct rds_cong_map * map , __be16 port , int nonblock , struct rds_sock * rs ) ; 
/*--rds_cong_wait--*/
void rds_cong_exit ( void ) ; 
/*--rds_cong_exit--*/
struct rds_message * rds_cong_update_alloc ( struct rds_connection * conn ) ; 
/*--rds_cong_update_alloc--*/
void rds_conn_reset ( struct rds_connection * conn ) ; 
/*--rds_conn_reset--*/
struct rds_connection * rds_conn_create ( __be32 laddr , __be32 faddr , struct rds_transport * trans , gfp_t gfp ) ; 
/*--rds_conn_create--*/
struct rds_connection * rds_conn_create_outgoing ( __be32 laddr , __be32 faddr , struct rds_transport * trans , gfp_t gfp ) ; 
/*--rds_conn_create_outgoing--*/
void rds_conn_destroy ( struct rds_connection * conn ) ; 
/*--rds_conn_destroy--*/
void rds_for_each_conn_info ( struct socket * sock , unsigned int len , struct rds_info_iterator * iter , struct rds_info_lengths * lens , int ( * visitor ) ( struct rds_connection * , void * ) , size_t item_len ) ; 
/*--rds_for_each_conn_info--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_conn_init ( void ) ; 
/*--rds_conn_init--*/
void rds_conn_exit ( void ) ; 
/*--rds_conn_exit--*/
void rds_conn_drop ( struct rds_connection * conn ) ; 
/*--rds_conn_drop--*/
void __rds_conn_error ( struct rds_connection * conn , const char * fmt , ... ) ; 
/*--__rds_conn_error--*/
void rds_info_register_func ( int optname , rds_info_func func ) ; 
/*--rds_info_register_func--*/
void rds_info_deregister_func ( int optname , rds_info_func func ) ; 
/*--rds_info_deregister_func--*/
void rds_info_iter_unmap ( struct rds_info_iterator * iter ) ; 
/*--rds_info_iter_unmap--*/
void rds_info_copy ( struct rds_info_iterator * iter , void * data , unsigned long bytes ) ; 
/*--rds_info_copy--*/
int rds_info_getsockopt ( struct socket * sock , int optname , char * optval , int * optlen ) ; 
/*--rds_info_getsockopt--*/
void rds_message_addref ( struct rds_message * rm ) ; 
/*--rds_message_addref--*/
void rds_message_inc_purge ( struct rds_incoming * inc ) ; 
/*--rds_message_inc_purge--*/
void rds_message_put ( struct rds_message * rm ) ; 
/*--rds_message_put--*/
void rds_message_inc_free ( struct rds_incoming * inc ) ; 
/*--rds_message_inc_free--*/
void rds_message_populate_header ( struct rds_header * hdr , __be16 sport , __be16 dport , u64 seq ) ; 
/*--rds_message_populate_header--*/
int rds_message_add_extension ( struct rds_header * hdr , unsigned int type , const void * data , unsigned int len ) ; 
/*--rds_message_add_extension--*/
int rds_message_next_extension ( struct rds_header * hdr , unsigned int * pos , void * buf , unsigned int * buflen ) ; 
/*--rds_message_next_extension--*/
int rds_message_add_version_extension ( struct rds_header * hdr , unsigned int version ) ; 
/*--rds_message_add_version_extension--*/
int rds_message_get_version_extension ( struct rds_header * hdr , unsigned int * version ) ; 
/*--rds_message_get_version_extension--*/
int rds_message_add_rdma_dest_extension ( struct rds_header * hdr , u32 r_key , u32 offset ) ; 
/*--rds_message_add_rdma_dest_extension--*/
struct rds_message * rds_message_alloc ( unsigned int nents , gfp_t gfp ) ; 
/*--rds_message_alloc--*/
struct rds_message * rds_message_map_pages ( unsigned long * page_addrs , unsigned int total_len ) ; 
/*--rds_message_map_pages--*/
struct rds_message * rds_message_copy_from_user ( struct iovec * first_iov , size_t total_len ) ; 
/*--rds_message_copy_from_user--*/
int rds_message_inc_copy_to_user ( struct rds_incoming * inc , struct iovec * first_iov , size_t size ) ; 
/*--rds_message_inc_copy_to_user--*/
void rds_message_wait ( struct rds_message * rm ) ; 
/*--rds_message_wait--*/
void rds_message_unmapped ( struct rds_message * rm ) ; 
/*--rds_message_unmapped--*/
void rds_inc_init ( struct rds_incoming * inc , struct rds_connection * conn , __be32 saddr ) ; 
/*--rds_inc_init--*/
void rds_inc_addref ( struct rds_incoming * inc ) ; 
/*--rds_inc_addref--*/
void rds_inc_put ( struct rds_incoming * inc ) ; 
/*--rds_inc_put--*/
void rds_recv_incoming ( struct rds_connection * conn , __be32 saddr , __be32 daddr , struct rds_incoming * inc , gfp_t gfp , enum km_type km ) ; 
/*--rds_recv_incoming--*/
int rds_notify_queue_get ( struct rds_sock * rs , struct msghdr * msghdr ) ; 
/*--rds_notify_queue_get--*/
int rds_recvmsg ( struct kiocb * iocb , struct socket * sock , struct msghdr * msg , size_t size , int msg_flags ) ; 
/*--rds_recvmsg--*/
void rds_clear_recv_queue ( struct rds_sock * rs ) ; 
/*--rds_clear_recv_queue--*/
void rds_inc_info_copy ( struct rds_incoming * inc , struct rds_info_iterator * iter , __be32 saddr , __be32 daddr , int flip ) ; 
/*--rds_inc_info_copy--*/
void rds_send_reset ( struct rds_connection * conn ) ; 
/*--rds_send_reset--*/
int rds_send_xmit ( struct rds_connection * conn ) ; 
/*--rds_send_xmit--*/
int rds_send_acked_before ( struct rds_connection * conn , u64 seq ) ; 
/*--rds_send_acked_before--*/
void rds_rdma_send_complete ( struct rds_message * rm , int status ) ; 
/*--rds_rdma_send_complete--*/
struct rds_message * rds_send_get_message ( struct rds_connection * conn , struct rds_rdma_op * op ) ; 
/*--rds_send_get_message--*/
void rds_send_remove_from_sock ( struct list_head * messages , int status ) ; 
/*--rds_send_remove_from_sock--*/
void rds_send_drop_acked ( struct rds_connection * conn , u64 ack , is_acked_func is_acked ) ; 
/*--rds_send_drop_acked--*/
void rds_send_drop_to ( struct rds_sock * rs , struct sockaddr_in * dest ) ; 
/*--rds_send_drop_to--*/
int rds_sendmsg ( struct kiocb * iocb , struct socket * sock , struct msghdr * msg , size_t payload_len ) ; 
/*--rds_sendmsg--*/
int rds_send_pong ( struct rds_connection * conn , __be16 dport ) ; 
/*--rds_send_pong--*/
void rds_stats_info_copy ( struct rds_info_iterator * iter , uint64_t * values , const char * const * names , size_t nr ) ; 
/*--rds_stats_info_copy--*/
void rds_stats_exit ( void ) ; 
/*--rds_stats_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_stats_init ( void ) ; 
/*--rds_stats_init--*/
void rds_sysctl_exit ( void ) ; 
/*--rds_sysctl_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_sysctl_init ( void ) ; 
/*--rds_sysctl_init--*/
void rds_connect_complete ( struct rds_connection * conn ) ; 
/*--rds_connect_complete--*/
void rds_connect_worker ( struct work_struct * work ) ; 
/*--rds_connect_worker--*/
void rds_shutdown_worker ( struct work_struct * work ) ; 
/*--rds_shutdown_worker--*/
void rds_send_worker ( struct work_struct * work ) ; 
/*--rds_send_worker--*/
void rds_recv_worker ( struct work_struct * work ) ; 
/*--rds_recv_worker--*/
void rds_threads_exit ( void ) ; 
/*--rds_threads_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_threads_init ( void ) ; 
/*--rds_threads_init--*/
int rds_trans_register ( struct rds_transport * trans ) ; 
/*--rds_trans_register--*/
void rds_trans_unregister ( struct rds_transport * trans ) ; 
/*--rds_trans_unregister--*/
struct rds_transport * rds_trans_get_preferred ( __be32 addr ) ; 
/*--rds_trans_get_preferred--*/
unsigned int rds_trans_stats_info_copy ( struct rds_info_iterator * iter , unsigned int avail ) ; 
/*--rds_trans_stats_info_copy--*/
void rds_loop_exit ( void ) ; 
/*--rds_loop_exit--*/
int rds_page_copy_user ( struct page * page , unsigned long offset , void * ptr , unsigned long bytes , int to_user ) ; 
/*--rds_page_copy_user--*/
int rds_page_remainder_alloc ( struct scatterlist * scat , unsigned long bytes , gfp_t gfp ) ; 
/*--rds_page_remainder_alloc--*/
void rds_page_exit ( void ) ; 
/*--rds_page_exit--*/
void __rds_put_mr_final ( struct rds_mr * mr ) ; 
/*--__rds_put_mr_final--*/
void rds_rdma_drop_keys ( struct rds_sock * rs ) ; 
/*--rds_rdma_drop_keys--*/
int rds_get_mr ( struct rds_sock * rs , char * optval , int optlen ) ; 
/*--rds_get_mr--*/
int rds_get_mr_for_dest ( struct rds_sock * rs , char * optval , int optlen ) ; 
/*--rds_get_mr_for_dest--*/
int rds_free_mr ( struct rds_sock * rs , char * optval , int optlen ) ; 
/*--rds_free_mr--*/
void rds_rdma_unuse ( struct rds_sock * rs , u32 r_key , int force ) ; 
/*--rds_rdma_unuse--*/
void rds_rdma_free_op ( struct rds_rdma_op * ro ) ; 
/*--rds_rdma_free_op--*/
int rds_cmsg_rdma_args ( struct rds_sock * rs , struct rds_message * rm , struct cmsghdr * cmsg ) ; 
/*--rds_cmsg_rdma_args--*/
int rds_cmsg_rdma_dest ( struct rds_sock * rs , struct rds_message * rm , struct cmsghdr * cmsg ) ; 
/*--rds_cmsg_rdma_dest--*/
int rds_cmsg_rdma_map ( struct rds_sock * rs , struct rds_message * rm , struct cmsghdr * cmsg ) ; 
/*--rds_cmsg_rdma_map--*/
int rds_rdma_cm_event_handler ( struct rdma_cm_id * cm_id , struct rdma_cm_event * event ) ; 
/*--rds_rdma_cm_event_handler--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_rdma_init ( void ) ; 
/*--rds_rdma_init--*/
; void rds_rdma_exit ( void ) ; 
/*--rds_rdma_exit--*/
void rds_ib_add_one ( struct ib_device * device ) ; 
/*--rds_ib_add_one--*/
void rds_ib_remove_one ( struct ib_device * device ) ; 
/*--rds_ib_remove_one--*/
void rds_ib_exit ( void ) ; 
/*--rds_ib_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_ib_init ( void ) ; 
/*--rds_ib_init--*/
void rds_ib_cm_connect_complete ( struct rds_connection * conn , struct rdma_cm_event * event ) ; 
/*--rds_ib_cm_connect_complete--*/
int rds_ib_cm_handle_connect ( struct rdma_cm_id * cm_id , struct rdma_cm_event * event ) ; 
/*--rds_ib_cm_handle_connect--*/
int rds_ib_cm_initiate_connect ( struct rdma_cm_id * cm_id ) ; 
/*--rds_ib_cm_initiate_connect--*/
int rds_ib_conn_connect ( struct rds_connection * conn ) ; 
/*--rds_ib_conn_connect--*/
void rds_ib_conn_shutdown ( struct rds_connection * conn ) ; 
/*--rds_ib_conn_shutdown--*/
int rds_ib_conn_alloc ( struct rds_connection * conn , gfp_t gfp ) ; 
/*--rds_ib_conn_alloc--*/
void rds_ib_conn_free ( void * arg ) ; 
/*--rds_ib_conn_free--*/
void __rds_ib_conn_error ( struct rds_connection * conn , const char * fmt , ... ) ; 
/*--__rds_ib_conn_error--*/
void rds_ib_recv_init_ring ( struct rds_ib_connection * ic ) ; 
/*--rds_ib_recv_init_ring--*/
void rds_ib_recv_clear_ring ( struct rds_ib_connection * ic ) ; 
/*--rds_ib_recv_clear_ring--*/
int rds_ib_recv_refill ( struct rds_connection * conn , gfp_t kptr_gfp , gfp_t page_gfp , int prefill ) ; 
/*--rds_ib_recv_refill--*/
void rds_ib_inc_purge ( struct rds_incoming * inc ) ; 
/*--rds_ib_inc_purge--*/
void rds_ib_inc_free ( struct rds_incoming * inc ) ; 
/*--rds_ib_inc_free--*/
int rds_ib_inc_copy_to_user ( struct rds_incoming * inc , struct iovec * first_iov , size_t size ) ; 
/*--rds_ib_inc_copy_to_user--*/
void rds_ib_recv_init_ack ( struct rds_ib_connection * ic ) ; 
/*--rds_ib_recv_init_ack--*/
void rds_ib_attempt_ack ( struct rds_ib_connection * ic ) ; 
/*--rds_ib_attempt_ack--*/
void rds_ib_ack_send_complete ( struct rds_ib_connection * ic ) ; 
/*--rds_ib_ack_send_complete--*/
u64 rds_ib_piggyb_ack ( struct rds_ib_connection * ic ) ; 
/*--rds_ib_piggyb_ack--*/
void rds_ib_recv_cq_comp_handler ( struct ib_cq * cq , void * context ) ; 
/*--rds_ib_recv_cq_comp_handler--*/
void rds_ib_recv_tasklet_fn ( unsigned long data ) ; 
/*--rds_ib_recv_tasklet_fn--*/
int rds_ib_recv ( struct rds_connection * conn ) ; 
/*--rds_ib_recv--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_ib_recv_init ( void ) ; 
/*--rds_ib_recv_init--*/
void rds_ib_recv_exit ( void ) ; 
/*--rds_ib_recv_exit--*/
void rds_ib_ring_init ( struct rds_ib_work_ring * ring , u32 nr ) ; 
/*--rds_ib_ring_init--*/
void rds_ib_ring_resize ( struct rds_ib_work_ring * ring , u32 nr ) ; 
/*--rds_ib_ring_resize--*/
u32 rds_ib_ring_alloc ( struct rds_ib_work_ring * ring , u32 val , u32 * pos ) ; 
/*--rds_ib_ring_alloc--*/
void rds_ib_ring_free ( struct rds_ib_work_ring * ring , u32 val ) ; 
/*--rds_ib_ring_free--*/
void rds_ib_ring_unalloc ( struct rds_ib_work_ring * ring , u32 val ) ; 
/*--rds_ib_ring_unalloc--*/
int rds_ib_ring_empty ( struct rds_ib_work_ring * ring ) ; 
/*--rds_ib_ring_empty--*/
int rds_ib_ring_low ( struct rds_ib_work_ring * ring ) ; 
/*--rds_ib_ring_low--*/
u32 rds_ib_ring_oldest ( struct rds_ib_work_ring * ring ) ; 
/*--rds_ib_ring_oldest--*/
u32 rds_ib_ring_completed ( struct rds_ib_work_ring * ring , u32 wr_id , u32 oldest ) ; 
/*--rds_ib_ring_completed--*/
void rds_ib_send_init_ring ( struct rds_ib_connection * ic ) ; 
/*--rds_ib_send_init_ring--*/
void rds_ib_send_clear_ring ( struct rds_ib_connection * ic ) ; 
/*--rds_ib_send_clear_ring--*/
void rds_ib_send_cq_comp_handler ( struct ib_cq * cq , void * context ) ; 
/*--rds_ib_send_cq_comp_handler--*/
int rds_ib_send_grab_credits ( struct rds_ib_connection * ic , u32 wanted , u32 * adv_credits , int need_posted , int max_posted ) ; 
/*--rds_ib_send_grab_credits--*/
void rds_ib_send_add_credits ( struct rds_connection * conn , unsigned int credits ) ; 
/*--rds_ib_send_add_credits--*/
void rds_ib_advertise_credits ( struct rds_connection * conn , unsigned int posted ) ; 
/*--rds_ib_advertise_credits--*/
int rds_ib_xmit ( struct rds_connection * conn , struct rds_message * rm , unsigned int hdr_off , unsigned int sg , unsigned int off ) ; 
/*--rds_ib_xmit--*/
int rds_ib_xmit_rdma ( struct rds_connection * conn , struct rds_rdma_op * op ) ; 
/*--rds_ib_xmit_rdma--*/
void rds_ib_xmit_complete ( struct rds_connection * conn ) ; 
/*--rds_ib_xmit_complete--*/
unsigned int rds_ib_stats_info_copy ( struct rds_info_iterator * iter , unsigned int avail ) ; 
/*--rds_ib_stats_info_copy--*/
void rds_ib_sysctl_exit ( void ) ; 
/*--rds_ib_sysctl_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_ib_sysctl_init ( void ) ; 
/*--rds_ib_sysctl_init--*/
int rds_ib_update_ipaddr ( struct rds_ib_device * rds_ibdev , __be32 ipaddr ) ; 
/*--rds_ib_update_ipaddr--*/
void rds_ib_add_conn ( struct rds_ib_device * rds_ibdev , struct rds_connection * conn ) ; 
/*--rds_ib_add_conn--*/
void rds_ib_remove_conn ( struct rds_ib_device * rds_ibdev , struct rds_connection * conn ) ; 
/*--rds_ib_remove_conn--*/
void __rds_ib_destroy_conns ( struct list_head * list , spinlock_t * list_lock ) ; 
/*--__rds_ib_destroy_conns--*/
struct rds_ib_mr_pool * rds_ib_create_mr_pool ( struct rds_ib_device * rds_ibdev ) ; 
/*--rds_ib_create_mr_pool--*/
void rds_ib_get_mr_info ( struct rds_ib_device * rds_ibdev , struct rds_info_rdma_connection * iinfo ) ; 
/*--rds_ib_get_mr_info--*/
void rds_ib_destroy_mr_pool ( struct rds_ib_mr_pool * pool ) ; 
/*--rds_ib_destroy_mr_pool--*/
void rds_ib_sync_mr ( void * trans_private , int direction ) ; 
/*--rds_ib_sync_mr--*/
void rds_ib_free_mr ( void * trans_private , int invalidate ) ; 
/*--rds_ib_free_mr--*/
void rds_ib_flush_mrs ( void ) ; 
/*--rds_ib_flush_mrs--*/
void * rds_ib_get_mr ( struct scatterlist * sg , unsigned long nents , struct rds_sock * rs , u32 * key_ret ) ; 
/*--rds_ib_get_mr--*/
void rds_iw_add_one ( struct ib_device * device ) ; 
/*--rds_iw_add_one--*/
void rds_iw_remove_one ( struct ib_device * device ) ; 
/*--rds_iw_remove_one--*/
void rds_iw_exit ( void ) ; 
/*--rds_iw_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_iw_init ( void ) ; 
/*--rds_iw_init--*/
void rds_iw_cm_connect_complete ( struct rds_connection * conn , struct rdma_cm_event * event ) ; 
/*--rds_iw_cm_connect_complete--*/
int rds_iw_cm_handle_connect ( struct rdma_cm_id * cm_id , struct rdma_cm_event * event ) ; 
/*--rds_iw_cm_handle_connect--*/
int rds_iw_cm_initiate_connect ( struct rdma_cm_id * cm_id ) ; 
/*--rds_iw_cm_initiate_connect--*/
int rds_iw_conn_connect ( struct rds_connection * conn ) ; 
/*--rds_iw_conn_connect--*/
void rds_iw_conn_shutdown ( struct rds_connection * conn ) ; 
/*--rds_iw_conn_shutdown--*/
int rds_iw_conn_alloc ( struct rds_connection * conn , gfp_t gfp ) ; 
/*--rds_iw_conn_alloc--*/
void rds_iw_conn_free ( void * arg ) ; 
/*--rds_iw_conn_free--*/
void __rds_iw_conn_error ( struct rds_connection * conn , const char * fmt , ... ) ; 
/*--__rds_iw_conn_error--*/
void rds_iw_recv_init_ring ( struct rds_iw_connection * ic ) ; 
/*--rds_iw_recv_init_ring--*/
void rds_iw_recv_clear_ring ( struct rds_iw_connection * ic ) ; 
/*--rds_iw_recv_clear_ring--*/
int rds_iw_recv_refill ( struct rds_connection * conn , gfp_t kptr_gfp , gfp_t page_gfp , int prefill ) ; 
/*--rds_iw_recv_refill--*/
void rds_iw_inc_purge ( struct rds_incoming * inc ) ; 
/*--rds_iw_inc_purge--*/
void rds_iw_inc_free ( struct rds_incoming * inc ) ; 
/*--rds_iw_inc_free--*/
int rds_iw_inc_copy_to_user ( struct rds_incoming * inc , struct iovec * first_iov , size_t size ) ; 
/*--rds_iw_inc_copy_to_user--*/
void rds_iw_recv_init_ack ( struct rds_iw_connection * ic ) ; 
/*--rds_iw_recv_init_ack--*/
void rds_iw_attempt_ack ( struct rds_iw_connection * ic ) ; 
/*--rds_iw_attempt_ack--*/
void rds_iw_ack_send_complete ( struct rds_iw_connection * ic ) ; 
/*--rds_iw_ack_send_complete--*/
u64 rds_iw_piggyb_ack ( struct rds_iw_connection * ic ) ; 
/*--rds_iw_piggyb_ack--*/
void rds_iw_recv_cq_comp_handler ( struct ib_cq * cq , void * context ) ; 
/*--rds_iw_recv_cq_comp_handler--*/
void rds_iw_recv_tasklet_fn ( unsigned long data ) ; 
/*--rds_iw_recv_tasklet_fn--*/
int rds_iw_recv ( struct rds_connection * conn ) ; 
/*--rds_iw_recv--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_iw_recv_init ( void ) ; 
/*--rds_iw_recv_init--*/
void rds_iw_recv_exit ( void ) ; 
/*--rds_iw_recv_exit--*/
void rds_iw_ring_init ( struct rds_iw_work_ring * ring , u32 nr ) ; 
/*--rds_iw_ring_init--*/
void rds_iw_ring_resize ( struct rds_iw_work_ring * ring , u32 nr ) ; 
/*--rds_iw_ring_resize--*/
u32 rds_iw_ring_alloc ( struct rds_iw_work_ring * ring , u32 val , u32 * pos ) ; 
/*--rds_iw_ring_alloc--*/
void rds_iw_ring_free ( struct rds_iw_work_ring * ring , u32 val ) ; 
/*--rds_iw_ring_free--*/
void rds_iw_ring_unalloc ( struct rds_iw_work_ring * ring , u32 val ) ; 
/*--rds_iw_ring_unalloc--*/
int rds_iw_ring_empty ( struct rds_iw_work_ring * ring ) ; 
/*--rds_iw_ring_empty--*/
int rds_iw_ring_low ( struct rds_iw_work_ring * ring ) ; 
/*--rds_iw_ring_low--*/
u32 rds_iw_ring_oldest ( struct rds_iw_work_ring * ring ) ; 
/*--rds_iw_ring_oldest--*/
u32 rds_iw_ring_completed ( struct rds_iw_work_ring * ring , u32 wr_id , u32 oldest ) ; 
/*--rds_iw_ring_completed--*/
void rds_iw_send_init_ring ( struct rds_iw_connection * ic ) ; 
/*--rds_iw_send_init_ring--*/
void rds_iw_send_clear_ring ( struct rds_iw_connection * ic ) ; 
/*--rds_iw_send_clear_ring--*/
void rds_iw_send_cq_comp_handler ( struct ib_cq * cq , void * context ) ; 
/*--rds_iw_send_cq_comp_handler--*/
int rds_iw_send_grab_credits ( struct rds_iw_connection * ic , u32 wanted , u32 * adv_credits , int need_posted , int max_posted ) ; 
/*--rds_iw_send_grab_credits--*/
void rds_iw_send_add_credits ( struct rds_connection * conn , unsigned int credits ) ; 
/*--rds_iw_send_add_credits--*/
void rds_iw_advertise_credits ( struct rds_connection * conn , unsigned int posted ) ; 
/*--rds_iw_advertise_credits--*/
int rds_iw_xmit ( struct rds_connection * conn , struct rds_message * rm , unsigned int hdr_off , unsigned int sg , unsigned int off ) ; 
/*--rds_iw_xmit--*/
int rds_iw_xmit_rdma ( struct rds_connection * conn , struct rds_rdma_op * op ) ; 
/*--rds_iw_xmit_rdma--*/
void rds_iw_xmit_complete ( struct rds_connection * conn ) ; 
/*--rds_iw_xmit_complete--*/
unsigned int rds_iw_stats_info_copy ( struct rds_info_iterator * iter , unsigned int avail ) ; 
/*--rds_iw_stats_info_copy--*/
void rds_iw_sysctl_exit ( void ) ; 
/*--rds_iw_sysctl_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_iw_sysctl_init ( void ) ; 
/*--rds_iw_sysctl_init--*/
void rds_iw_remove_cm_id ( struct rds_iw_device * rds_iwdev , struct rdma_cm_id * cm_id ) ; 
/*--rds_iw_remove_cm_id--*/
int rds_iw_update_cm_id ( struct rds_iw_device * rds_iwdev , struct rdma_cm_id * cm_id ) ; 
/*--rds_iw_update_cm_id--*/
void rds_iw_add_conn ( struct rds_iw_device * rds_iwdev , struct rds_connection * conn ) ; 
/*--rds_iw_add_conn--*/
void rds_iw_remove_conn ( struct rds_iw_device * rds_iwdev , struct rds_connection * conn ) ; 
/*--rds_iw_remove_conn--*/
void __rds_iw_destroy_conns ( struct list_head * list , spinlock_t * list_lock ) ; 
/*--__rds_iw_destroy_conns--*/
struct rds_iw_mr_pool * rds_iw_create_mr_pool ( struct rds_iw_device * rds_iwdev ) ; 
/*--rds_iw_create_mr_pool--*/
void rds_iw_get_mr_info ( struct rds_iw_device * rds_iwdev , struct rds_info_rdma_connection * iinfo ) ; 
/*--rds_iw_get_mr_info--*/
void rds_iw_destroy_mr_pool ( struct rds_iw_mr_pool * pool ) ; 
/*--rds_iw_destroy_mr_pool--*/
void rds_iw_sync_mr ( void * trans_private , int direction ) ; 
/*--rds_iw_sync_mr--*/
void rds_iw_free_mr ( void * trans_private , int invalidate ) ; 
/*--rds_iw_free_mr--*/
void rds_iw_flush_mrs ( void ) ; 
/*--rds_iw_flush_mrs--*/
void * rds_iw_get_mr ( struct scatterlist * sg , unsigned long nents , struct rds_sock * rs , u32 * key_ret ) ; 
/*--rds_iw_get_mr--*/
void rds_tcp_nonagle ( struct socket * sock ) ; 
/*--rds_tcp_nonagle--*/
void rds_tcp_tune ( struct socket * sock ) ; 
/*--rds_tcp_tune--*/
u32 rds_tcp_snd_nxt ( struct rds_tcp_connection * tc ) ; 
/*--rds_tcp_snd_nxt--*/
u32 rds_tcp_snd_una ( struct rds_tcp_connection * tc ) ; 
/*--rds_tcp_snd_una--*/
void rds_tcp_restore_callbacks ( struct socket * sock , struct rds_tcp_connection * tc ) ; 
/*--rds_tcp_restore_callbacks--*/
void rds_tcp_set_callbacks ( struct socket * sock , struct rds_connection * conn ) ; 
/*--rds_tcp_set_callbacks--*/
void rds_tcp_exit ( void ) ; 
/*--rds_tcp_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_tcp_init ( void ) ; 
/*--rds_tcp_init--*/
void rds_tcp_state_change ( struct sock * sk ) ; 
/*--rds_tcp_state_change--*/
int rds_tcp_conn_connect ( struct rds_connection * conn ) ; 
/*--rds_tcp_conn_connect--*/
void rds_tcp_conn_shutdown ( struct rds_connection * conn ) ; 
/*--rds_tcp_conn_shutdown--*/
void rds_tcp_listen_data_ready ( struct sock * sk , int bytes ) ; 
/*--rds_tcp_listen_data_ready--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_tcp_listen_init ( void ) ; 
/*--rds_tcp_listen_init--*/
void rds_tcp_listen_stop ( void ) ; 
/*--rds_tcp_listen_stop--*/
void rds_tcp_inc_purge ( struct rds_incoming * inc ) ; 
/*--rds_tcp_inc_purge--*/
void rds_tcp_inc_free ( struct rds_incoming * inc ) ; 
/*--rds_tcp_inc_free--*/
int rds_tcp_inc_copy_to_user ( struct rds_incoming * inc , struct iovec * first_iov , size_t size ) ; 
/*--rds_tcp_inc_copy_to_user--*/
int rds_tcp_read_sock ( struct rds_connection * conn , gfp_t gfp , enum km_type km ) ; 
/*--rds_tcp_read_sock--*/
int rds_tcp_recv ( struct rds_connection * conn ) ; 
/*--rds_tcp_recv--*/
void rds_tcp_data_ready ( struct sock * sk , int bytes ) ; 
/*--rds_tcp_data_ready--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rds_tcp_recv_init ( void ) ; 
/*--rds_tcp_recv_init--*/
void rds_tcp_recv_exit ( void ) ; 
/*--rds_tcp_recv_exit--*/
void rds_tcp_xmit_prepare ( struct rds_connection * conn ) ; 
/*--rds_tcp_xmit_prepare--*/
void rds_tcp_xmit_complete ( struct rds_connection * conn ) ; 
/*--rds_tcp_xmit_complete--*/
int rds_tcp_sendmsg ( struct socket * sock , void * data , unsigned int len ) ; 
/*--rds_tcp_sendmsg--*/
int rds_tcp_xmit_cong_map ( struct rds_connection * conn , struct rds_cong_map * map , unsigned long offset ) ; 
/*--rds_tcp_xmit_cong_map--*/
int rds_tcp_xmit ( struct rds_connection * conn , struct rds_message * rm , unsigned int hdr_off , unsigned int sg , unsigned int off ) ; 
/*--rds_tcp_xmit--*/
void rds_tcp_write_space ( struct sock * sk ) ; 
/*--rds_tcp_write_space--*/
unsigned int rds_tcp_stats_info_copy ( struct rds_info_iterator * iter , unsigned int avail ) ; 
/*--rds_tcp_stats_info_copy--*/
char * rose2asc ( char * buf , const rose_address * addr ) ; 
/*--rose2asc--*/
int rosecmp ( rose_address * addr1 , rose_address * addr2 ) ; 
/*--rosecmp--*/
int rosecmpm ( rose_address * addr1 , rose_address * addr2 , unsigned short mask ) ; 
/*--rosecmpm--*/
void rose_kill_by_neigh ( struct rose_neigh * neigh ) ; 
/*--rose_kill_by_neigh--*/
struct sock * rose_find_socket ( unsigned int lci , struct rose_neigh * neigh ) ; 
/*--rose_find_socket--*/
unsigned int rose_new_lci ( struct rose_neigh * neigh ) ; 
/*--rose_new_lci--*/
void rose_destroy_socket ( struct sock * sk ) ; 
/*--rose_destroy_socket--*/
int rose_rx_call_request ( struct sk_buff * skb , struct net_device * dev , struct rose_neigh * neigh , unsigned int lci ) ; 
/*--rose_rx_call_request--*/
void rose_setup ( struct net_device * dev ) ; 
/*--rose_setup--*/
int rose_process_rx_frame ( struct sock * sk , struct sk_buff * skb ) ; 
/*--rose_process_rx_frame--*/
void rose_start_ftimer ( struct rose_neigh * neigh ) ; 
/*--rose_start_ftimer--*/
void rose_stop_ftimer ( struct rose_neigh * neigh ) ; 
/*--rose_stop_ftimer--*/
void rose_stop_t0timer ( struct rose_neigh * neigh ) ; 
/*--rose_stop_t0timer--*/
int rose_ftimer_running ( struct rose_neigh * neigh ) ; 
/*--rose_ftimer_running--*/
void rose_link_rx_restart ( struct sk_buff * skb , struct rose_neigh * neigh , unsigned short frametype ) ; 
/*--rose_link_rx_restart--*/
void rose_transmit_clear_request ( struct rose_neigh * neigh , unsigned int lci , unsigned char cause , unsigned char diagnostic ) ; 
/*--rose_transmit_clear_request--*/
void rose_transmit_link ( struct sk_buff * skb , struct rose_neigh * neigh ) ; 
/*--rose_transmit_link--*/
void rose_loopback_init ( void ) ; 
/*--rose_loopback_init--*/
int rose_loopback_queue ( struct sk_buff * skb , struct rose_neigh * neigh ) ; 
/*--rose_loopback_queue--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rose_loopback_clear ( void ) ; 
/*--rose_loopback_clear--*/
void rose_kick ( struct sock * sk ) ; 
/*--rose_kick--*/
void rose_enquiry_response ( struct sock * sk ) ; 
/*--rose_enquiry_response--*/
void rose_add_loopback_neigh ( void ) ; 
/*--rose_add_loopback_neigh--*/
int rose_add_loopback_node ( rose_address * address ) ; 
/*--rose_add_loopback_node--*/
void rose_del_loopback_node ( rose_address * address ) ; 
/*--rose_del_loopback_node--*/
void rose_rt_device_down ( struct net_device * dev ) ; 
/*--rose_rt_device_down--*/
struct net_device * rose_dev_first ( void ) ; 
/*--rose_dev_first--*/
struct net_device * rose_dev_get ( rose_address * addr ) ; 
/*--rose_dev_get--*/
struct rose_route * rose_route_free_lci ( unsigned int lci , struct rose_neigh * neigh ) ; 
/*--rose_route_free_lci--*/
struct rose_neigh * rose_get_neigh ( rose_address * addr , unsigned char * cause , unsigned char * diagnostic , int new ) ; 
/*--rose_get_neigh--*/
int rose_rt_ioctl ( unsigned int cmd , void * arg ) ; 
/*--rose_rt_ioctl--*/
void rose_link_failed ( ax25_cb * ax25 , int reason ) ; 
/*--rose_link_failed--*/
void rose_link_device_down ( struct net_device * dev ) ; 
/*--rose_link_device_down--*/
int rose_route_frame ( struct sk_buff * skb , ax25_cb * ax25 ) ; 
/*--rose_route_frame--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rose_rt_free ( void ) ; 
/*--rose_rt_free--*/
void rose_clear_queues ( struct sock * sk ) ; 
/*--rose_clear_queues--*/
void rose_frames_acked ( struct sock * sk , unsigned short nr ) ; 
/*--rose_frames_acked--*/
void rose_requeue_frames ( struct sock * sk ) ; 
/*--rose_requeue_frames--*/
int rose_validate_nr ( struct sock * sk , unsigned short nr ) ; 
/*--rose_validate_nr--*/
void rose_write_internal ( struct sock * sk , int frametype ) ; 
/*--rose_write_internal--*/
int rose_decode ( struct sk_buff * skb , int * ns , int * nr , int * q , int * d , int * m ) ; 
/*--rose_decode--*/
int rose_parse_facilities ( unsigned char * p , struct rose_facilities_struct * facilities ) ; 
/*--rose_parse_facilities--*/
void rose_disconnect ( struct sock * sk , int reason , int cause , int diagnostic ) ; 
/*--rose_disconnect--*/
void rose_start_heartbeat ( struct sock * sk ) ; 
/*--rose_start_heartbeat--*/
void rose_start_t1timer ( struct sock * sk ) ; 
/*--rose_start_t1timer--*/
void rose_start_t2timer ( struct sock * sk ) ; 
/*--rose_start_t2timer--*/
void rose_start_t3timer ( struct sock * sk ) ; 
/*--rose_start_t3timer--*/
void rose_start_hbtimer ( struct sock * sk ) ; 
/*--rose_start_hbtimer--*/
void rose_start_idletimer ( struct sock * sk ) ; 
/*--rose_start_idletimer--*/
void rose_stop_heartbeat ( struct sock * sk ) ; 
/*--rose_stop_heartbeat--*/
void rose_stop_timer ( struct sock * sk ) ; 
/*--rose_stop_timer--*/
void rose_stop_idletimer ( struct sock * sk ) ; 
/*--rose_stop_idletimer--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rose_register_sysctl ( void ) ; 
/*--rose_register_sysctl--*/
void rose_unregister_sysctl ( void ) ; 
/*--rose_unregister_sysctl--*/
struct rxrpc_call * rxrpc_kernel_begin_call ( struct socket * sock , struct sockaddr_rxrpc * srx , struct key * key , unsigned long user_call_ID , gfp_t gfp ) ; 
/*--rxrpc_kernel_begin_call--*/
void rxrpc_kernel_end_call ( struct rxrpc_call * call ) ; 
/*--rxrpc_kernel_end_call--*/
void rxrpc_kernel_intercept_rx_messages ( struct socket * sock , rxrpc_interceptor_t interceptor ) ; 
/*--rxrpc_kernel_intercept_rx_messages--*/
void rxrpc_accept_incoming_calls ( struct work_struct * work ) ; 
/*--rxrpc_accept_incoming_calls--*/
struct rxrpc_call * rxrpc_accept_call ( struct rxrpc_sock * rx , unsigned long user_call_ID ) ; 
/*--rxrpc_accept_call--*/
int rxrpc_reject_call ( struct rxrpc_sock * rx ) ; 
/*--rxrpc_reject_call--*/
struct rxrpc_call * rxrpc_kernel_accept_call ( struct socket * sock , unsigned long user_call_ID ) ; 
/*--rxrpc_kernel_accept_call--*/
int rxrpc_kernel_reject_call ( struct socket * sock ) ; 
/*--rxrpc_kernel_reject_call--*/
void __rxrpc_propose_ACK ( struct rxrpc_call * call , u8 ack_reason , __be32 serial , bool immediate ) ; 
/*--__rxrpc_propose_ACK--*/
void rxrpc_propose_ACK ( struct rxrpc_call * call , u8 ack_reason , __be32 serial , bool immediate ) ; 
/*--rxrpc_propose_ACK--*/
void rxrpc_process_call ( struct work_struct * work ) ; 
/*--rxrpc_process_call--*/
struct rxrpc_call * rxrpc_get_client_call ( struct rxrpc_sock * rx , struct rxrpc_transport * trans , struct rxrpc_conn_bundle * bundle , unsigned long user_call_ID , int create , gfp_t gfp ) ; 
/*--rxrpc_get_client_call--*/
struct rxrpc_call * rxrpc_incoming_call ( struct rxrpc_sock * rx , struct rxrpc_connection * conn , struct rxrpc_header * hdr , gfp_t gfp ) ; 
/*--rxrpc_incoming_call--*/
struct rxrpc_call * rxrpc_find_server_call ( struct rxrpc_sock * rx , unsigned long user_call_ID ) ; 
/*--rxrpc_find_server_call--*/
void rxrpc_release_call ( struct rxrpc_call * call ) ; 
/*--rxrpc_release_call--*/
void rxrpc_release_calls_on_socket ( struct rxrpc_sock * rx ) ; 
/*--rxrpc_release_calls_on_socket--*/
void __rxrpc_put_call ( struct rxrpc_call * call ) ; 
/*--__rxrpc_put_call--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rxrpc_destroy_all_calls ( void ) ; 
/*--rxrpc_destroy_all_calls--*/
struct rxrpc_conn_bundle * rxrpc_get_bundle ( struct rxrpc_sock * rx , struct rxrpc_transport * trans , struct key * key , __be16 service_id , gfp_t gfp ) ; 
/*--rxrpc_get_bundle--*/
void rxrpc_put_bundle ( struct rxrpc_transport * trans , struct rxrpc_conn_bundle * bundle ) ; 
/*--rxrpc_put_bundle--*/
int rxrpc_connect_call ( struct rxrpc_sock * rx , struct rxrpc_transport * trans , struct rxrpc_conn_bundle * bundle , struct rxrpc_call * call , gfp_t gfp ) ; 
/*--rxrpc_connect_call--*/
struct rxrpc_connection * rxrpc_incoming_connection ( struct rxrpc_transport * trans , struct rxrpc_header * hdr , gfp_t gfp ) ; 
/*--rxrpc_incoming_connection--*/
struct rxrpc_connection * rxrpc_find_connection ( struct rxrpc_transport * trans , struct rxrpc_header * hdr ) ; 
/*--rxrpc_find_connection--*/
void rxrpc_put_connection ( struct rxrpc_connection * conn ) ; 
/*--rxrpc_put_connection--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rxrpc_destroy_all_connections ( void ) ; 
/*--rxrpc_destroy_all_connections--*/
void rxrpc_process_connection ( struct work_struct * work ) ; 
/*--rxrpc_process_connection--*/
void rxrpc_reject_packet ( struct rxrpc_local * local , struct sk_buff * skb ) ; 
/*--rxrpc_reject_packet--*/
void rxrpc_reject_packets ( struct work_struct * work ) ; 
/*--rxrpc_reject_packets--*/
void rxrpc_UDP_error_report ( struct sock * sk ) ; 
/*--rxrpc_UDP_error_report--*/
void rxrpc_UDP_error_handler ( struct work_struct * work ) ; 
/*--rxrpc_UDP_error_handler--*/
int rxrpc_queue_rcv_skb ( struct rxrpc_call * call , struct sk_buff * skb , bool force , bool terminal ) ; 
/*--rxrpc_queue_rcv_skb--*/
void rxrpc_fast_process_packet ( struct rxrpc_call * call , struct sk_buff * skb ) ; 
/*--rxrpc_fast_process_packet--*/
void rxrpc_data_ready ( struct sock * sk , int count ) ; 
/*--rxrpc_data_ready--*/
int rxrpc_request_key ( struct rxrpc_sock * rx , char * optval , int optlen ) ; 
/*--rxrpc_request_key--*/
int rxrpc_server_keyring ( struct rxrpc_sock * rx , char * optval , int optlen ) ; 
/*--rxrpc_server_keyring--*/
int rxrpc_get_server_data_key ( struct rxrpc_connection * conn , const void * session_key , time_t expiry , u32 kvno ) ; 
/*--rxrpc_get_server_data_key--*/
struct key * rxrpc_get_null_key ( const char * keyname ) ; 
/*--rxrpc_get_null_key--*/
struct rxrpc_local * rxrpc_lookup_local ( struct sockaddr_rxrpc * srx ) ; 
/*--rxrpc_lookup_local--*/
void rxrpc_put_local ( struct rxrpc_local * local ) ; 
/*--rxrpc_put_local--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rxrpc_destroy_all_locals ( void ) ; 
/*--rxrpc_destroy_all_locals--*/
int rxrpc_client_sendmsg ( struct kiocb * iocb , struct rxrpc_sock * rx , struct rxrpc_transport * trans , struct msghdr * msg , size_t len ) ; 
/*--rxrpc_client_sendmsg--*/
int rxrpc_kernel_send_data ( struct rxrpc_call * call , struct msghdr * msg , size_t len ) ; 
/*--rxrpc_kernel_send_data--*/
void rxrpc_kernel_abort_call ( struct rxrpc_call * call , u32 abort_code ) ; 
/*--rxrpc_kernel_abort_call--*/
int rxrpc_server_sendmsg ( struct kiocb * iocb , struct rxrpc_sock * rx , struct msghdr * msg , size_t len ) ; 
/*--rxrpc_server_sendmsg--*/
int rxrpc_send_packet ( struct rxrpc_transport * trans , struct sk_buff * skb ) ; 
/*--rxrpc_send_packet--*/
struct rxrpc_peer * rxrpc_get_peer ( struct sockaddr_rxrpc * srx , gfp_t gfp ) ; 
/*--rxrpc_get_peer--*/
struct rxrpc_peer * rxrpc_find_peer ( struct rxrpc_local * local , __be32 addr , __be16 port ) ; 
/*--rxrpc_find_peer--*/
void rxrpc_put_peer ( struct rxrpc_peer * peer ) ; 
/*--rxrpc_put_peer--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rxrpc_destroy_all_peers ( void ) ; 
/*--rxrpc_destroy_all_peers--*/
void rxrpc_remove_user_ID ( struct rxrpc_sock * rx , struct rxrpc_call * call ) ; 
/*--rxrpc_remove_user_ID--*/
int rxrpc_recvmsg ( struct kiocb * iocb , struct socket * sock , struct msghdr * msg , size_t len , int flags ) ; 
/*--rxrpc_recvmsg--*/
void rxrpc_kernel_data_delivered ( struct sk_buff * skb ) ; 
/*--rxrpc_kernel_data_delivered--*/
bool rxrpc_kernel_is_data_last ( struct sk_buff * skb ) ; 
/*--rxrpc_kernel_is_data_last--*/
u32 rxrpc_kernel_get_abort_code ( struct sk_buff * skb ) ; 
/*--rxrpc_kernel_get_abort_code--*/
int rxrpc_kernel_get_error_number ( struct sk_buff * skb ) ; 
/*--rxrpc_kernel_get_error_number--*/
int rxrpc_register_security ( struct rxrpc_security * sec ) ; 
/*--rxrpc_register_security--*/
void rxrpc_unregister_security ( struct rxrpc_security * sec ) ; 
/*--rxrpc_unregister_security--*/
int rxrpc_init_client_conn_security ( struct rxrpc_connection * conn ) ; 
/*--rxrpc_init_client_conn_security--*/
int rxrpc_init_server_conn_security ( struct rxrpc_connection * conn ) ; 
/*--rxrpc_init_server_conn_security--*/
int rxrpc_secure_packet ( const struct rxrpc_call * call , struct sk_buff * skb , size_t data_size , void * sechdr ) ; 
/*--rxrpc_secure_packet--*/
int rxrpc_verify_packet ( const struct rxrpc_call * call , struct sk_buff * skb , u32 * _abort_code ) ; 
/*--rxrpc_verify_packet--*/
void rxrpc_clear_conn_security ( struct rxrpc_connection * conn ) ; 
/*--rxrpc_clear_conn_security--*/
void rxrpc_packet_destructor ( struct sk_buff * skb ) ; 
/*--rxrpc_packet_destructor--*/
void rxrpc_kernel_free_skb ( struct sk_buff * skb ) ; 
/*--rxrpc_kernel_free_skb--*/
struct rxrpc_transport * rxrpc_get_transport ( struct rxrpc_local * local , struct rxrpc_peer * peer , gfp_t gfp ) ; 
/*--rxrpc_get_transport--*/
struct rxrpc_transport * rxrpc_find_transport ( struct rxrpc_local * local , struct rxrpc_peer * peer ) ; 
/*--rxrpc_find_transport--*/
void rxrpc_put_transport ( struct rxrpc_transport * trans ) ; 
/*--rxrpc_put_transport--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rxrpc_destroy_all_transports ( void ) ; 
/*--rxrpc_destroy_all_transports--*/
const sctp_sm_table_entry_t * sctp_sm_lookup_event ( sctp_event_t event_type , sctp_state_t state , sctp_subtype_t event_subtype ) ; 
/*--sctp_sm_lookup_event--*/
sctp_disposition_t sctp_sf_do_4_C ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_4_C--*/
sctp_disposition_t sctp_sf_do_5_1B_init ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_5_1B_init--*/
sctp_disposition_t sctp_sf_do_5_1C_ack ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_5_1C_ack--*/
sctp_disposition_t sctp_sf_do_5_1D_ce ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_5_1D_ce--*/
sctp_disposition_t sctp_sf_do_5_1E_ca ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_5_1E_ca--*/
sctp_disposition_t sctp_sf_sendbeat_8_3 ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_sendbeat_8_3--*/
sctp_disposition_t sctp_sf_beat_8_3 ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_beat_8_3--*/
sctp_disposition_t sctp_sf_backbeat_8_3 ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_backbeat_8_3--*/
sctp_disposition_t sctp_sf_do_5_2_1_siminit ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_5_2_1_siminit--*/
sctp_disposition_t sctp_sf_do_5_2_2_dupinit ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_5_2_2_dupinit--*/
sctp_disposition_t sctp_sf_do_5_2_3_initack ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_5_2_3_initack--*/
sctp_disposition_t sctp_sf_do_5_2_4_dupcook ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_5_2_4_dupcook--*/
sctp_disposition_t sctp_sf_shutdown_pending_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_shutdown_pending_abort--*/
sctp_disposition_t sctp_sf_shutdown_sent_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_shutdown_sent_abort--*/
sctp_disposition_t sctp_sf_shutdown_ack_sent_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_shutdown_ack_sent_abort--*/
sctp_disposition_t sctp_sf_cookie_echoed_err ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_cookie_echoed_err--*/
sctp_disposition_t sctp_sf_do_9_1_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_1_abort--*/
sctp_disposition_t sctp_sf_cookie_wait_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_cookie_wait_abort--*/
sctp_disposition_t sctp_sf_cookie_wait_icmp_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_cookie_wait_icmp_abort--*/
sctp_disposition_t sctp_sf_cookie_echoed_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_cookie_echoed_abort--*/
sctp_disposition_t sctp_sf_do_9_2_shutdown ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_2_shutdown--*/
sctp_disposition_t sctp_sf_do_9_2_shut_ctsn ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_2_shut_ctsn--*/
sctp_disposition_t sctp_sf_do_9_2_reshutack ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_2_reshutack--*/
sctp_disposition_t sctp_sf_do_ecn_cwr ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_ecn_cwr--*/
sctp_disposition_t sctp_sf_do_ecne ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_ecne--*/
sctp_disposition_t sctp_sf_eat_data_6_2 ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_eat_data_6_2--*/
sctp_disposition_t sctp_sf_eat_data_fast_4_4 ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_eat_data_fast_4_4--*/
sctp_disposition_t sctp_sf_eat_sack_6_2 ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_eat_sack_6_2--*/
sctp_disposition_t sctp_sf_operr_notify ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_operr_notify--*/
sctp_disposition_t sctp_sf_do_9_2_final ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_2_final--*/
sctp_disposition_t sctp_sf_ootb ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_ootb--*/
sctp_disposition_t sctp_sf_do_8_5_1_E_sa ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_8_5_1_E_sa--*/
sctp_disposition_t sctp_sf_do_asconf ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_asconf--*/
sctp_disposition_t sctp_sf_do_asconf_ack ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_asconf_ack--*/
sctp_disposition_t sctp_sf_eat_fwd_tsn ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_eat_fwd_tsn--*/
sctp_disposition_t sctp_sf_eat_fwd_tsn_fast ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_eat_fwd_tsn_fast--*/
sctp_disposition_t sctp_sf_eat_auth ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_eat_auth--*/
sctp_disposition_t sctp_sf_unk_chunk ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_unk_chunk--*/
sctp_disposition_t sctp_sf_discard_chunk ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_discard_chunk--*/
sctp_disposition_t sctp_sf_pdiscard ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_pdiscard--*/
sctp_disposition_t sctp_sf_violation ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_violation--*/
sctp_disposition_t sctp_sf_do_prm_asoc ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_prm_asoc--*/
sctp_disposition_t sctp_sf_do_prm_send ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_prm_send--*/
sctp_disposition_t sctp_sf_do_9_2_prm_shutdown ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_2_prm_shutdown--*/
sctp_disposition_t sctp_sf_do_9_1_prm_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_1_prm_abort--*/
sctp_disposition_t sctp_sf_error_closed ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_error_closed--*/
sctp_disposition_t sctp_sf_error_shutdown ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_error_shutdown--*/
sctp_disposition_t sctp_sf_cookie_wait_prm_shutdown ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_cookie_wait_prm_shutdown--*/
sctp_disposition_t sctp_sf_cookie_echoed_prm_shutdown ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_cookie_echoed_prm_shutdown--*/
sctp_disposition_t sctp_sf_cookie_wait_prm_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_cookie_wait_prm_abort--*/
sctp_disposition_t sctp_sf_cookie_echoed_prm_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_cookie_echoed_prm_abort--*/
sctp_disposition_t sctp_sf_shutdown_pending_prm_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_shutdown_pending_prm_abort--*/
sctp_disposition_t sctp_sf_shutdown_sent_prm_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_shutdown_sent_prm_abort--*/
sctp_disposition_t sctp_sf_shutdown_ack_sent_prm_abort ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_shutdown_ack_sent_prm_abort--*/
sctp_disposition_t sctp_sf_do_prm_requestheartbeat ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_prm_requestheartbeat--*/
sctp_disposition_t sctp_sf_do_prm_asconf ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_prm_asconf--*/
sctp_disposition_t sctp_sf_ignore_primitive ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_ignore_primitive--*/
sctp_disposition_t sctp_sf_do_9_2_start_shutdown ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_2_start_shutdown--*/
sctp_disposition_t sctp_sf_do_9_2_shutdown_ack ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_9_2_shutdown_ack--*/
sctp_disposition_t sctp_sf_ignore_other ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_ignore_other--*/
sctp_disposition_t sctp_sf_do_6_3_3_rtx ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_6_3_3_rtx--*/
sctp_disposition_t sctp_sf_do_6_2_sack ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_do_6_2_sack--*/
sctp_disposition_t sctp_sf_t1_init_timer_expire ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_t1_init_timer_expire--*/
sctp_disposition_t sctp_sf_t1_cookie_timer_expire ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_t1_cookie_timer_expire--*/
sctp_disposition_t sctp_sf_t2_timer_expire ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_t2_timer_expire--*/
sctp_disposition_t sctp_sf_t4_timer_expire ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_t4_timer_expire--*/
sctp_disposition_t sctp_sf_t5_timer_expire ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_t5_timer_expire--*/
sctp_disposition_t sctp_sf_autoclose_timer_expire ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_autoclose_timer_expire--*/
sctp_disposition_t sctp_sf_not_impl ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_not_impl--*/
sctp_disposition_t sctp_sf_bug ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_bug--*/
sctp_disposition_t sctp_sf_timer_ignore ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , const sctp_subtype_t type , void * arg , sctp_cmd_seq_t * commands ) ; 
/*--sctp_sf_timer_ignore--*/
void sctp_ootb_pkt_free ( struct sctp_packet * packet ) ; 
/*--sctp_ootb_pkt_free--*/
void sctp_generate_t3_rtx_event ( unsigned long peer ) ; 
/*--sctp_generate_t3_rtx_event--*/
void sctp_generate_heartbeat_event ( unsigned long data ) ; 
/*--sctp_generate_heartbeat_event--*/
void sctp_generate_proto_unreach_event ( unsigned long data ) ; 
/*--sctp_generate_proto_unreach_event--*/
int sctp_do_sm ( sctp_event_t event_type , sctp_subtype_t subtype , sctp_state_t state , struct sctp_endpoint * ep , struct sctp_association * asoc , void * event_arg , gfp_t gfp ) ; 
/*--sctp_do_sm--*/
struct sock * sctp_get_ctl_sock ( void ) ; 
/*--sctp_get_ctl_sock--*/
void sctp_local_addr_free ( struct rcu_head * head ) ; 
/*--sctp_local_addr_free--*/
int sctp_copy_local_addr_list ( struct sctp_bind_addr * bp , sctp_scope_t scope , gfp_t gfp , int copy_flags ) ; 
/*--sctp_copy_local_addr_list--*/
int sctp_register_af ( struct sctp_af * af ) ; 
/*--sctp_register_af--*/
struct sctp_af * sctp_get_af_specific ( sa_family_t family ) ; 
/*--sctp_get_af_specific--*/
struct sctp_pf * sctp_get_pf_specific ( sa_family_t family ) ; 
/*--sctp_get_pf_specific--*/
int sctp_register_pf ( struct sctp_pf * pf , sa_family_t family ) ; 
/*--sctp_register_pf--*/
struct sctp_endpoint * sctp_endpoint_new ( struct sock * sk , gfp_t gfp ) ; 
/*--sctp_endpoint_new--*/
void sctp_endpoint_add_asoc ( struct sctp_endpoint * ep , struct sctp_association * asoc ) ; 
/*--sctp_endpoint_add_asoc--*/
void sctp_endpoint_free ( struct sctp_endpoint * ep ) ; 
/*--sctp_endpoint_free--*/
void sctp_endpoint_hold ( struct sctp_endpoint * ep ) ; 
/*--sctp_endpoint_hold--*/
void sctp_endpoint_put ( struct sctp_endpoint * ep ) ; 
/*--sctp_endpoint_put--*/
struct sctp_endpoint * sctp_endpoint_is_match ( struct sctp_endpoint * ep , const union sctp_addr * laddr ) ; 
/*--sctp_endpoint_is_match--*/
struct sctp_association * sctp_endpoint_lookup_assoc ( const struct sctp_endpoint * ep , const union sctp_addr * paddr , struct sctp_transport * * transport ) ; 
/*--sctp_endpoint_lookup_assoc--*/
int sctp_endpoint_is_peeled_off ( struct sctp_endpoint * ep , const union sctp_addr * paddr ) ; 
/*--sctp_endpoint_is_peeled_off--*/
struct sctp_association * sctp_association_new ( const struct sctp_endpoint * ep , const struct sock * sk , sctp_scope_t scope , gfp_t gfp ) ; 
/*--sctp_association_new--*/
void sctp_association_free ( struct sctp_association * asoc ) ; 
/*--sctp_association_free--*/
void sctp_assoc_set_primary ( struct sctp_association * asoc , struct sctp_transport * transport ) ; 
/*--sctp_assoc_set_primary--*/
void sctp_assoc_rm_peer ( struct sctp_association * asoc , struct sctp_transport * peer ) ; 
/*--sctp_assoc_rm_peer--*/
struct sctp_transport * sctp_assoc_add_peer ( struct sctp_association * asoc , const union sctp_addr * addr , const gfp_t gfp , const int peer_state ) ; 
/*--sctp_assoc_add_peer--*/
void sctp_assoc_del_peer ( struct sctp_association * asoc , const union sctp_addr * addr ) ; 
/*--sctp_assoc_del_peer--*/
struct sctp_transport * sctp_assoc_lookup_paddr ( const struct sctp_association * asoc , const union sctp_addr * address ) ; 
/*--sctp_assoc_lookup_paddr--*/
void sctp_assoc_del_nonprimary_peers ( struct sctp_association * asoc , struct sctp_transport * primary ) ; 
/*--sctp_assoc_del_nonprimary_peers--*/
void sctp_assoc_control_transport ( struct sctp_association * asoc , struct sctp_transport * transport , sctp_transport_cmd_t command , sctp_sn_error_t error ) ; 
/*--sctp_assoc_control_transport--*/
void sctp_association_hold ( struct sctp_association * asoc ) ; 
/*--sctp_association_hold--*/
void sctp_association_put ( struct sctp_association * asoc ) ; 
/*--sctp_association_put--*/
__u32 sctp_association_get_next_tsn ( struct sctp_association * asoc ) ; 
/*--sctp_association_get_next_tsn--*/
int sctp_cmp_addr_exact ( const union sctp_addr * ss1 , const union sctp_addr * ss2 ) ; 
/*--sctp_cmp_addr_exact--*/
struct sctp_chunk * sctp_get_ecne_prepend ( struct sctp_association * asoc ) ; 
/*--sctp_get_ecne_prepend--*/
struct sctp_transport * sctp_assoc_lookup_tsn ( struct sctp_association * asoc , __u32 tsn ) ; 
/*--sctp_assoc_lookup_tsn--*/
struct sctp_transport * sctp_assoc_is_match ( struct sctp_association * asoc , const union sctp_addr * laddr , const union sctp_addr * paddr ) ; 
/*--sctp_assoc_is_match--*/
void sctp_assoc_migrate ( struct sctp_association * assoc , struct sock * newsk ) ; 
/*--sctp_assoc_migrate--*/
void sctp_assoc_update ( struct sctp_association * asoc , struct sctp_association * new ) ; 
/*--sctp_assoc_update--*/
void sctp_assoc_update_retran_path ( struct sctp_association * asoc ) ; 
/*--sctp_assoc_update_retran_path--*/
struct sctp_transport * sctp_assoc_choose_alter_transport ( struct sctp_association * asoc , struct sctp_transport * last_sent_to ) ; 
/*--sctp_assoc_choose_alter_transport--*/
void sctp_assoc_sync_pmtu ( struct sctp_association * asoc ) ; 
/*--sctp_assoc_sync_pmtu--*/
void sctp_assoc_rwnd_increase ( struct sctp_association * asoc , unsigned len ) ; 
/*--sctp_assoc_rwnd_increase--*/
void sctp_assoc_rwnd_decrease ( struct sctp_association * asoc , unsigned len ) ; 
/*--sctp_assoc_rwnd_decrease--*/
int sctp_assoc_set_bind_addr_from_ep ( struct sctp_association * asoc , sctp_scope_t scope , gfp_t gfp ) ; 
/*--sctp_assoc_set_bind_addr_from_ep--*/
int sctp_assoc_set_bind_addr_from_cookie ( struct sctp_association * asoc , struct sctp_cookie * cookie , gfp_t gfp ) ; 
/*--sctp_assoc_set_bind_addr_from_cookie--*/
int sctp_assoc_lookup_laddr ( struct sctp_association * asoc , const union sctp_addr * laddr ) ; 
/*--sctp_assoc_lookup_laddr--*/
int sctp_assoc_set_id ( struct sctp_association * asoc , gfp_t gfp ) ; 
/*--sctp_assoc_set_id--*/
void sctp_assoc_clean_asconf_ack_cache ( const struct sctp_association * asoc ) ; 
/*--sctp_assoc_clean_asconf_ack_cache--*/
struct sctp_chunk * sctp_assoc_lookup_asconf_ack ( const struct sctp_association * asoc , __be32 serial ) ; 
/*--sctp_assoc_lookup_asconf_ack--*/
struct sctp_transport * sctp_transport_new ( const union sctp_addr * addr , gfp_t gfp ) ; 
/*--sctp_transport_new--*/
void sctp_transport_free ( struct sctp_transport * transport ) ; 
/*--sctp_transport_free--*/
void sctp_transport_reset_timers ( struct sctp_transport * transport ) ; 
/*--sctp_transport_reset_timers--*/
void sctp_transport_set_owner ( struct sctp_transport * transport , struct sctp_association * asoc ) ; 
/*--sctp_transport_set_owner--*/
void sctp_transport_pmtu ( struct sctp_transport * transport ) ; 
/*--sctp_transport_pmtu--*/
void sctp_transport_update_pmtu ( struct sctp_transport * t , u32 pmtu ) ; 
/*--sctp_transport_update_pmtu--*/
void sctp_transport_route ( struct sctp_transport * transport , union sctp_addr * saddr , struct sctp_sock * opt ) ; 
/*--sctp_transport_route--*/
void sctp_transport_hold ( struct sctp_transport * transport ) ; 
/*--sctp_transport_hold--*/
void sctp_transport_put ( struct sctp_transport * transport ) ; 
/*--sctp_transport_put--*/
void sctp_transport_update_rto ( struct sctp_transport * tp , __u32 rtt ) ; 
/*--sctp_transport_update_rto--*/
void sctp_transport_raise_cwnd ( struct sctp_transport * transport , __u32 sack_ctsn , __u32 bytes_acked ) ; 
/*--sctp_transport_raise_cwnd--*/
void sctp_transport_lower_cwnd ( struct sctp_transport * transport , sctp_lower_cwnd_t reason ) ; 
/*--sctp_transport_lower_cwnd--*/
void sctp_transport_burst_limited ( struct sctp_transport * t ) ; 
/*--sctp_transport_burst_limited--*/
void sctp_transport_burst_reset ( struct sctp_transport * t ) ; 
/*--sctp_transport_burst_reset--*/
unsigned long sctp_transport_timeout ( struct sctp_transport * t ) ; 
/*--sctp_transport_timeout--*/
void sctp_transport_reset ( struct sctp_transport * t ) ; 
/*--sctp_transport_reset--*/
void sctp_datamsg_free ( struct sctp_datamsg * msg ) ; 
/*--sctp_datamsg_free--*/
void sctp_datamsg_put ( struct sctp_datamsg * msg ) ; 
/*--sctp_datamsg_put--*/
struct sctp_datamsg * sctp_datamsg_from_user ( struct sctp_association * asoc , struct sctp_sndrcvinfo * sinfo , struct msghdr * msgh , int msg_len ) ; 
/*--sctp_datamsg_from_user--*/
int sctp_chunk_abandoned ( struct sctp_chunk * chunk ) ; 
/*--sctp_chunk_abandoned--*/
void sctp_chunk_fail ( struct sctp_chunk * chunk , int error ) ; 
/*--sctp_chunk_fail--*/
int sctp_chunk_iif ( const struct sctp_chunk * chunk ) ; 
/*--sctp_chunk_iif--*/
void sctp_init_cause ( struct sctp_chunk * chunk , __be16 cause_code , size_t paylen ) ; 
/*--sctp_init_cause--*/
int sctp_init_cause_fixed ( struct sctp_chunk * chunk , __be16 cause_code , size_t paylen ) ; 
/*--sctp_init_cause_fixed--*/
struct sctp_chunk * sctp_make_init ( const struct sctp_association * asoc , const struct sctp_bind_addr * bp , gfp_t gfp , int vparam_len ) ; 
/*--sctp_make_init--*/
struct sctp_chunk * sctp_make_init_ack ( const struct sctp_association * asoc , const struct sctp_chunk * chunk , gfp_t gfp , int unkparam_len ) ; 
/*--sctp_make_init_ack--*/
struct sctp_chunk * sctp_make_cookie_echo ( const struct sctp_association * asoc , const struct sctp_chunk * chunk ) ; 
/*--sctp_make_cookie_echo--*/
struct sctp_chunk * sctp_make_cookie_ack ( const struct sctp_association * asoc , const struct sctp_chunk * chunk ) ; 
/*--sctp_make_cookie_ack--*/
struct sctp_chunk * sctp_make_cwr ( const struct sctp_association * asoc , const __u32 lowest_tsn , const struct sctp_chunk * chunk ) ; 
/*--sctp_make_cwr--*/
struct sctp_chunk * sctp_make_ecne ( const struct sctp_association * asoc , const __u32 lowest_tsn ) ; 
/*--sctp_make_ecne--*/
struct sctp_chunk * sctp_make_datafrag_empty ( struct sctp_association * asoc , const struct sctp_sndrcvinfo * sinfo , int data_len , __u8 flags , __u16 ssn ) ; 
/*--sctp_make_datafrag_empty--*/
struct sctp_chunk * sctp_make_sack ( const struct sctp_association * asoc ) ; 
/*--sctp_make_sack--*/
struct sctp_chunk * sctp_make_shutdown ( const struct sctp_association * asoc , const struct sctp_chunk * chunk ) ; 
/*--sctp_make_shutdown--*/
struct sctp_chunk * sctp_make_shutdown_ack ( const struct sctp_association * asoc , const struct sctp_chunk * chunk ) ; 
/*--sctp_make_shutdown_ack--*/
struct sctp_chunk * sctp_make_shutdown_complete ( const struct sctp_association * asoc , const struct sctp_chunk * chunk ) ; 
/*--sctp_make_shutdown_complete--*/
struct sctp_chunk * sctp_make_abort ( const struct sctp_association * asoc , const struct sctp_chunk * chunk , const size_t hint ) ; 
/*--sctp_make_abort--*/
struct sctp_chunk * sctp_make_abort_no_data ( const struct sctp_association * asoc , const struct sctp_chunk * chunk , __u32 tsn ) ; 
/*--sctp_make_abort_no_data--*/
struct sctp_chunk * sctp_make_abort_user ( const struct sctp_association * asoc , const struct msghdr * msg , size_t paylen ) ; 
/*--sctp_make_abort_user--*/
struct sctp_chunk * sctp_make_abort_violation ( const struct sctp_association * asoc , const struct sctp_chunk * chunk , const __u8 * payload , const size_t paylen ) ; 
/*--sctp_make_abort_violation--*/
struct sctp_chunk * sctp_make_violation_paramlen ( const struct sctp_association * asoc , const struct sctp_chunk * chunk , struct sctp_paramhdr * param ) ; 
/*--sctp_make_violation_paramlen--*/
struct sctp_chunk * sctp_make_heartbeat ( const struct sctp_association * asoc , const struct sctp_transport * transport , const void * payload , const size_t paylen ) ; 
/*--sctp_make_heartbeat--*/
struct sctp_chunk * sctp_make_heartbeat_ack ( const struct sctp_association * asoc , const struct sctp_chunk * chunk , const void * payload , const size_t paylen ) ; 
/*--sctp_make_heartbeat_ack--*/
struct sctp_chunk * sctp_make_op_error ( const struct sctp_association * asoc , const struct sctp_chunk * chunk , __be16 cause_code , const void * payload , size_t paylen , size_t reserve_tail ) ; 
/*--sctp_make_op_error--*/
struct sctp_chunk * sctp_make_auth ( const struct sctp_association * asoc ) ; 
/*--sctp_make_auth--*/
struct sctp_chunk * sctp_chunkify ( struct sk_buff * skb , const struct sctp_association * asoc , struct sock * sk ) ; 
/*--sctp_chunkify--*/
void sctp_init_addrs ( struct sctp_chunk * chunk , union sctp_addr * src , union sctp_addr * dest ) ; 
/*--sctp_init_addrs--*/
const union sctp_addr * sctp_source ( const struct sctp_chunk * chunk ) ; 
/*--sctp_source--*/
void sctp_chunk_free ( struct sctp_chunk * chunk ) ; 
/*--sctp_chunk_free--*/
void sctp_chunk_hold ( struct sctp_chunk * ch ) ; 
/*--sctp_chunk_hold--*/
void sctp_chunk_put ( struct sctp_chunk * ch ) ; 
/*--sctp_chunk_put--*/
void * sctp_addto_chunk ( struct sctp_chunk * chunk , int len , const void * data ) ; 
/*--sctp_addto_chunk--*/
void * sctp_addto_chunk_fixed ( struct sctp_chunk * chunk , int len , const void * data ) ; 
/*--sctp_addto_chunk_fixed--*/
int sctp_user_addto_chunk ( struct sctp_chunk * chunk , int off , int len , struct iovec * data ) ; 
/*--sctp_user_addto_chunk--*/
void sctp_chunk_assign_ssn ( struct sctp_chunk * chunk ) ; 
/*--sctp_chunk_assign_ssn--*/
void sctp_chunk_assign_tsn ( struct sctp_chunk * chunk ) ; 
/*--sctp_chunk_assign_tsn--*/
struct sctp_association * sctp_make_temp_asoc ( const struct sctp_endpoint * ep , struct sctp_chunk * chunk , gfp_t gfp ) ; 
/*--sctp_make_temp_asoc--*/
struct sctp_association * sctp_unpack_cookie ( const struct sctp_endpoint * ep , const struct sctp_association * asoc , struct sctp_chunk * chunk , gfp_t gfp , int * error , struct sctp_chunk * * errp ) ; 
/*--sctp_unpack_cookie--*/
int sctp_verify_init ( const struct sctp_association * asoc , sctp_cid_t cid , sctp_init_chunk_t * peer_init , struct sctp_chunk * chunk , struct sctp_chunk * * errp ) ; 
/*--sctp_verify_init--*/
int sctp_process_init ( struct sctp_association * asoc , sctp_cid_t cid , const union sctp_addr * peer_addr , sctp_init_chunk_t * peer_init , gfp_t gfp ) ; 
/*--sctp_process_init--*/
__u32 sctp_generate_tag ( const struct sctp_endpoint * ep ) ; 
/*--sctp_generate_tag--*/
__u32 sctp_generate_tsn ( const struct sctp_endpoint * ep ) ; 
/*--sctp_generate_tsn--*/
struct sctp_chunk * sctp_make_asconf_update_ip ( struct sctp_association * asoc , union sctp_addr * laddr , struct sockaddr * addrs , int addrcnt , __be16 flags ) ; 
/*--sctp_make_asconf_update_ip--*/
struct sctp_chunk * sctp_make_asconf_set_prim ( struct sctp_association * asoc , union sctp_addr * addr ) ; 
/*--sctp_make_asconf_set_prim--*/
int sctp_verify_asconf ( const struct sctp_association * asoc , struct sctp_paramhdr * param_hdr , void * chunk_end , struct sctp_paramhdr * * errp ) ; 
/*--sctp_verify_asconf--*/
struct sctp_chunk * sctp_process_asconf ( struct sctp_association * asoc , struct sctp_chunk * asconf ) ; 
/*--sctp_process_asconf--*/
int sctp_process_asconf_ack ( struct sctp_association * asoc , struct sctp_chunk * asconf_ack ) ; 
/*--sctp_process_asconf_ack--*/
struct sctp_chunk * sctp_make_fwdtsn ( const struct sctp_association * asoc , __u32 new_cum_tsn , size_t nstreams , struct sctp_fwdtsn_skip * skiplist ) ; 
/*--sctp_make_fwdtsn--*/
int sctp_ulpevent_is_notification ( const struct sctp_ulpevent * event ) ; 
/*--sctp_ulpevent_is_notification--*/
struct sctp_ulpevent * sctp_ulpevent_make_assoc_change ( const struct sctp_association * asoc , __u16 flags , __u16 state , __u16 error , __u16 outbound , __u16 inbound , struct sctp_chunk * chunk , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_assoc_change--*/
struct sctp_ulpevent * sctp_ulpevent_make_peer_addr_change ( const struct sctp_association * asoc , const struct __kernel_sockaddr_storage * aaddr , int flags , int state , int error , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_peer_addr_change--*/
struct sctp_ulpevent * sctp_ulpevent_make_remote_error ( const struct sctp_association * asoc , struct sctp_chunk * chunk , __u16 flags , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_remote_error--*/
struct sctp_ulpevent * sctp_ulpevent_make_send_failed ( const struct sctp_association * asoc , struct sctp_chunk * chunk , __u16 flags , __u32 error , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_send_failed--*/
struct sctp_ulpevent * sctp_ulpevent_make_shutdown_event ( const struct sctp_association * asoc , __u16 flags , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_shutdown_event--*/
struct sctp_ulpevent * sctp_ulpevent_make_adaptation_indication ( const struct sctp_association * asoc , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_adaptation_indication--*/
struct sctp_ulpevent * sctp_ulpevent_make_rcvmsg ( struct sctp_association * asoc , struct sctp_chunk * chunk , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_rcvmsg--*/
struct sctp_ulpevent * sctp_ulpevent_make_pdapi ( const struct sctp_association * asoc , __u32 indication , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_pdapi--*/
struct sctp_ulpevent * sctp_ulpevent_make_authkey ( const struct sctp_association * asoc , __u16 key_id , __u32 indication , gfp_t gfp ) ; 
/*--sctp_ulpevent_make_authkey--*/
__u16 sctp_ulpevent_get_notification_type ( const struct sctp_ulpevent * event ) ; 
/*--sctp_ulpevent_get_notification_type--*/
void sctp_ulpevent_read_sndrcvinfo ( const struct sctp_ulpevent * event , struct msghdr * msghdr ) ; 
/*--sctp_ulpevent_read_sndrcvinfo--*/
void sctp_ulpevent_free ( struct sctp_ulpevent * event ) ; 
/*--sctp_ulpevent_free--*/
void sctp_queue_purge_ulpevents ( struct sk_buff_head * list ) ; 
/*--sctp_queue_purge_ulpevents--*/
void sctp_inq_init ( struct sctp_inq * queue ) ; 
/*--sctp_inq_init--*/
void sctp_inq_free ( struct sctp_inq * queue ) ; 
/*--sctp_inq_free--*/
void sctp_inq_push ( struct sctp_inq * q , struct sctp_chunk * chunk ) ; 
/*--sctp_inq_push--*/
struct sctp_chunkhdr * sctp_inq_peek ( struct sctp_inq * queue ) ; 
/*--sctp_inq_peek--*/
struct sctp_chunk * sctp_inq_pop ( struct sctp_inq * queue ) ; 
/*--sctp_inq_pop--*/
void sctp_inq_set_th_handler ( struct sctp_inq * q , work_func_t callback ) ; 
/*--sctp_inq_set_th_handler--*/
void sctp_outq_init ( struct sctp_association * asoc , struct sctp_outq * q ) ; 
/*--sctp_outq_init--*/
void sctp_outq_teardown ( struct sctp_outq * q ) ; 
/*--sctp_outq_teardown--*/
void sctp_outq_free ( struct sctp_outq * q ) ; 
/*--sctp_outq_free--*/
int sctp_outq_tail ( struct sctp_outq * q , struct sctp_chunk * chunk ) ; 
/*--sctp_outq_tail--*/
void sctp_retransmit_mark ( struct sctp_outq * q , struct sctp_transport * transport , __u8 reason ) ; 
/*--sctp_retransmit_mark--*/
void sctp_retransmit ( struct sctp_outq * q , struct sctp_transport * transport , sctp_retransmit_reason_t reason ) ; 
/*--sctp_retransmit--*/
int sctp_outq_uncork ( struct sctp_outq * q ) ; 
/*--sctp_outq_uncork--*/
int sctp_outq_sack ( struct sctp_outq * q , struct sctp_sackhdr * sack ) ; 
/*--sctp_outq_sack--*/
int sctp_outq_is_empty ( const struct sctp_outq * q ) ; 
/*--sctp_outq_is_empty--*/
struct sctp_ulpq * sctp_ulpq_init ( struct sctp_ulpq * ulpq , struct sctp_association * asoc ) ; 
/*--sctp_ulpq_init--*/
void sctp_ulpq_flush ( struct sctp_ulpq * ulpq ) ; 
/*--sctp_ulpq_flush--*/
void sctp_ulpq_free ( struct sctp_ulpq * ulpq ) ; 
/*--sctp_ulpq_free--*/
int sctp_ulpq_tail_data ( struct sctp_ulpq * ulpq , struct sctp_chunk * chunk , gfp_t gfp ) ; 
/*--sctp_ulpq_tail_data--*/
int sctp_clear_pd ( struct sock * sk , struct sctp_association * asoc ) ; 
/*--sctp_clear_pd--*/
int sctp_ulpq_tail_event ( struct sctp_ulpq * ulpq , struct sctp_ulpevent * event ) ; 
/*--sctp_ulpq_tail_event--*/
void sctp_ulpq_reasm_flushtsn ( struct sctp_ulpq * ulpq , __u32 fwd_tsn ) ; 
/*--sctp_ulpq_reasm_flushtsn--*/
void sctp_ulpq_skip ( struct sctp_ulpq * ulpq , __u16 sid , __u16 ssn ) ; 
/*--sctp_ulpq_skip--*/
void sctp_ulpq_partial_delivery ( struct sctp_ulpq * ulpq , struct sctp_chunk * chunk , gfp_t gfp ) ; 
/*--sctp_ulpq_partial_delivery--*/
void sctp_ulpq_renege ( struct sctp_ulpq * ulpq , struct sctp_chunk * chunk , gfp_t gfp ) ; 
/*--sctp_ulpq_renege--*/
void sctp_ulpq_abort_pd ( struct sctp_ulpq * ulpq , gfp_t gfp ) ; 
/*--sctp_ulpq_abort_pd--*/
int sctp_init_cmd_seq ( sctp_cmd_seq_t * seq ) ; 
/*--sctp_init_cmd_seq--*/
void sctp_add_cmd_sf ( sctp_cmd_seq_t * seq , sctp_verb_t verb , sctp_arg_t obj ) ; 
/*--sctp_add_cmd_sf--*/
sctp_cmd_t * sctp_next_cmd ( sctp_cmd_seq_t * seq ) ; 
/*--sctp_next_cmd--*/
struct sctp_tsnmap * sctp_tsnmap_init ( struct sctp_tsnmap * map , __u16 len , __u32 initial_tsn , gfp_t gfp ) ; 
/*--sctp_tsnmap_init--*/
void sctp_tsnmap_free ( struct sctp_tsnmap * map ) ; 
/*--sctp_tsnmap_free--*/
int sctp_tsnmap_check ( const struct sctp_tsnmap * map , __u32 tsn ) ; 
/*--sctp_tsnmap_check--*/
int sctp_tsnmap_mark ( struct sctp_tsnmap * map , __u32 tsn ) ; 
/*--sctp_tsnmap_mark--*/
void sctp_tsnmap_skip ( struct sctp_tsnmap * map , __u32 tsn ) ; 
/*--sctp_tsnmap_skip--*/
__u16 sctp_tsnmap_pending ( struct sctp_tsnmap * map ) ; 
/*--sctp_tsnmap_pending--*/
void sctp_tsnmap_renege ( struct sctp_tsnmap * map , __u32 tsn ) ; 
/*--sctp_tsnmap_renege--*/
__u16 sctp_tsnmap_num_gabs ( struct sctp_tsnmap * map , struct sctp_gap_ack_block * gabs ) ; 
/*--sctp_tsnmap_num_gabs--*/
int sctp_bind_addr_copy ( struct sctp_bind_addr * dest , const struct sctp_bind_addr * src , sctp_scope_t scope , gfp_t gfp , int flags ) ; 
/*--sctp_bind_addr_copy--*/
int sctp_bind_addr_dup ( struct sctp_bind_addr * dest , const struct sctp_bind_addr * src , gfp_t gfp ) ; 
/*--sctp_bind_addr_dup--*/
void sctp_bind_addr_init ( struct sctp_bind_addr * bp , __u16 port ) ; 
/*--sctp_bind_addr_init--*/
void sctp_bind_addr_free ( struct sctp_bind_addr * bp ) ; 
/*--sctp_bind_addr_free--*/
int sctp_add_bind_addr ( struct sctp_bind_addr * bp , union sctp_addr * new , __u8 addr_state , gfp_t gfp ) ; 
/*--sctp_add_bind_addr--*/
int sctp_del_bind_addr ( struct sctp_bind_addr * bp , union sctp_addr * del_addr ) ; 
/*--sctp_del_bind_addr--*/
union sctp_params sctp_bind_addrs_to_raw ( const struct sctp_bind_addr * bp , int * addrs_len , gfp_t gfp ) ; 
/*--sctp_bind_addrs_to_raw--*/
int sctp_raw_to_bind_addrs ( struct sctp_bind_addr * bp , __u8 * raw_addr_list , int addrs_len , __u16 port , gfp_t gfp ) ; 
/*--sctp_raw_to_bind_addrs--*/
int sctp_bind_addr_match ( struct sctp_bind_addr * bp , const union sctp_addr * addr , struct sctp_sock * opt ) ; 
/*--sctp_bind_addr_match--*/
int sctp_bind_addr_conflict ( struct sctp_bind_addr * bp , const union sctp_addr * addr , struct sctp_sock * bp_sp , struct sctp_sock * addr_sp ) ; 
/*--sctp_bind_addr_conflict--*/
int sctp_bind_addr_state ( const struct sctp_bind_addr * bp , const union sctp_addr * addr ) ; 
/*--sctp_bind_addr_state--*/
union sctp_addr * sctp_find_unmatch_addr ( struct sctp_bind_addr * bp , const union sctp_addr * addrs , int addrcnt , struct sctp_sock * opt ) ; 
/*--sctp_find_unmatch_addr--*/
int sctp_is_any ( struct sock * sk , const union sctp_addr * addr ) ; 
/*--sctp_is_any--*/
int sctp_in_scope ( const union sctp_addr * addr , sctp_scope_t scope ) ; 
/*--sctp_in_scope--*/
sctp_scope_t sctp_scope ( const union sctp_addr * addr ) ; 
/*--sctp_scope--*/
struct sctp_association * sctp_id2assoc ( struct sock * sk , sctp_assoc_t id ) ; 
/*--sctp_id2assoc--*/
int sctp_inet_listen ( struct socket * sock , int backlog ) ; 
/*--sctp_inet_listen--*/
unsigned int sctp_poll ( struct file * file , struct socket * sock , poll_table * wait ) ; 
/*--sctp_poll--*/
void sctp_put_port ( struct sock * sk ) ; 
/*--sctp_put_port--*/
void sctp_sock_rfree ( struct sk_buff * skb ) ; 
/*--sctp_sock_rfree--*/
void sctp_data_ready ( struct sock * sk , int len ) ; 
/*--sctp_data_ready--*/
void sctp_write_space ( struct sock * sk ) ; 
/*--sctp_write_space--*/
void sctp_copy_sock ( struct sock * newsk , struct sock * sk , struct sctp_association * asoc ) ; 
/*--sctp_copy_sock--*/
int sctp_primitive_ASSOCIATE ( struct sctp_association * asoc , void * arg ) ; 
/*--sctp_primitive_ASSOCIATE--*/
int sctp_primitive_SHUTDOWN ( struct sctp_association * asoc , void * arg ) ; 
/*--sctp_primitive_SHUTDOWN--*/
int sctp_primitive_ABORT ( struct sctp_association * asoc , void * arg ) ; 
/*--sctp_primitive_ABORT--*/
int sctp_primitive_SEND ( struct sctp_association * asoc , void * arg ) ; 
/*--sctp_primitive_SEND--*/
int sctp_primitive_REQUESTHEARTBEAT ( struct sctp_association * asoc , void * arg ) ; 
/*--sctp_primitive_REQUESTHEARTBEAT--*/
int sctp_primitive_ASCONF ( struct sctp_association * asoc , void * arg ) ; 
/*--sctp_primitive_ASCONF--*/
struct sctp_packet * sctp_packet_config ( struct sctp_packet * packet , __u32 vtag , int ecn_capable ) ; 
/*--sctp_packet_config--*/
struct sctp_packet * sctp_packet_init ( struct sctp_packet * packet , struct sctp_transport * transport , __u16 sport , __u16 dport ) ; 
/*--sctp_packet_init--*/
void sctp_packet_free ( struct sctp_packet * packet ) ; 
/*--sctp_packet_free--*/
sctp_xmit_t sctp_packet_transmit_chunk ( struct sctp_packet * packet , struct sctp_chunk * chunk , int one_packet ) ; 
/*--sctp_packet_transmit_chunk--*/
sctp_xmit_t sctp_packet_append_chunk ( struct sctp_packet * packet , struct sctp_chunk * chunk ) ; 
/*--sctp_packet_append_chunk--*/
int sctp_packet_transmit ( struct sctp_packet * packet ) ; 
/*--sctp_packet_transmit--*/
int sctp_rcv ( struct sk_buff * skb ) ; 
/*--sctp_rcv--*/
int sctp_backlog_rcv ( struct sock * sk , struct sk_buff * skb ) ; 
/*--sctp_backlog_rcv--*/
void sctp_icmp_frag_needed ( struct sock * sk , struct sctp_association * asoc , struct sctp_transport * t , __u32 pmtu ) ; 
/*--sctp_icmp_frag_needed--*/
void sctp_icmp_proto_unreachable ( struct sock * sk , struct sctp_association * asoc , struct sctp_transport * t ) ; 
/*--sctp_icmp_proto_unreachable--*/
struct sock * sctp_err_lookup ( int family , struct sk_buff * skb , struct sctphdr * sctphdr , struct sctp_association * * app , struct sctp_transport * * tpp ) ; 
/*--sctp_err_lookup--*/
void sctp_err_finish ( struct sock * sk , struct sctp_association * asoc ) ; 
/*--sctp_err_finish--*/
void sctp_v4_err ( struct sk_buff * skb , __u32 info ) ; 
/*--sctp_v4_err--*/
void sctp_hash_endpoint ( struct sctp_endpoint * ep ) ; 
/*--sctp_hash_endpoint--*/
void sctp_unhash_endpoint ( struct sctp_endpoint * ep ) ; 
/*--sctp_unhash_endpoint--*/
void sctp_hash_established ( struct sctp_association * asoc ) ; 
/*--sctp_hash_established--*/
void sctp_unhash_established ( struct sctp_association * asoc ) ; 
/*--sctp_unhash_established--*/
int sctp_has_association ( const union sctp_addr * laddr , const union sctp_addr * paddr ) ; 
/*--sctp_has_association--*/
const char * sctp_cname ( const sctp_subtype_t cid ) ; 
/*--sctp_cname--*/
const char * sctp_pname ( const sctp_subtype_t id ) ; 
/*--sctp_pname--*/
const char * sctp_oname ( const sctp_subtype_t id ) ; 
/*--sctp_oname--*/
const char * sctp_tname ( const sctp_subtype_t id ) ; 
/*--sctp_tname--*/
struct sctp_ssnmap * sctp_ssnmap_new ( __u16 in , __u16 out , gfp_t gfp ) ; 
/*--sctp_ssnmap_new--*/
void sctp_ssnmap_clear ( struct sctp_ssnmap * map ) ; 
/*--sctp_ssnmap_clear--*/
void sctp_ssnmap_free ( struct sctp_ssnmap * map ) ; 
/*--sctp_ssnmap_free--*/
void sctp_auth_key_put ( struct sctp_auth_bytes * key ) ; 
/*--sctp_auth_key_put--*/
struct sctp_shared_key * sctp_auth_shkey_create ( __u16 key_id , gfp_t gfp ) ; 
/*--sctp_auth_shkey_create--*/
void sctp_auth_destroy_keys ( struct list_head * keys ) ; 
/*--sctp_auth_destroy_keys--*/
int sctp_auth_asoc_copy_shkeys ( const struct sctp_endpoint * ep , struct sctp_association * asoc , gfp_t gfp ) ; 
/*--sctp_auth_asoc_copy_shkeys--*/
int sctp_auth_asoc_init_active_key ( struct sctp_association * asoc , gfp_t gfp ) ; 
/*--sctp_auth_asoc_init_active_key--*/
struct sctp_shared_key * sctp_auth_get_shkey ( const struct sctp_association * asoc , __u16 key_id ) ; 
/*--sctp_auth_get_shkey--*/
int sctp_auth_init_hmacs ( struct sctp_endpoint * ep , gfp_t gfp ) ; 
/*--sctp_auth_init_hmacs--*/
void sctp_auth_destroy_hmacs ( struct crypto_hash * auth_hmacs [ ] ) ; 
/*--sctp_auth_destroy_hmacs--*/
struct sctp_hmac * sctp_auth_get_hmac ( __u16 hmac_id ) ; 
/*--sctp_auth_get_hmac--*/
struct sctp_hmac * sctp_auth_asoc_get_hmac ( const struct sctp_association * asoc ) ; 
/*--sctp_auth_asoc_get_hmac--*/
int sctp_auth_asoc_verify_hmac_id ( const struct sctp_association * asoc , __be16 hmac_id ) ; 
/*--sctp_auth_asoc_verify_hmac_id--*/
void sctp_auth_asoc_set_default_hmac ( struct sctp_association * asoc , struct sctp_hmac_algo_param * hmacs ) ; 
/*--sctp_auth_asoc_set_default_hmac--*/
int sctp_auth_send_cid ( sctp_cid_t chunk , const struct sctp_association * asoc ) ; 
/*--sctp_auth_send_cid--*/
int sctp_auth_recv_cid ( sctp_cid_t chunk , const struct sctp_association * asoc ) ; 
/*--sctp_auth_recv_cid--*/
void sctp_auth_calculate_hmac ( const struct sctp_association * asoc , struct sk_buff * skb , struct sctp_auth_chunk * auth , gfp_t gfp ) ; 
/*--sctp_auth_calculate_hmac--*/
int sctp_auth_ep_add_chunkid ( struct sctp_endpoint * ep , __u8 chunk_id ) ; 
/*--sctp_auth_ep_add_chunkid--*/
int sctp_auth_ep_set_hmacs ( struct sctp_endpoint * ep , struct sctp_hmacalgo * hmacs ) ; 
/*--sctp_auth_ep_set_hmacs--*/
int sctp_auth_set_key ( struct sctp_endpoint * ep , struct sctp_association * asoc , struct sctp_authkey * auth_key ) ; 
/*--sctp_auth_set_key--*/
int sctp_auth_set_active_key ( struct sctp_endpoint * ep , struct sctp_association * asoc , __u16 key_id ) ; 
/*--sctp_auth_set_active_key--*/
int sctp_auth_del_key_id ( struct sctp_endpoint * ep , struct sctp_association * asoc , __u16 key_id ) ; 
/*--sctp_auth_del_key_id--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) sctp_snmp_proc_init ( void ) ; 
/*--sctp_snmp_proc_init--*/
void sctp_snmp_proc_exit ( void ) ; 
/*--sctp_snmp_proc_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) sctp_eps_proc_init ( void ) ; 
/*--sctp_eps_proc_init--*/
void sctp_eps_proc_exit ( void ) ; 
/*--sctp_eps_proc_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) sctp_assocs_proc_init ( void ) ; 
/*--sctp_assocs_proc_init--*/
void sctp_assocs_proc_exit ( void ) ; 
/*--sctp_assocs_proc_exit--*/
void sctp_remaddr_proc_exit ( void ) ; 
/*--sctp_remaddr_proc_exit--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) sctp_remaddr_proc_init ( void ) ; 
/*--sctp_remaddr_proc_init--*/
void sctp_sysctl_register ( void ) ; 
/*--sctp_sysctl_register--*/
void sctp_sysctl_unregister ( void ) ; 
/*--sctp_sysctl_unregister--*/
void sctp_v6_pf_init ( void ) ; 
/*--sctp_v6_pf_init--*/
void sctp_v6_pf_exit ( void ) ; 
/*--sctp_v6_pf_exit--*/
int sctp_v6_protosw_init ( void ) ; 
/*--sctp_v6_protosw_init--*/
void sctp_v6_protosw_exit ( void ) ; 
/*--sctp_v6_protosw_exit--*/
int sctp_v6_add_protocol ( void ) ; 
/*--sctp_v6_add_protocol--*/
void sctp_v6_del_protocol ( void ) ; 
/*--sctp_v6_del_protocol--*/
struct rpc_clnt * rpc_create ( struct rpc_create_args * args ) ; 
/*--rpc_create--*/
struct rpc_clnt * rpc_clone_client ( struct rpc_clnt * clnt ) ; 
/*--rpc_clone_client--*/
void rpc_shutdown_client ( struct rpc_clnt * clnt ) ; 
/*--rpc_shutdown_client--*/
void rpc_release_client ( struct rpc_clnt * clnt ) ; 
/*--rpc_release_client--*/
struct rpc_clnt * rpc_bind_new_program ( struct rpc_clnt * old , struct rpc_program * program , u32 vers ) ; 
/*--rpc_bind_new_program--*/
struct rpc_task * rpc_run_task ( const struct rpc_task_setup * task_setup_data ) ; 
/*--rpc_run_task--*/
int rpc_call_sync ( struct rpc_clnt * clnt , const struct rpc_message * msg , int flags ) ; 
/*--rpc_call_sync--*/
int rpc_call_async ( struct rpc_clnt * clnt , const struct rpc_message * msg , int flags , const struct rpc_call_ops * tk_ops , void * data ) ; 
/*--rpc_call_async--*/
void rpc_call_start ( struct rpc_task * task ) ; 
/*--rpc_call_start--*/
size_t rpc_peeraddr ( struct rpc_clnt * clnt , struct sockaddr * buf , size_t bufsize ) ; 
/*--rpc_peeraddr--*/
const char * rpc_peeraddr2str ( struct rpc_clnt * clnt , enum rpc_display_format_t format ) ; 
/*--rpc_peeraddr2str--*/
void rpc_setbufsize ( struct rpc_clnt * clnt , unsigned int sndsize , unsigned int rcvsize ) ; 
/*--rpc_setbufsize--*/
size_t rpc_max_payload ( struct rpc_clnt * clnt ) ; 
/*--rpc_max_payload--*/
void rpc_force_rebind ( struct rpc_clnt * clnt ) ; 
/*--rpc_force_rebind--*/
void rpc_restart_call_prepare ( struct rpc_task * task ) ; 
/*--rpc_restart_call_prepare--*/
void rpc_restart_call ( struct rpc_task * task ) ; 
/*--rpc_restart_call--*/
struct rpc_task * rpc_call_null ( struct rpc_clnt * clnt , struct rpc_cred * cred , int flags ) ; 
/*--rpc_call_null--*/
void rpc_show_tasks ( void ) ; 
/*--rpc_show_tasks--*/
int xprt_register_transport ( struct xprt_class * transport ) ; 
/*--xprt_register_transport--*/
int xprt_unregister_transport ( struct xprt_class * transport ) ; 
/*--xprt_unregister_transport--*/
int xprt_load_transport ( const char * transport_name ) ; 
/*--xprt_load_transport--*/
int xprt_reserve_xprt ( struct rpc_task * task ) ; 
/*--xprt_reserve_xprt--*/
int xprt_reserve_xprt_cong ( struct rpc_task * task ) ; 
/*--xprt_reserve_xprt_cong--*/
void xprt_release_xprt ( struct rpc_xprt * xprt , struct rpc_task * task ) ; 
/*--xprt_release_xprt--*/
void xprt_release_xprt_cong ( struct rpc_xprt * xprt , struct rpc_task * task ) ; 
/*--xprt_release_xprt_cong--*/
void xprt_release_rqst_cong ( struct rpc_task * task ) ; 
/*--xprt_release_rqst_cong--*/
void xprt_adjust_cwnd ( struct rpc_task * task , int result ) ; 
/*--xprt_adjust_cwnd--*/
void xprt_wake_pending_tasks ( struct rpc_xprt * xprt , int status ) ; 
/*--xprt_wake_pending_tasks--*/
void xprt_wait_for_buffer_space ( struct rpc_task * task , rpc_action action ) ; 
/*--xprt_wait_for_buffer_space--*/
void xprt_write_space ( struct rpc_xprt * xprt ) ; 
/*--xprt_write_space--*/
void xprt_set_retrans_timeout_def ( struct rpc_task * task ) ; 
/*--xprt_set_retrans_timeout_def--*/
void xprt_set_retrans_timeout_rtt ( struct rpc_task * task ) ; 
/*--xprt_set_retrans_timeout_rtt--*/
int xprt_adjust_timeout ( struct rpc_rqst * req ) ; 
/*--xprt_adjust_timeout--*/
void xprt_disconnect_done ( struct rpc_xprt * xprt ) ; 
/*--xprt_disconnect_done--*/
void xprt_force_disconnect ( struct rpc_xprt * xprt ) ; 
/*--xprt_force_disconnect--*/
void xprt_conditional_disconnect ( struct rpc_xprt * xprt , unsigned int cookie ) ; 
/*--xprt_conditional_disconnect--*/
void xprt_connect ( struct rpc_task * task ) ; 
/*--xprt_connect--*/
struct rpc_rqst * xprt_lookup_rqst ( struct rpc_xprt * xprt , __be32 xid ) ; 
/*--xprt_lookup_rqst--*/
void xprt_complete_rqst ( struct rpc_task * task , int copied ) ; 
/*--xprt_complete_rqst--*/
int xprt_prepare_transmit ( struct rpc_task * task ) ; 
/*--xprt_prepare_transmit--*/
void xprt_end_transmit ( struct rpc_task * task ) ; 
/*--xprt_end_transmit--*/
void xprt_transmit ( struct rpc_task * task ) ; 
/*--xprt_transmit--*/
void xprt_reserve ( struct rpc_task * task ) ; 
/*--xprt_reserve--*/
void xprt_release ( struct rpc_task * task ) ; 
/*--xprt_release--*/
struct rpc_xprt * xprt_create_transport ( struct xprt_create * args ) ; 
/*--xprt_create_transport--*/
void xprt_put ( struct rpc_xprt * xprt ) ; 
/*--xprt_put--*/
struct rpc_xprt * xprt_get ( struct rpc_xprt * xprt ) ; 
/*--xprt_get--*/
size_t xdr_skb_read_bits ( struct xdr_skb_reader * desc , void * to , size_t len ) ; 
/*--xdr_skb_read_bits--*/
ssize_t xdr_partial_copy_from_skb ( struct xdr_buf * xdr , unsigned int base , struct xdr_skb_reader * desc , xdr_skb_read_actor copy_actor ) ; 
/*--xdr_partial_copy_from_skb--*/
int csum_partial_copy_to_xdr ( struct xdr_buf * xdr , struct sk_buff * skb ) ; 
/*--csum_partial_copy_to_xdr--*/
int init_socket_xprt ( void ) ; 
/*--init_socket_xprt--*/
void cleanup_socket_xprt ( void ) ; 
/*--cleanup_socket_xprt--*/
void rpc_init_priority_wait_queue ( struct rpc_wait_queue * queue , const char * qname ) ; 
/*--rpc_init_priority_wait_queue--*/
void rpc_init_wait_queue ( struct rpc_wait_queue * queue , const char * qname ) ; 
/*--rpc_init_wait_queue--*/
void rpc_destroy_wait_queue ( struct rpc_wait_queue * queue ) ; 
/*--rpc_destroy_wait_queue--*/
int __rpc_wait_for_completion_task ( struct rpc_task * task , int ( * action ) ( void * ) ) ; 
/*--__rpc_wait_for_completion_task--*/
void rpc_sleep_on ( struct rpc_wait_queue * q , struct rpc_task * task , rpc_action action ) ; 
/*--rpc_sleep_on--*/
int rpc_queue_empty ( struct rpc_wait_queue * queue ) ; 
/*--rpc_queue_empty--*/
void rpc_wake_up_queued_task ( struct rpc_wait_queue * queue , struct rpc_task * task ) ; 
/*--rpc_wake_up_queued_task--*/
struct rpc_task * rpc_wake_up_next ( struct rpc_wait_queue * queue ) ; 
/*--rpc_wake_up_next--*/
void rpc_wake_up ( struct rpc_wait_queue * queue ) ; 
/*--rpc_wake_up--*/
void rpc_wake_up_status ( struct rpc_wait_queue * queue , int status ) ; 
/*--rpc_wake_up_status--*/
void rpc_delay ( struct rpc_task * task , unsigned long delay ) ; 
/*--rpc_delay--*/
void rpc_prepare_task ( struct rpc_task * task ) ; 
/*--rpc_prepare_task--*/
void rpc_exit_task ( struct rpc_task * task ) ; 
/*--rpc_exit_task--*/
void rpc_release_calldata ( const struct rpc_call_ops * ops , void * calldata ) ; 
/*--rpc_release_calldata--*/
void rpc_execute ( struct rpc_task * task ) ; 
/*--rpc_execute--*/
void * rpc_malloc ( struct rpc_task * task , size_t size ) ; 
/*--rpc_malloc--*/
void rpc_free ( void * buffer ) ; 
/*--rpc_free--*/
struct rpc_task * rpc_new_task ( const struct rpc_task_setup * setup_data ) ; 
/*--rpc_new_task--*/
void rpc_put_task ( struct rpc_task * task ) ; 
/*--rpc_put_task--*/
void rpc_killall_tasks ( struct rpc_clnt * clnt ) ; 
/*--rpc_killall_tasks--*/
int rpciod_up ( void ) ; 
/*--rpciod_up--*/
void rpciod_down ( void ) ; 
/*--rpciod_down--*/
void rpc_destroy_mempool ( void ) ; 
/*--rpc_destroy_mempool--*/
int rpc_init_mempool ( void ) ; 
/*--rpc_init_mempool--*/
int rpcauth_register ( const struct rpc_authops * ops ) ; 
/*--rpcauth_register--*/
int rpcauth_unregister ( const struct rpc_authops * ops ) ; 
/*--rpcauth_unregister--*/
struct rpc_auth * rpcauth_create ( rpc_authflavor_t pseudoflavor , struct rpc_clnt * clnt ) ; 
/*--rpcauth_create--*/
void rpcauth_release ( struct rpc_auth * auth ) ; 
/*--rpcauth_release--*/
int rpcauth_init_credcache ( struct rpc_auth * auth ) ; 
/*--rpcauth_init_credcache--*/
void rpcauth_clear_credcache ( struct rpc_cred_cache * cache ) ; 
/*--rpcauth_clear_credcache--*/
void rpcauth_destroy_credcache ( struct rpc_auth * auth ) ; 
/*--rpcauth_destroy_credcache--*/
struct rpc_cred * rpcauth_lookup_credcache ( struct rpc_auth * auth , struct auth_cred * acred , int flags ) ; 
/*--rpcauth_lookup_credcache--*/
struct rpc_cred * rpcauth_lookupcred ( struct rpc_auth * auth , int flags ) ; 
/*--rpcauth_lookupcred--*/
void rpcauth_init_cred ( struct rpc_cred * cred , const struct auth_cred * acred , struct rpc_auth * auth , const struct rpc_credops * ops ) ; 
/*--rpcauth_init_cred--*/
void rpcauth_generic_bind_cred ( struct rpc_task * task , struct rpc_cred * cred , int lookupflags ) ; 
/*--rpcauth_generic_bind_cred--*/
void rpcauth_bindcred ( struct rpc_task * task , struct rpc_cred * cred , int flags ) ; 
/*--rpcauth_bindcred--*/
void put_rpccred ( struct rpc_cred * cred ) ; 
/*--put_rpccred--*/
void rpcauth_unbindcred ( struct rpc_task * task ) ; 
/*--rpcauth_unbindcred--*/
__be32 * rpcauth_marshcred ( struct rpc_task * task , __be32 * p ) ; 
/*--rpcauth_marshcred--*/
__be32 * rpcauth_checkverf ( struct rpc_task * task , __be32 * p ) ; 
/*--rpcauth_checkverf--*/
int rpcauth_wrap_req ( struct rpc_task * task , kxdrproc_t encode , void * rqstp , __be32 * data , void * obj ) ; 
/*--rpcauth_wrap_req--*/
int rpcauth_unwrap_resp ( struct rpc_task * task , kxdrproc_t decode , void * rqstp , __be32 * data , void * obj ) ; 
/*--rpcauth_unwrap_resp--*/
int rpcauth_refreshcred ( struct rpc_task * task ) ; 
/*--rpcauth_refreshcred--*/
void rpcauth_invalcred ( struct rpc_task * task ) ; 
/*--rpcauth_invalcred--*/
int rpcauth_uptodatecred ( struct rpc_task * task ) ; 
/*--rpcauth_uptodatecred--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rpcauth_init_module ( void ) ; 
/*--rpcauth_init_module--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rpcauth_remove_module ( void ) ; 
/*--rpcauth_remove_module--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rpc_init_authunix ( void ) ; 
/*--rpc_init_authunix--*/
struct rpc_cred * rpc_lookup_cred ( void ) ; 
/*--rpc_lookup_cred--*/
struct rpc_cred * rpc_lookup_machine_cred ( void ) ; 
/*--rpc_lookup_machine_cred--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rpc_init_generic_auth ( void ) ; 
/*--rpc_init_generic_auth--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) rpc_destroy_generic_auth ( void ) ; 
/*--rpc_destroy_generic_auth--*/
struct svc_pool * svc_pool_for_cpu ( struct svc_serv * serv , int cpu ) ; 
/*--svc_pool_for_cpu--*/
struct svc_serv * svc_create ( struct svc_program * prog , unsigned int bufsize , void ( * shutdown ) ( struct svc_serv * serv ) ) ; 
/*--svc_create--*/
struct svc_serv * svc_create_pooled ( struct svc_program * prog , unsigned int bufsize , void ( * shutdown ) ( struct svc_serv * serv ) , svc_thread_fn func , struct module * mod ) ; 
/*--svc_create_pooled--*/
void svc_destroy ( struct svc_serv * serv ) ; 
/*--svc_destroy--*/
struct svc_rqst * svc_prepare_thread ( struct svc_serv * serv , struct svc_pool * pool ) ; 
/*--svc_prepare_thread--*/
int svc_set_num_threads ( struct svc_serv * serv , struct svc_pool * pool , int nrservs ) ; 
/*--svc_set_num_threads--*/
void svc_exit_thread ( struct svc_rqst * rqstp ) ; 
/*--svc_exit_thread--*/
int svc_register ( const struct svc_serv * serv , const int family , const unsigned short proto , const unsigned short port ) ; 
/*--svc_register--*/
int svc_process ( struct svc_rqst * rqstp ) ; 
/*--svc_process--*/
u32 svc_max_payload ( const struct svc_rqst * rqstp ) ; 
/*--svc_max_payload--*/
int svc_send_common ( struct socket * sock , struct xdr_buf * xdr , struct page * headpage , unsigned long headoffset , struct page * tailpage , unsigned long tailoffset ) ; 
/*--svc_send_common--*/
int svc_sock_names ( struct svc_serv * serv , char * buf , const size_t buflen , const char * toclose ) ; 
/*--svc_sock_names--*/
void svc_init_xprt_sock ( void ) ; 
/*--svc_init_xprt_sock--*/
void svc_cleanup_xprt_sock ( void ) ; 
/*--svc_cleanup_xprt_sock--*/
void svc_sock_update_bufs ( struct svc_serv * serv ) ; 
/*--svc_sock_update_bufs--*/
int svc_addsock ( struct svc_serv * serv , const int fd , char * name_return , const size_t len ) ; 
/*--svc_addsock--*/
struct svc_xprt * svc_sock_create ( struct svc_serv * serv , int prot ) ; 
/*--svc_sock_create--*/
void svc_sock_destroy ( struct svc_xprt * xprt ) ; 
/*--svc_sock_destroy--*/
int svc_authenticate ( struct svc_rqst * rqstp , __be32 * authp ) ; 
/*--svc_authenticate--*/
int svc_set_client ( struct svc_rqst * rqstp ) ; 
/*--svc_set_client--*/
int svc_authorise ( struct svc_rqst * rqstp ) ; 
/*--svc_authorise--*/
int svc_auth_register ( rpc_authflavor_t flavor , struct auth_ops * aops ) ; 
/*--svc_auth_register--*/
void svc_auth_unregister ( rpc_authflavor_t flavor ) ; 
/*--svc_auth_unregister--*/
void auth_domain_put ( struct auth_domain * dom ) ; 
/*--auth_domain_put--*/
struct auth_domain * auth_domain_lookup ( char * name , struct auth_domain * new ) ; 
/*--auth_domain_lookup--*/
struct auth_domain * auth_domain_find ( char * name ) ; 
/*--auth_domain_find--*/
struct auth_domain * unix_domain_find ( char * name ) ; 
/*--unix_domain_find--*/
int auth_unix_add_addr ( struct in6_addr * addr , struct auth_domain * dom ) ; 
/*--auth_unix_add_addr--*/
int auth_unix_forget_old ( struct auth_domain * dom ) ; 
/*--auth_unix_forget_old--*/
struct auth_domain * auth_unix_lookup ( struct in6_addr * addr ) ; 
/*--auth_unix_lookup--*/
void svcauth_unix_purge ( void ) ; 
/*--svcauth_unix_purge--*/
void svcauth_unix_info_release ( void * info ) ; 
/*--svcauth_unix_info_release--*/
int svcauth_unix_set_client ( struct svc_rqst * rqstp ) ; 
/*--svcauth_unix_set_client--*/
size_t rpc_ntop ( const struct sockaddr * sap , char * buf , const size_t buflen ) ; 
/*--rpc_ntop--*/
size_t rpc_pton ( const char * buf , const size_t buflen , struct sockaddr * sap , const size_t salen ) ; 
/*--rpc_pton--*/
char * rpc_sockaddr2uaddr ( const struct sockaddr * sap ) ; 
/*--rpc_sockaddr2uaddr--*/
size_t rpc_uaddr2sockaddr ( const char * uaddr , const size_t uaddr_len , struct sockaddr * sap , const size_t salen ) ; 
/*--rpc_uaddr2sockaddr--*/
int rpcb_register ( u32 prog , u32 vers , int prot , unsigned short port ) ; 
/*--rpcb_register--*/
int rpcb_v4_register ( const u32 program , const u32 version , const struct sockaddr * address , const char * netid ) ; 
/*--rpcb_v4_register--*/
int rpcb_getport_sync ( struct sockaddr_in * sin , u32 prog , u32 vers , int prot ) ; 
/*--rpcb_getport_sync--*/
void rpcb_getport_async ( struct rpc_task * task ) ; 
/*--rpcb_getport_async--*/
void cleanup_rpcb_clnt ( void ) ; 
/*--cleanup_rpcb_clnt--*/
void rpc_init_rtt ( struct rpc_rtt * rt , unsigned long timeo ) ; 
/*--rpc_init_rtt--*/
void rpc_update_rtt ( struct rpc_rtt * rt , unsigned timer , long m ) ; 
/*--rpc_update_rtt--*/
unsigned long rpc_calc_rto ( struct rpc_rtt * rt , unsigned timer ) ; 
/*--rpc_calc_rto--*/
__be32 * xdr_encode_netobj ( __be32 * p , const struct xdr_netobj * obj ) ; 
/*--xdr_encode_netobj--*/
__be32 * xdr_decode_netobj ( __be32 * p , struct xdr_netobj * obj ) ; 
/*--xdr_decode_netobj--*/
__be32 * xdr_encode_opaque_fixed ( __be32 * p , const void * ptr , unsigned int nbytes ) ; 
/*--xdr_encode_opaque_fixed--*/
__be32 * xdr_encode_opaque ( __be32 * p , const void * ptr , unsigned int nbytes ) ; 
/*--xdr_encode_opaque--*/
__be32 * xdr_encode_string ( __be32 * p , const char * string ) ; 
/*--xdr_encode_string--*/
__be32 * xdr_decode_string_inplace ( __be32 * p , char * * sp , unsigned int * lenp , unsigned int maxlen ) ; 
/*--xdr_decode_string_inplace--*/
void xdr_encode_pages ( struct xdr_buf * xdr , struct page * * pages , unsigned int base , unsigned int len ) ; 
/*--xdr_encode_pages--*/
void xdr_inline_pages ( struct xdr_buf * xdr , unsigned int offset , struct page * * pages , unsigned int base , unsigned int len ) ; 
/*--xdr_inline_pages--*/
void xdr_shift_buf ( struct xdr_buf * buf , size_t len ) ; 
/*--xdr_shift_buf--*/
void xdr_init_encode ( struct xdr_stream * xdr , struct xdr_buf * buf , __be32 * p ) ; 
/*--xdr_init_encode--*/
__be32 * xdr_reserve_space ( struct xdr_stream * xdr , size_t nbytes ) ; 
/*--xdr_reserve_space--*/
void xdr_write_pages ( struct xdr_stream * xdr , struct page * * pages , unsigned int base , unsigned int len ) ; 
/*--xdr_write_pages--*/
void xdr_init_decode ( struct xdr_stream * xdr , struct xdr_buf * buf , __be32 * p ) ; 
/*--xdr_init_decode--*/
__be32 * xdr_inline_decode ( struct xdr_stream * xdr , size_t nbytes ) ; 
/*--xdr_inline_decode--*/
void xdr_read_pages ( struct xdr_stream * xdr , unsigned int len ) ; 
/*--xdr_read_pages--*/
void xdr_enter_page ( struct xdr_stream * xdr , unsigned int len ) ; 
/*--xdr_enter_page--*/
void xdr_buf_from_iov ( struct kvec * iov , struct xdr_buf * buf ) ; 
/*--xdr_buf_from_iov--*/
int xdr_buf_subsegment ( struct xdr_buf * buf , struct xdr_buf * subbuf , unsigned int base , unsigned int len ) ; 
/*--xdr_buf_subsegment--*/
int read_bytes_from_xdr_buf ( struct xdr_buf * buf , unsigned int base , void * obj , unsigned int len ) ; 
/*--read_bytes_from_xdr_buf--*/
int write_bytes_to_xdr_buf ( struct xdr_buf * buf , unsigned int base , void * obj , unsigned int len ) ; 
/*--write_bytes_to_xdr_buf--*/
int xdr_decode_word ( struct xdr_buf * buf , unsigned int base , u32 * obj ) ; 
/*--xdr_decode_word--*/
int xdr_encode_word ( struct xdr_buf * buf , unsigned int base , u32 obj ) ; 
/*--xdr_encode_word--*/
int xdr_buf_read_netobj ( struct xdr_buf * buf , struct xdr_netobj * obj , unsigned int offset ) ; 
/*--xdr_buf_read_netobj--*/
int xdr_decode_array2 ( struct xdr_buf * buf , unsigned int base , struct xdr_array2_desc * desc ) ; 
/*--xdr_decode_array2--*/
int xdr_encode_array2 ( struct xdr_buf * buf , unsigned int base , struct xdr_array2_desc * desc ) ; 
/*--xdr_encode_array2--*/
int xdr_process_buf ( struct xdr_buf * buf , unsigned int offset , unsigned int len , int ( * actor ) ( struct scatterlist * , void * ) , void * data ) ; 
/*--xdr_process_buf--*/
struct cache_head * sunrpc_cache_lookup ( struct cache_detail * detail , struct cache_head * key , int hash ) ; 
/*--sunrpc_cache_lookup--*/
struct cache_head * sunrpc_cache_update ( struct cache_detail * detail , struct cache_head * new , struct cache_head * old , int hash ) ; 
/*--sunrpc_cache_update--*/
int cache_check ( struct cache_detail * detail , struct cache_head * h , struct cache_req * rqstp ) ; 
/*--cache_check--*/
void cache_flush ( void ) ; 
/*--cache_flush--*/
void cache_purge ( struct cache_detail * detail ) ; 
/*--cache_purge--*/
void cache_clean_deferred ( void * owner ) ; 
/*--cache_clean_deferred--*/
void qword_add ( char * * bpp , int * lp , char * str ) ; 
/*--qword_add--*/
void qword_addhex ( char * * bpp , int * lp , char * buf , int blen ) ; 
/*--qword_addhex--*/
int sunrpc_cache_pipe_upcall ( struct cache_detail * detail , struct cache_head * h , void ( * cache_request ) ( struct cache_detail * , struct cache_head * , char * * , int * ) ) ; 
/*--sunrpc_cache_pipe_upcall--*/
int qword_get ( char * * bpp , char * dest , int bufsize ) ; 
/*--qword_get--*/
int cache_register ( struct cache_detail * cd ) ; 
/*--cache_register--*/
void cache_unregister ( struct cache_detail * cd ) ; 
/*--cache_unregister--*/
int sunrpc_cache_register_pipefs ( struct dentry * parent , const char * name , mode_t umode , struct cache_detail * cd ) ; 
/*--sunrpc_cache_register_pipefs--*/
void sunrpc_cache_unregister_pipefs ( struct cache_detail * cd ) ; 
/*--sunrpc_cache_unregister_pipefs--*/
int rpc_queue_upcall ( struct inode * inode , struct rpc_pipe_msg * msg ) ; 
/*--rpc_queue_upcall--*/
struct vfsmount * rpc_get_mount ( void ) ; 
/*--rpc_get_mount--*/
void rpc_put_mount ( void ) ; 
/*--rpc_put_mount--*/
struct dentry * rpc_mkpipe ( struct dentry * parent , const char * name , void * private , const struct rpc_pipe_ops * ops , int flags ) ; 
/*--rpc_mkpipe--*/
int rpc_unlink ( struct dentry * dentry ) ; 
/*--rpc_unlink--*/
struct dentry * rpc_create_client_dir ( struct dentry * dentry , struct qstr * name , struct rpc_clnt * rpc_client ) ; 
/*--rpc_create_client_dir--*/
int rpc_remove_client_dir ( struct dentry * dentry ) ; 
/*--rpc_remove_client_dir--*/
struct dentry * rpc_create_cache_dir ( struct dentry * parent , struct qstr * name , mode_t umode , struct cache_detail * cd ) ; 
/*--rpc_create_cache_dir--*/
void rpc_remove_cache_dir ( struct dentry * dentry ) ; 
/*--rpc_remove_cache_dir--*/
int register_rpc_pipefs ( void ) ; 
/*--register_rpc_pipefs--*/
void unregister_rpc_pipefs ( void ) ; 
/*--unregister_rpc_pipefs--*/
int svc_reg_xprt_class ( struct svc_xprt_class * xcl ) ; 
/*--svc_reg_xprt_class--*/
void svc_unreg_xprt_class ( struct svc_xprt_class * xcl ) ; 
/*--svc_unreg_xprt_class--*/
int svc_print_xprts ( char * buf , int maxlen ) ; 
/*--svc_print_xprts--*/
void svc_xprt_put ( struct svc_xprt * xprt ) ; 
/*--svc_xprt_put--*/
void svc_xprt_init ( struct svc_xprt_class * xcl , struct svc_xprt * xprt , struct svc_serv * serv ) ; 
/*--svc_xprt_init--*/
int svc_create_xprt ( struct svc_serv * serv , const char * xprt_name , const int family , const unsigned short port , int flags ) ; 
/*--svc_create_xprt--*/
void svc_xprt_copy_addrs ( struct svc_rqst * rqstp , struct svc_xprt * xprt ) ; 
/*--svc_xprt_copy_addrs--*/
char * svc_print_addr ( struct svc_rqst * rqstp , char * buf , size_t len ) ; 
/*--svc_print_addr--*/
void svc_xprt_enqueue ( struct svc_xprt * xprt ) ; 
/*--svc_xprt_enqueue--*/
void svc_xprt_received ( struct svc_xprt * xprt ) ; 
/*--svc_xprt_received--*/
void svc_reserve ( struct svc_rqst * rqstp , int space ) ; 
/*--svc_reserve--*/
void svc_wake_up ( struct svc_serv * serv ) ; 
/*--svc_wake_up--*/
int svc_port_is_privileged ( struct sockaddr * sin ) ; 
/*--svc_port_is_privileged--*/
int svc_recv ( struct svc_rqst * rqstp , long timeout ) ; 
/*--svc_recv--*/
void svc_drop ( struct svc_rqst * rqstp ) ; 
/*--svc_drop--*/
int svc_send ( struct svc_rqst * rqstp ) ; 
/*--svc_send--*/
void svc_delete_xprt ( struct svc_xprt * xprt ) ; 
/*--svc_delete_xprt--*/
void svc_close_xprt ( struct svc_xprt * xprt ) ; 
/*--svc_close_xprt--*/
void svc_close_all ( struct list_head * xprt_list ) ; 
/*--svc_close_all--*/
struct svc_xprt * svc_find_xprt ( struct svc_serv * serv , const char * xcl_name , const sa_family_t af , const unsigned short port ) ; 
/*--svc_find_xprt--*/
int svc_xprt_names ( struct svc_serv * serv , char * buf , const int buflen ) ; 
/*--svc_xprt_names--*/
int svc_pool_stats_open ( struct svc_serv * serv , struct file * file ) ; 
/*--svc_pool_stats_open--*/
void svc_seq_show ( struct seq_file * seq , const struct svc_stat * statp ) ; 
/*--svc_seq_show--*/
struct rpc_iostats * rpc_alloc_iostats ( struct rpc_clnt * clnt ) ; 
/*--rpc_alloc_iostats--*/
void rpc_free_iostats ( struct rpc_iostats * stats ) ; 
/*--rpc_free_iostats--*/
void rpc_count_iostats ( struct rpc_task * task ) ; 
/*--rpc_count_iostats--*/
void rpc_print_iostats ( struct seq_file * seq , struct rpc_clnt * clnt ) ; 
/*--rpc_print_iostats--*/
struct proc_dir_entry * rpc_proc_register ( struct rpc_stat * statp ) ; 
/*--rpc_proc_register--*/
void rpc_proc_unregister ( const char * name ) ; 
/*--rpc_proc_unregister--*/
struct proc_dir_entry * svc_proc_register ( struct svc_stat * statp , const struct file_operations * fops ) ; 
/*--svc_proc_register--*/
void svc_proc_unregister ( const char * name ) ; 
/*--svc_proc_unregister--*/
void rpc_proc_init ( void ) ; 
/*--rpc_proc_init--*/
void rpc_proc_exit ( void ) ; 
/*--rpc_proc_exit--*/
void rpc_register_sysctl ( void ) ; 
/*--rpc_register_sysctl--*/
void rpc_unregister_sysctl ( void ) ; 
/*--rpc_unregister_sysctl--*/
int g_token_size ( struct xdr_netobj * mech , unsigned int body_size ) ; 
/*--g_token_size--*/
void g_make_token_header ( struct xdr_netobj * mech , int body_size , unsigned char * * buf ) ; 
/*--g_make_token_header--*/
u32 g_verify_token_header ( struct xdr_netobj * mech , int * body_size , unsigned char * * buf_in , int toksize ) ; 
/*--g_verify_token_header--*/
int gss_mech_register ( struct gss_api_mech * gm ) ; 
/*--gss_mech_register--*/
void gss_mech_unregister ( struct gss_api_mech * gm ) ; 
/*--gss_mech_unregister--*/
struct gss_api_mech * gss_mech_get ( struct gss_api_mech * gm ) ; 
/*--gss_mech_get--*/
struct gss_api_mech * gss_mech_get_by_name ( const char * name ) ; 
/*--gss_mech_get_by_name--*/
struct gss_api_mech * gss_mech_get_by_pseudoflavor ( u32 pseudoflavor ) ; 
/*--gss_mech_get_by_pseudoflavor--*/
u32 gss_svc_to_pseudoflavor ( struct gss_api_mech * gm , u32 service ) ; 
/*--gss_svc_to_pseudoflavor--*/
u32 gss_pseudoflavor_to_service ( struct gss_api_mech * gm , u32 pseudoflavor ) ; 
/*--gss_pseudoflavor_to_service--*/
char * gss_service_to_auth_domain_name ( struct gss_api_mech * gm , u32 service ) ; 
/*--gss_service_to_auth_domain_name--*/
void gss_mech_put ( struct gss_api_mech * gm ) ; 
/*--gss_mech_put--*/
int gss_import_sec_context ( const void * input_token , size_t bufsize , struct gss_api_mech * mech , struct gss_ctx * * ctx_id , gfp_t gfp_mask ) ; 
/*--gss_import_sec_context--*/
u32 gss_get_mic ( struct gss_ctx * context_handle , struct xdr_buf * message , struct xdr_netobj * mic_token ) ; 
/*--gss_get_mic--*/
u32 gss_verify_mic ( struct gss_ctx * context_handle , struct xdr_buf * message , struct xdr_netobj * mic_token ) ; 
/*--gss_verify_mic--*/
u32 gss_wrap ( struct gss_ctx * ctx_id , int offset , struct xdr_buf * buf , struct page * * inpages ) ; 
/*--gss_wrap--*/
u32 gss_unwrap ( struct gss_ctx * ctx_id , int offset , struct xdr_buf * buf ) ; 
/*--gss_unwrap--*/
u32 gss_delete_sec_context ( struct gss_ctx * * context_handle ) ; 
/*--gss_delete_sec_context--*/
u32 svcauth_gss_flavor ( struct auth_domain * dom ) ; 
/*--svcauth_gss_flavor--*/
int svcauth_gss_register_pseudoflavor ( u32 pseudoflavor , char * name ) ; 
/*--svcauth_gss_register_pseudoflavor--*/
char * svc_gss_principal ( struct svc_rqst * rqstp ) ; 
/*--svc_gss_principal--*/
int gss_svc_init ( void ) ; 
/*--gss_svc_init--*/
void gss_svc_shutdown ( void ) ; 
/*--gss_svc_shutdown--*/
struct crypto_blkcipher * context_v2_alloc_cipher ( struct krb5_ctx * ctx , const char * cname , u8 * key ) ; 
/*--context_v2_alloc_cipher--*/
u32 gss_get_mic_v2 ( struct krb5_ctx * ctx , struct xdr_buf * text , struct xdr_netobj * token ) ; 
/*--gss_get_mic_v2--*/
u32 gss_get_mic_kerberos ( struct gss_ctx * gss_ctx , struct xdr_buf * text , struct xdr_netobj * token ) ; 
/*--gss_get_mic_kerberos--*/
u32 gss_verify_mic_kerberos ( struct gss_ctx * gss_ctx , struct xdr_buf * message_buffer , struct xdr_netobj * read_token ) ; 
/*--gss_verify_mic_kerberos--*/
s32 krb5_make_seq_num ( struct krb5_ctx * kctx , struct crypto_blkcipher * key , int direction , u32 seqnum , unsigned char * cksum , unsigned char * buf ) ; 
/*--krb5_make_seq_num--*/
s32 krb5_get_seq_num ( struct krb5_ctx * kctx , unsigned char * cksum , unsigned char * buf , int * direction , u32 * seqnum ) ; 
/*--krb5_get_seq_num--*/
void gss_krb5_make_confounder ( char * p , u32 conflen ) ; 
/*--gss_krb5_make_confounder--*/
u32 gss_wrap_kerberos ( struct gss_ctx * gctx , int offset , struct xdr_buf * buf , struct page * * pages ) ; 
/*--gss_wrap_kerberos--*/
u32 gss_unwrap_kerberos ( struct gss_ctx * gctx , int offset , struct xdr_buf * buf ) ; 
/*--gss_unwrap_kerberos--*/
u32 krb5_encrypt ( struct crypto_blkcipher * tfm , void * iv , void * in , void * out , int length ) ; 
/*--krb5_encrypt--*/
u32 krb5_decrypt ( struct crypto_blkcipher * tfm , void * iv , void * in , void * out , int length ) ; 
/*--krb5_decrypt--*/
u32 make_checksum ( struct krb5_ctx * kctx , char * header , int hdrlen , struct xdr_buf * body , int body_offset , u8 * cksumkey , unsigned int usage , struct xdr_netobj * cksumout ) ; 
/*--make_checksum--*/
u32 make_checksum_v2 ( struct krb5_ctx * kctx , char * header , int hdrlen , struct xdr_buf * body , int body_offset , u8 * cksumkey , unsigned int usage , struct xdr_netobj * cksumout ) ; 
/*--make_checksum_v2--*/
int gss_encrypt_xdr_buf ( struct crypto_blkcipher * tfm , struct xdr_buf * buf , int offset , struct page * * pages ) ; 
/*--gss_encrypt_xdr_buf--*/
int gss_decrypt_xdr_buf ( struct crypto_blkcipher * tfm , struct xdr_buf * buf , int offset ) ; 
/*--gss_decrypt_xdr_buf--*/
int xdr_extend_head ( struct xdr_buf * buf , unsigned int base , unsigned int shiftlen ) ; 
/*--xdr_extend_head--*/
u32 gss_krb5_aes_encrypt ( struct krb5_ctx * kctx , u32 offset , struct xdr_buf * buf , int ec , struct page * * pages ) ; 
/*--gss_krb5_aes_encrypt--*/
u32 gss_krb5_aes_decrypt ( struct krb5_ctx * kctx , u32 offset , struct xdr_buf * buf , u32 * headskip , u32 * tailskip ) ; 
/*--gss_krb5_aes_decrypt--*/
int krb5_rc4_setup_seq_key ( struct krb5_ctx * kctx , struct crypto_blkcipher * cipher , unsigned char * cksum ) ; 
/*--krb5_rc4_setup_seq_key--*/
int krb5_rc4_setup_enc_key ( struct krb5_ctx * kctx , struct crypto_blkcipher * cipher , s32 seqnum ) ; 
/*--krb5_rc4_setup_enc_key--*/
u32 krb5_derive_key ( const struct gss_krb5_enctype * gk5e , const struct xdr_netobj * inkey , struct xdr_netobj * outkey , const struct xdr_netobj * in_constant , gfp_t gfp_mask ) ; 
/*--krb5_derive_key--*/
u32 gss_krb5_des3_make_key ( const struct gss_krb5_enctype * gk5e , struct xdr_netobj * randombits , struct xdr_netobj * key ) ; 
/*--gss_krb5_des3_make_key--*/
u32 gss_krb5_aes_make_key ( const struct gss_krb5_enctype * gk5e , struct xdr_netobj * randombits , struct xdr_netobj * key ) ; 
/*--gss_krb5_aes_make_key--*/
u32 spkm3_make_token ( struct spkm3_ctx * ctx , struct xdr_buf * text , struct xdr_netobj * token , int toktype ) ; 
/*--spkm3_make_token--*/
s32 make_spkm3_checksum ( s32 cksumtype , struct xdr_netobj * key , char * header , unsigned int hdrlen , struct xdr_buf * body , unsigned int body_offset , struct xdr_netobj * cksum ) ; 
/*--make_spkm3_checksum--*/
u32 spkm3_read_token ( struct spkm3_ctx * ctx , struct xdr_netobj * read_token , struct xdr_buf * message_buffer , int toktype ) ; 
/*--spkm3_read_token--*/
void asn1_bitstring_len ( struct xdr_netobj * in , int * enclen , int * zerobits ) ; 
/*--asn1_bitstring_len--*/
int decode_asn1_bitstring ( struct xdr_netobj * out , char * in , int enclen , int explen ) ; 
/*--decode_asn1_bitstring--*/
void spkm3_mic_header ( unsigned char * * hdrbuf , unsigned int * hdrlen , unsigned char * ctxdata , int elen , int zbit ) ; 
/*--spkm3_mic_header--*/
void spkm3_make_mic_token ( unsigned char * * tokp , int toklen , struct xdr_netobj * mic_hdr , struct xdr_netobj * md5cksum , int md5elen , int md5zbit ) ; 
/*--spkm3_make_mic_token--*/
u32 spkm3_verify_mic_token ( unsigned char * * tokp , int * mic_hdrlen , unsigned char * * cksum ) ; 
/*--spkm3_verify_mic_token--*/
void svc_rdma_cleanup ( void ) ; 
/*--svc_rdma_cleanup--*/
int svc_rdma_init ( void ) ; 
/*--svc_rdma_init--*/
struct svc_rdma_op_ctxt * svc_rdma_get_context ( struct svcxprt_rdma * xprt ) ; 
/*--svc_rdma_get_context--*/
void svc_rdma_unmap_dma ( struct svc_rdma_op_ctxt * ctxt ) ; 
/*--svc_rdma_unmap_dma--*/
void svc_rdma_put_context ( struct svc_rdma_op_ctxt * ctxt , int free_pages ) ; 
/*--svc_rdma_put_context--*/
struct svc_rdma_req_map * svc_rdma_get_req_map ( void ) ; 
/*--svc_rdma_get_req_map--*/
void svc_rdma_put_req_map ( struct svc_rdma_req_map * map ) ; 
/*--svc_rdma_put_req_map--*/
struct page * svc_rdma_get_page ( void ) ; 
/*--svc_rdma_get_page--*/
int svc_rdma_post_recv ( struct svcxprt_rdma * xprt ) ; 
/*--svc_rdma_post_recv--*/
struct svc_rdma_fastreg_mr * svc_rdma_get_frmr ( struct svcxprt_rdma * rdma ) ; 
/*--svc_rdma_get_frmr--*/
void svc_rdma_put_frmr ( struct svcxprt_rdma * rdma , struct svc_rdma_fastreg_mr * frmr ) ; 
/*--svc_rdma_put_frmr--*/
int svc_rdma_fastreg ( struct svcxprt_rdma * xprt , struct svc_rdma_fastreg_mr * frmr ) ; 
/*--svc_rdma_fastreg--*/
int svc_rdma_send ( struct svcxprt_rdma * xprt , struct ib_send_wr * wr ) ; 
/*--svc_rdma_send--*/
void svc_rdma_send_error ( struct svcxprt_rdma * xprt , struct rpcrdma_msg * rmsgp , enum rpcrdma_errcode err ) ; 
/*--svc_rdma_send_error--*/
void svc_rdma_rcl_chunk_counts ( struct rpcrdma_read_chunk * ch , int * ch_count , int * byte_count ) ; 
/*--svc_rdma_rcl_chunk_counts--*/
int svc_rdma_xdr_decode_req ( struct rpcrdma_msg * * rdma_req , struct svc_rqst * rqstp ) ; 
/*--svc_rdma_xdr_decode_req--*/
int svc_rdma_xdr_decode_deferred_req ( struct svc_rqst * rqstp ) ; 
/*--svc_rdma_xdr_decode_deferred_req--*/
int svc_rdma_xdr_encode_error ( struct svcxprt_rdma * xprt , struct rpcrdma_msg * rmsgp , enum rpcrdma_errcode err , u32 * va ) ; 
/*--svc_rdma_xdr_encode_error--*/
int svc_rdma_xdr_get_reply_hdr_len ( struct rpcrdma_msg * rmsgp ) ; 
/*--svc_rdma_xdr_get_reply_hdr_len--*/
void svc_rdma_xdr_encode_write_list ( struct rpcrdma_msg * rmsgp , int chunks ) ; 
/*--svc_rdma_xdr_encode_write_list--*/
void svc_rdma_xdr_encode_reply_array ( struct rpcrdma_write_array * ary , int chunks ) ; 
/*--svc_rdma_xdr_encode_reply_array--*/
void svc_rdma_xdr_encode_array_chunk ( struct rpcrdma_write_array * ary , int chunk_no , u32 rs_handle , u64 rs_offset , u32 write_len ) ; 
/*--svc_rdma_xdr_encode_array_chunk--*/
void svc_rdma_xdr_encode_reply_header ( struct svcxprt_rdma * xprt , struct rpcrdma_msg * rdma_argp , struct rpcrdma_msg * rdma_resp , enum rpcrdma_proc rdma_type ) ; 
/*--svc_rdma_xdr_encode_reply_header--*/
void svc_rdma_prep_reply_hdr ( struct svc_rqst * rqstp ) ; 
/*--svc_rdma_prep_reply_hdr--*/
int svc_rdma_sendto ( struct svc_rqst * rqstp ) ; 
/*--svc_rdma_sendto--*/
int svc_rdma_recvfrom ( struct svc_rqst * rqstp ) ; 
/*--svc_rdma_recvfrom--*/
int rpcrdma_marshal_req ( struct rpc_rqst * rqst ) ; 
/*--rpcrdma_marshal_req--*/
void rpcrdma_conn_func ( struct rpcrdma_ep * ep ) ; 
/*--rpcrdma_conn_func--*/
void rpcrdma_reply_handler ( struct rpcrdma_rep * rep ) ; 
/*--rpcrdma_reply_handler--*/
int rpcrdma_ia_open ( struct rpcrdma_xprt * xprt , struct sockaddr * addr , int memreg ) ; 
/*--rpcrdma_ia_open--*/
void rpcrdma_ia_close ( struct rpcrdma_ia * ia ) ; 
/*--rpcrdma_ia_close--*/
int rpcrdma_ep_create ( struct rpcrdma_ep * ep , struct rpcrdma_ia * ia , struct rpcrdma_create_data_internal * cdata ) ; 
/*--rpcrdma_ep_create--*/
int rpcrdma_ep_destroy ( struct rpcrdma_ep * ep , struct rpcrdma_ia * ia ) ; 
/*--rpcrdma_ep_destroy--*/
int rpcrdma_ep_connect ( struct rpcrdma_ep * ep , struct rpcrdma_ia * ia ) ; 
/*--rpcrdma_ep_connect--*/
int rpcrdma_ep_disconnect ( struct rpcrdma_ep * ep , struct rpcrdma_ia * ia ) ; 
/*--rpcrdma_ep_disconnect--*/
int rpcrdma_buffer_create ( struct rpcrdma_buffer * buf , struct rpcrdma_ep * ep , struct rpcrdma_ia * ia , struct rpcrdma_create_data_internal * cdata ) ; 
/*--rpcrdma_buffer_create--*/
void rpcrdma_buffer_destroy ( struct rpcrdma_buffer * buf ) ; 
/*--rpcrdma_buffer_destroy--*/
struct rpcrdma_req * rpcrdma_buffer_get ( struct rpcrdma_buffer * buffers ) ; 
/*--rpcrdma_buffer_get--*/
void rpcrdma_buffer_put ( struct rpcrdma_req * req ) ; 
/*--rpcrdma_buffer_put--*/
void rpcrdma_recv_buffer_get ( struct rpcrdma_req * req ) ; 
/*--rpcrdma_recv_buffer_get--*/
void rpcrdma_recv_buffer_put ( struct rpcrdma_rep * rep ) ; 
/*--rpcrdma_recv_buffer_put--*/
int rpcrdma_register_internal ( struct rpcrdma_ia * ia , void * va , int len , struct ib_mr * * mrp , struct ib_sge * iov ) ; 
/*--rpcrdma_register_internal--*/
int rpcrdma_deregister_internal ( struct rpcrdma_ia * ia , struct ib_mr * mr , struct ib_sge * iov ) ; 
/*--rpcrdma_deregister_internal--*/
int rpcrdma_register_external ( struct rpcrdma_mr_seg * seg , int nsegs , int writing , struct rpcrdma_xprt * r_xprt ) ; 
/*--rpcrdma_register_external--*/
int rpcrdma_deregister_external ( struct rpcrdma_mr_seg * seg , struct rpcrdma_xprt * r_xprt , void * r ) ; 
/*--rpcrdma_deregister_external--*/
int rpcrdma_ep_post ( struct rpcrdma_ia * ia , struct rpcrdma_ep * ep , struct rpcrdma_req * req ) ; 
/*--rpcrdma_ep_post--*/
int rpcrdma_ep_post_recv ( struct rpcrdma_ia * ia , struct rpcrdma_ep * ep , struct rpcrdma_rep * rep ) ; 
/*--rpcrdma_ep_post_recv--*/
u32 tipc_get_addr ( void ) ; 
/*--tipc_get_addr--*/
int tipc_addr_domain_valid ( u32 addr ) ; 
/*--tipc_addr_domain_valid--*/
int tipc_addr_node_valid ( u32 addr ) ; 
/*--tipc_addr_node_valid--*/
int tipc_in_scope ( u32 domain , u32 addr ) ; 
/*--tipc_in_scope--*/
int tipc_addr_scope ( u32 domain ) ; 
/*--tipc_addr_scope--*/
char * tipc_addr_string_fill ( char * string , u32 addr ) ; 
/*--tipc_addr_string_fill--*/
void tipc_bclink_acknowledge ( struct tipc_node * n_ptr , u32 acked ) ; 
/*--tipc_bclink_acknowledge--*/
void tipc_bclink_check_gap ( struct tipc_node * n_ptr , u32 last_sent ) ; 
/*--tipc_bclink_check_gap--*/
int tipc_bclink_send_msg ( struct sk_buff * buf ) ; 
/*--tipc_bclink_send_msg--*/
void tipc_bclink_recv_pkt ( struct sk_buff * buf ) ; 
/*--tipc_bclink_recv_pkt--*/
u32 tipc_bclink_get_last_sent ( void ) ; 
/*--tipc_bclink_get_last_sent--*/
u32 tipc_bclink_acks_missing ( struct tipc_node * n_ptr ) ; 
/*--tipc_bclink_acks_missing--*/
void tipc_bcbearer_sort ( void ) ; 
/*--tipc_bcbearer_sort--*/
void tipc_bcbearer_push ( void ) ; 
/*--tipc_bcbearer_push--*/
int tipc_bclink_stats ( char * buf , const u32 buf_size ) ; 
/*--tipc_bclink_stats--*/
int tipc_bclink_reset_stats ( void ) ; 
/*--tipc_bclink_reset_stats--*/
int tipc_bclink_set_queue_limits ( u32 limit ) ; 
/*--tipc_bclink_set_queue_limits--*/
int tipc_bclink_init ( void ) ; 
/*--tipc_bclink_init--*/
void tipc_bclink_stop ( void ) ; 
/*--tipc_bclink_stop--*/
void tipc_nmap_add ( struct tipc_node_map * nm_ptr , u32 node ) ; 
/*--tipc_nmap_add--*/
void tipc_nmap_remove ( struct tipc_node_map * nm_ptr , u32 node ) ; 
/*--tipc_nmap_remove--*/
void tipc_nmap_diff ( struct tipc_node_map * nm_a , struct tipc_node_map * nm_b , struct tipc_node_map * nm_diff ) ; 
/*--tipc_nmap_diff--*/
void tipc_port_list_add ( struct port_list * pl_ptr , u32 port ) ; 
/*--tipc_port_list_add--*/
void tipc_port_list_free ( struct port_list * pl_ptr ) ; 
/*--tipc_port_list_free--*/
int tipc_register_media ( u32 media_type , char * name , int ( * enable ) ( struct tipc_bearer * ) , void ( * disable ) ( struct tipc_bearer * ) , int ( * send_msg ) ( struct sk_buff * , struct tipc_bearer * , struct tipc_media_addr * ) , char * ( * addr2str ) ( struct tipc_media_addr * a , char * str_buf , int str_size ) , struct tipc_media_addr * bcast_addr , const u32 bearer_priority , const u32 link_tolerance , const u32 send_window_limit ) ; 
/*--tipc_register_media--*/
void tipc_media_addr_printf ( struct print_buf * pb , struct tipc_media_addr * a ) ; 
/*--tipc_media_addr_printf--*/
struct sk_buff * tipc_media_get_names ( void ) ; 
/*--tipc_media_get_names--*/
struct bearer * tipc_bearer_find_interface ( const char * if_name ) ; 
/*--tipc_bearer_find_interface--*/
struct sk_buff * tipc_bearer_get_names ( void ) ; 
/*--tipc_bearer_get_names--*/
void tipc_bearer_add_dest ( struct bearer * b_ptr , u32 dest ) ; 
/*--tipc_bearer_add_dest--*/
void tipc_bearer_remove_dest ( struct bearer * b_ptr , u32 dest ) ; 
/*--tipc_bearer_remove_dest--*/
void tipc_bearer_lock_push ( struct bearer * b_ptr ) ; 
/*--tipc_bearer_lock_push--*/
void tipc_continue ( struct tipc_bearer * tb_ptr ) ; 
/*--tipc_continue--*/
void tipc_bearer_schedule ( struct bearer * b_ptr , struct link * l_ptr ) ; 
/*--tipc_bearer_schedule--*/
int tipc_bearer_resolve_congestion ( struct bearer * b_ptr , struct link * l_ptr ) ; 
/*--tipc_bearer_resolve_congestion--*/
int tipc_bearer_congested ( struct bearer * b_ptr , struct link * l_ptr ) ; 
/*--tipc_bearer_congested--*/
int tipc_enable_bearer ( const char * name , u32 bcast_scope , u32 priority ) ; 
/*--tipc_enable_bearer--*/
int tipc_block_bearer ( const char * name ) ; 
/*--tipc_block_bearer--*/
int tipc_disable_bearer ( const char * name ) ; 
/*--tipc_disable_bearer--*/
void tipc_bearer_stop ( void ) ; 
/*--tipc_bearer_stop--*/
struct sk_buff * tipc_cfg_reply_alloc ( int payload_size ) ; 
/*--tipc_cfg_reply_alloc--*/
int tipc_cfg_append_tlv ( struct sk_buff * buf , int tlv_type , void * tlv_data , int tlv_data_size ) ; 
/*--tipc_cfg_append_tlv--*/
struct sk_buff * tipc_cfg_reply_unsigned_type ( u16 tlv_type , u32 value ) ; 
/*--tipc_cfg_reply_unsigned_type--*/
struct sk_buff * tipc_cfg_reply_string_type ( u16 tlv_type , char * string ) ; 
/*--tipc_cfg_reply_string_type--*/
struct sk_buff * tipc_cfg_do_cmd ( u32 orig_node , u16 cmd , const void * request_area , int request_space , int reply_headroom ) ; 
/*--tipc_cfg_do_cmd--*/
int tipc_cfg_init ( void ) ; 
/*--tipc_cfg_init--*/
void tipc_cfg_stop ( void ) ; 
/*--tipc_cfg_stop--*/
struct cluster * tipc_cltr_create ( u32 addr ) ; 
/*--tipc_cltr_create--*/
void tipc_cltr_delete ( struct cluster * c_ptr ) ; 
/*--tipc_cltr_delete--*/
u32 tipc_cltr_next_node ( struct cluster * c_ptr , u32 addr ) ; 
/*--tipc_cltr_next_node--*/
void tipc_cltr_attach_node ( struct cluster * c_ptr , struct tipc_node * n_ptr ) ; 
/*--tipc_cltr_attach_node--*/
u32 tipc_cltr_select_router ( struct cluster * c_ptr , u32 ref ) ; 
/*--tipc_cltr_select_router--*/
struct tipc_node * tipc_cltr_select_node ( struct cluster * c_ptr , u32 selector ) ; 
/*--tipc_cltr_select_node--*/
void tipc_cltr_bcast_new_route ( struct cluster * c_ptr , u32 dest , u32 lower , u32 upper ) ; 
/*--tipc_cltr_bcast_new_route--*/
void tipc_cltr_bcast_lost_route ( struct cluster * c_ptr , u32 dest , u32 lower , u32 upper ) ; 
/*--tipc_cltr_bcast_lost_route--*/
void tipc_cltr_send_slave_routes ( struct cluster * c_ptr , u32 dest ) ; 
/*--tipc_cltr_send_slave_routes--*/
void tipc_cltr_send_ext_routes ( struct cluster * c_ptr , u32 dest ) ; 
/*--tipc_cltr_send_ext_routes--*/
void tipc_cltr_send_local_routes ( struct cluster * c_ptr , u32 dest ) ; 
/*--tipc_cltr_send_local_routes--*/
void tipc_cltr_recv_routing_table ( struct sk_buff * buf ) ; 
/*--tipc_cltr_recv_routing_table--*/
void tipc_cltr_remove_as_router ( struct cluster * c_ptr , u32 router ) ; 
/*--tipc_cltr_remove_as_router--*/
void tipc_cltr_broadcast ( struct sk_buff * buf ) ; 
/*--tipc_cltr_broadcast--*/
int tipc_cltr_init ( void ) ; 
/*--tipc_cltr_init--*/
int tipc_get_mode ( void ) ; 
/*--tipc_get_mode--*/
struct sk_buff * buf_acquire ( u32 size ) ; 
/*--buf_acquire--*/
void tipc_core_stop_net ( void ) ; 
/*--tipc_core_stop_net--*/
int tipc_core_start_net ( unsigned long addr ) ; 
/*--tipc_core_start_net--*/
void tipc_core_stop ( void ) ; 
/*--tipc_core_stop--*/
int tipc_core_start ( void ) ; 
/*--tipc_core_start--*/
unsigned int tipc_k_signal ( Handler routine , unsigned long argument ) ; 
/*--tipc_k_signal--*/
int tipc_handler_start ( void ) ; 
/*--tipc_handler_start--*/
void tipc_handler_stop ( void ) ; 
/*--tipc_handler_stop--*/
int tipc_link_is_up ( struct link * l_ptr ) ; 
/*--tipc_link_is_up--*/
int tipc_link_is_active ( struct link * l_ptr ) ; 
/*--tipc_link_is_active--*/
struct link * tipc_link_create ( struct bearer * b_ptr , const u32 peer , const struct tipc_media_addr * media_addr ) ; 
/*--tipc_link_create--*/
void tipc_link_delete ( struct link * l_ptr ) ; 
/*--tipc_link_delete--*/
void tipc_link_start ( struct link * l_ptr ) ; 
/*--tipc_link_start--*/
void tipc_link_wakeup_ports ( struct link * l_ptr , int all ) ; 
/*--tipc_link_wakeup_ports--*/
void tipc_link_reset_fragments ( struct link * l_ptr ) ; 
/*--tipc_link_reset_fragments--*/
void tipc_link_stop ( struct link * l_ptr ) ; 
/*--tipc_link_stop--*/
void tipc_link_reset ( struct link * l_ptr ) ; 
/*--tipc_link_reset--*/
int tipc_link_send_buf ( struct link * l_ptr , struct sk_buff * buf ) ; 
/*--tipc_link_send_buf--*/
int tipc_link_send ( struct sk_buff * buf , u32 dest , u32 selector ) ; 
/*--tipc_link_send--*/
int tipc_send_buf_fast ( struct sk_buff * buf , u32 destnode ) ; 
/*--tipc_send_buf_fast--*/
int tipc_link_send_sections_fast ( struct port * sender , struct iovec const * msg_sect , const u32 num_sect , u32 destaddr ) ; 
/*--tipc_link_send_sections_fast--*/
u32 tipc_link_push_packet ( struct link * l_ptr ) ; 
/*--tipc_link_push_packet--*/
void tipc_link_push_queue ( struct link * l_ptr ) ; 
/*--tipc_link_push_queue--*/
void tipc_link_retransmit ( struct link * l_ptr , struct sk_buff * buf , u32 retransmits ) ; 
/*--tipc_link_retransmit--*/
void tipc_recv_msg ( struct sk_buff * head , struct tipc_bearer * tb_ptr ) ; 
/*--tipc_recv_msg--*/
u32 tipc_link_defer_pkt ( struct sk_buff * * head , struct sk_buff * * tail , struct sk_buff * buf ) ; 
/*--tipc_link_defer_pkt--*/
void tipc_link_send_proto_msg ( struct link * l_ptr , u32 msg_typ , int probe_msg , u32 gap , u32 tolerance , u32 priority , u32 ack_mtu ) ; 
/*--tipc_link_send_proto_msg--*/
void tipc_link_tunnel ( struct link * l_ptr , struct tipc_msg * tunnel_hdr , struct tipc_msg * msg , u32 selector ) ; 
/*--tipc_link_tunnel--*/
void tipc_link_changeover ( struct link * l_ptr ) ; 
/*--tipc_link_changeover--*/
void tipc_link_send_duplicate ( struct link * l_ptr , struct link * tunnel ) ; 
/*--tipc_link_send_duplicate--*/
void tipc_link_recv_bundle ( struct sk_buff * buf ) ; 
/*--tipc_link_recv_bundle--*/
int tipc_link_send_long_buf ( struct link * l_ptr , struct sk_buff * buf ) ; 
/*--tipc_link_send_long_buf--*/
int tipc_link_recv_fragment ( struct sk_buff * * pending , struct sk_buff * * fb , struct tipc_msg * * m ) ; 
/*--tipc_link_recv_fragment--*/
void tipc_link_set_queue_limits ( struct link * l_ptr , u32 window ) ; 
/*--tipc_link_set_queue_limits--*/
struct sk_buff * tipc_link_cmd_config ( const void * req_tlv_area , int req_tlv_space , u16 cmd ) ; 
/*--tipc_link_cmd_config--*/
struct sk_buff * tipc_link_cmd_reset_stats ( const void * req_tlv_area , int req_tlv_space ) ; 
/*--tipc_link_cmd_reset_stats--*/
struct sk_buff * tipc_link_cmd_show_stats ( const void * req_tlv_area , int req_tlv_space ) ; 
/*--tipc_link_cmd_show_stats--*/
u32 tipc_link_get_max_pkt ( u32 dest , u32 selector ) ; 
/*--tipc_link_get_max_pkt--*/
void tipc_disc_link_event ( u32 addr , char * name , int up ) ; 
/*--tipc_disc_link_event--*/
void tipc_disc_recv_msg ( struct sk_buff * buf , struct bearer * b_ptr ) ; 
/*--tipc_disc_recv_msg--*/
void tipc_disc_stop_link_req ( struct link_req * req ) ; 
/*--tipc_disc_stop_link_req--*/
void tipc_disc_update_link_req ( struct link_req * req ) ; 
/*--tipc_disc_update_link_req--*/
struct link_req * tipc_disc_init_link_req ( struct bearer * b_ptr , const struct tipc_media_addr * dest , u32 dest_domain , u32 req_links ) ; 
/*--tipc_disc_init_link_req--*/
u32 tipc_msg_tot_importance ( struct tipc_msg * m ) ; 
/*--tipc_msg_tot_importance--*/
void tipc_msg_init ( struct tipc_msg * m , u32 user , u32 type , u32 hsize , u32 destnode ) ; 
/*--tipc_msg_init--*/
int tipc_msg_calc_data_size ( struct iovec const * msg_sect , u32 num_sect ) ; 
/*--tipc_msg_calc_data_size--*/
int tipc_msg_build ( struct tipc_msg * hdr , struct iovec const * msg_sect , u32 num_sect , int max_size , int usrmem , struct sk_buff * * buf ) ; 
/*--tipc_msg_build--*/
void tipc_named_publish ( struct publication * publ ) ; 
/*--tipc_named_publish--*/
void tipc_named_withdraw ( struct publication * publ ) ; 
/*--tipc_named_withdraw--*/
void tipc_named_node_up ( unsigned long node ) ; 
/*--tipc_named_node_up--*/
void tipc_named_recv ( struct sk_buff * buf ) ; 
/*--tipc_named_recv--*/
void tipc_named_reinit ( void ) ; 
/*--tipc_named_reinit--*/
int tipc_subscr_overlap ( struct subscription * sub , u32 found_lower , u32 found_upper ) ; 
/*--tipc_subscr_overlap--*/
void tipc_subscr_report_overlap ( struct subscription * sub , u32 found_lower , u32 found_upper , u32 event , u32 port_ref , u32 node , int must ) ; 
/*--tipc_subscr_report_overlap--*/
int tipc_subscr_start ( void ) ; 
/*--tipc_subscr_start--*/
void tipc_subscr_stop ( void ) ; 
/*--tipc_subscr_stop--*/
int tipc_ispublished ( struct tipc_name const * name ) ; 
/*--tipc_ispublished--*/
struct publication * tipc_nametbl_insert_publ ( u32 type , u32 lower , u32 upper , u32 scope , u32 node , u32 port , u32 key ) ; 
/*--tipc_nametbl_insert_publ--*/
struct publication * tipc_nametbl_remove_publ ( u32 type , u32 lower , u32 node , u32 ref , u32 key ) ; 
/*--tipc_nametbl_remove_publ--*/
u32 tipc_nametbl_translate ( u32 type , u32 instance , u32 * destnode ) ; 
/*--tipc_nametbl_translate--*/
int tipc_nametbl_mc_translate ( u32 type , u32 lower , u32 upper , u32 limit , struct port_list * dports ) ; 
/*--tipc_nametbl_mc_translate--*/
int tipc_nametbl_publish_rsv ( u32 ref , unsigned int scope , struct tipc_name_seq const * seq ) ; 
/*--tipc_nametbl_publish_rsv--*/
struct publication * tipc_nametbl_publish ( u32 type , u32 lower , u32 upper , u32 scope , u32 port_ref , u32 key ) ; 
/*--tipc_nametbl_publish--*/
int tipc_nametbl_withdraw ( u32 type , u32 lower , u32 ref , u32 key ) ; 
/*--tipc_nametbl_withdraw--*/
void tipc_nametbl_subscribe ( struct subscription * s ) ; 
/*--tipc_nametbl_subscribe--*/
void tipc_nametbl_unsubscribe ( struct subscription * s ) ; 
/*--tipc_nametbl_unsubscribe--*/
struct sk_buff * tipc_nametbl_get ( const void * req_tlv_area , int req_tlv_space ) ; 
/*--tipc_nametbl_get--*/
int tipc_nametbl_init ( void ) ; 
/*--tipc_nametbl_init--*/
void tipc_nametbl_stop ( void ) ; 
/*--tipc_nametbl_stop--*/
struct tipc_node * tipc_net_select_remote_node ( u32 addr , u32 ref ) ; 
/*--tipc_net_select_remote_node--*/
u32 tipc_net_select_router ( u32 addr , u32 ref ) ; 
/*--tipc_net_select_router--*/
void tipc_net_remove_as_router ( u32 router ) ; 
/*--tipc_net_remove_as_router--*/
void tipc_net_send_external_routes ( u32 dest ) ; 
/*--tipc_net_send_external_routes--*/
void tipc_net_route_msg ( struct sk_buff * buf ) ; 
/*--tipc_net_route_msg--*/
int tipc_net_start ( u32 addr ) ; 
/*--tipc_net_start--*/
void tipc_net_stop ( void ) ; 
/*--tipc_net_stop--*/
int tipc_netlink_start ( void ) ; 
/*--tipc_netlink_start--*/
void tipc_netlink_stop ( void ) ; 
/*--tipc_netlink_stop--*/
struct tipc_node * tipc_node_create ( u32 addr ) ; 
/*--tipc_node_create--*/
void tipc_node_delete ( struct tipc_node * n_ptr ) ; 
/*--tipc_node_delete--*/
void tipc_node_link_up ( struct tipc_node * n_ptr , struct link * l_ptr ) ; 
/*--tipc_node_link_up--*/
void tipc_node_link_down ( struct tipc_node * n_ptr , struct link * l_ptr ) ; 
/*--tipc_node_link_down--*/
int tipc_node_has_active_links ( struct tipc_node * n_ptr ) ; 
/*--tipc_node_has_active_links--*/
int tipc_node_has_redundant_links ( struct tipc_node * n_ptr ) ; 
/*--tipc_node_has_redundant_links--*/
int tipc_node_is_up ( struct tipc_node * n_ptr ) ; 
/*--tipc_node_is_up--*/
struct tipc_node * tipc_node_attach_link ( struct link * l_ptr ) ; 
/*--tipc_node_attach_link--*/
void tipc_node_detach_link ( struct tipc_node * n_ptr , struct link * l_ptr ) ; 
/*--tipc_node_detach_link--*/
struct tipc_node * tipc_node_select_next_hop ( u32 addr , u32 selector ) ; 
/*--tipc_node_select_next_hop--*/
u32 tipc_node_select_router ( struct tipc_node * n_ptr , u32 ref ) ; 
/*--tipc_node_select_router--*/
void tipc_node_add_router ( struct tipc_node * n_ptr , u32 router ) ; 
/*--tipc_node_add_router--*/
void tipc_node_remove_router ( struct tipc_node * n_ptr , u32 router ) ; 
/*--tipc_node_remove_router--*/
u32 tipc_available_nodes ( const u32 domain ) ; 
/*--tipc_available_nodes--*/
struct sk_buff * tipc_node_get_nodes ( const void * req_tlv_area , int req_tlv_space ) ; 
/*--tipc_node_get_nodes--*/
struct sk_buff * tipc_node_get_links ( const void * req_tlv_area , int req_tlv_space ) ; 
/*--tipc_node_get_links--*/
void tipc_nodesub_subscribe ( struct tipc_node_subscr * node_sub , u32 addr , void * usr_handle , net_ev_handler handle_down ) ; 
/*--tipc_nodesub_subscribe--*/
void tipc_nodesub_unsubscribe ( struct tipc_node_subscr * node_sub ) ; 
/*--tipc_nodesub_unsubscribe--*/
int tipc_multicast ( u32 ref , struct tipc_name_seq const * seq , u32 domain , u32 num_sect , struct iovec const * msg_sect ) ; 
/*--tipc_multicast--*/
void tipc_port_recv_mcast ( struct sk_buff * buf , struct port_list * dp ) ; 
/*--tipc_port_recv_mcast--*/
struct tipc_port * tipc_createport_raw ( void * usr_handle , u32 ( * dispatcher ) ( struct tipc_port * , struct sk_buff * ) , void ( * wakeup ) ( struct tipc_port * ) , const u32 importance ) ; 
/*--tipc_createport_raw--*/
int tipc_deleteport ( u32 ref ) ; 
/*--tipc_deleteport--*/
struct tipc_port * tipc_get_port ( const u32 ref ) ; 
/*--tipc_get_port--*/
void * tipc_get_handle ( const u32 ref ) ; 
/*--tipc_get_handle--*/
int tipc_portunreliable ( u32 ref , unsigned int * isunreliable ) ; 
/*--tipc_portunreliable--*/
int tipc_set_portunreliable ( u32 ref , unsigned int isunreliable ) ; 
/*--tipc_set_portunreliable--*/
int tipc_portunreturnable ( u32 ref , unsigned int * isunrejectable ) ; 
/*--tipc_portunreturnable--*/
int tipc_set_portunreturnable ( u32 ref , unsigned int isunrejectable ) ; 
/*--tipc_set_portunreturnable--*/
int tipc_reject_msg ( struct sk_buff * buf , u32 err ) ; 
/*--tipc_reject_msg--*/
int tipc_port_reject_sections ( struct port * p_ptr , struct tipc_msg * hdr , struct iovec const * msg_sect , u32 num_sect , int err ) ; 
/*--tipc_port_reject_sections--*/
void tipc_port_recv_proto_msg ( struct sk_buff * buf ) ; 
/*--tipc_port_recv_proto_msg--*/
struct sk_buff * tipc_port_get_ports ( void ) ; 
/*--tipc_port_get_ports--*/
void tipc_port_reinit ( void ) ; 
/*--tipc_port_reinit--*/
void tipc_acknowledge ( u32 ref , u32 ack ) ; 
/*--tipc_acknowledge--*/
int tipc_createport ( u32 user_ref , void * usr_handle , unsigned int importance , tipc_msg_err_event error_cb , tipc_named_msg_err_event named_error_cb , tipc_conn_shutdown_event conn_error_cb , tipc_msg_event msg_cb , tipc_named_msg_event named_msg_cb , tipc_conn_msg_event conn_msg_cb , tipc_continue_event continue_event_cb , u32 * portref ) ; 
/*--tipc_createport--*/
int tipc_ownidentity ( u32 ref , struct tipc_portid * id ) ; 
/*--tipc_ownidentity--*/
int tipc_portimportance ( u32 ref , unsigned int * importance ) ; 
/*--tipc_portimportance--*/
int tipc_set_portimportance ( u32 ref , unsigned int imp ) ; 
/*--tipc_set_portimportance--*/
int tipc_publish ( u32 ref , unsigned int scope , struct tipc_name_seq const * seq ) ; 
/*--tipc_publish--*/
int tipc_withdraw ( u32 ref , unsigned int scope , struct tipc_name_seq const * seq ) ; 
/*--tipc_withdraw--*/
int tipc_connect2port ( u32 ref , struct tipc_portid const * peer ) ; 
/*--tipc_connect2port--*/
int tipc_disconnect_port ( struct tipc_port * tp_ptr ) ; 
/*--tipc_disconnect_port--*/
int tipc_disconnect ( u32 ref ) ; 
/*--tipc_disconnect--*/
int tipc_shutdown ( u32 ref ) ; 
/*--tipc_shutdown--*/
int tipc_isconnected ( u32 ref , int * isconnected ) ; 
/*--tipc_isconnected--*/
int tipc_peer ( u32 ref , struct tipc_portid * peer ) ; 
/*--tipc_peer--*/
int tipc_ref_valid ( u32 ref ) ; 
/*--tipc_ref_valid--*/
int tipc_port_recv_sections ( struct port * sender , unsigned int num_sect , struct iovec const * msg_sect ) ; 
/*--tipc_port_recv_sections--*/
int tipc_send ( u32 ref , unsigned int num_sect , struct iovec const * msg_sect ) ; 
/*--tipc_send--*/
int tipc_send_buf ( u32 ref , struct sk_buff * buf , unsigned int dsz ) ; 
/*--tipc_send_buf--*/
int tipc_forward2name ( u32 ref , struct tipc_name const * name , u32 domain , u32 num_sect , struct iovec const * msg_sect , struct tipc_portid const * orig , unsigned int importance ) ; 
/*--tipc_forward2name--*/
int tipc_send2name ( u32 ref , struct tipc_name const * name , unsigned int domain , unsigned int num_sect , struct iovec const * msg_sect ) ; 
/*--tipc_send2name--*/
int tipc_forward_buf2name ( u32 ref , struct tipc_name const * name , u32 domain , struct sk_buff * buf , unsigned int dsz , struct tipc_portid const * orig , unsigned int importance ) ; 
/*--tipc_forward_buf2name--*/
int tipc_send_buf2name ( u32 ref , struct tipc_name const * dest , u32 domain , struct sk_buff * buf , unsigned int dsz ) ; 
/*--tipc_send_buf2name--*/
int tipc_forward2port ( u32 ref , struct tipc_portid const * dest , unsigned int num_sect , struct iovec const * msg_sect , struct tipc_portid const * orig , unsigned int importance ) ; 
/*--tipc_forward2port--*/
int tipc_send2port ( u32 ref , struct tipc_portid const * dest , unsigned int num_sect , struct iovec const * msg_sect ) ; 
/*--tipc_send2port--*/
int tipc_forward_buf2port ( u32 ref , struct tipc_portid const * dest , struct sk_buff * buf , unsigned int dsz , struct tipc_portid const * orig , unsigned int importance ) ; 
/*--tipc_forward_buf2port--*/
int tipc_send_buf2port ( u32 ref , struct tipc_portid const * dest , struct sk_buff * buf , unsigned int dsz ) ; 
/*--tipc_send_buf2port--*/
int tipc_ref_table_init ( u32 requested_size , u32 start ) ; 
/*--tipc_ref_table_init--*/
void tipc_ref_table_stop ( void ) ; 
/*--tipc_ref_table_stop--*/
u32 tipc_ref_acquire ( void * object , spinlock_t * * lock ) ; 
/*--tipc_ref_acquire--*/
void tipc_ref_discard ( u32 ref ) ; 
/*--tipc_ref_discard--*/
void * tipc_ref_lock ( u32 ref ) ; 
/*--tipc_ref_lock--*/
void tipc_ref_unlock ( u32 ref ) ; 
/*--tipc_ref_unlock--*/
void * tipc_ref_deref ( u32 ref ) ; 
/*--tipc_ref_deref--*/
int tipc_socket_init ( void ) ; 
/*--tipc_socket_init--*/
void tipc_socket_stop ( void ) ; 
/*--tipc_socket_stop--*/
int tipc_reg_start ( void ) ; 
/*--tipc_reg_start--*/
void tipc_reg_stop ( void ) ; 
/*--tipc_reg_stop--*/
int tipc_attach ( u32 * userid , tipc_mode_event cb , void * usr_handle ) ; 
/*--tipc_attach--*/
void tipc_detach ( u32 userid ) ; 
/*--tipc_detach--*/
int tipc_reg_add_port ( struct user_port * up_ptr ) ; 
/*--tipc_reg_add_port--*/
int tipc_reg_remove_port ( struct user_port * up_ptr ) ; 
/*--tipc_reg_remove_port--*/
struct _zone * tipc_zone_create ( u32 addr ) ; 
/*--tipc_zone_create--*/
void tipc_zone_delete ( struct _zone * z_ptr ) ; 
/*--tipc_zone_delete--*/
void tipc_zone_attach_cluster ( struct _zone * z_ptr , struct cluster * c_ptr ) ; 
/*--tipc_zone_attach_cluster--*/
void tipc_zone_remove_as_router ( struct _zone * z_ptr , u32 router ) ; 
/*--tipc_zone_remove_as_router--*/
void tipc_zone_send_external_routes ( struct _zone * z_ptr , u32 dest ) ; 
/*--tipc_zone_send_external_routes--*/
struct tipc_node * tipc_zone_select_remote_node ( struct _zone * z_ptr , u32 addr , u32 ref ) ; 
/*--tipc_zone_select_remote_node--*/
u32 tipc_zone_select_router ( struct _zone * z_ptr , u32 addr , u32 ref ) ; 
/*--tipc_zone_select_router--*/
u32 tipc_zone_next_node ( u32 addr ) ; 
/*--tipc_zone_next_node--*/
void tipc_printbuf_init ( struct print_buf * pb , char * raw , u32 size ) ; 
/*--tipc_printbuf_init--*/
void tipc_printbuf_reset ( struct print_buf * pb ) ; 
/*--tipc_printbuf_reset--*/
int tipc_printbuf_empty ( struct print_buf * pb ) ; 
/*--tipc_printbuf_empty--*/
int tipc_printbuf_validate ( struct print_buf * pb ) ; 
/*--tipc_printbuf_validate--*/
void tipc_printbuf_move ( struct print_buf * pb_to , struct print_buf * pb_from ) ; 
/*--tipc_printbuf_move--*/
void tipc_printf ( struct print_buf * pb , const char * fmt , ... ) ; 
/*--tipc_printf--*/
int tipc_log_resize ( int log_size ) ; 
/*--tipc_log_resize--*/
struct sk_buff * tipc_log_resize_cmd ( const void * req_tlv_area , int req_tlv_space ) ; 
/*--tipc_log_resize_cmd--*/
struct sk_buff * tipc_log_dump ( void ) ; 
/*--tipc_log_dump--*/
int tipc_eth_media_start ( void ) ; 
/*--tipc_eth_media_start--*/
void tipc_eth_media_stop ( void ) ; 
/*--tipc_eth_media_stop--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) wanrouter_proc_init ( void ) ; 
/*--wanrouter_proc_init--*/
void wanrouter_proc_cleanup ( void ) ; 
/*--wanrouter_proc_cleanup--*/
int wanrouter_proc_add ( struct wan_device * wandev ) ; 
/*--wanrouter_proc_add--*/
int wanrouter_proc_delete ( struct wan_device * wandev ) ; 
/*--wanrouter_proc_delete--*/
; int register_wan_device ( struct wan_device * wandev ) ; 
/*--register_wan_device--*/
int unregister_wan_device ( char * name ) ; 
/*--unregister_wan_device--*/
long wanrouter_ioctl ( struct file * file , unsigned int cmd , unsigned long arg ) ; 
/*--wanrouter_ioctl--*/
void wimax_id_table_add ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_id_table_add--*/
struct wimax_dev * wimax_dev_get_by_genl_info ( struct genl_info * info , int ifindex ) ; 
/*--wimax_dev_get_by_genl_info--*/
void wimax_id_table_rm ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_id_table_rm--*/
void wimax_id_table_release ( void ) ; 
/*--wimax_id_table_release--*/
struct sk_buff * wimax_msg_alloc ( struct wimax_dev * wimax_dev , const char * pipe_name , const void * msg , size_t size , gfp_t gfp_flags ) ; 
/*--wimax_msg_alloc--*/
const void * wimax_msg_data_len ( struct sk_buff * msg , size_t * size ) ; 
/*--wimax_msg_data_len--*/
const void * wimax_msg_data ( struct sk_buff * msg ) ; 
/*--wimax_msg_data--*/
ssize_t wimax_msg_len ( struct sk_buff * msg ) ; 
/*--wimax_msg_len--*/
int wimax_msg_send ( struct wimax_dev * wimax_dev , struct sk_buff * skb ) ; 
/*--wimax_msg_send--*/
int wimax_msg ( struct wimax_dev * wimax_dev , const char * pipe_name , const void * buf , size_t size , gfp_t gfp_flags ) ; 
/*--wimax_msg--*/
int wimax_reset ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_reset--*/
void wimax_report_rfkill_hw ( struct wimax_dev * wimax_dev , enum wimax_rf_state state ) ; 
/*--wimax_report_rfkill_hw--*/
void wimax_report_rfkill_sw ( struct wimax_dev * wimax_dev , enum wimax_rf_state state ) ; 
/*--wimax_report_rfkill_sw--*/
int wimax_rfkill ( struct wimax_dev * wimax_dev , enum wimax_rf_state state ) ; 
/*--wimax_rfkill--*/
int wimax_rfkill_add ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_rfkill_add--*/
void wimax_rfkill_rm ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_rfkill_rm--*/
void __wimax_state_change ( struct wimax_dev * wimax_dev , enum wimax_st new_state ) ; 
/*--__wimax_state_change--*/
void wimax_state_change ( struct wimax_dev * wimax_dev , enum wimax_st new_state ) ; 
/*--wimax_state_change--*/
enum wimax_st wimax_state_get ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_state_get--*/
void wimax_dev_init ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_dev_init--*/
int wimax_dev_add ( struct wimax_dev * wimax_dev , struct net_device * net_dev ) ; 
/*--wimax_dev_add--*/
void wimax_dev_rm ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_dev_rm--*/
int wimax_debugfs_add ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_debugfs_add--*/
void wimax_debugfs_rm ( struct wimax_dev * wimax_dev ) ; 
/*--wimax_debugfs_rm--*/
struct cfg80211_registered_device * cfg80211_rdev_by_wiphy_idx ( int wiphy_idx ) ; 
/*--cfg80211_rdev_by_wiphy_idx--*/
int get_wiphy_idx ( struct wiphy * wiphy ) ; 
/*--get_wiphy_idx--*/
struct wiphy * wiphy_idx_to_wiphy ( int wiphy_idx ) ; 
/*--wiphy_idx_to_wiphy--*/
struct cfg80211_registered_device * __cfg80211_rdev_from_info ( struct genl_info * info ) ; 
/*--__cfg80211_rdev_from_info--*/
struct cfg80211_registered_device * cfg80211_get_dev_from_info ( struct genl_info * info ) ; 
/*--cfg80211_get_dev_from_info--*/
struct cfg80211_registered_device * cfg80211_get_dev_from_ifindex ( struct net * net , int ifindex ) ; 
/*--cfg80211_get_dev_from_ifindex--*/
int cfg80211_dev_rename ( struct cfg80211_registered_device * rdev , char * newname ) ; 
/*--cfg80211_dev_rename--*/
int cfg80211_switch_netns ( struct cfg80211_registered_device * rdev , struct net * net ) ; 
/*--cfg80211_switch_netns--*/
struct wiphy * wiphy_new ( const struct cfg80211_ops * ops , int sizeof_priv ) ; 
/*--wiphy_new--*/
int wiphy_register ( struct wiphy * wiphy ) ; 
/*--wiphy_register--*/
void wiphy_rfkill_start_polling ( struct wiphy * wiphy ) ; 
/*--wiphy_rfkill_start_polling--*/
void wiphy_rfkill_stop_polling ( struct wiphy * wiphy ) ; 
/*--wiphy_rfkill_stop_polling--*/
void wiphy_unregister ( struct wiphy * wiphy ) ; 
/*--wiphy_unregister--*/
void cfg80211_dev_free ( struct cfg80211_registered_device * rdev ) ; 
/*--cfg80211_dev_free--*/
void wiphy_free ( struct wiphy * wiphy ) ; 
/*--wiphy_free--*/
void wiphy_rfkill_set_hw_state ( struct wiphy * wiphy , bool blocked ) ; 
/*--wiphy_rfkill_set_hw_state--*/
int wiphy_sysfs_init ( void ) ; 
/*--wiphy_sysfs_init--*/
void wiphy_sysfs_exit ( void ) ; 
/*--wiphy_sysfs_exit--*/
int ieee80211_radiotap_iterator_init ( struct ieee80211_radiotap_iterator * iterator , struct ieee80211_radiotap_header * radiotap_header , int max_length , const struct ieee80211_radiotap_vendor_namespaces * vns ) ; 
/*--ieee80211_radiotap_iterator_init--*/
int ieee80211_radiotap_iterator_next ( struct ieee80211_radiotap_iterator * iterator ) ; 
/*--ieee80211_radiotap_iterator_next--*/
struct ieee80211_rate * ieee80211_get_response_rate ( struct ieee80211_supported_band * sband , u32 basic_rates , int bitrate ) ; 
/*--ieee80211_get_response_rate--*/
int ieee80211_channel_to_frequency ( int chan ) ; 
/*--ieee80211_channel_to_frequency--*/
int ieee80211_frequency_to_channel ( int freq ) ; 
/*--ieee80211_frequency_to_channel--*/
struct ieee80211_channel * __ieee80211_get_channel ( struct wiphy * wiphy , int freq ) ; 
/*--__ieee80211_get_channel--*/
void ieee80211_set_bitrate_flags ( struct wiphy * wiphy ) ; 
/*--ieee80211_set_bitrate_flags--*/
int cfg80211_validate_key_settings ( struct cfg80211_registered_device * rdev , struct key_params * params , int key_idx , const u8 * mac_addr ) ; 
/*--cfg80211_validate_key_settings--*/
unsigned int ieee80211_hdrlen ( __le16 fc ) ; 
/*--ieee80211_hdrlen--*/
unsigned int ieee80211_get_hdrlen_from_skb ( const struct sk_buff * skb ) ; 
/*--ieee80211_get_hdrlen_from_skb--*/
int ieee80211_data_to_8023 ( struct sk_buff * skb , const u8 * addr , enum nl80211_iftype iftype ) ; 
/*--ieee80211_data_to_8023--*/
int ieee80211_data_from_8023 ( struct sk_buff * skb , const u8 * addr , enum nl80211_iftype iftype , u8 * bssid , bool qos ) ; 
/*--ieee80211_data_from_8023--*/
void ieee80211_amsdu_to_8023s ( struct sk_buff * skb , struct sk_buff_head * list , const u8 * addr , enum nl80211_iftype iftype , const unsigned int extra_headroom ) ; 
/*--ieee80211_amsdu_to_8023s--*/
unsigned int cfg80211_classify8021d ( struct sk_buff * skb ) ; 
/*--cfg80211_classify8021d--*/
const u8 * ieee80211_bss_get_ie ( struct cfg80211_bss * bss , u8 ie ) ; 
/*--ieee80211_bss_get_ie--*/
void cfg80211_upload_connect_keys ( struct wireless_dev * wdev ) ; 
/*--cfg80211_upload_connect_keys--*/
void cfg80211_process_rdev_events ( struct cfg80211_registered_device * rdev ) ; 
/*--cfg80211_process_rdev_events--*/
int cfg80211_change_iface ( struct cfg80211_registered_device * rdev , struct net_device * dev , enum nl80211_iftype ntype , u32 * flags , struct vif_params * params ) ; 
/*--cfg80211_change_iface--*/
u16 cfg80211_calculate_bitrate ( struct rate_info * rate ) ; 
/*--cfg80211_calculate_bitrate--*/
bool is_world_regdom ( const char * alpha2 ) ; 
/*--is_world_regdom--*/
bool reg_is_valid_request ( const char * alpha2 ) ; 
/*--reg_is_valid_request--*/
int freq_reg_info ( struct wiphy * wiphy , u32 center_freq , u32 desired_bw_khz , const struct ieee80211_reg_rule * * reg_rule ) ; 
/*--freq_reg_info--*/
void wiphy_update_regulatory ( struct wiphy * wiphy , enum nl80211_reg_initiator initiator ) ; 
/*--wiphy_update_regulatory--*/
void wiphy_apply_custom_regulatory ( struct wiphy * wiphy , const struct ieee80211_regdomain * regd ) ; 
/*--wiphy_apply_custom_regulatory--*/
int regulatory_hint_user ( const char * alpha2 ) ; 
/*--regulatory_hint_user--*/
int regulatory_hint ( struct wiphy * wiphy , const char * alpha2 ) ; 
/*--regulatory_hint--*/
void regulatory_hint_11d ( struct wiphy * wiphy , enum ieee80211_band band , u8 * country_ie , u8 country_ie_len ) ; 
/*--regulatory_hint_11d--*/
void regulatory_hint_disconnect ( void ) ; 
/*--regulatory_hint_disconnect--*/
int regulatory_hint_found_beacon ( struct wiphy * wiphy , struct ieee80211_channel * beacon_chan , gfp_t gfp ) ; 
/*--regulatory_hint_found_beacon--*/
int set_regdom ( const struct ieee80211_regdomain * rd ) ; 
/*--set_regdom--*/
void reg_device_remove ( struct wiphy * wiphy ) ; 
/*--reg_device_remove--*/
int regulatory_init ( void ) ; 
/*--regulatory_init--*/
void regulatory_exit ( void ) ; 
/*--regulatory_exit--*/
void ___cfg80211_scan_done ( struct cfg80211_registered_device * rdev , bool leak ) ; 
/*--___cfg80211_scan_done--*/
void __cfg80211_scan_done ( struct work_struct * wk ) ; 
/*--__cfg80211_scan_done--*/
void cfg80211_scan_done ( struct cfg80211_scan_request * request , bool aborted ) ; 
/*--cfg80211_scan_done--*/
void cfg80211_bss_age ( struct cfg80211_registered_device * dev , unsigned long age_secs ) ; 
/*--cfg80211_bss_age--*/
void cfg80211_bss_expire ( struct cfg80211_registered_device * dev ) ; 
/*--cfg80211_bss_expire--*/
const u8 * cfg80211_find_ie ( u8 eid , const u8 * ies , int len ) ; 
/*--cfg80211_find_ie--*/
struct cfg80211_bss * cfg80211_get_bss ( struct wiphy * wiphy , struct ieee80211_channel * channel , const u8 * bssid , const u8 * ssid , size_t ssid_len , u16 capa_mask , u16 capa_val ) ; 
/*--cfg80211_get_bss--*/
struct cfg80211_bss * cfg80211_get_mesh ( struct wiphy * wiphy , struct ieee80211_channel * channel , const u8 * meshid , size_t meshidlen , const u8 * meshcfg ) ; 
/*--cfg80211_get_mesh--*/
struct cfg80211_bss * cfg80211_inform_bss ( struct wiphy * wiphy , struct ieee80211_channel * channel , const u8 * bssid , u64 timestamp , u16 capability , u16 beacon_interval , const u8 * ie , size_t ielen , s32 signal , gfp_t gfp ) ; 
/*--cfg80211_inform_bss--*/
struct cfg80211_bss * cfg80211_inform_bss_frame ( struct wiphy * wiphy , struct ieee80211_channel * channel , struct ieee80211_mgmt * mgmt , size_t len , s32 signal , gfp_t gfp ) ; 
/*--cfg80211_inform_bss_frame--*/
void cfg80211_put_bss ( struct cfg80211_bss * pub ) ; 
/*--cfg80211_put_bss--*/
void cfg80211_unlink_bss ( struct wiphy * wiphy , struct cfg80211_bss * pub ) ; 
/*--cfg80211_unlink_bss--*/
int cfg80211_wext_siwscan ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * wrqu , char * extra ) ; 
/*--cfg80211_wext_siwscan--*/
int cfg80211_wext_giwscan ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--cfg80211_wext_giwscan--*/
struct sk_buff * cfg80211_testmode_alloc_reply_skb ( struct wiphy * wiphy , int approxlen ) ; 
/*--cfg80211_testmode_alloc_reply_skb--*/
int cfg80211_testmode_reply ( struct sk_buff * skb ) ; 
/*--cfg80211_testmode_reply--*/
struct sk_buff * cfg80211_testmode_alloc_event_skb ( struct wiphy * wiphy , int approxlen , gfp_t gfp ) ; 
/*--cfg80211_testmode_alloc_event_skb--*/
void cfg80211_testmode_event ( struct sk_buff * skb , gfp_t gfp ) ; 
/*--cfg80211_testmode_event--*/
void nl80211_notify_dev_rename ( struct cfg80211_registered_device * rdev ) ; 
/*--nl80211_notify_dev_rename--*/
void nl80211_send_scan_start ( struct cfg80211_registered_device * rdev , struct net_device * netdev ) ; 
/*--nl80211_send_scan_start--*/
void nl80211_send_scan_done ( struct cfg80211_registered_device * rdev , struct net_device * netdev ) ; 
/*--nl80211_send_scan_done--*/
void nl80211_send_scan_aborted ( struct cfg80211_registered_device * rdev , struct net_device * netdev ) ; 
/*--nl80211_send_scan_aborted--*/
void nl80211_send_reg_change_event ( struct regulatory_request * request ) ; 
/*--nl80211_send_reg_change_event--*/
void nl80211_send_rx_auth ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * buf , size_t len , gfp_t gfp ) ; 
/*--nl80211_send_rx_auth--*/
void nl80211_send_rx_assoc ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * buf , size_t len , gfp_t gfp ) ; 
/*--nl80211_send_rx_assoc--*/
void nl80211_send_deauth ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * buf , size_t len , gfp_t gfp ) ; 
/*--nl80211_send_deauth--*/
void nl80211_send_disassoc ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * buf , size_t len , gfp_t gfp ) ; 
/*--nl80211_send_disassoc--*/
void nl80211_send_auth_timeout ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * addr , gfp_t gfp ) ; 
/*--nl80211_send_auth_timeout--*/
void nl80211_send_assoc_timeout ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * addr , gfp_t gfp ) ; 
/*--nl80211_send_assoc_timeout--*/
void nl80211_send_connect_result ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * bssid , const u8 * req_ie , size_t req_ie_len , const u8 * resp_ie , size_t resp_ie_len , u16 status , gfp_t gfp ) ; 
/*--nl80211_send_connect_result--*/
void nl80211_send_roamed ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * bssid , const u8 * req_ie , size_t req_ie_len , const u8 * resp_ie , size_t resp_ie_len , gfp_t gfp ) ; 
/*--nl80211_send_roamed--*/
void nl80211_send_disconnected ( struct cfg80211_registered_device * rdev , struct net_device * netdev , u16 reason , const u8 * ie , size_t ie_len , bool from_ap ) ; 
/*--nl80211_send_disconnected--*/
void nl80211_send_ibss_bssid ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * bssid , gfp_t gfp ) ; 
/*--nl80211_send_ibss_bssid--*/
void nl80211_michael_mic_failure ( struct cfg80211_registered_device * rdev , struct net_device * netdev , const u8 * addr , enum nl80211_key_type key_type , int key_id , const u8 * tsc , gfp_t gfp ) ; 
/*--nl80211_michael_mic_failure--*/
void nl80211_send_beacon_hint_event ( struct wiphy * wiphy , struct ieee80211_channel * channel_before , struct ieee80211_channel * channel_after ) ; 
/*--nl80211_send_beacon_hint_event--*/
void nl80211_send_remain_on_channel ( struct cfg80211_registered_device * rdev , struct net_device * netdev , u64 cookie , struct ieee80211_channel * chan , enum nl80211_channel_type channel_type , unsigned int duration , gfp_t gfp ) ; 
/*--nl80211_send_remain_on_channel--*/
void nl80211_send_remain_on_channel_cancel ( struct cfg80211_registered_device * rdev , struct net_device * netdev , u64 cookie , struct ieee80211_channel * chan , enum nl80211_channel_type channel_type , gfp_t gfp ) ; 
/*--nl80211_send_remain_on_channel_cancel--*/
void nl80211_send_sta_event ( struct cfg80211_registered_device * rdev , struct net_device * dev , const u8 * mac_addr , struct station_info * sinfo , gfp_t gfp ) ; 
/*--nl80211_send_sta_event--*/
int nl80211_send_action ( struct cfg80211_registered_device * rdev , struct net_device * netdev , u32 nlpid , int freq , const u8 * buf , size_t len , gfp_t gfp ) ; 
/*--nl80211_send_action--*/
void nl80211_send_action_tx_status ( struct cfg80211_registered_device * rdev , struct net_device * netdev , u64 cookie , const u8 * buf , size_t len , bool ack , gfp_t gfp ) ; 
/*--nl80211_send_action_tx_status--*/
void nl80211_send_cqm_rssi_notify ( struct cfg80211_registered_device * rdev , struct net_device * netdev , enum nl80211_cqm_rssi_threshold_event rssi_event , gfp_t gfp ) ; 
/*--nl80211_send_cqm_rssi_notify--*/
int nl80211_init ( void ) ; 
/*--nl80211_init--*/
void nl80211_exit ( void ) ; 
/*--nl80211_exit--*/
void cfg80211_send_rx_auth ( struct net_device * dev , const u8 * buf , size_t len ) ; 
/*--cfg80211_send_rx_auth--*/
void cfg80211_send_rx_assoc ( struct net_device * dev , const u8 * buf , size_t len ) ; 
/*--cfg80211_send_rx_assoc--*/
void __cfg80211_send_deauth ( struct net_device * dev , const u8 * buf , size_t len ) ; 
/*--__cfg80211_send_deauth--*/
void cfg80211_send_deauth ( struct net_device * dev , const u8 * buf , size_t len ) ; 
/*--cfg80211_send_deauth--*/
void __cfg80211_send_disassoc ( struct net_device * dev , const u8 * buf , size_t len ) ; 
/*--__cfg80211_send_disassoc--*/
void cfg80211_send_disassoc ( struct net_device * dev , const u8 * buf , size_t len ) ; 
/*--cfg80211_send_disassoc--*/
void __cfg80211_auth_canceled ( struct net_device * dev , const u8 * addr ) ; 
/*--__cfg80211_auth_canceled--*/
void cfg80211_send_auth_timeout ( struct net_device * dev , const u8 * addr ) ; 
/*--cfg80211_send_auth_timeout--*/
void cfg80211_send_assoc_timeout ( struct net_device * dev , const u8 * addr ) ; 
/*--cfg80211_send_assoc_timeout--*/
void cfg80211_michael_mic_failure ( struct net_device * dev , const u8 * addr , enum nl80211_key_type key_type , int key_id , const u8 * tsc , gfp_t gfp ) ; 
/*--cfg80211_michael_mic_failure--*/
int __cfg80211_mlme_auth ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct ieee80211_channel * chan , enum nl80211_auth_type auth_type , const u8 * bssid , const u8 * ssid , int ssid_len , const u8 * ie , int ie_len , const u8 * key , int key_len , int key_idx , bool local_state_change ) ; 
/*--__cfg80211_mlme_auth--*/
int cfg80211_mlme_auth ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct ieee80211_channel * chan , enum nl80211_auth_type auth_type , const u8 * bssid , const u8 * ssid , int ssid_len , const u8 * ie , int ie_len , const u8 * key , int key_len , int key_idx , bool local_state_change ) ; 
/*--cfg80211_mlme_auth--*/
int __cfg80211_mlme_assoc ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct ieee80211_channel * chan , const u8 * bssid , const u8 * prev_bssid , const u8 * ssid , int ssid_len , const u8 * ie , int ie_len , bool use_mfp , struct cfg80211_crypto_settings * crypt ) ; 
/*--__cfg80211_mlme_assoc--*/
int cfg80211_mlme_assoc ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct ieee80211_channel * chan , const u8 * bssid , const u8 * prev_bssid , const u8 * ssid , int ssid_len , const u8 * ie , int ie_len , bool use_mfp , struct cfg80211_crypto_settings * crypt ) ; 
/*--cfg80211_mlme_assoc--*/
int __cfg80211_mlme_deauth ( struct cfg80211_registered_device * rdev , struct net_device * dev , const u8 * bssid , const u8 * ie , int ie_len , u16 reason , bool local_state_change ) ; 
/*--__cfg80211_mlme_deauth--*/
int cfg80211_mlme_deauth ( struct cfg80211_registered_device * rdev , struct net_device * dev , const u8 * bssid , const u8 * ie , int ie_len , u16 reason , bool local_state_change ) ; 
/*--cfg80211_mlme_deauth--*/
int cfg80211_mlme_disassoc ( struct cfg80211_registered_device * rdev , struct net_device * dev , const u8 * bssid , const u8 * ie , int ie_len , u16 reason , bool local_state_change ) ; 
/*--cfg80211_mlme_disassoc--*/
void cfg80211_mlme_down ( struct cfg80211_registered_device * rdev , struct net_device * dev ) ; 
/*--cfg80211_mlme_down--*/
void cfg80211_ready_on_channel ( struct net_device * dev , u64 cookie , struct ieee80211_channel * chan , enum nl80211_channel_type channel_type , unsigned int duration , gfp_t gfp ) ; 
/*--cfg80211_ready_on_channel--*/
void cfg80211_remain_on_channel_expired ( struct net_device * dev , u64 cookie , struct ieee80211_channel * chan , enum nl80211_channel_type channel_type , gfp_t gfp ) ; 
/*--cfg80211_remain_on_channel_expired--*/
void cfg80211_new_sta ( struct net_device * dev , const u8 * mac_addr , struct station_info * sinfo , gfp_t gfp ) ; 
/*--cfg80211_new_sta--*/
int cfg80211_mlme_register_action ( struct wireless_dev * wdev , u32 snd_pid , const u8 * match_data , int match_len ) ; 
/*--cfg80211_mlme_register_action--*/
void cfg80211_mlme_unregister_actions ( struct wireless_dev * wdev , u32 nlpid ) ; 
/*--cfg80211_mlme_unregister_actions--*/
void cfg80211_mlme_purge_actions ( struct wireless_dev * wdev ) ; 
/*--cfg80211_mlme_purge_actions--*/
int cfg80211_mlme_action ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct ieee80211_channel * chan , enum nl80211_channel_type channel_type , const u8 * buf , size_t len , u64 * cookie ) ; 
/*--cfg80211_mlme_action--*/
bool cfg80211_rx_action ( struct net_device * dev , int freq , const u8 * buf , size_t len , gfp_t gfp ) ; 
/*--cfg80211_rx_action--*/
void cfg80211_action_tx_status ( struct net_device * dev , u64 cookie , const u8 * buf , size_t len , bool ack , gfp_t gfp ) ; 
/*--cfg80211_action_tx_status--*/
void cfg80211_cqm_rssi_notify ( struct net_device * dev , enum nl80211_cqm_rssi_threshold_event rssi_event , gfp_t gfp ) ; 
/*--cfg80211_cqm_rssi_notify--*/
void __cfg80211_ibss_joined ( struct net_device * dev , const u8 * bssid ) ; 
/*--__cfg80211_ibss_joined--*/
void cfg80211_ibss_joined ( struct net_device * dev , const u8 * bssid , gfp_t gfp ) ; 
/*--cfg80211_ibss_joined--*/
int __cfg80211_join_ibss ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct cfg80211_ibss_params * params , struct cfg80211_cached_keys * connkeys ) ; 
/*--__cfg80211_join_ibss--*/
int cfg80211_join_ibss ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct cfg80211_ibss_params * params , struct cfg80211_cached_keys * connkeys ) ; 
/*--cfg80211_join_ibss--*/
void cfg80211_clear_ibss ( struct net_device * dev , bool nowext ) ; 
/*--cfg80211_clear_ibss--*/
int __cfg80211_leave_ibss ( struct cfg80211_registered_device * rdev , struct net_device * dev , bool nowext ) ; 
/*--__cfg80211_leave_ibss--*/
int cfg80211_leave_ibss ( struct cfg80211_registered_device * rdev , struct net_device * dev , bool nowext ) ; 
/*--cfg80211_leave_ibss--*/
int cfg80211_ibss_wext_join ( struct cfg80211_registered_device * rdev , struct wireless_dev * wdev ) ; 
/*--cfg80211_ibss_wext_join--*/
int cfg80211_ibss_wext_siwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * wextfreq , char * extra ) ; 
/*--cfg80211_ibss_wext_siwfreq--*/
int cfg80211_ibss_wext_giwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * freq , char * extra ) ; 
/*--cfg80211_ibss_wext_giwfreq--*/
int cfg80211_ibss_wext_siwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * ssid ) ; 
/*--cfg80211_ibss_wext_siwessid--*/
int cfg80211_ibss_wext_giwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * ssid ) ; 
/*--cfg80211_ibss_wext_giwessid--*/
int cfg80211_ibss_wext_siwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * ap_addr , char * extra ) ; 
/*--cfg80211_ibss_wext_siwap--*/
int cfg80211_ibss_wext_giwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * ap_addr , char * extra ) ; 
/*--cfg80211_ibss_wext_giwap--*/
bool cfg80211_is_all_idle ( void ) ; 
/*--cfg80211_is_all_idle--*/
void cfg80211_conn_work ( struct work_struct * work ) ; 
/*--cfg80211_conn_work--*/
void cfg80211_sme_scan_done ( struct net_device * dev ) ; 
/*--cfg80211_sme_scan_done--*/
void cfg80211_sme_rx_auth ( struct net_device * dev , const u8 * buf , size_t len ) ; 
/*--cfg80211_sme_rx_auth--*/
bool cfg80211_sme_failed_reassoc ( struct wireless_dev * wdev ) ; 
/*--cfg80211_sme_failed_reassoc--*/
void cfg80211_sme_failed_assoc ( struct wireless_dev * wdev ) ; 
/*--cfg80211_sme_failed_assoc--*/
void __cfg80211_connect_result ( struct net_device * dev , const u8 * bssid , const u8 * req_ie , size_t req_ie_len , const u8 * resp_ie , size_t resp_ie_len , u16 status , bool wextev , struct cfg80211_bss * bss ) ; 
/*--__cfg80211_connect_result--*/
void cfg80211_connect_result ( struct net_device * dev , const u8 * bssid , const u8 * req_ie , size_t req_ie_len , const u8 * resp_ie , size_t resp_ie_len , u16 status , gfp_t gfp ) ; 
/*--cfg80211_connect_result--*/
void __cfg80211_roamed ( struct wireless_dev * wdev , const u8 * bssid , const u8 * req_ie , size_t req_ie_len , const u8 * resp_ie , size_t resp_ie_len ) ; 
/*--__cfg80211_roamed--*/
void cfg80211_roamed ( struct net_device * dev , const u8 * bssid , const u8 * req_ie , size_t req_ie_len , const u8 * resp_ie , size_t resp_ie_len , gfp_t gfp ) ; 
/*--cfg80211_roamed--*/
void __cfg80211_disconnected ( struct net_device * dev , const u8 * ie , size_t ie_len , u16 reason , bool from_ap ) ; 
/*--__cfg80211_disconnected--*/
void cfg80211_disconnected ( struct net_device * dev , u16 reason , u8 * ie , size_t ie_len , gfp_t gfp ) ; 
/*--cfg80211_disconnected--*/
int __cfg80211_connect ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct cfg80211_connect_params * connect , struct cfg80211_cached_keys * connkeys , const u8 * prev_bssid ) ; 
/*--__cfg80211_connect--*/
int cfg80211_connect ( struct cfg80211_registered_device * rdev , struct net_device * dev , struct cfg80211_connect_params * connect , struct cfg80211_cached_keys * connkeys ) ; 
/*--cfg80211_connect--*/
int __cfg80211_disconnect ( struct cfg80211_registered_device * rdev , struct net_device * dev , u16 reason , bool wextev ) ; 
/*--__cfg80211_disconnect--*/
int cfg80211_disconnect ( struct cfg80211_registered_device * rdev , struct net_device * dev , u16 reason , bool wextev ) ; 
/*--cfg80211_disconnect--*/
void cfg80211_sme_disassoc ( struct net_device * dev , int idx ) ; 
/*--cfg80211_sme_disassoc--*/
struct ieee80211_channel * rdev_freq_to_chan ( struct cfg80211_registered_device * rdev , int freq , enum nl80211_channel_type channel_type ) ; 
/*--rdev_freq_to_chan--*/
int cfg80211_set_freq ( struct cfg80211_registered_device * rdev , struct wireless_dev * wdev , int freq , enum nl80211_channel_type channel_type ) ; 
/*--cfg80211_set_freq--*/
void cfg80211_debugfs_rdev_add ( struct cfg80211_registered_device * rdev ) ; 
/*--cfg80211_debugfs_rdev_add--*/
int cfg80211_wext_giwname ( struct net_device * dev , struct iw_request_info * info , char * name , char * extra ) ; 
/*--cfg80211_wext_giwname--*/
int cfg80211_wext_siwmode ( struct net_device * dev , struct iw_request_info * info , u32 * mode , char * extra ) ; 
/*--cfg80211_wext_siwmode--*/
int cfg80211_wext_giwmode ( struct net_device * dev , struct iw_request_info * info , u32 * mode , char * extra ) ; 
/*--cfg80211_wext_giwmode--*/
int cfg80211_wext_giwrange ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--cfg80211_wext_giwrange--*/
int cfg80211_wext_freq ( struct wiphy * wiphy , struct iw_freq * freq ) ; 
/*--cfg80211_wext_freq--*/
int cfg80211_wext_siwrts ( struct net_device * dev , struct iw_request_info * info , struct iw_param * rts , char * extra ) ; 
/*--cfg80211_wext_siwrts--*/
int cfg80211_wext_giwrts ( struct net_device * dev , struct iw_request_info * info , struct iw_param * rts , char * extra ) ; 
/*--cfg80211_wext_giwrts--*/
int cfg80211_wext_siwfrag ( struct net_device * dev , struct iw_request_info * info , struct iw_param * frag , char * extra ) ; 
/*--cfg80211_wext_siwfrag--*/
int cfg80211_wext_giwfrag ( struct net_device * dev , struct iw_request_info * info , struct iw_param * frag , char * extra ) ; 
/*--cfg80211_wext_giwfrag--*/
int cfg80211_wext_siwretry ( struct net_device * dev , struct iw_request_info * info , struct iw_param * retry , char * extra ) ; 
/*--cfg80211_wext_siwretry--*/
int cfg80211_wext_giwretry ( struct net_device * dev , struct iw_request_info * info , struct iw_param * retry , char * extra ) ; 
/*--cfg80211_wext_giwretry--*/
int cfg80211_wext_siwencode ( struct net_device * dev , struct iw_request_info * info , struct iw_point * erq , char * keybuf ) ; 
/*--cfg80211_wext_siwencode--*/
int cfg80211_wext_siwencodeext ( struct net_device * dev , struct iw_request_info * info , struct iw_point * erq , char * extra ) ; 
/*--cfg80211_wext_siwencodeext--*/
int cfg80211_wext_giwencode ( struct net_device * dev , struct iw_request_info * info , struct iw_point * erq , char * keybuf ) ; 
/*--cfg80211_wext_giwencode--*/
int cfg80211_wext_siwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * wextfreq , char * extra ) ; 
/*--cfg80211_wext_siwfreq--*/
int cfg80211_wext_giwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * freq , char * extra ) ; 
/*--cfg80211_wext_giwfreq--*/
int cfg80211_wext_siwtxpower ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * data , char * extra ) ; 
/*--cfg80211_wext_siwtxpower--*/
int cfg80211_wext_giwtxpower ( struct net_device * dev , struct iw_request_info * info , union iwreq_data * data , char * extra ) ; 
/*--cfg80211_wext_giwtxpower--*/
int cfg80211_wext_siwauth ( struct net_device * dev , struct iw_request_info * info , struct iw_param * data , char * extra ) ; 
/*--cfg80211_wext_siwauth--*/
int cfg80211_wext_giwauth ( struct net_device * dev , struct iw_request_info * info , struct iw_param * data , char * extra ) ; 
/*--cfg80211_wext_giwauth--*/
int cfg80211_wext_siwpower ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--cfg80211_wext_siwpower--*/
int cfg80211_wext_giwpower ( struct net_device * dev , struct iw_request_info * info , struct iw_param * wrq , char * extra ) ; 
/*--cfg80211_wext_giwpower--*/
int cfg80211_wext_siwrate ( struct net_device * dev , struct iw_request_info * info , struct iw_param * rate , char * extra ) ; 
/*--cfg80211_wext_siwrate--*/
int cfg80211_wext_giwrate ( struct net_device * dev , struct iw_request_info * info , struct iw_param * rate , char * extra ) ; 
/*--cfg80211_wext_giwrate--*/
struct iw_statistics * cfg80211_wireless_stats ( struct net_device * dev ) ; 
/*--cfg80211_wireless_stats--*/
int cfg80211_wext_siwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * ap_addr , char * extra ) ; 
/*--cfg80211_wext_siwap--*/
int cfg80211_wext_giwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * ap_addr , char * extra ) ; 
/*--cfg80211_wext_giwap--*/
int cfg80211_wext_siwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * ssid ) ; 
/*--cfg80211_wext_siwessid--*/
int cfg80211_wext_giwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * ssid ) ; 
/*--cfg80211_wext_giwessid--*/
int cfg80211_wext_siwpmksa ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--cfg80211_wext_siwpmksa--*/
int cfg80211_mgd_wext_connect ( struct cfg80211_registered_device * rdev , struct wireless_dev * wdev ) ; 
/*--cfg80211_mgd_wext_connect--*/
int cfg80211_mgd_wext_siwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * wextfreq , char * extra ) ; 
/*--cfg80211_mgd_wext_siwfreq--*/
int cfg80211_mgd_wext_giwfreq ( struct net_device * dev , struct iw_request_info * info , struct iw_freq * freq , char * extra ) ; 
/*--cfg80211_mgd_wext_giwfreq--*/
int cfg80211_mgd_wext_siwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * ssid ) ; 
/*--cfg80211_mgd_wext_siwessid--*/
int cfg80211_mgd_wext_giwessid ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * ssid ) ; 
/*--cfg80211_mgd_wext_giwessid--*/
int cfg80211_mgd_wext_siwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * ap_addr , char * extra ) ; 
/*--cfg80211_mgd_wext_siwap--*/
int cfg80211_mgd_wext_giwap ( struct net_device * dev , struct iw_request_info * info , struct sockaddr * ap_addr , char * extra ) ; 
/*--cfg80211_mgd_wext_giwap--*/
int cfg80211_wext_siwgenie ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--cfg80211_wext_siwgenie--*/
int cfg80211_wext_siwmlme ( struct net_device * dev , struct iw_request_info * info , struct iw_point * data , char * extra ) ; 
/*--cfg80211_wext_siwmlme--*/
const char * print_ssid ( char * buf , const char * ssid , u8 ssid_len ) ; 
/*--print_ssid--*/
int lib80211_crypt_info_init ( struct lib80211_crypt_info * info , char * name , spinlock_t * lock ) ; 
/*--lib80211_crypt_info_init--*/
void lib80211_crypt_info_free ( struct lib80211_crypt_info * info ) ; 
/*--lib80211_crypt_info_free--*/
void lib80211_crypt_deinit_entries ( struct lib80211_crypt_info * info , int force ) ; 
/*--lib80211_crypt_deinit_entries--*/
void lib80211_crypt_quiescing ( struct lib80211_crypt_info * info ) ; 
/*--lib80211_crypt_quiescing--*/
void lib80211_crypt_deinit_handler ( unsigned long data ) ; 
/*--lib80211_crypt_deinit_handler--*/
void lib80211_crypt_delayed_deinit ( struct lib80211_crypt_info * info , struct lib80211_crypt_data * * crypt ) ; 
/*--lib80211_crypt_delayed_deinit--*/
int lib80211_register_crypto_ops ( struct lib80211_crypto_ops * ops ) ; 
/*--lib80211_register_crypto_ops--*/
int lib80211_unregister_crypto_ops ( struct lib80211_crypto_ops * ops ) ; 
/*--lib80211_unregister_crypto_ops--*/
struct lib80211_crypto_ops * lib80211_get_crypto_ops ( const char * name ) ; 
/*--lib80211_get_crypto_ops--*/
int x25_parse_address_block ( struct sk_buff * skb , struct x25_address * called_addr , struct x25_address * calling_addr ) ; 
/*--x25_parse_address_block--*/
int x25_addr_ntoa ( unsigned char * p , struct x25_address * called_addr , struct x25_address * calling_addr ) ; 
/*--x25_addr_ntoa--*/
int x25_addr_aton ( unsigned char * p , struct x25_address * called_addr , struct x25_address * calling_addr ) ; 
/*--x25_addr_aton--*/
struct sock * x25_find_socket ( unsigned int lci , struct x25_neigh * nb ) ; 
/*--x25_find_socket--*/
void x25_destroy_socket_from_timer ( struct sock * sk ) ; 
/*--x25_destroy_socket_from_timer--*/
int x25_rx_call_request ( struct sk_buff * skb , struct x25_neigh * nb , unsigned int lci ) ; 
/*--x25_rx_call_request--*/
void x25_kill_by_neigh ( struct x25_neigh * nb ) ; 
/*--x25_kill_by_neigh--*/
int x25_lapb_receive_frame ( struct sk_buff * skb , struct net_device * dev , struct packet_type * ptype , struct net_device * orig_dev ) ; 
/*--x25_lapb_receive_frame--*/
void x25_establish_link ( struct x25_neigh * nb ) ; 
/*--x25_establish_link--*/
void x25_terminate_link ( struct x25_neigh * nb ) ; 
/*--x25_terminate_link--*/
void x25_send_frame ( struct sk_buff * skb , struct x25_neigh * nb ) ; 
/*--x25_send_frame--*/
int x25_parse_facilities ( struct sk_buff * skb , struct x25_facilities * facilities , struct x25_dte_facilities * dte_facs , unsigned long * vc_fac_mask ) ; 
/*--x25_parse_facilities--*/
int x25_create_facilities ( unsigned char * buffer , struct x25_facilities * facilities , struct x25_dte_facilities * dte_facs , unsigned long facil_mask ) ; 
/*--x25_create_facilities--*/
int x25_negotiate_facilities ( struct sk_buff * skb , struct sock * sk , struct x25_facilities * new , struct x25_dte_facilities * dte ) ; 
/*--x25_negotiate_facilities--*/
void x25_limit_facilities ( struct x25_facilities * facilities , struct x25_neigh * nb ) ; 
/*--x25_limit_facilities--*/
int x25_process_rx_frame ( struct sock * sk , struct sk_buff * skb ) ; 
/*--x25_process_rx_frame--*/
int x25_backlog_rcv ( struct sock * sk , struct sk_buff * skb ) ; 
/*--x25_backlog_rcv--*/
void x25_link_control ( struct sk_buff * skb , struct x25_neigh * nb , unsigned short frametype ) ; 
/*--x25_link_control--*/
void x25_transmit_clear_request ( struct x25_neigh * nb , unsigned int lci , unsigned char cause ) ; 
/*--x25_transmit_clear_request--*/
void x25_transmit_link ( struct sk_buff * skb , struct x25_neigh * nb ) ; 
/*--x25_transmit_link--*/
void x25_link_established ( struct x25_neigh * nb ) ; 
/*--x25_link_established--*/
void x25_link_terminated ( struct x25_neigh * nb ) ; 
/*--x25_link_terminated--*/
void x25_link_device_up ( struct net_device * dev ) ; 
/*--x25_link_device_up--*/
void x25_link_device_down ( struct net_device * dev ) ; 
/*--x25_link_device_down--*/
struct x25_neigh * x25_get_neigh ( struct net_device * dev ) ; 
/*--x25_get_neigh--*/
int x25_subscr_ioctl ( unsigned int cmd , void * arg ) ; 
/*--x25_subscr_ioctl--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) x25_link_free ( void ) ; 
/*--x25_link_free--*/
int x25_output ( struct sock * sk , struct sk_buff * skb ) ; 
/*--x25_output--*/
void x25_kick ( struct sock * sk ) ; 
/*--x25_kick--*/
void x25_enquiry_response ( struct sock * sk ) ; 
/*--x25_enquiry_response--*/
void x25_route_device_down ( struct net_device * dev ) ; 
/*--x25_route_device_down--*/
struct net_device * x25_dev_get ( char * devname ) ; 
/*--x25_dev_get--*/
struct x25_route * x25_get_route ( struct x25_address * addr ) ; 
/*--x25_get_route--*/
int x25_route_ioctl ( unsigned int cmd , void * arg ) ; 
/*--x25_route_ioctl--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) x25_route_free ( void ) ; 
/*--x25_route_free--*/
void x25_clear_queues ( struct sock * sk ) ; 
/*--x25_clear_queues--*/
void x25_frames_acked ( struct sock * sk , unsigned short nr ) ; 
/*--x25_frames_acked--*/
void x25_requeue_frames ( struct sock * sk ) ; 
/*--x25_requeue_frames--*/
int x25_validate_nr ( struct sock * sk , unsigned short nr ) ; 
/*--x25_validate_nr--*/
void x25_write_internal ( struct sock * sk , int frametype ) ; 
/*--x25_write_internal--*/
int x25_decode ( struct sock * sk , struct sk_buff * skb , int * ns , int * nr , int * q , int * d , int * m ) ; 
/*--x25_decode--*/
void x25_disconnect ( struct sock * sk , int reason , unsigned char cause , unsigned char diagnostic ) ; 
/*--x25_disconnect--*/
void x25_check_rbuf ( struct sock * sk ) ; 
/*--x25_check_rbuf--*/
void x25_init_timers ( struct sock * sk ) ; 
/*--x25_init_timers--*/
void x25_start_heartbeat ( struct sock * sk ) ; 
/*--x25_start_heartbeat--*/
void x25_stop_heartbeat ( struct sock * sk ) ; 
/*--x25_stop_heartbeat--*/
void x25_start_t2timer ( struct sock * sk ) ; 
/*--x25_start_t2timer--*/
void x25_start_t21timer ( struct sock * sk ) ; 
/*--x25_start_t21timer--*/
void x25_start_t22timer ( struct sock * sk ) ; 
/*--x25_start_t22timer--*/
void x25_start_t23timer ( struct sock * sk ) ; 
/*--x25_start_t23timer--*/
void x25_stop_timer ( struct sock * sk ) ; 
/*--x25_stop_timer--*/
unsigned long x25_display_timer ( struct sock * sk ) ; 
/*--x25_display_timer--*/
int __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) x25_proc_init ( void ) ; 
/*--x25_proc_init--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) x25_proc_exit ( void ) ; 
/*--x25_proc_exit--*/
int x25_forward_call ( struct x25_address * dest_addr , struct x25_neigh * from , struct sk_buff * skb , int lci ) ; 
/*--x25_forward_call--*/
int x25_forward_data ( int lci , struct x25_neigh * from , struct sk_buff * skb ) ; 
/*--x25_forward_data--*/
void x25_clear_forward_by_lci ( unsigned int lci ) ; 
/*--x25_clear_forward_by_lci--*/
void x25_clear_forward_by_dev ( struct net_device * dev ) ; 
/*--x25_clear_forward_by_dev--*/
void __attribute__ ( ( __section__ (  ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) x25_register_sysctl ( void ) ; 
/*--x25_register_sysctl--*/
void x25_unregister_sysctl ( void ) ; 
/*--x25_unregister_sysctl--*/
int ipcomp_input ( struct xfrm_state * x , struct sk_buff * skb ) ; 
/*--ipcomp_input--*/
int ipcomp_output ( struct xfrm_state * x , struct sk_buff * skb ) ; 
/*--ipcomp_output--*/
void ipcomp_destroy ( struct xfrm_state * x ) ; 
/*--ipcomp_destroy--*/
int ipcomp_init_state ( struct xfrm_state * x ) ; 
/*--ipcomp_init_state--*/
int lzo1x_1_compress ( const unsigned char * in , size_t in_len , unsigned char * out , size_t * out_len , void * wrkmem ) ; 
/*--lzo1x_1_compress--*/
void free_rs ( struct rs_control * rs ) ; 
/*--free_rs--*/
struct rs_control * init_rs ( int symsize , int gfpoly , int fcr , int prim , int nroots ) ; 
/*--init_rs--*/
struct rs_control * init_rs_non_canonical ( int symsize , int ( * gffunc ) ( int ) , int fcr , int prim , int nroots ) ; 
/*--init_rs_non_canonical--*/
int decode_rs16 ( struct rs_control * rs , uint16_t * data , uint16_t * par , int len , uint16_t * s , int no_eras , int * eras_pos , uint16_t invmsk , uint16_t * corr ) ; 
/*--decode_rs16--*/
int zlib_deflateInit2 ( z_streamp strm , int level , int method , int windowBits , int memLevel , int strategy ) ; 
/*--zlib_deflateInit2--*/
int zlib_deflateReset ( z_streamp strm ) ; 
/*--zlib_deflateReset--*/
int zlib_deflate ( z_streamp strm , int flush ) ; 
/*--zlib_deflate--*/
int zlib_deflateEnd ( z_streamp strm ) ; 
/*--zlib_deflateEnd--*/
int zlib_deflate_workspacesize ( void ) ; 
/*--zlib_deflate_workspacesize--*/
void zlib_tr_init ( deflate_state * s ) ; 
/*--zlib_tr_init--*/
void zlib_tr_stored_block ( deflate_state * s , char * buf , ulg stored_len , int eof ) ; 
/*--zlib_tr_stored_block--*/
void zlib_tr_stored_type_only ( deflate_state * s ) ; 
/*--zlib_tr_stored_type_only--*/
void zlib_tr_align ( deflate_state * s ) ; 
/*--zlib_tr_align--*/
ulg zlib_tr_flush_block ( deflate_state * s , char * buf , ulg stored_len , int eof ) ; 
/*--zlib_tr_flush_block--*/
int zlib_tr_tally ( deflate_state * s , unsigned dist , unsigned lc ) ; 
/*--zlib_tr_tally--*/
u16 crc_ccitt ( u16 crc , u8 const * buffer , size_t len ) ; 
/*--crc_ccitt--*/
u16 crc_itu_t ( u16 crc , const u8 * buffer , size_t len ) ; 
/*--crc_itu_t--*/
u8 crc7 ( u8 crc , const u8 * buffer , size_t len ) ; 
/*--crc7--*/
u32 crc32c ( u32 crc , const void * address , unsigned int length ) ; 
/*--crc32c--*/
int main ( void ) ; 
