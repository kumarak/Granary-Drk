/*
 * cfi_instrument.c
 *
 *  Created on: 2012-04-08
 *      Author: akshayk
 */


#include <stddef.h>

#include "cfi_module.h"
#include "cfi_wrapper.h"
#include "kernel_linux/clients/dcontext_extend.h"


/**
 * Called when the instrumented module returns to the kernel function that called
 * it.
 */
static void handle_module_exit_function_return(void *drcontext) {
    (void) drcontext;
}

/**
 * Initialize the CFI extension structure to the dcontext.
 */
static void cfi_init_dcontext(void *extension) {
    struct cfi_client_extension *cfi = (struct cfi_client_extension *) extension;

    memset(cfi, 0, sizeof *cfi);
    cfi->iret_handler = dr_app_start_after_iret;
}

struct dcontext;
extern void cfi_exit_direct_call(void);
extern void *cfi_get_untracked_address(void *);
extern void cfi_return_to_module_from_kernel(void);
extern void cfi_release_module(void);
extern void cfi_exit_return_to_kernel(void);

void drinit_dcontext(unsigned int thread_id) {
    dr_init_client_extension(cfi_init_dcontext, DR_EXTENSION(cfi));
    dr_register_kernel_wrapper(cfi_get_kernel_wrapper);
    dr_register_direct_call_exit(cfi_exit_direct_call);
    dr_register_address_untracker(cfi_get_untracked_address);
    dr_register_address_return_exit(cfi_exit_return_to_kernel);
    dr_register_return_path_address(cfi_return_to_module_from_kernel);
    dr_register_exit_module_context(cfi_release_module);
}


/**
 * Initialize the CFI extension.
 */
void
drinit(client_id_t id)
{
    printk("drinit cfi %d\n", id);
//    dr_init_client_extension(cfi_init_dcontext, DR_EXTENSION(cfi));
    dr_register_module_exit(handle_module_exit_function_return, MODULE_EXIT_RETURN);
}
